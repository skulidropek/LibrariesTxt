[XmlIncludeAttribute("Intuit.Ipp.Data.MasterAccount")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Account : IntuitEntity {
    private string nameField;
    private bool subAccountField;
    private bool subAccountFieldSpecified;
    private ReferenceType parentRefField;
    private string descriptionField;
    private string fullyQualifiedNameField;
    private string accountAliasField;
    private string txnLocationTypeField;
    private bool activeField;
    private bool activeFieldSpecified;
    private AccountClassificationEnum classificationField;
    private bool classificationFieldSpecified;
    private AccountTypeEnum accountTypeField;
    private bool accountTypeFieldSpecified;
    private string accountSubTypeField;
    private ReferenceType[] accountPurposesField;
    private string acctNumField;
    private string acctNumExtnField;
    private string bankNumField;
    private decimal openingBalanceField;
    private bool openingBalanceFieldSpecified;
    private DateTime openingBalanceDateField;
    private bool openingBalanceDateFieldSpecified;
    private decimal currentBalanceField;
    private bool currentBalanceFieldSpecified;
    private decimal currentBalanceWithSubAccountsField;
    private bool currentBalanceWithSubAccountsFieldSpecified;
    private ReferenceType currencyRefField;
    private bool taxAccountField;
    private bool taxAccountFieldSpecified;
    private ReferenceType taxCodeRefField;
    private bool onlineBankingEnabledField;
    private bool onlineBankingEnabledFieldSpecified;
    private string fINameField;
    private ReferenceType journalCodeRefField;
    private IntuitAnyType accountExField;
    public string Name { get; public set; }
    public bool SubAccount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SubAccountSpecified { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public string Description { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public string AccountAlias { get; public set; }
    public string TxnLocationType { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public AccountClassificationEnum Classification { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ClassificationSpecified { get; public set; }
    public AccountTypeEnum AccountType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AccountTypeSpecified { get; public set; }
    public string AccountSubType { get; public set; }
    [XmlElementAttribute("AccountPurposes")]
public ReferenceType[] AccountPurposes { get; public set; }
    public string AcctNum { get; public set; }
    public string AcctNumExtn { get; public set; }
    public string BankNum { get; public set; }
    public decimal OpeningBalance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OpeningBalanceSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime OpeningBalanceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OpeningBalanceDateSpecified { get; public set; }
    public decimal CurrentBalance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CurrentBalanceSpecified { get; public set; }
    public decimal CurrentBalanceWithSubAccounts { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CurrentBalanceWithSubAccountsSpecified { get; public set; }
    public ReferenceType CurrencyRef { get; public set; }
    public bool TaxAccount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxAccountSpecified { get; public set; }
    public ReferenceType TaxCodeRef { get; public set; }
    public bool OnlineBankingEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OnlineBankingEnabledSpecified { get; public set; }
    public string FIName { get; public set; }
    public ReferenceType JournalCodeRef { get; public set; }
    public IntuitAnyType AccountEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_SubAccount();
    public void set_SubAccount(bool value);
    public bool get_SubAccountSpecified();
    public void set_SubAccountSpecified(bool value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public string get_Description();
    public void set_Description(string value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public string get_AccountAlias();
    public void set_AccountAlias(string value);
    public string get_TxnLocationType();
    public void set_TxnLocationType(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public AccountClassificationEnum get_Classification();
    public void set_Classification(AccountClassificationEnum value);
    public bool get_ClassificationSpecified();
    public void set_ClassificationSpecified(bool value);
    public AccountTypeEnum get_AccountType();
    public void set_AccountType(AccountTypeEnum value);
    public bool get_AccountTypeSpecified();
    public void set_AccountTypeSpecified(bool value);
    public string get_AccountSubType();
    public void set_AccountSubType(string value);
    public ReferenceType[] get_AccountPurposes();
    public void set_AccountPurposes(ReferenceType[] value);
    public string get_AcctNum();
    public void set_AcctNum(string value);
    public string get_AcctNumExtn();
    public void set_AcctNumExtn(string value);
    public string get_BankNum();
    public void set_BankNum(string value);
    public decimal get_OpeningBalance();
    public void set_OpeningBalance(decimal value);
    public bool get_OpeningBalanceSpecified();
    public void set_OpeningBalanceSpecified(bool value);
    public DateTime get_OpeningBalanceDate();
    public void set_OpeningBalanceDate(DateTime value);
    public bool get_OpeningBalanceDateSpecified();
    public void set_OpeningBalanceDateSpecified(bool value);
    public decimal get_CurrentBalance();
    public void set_CurrentBalance(decimal value);
    public bool get_CurrentBalanceSpecified();
    public void set_CurrentBalanceSpecified(bool value);
    public decimal get_CurrentBalanceWithSubAccounts();
    public void set_CurrentBalanceWithSubAccounts(decimal value);
    public bool get_CurrentBalanceWithSubAccountsSpecified();
    public void set_CurrentBalanceWithSubAccountsSpecified(bool value);
    public ReferenceType get_CurrencyRef();
    public void set_CurrencyRef(ReferenceType value);
    public bool get_TaxAccount();
    public void set_TaxAccount(bool value);
    public bool get_TaxAccountSpecified();
    public void set_TaxAccountSpecified(bool value);
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public bool get_OnlineBankingEnabled();
    public void set_OnlineBankingEnabled(bool value);
    public bool get_OnlineBankingEnabledSpecified();
    public void set_OnlineBankingEnabledSpecified(bool value);
    public string get_FIName();
    public void set_FIName(string value);
    public ReferenceType get_JournalCodeRef();
    public void set_JournalCodeRef(ReferenceType value);
    public IntuitAnyType get_AccountEx();
    public void set_AccountEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.AccountBasedExpenseLineDetail : object {
    private ReferenceType customerRefField;
    private ReferenceType classRefField;
    private ReferenceType accountRefField;
    private BillableStatusEnum billableStatusField;
    private bool billableStatusFieldSpecified;
    private MarkupInfo markupInfoField;
    private decimal taxAmountField;
    private bool taxAmountFieldSpecified;
    private ReferenceType taxCodeRefField;
    private decimal taxInclusiveAmtField;
    private bool taxInclusiveAmtFieldSpecified;
    private IntuitAnyType expenseDetailLineDetailExField;
    public ReferenceType CustomerRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType AccountRef { get; public set; }
    public BillableStatusEnum BillableStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillableStatusSpecified { get; public set; }
    public MarkupInfo MarkupInfo { get; public set; }
    public decimal TaxAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxAmountSpecified { get; public set; }
    public ReferenceType TaxCodeRef { get; public set; }
    public decimal TaxInclusiveAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxInclusiveAmtSpecified { get; public set; }
    public IntuitAnyType ExpenseDetailLineDetailEx { get; public set; }
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public BillableStatusEnum get_BillableStatus();
    public void set_BillableStatus(BillableStatusEnum value);
    public bool get_BillableStatusSpecified();
    public void set_BillableStatusSpecified(bool value);
    public MarkupInfo get_MarkupInfo();
    public void set_MarkupInfo(MarkupInfo value);
    public decimal get_TaxAmount();
    public void set_TaxAmount(decimal value);
    public bool get_TaxAmountSpecified();
    public void set_TaxAmountSpecified(bool value);
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public decimal get_TaxInclusiveAmt();
    public void set_TaxInclusiveAmt(decimal value);
    public bool get_TaxInclusiveAmtSpecified();
    public void set_TaxInclusiveAmtSpecified(bool value);
    public IntuitAnyType get_ExpenseDetailLineDetailEx();
    public void set_ExpenseDetailLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.AccountClassificationEnum : Enum {
    public int value__;
    public static AccountClassificationEnum Asset;
    public static AccountClassificationEnum Equity;
    public static AccountClassificationEnum Expense;
    public static AccountClassificationEnum Liability;
    public static AccountClassificationEnum Revenue;
}
public class Intuit.Ipp.Data.AccountList : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.AccountSubTypeEnum : Enum {
    public int value__;
    public static AccountSubTypeEnum IncomeTaxPayable;
    public static AccountSubTypeEnum IntangibleAssetsOther;
    public static AccountSubTypeEnum AccountsPayable;
    public static AccountSubTypeEnum AccountsReceivable;
    public static AccountSubTypeEnum AccumulatedAdjustment;
    public static AccountSubTypeEnum AccumulatedAmortization;
    public static AccountSubTypeEnum AccumulatedAmortizationOfOtherAssets;
    public static AccountSubTypeEnum AccumulatedDepletion;
    public static AccountSubTypeEnum AccumulatedDepreciation;
    public static AccountSubTypeEnum AdvertisingPromotional;
    public static AccountSubTypeEnum AllowanceForBadDebts;
    public static AccountSubTypeEnum Amortization;
    public static AccountSubTypeEnum Auto;
    public static AccountSubTypeEnum BadDebts;
    public static AccountSubTypeEnum BankCharges;
    public static AccountSubTypeEnum Buildings;
    public static AccountSubTypeEnum CashOnHand;
    public static AccountSubTypeEnum CharitableContributions;
    public static AccountSubTypeEnum Checking;
    public static AccountSubTypeEnum CommonStock;
    public static AccountSubTypeEnum CostOfLabor;
    public static AccountSubTypeEnum CostOfLaborCos;
    public static AccountSubTypeEnum CreditCard;
    public static AccountSubTypeEnum DepletableAssets;
    public static AccountSubTypeEnum Depreciation;
    public static AccountSubTypeEnum DevelopmentCosts;
    public static AccountSubTypeEnum DirectDepositPayable;
    public static AccountSubTypeEnum DiscountsRefundsGiven;
    public static AccountSubTypeEnum DividendIncome;
    public static AccountSubTypeEnum DuesSubscriptions;
    public static AccountSubTypeEnum EmployeeCashAdvances;
    public static AccountSubTypeEnum Entertainment;
    public static AccountSubTypeEnum EntertainmentMeals;
    public static AccountSubTypeEnum EquipmentRental;
    public static AccountSubTypeEnum EquipmentRentalCos;
    public static AccountSubTypeEnum EstimatedTaxes;
    public static AccountSubTypeEnum ExchangeGainOrLoss;
    public static AccountSubTypeEnum FederalIncomeTaxPayable;
    public static AccountSubTypeEnum FinanceCosts;
    public static AccountSubTypeEnum FixedAssetComputers;
    public static AccountSubTypeEnum FixedAssetCopiers;
    public static AccountSubTypeEnum FixedAssetFurniture;
    public static AccountSubTypeEnum FixedAssetPhone;
    public static AccountSubTypeEnum FixedAssetPhotoVideo;
    public static AccountSubTypeEnum FixedAssetSoftware;
    public static AccountSubTypeEnum FixedAssetOtherToolsEquipment;
    public static AccountSubTypeEnum FurnitureAndFixtures;
    public static AccountSubTypeEnum GlobalTaxExpense;
    public static AccountSubTypeEnum GlobalTaxPayable;
    public static AccountSubTypeEnum GlobalTaxSuspense;
    public static AccountSubTypeEnum GasAndFuel;
    public static AccountSubTypeEnum Goodwill;
    public static AccountSubTypeEnum Gratuity;
    public static AccountSubTypeEnum DeferredRevenue;
    public static AccountSubTypeEnum Healthcare;
    public static AccountSubTypeEnum HealthSavingsAccountContributions;
    public static AccountSubTypeEnum HomeOffice;
    public static AccountSubTypeEnum HomeownerRentalInsurance;
    public static AccountSubTypeEnum Insurance;
    public static AccountSubTypeEnum InsurancePayable;
    public static AccountSubTypeEnum IntangibleAssets;
    public static AccountSubTypeEnum InterestEarned;
    public static AccountSubTypeEnum InterestPaid;
    public static AccountSubTypeEnum Inventory;
    public static AccountSubTypeEnum Investment_MortgageRealEstateLoans;
    public static AccountSubTypeEnum Investment_Other;
    public static AccountSubTypeEnum Investment_TaxExemptSecurities;
    public static AccountSubTypeEnum Investment_USGovernmentObligations;
    public static AccountSubTypeEnum Land;
    public static AccountSubTypeEnum LeaseBuyout;
    public static AccountSubTypeEnum LeaseholdImprovements;
    public static AccountSubTypeEnum LegalProfessionalFees;
    public static AccountSubTypeEnum Licenses;
    public static AccountSubTypeEnum LineOfCredit;
    public static AccountSubTypeEnum LoanPayable;
    public static AccountSubTypeEnum LoansToOfficers;
    public static AccountSubTypeEnum LoansToOthers;
    public static AccountSubTypeEnum LoansToStockholders;
    public static AccountSubTypeEnum MachineryAndEquipment;
    public static AccountSubTypeEnum MoneyMarket;
    public static AccountSubTypeEnum MortgageInterestHomeOffice;
    public static AccountSubTypeEnum NonProfitIncome;
    public static AccountSubTypeEnum NotesPayable;
    public static AccountSubTypeEnum OfficeGeneralAdministrativeExpenses;
    public static AccountSubTypeEnum OpeningBalanceEquity;
    public static AccountSubTypeEnum OrganizationalCosts;
    public static AccountSubTypeEnum OtherBusinessExpenses;
    public static AccountSubTypeEnum OtherCostsOfServiceCos;
    public static AccountSubTypeEnum OtherCurrentAssets;
    public static AccountSubTypeEnum OtherCurrentLiabilities;
    public static AccountSubTypeEnum OtherFixedAssets;
    public static AccountSubTypeEnum OtherHomeOfficeExpenses;
    public static AccountSubTypeEnum OtherInvestmentIncome;
    public static AccountSubTypeEnum OtherLongTermAssets;
    public static AccountSubTypeEnum OtherLongTermLiabilities;
    public static AccountSubTypeEnum OtherMiscellaneousExpense;
    public static AccountSubTypeEnum OtherMiscellaneousIncome;
    public static AccountSubTypeEnum OtherMiscellaneousServiceCost;
    public static AccountSubTypeEnum OtherPrimaryIncome;
    public static AccountSubTypeEnum OtherVehicleExpenses;
    public static AccountSubTypeEnum OwnersEquity;
    public static AccountSubTypeEnum PaidInCapitalOrSurplus;
    public static AccountSubTypeEnum ParkingAndTolls;
    public static AccountSubTypeEnum PartnerContributions;
    public static AccountSubTypeEnum PartnerDistributions;
    public static AccountSubTypeEnum PartnersEquity;
    public static AccountSubTypeEnum PayrollClearing;
    public static AccountSubTypeEnum PayrollExpenses;
    public static AccountSubTypeEnum PayrollTaxExpenses;
    public static AccountSubTypeEnum PayrollWageExpenses;
    public static AccountSubTypeEnum PayrollTaxPayable;
    public static AccountSubTypeEnum PenaltiesSettlements;
    public static AccountSubTypeEnum PersonalExpense;
    public static AccountSubTypeEnum PersonalIncome;
    public static AccountSubTypeEnum PreferredStock;
    public static AccountSubTypeEnum PrepaidExpenses;
    public static AccountSubTypeEnum PrepaidExpensesPayable;
    public static AccountSubTypeEnum PromotionalMeals;
    public static AccountSubTypeEnum PropertyTaxHomeOffice;
    public static AccountSubTypeEnum RentAndLeaseHomeOffice;
    public static AccountSubTypeEnum RentOrLeaseOfBuildings;
    public static AccountSubTypeEnum RentsHeldInTrust;
    public static AccountSubTypeEnum RentsInTrustLiability;
    public static AccountSubTypeEnum RepairsAndMaintainceHomeOffice;
    public static AccountSubTypeEnum RepairMaintenance;
    public static AccountSubTypeEnum Retainage;
    public static AccountSubTypeEnum RetainedEarnings;
    public static AccountSubTypeEnum SalesOfProductIncome;
    public static AccountSubTypeEnum SalesTaxPayable;
    public static AccountSubTypeEnum Savings;
    public static AccountSubTypeEnum SecurityDeposits;
    public static AccountSubTypeEnum ServiceFeeIncome;
    public static AccountSubTypeEnum ShareholderNotesPayable;
    public static AccountSubTypeEnum ShippingFreightDelivery;
    public static AccountSubTypeEnum ShippingFreightDeliveryCos;
    public static AccountSubTypeEnum StateLocalIncomeTaxPayable;
    public static AccountSubTypeEnum SuppliesMaterials;
    public static AccountSubTypeEnum SuppliesMaterialsCogs;
    public static AccountSubTypeEnum TaxesPaid;
    public static AccountSubTypeEnum TaxExemptInterest;
    public static AccountSubTypeEnum Travel;
    public static AccountSubTypeEnum TravelMeals;
    public static AccountSubTypeEnum TreasuryStock;
    public static AccountSubTypeEnum TrustAccounts;
    public static AccountSubTypeEnum TrustAccountsLiabilities;
    public static AccountSubTypeEnum UnappliedCashBillPaymentExpense;
    public static AccountSubTypeEnum UnappliedCashPaymentIncome;
    public static AccountSubTypeEnum UndepositedFunds;
    public static AccountSubTypeEnum Utilities;
    public static AccountSubTypeEnum Communications;
    public static AccountSubTypeEnum UtilitiesHomeOffice;
    public static AccountSubTypeEnum Vehicle;
    public static AccountSubTypeEnum VehicleInsurance;
    public static AccountSubTypeEnum VehicleLease;
    public static AccountSubTypeEnum VehicleLoan;
    public static AccountSubTypeEnum VehicleLoanInterest;
    public static AccountSubTypeEnum VehicleRegistration;
    public static AccountSubTypeEnum VehicleRepairs;
    public static AccountSubTypeEnum Vehicles;
    public static AccountSubTypeEnum WashAndRoadServices;
    public static AccountSubTypeEnum WithholdingTaxSales;
    public static AccountSubTypeEnum WithholdingTaxPurchases;
    public static AccountSubTypeEnum WithholdingAssetAmount;
    public static AccountSubTypeEnum WithholdingLiabilityAmount;
    public static AccountSubTypeEnum WithholdingTaxSuspense;
    [XmlEnumAttribute("DevelopmentCosts")]
public static AccountSubTypeEnum DevelopmentCosts1;
    public static AccountSubTypeEnum ProvisionsCurrentAssets;
    public static AccountSubTypeEnum OtherConsumables;
    public static AccountSubTypeEnum ExpenditureAuthorisationsAndLettersOfCredit;
    public static AccountSubTypeEnum InternalTransfers;
    public static AccountSubTypeEnum ProvisionsFixedAssets;
    public static AccountSubTypeEnum AssetsInCourseOfConstruction;
    public static AccountSubTypeEnum ParticipatingInterests;
    public static AccountSubTypeEnum CumulativeDepreciationOnIntangibleAssets;
    public static AccountSubTypeEnum ProvisionsNonCurrentAssets;
    public static AccountSubTypeEnum OutstandingDuesMicroSmallEnterprise;
    public static AccountSubTypeEnum OutstandingDuesOtherThanMicroSmallEnterprise;
    public static AccountSubTypeEnum GlobalTaxRefund;
    public static AccountSubTypeEnum GlobalTaxDeferred;
    public static AccountSubTypeEnum ProvisionsCurrentLiabilities;
    public static AccountSubTypeEnum StaffAndRelatedLiabilityAccounts;
    public static AccountSubTypeEnum SocialSecurityAgencies;
    public static AccountSubTypeEnum SundryDebtorsAndCreditors;
    public static AccountSubTypeEnum ProvisionsNonCurrentLiabilities;
    public static AccountSubTypeEnum DebtsRelatedToParticipatingInterests;
    public static AccountSubTypeEnum StaffAndRelatedLongTermLiabilityAccounts;
    public static AccountSubTypeEnum GovernmentAndOtherPublicAuthorities;
    public static AccountSubTypeEnum GroupAndAssociates;
    public static AccountSubTypeEnum InvestmentGrants;
    public static AccountSubTypeEnum CashReceiptIncome;
    public static AccountSubTypeEnum OwnWorkCapitalized;
    public static AccountSubTypeEnum OperatingGrants;
    public static AccountSubTypeEnum OtherCurrentOperatingIncome;
    public static AccountSubTypeEnum CostOfSales;
    public static AccountSubTypeEnum CashExpenditureExpense;
    public static AccountSubTypeEnum ExternalServices;
    public static AccountSubTypeEnum OtherExternalServices;
    public static AccountSubTypeEnum PurchasesRebates;
    public static AccountSubTypeEnum OtherRentalCosts;
    public static AccountSubTypeEnum ProjectStudiesSurveysAssessments;
    public static AccountSubTypeEnum Sundry;
    public static AccountSubTypeEnum StaffCosts;
    public static AccountSubTypeEnum OtherCurrentOperatingCharges;
    public static AccountSubTypeEnum ExtraordinaryCharges;
    public static AccountSubTypeEnum AppropriationsToDepreciation;
    public static AccountSubTypeEnum AccrualsAndDeferredIncome;
    public static AccountSubTypeEnum CurrentTaxLiability;
    public static AccountSubTypeEnum DeferredTax;
    public static AccountSubTypeEnum DistributionCosts;
    public static AccountSubTypeEnum Investments;
    public static AccountSubTypeEnum LongTermBorrowings;
    public static AccountSubTypeEnum OtherIntangibleAssets;
    public static AccountSubTypeEnum PrepaymentsAndAccruedIncome;
    public static AccountSubTypeEnum ShortTermBorrowings;
    public static AccountSubTypeEnum ProvisionForLiabilities;
    public static AccountSubTypeEnum CalledUpShareCapital;
    public static AccountSubTypeEnum CalledUpShareCapitalNotPaid;
    public static AccountSubTypeEnum LandAsset;
    public static AccountSubTypeEnum AvailableForSaleFinancialAssets;
    public static AccountSubTypeEnum ProvisionForWarrantyObligations;
    public static AccountSubTypeEnum CurrentPortionEmployeeBenefitsObligations;
    public static AccountSubTypeEnum LongTermEmployeeBenefitObligations;
    public static AccountSubTypeEnum ObligationsUnderFinanceLeases;
    public static AccountSubTypeEnum BankLoans;
    public static AccountSubTypeEnum InterestPayables;
    public static AccountSubTypeEnum GainLossOnSaleOfInvestments;
    public static AccountSubTypeEnum GainLossOnSaleOfFixedAssets;
    public static AccountSubTypeEnum ShareCapital;
    public static AccountSubTypeEnum CurrentPortionOfObligationsUnderFinanceLeases;
    public static AccountSubTypeEnum AssetsHeldForSale;
    public static AccountSubTypeEnum AccruedLiabilities;
    public static AccountSubTypeEnum AccruedLongLermLiabilities;
    public static AccountSubTypeEnum AccruedVacationPayable;
    public static AccountSubTypeEnum CashAndCashEquivalents;
    public static AccountSubTypeEnum CommissionsAndFees;
    public static AccountSubTypeEnum AmortizationExpense;
    public static AccountSubTypeEnum LossOnDiscontinuedOperationsNetOfTax;
    public static AccountSubTypeEnum ManagementCompensation;
    public static AccountSubTypeEnum OtherSellingExpenses;
    public static AccountSubTypeEnum LiabilitiesRelatedToAssetsHeldForSale;
    public static AccountSubTypeEnum LongTermDebit;
    public static AccountSubTypeEnum EquityInEarningsOfSubsiduaries;
    public static AccountSubTypeEnum OtherOperatingIncome;
    public static AccountSubTypeEnum RevenueGeneral;
    public static AccountSubTypeEnum DividendDisbursed;
    public static AccountSubTypeEnum FreightAndDeliveryCos;
    public static AccountSubTypeEnum ShippingAndDeliveryExpense;
    public static AccountSubTypeEnum TravelExpensesGeneralAndAdminExpenses;
    public static AccountSubTypeEnum TravelExpensesSellingExpense;
    public static AccountSubTypeEnum UnrealisedLossOnSecuritiesNetOfTax;
    public static AccountSubTypeEnum SalesRetail;
    public static AccountSubTypeEnum SalesWholesale;
    public static AccountSubTypeEnum AccumulatedOtherComprehensiveIncome;
    public static AccountSubTypeEnum AssetsAvailableForSale;
    public static AccountSubTypeEnum LossOnDisposalOfAssets;
    public static AccountSubTypeEnum NonCurrentAssets;
    public static AccountSubTypeEnum IncomeTaxExpense;
    public static AccountSubTypeEnum LongTermInvestments;
    public static AccountSubTypeEnum DividendsPayable;
    public static AccountSubTypeEnum TradeAndOtherReceivables;
    public static AccountSubTypeEnum TradeAndOtherPayables;
    public static AccountSubTypeEnum CurrentLiabilities;
    public static AccountSubTypeEnum SavingsByTaxScheme;
    public static AccountSubTypeEnum BorrowingCost;
    public static AccountSubTypeEnum Depletion;
    public static AccountSubTypeEnum ExceptionalItems;
    public static AccountSubTypeEnum PriorPeriodItems;
    public static AccountSubTypeEnum ExtraordinaryItems;
    public static AccountSubTypeEnum MatCredit;
    public static AccountSubTypeEnum OtherFreeReserves;
    public static AccountSubTypeEnum CapitalReserves;
    public static AccountSubTypeEnum Funds;
    public static AccountSubTypeEnum MoneyReceivedAgainstShareWarrants;
    public static AccountSubTypeEnum ShareApplicationMoneyPendingAllotment;
    public static AccountSubTypeEnum DeferredTaxLiabilities;
    public static AccountSubTypeEnum OtherLongTermProvisions;
    public static AccountSubTypeEnum CapitalWip;
    public static AccountSubTypeEnum IntangibleAssetsUnderDevelopment;
    public static AccountSubTypeEnum OtherLongTermInvestments;
    public static AccountSubTypeEnum LongTermLoansAndAdvancesToRelatedParties;
    public static AccountSubTypeEnum OtherLongTermLoansAndAdvances;
    public static AccountSubTypeEnum ShortTermInvestmentsInRelatedParties;
    public static AccountSubTypeEnum OtherEarmarkedBankAccounts;
    public static AccountSubTypeEnum ShortTermLoansAndAdvancesToRelatedParties;
    public static AccountSubTypeEnum DeferredTaxExpense;
    public static AccountSubTypeEnum IncomeTaxOtherExpense;
    public static AccountSubTypeEnum DutiesAndTaxes;
    public static AccountSubTypeEnum BalWithGovtAuthorities;
    public static AccountSubTypeEnum TaxRoundoffGainOrLoss;
    public static AccountSubTypeEnum OtherDebtors;
    public static AccountSubTypeEnum RentARoomReliefRentsReceived;
    public static AccountSubTypeEnum UkTaxesWithheld;
    public static AccountSubTypeEnum ForeignTaxesIncurred;
    public static AccountSubTypeEnum PremiumsReceived;
    public static AccountSubTypeEnum PremiumsPaid;
    public static AccountSubTypeEnum FinanceCostsRestricted;
    public static AccountSubTypeEnum CarriedForwardRelief;
    public static AccountSubTypeEnum RentARoomReliefReliefClaimed;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.AccountTypeEnum : Enum {
    public int value__;
    public static AccountTypeEnum Bank;
    [XmlEnumAttribute("Accounts Receivable")]
[JsonPropertyAttribute("Accounts Receivable")]
public static AccountTypeEnum AccountsReceivable;
    [XmlEnumAttribute("Other Current Asset")]
[JsonPropertyAttribute("Other Current Asset")]
public static AccountTypeEnum OtherCurrentAsset;
    [XmlEnumAttribute("Fixed Asset")]
[JsonPropertyAttribute("Fixed Asset")]
public static AccountTypeEnum FixedAsset;
    [XmlEnumAttribute("Other Asset")]
[JsonPropertyAttribute("Other Asset")]
public static AccountTypeEnum OtherAsset;
    [XmlEnumAttribute("Accounts Payable")]
[JsonPropertyAttribute("Accounts Payable")]
public static AccountTypeEnum AccountsPayable;
    [XmlEnumAttribute("Credit Card")]
[JsonPropertyAttribute("Credit Card")]
public static AccountTypeEnum CreditCard;
    [XmlEnumAttribute("Other Current Liability")]
[JsonPropertyAttribute("Other Current Liability")]
public static AccountTypeEnum OtherCurrentLiability;
    [XmlEnumAttribute("Long Term Liability")]
[JsonPropertyAttribute("Long Term Liability")]
public static AccountTypeEnum LongTermLiability;
    public static AccountTypeEnum Equity;
    public static AccountTypeEnum Income;
    [XmlEnumAttribute("Cost of Goods Sold")]
[JsonPropertyAttribute("Cost of Goods Sold")]
public static AccountTypeEnum CostofGoodsSold;
    public static AccountTypeEnum Expense;
    [XmlEnumAttribute("Other Income")]
[JsonPropertyAttribute("Other Income")]
public static AccountTypeEnum OtherIncome;
    [XmlEnumAttribute("Other Expense")]
[JsonPropertyAttribute("Other Expense")]
public static AccountTypeEnum OtherExpense;
    [XmlEnumAttribute("Non-Posting")]
[JsonPropertyAttribute("Non-Posting")]
public static AccountTypeEnum NonPosting;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.AcquiredAsEnum : Enum {
    public int value__;
    public static AcquiredAsEnum New;
    public static AcquiredAsEnum Used;
}
public class Intuit.Ipp.Data.AdminInfo : object {
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FirstName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationId>k__BackingField;
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string Uid { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string FirstName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string LastName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string Email { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string ProductID { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string ApplicationName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string ApplicationId { get; private set; }
    internal AdminInfo(XmlNode singleUserNode);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
private void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_FirstName();
    [CompilerGeneratedAttribute]
private void set_FirstName(string value);
    [CompilerGeneratedAttribute]
public string get_LastName();
    [CompilerGeneratedAttribute]
private void set_LastName(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
private void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_ProductID();
    [CompilerGeneratedAttribute]
private void set_ProductID(string value);
    [CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
private void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public string get_ApplicationId();
    [CompilerGeneratedAttribute]
private void set_ApplicationId(string value);
    public static Collection`1<AdminInfo> ParseAdmins(XmlNode node);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.AdvancedInventoryPrefs : object {
    private bool mLIAvailableField;
    private bool mLIAvailableFieldSpecified;
    private bool mLIEnabledField;
    private bool mLIEnabledFieldSpecified;
    private bool enhancedInventoryReceivingEnabledField;
    private bool enhancedInventoryReceivingEnabledFieldSpecified;
    private bool trackingSerialOrLotNumberField;
    private bool trackingSerialOrLotNumberFieldSpecified;
    private bool trackingOnSalesTransactionsEnabledField;
    private bool trackingOnSalesTransactionsEnabledFieldSpecified;
    private bool trackingOnPurchaseTransactionsEnabledField;
    private bool trackingOnPurchaseTransactionsEnabledFieldSpecified;
    private bool trackingOnInventoryAdjustmentEnabledField;
    private bool trackingOnInventoryAdjustmentEnabledFieldSpecified;
    private bool trackingOnBuildAssemblyEnabledField;
    private bool trackingOnBuildAssemblyEnabledFieldSpecified;
    private bool fIFOEnabledField;
    private bool fIFOEnabledFieldSpecified;
    private DateTime fIFOEffectiveDateField;
    private bool fIFOEffectiveDateFieldSpecified;
    private bool rowShelfBinEnabledField;
    private bool rowShelfBinEnabledFieldSpecified;
    private bool barcodeEnabledField;
    private bool barcodeEnabledFieldSpecified;
    public bool MLIAvailable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MLIAvailableSpecified { get; public set; }
    public bool MLIEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MLIEnabledSpecified { get; public set; }
    public bool EnhancedInventoryReceivingEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EnhancedInventoryReceivingEnabledSpecified { get; public set; }
    public bool TrackingSerialOrLotNumber { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackingSerialOrLotNumberSpecified { get; public set; }
    public bool TrackingOnSalesTransactionsEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackingOnSalesTransactionsEnabledSpecified { get; public set; }
    public bool TrackingOnPurchaseTransactionsEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackingOnPurchaseTransactionsEnabledSpecified { get; public set; }
    public bool TrackingOnInventoryAdjustmentEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackingOnInventoryAdjustmentEnabledSpecified { get; public set; }
    public bool TrackingOnBuildAssemblyEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackingOnBuildAssemblyEnabledSpecified { get; public set; }
    public bool FIFOEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FIFOEnabledSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime FIFOEffectiveDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FIFOEffectiveDateSpecified { get; public set; }
    public bool RowShelfBinEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RowShelfBinEnabledSpecified { get; public set; }
    public bool BarcodeEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BarcodeEnabledSpecified { get; public set; }
    public bool get_MLIAvailable();
    public void set_MLIAvailable(bool value);
    public bool get_MLIAvailableSpecified();
    public void set_MLIAvailableSpecified(bool value);
    public bool get_MLIEnabled();
    public void set_MLIEnabled(bool value);
    public bool get_MLIEnabledSpecified();
    public void set_MLIEnabledSpecified(bool value);
    public bool get_EnhancedInventoryReceivingEnabled();
    public void set_EnhancedInventoryReceivingEnabled(bool value);
    public bool get_EnhancedInventoryReceivingEnabledSpecified();
    public void set_EnhancedInventoryReceivingEnabledSpecified(bool value);
    public bool get_TrackingSerialOrLotNumber();
    public void set_TrackingSerialOrLotNumber(bool value);
    public bool get_TrackingSerialOrLotNumberSpecified();
    public void set_TrackingSerialOrLotNumberSpecified(bool value);
    public bool get_TrackingOnSalesTransactionsEnabled();
    public void set_TrackingOnSalesTransactionsEnabled(bool value);
    public bool get_TrackingOnSalesTransactionsEnabledSpecified();
    public void set_TrackingOnSalesTransactionsEnabledSpecified(bool value);
    public bool get_TrackingOnPurchaseTransactionsEnabled();
    public void set_TrackingOnPurchaseTransactionsEnabled(bool value);
    public bool get_TrackingOnPurchaseTransactionsEnabledSpecified();
    public void set_TrackingOnPurchaseTransactionsEnabledSpecified(bool value);
    public bool get_TrackingOnInventoryAdjustmentEnabled();
    public void set_TrackingOnInventoryAdjustmentEnabled(bool value);
    public bool get_TrackingOnInventoryAdjustmentEnabledSpecified();
    public void set_TrackingOnInventoryAdjustmentEnabledSpecified(bool value);
    public bool get_TrackingOnBuildAssemblyEnabled();
    public void set_TrackingOnBuildAssemblyEnabled(bool value);
    public bool get_TrackingOnBuildAssemblyEnabledSpecified();
    public void set_TrackingOnBuildAssemblyEnabledSpecified(bool value);
    public bool get_FIFOEnabled();
    public void set_FIFOEnabled(bool value);
    public bool get_FIFOEnabledSpecified();
    public void set_FIFOEnabledSpecified(bool value);
    public DateTime get_FIFOEffectiveDate();
    public void set_FIFOEffectiveDate(DateTime value);
    public bool get_FIFOEffectiveDateSpecified();
    public void set_FIFOEffectiveDateSpecified(bool value);
    public bool get_RowShelfBinEnabled();
    public void set_RowShelfBinEnabled(bool value);
    public bool get_RowShelfBinEnabledSpecified();
    public void set_RowShelfBinEnabledSpecified(bool value);
    public bool get_BarcodeEnabled();
    public void set_BarcodeEnabled(bool value);
    public bool get_BarcodeEnabledSpecified();
    public void set_BarcodeEnabledSpecified(bool value);
}
public class Intuit.Ipp.Data.AgedPayableDetail : ReportQueryBase {
}
public class Intuit.Ipp.Data.AgedPayables : ReportQueryBase {
}
public class Intuit.Ipp.Data.AgedReceivableDetail : ReportQueryBase {
}
public class Intuit.Ipp.Data.AgedReceivables : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.AgencyPaymentMethodEnum : Enum {
    public int value__;
    public static AgencyPaymentMethodEnum ACH_CREDIT;
    public static AgencyPaymentMethodEnum ACH_DEBIT;
    public static AgencyPaymentMethodEnum CHECK;
    public static AgencyPaymentMethodEnum WIRE;
    public static AgencyPaymentMethodEnum OTHER;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.APCreditCardOperationEnum : Enum {
    public int value__;
    public static APCreditCardOperationEnum Charge;
    public static APCreditCardOperationEnum Credit;
}
public class Intuit.Ipp.Data.AssertFederatedIdentityResult : object {
    [CompilerGeneratedAttribute]
private bool <IsSuccess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UData>k__BackingField;
    public bool IsSuccess { get; public set; }
    public string Action { get; public set; }
    public string ErrorCode { get; public set; }
    public string ErrorText { get; public set; }
    public string UData { get; public set; }
    internal AssertFederatedIdentityResult(XmlNode singleUserNode);
    [CompilerGeneratedAttribute]
public bool get_IsSuccess();
    [CompilerGeneratedAttribute]
public void set_IsSuccess(bool value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorText();
    [CompilerGeneratedAttribute]
public void set_ErrorText(string value);
    [CompilerGeneratedAttribute]
public string get_UData();
    [CompilerGeneratedAttribute]
public void set_UData(string value);
    public static AssertFederatedIdentityResult ParseAssertFederatedIdentityResult(XmlNode node);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Attachable : IntuitEntity {
    private string fileNameField;
    private string fileAccessUriField;
    private string tempDownloadUriField;
    private long sizeField;
    private bool sizeFieldSpecified;
    private string contentTypeField;
    private string categoryField;
    private string latField;
    private string longField;
    private string placeNameField;
    private string noteField;
    private string tagField;
    private string thumbnailFileAccessUriField;
    private string thumbnailTempDownloadUriField;
    private IntuitAnyType attachableExField;
    public string FileName { get; public set; }
    public string FileAccessUri { get; public set; }
    public string TempDownloadUri { get; public set; }
    public long Size { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SizeSpecified { get; public set; }
    public string ContentType { get; public set; }
    public string Category { get; public set; }
    public string Lat { get; public set; }
    public string Long { get; public set; }
    public string PlaceName { get; public set; }
    public string Note { get; public set; }
    public string Tag { get; public set; }
    public string ThumbnailFileAccessUri { get; public set; }
    public string ThumbnailTempDownloadUri { get; public set; }
    public IntuitAnyType AttachableEx { get; public set; }
    public string get_FileName();
    public void set_FileName(string value);
    public string get_FileAccessUri();
    public void set_FileAccessUri(string value);
    public string get_TempDownloadUri();
    public void set_TempDownloadUri(string value);
    public long get_Size();
    public void set_Size(long value);
    public bool get_SizeSpecified();
    public void set_SizeSpecified(bool value);
    public string get_ContentType();
    public void set_ContentType(string value);
    public string get_Category();
    public void set_Category(string value);
    public string get_Lat();
    public void set_Lat(string value);
    public string get_Long();
    public void set_Long(string value);
    public string get_PlaceName();
    public void set_PlaceName(string value);
    public string get_Note();
    public void set_Note(string value);
    public string get_Tag();
    public void set_Tag(string value);
    public string get_ThumbnailFileAccessUri();
    public void set_ThumbnailFileAccessUri(string value);
    public string get_ThumbnailTempDownloadUri();
    public void set_ThumbnailTempDownloadUri(string value);
    public IntuitAnyType get_AttachableEx();
    public void set_AttachableEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.AttachableCategoryEnum : Enum {
    public int value__;
    public static AttachableCategoryEnum Image;
    public static AttachableCategoryEnum Signature;
    [XmlEnumAttribute("Contact Photo")]
public static AttachableCategoryEnum ContactPhoto;
    public static AttachableCategoryEnum Receipt;
    public static AttachableCategoryEnum Document;
    public static AttachableCategoryEnum Sound;
    public static AttachableCategoryEnum Other;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.AttachableRef : object {
    private ReferenceType entityRefField;
    private string lineInfoField;
    private bool includeOnSendField;
    private bool includeOnSendFieldSpecified;
    private CustomField[] customFieldField;
    private IntuitAnyType attachableRefExField;
    public ReferenceType EntityRef { get; public set; }
    public string LineInfo { get; public set; }
    public bool IncludeOnSend { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IncludeOnSendSpecified { get; public set; }
    [XmlElementAttribute("CustomField")]
public CustomField[] CustomField { get; public set; }
    public IntuitAnyType AttachableRefEx { get; public set; }
    public ReferenceType get_EntityRef();
    public void set_EntityRef(ReferenceType value);
    public string get_LineInfo();
    public void set_LineInfo(string value);
    public bool get_IncludeOnSend();
    public void set_IncludeOnSend(bool value);
    public bool get_IncludeOnSendSpecified();
    public void set_IncludeOnSendSpecified(bool value);
    public CustomField[] get_CustomField();
    public void set_CustomField(CustomField[] value);
    public IntuitAnyType get_AttachableRefEx();
    public void set_AttachableRefEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.AttachableResponse : object {
    private object itemField;
    [XmlElementAttribute("Attachable", "Intuit.Ipp.Data.Attachable")]
[XmlElementAttribute("Fault", "Intuit.Ipp.Data.Fault")]
public object AnyIntuitObject { get; public set; }
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Attribute : object {
    private string typeField;
    private string valueField;
    public string Type { get; public set; }
    public string Value { get; public set; }
    public string get_Type();
    public void set_Type(string value);
    public string get_Value();
    public void set_Value(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Attributes : object {
    private Attribute[] attributeField;
    [XmlElementAttribute("Attribute")]
public Attribute[] Attribute { get; public set; }
    public Attribute[] get_Attribute();
    public void set_Attribute(Attribute[] value);
}
public class Intuit.Ipp.Data.BalanceSheet : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.BatchItemRequest : object {
    private object itemField;
    private ItemChoiceType8 itemElementNameField;
    private string bIdField;
    private OperationEnum operationField;
    private bool operationFieldSpecified;
    private string optionsDataField;
    [XmlElementAttribute("Account", "Intuit.Ipp.Data.Account")]
[XmlElementAttribute("Attachable", "Intuit.Ipp.Data.Attachable")]
[XmlElementAttribute("Bill", "Intuit.Ipp.Data.Bill")]
[XmlElementAttribute("BillPayment", "Intuit.Ipp.Data.BillPayment")]
[XmlElementAttribute("BooleanTypeCustomFieldDefinition", "Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlElementAttribute("Budget", "Intuit.Ipp.Data.Budget")]
[XmlElementAttribute("CDCQuery", "Intuit.Ipp.Data.CDCQuery")]
[XmlElementAttribute("ChargeCredit", "Intuit.Ipp.Data.ChargeCredit")]
[XmlElementAttribute("Class", "Intuit.Ipp.Data.Class")]
[XmlElementAttribute("Company", "Intuit.Ipp.Data.Company")]
[XmlElementAttribute("CompanyCurrency", "Intuit.Ipp.Data.CompanyCurrency")]
[XmlElementAttribute("CompanyInfo", "Intuit.Ipp.Data.CompanyInfo")]
[XmlElementAttribute("CreditCardPaymentTxn", "Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlElementAttribute("CreditMemo", "Intuit.Ipp.Data.CreditMemo")]
[XmlElementAttribute("CustomFieldDefinition", "Intuit.Ipp.Data.CustomFieldDefinition")]
[XmlElementAttribute("Customer", "Intuit.Ipp.Data.Customer")]
[XmlElementAttribute("CustomerType", "Intuit.Ipp.Data.CustomerType")]
[XmlElementAttribute("DateTypeCustomFieldDefinition", "Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlElementAttribute("Department", "Intuit.Ipp.Data.Department")]
[XmlElementAttribute("Deposit", "Intuit.Ipp.Data.Deposit")]
[XmlElementAttribute("EmailDeliveryInfo", "Intuit.Ipp.Data.EmailDeliveryInfo")]
[XmlElementAttribute("Employee", "Intuit.Ipp.Data.Employee")]
[XmlElementAttribute("Estimate", "Intuit.Ipp.Data.Estimate")]
[XmlElementAttribute("ExchangeRate", "Intuit.Ipp.Data.ExchangeRate")]
[XmlElementAttribute("FixedAsset", "Intuit.Ipp.Data.FixedAsset")]
[XmlElementAttribute("IntuitObject", "Intuit.Ipp.Data.IntuitEntity")]
[XmlElementAttribute("InventoryAdjustment", "Intuit.Ipp.Data.InventoryAdjustment")]
[XmlElementAttribute("InventorySite", "Intuit.Ipp.Data.InventorySite")]
[XmlElementAttribute("Invoice", "Intuit.Ipp.Data.Invoice")]
[XmlElementAttribute("Item", "Intuit.Ipp.Data.Item")]
[XmlElementAttribute("JournalCode", "Intuit.Ipp.Data.JournalCode")]
[XmlElementAttribute("JournalEntry", "Intuit.Ipp.Data.JournalEntry")]
[XmlElementAttribute("MasterAccount", "Intuit.Ipp.Data.MasterAccount")]
[XmlElementAttribute("NumberTypeCustomFieldDefinition", "Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlElementAttribute("OtherName", "Intuit.Ipp.Data.OtherName")]
[XmlElementAttribute("Payment", "Intuit.Ipp.Data.Payment")]
[XmlElementAttribute("PaymentMethod", "Intuit.Ipp.Data.PaymentMethod")]
[XmlElementAttribute("Preferences", "Intuit.Ipp.Data.Preferences")]
[XmlElementAttribute("PriceLevel", "Intuit.Ipp.Data.PriceLevel")]
[XmlElementAttribute("Purchase", "Intuit.Ipp.Data.Purchase")]
[XmlElementAttribute("PurchaseOrder", "Intuit.Ipp.Data.PurchaseOrder")]
[XmlElementAttribute("QbdtEntityIdMapping", "Intuit.Ipp.Data.QbdtEntityIdMapping")]
[XmlElementAttribute("Query", "System.String")]
[XmlElementAttribute("RecurringTransaction", "Intuit.Ipp.Data.RecurringTransaction")]
[XmlElementAttribute("RefundReceipt", "Intuit.Ipp.Data.RefundReceipt")]
[XmlElementAttribute("ReimburseCharge", "Intuit.Ipp.Data.ReimburseCharge")]
[XmlElementAttribute("ReportQuery", "System.String")]
[XmlElementAttribute("SalesOrder", "Intuit.Ipp.Data.SalesOrder")]
[XmlElementAttribute("SalesReceipt", "Intuit.Ipp.Data.SalesReceipt")]
[XmlElementAttribute("SalesRep", "Intuit.Ipp.Data.SalesRep")]
[XmlElementAttribute("StatementCharge", "Intuit.Ipp.Data.StatementCharge")]
[XmlElementAttribute("Status", "Intuit.Ipp.Data.Status")]
[XmlElementAttribute("StringTypeCustomFieldDefinition", "Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[XmlElementAttribute("SyncActivity", "Intuit.Ipp.Data.SyncActivity")]
[XmlElementAttribute("TDSMetadata", "Intuit.Ipp.Data.TDSMetadata")]
[XmlElementAttribute("Tag", "Intuit.Ipp.Data.Tag")]
[XmlElementAttribute("Task", "Intuit.Ipp.Data.Task")]
[XmlElementAttribute("TaxAgency", "Intuit.Ipp.Data.TaxAgency")]
[XmlElementAttribute("TaxClassification", "Intuit.Ipp.Data.TaxClassification")]
[XmlElementAttribute("TaxCode", "Intuit.Ipp.Data.TaxCode")]
[XmlElementAttribute("TaxPayment", "Intuit.Ipp.Data.TaxPayment")]
[XmlElementAttribute("TaxRate", "Intuit.Ipp.Data.TaxRate")]
[XmlElementAttribute("TaxReturn", "Intuit.Ipp.Data.TaxReturn")]
[XmlElementAttribute("TaxService", "Intuit.Ipp.Data.TaxService")]
[XmlElementAttribute("Term", "Intuit.Ipp.Data.Term")]
[XmlElementAttribute("TimeActivity", "Intuit.Ipp.Data.TimeActivity")]
[XmlElementAttribute("Transfer", "Intuit.Ipp.Data.Transfer")]
[XmlElementAttribute("UserAlert", "Intuit.Ipp.Data.UserAlert")]
[XmlElementAttribute("Vendor", "Intuit.Ipp.Data.Vendor")]
[XmlElementAttribute("VendorCredit", "Intuit.Ipp.Data.VendorCredit")]
[XmlElementAttribute("VendorType", "Intuit.Ipp.Data.VendorType")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public object AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType8 ItemElementName { get; public set; }
    [XmlAttributeAttribute]
public string bId { get; public set; }
    [XmlAttributeAttribute]
public OperationEnum operation { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool operationSpecified { get; public set; }
    [XmlAttributeAttribute]
public string optionsData { get; public set; }
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public ItemChoiceType8 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType8 value);
    public string get_bId();
    public void set_bId(string value);
    public OperationEnum get_operation();
    public void set_operation(OperationEnum value);
    public bool get_operationSpecified();
    public void set_operationSpecified(bool value);
    public string get_optionsData();
    public void set_optionsData(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.BatchItemResponse : object {
    private Warning[] warningsField;
    private object itemField;
    private string bIdField;
    [XmlArrayItemAttribute]
public Warning[] Warnings { get; public set; }
    [XmlElementAttribute("Account", "Intuit.Ipp.Data.Account")]
[XmlElementAttribute("Attachable", "Intuit.Ipp.Data.Attachable")]
[XmlElementAttribute("Bill", "Intuit.Ipp.Data.Bill")]
[XmlElementAttribute("BillPayment", "Intuit.Ipp.Data.BillPayment")]
[XmlElementAttribute("BooleanTypeCustomFieldDefinition", "Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlElementAttribute("Budget", "Intuit.Ipp.Data.Budget")]
[XmlElementAttribute("CDCResponse", "Intuit.Ipp.Data.CDCResponse")]
[XmlElementAttribute("CascadeResponse", "Intuit.Ipp.Data.CascadeResponse")]
[XmlElementAttribute("ChargeCredit", "Intuit.Ipp.Data.ChargeCredit")]
[XmlElementAttribute("Class", "Intuit.Ipp.Data.Class")]
[XmlElementAttribute("Company", "Intuit.Ipp.Data.Company")]
[XmlElementAttribute("CompanyCurrency", "Intuit.Ipp.Data.CompanyCurrency")]
[XmlElementAttribute("CompanyInfo", "Intuit.Ipp.Data.CompanyInfo")]
[XmlElementAttribute("CreditCardPaymentTxn", "Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlElementAttribute("CreditMemo", "Intuit.Ipp.Data.CreditMemo")]
[XmlElementAttribute("CustomFieldDefinition", "Intuit.Ipp.Data.CustomFieldDefinition")]
[XmlElementAttribute("Customer", "Intuit.Ipp.Data.Customer")]
[XmlElementAttribute("CustomerType", "Intuit.Ipp.Data.CustomerType")]
[XmlElementAttribute("DateTypeCustomFieldDefinition", "Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlElementAttribute("Department", "Intuit.Ipp.Data.Department")]
[XmlElementAttribute("Deposit", "Intuit.Ipp.Data.Deposit")]
[XmlElementAttribute("EmailDeliveryInfo", "Intuit.Ipp.Data.EmailDeliveryInfo")]
[XmlElementAttribute("Employee", "Intuit.Ipp.Data.Employee")]
[XmlElementAttribute("Estimate", "Intuit.Ipp.Data.Estimate")]
[XmlElementAttribute("ExchangeRate", "Intuit.Ipp.Data.ExchangeRate")]
[XmlElementAttribute("Fault", "Intuit.Ipp.Data.Fault")]
[XmlElementAttribute("FixedAsset", "Intuit.Ipp.Data.FixedAsset")]
[XmlElementAttribute("IntuitObject", "Intuit.Ipp.Data.IntuitEntity")]
[XmlElementAttribute("InventoryAdjustment", "Intuit.Ipp.Data.InventoryAdjustment")]
[XmlElementAttribute("InventorySite", "Intuit.Ipp.Data.InventorySite")]
[XmlElementAttribute("Invoice", "Intuit.Ipp.Data.Invoice")]
[XmlElementAttribute("Item", "Intuit.Ipp.Data.Item")]
[XmlElementAttribute("JournalCode", "Intuit.Ipp.Data.JournalCode")]
[XmlElementAttribute("JournalEntry", "Intuit.Ipp.Data.JournalEntry")]
[XmlElementAttribute("MasterAccount", "Intuit.Ipp.Data.MasterAccount")]
[XmlElementAttribute("NumberTypeCustomFieldDefinition", "Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlElementAttribute("OtherName", "Intuit.Ipp.Data.OtherName")]
[XmlElementAttribute("Payment", "Intuit.Ipp.Data.Payment")]
[XmlElementAttribute("PaymentMethod", "Intuit.Ipp.Data.PaymentMethod")]
[XmlElementAttribute("Preferences", "Intuit.Ipp.Data.Preferences")]
[XmlElementAttribute("PriceLevel", "Intuit.Ipp.Data.PriceLevel")]
[XmlElementAttribute("Purchase", "Intuit.Ipp.Data.Purchase")]
[XmlElementAttribute("PurchaseOrder", "Intuit.Ipp.Data.PurchaseOrder")]
[XmlElementAttribute("QbdtEntityIdMapping", "Intuit.Ipp.Data.QbdtEntityIdMapping")]
[XmlElementAttribute("QueryResponse", "Intuit.Ipp.Data.QueryResponse")]
[XmlElementAttribute("RecurringTransaction", "Intuit.Ipp.Data.RecurringTransaction")]
[XmlElementAttribute("RefundReceipt", "Intuit.Ipp.Data.RefundReceipt")]
[XmlElementAttribute("ReimburseCharge", "Intuit.Ipp.Data.ReimburseCharge")]
[XmlElementAttribute("Report", "Intuit.Ipp.Data.Report")]
[XmlElementAttribute("SalesOrder", "Intuit.Ipp.Data.SalesOrder")]
[XmlElementAttribute("SalesReceipt", "Intuit.Ipp.Data.SalesReceipt")]
[XmlElementAttribute("SalesRep", "Intuit.Ipp.Data.SalesRep")]
[XmlElementAttribute("StatementCharge", "Intuit.Ipp.Data.StatementCharge")]
[XmlElementAttribute("Status", "Intuit.Ipp.Data.Status")]
[XmlElementAttribute("StringTypeCustomFieldDefinition", "Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[XmlElementAttribute("SyncActivity", "Intuit.Ipp.Data.SyncActivity")]
[XmlElementAttribute("TDSMetadata", "Intuit.Ipp.Data.TDSMetadata")]
[XmlElementAttribute("Tag", "Intuit.Ipp.Data.Tag")]
[XmlElementAttribute("Task", "Intuit.Ipp.Data.Task")]
[XmlElementAttribute("TaxAgency", "Intuit.Ipp.Data.TaxAgency")]
[XmlElementAttribute("TaxClassification", "Intuit.Ipp.Data.TaxClassification")]
[XmlElementAttribute("TaxCode", "Intuit.Ipp.Data.TaxCode")]
[XmlElementAttribute("TaxPayment", "Intuit.Ipp.Data.TaxPayment")]
[XmlElementAttribute("TaxRate", "Intuit.Ipp.Data.TaxRate")]
[XmlElementAttribute("TaxReturn", "Intuit.Ipp.Data.TaxReturn")]
[XmlElementAttribute("TaxService", "Intuit.Ipp.Data.TaxService")]
[XmlElementAttribute("Term", "Intuit.Ipp.Data.Term")]
[XmlElementAttribute("TimeActivity", "Intuit.Ipp.Data.TimeActivity")]
[XmlElementAttribute("Transfer", "Intuit.Ipp.Data.Transfer")]
[XmlElementAttribute("UserAlert", "Intuit.Ipp.Data.UserAlert")]
[XmlElementAttribute("Vendor", "Intuit.Ipp.Data.Vendor")]
[XmlElementAttribute("VendorCredit", "Intuit.Ipp.Data.VendorCredit")]
[XmlElementAttribute("VendorType", "Intuit.Ipp.Data.VendorType")]
public object AnyIntuitObject { get; public set; }
    [XmlAttributeAttribute]
public string bId { get; public set; }
    public Warning[] get_Warnings();
    public void set_Warnings(Warning[] value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public string get_bId();
    public void set_bId(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Bill : PurchaseByVendor {
    private ReferenceType payerRefField;
    private ReferenceType salesTermRefField;
    private DateTime dueDateField;
    private bool dueDateFieldSpecified;
    private PhysicalAddress remitToAddrField;
    private PhysicalAddress shipAddrField;
    private PhysicalAddress vendorAddrField;
    private decimal balanceField;
    private bool balanceFieldSpecified;
    private decimal homeBalanceField;
    private bool homeBalanceFieldSpecified;
    private IntuitAnyType billExField;
    private decimal lessCISField;
    private bool lessCISFieldSpecified;
    private bool includeInAnnualTPARField;
    private bool includeInAnnualTPARFieldSpecified;
    public ReferenceType PayerRef { get; public set; }
    public ReferenceType SalesTermRef { get; public set; }
    [XmlElementAttribute]
public DateTime DueDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DueDateSpecified { get; public set; }
    public PhysicalAddress RemitToAddr { get; public set; }
    public PhysicalAddress ShipAddr { get; public set; }
    public PhysicalAddress VendorAddr { get; public set; }
    public decimal Balance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BalanceSpecified { get; public set; }
    public decimal HomeBalance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeBalanceSpecified { get; public set; }
    public IntuitAnyType BillEx { get; public set; }
    public decimal LessCIS { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LessCISSpecified { get; public set; }
    public bool IncludeInAnnualTPAR { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IncludeInAnnualTPARSpecified { get; public set; }
    public ReferenceType get_PayerRef();
    public void set_PayerRef(ReferenceType value);
    public ReferenceType get_SalesTermRef();
    public void set_SalesTermRef(ReferenceType value);
    public DateTime get_DueDate();
    public void set_DueDate(DateTime value);
    public bool get_DueDateSpecified();
    public void set_DueDateSpecified(bool value);
    public PhysicalAddress get_RemitToAddr();
    public void set_RemitToAddr(PhysicalAddress value);
    public PhysicalAddress get_ShipAddr();
    public void set_ShipAddr(PhysicalAddress value);
    public PhysicalAddress get_VendorAddr();
    public void set_VendorAddr(PhysicalAddress value);
    public decimal get_Balance();
    public void set_Balance(decimal value);
    public bool get_BalanceSpecified();
    public void set_BalanceSpecified(bool value);
    public decimal get_HomeBalance();
    public void set_HomeBalance(decimal value);
    public bool get_HomeBalanceSpecified();
    public void set_HomeBalanceSpecified(bool value);
    public IntuitAnyType get_BillEx();
    public void set_BillEx(IntuitAnyType value);
    public decimal get_LessCIS();
    public void set_LessCIS(decimal value);
    public bool get_LessCISSpecified();
    public void set_LessCISSpecified(bool value);
    public bool get_IncludeInAnnualTPAR();
    public void set_IncludeInAnnualTPAR(bool value);
    public bool get_IncludeInAnnualTPARSpecified();
    public void set_IncludeInAnnualTPARSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.BillableStatusEnum : Enum {
    public int value__;
    public static BillableStatusEnum Billable;
    public static BillableStatusEnum NotBillable;
    public static BillableStatusEnum HasBeenBilled;
}
public class Intuit.Ipp.Data.BillingInfo : object {
    public static string StatusGrace;
    public static string StatusOk;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastPaymentDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DbId>k__BackingField;
    public string Status { get; private set; }
    public DateTime LastPaymentDate { get; private set; }
    public string DbId { get; private set; }
    public BillingInfo(XmlNode billingNode);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(string value);
    [CompilerGeneratedAttribute]
public DateTime get_LastPaymentDate();
    [CompilerGeneratedAttribute]
private void set_LastPaymentDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_DbId();
    [CompilerGeneratedAttribute]
private void set_DbId(string value);
    public bool HasStatusGrace();
    public bool HasStatusOk();
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.BillPayment : Transaction {
    private ReferenceType vendorRefField;
    private PhysicalAddress vendorAddrField;
    private ReferenceType aPAccountRefField;
    private BillPaymentTypeEnum payTypeField;
    private bool payTypeFieldSpecified;
    private object itemField;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private IntuitAnyType billPaymentExField;
    public ReferenceType VendorRef { get; public set; }
    public PhysicalAddress VendorAddr { get; public set; }
    public ReferenceType APAccountRef { get; public set; }
    public BillPaymentTypeEnum PayType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PayTypeSpecified { get; public set; }
    [XmlElementAttribute("CheckPayment", "Intuit.Ipp.Data.BillPaymentCheck")]
[XmlElementAttribute("CreditCardPayment", "Intuit.Ipp.Data.BillPaymentCreditCard")]
public object AnyIntuitObject { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public IntuitAnyType BillPaymentEx { get; public set; }
    public ReferenceType get_VendorRef();
    public void set_VendorRef(ReferenceType value);
    public PhysicalAddress get_VendorAddr();
    public void set_VendorAddr(PhysicalAddress value);
    public ReferenceType get_APAccountRef();
    public void set_APAccountRef(ReferenceType value);
    public BillPaymentTypeEnum get_PayType();
    public void set_PayType(BillPaymentTypeEnum value);
    public bool get_PayTypeSpecified();
    public void set_PayTypeSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public IntuitAnyType get_BillPaymentEx();
    public void set_BillPaymentEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.BillPaymentCheck : object {
    private ReferenceType bankAccountRefField;
    private PrintStatusEnum printStatusField;
    private bool printStatusFieldSpecified;
    private CheckPayment checkDetailField;
    private PhysicalAddress payeeAddrField;
    private IntuitAnyType billPaymentCheckExField;
    public ReferenceType BankAccountRef { get; public set; }
    public PrintStatusEnum PrintStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintStatusSpecified { get; public set; }
    public CheckPayment CheckDetail { get; public set; }
    public PhysicalAddress PayeeAddr { get; public set; }
    public IntuitAnyType BillPaymentCheckEx { get; public set; }
    public ReferenceType get_BankAccountRef();
    public void set_BankAccountRef(ReferenceType value);
    public PrintStatusEnum get_PrintStatus();
    public void set_PrintStatus(PrintStatusEnum value);
    public bool get_PrintStatusSpecified();
    public void set_PrintStatusSpecified(bool value);
    public CheckPayment get_CheckDetail();
    public void set_CheckDetail(CheckPayment value);
    public PhysicalAddress get_PayeeAddr();
    public void set_PayeeAddr(PhysicalAddress value);
    public IntuitAnyType get_BillPaymentCheckEx();
    public void set_BillPaymentCheckEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.BillPaymentCreditCard : object {
    private ReferenceType cCAccountRefField;
    private CreditCardPayment cCDetailField;
    private IntuitAnyType billPaymentCreditCardExField;
    public ReferenceType CCAccountRef { get; public set; }
    public CreditCardPayment CCDetail { get; public set; }
    public IntuitAnyType BillPaymentCreditCardEx { get; public set; }
    public ReferenceType get_CCAccountRef();
    public void set_CCAccountRef(ReferenceType value);
    public CreditCardPayment get_CCDetail();
    public void set_CCDetail(CreditCardPayment value);
    public IntuitAnyType get_BillPaymentCreditCardEx();
    public void set_BillPaymentCreditCardEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.BillPaymentTypeEnum : Enum {
    public int value__;
    public static BillPaymentTypeEnum Check;
    public static BillPaymentTypeEnum CreditCard;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition : CustomFieldDefinition {
    private bool defaultValueField;
    private bool defaultValueFieldSpecified;
    public bool DefaultValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultValueSpecified { get; public set; }
    public bool get_DefaultValue();
    public void set_DefaultValue(bool value);
    public bool get_DefaultValueSpecified();
    public void set_DefaultValueSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Budget : IntuitEntity {
    private string nameField;
    private DateTime startDateField;
    private bool startDateFieldSpecified;
    private DateTime endDateField;
    private bool endDateFieldSpecified;
    private BudgetTypeEnum budgetTypeField;
    private bool budgetTypeFieldSpecified;
    private BudgetEntryTypeEnum budgetEntryTypeField;
    private bool budgetEntryTypeFieldSpecified;
    private bool activeField;
    private bool activeFieldSpecified;
    private BudgetDetail[] budgetDetailField;
    public string Name { get; public set; }
    [XmlElementAttribute]
public DateTime StartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StartDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime EndDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EndDateSpecified { get; public set; }
    public BudgetTypeEnum BudgetType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BudgetTypeSpecified { get; public set; }
    public BudgetEntryTypeEnum BudgetEntryType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BudgetEntryTypeSpecified { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    [XmlElementAttribute("BudgetDetail")]
public BudgetDetail[] BudgetDetail { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public DateTime get_StartDate();
    public void set_StartDate(DateTime value);
    public bool get_StartDateSpecified();
    public void set_StartDateSpecified(bool value);
    public DateTime get_EndDate();
    public void set_EndDate(DateTime value);
    public bool get_EndDateSpecified();
    public void set_EndDateSpecified(bool value);
    public BudgetTypeEnum get_BudgetType();
    public void set_BudgetType(BudgetTypeEnum value);
    public bool get_BudgetTypeSpecified();
    public void set_BudgetTypeSpecified(bool value);
    public BudgetEntryTypeEnum get_BudgetEntryType();
    public void set_BudgetEntryType(BudgetEntryTypeEnum value);
    public bool get_BudgetEntryTypeSpecified();
    public void set_BudgetEntryTypeSpecified(bool value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public BudgetDetail[] get_BudgetDetail();
    public void set_BudgetDetail(BudgetDetail[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.BudgetDetail : object {
    private DateTime budgetDateField;
    private bool budgetDateFieldSpecified;
    private decimal amountField;
    private bool amountFieldSpecified;
    private ReferenceType accountRefField;
    private ReferenceType customerRefField;
    private ReferenceType classRefField;
    private ReferenceType departmentRefField;
    [XmlElementAttribute]
public DateTime BudgetDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BudgetDateSpecified { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public ReferenceType AccountRef { get; public set; }
    public ReferenceType CustomerRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType DepartmentRef { get; public set; }
    public DateTime get_BudgetDate();
    public void set_BudgetDate(DateTime value);
    public bool get_BudgetDateSpecified();
    public void set_BudgetDateSpecified(bool value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_DepartmentRef();
    public void set_DepartmentRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.BudgetEntryTypeEnum : Enum {
    public int value__;
    public static BudgetEntryTypeEnum Yearly;
    public static BudgetEntryTypeEnum Quarterly;
    public static BudgetEntryTypeEnum Monthly;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.BudgetTypeEnum : Enum {
    public int value__;
    public static BudgetTypeEnum ProfitAndLoss;
    public static BudgetTypeEnum BalanceSheet;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Cascade : object {
    private string entityNameField;
    private string idField;
    private NameValue[] keyValueField;
    public string EntityName { get; public set; }
    public string Id { get; public set; }
    [XmlElementAttribute("KeyValue")]
public NameValue[] KeyValue { get; public set; }
    public string get_EntityName();
    public void set_EntityName(string value);
    public string get_Id();
    public void set_Id(string value);
    public NameValue[] get_KeyValue();
    public void set_KeyValue(NameValue[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CascadeResponse : object {
    private Cascade[] cascadeField;
    [XmlElementAttribute("Cascade")]
public Cascade[] Cascade { get; public set; }
    public Cascade[] get_Cascade();
    public void set_Cascade(Cascade[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CashBackInfo : object {
    private ReferenceType accountRefField;
    private decimal amountField;
    private bool amountFieldSpecified;
    private string memoField;
    public ReferenceType AccountRef { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public string Memo { get; public set; }
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public string get_Memo();
    public void set_Memo(string value);
}
public class Intuit.Ipp.Data.CashFlow : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CashPurchase : object {
    private ReferenceType accountRefField;
    public ReferenceType AccountRef { get; public set; }
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CCAVSMatchEnum : Enum {
    public int value__;
    public static CCAVSMatchEnum Fail;
    public static CCAVSMatchEnum NotAvailable;
    public static CCAVSMatchEnum Pass;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CCPaymentStatusEnum : Enum {
    public int value__;
    public static CCPaymentStatusEnum Completed;
    public static CCPaymentStatusEnum Voided;
    public static CCPaymentStatusEnum Unknown;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CCSecurityCodeMatchEnum : Enum {
    public int value__;
    public static CCSecurityCodeMatchEnum Fail;
    public static CCSecurityCodeMatchEnum NotAvailable;
    public static CCSecurityCodeMatchEnum Pass;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CCTxnModeEnum : Enum {
    public int value__;
    public static CCTxnModeEnum CardNotPresent;
    public static CCTxnModeEnum CardPresent;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CCTxnTypeEnum : Enum {
    public int value__;
    public static CCTxnTypeEnum Authorization;
    public static CCTxnTypeEnum Capture;
    public static CCTxnTypeEnum Charge;
    public static CCTxnTypeEnum Refund;
    public static CCTxnTypeEnum VoiceAuthorization;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CDCQuery : object {
    private string entitiesField;
    private DateTime changedSinceField;
    private bool changedSinceFieldSpecified;
    public string Entities { get; public set; }
    public DateTime ChangedSince { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ChangedSinceSpecified { get; public set; }
    public string get_Entities();
    public void set_Entities(string value);
    public DateTime get_ChangedSince();
    public void set_ChangedSince(DateTime value);
    public bool get_ChangedSinceSpecified();
    public void set_ChangedSinceSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CDCResponse : object {
    private Object[] itemsField;
    private int sizeField;
    private bool sizeFieldSpecified;
    private object itemField;
    [XmlElementAttribute("QueryResponse", "Intuit.Ipp.Data.QueryResponse")]
public Object[] AnyIntuitObjects { get; public set; }
    [XmlAttributeAttribute]
public int size { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool sizeSpecified { get; public set; }
    [XmlElementAttribute("Fault", "Intuit.Ipp.Data.Fault")]
public object AnyIntuitObject { get; public set; }
    public Object[] get_AnyIntuitObjects();
    public void set_AnyIntuitObjects(Object[] value);
    public int get_size();
    public void set_size(int value);
    public bool get_sizeSpecified();
    public void set_sizeSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
}
public class Intuit.Ipp.Data.ChangeData : object {
    [CompilerGeneratedAttribute]
private string <Entities>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastModifiedTime>k__BackingField;
    public string Entities { get; public set; }
    public DateTime LastModifiedTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Entities();
    [CompilerGeneratedAttribute]
public void set_Entities(string value);
    [CompilerGeneratedAttribute]
public DateTime get_LastModifiedTime();
    [CompilerGeneratedAttribute]
public void set_LastModifiedTime(DateTime value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ChargeCredit : Transaction {
    private bool creditField;
    private bool creditFieldSpecified;
    private ReferenceType customerRefField;
    private ReferenceType remitToRefField;
    private ReferenceType aRAccountRefField;
    private ReferenceType classRefField;
    private DateTime dueDateField;
    private bool dueDateFieldSpecified;
    private DateTime billedDateField;
    private bool billedDateFieldSpecified;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private IntuitAnyType chargeCreditExField;
    public bool Credit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CreditSpecified { get; public set; }
    public ReferenceType CustomerRef { get; public set; }
    public ReferenceType RemitToRef { get; public set; }
    public ReferenceType ARAccountRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    [XmlElementAttribute]
public DateTime DueDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DueDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime BilledDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BilledDateSpecified { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public IntuitAnyType ChargeCreditEx { get; public set; }
    public bool get_Credit();
    public void set_Credit(bool value);
    public bool get_CreditSpecified();
    public void set_CreditSpecified(bool value);
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public ReferenceType get_RemitToRef();
    public void set_RemitToRef(ReferenceType value);
    public ReferenceType get_ARAccountRef();
    public void set_ARAccountRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public DateTime get_DueDate();
    public void set_DueDate(DateTime value);
    public bool get_DueDateSpecified();
    public void set_DueDateSpecified(bool value);
    public DateTime get_BilledDate();
    public void set_BilledDate(DateTime value);
    public bool get_BilledDateSpecified();
    public void set_BilledDateSpecified(bool value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public IntuitAnyType get_ChargeCreditEx();
    public void set_ChargeCreditEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CheckPayment : object {
    private string checkNumField;
    private string statusField;
    private string nameOnAcctField;
    private string acctNumField;
    private string bankNameField;
    private IntuitAnyType checkPaymentExField;
    public string CheckNum { get; public set; }
    public string Status { get; public set; }
    public string NameOnAcct { get; public set; }
    public string AcctNum { get; public set; }
    public string BankName { get; public set; }
    public IntuitAnyType CheckPaymentEx { get; public set; }
    public string get_CheckNum();
    public void set_CheckNum(string value);
    public string get_Status();
    public void set_Status(string value);
    public string get_NameOnAcct();
    public void set_NameOnAcct(string value);
    public string get_AcctNum();
    public void set_AcctNum(string value);
    public string get_BankName();
    public void set_BankName(string value);
    public IntuitAnyType get_CheckPaymentEx();
    public void set_CheckPaymentEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CheckPurchase : object {
    private ReferenceType accountRefField;
    private PhysicalAddress payeeAddrField;
    private string memoOnCheckField;
    private PrintStatusEnum printStatusField;
    private bool printStatusFieldSpecified;
    public ReferenceType AccountRef { get; public set; }
    public PhysicalAddress PayeeAddr { get; public set; }
    public string MemoOnCheck { get; public set; }
    public PrintStatusEnum PrintStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintStatusSpecified { get; public set; }
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public PhysicalAddress get_PayeeAddr();
    public void set_PayeeAddr(PhysicalAddress value);
    public string get_MemoOnCheck();
    public void set_MemoOnCheck(string value);
    public PrintStatusEnum get_PrintStatus();
    public void set_PrintStatus(PrintStatusEnum value);
    public bool get_PrintStatusSpecified();
    public void set_PrintStatusSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CISRateEnum : Enum {
    public int value__;
    [XmlEnumAttribute("CIS gross rate (0%)")]
public static CISRateEnum CISgrossrate0;
    [XmlEnumAttribute("CIS standard rate (20%)")]
public static CISRateEnum CISstandardrate20;
    [XmlEnumAttribute("CIS higher rate (30%)")]
public static CISRateEnum CIShigherrate30;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Class : IntuitEntity {
    private string nameField;
    private bool subClassField;
    private bool subClassFieldSpecified;
    private ReferenceType parentRefField;
    private string fullyQualifiedNameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private IntuitAnyType classExField;
    public string Name { get; public set; }
    public bool SubClass { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SubClassSpecified { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public IntuitAnyType ClassEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_SubClass();
    public void set_SubClass(bool value);
    public bool get_SubClassSpecified();
    public void set_SubClassSpecified(bool value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public IntuitAnyType get_ClassEx();
    public void set_ClassEx(IntuitAnyType value);
}
public class Intuit.Ipp.Data.ClassSales : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ColData : object {
    private Attribute[] attributesField;
    private string valueField;
    private string idField;
    private string hrefField;
    [XmlArrayItemAttribute]
public Attribute[] Attributes { get; public set; }
    [XmlAttributeAttribute]
public string value { get; public set; }
    [XmlAttributeAttribute]
public string id { get; public set; }
    [XmlAttributeAttribute]
public string href { get; public set; }
    public Attribute[] get_Attributes();
    public void set_Attributes(Attribute[] value);
    public string get_value();
    public void set_value(string value);
    public string get_id();
    public void set_id(string value);
    public string get_href();
    public void set_href(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Column : object {
    private string colTitleField;
    private string colTypeField;
    private NameValue[] metaDataField;
    private Column[] columnsField;
    public string ColTitle { get; public set; }
    public string ColType { get; public set; }
    [XmlElementAttribute("MetaData")]
public NameValue[] MetaData { get; public set; }
    [XmlArrayItemAttribute]
public Column[] Columns { get; public set; }
    public string get_ColTitle();
    public void set_ColTitle(string value);
    public string get_ColType();
    public void set_ColType(string value);
    public NameValue[] get_MetaData();
    public void set_MetaData(NameValue[] value);
    public Column[] get_Columns();
    public void set_Columns(Column[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute("Columns")]
public class Intuit.Ipp.Data.Columns1 : object {
    private Column[] columnField;
    [XmlElementAttribute("Column")]
public Column[] Column { get; public set; }
    public Column[] get_Column();
    public void set_Column(Column[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ColumnTypeEnum : Enum {
    public int value__;
    public static ColumnTypeEnum Account;
    public static ColumnTypeEnum Money;
    public static ColumnTypeEnum Rate;
    public static ColumnTypeEnum Customer;
    public static ColumnTypeEnum Vendor;
    public static ColumnTypeEnum Employee;
    public static ColumnTypeEnum ProductsAndService;
    public static ColumnTypeEnum Department;
    public static ColumnTypeEnum Class;
    public static ColumnTypeEnum String;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Company : IntuitEntity {
    private string companyNameField;
    private string legalNameField;
    private PhysicalAddress companyAddrField;
    private PhysicalAddress customerCommunicationAddrField;
    private PhysicalAddress legalAddrField;
    private EmailAddress companyEmailAddrField;
    private EmailAddress customerCommunicationEmailAddrField;
    private WebSiteAddress companyURLField;
    private TelephoneNumber primaryPhoneField;
    private ContactInfo[] otherContactInfoField;
    private string companyFileNameField;
    private string flavorStratumField;
    private bool sampleFileField;
    private bool sampleFileFieldSpecified;
    private string companyUserIdField;
    private string companyUserAdminEmailField;
    private DateTime companyStartDateField;
    private bool companyStartDateFieldSpecified;
    private string employerIdField;
    private MonthEnum fiscalYearStartMonthField;
    private bool fiscalYearStartMonthFieldSpecified;
    private MonthEnum taxYearStartMonthField;
    private bool taxYearStartMonthFieldSpecified;
    private string qBVersionField;
    private string countryField;
    private PhysicalAddress shipAddrField;
    private PhysicalAddress[] otherAddrField;
    private TelephoneNumber mobileField;
    private TelephoneNumber faxField;
    private EmailAddress emailField;
    private WebSiteAddress webSiteField;
    private DateTime lastImportedTimeField;
    private bool lastImportedTimeFieldSpecified;
    private string supportedLanguagesField;
    private string defaultTimeZoneField;
    private bool multiByteCharsSupportedField;
    private bool multiByteCharsSupportedFieldSpecified;
    private NameValue[] nameValueField;
    private IntuitAnyType companyInfoExField;
    public string CompanyName { get; public set; }
    public string LegalName { get; public set; }
    public PhysicalAddress CompanyAddr { get; public set; }
    public PhysicalAddress CustomerCommunicationAddr { get; public set; }
    public PhysicalAddress LegalAddr { get; public set; }
    public EmailAddress CompanyEmailAddr { get; public set; }
    public EmailAddress CustomerCommunicationEmailAddr { get; public set; }
    public WebSiteAddress CompanyURL { get; public set; }
    public TelephoneNumber PrimaryPhone { get; public set; }
    [XmlElementAttribute("OtherContactInfo")]
public ContactInfo[] OtherContactInfo { get; public set; }
    public string CompanyFileName { get; public set; }
    public string FlavorStratum { get; public set; }
    public bool SampleFile { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SampleFileSpecified { get; public set; }
    public string CompanyUserId { get; public set; }
    public string CompanyUserAdminEmail { get; public set; }
    [XmlElementAttribute]
public DateTime CompanyStartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CompanyStartDateSpecified { get; public set; }
    public string EmployerId { get; public set; }
    public MonthEnum FiscalYearStartMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FiscalYearStartMonthSpecified { get; public set; }
    public MonthEnum TaxYearStartMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxYearStartMonthSpecified { get; public set; }
    public string QBVersion { get; public set; }
    public string Country { get; public set; }
    public PhysicalAddress ShipAddr { get; public set; }
    [XmlElementAttribute("OtherAddr")]
public PhysicalAddress[] OtherAddr { get; public set; }
    public TelephoneNumber Mobile { get; public set; }
    public TelephoneNumber Fax { get; public set; }
    public EmailAddress Email { get; public set; }
    public WebSiteAddress WebSite { get; public set; }
    public DateTime LastImportedTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastImportedTimeSpecified { get; public set; }
    public string SupportedLanguages { get; public set; }
    public string DefaultTimeZone { get; public set; }
    public bool MultiByteCharsSupported { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MultiByteCharsSupportedSpecified { get; public set; }
    [XmlElementAttribute("NameValue")]
public NameValue[] NameValue { get; public set; }
    public IntuitAnyType CompanyInfoEx { get; public set; }
    public string get_CompanyName();
    public void set_CompanyName(string value);
    public string get_LegalName();
    public void set_LegalName(string value);
    public PhysicalAddress get_CompanyAddr();
    public void set_CompanyAddr(PhysicalAddress value);
    public PhysicalAddress get_CustomerCommunicationAddr();
    public void set_CustomerCommunicationAddr(PhysicalAddress value);
    public PhysicalAddress get_LegalAddr();
    public void set_LegalAddr(PhysicalAddress value);
    public EmailAddress get_CompanyEmailAddr();
    public void set_CompanyEmailAddr(EmailAddress value);
    public EmailAddress get_CustomerCommunicationEmailAddr();
    public void set_CustomerCommunicationEmailAddr(EmailAddress value);
    public WebSiteAddress get_CompanyURL();
    public void set_CompanyURL(WebSiteAddress value);
    public TelephoneNumber get_PrimaryPhone();
    public void set_PrimaryPhone(TelephoneNumber value);
    public ContactInfo[] get_OtherContactInfo();
    public void set_OtherContactInfo(ContactInfo[] value);
    public string get_CompanyFileName();
    public void set_CompanyFileName(string value);
    public string get_FlavorStratum();
    public void set_FlavorStratum(string value);
    public bool get_SampleFile();
    public void set_SampleFile(bool value);
    public bool get_SampleFileSpecified();
    public void set_SampleFileSpecified(bool value);
    public string get_CompanyUserId();
    public void set_CompanyUserId(string value);
    public string get_CompanyUserAdminEmail();
    public void set_CompanyUserAdminEmail(string value);
    public DateTime get_CompanyStartDate();
    public void set_CompanyStartDate(DateTime value);
    public bool get_CompanyStartDateSpecified();
    public void set_CompanyStartDateSpecified(bool value);
    public string get_EmployerId();
    public void set_EmployerId(string value);
    public MonthEnum get_FiscalYearStartMonth();
    public void set_FiscalYearStartMonth(MonthEnum value);
    public bool get_FiscalYearStartMonthSpecified();
    public void set_FiscalYearStartMonthSpecified(bool value);
    public MonthEnum get_TaxYearStartMonth();
    public void set_TaxYearStartMonth(MonthEnum value);
    public bool get_TaxYearStartMonthSpecified();
    public void set_TaxYearStartMonthSpecified(bool value);
    public string get_QBVersion();
    public void set_QBVersion(string value);
    public string get_Country();
    public void set_Country(string value);
    public PhysicalAddress get_ShipAddr();
    public void set_ShipAddr(PhysicalAddress value);
    public PhysicalAddress[] get_OtherAddr();
    public void set_OtherAddr(PhysicalAddress[] value);
    public TelephoneNumber get_Mobile();
    public void set_Mobile(TelephoneNumber value);
    public TelephoneNumber get_Fax();
    public void set_Fax(TelephoneNumber value);
    public EmailAddress get_Email();
    public void set_Email(EmailAddress value);
    public WebSiteAddress get_WebSite();
    public void set_WebSite(WebSiteAddress value);
    public DateTime get_LastImportedTime();
    public void set_LastImportedTime(DateTime value);
    public bool get_LastImportedTimeSpecified();
    public void set_LastImportedTimeSpecified(bool value);
    public string get_SupportedLanguages();
    public void set_SupportedLanguages(string value);
    public string get_DefaultTimeZone();
    public void set_DefaultTimeZone(string value);
    public bool get_MultiByteCharsSupported();
    public void set_MultiByteCharsSupported(bool value);
    public bool get_MultiByteCharsSupportedSpecified();
    public void set_MultiByteCharsSupportedSpecified(bool value);
    public NameValue[] get_NameValue();
    public void set_NameValue(NameValue[] value);
    public IntuitAnyType get_CompanyInfoEx();
    public void set_CompanyInfoEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CompanyAccountingPrefs : object {
    private bool useAccountNumbersField;
    private bool useAccountNumbersFieldSpecified;
    private ReferenceType defaultARAccountField;
    private ReferenceType defaultAPAccountField;
    private bool requiresAccountsField;
    private bool requiresAccountsFieldSpecified;
    private bool trackDepartmentsField;
    private bool trackDepartmentsFieldSpecified;
    private string departmentTerminologyField;
    private bool classTrackingPerTxnField;
    private bool classTrackingPerTxnFieldSpecified;
    private bool classTrackingPerTxnLineField;
    private bool classTrackingPerTxnLineFieldSpecified;
    private bool autoJournalEntryNumberField;
    private bool autoJournalEntryNumberFieldSpecified;
    private MonthEnum firstMonthOfFiscalYearField;
    private bool firstMonthOfFiscalYearFieldSpecified;
    private MonthEnum taxYearMonthField;
    private bool taxYearMonthFieldSpecified;
    private string taxFormField;
    private DateTime bookCloseDateField;
    private bool bookCloseDateFieldSpecified;
    private ContactInfo[] otherContactInfoField;
    private string customerTerminologyField;
    public bool UseAccountNumbers { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UseAccountNumbersSpecified { get; public set; }
    public ReferenceType DefaultARAccount { get; public set; }
    public ReferenceType DefaultAPAccount { get; public set; }
    public bool RequiresAccounts { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RequiresAccountsSpecified { get; public set; }
    public bool TrackDepartments { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackDepartmentsSpecified { get; public set; }
    public string DepartmentTerminology { get; public set; }
    public bool ClassTrackingPerTxn { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ClassTrackingPerTxnSpecified { get; public set; }
    public bool ClassTrackingPerTxnLine { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ClassTrackingPerTxnLineSpecified { get; public set; }
    public bool AutoJournalEntryNumber { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AutoJournalEntryNumberSpecified { get; public set; }
    public MonthEnum FirstMonthOfFiscalYear { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FirstMonthOfFiscalYearSpecified { get; public set; }
    public MonthEnum TaxYearMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxYearMonthSpecified { get; public set; }
    public string TaxForm { get; public set; }
    [XmlElementAttribute]
public DateTime BookCloseDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BookCloseDateSpecified { get; public set; }
    [XmlElementAttribute("OtherContactInfo")]
public ContactInfo[] OtherContactInfo { get; public set; }
    public string CustomerTerminology { get; public set; }
    public bool get_UseAccountNumbers();
    public void set_UseAccountNumbers(bool value);
    public bool get_UseAccountNumbersSpecified();
    public void set_UseAccountNumbersSpecified(bool value);
    public ReferenceType get_DefaultARAccount();
    public void set_DefaultARAccount(ReferenceType value);
    public ReferenceType get_DefaultAPAccount();
    public void set_DefaultAPAccount(ReferenceType value);
    public bool get_RequiresAccounts();
    public void set_RequiresAccounts(bool value);
    public bool get_RequiresAccountsSpecified();
    public void set_RequiresAccountsSpecified(bool value);
    public bool get_TrackDepartments();
    public void set_TrackDepartments(bool value);
    public bool get_TrackDepartmentsSpecified();
    public void set_TrackDepartmentsSpecified(bool value);
    public string get_DepartmentTerminology();
    public void set_DepartmentTerminology(string value);
    public bool get_ClassTrackingPerTxn();
    public void set_ClassTrackingPerTxn(bool value);
    public bool get_ClassTrackingPerTxnSpecified();
    public void set_ClassTrackingPerTxnSpecified(bool value);
    public bool get_ClassTrackingPerTxnLine();
    public void set_ClassTrackingPerTxnLine(bool value);
    public bool get_ClassTrackingPerTxnLineSpecified();
    public void set_ClassTrackingPerTxnLineSpecified(bool value);
    public bool get_AutoJournalEntryNumber();
    public void set_AutoJournalEntryNumber(bool value);
    public bool get_AutoJournalEntryNumberSpecified();
    public void set_AutoJournalEntryNumberSpecified(bool value);
    public MonthEnum get_FirstMonthOfFiscalYear();
    public void set_FirstMonthOfFiscalYear(MonthEnum value);
    public bool get_FirstMonthOfFiscalYearSpecified();
    public void set_FirstMonthOfFiscalYearSpecified(bool value);
    public MonthEnum get_TaxYearMonth();
    public void set_TaxYearMonth(MonthEnum value);
    public bool get_TaxYearMonthSpecified();
    public void set_TaxYearMonthSpecified(bool value);
    public string get_TaxForm();
    public void set_TaxForm(string value);
    public DateTime get_BookCloseDate();
    public void set_BookCloseDate(DateTime value);
    public bool get_BookCloseDateSpecified();
    public void set_BookCloseDateSpecified(bool value);
    public ContactInfo[] get_OtherContactInfo();
    public void set_OtherContactInfo(ContactInfo[] value);
    public string get_CustomerTerminology();
    public void set_CustomerTerminology(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CompanyCurrency : IntuitEntity {
    private string codeField;
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private IntuitAnyType companyCurrencyExField;
    public string Code { get; public set; }
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public IntuitAnyType CompanyCurrencyEx { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public IntuitAnyType get_CompanyCurrencyEx();
    public void set_CompanyCurrencyEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CompanyInfo : IntuitEntity {
    private string companyNameField;
    private string legalNameField;
    private PhysicalAddress companyAddrField;
    private PhysicalAddress customerCommunicationAddrField;
    private PhysicalAddress legalAddrField;
    private EmailAddress companyEmailAddrField;
    private EmailAddress customerCommunicationEmailAddrField;
    private WebSiteAddress companyURLField;
    private TelephoneNumber primaryPhoneField;
    private ContactInfo[] otherContactInfoField;
    private string companyFileNameField;
    private string flavorStratumField;
    private bool sampleFileField;
    private bool sampleFileFieldSpecified;
    private string companyUserIdField;
    private string companyUserAdminEmailField;
    private DateTime companyStartDateField;
    private bool companyStartDateFieldSpecified;
    private string employerIdField;
    private MonthEnum fiscalYearStartMonthField;
    private bool fiscalYearStartMonthFieldSpecified;
    private MonthEnum taxYearStartMonthField;
    private bool taxYearStartMonthFieldSpecified;
    private string qBVersionField;
    private string countryField;
    private PhysicalAddress shipAddrField;
    private PhysicalAddress[] otherAddrField;
    private TelephoneNumber mobileField;
    private TelephoneNumber faxField;
    private EmailAddress emailField;
    private WebSiteAddress webAddrField;
    private DateTime lastImportedTimeField;
    private bool lastImportedTimeFieldSpecified;
    private DateTime lastSyncTimeField;
    private bool lastSyncTimeFieldSpecified;
    private string supportedLanguagesField;
    private string defaultTimeZoneField;
    private bool multiByteCharsSupportedField;
    private bool multiByteCharsSupportedFieldSpecified;
    private NameValue[] nameValueField;
    private FifoCalculationStatus fifoCalculationStatusField;
    private bool fifoCalculationStatusFieldSpecified;
    private IntuitAnyType companyInfoExField;
    public string CompanyName { get; public set; }
    public string LegalName { get; public set; }
    public PhysicalAddress CompanyAddr { get; public set; }
    public PhysicalAddress CustomerCommunicationAddr { get; public set; }
    public PhysicalAddress LegalAddr { get; public set; }
    public EmailAddress CompanyEmailAddr { get; public set; }
    public EmailAddress CustomerCommunicationEmailAddr { get; public set; }
    public WebSiteAddress CompanyURL { get; public set; }
    public TelephoneNumber PrimaryPhone { get; public set; }
    [XmlElementAttribute("OtherContactInfo")]
public ContactInfo[] OtherContactInfo { get; public set; }
    public string CompanyFileName { get; public set; }
    public string FlavorStratum { get; public set; }
    public bool SampleFile { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SampleFileSpecified { get; public set; }
    public string CompanyUserId { get; public set; }
    public string CompanyUserAdminEmail { get; public set; }
    [XmlElementAttribute]
public DateTime CompanyStartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CompanyStartDateSpecified { get; public set; }
    public string EmployerId { get; public set; }
    public MonthEnum FiscalYearStartMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FiscalYearStartMonthSpecified { get; public set; }
    public MonthEnum TaxYearStartMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxYearStartMonthSpecified { get; public set; }
    public string QBVersion { get; public set; }
    public string Country { get; public set; }
    public PhysicalAddress ShipAddr { get; public set; }
    [XmlElementAttribute("OtherAddr")]
public PhysicalAddress[] OtherAddr { get; public set; }
    public TelephoneNumber Mobile { get; public set; }
    public TelephoneNumber Fax { get; public set; }
    public EmailAddress Email { get; public set; }
    public WebSiteAddress WebAddr { get; public set; }
    public DateTime LastImportedTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastImportedTimeSpecified { get; public set; }
    public DateTime LastSyncTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastSyncTimeSpecified { get; public set; }
    public string SupportedLanguages { get; public set; }
    public string DefaultTimeZone { get; public set; }
    public bool MultiByteCharsSupported { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MultiByteCharsSupportedSpecified { get; public set; }
    [XmlElementAttribute("NameValue")]
public NameValue[] NameValue { get; public set; }
    public FifoCalculationStatus FifoCalculationStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FifoCalculationStatusSpecified { get; public set; }
    public IntuitAnyType CompanyInfoEx { get; public set; }
    public string get_CompanyName();
    public void set_CompanyName(string value);
    public string get_LegalName();
    public void set_LegalName(string value);
    public PhysicalAddress get_CompanyAddr();
    public void set_CompanyAddr(PhysicalAddress value);
    public PhysicalAddress get_CustomerCommunicationAddr();
    public void set_CustomerCommunicationAddr(PhysicalAddress value);
    public PhysicalAddress get_LegalAddr();
    public void set_LegalAddr(PhysicalAddress value);
    public EmailAddress get_CompanyEmailAddr();
    public void set_CompanyEmailAddr(EmailAddress value);
    public EmailAddress get_CustomerCommunicationEmailAddr();
    public void set_CustomerCommunicationEmailAddr(EmailAddress value);
    public WebSiteAddress get_CompanyURL();
    public void set_CompanyURL(WebSiteAddress value);
    public TelephoneNumber get_PrimaryPhone();
    public void set_PrimaryPhone(TelephoneNumber value);
    public ContactInfo[] get_OtherContactInfo();
    public void set_OtherContactInfo(ContactInfo[] value);
    public string get_CompanyFileName();
    public void set_CompanyFileName(string value);
    public string get_FlavorStratum();
    public void set_FlavorStratum(string value);
    public bool get_SampleFile();
    public void set_SampleFile(bool value);
    public bool get_SampleFileSpecified();
    public void set_SampleFileSpecified(bool value);
    public string get_CompanyUserId();
    public void set_CompanyUserId(string value);
    public string get_CompanyUserAdminEmail();
    public void set_CompanyUserAdminEmail(string value);
    public DateTime get_CompanyStartDate();
    public void set_CompanyStartDate(DateTime value);
    public bool get_CompanyStartDateSpecified();
    public void set_CompanyStartDateSpecified(bool value);
    public string get_EmployerId();
    public void set_EmployerId(string value);
    public MonthEnum get_FiscalYearStartMonth();
    public void set_FiscalYearStartMonth(MonthEnum value);
    public bool get_FiscalYearStartMonthSpecified();
    public void set_FiscalYearStartMonthSpecified(bool value);
    public MonthEnum get_TaxYearStartMonth();
    public void set_TaxYearStartMonth(MonthEnum value);
    public bool get_TaxYearStartMonthSpecified();
    public void set_TaxYearStartMonthSpecified(bool value);
    public string get_QBVersion();
    public void set_QBVersion(string value);
    public string get_Country();
    public void set_Country(string value);
    public PhysicalAddress get_ShipAddr();
    public void set_ShipAddr(PhysicalAddress value);
    public PhysicalAddress[] get_OtherAddr();
    public void set_OtherAddr(PhysicalAddress[] value);
    public TelephoneNumber get_Mobile();
    public void set_Mobile(TelephoneNumber value);
    public TelephoneNumber get_Fax();
    public void set_Fax(TelephoneNumber value);
    public EmailAddress get_Email();
    public void set_Email(EmailAddress value);
    public WebSiteAddress get_WebAddr();
    public void set_WebAddr(WebSiteAddress value);
    public DateTime get_LastImportedTime();
    public void set_LastImportedTime(DateTime value);
    public bool get_LastImportedTimeSpecified();
    public void set_LastImportedTimeSpecified(bool value);
    public DateTime get_LastSyncTime();
    public void set_LastSyncTime(DateTime value);
    public bool get_LastSyncTimeSpecified();
    public void set_LastSyncTimeSpecified(bool value);
    public string get_SupportedLanguages();
    public void set_SupportedLanguages(string value);
    public string get_DefaultTimeZone();
    public void set_DefaultTimeZone(string value);
    public bool get_MultiByteCharsSupported();
    public void set_MultiByteCharsSupported(bool value);
    public bool get_MultiByteCharsSupportedSpecified();
    public void set_MultiByteCharsSupportedSpecified(bool value);
    public NameValue[] get_NameValue();
    public void set_NameValue(NameValue[] value);
    public FifoCalculationStatus get_FifoCalculationStatus();
    public void set_FifoCalculationStatus(FifoCalculationStatus value);
    public bool get_FifoCalculationStatusSpecified();
    public void set_FifoCalculationStatusSpecified(bool value);
    public IntuitAnyType get_CompanyInfoEx();
    public void set_CompanyInfoEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ContactInfo : object {
    private ContactTypeEnum typeField;
    private bool typeFieldSpecified;
    private object itemField;
    public ContactTypeEnum Type { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TypeSpecified { get; public set; }
    [XmlElementAttribute("Email", "Intuit.Ipp.Data.EmailAddress")]
[XmlElementAttribute("OtherContact", "Intuit.Ipp.Data.GenericContactType")]
[XmlElementAttribute("Telephone", "Intuit.Ipp.Data.TelephoneNumber")]
[XmlElementAttribute("WebSite", "Intuit.Ipp.Data.WebSiteAddress")]
public object AnyIntuitObject { get; public set; }
    public ContactTypeEnum get_Type();
    public void set_Type(ContactTypeEnum value);
    public bool get_TypeSpecified();
    public void set_TypeSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ContactTypeEnum : Enum {
    public int value__;
    public static ContactTypeEnum TelephoneNumber;
    public static ContactTypeEnum EmailAddress;
    public static ContactTypeEnum WebSiteAddress;
    public static ContactTypeEnum GenericContactType;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ConvenienceFeeDetail : IntuitEntity {
    private ConvenienceFeeTypeEnum convenienceFeeTypeField;
    private bool convenienceFeeTypeFieldSpecified;
    private decimal convenienceFeePercentField;
    private bool convenienceFeePercentFieldSpecified;
    public ConvenienceFeeTypeEnum ConvenienceFeeType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ConvenienceFeeTypeSpecified { get; public set; }
    public decimal ConvenienceFeePercent { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ConvenienceFeePercentSpecified { get; public set; }
    public ConvenienceFeeTypeEnum get_ConvenienceFeeType();
    public void set_ConvenienceFeeType(ConvenienceFeeTypeEnum value);
    public bool get_ConvenienceFeeTypeSpecified();
    public void set_ConvenienceFeeTypeSpecified(bool value);
    public decimal get_ConvenienceFeePercent();
    public void set_ConvenienceFeePercent(decimal value);
    public bool get_ConvenienceFeePercentSpecified();
    public void set_ConvenienceFeePercentSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ConvenienceFeeTypeEnum : Enum {
    public int value__;
    public static ConvenienceFeeTypeEnum MANUAL;
    public static ConvenienceFeeTypeEnum AUTO;
    public static ConvenienceFeeTypeEnum PAID;
    public static ConvenienceFeeTypeEnum DISABLED;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CreditCardPayment : object {
    private CreditChargeInfo creditChargeInfoField;
    private CreditChargeResponse creditChargeResponseField;
    public CreditChargeInfo CreditChargeInfo { get; public set; }
    public CreditChargeResponse CreditChargeResponse { get; public set; }
    public CreditChargeInfo get_CreditChargeInfo();
    public void set_CreditChargeInfo(CreditChargeInfo value);
    public CreditChargeResponse get_CreditChargeResponse();
    public void set_CreditChargeResponse(CreditChargeResponse value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CreditCardPaymentTxn : Transaction {
    private ReferenceType creditCardAccountRefField;
    private ReferenceType bankAccountRefField;
    private decimal amountField;
    private bool amountFieldSpecified;
    private ReferenceType vendorRefField;
    private string checkNumField;
    private PrintStatusEnum printStatusField;
    private bool printStatusFieldSpecified;
    private string memoField;
    private IntuitAnyType creditCardPaymentExField;
    public ReferenceType CreditCardAccountRef { get; public set; }
    public ReferenceType BankAccountRef { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public ReferenceType VendorRef { get; public set; }
    public string CheckNum { get; public set; }
    public PrintStatusEnum PrintStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintStatusSpecified { get; public set; }
    public string Memo { get; public set; }
    public IntuitAnyType CreditCardPaymentEx { get; public set; }
    public ReferenceType get_CreditCardAccountRef();
    public void set_CreditCardAccountRef(ReferenceType value);
    public ReferenceType get_BankAccountRef();
    public void set_BankAccountRef(ReferenceType value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public ReferenceType get_VendorRef();
    public void set_VendorRef(ReferenceType value);
    public string get_CheckNum();
    public void set_CheckNum(string value);
    public PrintStatusEnum get_PrintStatus();
    public void set_PrintStatus(PrintStatusEnum value);
    public bool get_PrintStatusSpecified();
    public void set_PrintStatusSpecified(bool value);
    public string get_Memo();
    public void set_Memo(string value);
    public IntuitAnyType get_CreditCardPaymentEx();
    public void set_CreditCardPaymentEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CreditCardPurchase : object {
    private ReferenceType accountRefField;
    private bool creditField;
    private bool creditFieldSpecified;
    public ReferenceType AccountRef { get; public set; }
    public bool Credit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CreditSpecified { get; public set; }
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public bool get_Credit();
    public void set_Credit(bool value);
    public bool get_CreditSpecified();
    public void set_CreditSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CreditCardTypeEnum : Enum {
    public int value__;
    public static CreditCardTypeEnum AmEx;
    public static CreditCardTypeEnum DebitCard;
    public static CreditCardTypeEnum Discover;
    public static CreditCardTypeEnum GiftCard;
    public static CreditCardTypeEnum MasterCard;
    public static CreditCardTypeEnum OtherCreditCard;
    public static CreditCardTypeEnum Visa;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CreditChargeInfo : object {
    private string numberField;
    private string typeField;
    private string nameOnAcctField;
    private int ccExpiryMonthField;
    private bool ccExpiryMonthFieldSpecified;
    private int ccExpiryYearField;
    private bool ccExpiryYearFieldSpecified;
    private string billAddrStreetField;
    private string postalCodeField;
    private string commercialCardCodeField;
    private CCTxnModeEnum cCTxnModeField;
    private bool cCTxnModeFieldSpecified;
    private CCTxnTypeEnum cCTxnTypeField;
    private bool cCTxnTypeFieldSpecified;
    private string prevCCTransIdField;
    private decimal amountField;
    private bool amountFieldSpecified;
    private bool processPaymentField;
    private bool processPaymentFieldSpecified;
    private IntuitAnyType creditCardChargeInfoExField;
    public string Number { get; public set; }
    public string Type { get; public set; }
    public string NameOnAcct { get; public set; }
    public int CcExpiryMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CcExpiryMonthSpecified { get; public set; }
    public int CcExpiryYear { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CcExpiryYearSpecified { get; public set; }
    public string BillAddrStreet { get; public set; }
    public string PostalCode { get; public set; }
    public string CommercialCardCode { get; public set; }
    public CCTxnModeEnum CCTxnMode { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CCTxnModeSpecified { get; public set; }
    public CCTxnTypeEnum CCTxnType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CCTxnTypeSpecified { get; public set; }
    public string PrevCCTransId { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public bool ProcessPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ProcessPaymentSpecified { get; public set; }
    public IntuitAnyType CreditCardChargeInfoEx { get; public set; }
    public string get_Number();
    public void set_Number(string value);
    public string get_Type();
    public void set_Type(string value);
    public string get_NameOnAcct();
    public void set_NameOnAcct(string value);
    public int get_CcExpiryMonth();
    public void set_CcExpiryMonth(int value);
    public bool get_CcExpiryMonthSpecified();
    public void set_CcExpiryMonthSpecified(bool value);
    public int get_CcExpiryYear();
    public void set_CcExpiryYear(int value);
    public bool get_CcExpiryYearSpecified();
    public void set_CcExpiryYearSpecified(bool value);
    public string get_BillAddrStreet();
    public void set_BillAddrStreet(string value);
    public string get_PostalCode();
    public void set_PostalCode(string value);
    public string get_CommercialCardCode();
    public void set_CommercialCardCode(string value);
    public CCTxnModeEnum get_CCTxnMode();
    public void set_CCTxnMode(CCTxnModeEnum value);
    public bool get_CCTxnModeSpecified();
    public void set_CCTxnModeSpecified(bool value);
    public CCTxnTypeEnum get_CCTxnType();
    public void set_CCTxnType(CCTxnTypeEnum value);
    public bool get_CCTxnTypeSpecified();
    public void set_CCTxnTypeSpecified(bool value);
    public string get_PrevCCTransId();
    public void set_PrevCCTransId(string value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public bool get_ProcessPayment();
    public void set_ProcessPayment(bool value);
    public bool get_ProcessPaymentSpecified();
    public void set_ProcessPaymentSpecified(bool value);
    public IntuitAnyType get_CreditCardChargeInfoEx();
    public void set_CreditCardChargeInfoEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CreditChargeResponse : object {
    private string cCProcessorField;
    private string cCTransIdField;
    private CCPaymentStatusEnum statusField;
    private bool statusFieldSpecified;
    private int resultCodeField;
    private bool resultCodeFieldSpecified;
    private string resultMsgField;
    private string merchantAcctNumField;
    private CCSecurityCodeMatchEnum cardSecurityCodeMatchField;
    private bool cardSecurityCodeMatchFieldSpecified;
    private string authCodeField;
    private CCAVSMatchEnum avsStreetField;
    private bool avsStreetFieldSpecified;
    private CCAVSMatchEnum avsZipField;
    private bool avsZipFieldSpecified;
    private string securityCodeField;
    private string reconBatchIdField;
    private int paymentGroupingCodeField;
    private bool paymentGroupingCodeFieldSpecified;
    private DateTime txnAuthorizationTimeField;
    private bool txnAuthorizationTimeFieldSpecified;
    private int txnAuthorizationStampField;
    private bool txnAuthorizationStampFieldSpecified;
    private string clientTransIDField;
    private IntuitAnyType creditChargeResponseExField;
    public string CCProcessor { get; public set; }
    public string CCTransId { get; public set; }
    public CCPaymentStatusEnum Status { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StatusSpecified { get; public set; }
    public int ResultCode { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ResultCodeSpecified { get; public set; }
    public string ResultMsg { get; public set; }
    public string MerchantAcctNum { get; public set; }
    public CCSecurityCodeMatchEnum CardSecurityCodeMatch { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CardSecurityCodeMatchSpecified { get; public set; }
    public string AuthCode { get; public set; }
    public CCAVSMatchEnum AvsStreet { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AvsStreetSpecified { get; public set; }
    public CCAVSMatchEnum AvsZip { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AvsZipSpecified { get; public set; }
    public string SecurityCode { get; public set; }
    public string ReconBatchId { get; public set; }
    public int PaymentGroupingCode { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PaymentGroupingCodeSpecified { get; public set; }
    public DateTime TxnAuthorizationTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TxnAuthorizationTimeSpecified { get; public set; }
    public int TxnAuthorizationStamp { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TxnAuthorizationStampSpecified { get; public set; }
    public string ClientTransID { get; public set; }
    public IntuitAnyType CreditChargeResponseEx { get; public set; }
    public string get_CCProcessor();
    public void set_CCProcessor(string value);
    public string get_CCTransId();
    public void set_CCTransId(string value);
    public CCPaymentStatusEnum get_Status();
    public void set_Status(CCPaymentStatusEnum value);
    public bool get_StatusSpecified();
    public void set_StatusSpecified(bool value);
    public int get_ResultCode();
    public void set_ResultCode(int value);
    public bool get_ResultCodeSpecified();
    public void set_ResultCodeSpecified(bool value);
    public string get_ResultMsg();
    public void set_ResultMsg(string value);
    public string get_MerchantAcctNum();
    public void set_MerchantAcctNum(string value);
    public CCSecurityCodeMatchEnum get_CardSecurityCodeMatch();
    public void set_CardSecurityCodeMatch(CCSecurityCodeMatchEnum value);
    public bool get_CardSecurityCodeMatchSpecified();
    public void set_CardSecurityCodeMatchSpecified(bool value);
    public string get_AuthCode();
    public void set_AuthCode(string value);
    public CCAVSMatchEnum get_AvsStreet();
    public void set_AvsStreet(CCAVSMatchEnum value);
    public bool get_AvsStreetSpecified();
    public void set_AvsStreetSpecified(bool value);
    public CCAVSMatchEnum get_AvsZip();
    public void set_AvsZip(CCAVSMatchEnum value);
    public bool get_AvsZipSpecified();
    public void set_AvsZipSpecified(bool value);
    public string get_SecurityCode();
    public void set_SecurityCode(string value);
    public string get_ReconBatchId();
    public void set_ReconBatchId(string value);
    public int get_PaymentGroupingCode();
    public void set_PaymentGroupingCode(int value);
    public bool get_PaymentGroupingCodeSpecified();
    public void set_PaymentGroupingCodeSpecified(bool value);
    public DateTime get_TxnAuthorizationTime();
    public void set_TxnAuthorizationTime(DateTime value);
    public bool get_TxnAuthorizationTimeSpecified();
    public void set_TxnAuthorizationTimeSpecified(bool value);
    public int get_TxnAuthorizationStamp();
    public void set_TxnAuthorizationStamp(int value);
    public bool get_TxnAuthorizationStampSpecified();
    public void set_TxnAuthorizationStampSpecified(bool value);
    public string get_ClientTransID();
    public void set_ClientTransID(string value);
    public IntuitAnyType get_CreditChargeResponseEx();
    public void set_CreditChargeResponseEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CreditMemo : SalesTransaction {
    private decimal remainingCreditField;
    private bool remainingCreditFieldSpecified;
    private ReferenceType invoiceRefField;
    private IntuitAnyType creditMemoExField;
    public decimal RemainingCredit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RemainingCreditSpecified { get; public set; }
    public ReferenceType InvoiceRef { get; public set; }
    public IntuitAnyType CreditMemoEx { get; public set; }
    public decimal get_RemainingCredit();
    public void set_RemainingCredit(decimal value);
    public bool get_RemainingCreditSpecified();
    public void set_RemainingCreditSpecified(bool value);
    public ReferenceType get_InvoiceRef();
    public void set_InvoiceRef(ReferenceType value);
    public IntuitAnyType get_CreditMemoEx();
    public void set_CreditMemoEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Currency : IntuitEntity {
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private currencyCode codeField;
    private bool codeFieldSpecified;
    private string separatorField;
    private string formatField;
    private string decimalPlacesField;
    private string decimalSeparatorField;
    private string symbolField;
    private SymbolPositionEnum symbolPositionField;
    private bool symbolPositionFieldSpecified;
    private bool userDefinedField;
    private bool userDefinedFieldSpecified;
    private decimal exchangeRateField;
    private bool exchangeRateFieldSpecified;
    private DateTime asOfDateField;
    private bool asOfDateFieldSpecified;
    private IntuitAnyType currencyExField;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public currencyCode Code { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CodeSpecified { get; public set; }
    public string Separator { get; public set; }
    public string Format { get; public set; }
    [XmlElementAttribute]
public string DecimalPlaces { get; public set; }
    public string DecimalSeparator { get; public set; }
    public string Symbol { get; public set; }
    public SymbolPositionEnum SymbolPosition { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SymbolPositionSpecified { get; public set; }
    public bool UserDefined { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UserDefinedSpecified { get; public set; }
    public decimal ExchangeRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ExchangeRateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime AsOfDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AsOfDateSpecified { get; public set; }
    public IntuitAnyType CurrencyEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public currencyCode get_Code();
    public void set_Code(currencyCode value);
    public bool get_CodeSpecified();
    public void set_CodeSpecified(bool value);
    public string get_Separator();
    public void set_Separator(string value);
    public string get_Format();
    public void set_Format(string value);
    public string get_DecimalPlaces();
    public void set_DecimalPlaces(string value);
    public string get_DecimalSeparator();
    public void set_DecimalSeparator(string value);
    public string get_Symbol();
    public void set_Symbol(string value);
    public SymbolPositionEnum get_SymbolPosition();
    public void set_SymbolPosition(SymbolPositionEnum value);
    public bool get_SymbolPositionSpecified();
    public void set_SymbolPositionSpecified(bool value);
    public bool get_UserDefined();
    public void set_UserDefined(bool value);
    public bool get_UserDefinedSpecified();
    public void set_UserDefinedSpecified(bool value);
    public decimal get_ExchangeRate();
    public void set_ExchangeRate(decimal value);
    public bool get_ExchangeRateSpecified();
    public void set_ExchangeRateSpecified(bool value);
    public DateTime get_AsOfDate();
    public void set_AsOfDate(DateTime value);
    public bool get_AsOfDateSpecified();
    public void set_AsOfDateSpecified(bool value);
    public IntuitAnyType get_CurrencyEx();
    public void set_CurrencyEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.currencyCode : Enum {
    public int value__;
    public static currencyCode AED;
    public static currencyCode AFA;
    public static currencyCode ALL;
    public static currencyCode ANG;
    public static currencyCode AOA;
    public static currencyCode AOK;
    public static currencyCode ARP;
    public static currencyCode ARS;
    public static currencyCode AMD;
    public static currencyCode ATS;
    public static currencyCode AUD;
    public static currencyCode AWF;
    public static currencyCode AWG;
    public static currencyCode AZM;
    public static currencyCode BAM;
    public static currencyCode BBD;
    public static currencyCode BDT;
    public static currencyCode BEF;
    public static currencyCode BGL;
    public static currencyCode BHD;
    public static currencyCode BIF;
    public static currencyCode BMD;
    public static currencyCode BND;
    public static currencyCode BOB;
    public static currencyCode BRC;
    public static currencyCode BRL;
    public static currencyCode BSD;
    public static currencyCode BTN;
    public static currencyCode BUK;
    public static currencyCode BWP;
    public static currencyCode BYR;
    public static currencyCode BYB;
    public static currencyCode BZD;
    public static currencyCode CAD;
    public static currencyCode CDF;
    public static currencyCode CHF;
    public static currencyCode CLP;
    public static currencyCode CNY;
    public static currencyCode COP;
    public static currencyCode CRC;
    public static currencyCode CZK;
    public static currencyCode CUP;
    public static currencyCode CVE;
    public static currencyCode DDM;
    public static currencyCode DEM;
    public static currencyCode DJF;
    public static currencyCode DKK;
    public static currencyCode DOP;
    public static currencyCode DZD;
    public static currencyCode ECS;
    public static currencyCode EEK;
    public static currencyCode EGP;
    public static currencyCode ERN;
    public static currencyCode ESP;
    public static currencyCode ETB;
    public static currencyCode EUR;
    public static currencyCode FIM;
    public static currencyCode FJD;
    public static currencyCode FKP;
    public static currencyCode FRF;
    public static currencyCode GBP;
    public static currencyCode GEL;
    public static currencyCode GHC;
    public static currencyCode GIP;
    public static currencyCode GMD;
    public static currencyCode GNF;
    public static currencyCode GRD;
    public static currencyCode GTQ;
    public static currencyCode GWP;
    public static currencyCode GYD;
    public static currencyCode HKD;
    public static currencyCode HNL;
    public static currencyCode HRK;
    public static currencyCode HTG;
    public static currencyCode HUF;
    public static currencyCode IDR;
    public static currencyCode IEP;
    public static currencyCode ILS;
    public static currencyCode INR;
    public static currencyCode IQD;
    public static currencyCode IRR;
    public static currencyCode ISK;
    public static currencyCode ITL;
    public static currencyCode JMD;
    public static currencyCode JOD;
    public static currencyCode KES;
    public static currencyCode KGS;
    public static currencyCode KHR;
    public static currencyCode KMF;
    public static currencyCode KPW;
    public static currencyCode KRW;
    public static currencyCode KWD;
    public static currencyCode KYD;
    public static currencyCode KZT;
    public static currencyCode LAK;
    public static currencyCode LBP;
    public static currencyCode LKR;
    public static currencyCode LRD;
    public static currencyCode LSL;
    public static currencyCode LTL;
    public static currencyCode LUF;
    public static currencyCode LVL;
    public static currencyCode LYD;
    public static currencyCode MAD;
    public static currencyCode MDL;
    public static currencyCode MGF;
    public static currencyCode MKD;
    public static currencyCode MMK;
    public static currencyCode MNT;
    public static currencyCode MOP;
    public static currencyCode MRO;
    public static currencyCode MUR;
    public static currencyCode MVR;
    public static currencyCode MWK;
    public static currencyCode MXN;
    public static currencyCode MXP;
    public static currencyCode MYR;
    public static currencyCode MZM;
    public static currencyCode NAD;
    public static currencyCode NGN;
    public static currencyCode NIC;
    public static currencyCode NIO;
    public static currencyCode NLG;
    public static currencyCode NOK;
    public static currencyCode NPR;
    public static currencyCode NZD;
    public static currencyCode OMR;
    public static currencyCode PAB;
    public static currencyCode PEN;
    public static currencyCode PES;
    public static currencyCode PGK;
    public static currencyCode PHP;
    public static currencyCode PKR;
    public static currencyCode PLN;
    public static currencyCode PLZ;
    public static currencyCode PTE;
    public static currencyCode PYG;
    public static currencyCode QAR;
    public static currencyCode ROL;
    public static currencyCode RUR;
    public static currencyCode RWF;
    public static currencyCode SAR;
    public static currencyCode SBD;
    public static currencyCode SCR;
    public static currencyCode SDD;
    public static currencyCode SDP;
    public static currencyCode SEK;
    public static currencyCode SGD;
    public static currencyCode SHP;
    public static currencyCode SIT;
    public static currencyCode SKK;
    public static currencyCode SLL;
    public static currencyCode SM;
    public static currencyCode SOS;
    public static currencyCode SRG;
    public static currencyCode STD;
    public static currencyCode SUR;
    public static currencyCode SVC;
    public static currencyCode SYP;
    public static currencyCode SZL;
    public static currencyCode THB;
    public static currencyCode TMM;
    public static currencyCode TND;
    public static currencyCode TOP;
    public static currencyCode TRL;
    public static currencyCode TTD;
    public static currencyCode TWD;
    public static currencyCode TZS;
    public static currencyCode UAH;
    public static currencyCode UGS;
    public static currencyCode UGX;
    public static currencyCode USD;
    public static currencyCode UYP;
    public static currencyCode UYU;
    public static currencyCode UZS;
    public static currencyCode VND;
    public static currencyCode VUV;
    public static currencyCode VAL;
    public static currencyCode WST;
    public static currencyCode XAF;
    public static currencyCode XCD;
    public static currencyCode XOF;
    public static currencyCode XPF;
    public static currencyCode YER;
    public static currencyCode YUD;
    public static currencyCode ZAR;
    public static currencyCode ZMK;
    public static currencyCode ZRZ;
    public static currencyCode ZWD;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CurrencyPrefs : object {
    private bool multiCurrencyEnabledField;
    private bool multiCurrencyEnabledFieldSpecified;
    private ReferenceType homeCurrencyField;
    public bool MultiCurrencyEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MultiCurrencyEnabledSpecified { get; public set; }
    public ReferenceType HomeCurrency { get; public set; }
    public bool get_MultiCurrencyEnabled();
    public void set_MultiCurrencyEnabled(bool value);
    public bool get_MultiCurrencyEnabledSpecified();
    public void set_MultiCurrencyEnabledSpecified(bool value);
    public ReferenceType get_HomeCurrency();
    public void set_HomeCurrency(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Customer : NameBase {
    private bool taxableField;
    private bool taxableFieldSpecified;
    private PhysicalAddress billAddrField;
    private PhysicalAddress shipAddrField;
    private PhysicalAddress[] otherAddrField;
    private string contactNameField;
    private string altContactNameField;
    private string notesField;
    private bool jobField;
    private bool jobFieldSpecified;
    private bool billWithParentField;
    private bool billWithParentFieldSpecified;
    private ReferenceType rootCustomerRefField;
    private ReferenceType parentRefField;
    private int levelField;
    private bool levelFieldSpecified;
    private ReferenceType customerTypeRefField;
    private ReferenceType salesTermRefField;
    private ReferenceType salesRepRefField;
    private ReferenceType itemField;
    private ItemChoiceType7 itemElementNameField;
    private ReferenceType paymentMethodRefField;
    private CreditChargeInfo cCDetailField;
    private ReferenceType priceLevelRefField;
    private decimal balanceField;
    private bool balanceFieldSpecified;
    private DateTime openBalanceDateField;
    private bool openBalanceDateFieldSpecified;
    private decimal balanceWithJobsField;
    private bool balanceWithJobsFieldSpecified;
    private decimal creditLimitField;
    private bool creditLimitFieldSpecified;
    private string acctNumField;
    private ReferenceType currencyRefField;
    private decimal overDueBalanceField;
    private bool overDueBalanceFieldSpecified;
    private decimal totalRevenueField;
    private bool totalRevenueFieldSpecified;
    private decimal totalExpenseField;
    private bool totalExpenseFieldSpecified;
    private string preferredDeliveryMethodField;
    private string resaleNumField;
    private JobInfo jobInfoField;
    private bool tDSEnabledField;
    private bool tDSEnabledFieldSpecified;
    private IntuitAnyType customerExField;
    private string secondaryTaxIdentifierField;
    private ReferenceType aRAccountRefField;
    private string primaryTaxIdentifierField;
    private string taxExemptionReasonIdField;
    private bool isProjectField;
    private bool isProjectFieldSpecified;
    private string businessNumberField;
    private string gSTINField;
    private string gSTRegistrationTypeField;
    private bool isCISContractorField;
    private bool isCISContractorFieldSpecified;
    private string clientCompanyIdField;
    private string clientEntityIdField;
    private string sourceField;
    private string taxRegimeField;
    public bool Taxable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxableSpecified { get; public set; }
    public PhysicalAddress BillAddr { get; public set; }
    public PhysicalAddress ShipAddr { get; public set; }
    [XmlElementAttribute("OtherAddr")]
public PhysicalAddress[] OtherAddr { get; public set; }
    public string ContactName { get; public set; }
    public string AltContactName { get; public set; }
    public string Notes { get; public set; }
    public bool Job { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool JobSpecified { get; public set; }
    public bool BillWithParent { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillWithParentSpecified { get; public set; }
    public ReferenceType RootCustomerRef { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public int Level { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LevelSpecified { get; public set; }
    public ReferenceType CustomerTypeRef { get; public set; }
    public ReferenceType SalesTermRef { get; public set; }
    public ReferenceType SalesRepRef { get; public set; }
    [XmlElementAttribute("TaxGroupCodeRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("TaxRateRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public ReferenceType AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType7 ItemElementName { get; public set; }
    public ReferenceType PaymentMethodRef { get; public set; }
    public CreditChargeInfo CCDetail { get; public set; }
    public ReferenceType PriceLevelRef { get; public set; }
    public decimal Balance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BalanceSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime OpenBalanceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OpenBalanceDateSpecified { get; public set; }
    public decimal BalanceWithJobs { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BalanceWithJobsSpecified { get; public set; }
    public decimal CreditLimit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CreditLimitSpecified { get; public set; }
    public string AcctNum { get; public set; }
    public ReferenceType CurrencyRef { get; public set; }
    public decimal OverDueBalance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OverDueBalanceSpecified { get; public set; }
    public decimal TotalRevenue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalRevenueSpecified { get; public set; }
    public decimal TotalExpense { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalExpenseSpecified { get; public set; }
    public string PreferredDeliveryMethod { get; public set; }
    public string ResaleNum { get; public set; }
    public JobInfo JobInfo { get; public set; }
    public bool TDSEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TDSEnabledSpecified { get; public set; }
    public IntuitAnyType CustomerEx { get; public set; }
    public string SecondaryTaxIdentifier { get; public set; }
    public ReferenceType ARAccountRef { get; public set; }
    public string PrimaryTaxIdentifier { get; public set; }
    public string TaxExemptionReasonId { get; public set; }
    public bool IsProject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IsProjectSpecified { get; public set; }
    public string BusinessNumber { get; public set; }
    public string GSTIN { get; public set; }
    public string GSTRegistrationType { get; public set; }
    public bool IsCISContractor { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IsCISContractorSpecified { get; public set; }
    public string ClientCompanyId { get; public set; }
    public string ClientEntityId { get; public set; }
    public string Source { get; public set; }
    public string TaxRegime { get; public set; }
    public bool get_Taxable();
    public void set_Taxable(bool value);
    public bool get_TaxableSpecified();
    public void set_TaxableSpecified(bool value);
    public PhysicalAddress get_BillAddr();
    public void set_BillAddr(PhysicalAddress value);
    public PhysicalAddress get_ShipAddr();
    public void set_ShipAddr(PhysicalAddress value);
    public PhysicalAddress[] get_OtherAddr();
    public void set_OtherAddr(PhysicalAddress[] value);
    public string get_ContactName();
    public void set_ContactName(string value);
    public string get_AltContactName();
    public void set_AltContactName(string value);
    public string get_Notes();
    public void set_Notes(string value);
    public bool get_Job();
    public void set_Job(bool value);
    public bool get_JobSpecified();
    public void set_JobSpecified(bool value);
    public bool get_BillWithParent();
    public void set_BillWithParent(bool value);
    public bool get_BillWithParentSpecified();
    public void set_BillWithParentSpecified(bool value);
    public ReferenceType get_RootCustomerRef();
    public void set_RootCustomerRef(ReferenceType value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public int get_Level();
    public void set_Level(int value);
    public bool get_LevelSpecified();
    public void set_LevelSpecified(bool value);
    public ReferenceType get_CustomerTypeRef();
    public void set_CustomerTypeRef(ReferenceType value);
    public ReferenceType get_SalesTermRef();
    public void set_SalesTermRef(ReferenceType value);
    public ReferenceType get_SalesRepRef();
    public void set_SalesRepRef(ReferenceType value);
    public ReferenceType get_AnyIntuitObject();
    public void set_AnyIntuitObject(ReferenceType value);
    public ItemChoiceType7 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType7 value);
    public ReferenceType get_PaymentMethodRef();
    public void set_PaymentMethodRef(ReferenceType value);
    public CreditChargeInfo get_CCDetail();
    public void set_CCDetail(CreditChargeInfo value);
    public ReferenceType get_PriceLevelRef();
    public void set_PriceLevelRef(ReferenceType value);
    public decimal get_Balance();
    public void set_Balance(decimal value);
    public bool get_BalanceSpecified();
    public void set_BalanceSpecified(bool value);
    public DateTime get_OpenBalanceDate();
    public void set_OpenBalanceDate(DateTime value);
    public bool get_OpenBalanceDateSpecified();
    public void set_OpenBalanceDateSpecified(bool value);
    public decimal get_BalanceWithJobs();
    public void set_BalanceWithJobs(decimal value);
    public bool get_BalanceWithJobsSpecified();
    public void set_BalanceWithJobsSpecified(bool value);
    public decimal get_CreditLimit();
    public void set_CreditLimit(decimal value);
    public bool get_CreditLimitSpecified();
    public void set_CreditLimitSpecified(bool value);
    public string get_AcctNum();
    public void set_AcctNum(string value);
    public ReferenceType get_CurrencyRef();
    public void set_CurrencyRef(ReferenceType value);
    public decimal get_OverDueBalance();
    public void set_OverDueBalance(decimal value);
    public bool get_OverDueBalanceSpecified();
    public void set_OverDueBalanceSpecified(bool value);
    public decimal get_TotalRevenue();
    public void set_TotalRevenue(decimal value);
    public bool get_TotalRevenueSpecified();
    public void set_TotalRevenueSpecified(bool value);
    public decimal get_TotalExpense();
    public void set_TotalExpense(decimal value);
    public bool get_TotalExpenseSpecified();
    public void set_TotalExpenseSpecified(bool value);
    public string get_PreferredDeliveryMethod();
    public void set_PreferredDeliveryMethod(string value);
    public string get_ResaleNum();
    public void set_ResaleNum(string value);
    public JobInfo get_JobInfo();
    public void set_JobInfo(JobInfo value);
    public bool get_TDSEnabled();
    public void set_TDSEnabled(bool value);
    public bool get_TDSEnabledSpecified();
    public void set_TDSEnabledSpecified(bool value);
    public IntuitAnyType get_CustomerEx();
    public void set_CustomerEx(IntuitAnyType value);
    public string get_SecondaryTaxIdentifier();
    public void set_SecondaryTaxIdentifier(string value);
    public ReferenceType get_ARAccountRef();
    public void set_ARAccountRef(ReferenceType value);
    public string get_PrimaryTaxIdentifier();
    public void set_PrimaryTaxIdentifier(string value);
    public string get_TaxExemptionReasonId();
    public void set_TaxExemptionReasonId(string value);
    public bool get_IsProject();
    public void set_IsProject(bool value);
    public bool get_IsProjectSpecified();
    public void set_IsProjectSpecified(bool value);
    public string get_BusinessNumber();
    public void set_BusinessNumber(string value);
    public string get_GSTIN();
    public void set_GSTIN(string value);
    public string get_GSTRegistrationType();
    public void set_GSTRegistrationType(string value);
    public bool get_IsCISContractor();
    public void set_IsCISContractor(bool value);
    public bool get_IsCISContractorSpecified();
    public void set_IsCISContractorSpecified(bool value);
    public string get_ClientCompanyId();
    public void set_ClientCompanyId(string value);
    public string get_ClientEntityId();
    public void set_ClientEntityId(string value);
    public string get_Source();
    public void set_Source(string value);
    public string get_TaxRegime();
    public void set_TaxRegime(string value);
}
public class Intuit.Ipp.Data.CustomerBalance : ReportQueryBase {
}
public class Intuit.Ipp.Data.CustomerBalanceDetail : ReportQueryBase {
}
public class Intuit.Ipp.Data.CustomerIncome : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CustomerMsg : IntuitEntity {
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private IntuitAnyType customerMsgExField;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public IntuitAnyType CustomerMsgEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public IntuitAnyType get_CustomerMsgEx();
    public void set_CustomerMsgEx(IntuitAnyType value);
}
public class Intuit.Ipp.Data.CustomerSales : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CustomerType : IntuitEntity {
    private string nameField;
    private ReferenceType parentRefField;
    private string fullyQualifiedNameField;
    private bool activeField;
    private bool activeFieldSpecified;
    public string Name { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CustomerTypeEnum : Enum {
    public int value__;
    public static CustomerTypeEnum Customer;
    public static CustomerTypeEnum Job;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.CustomField : object {
    private string definitionIdField;
    private string nameField;
    private CustomFieldTypeEnum typeField;
    private object itemField;
    public string DefinitionId { get; public set; }
    public string Name { get; public set; }
    public CustomFieldTypeEnum Type { get; public set; }
    [XmlElementAttribute("BooleanValue", "System.Boolean")]
[XmlElementAttribute("DateValue", "System.DateTime")]
[XmlElementAttribute("NumberValue", "System.Decimal")]
[XmlElementAttribute("StringValue", "System.String")]
public object AnyIntuitObject { get; public set; }
    public string get_DefinitionId();
    public void set_DefinitionId(string value);
    public string get_Name();
    public void set_Name(string value);
    public CustomFieldTypeEnum get_Type();
    public void set_Type(CustomFieldTypeEnum value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public abstract class Intuit.Ipp.Data.CustomFieldDefinition : IntuitEntity {
    private string entityTypeField;
    private string nameField;
    private bool hiddenField;
    private bool requiredField;
    private string appIdField;
    public string EntityType { get; public set; }
    public string Name { get; public set; }
    [DefaultValueAttribute("False")]
public bool Hidden { get; public set; }
    [DefaultValueAttribute("False")]
public bool Required { get; public set; }
    public string AppId { get; public set; }
    public string get_EntityType();
    public void set_EntityType(string value);
    public string get_Name();
    public void set_Name(string value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public bool get_Required();
    public void set_Required(bool value);
    public string get_AppId();
    public void set_AppId(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.CustomFieldTypeEnum : Enum {
    public int value__;
    public static CustomFieldTypeEnum StringType;
    public static CustomFieldTypeEnum BooleanType;
    public static CustomFieldTypeEnum NumberType;
    public static CustomFieldTypeEnum DateType;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.DateMacro : Enum {
    public int value__;
    public static DateMacro All;
    public static DateMacro Today;
    [XmlEnumAttribute("This Week")]
public static DateMacro ThisWeek;
    [XmlEnumAttribute("This Week-to-date")]
public static DateMacro ThisWeektodate;
    [XmlEnumAttribute("This Month")]
public static DateMacro ThisMonth;
    [XmlEnumAttribute("This Month-to-date")]
public static DateMacro ThisMonthtodate;
    [XmlEnumAttribute("This Fiscal Quarter")]
public static DateMacro ThisFiscalQuarter;
    [XmlEnumAttribute("This Fiscal Quarter-to-date")]
public static DateMacro ThisFiscalQuartertodate;
    [XmlEnumAttribute("This Fiscal Year")]
public static DateMacro ThisFiscalYear;
    [XmlEnumAttribute("This Fiscal Year-to-date")]
public static DateMacro ThisFiscalYeartodate;
    [XmlEnumAttribute("This Calendar Quarter")]
public static DateMacro ThisCalendarQuarter;
    [XmlEnumAttribute("This Calendar Quarter-to-date")]
public static DateMacro ThisCalendarQuartertodate;
    [XmlEnumAttribute("This Calendar Year")]
public static DateMacro ThisCalendarYear;
    [XmlEnumAttribute("This Calendar Year-to-date")]
public static DateMacro ThisCalendarYeartodate;
    public static DateMacro Yesterday;
    [XmlEnumAttribute("Last Week")]
public static DateMacro LastWeek;
    [XmlEnumAttribute("Last Week-to-date")]
public static DateMacro LastWeektodate;
    [XmlEnumAttribute("Last Month")]
public static DateMacro LastMonth;
    [XmlEnumAttribute("Last Month-to-date")]
public static DateMacro LastMonthtodate;
    [XmlEnumAttribute("Last Fiscal Quarter")]
public static DateMacro LastFiscalQuarter;
    [XmlEnumAttribute("Last Fiscal Quarter-to-date")]
public static DateMacro LastFiscalQuartertodate;
    [XmlEnumAttribute("Last Fiscal Year")]
public static DateMacro LastFiscalYear;
    [XmlEnumAttribute("Last Fiscal Year-to-date")]
public static DateMacro LastFiscalYeartodate;
    [XmlEnumAttribute("Last Calendar Quarter")]
public static DateMacro LastCalendarQuarter;
    [XmlEnumAttribute("Last Calendar Quarter-to-date")]
public static DateMacro LastCalendarQuartertodate;
    [XmlEnumAttribute("Last Calendar Year")]
public static DateMacro LastCalendarYear;
    [XmlEnumAttribute("Last Calendar Year-to-date")]
public static DateMacro LastCalendarYeartodate;
    [XmlEnumAttribute("Next Week")]
public static DateMacro NextWeek;
    [XmlEnumAttribute("Next 4 Weeks")]
public static DateMacro Next4Weeks;
    [XmlEnumAttribute("Next Month")]
public static DateMacro NextMonth;
    [XmlEnumAttribute("Next Fiscal Quarter")]
public static DateMacro NextFiscalQuarter;
    [XmlEnumAttribute("Next Fiscal Year")]
public static DateMacro NextFiscalYear;
    [XmlEnumAttribute("Next Calendar Quarter")]
public static DateMacro NextCalendarQuarter;
    [XmlEnumAttribute("Next Calendar Year")]
public static DateMacro NextCalendarYear;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.DateTypeCustomFieldDefinition : CustomFieldDefinition {
    private DateTime defaultDateField;
    private bool defaultDateFieldSpecified;
    private DateTime minDateField;
    private bool minDateFieldSpecified;
    private DateTime maxDateField;
    private bool maxDateFieldSpecified;
    [XmlElementAttribute]
public DateTime DefaultDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime MinDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MinDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime MaxDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MaxDateSpecified { get; public set; }
    public DateTime get_DefaultDate();
    public void set_DefaultDate(DateTime value);
    public bool get_DefaultDateSpecified();
    public void set_DefaultDateSpecified(bool value);
    public DateTime get_MinDate();
    public void set_MinDate(DateTime value);
    public bool get_MinDateSpecified();
    public void set_MinDateSpecified(bool value);
    public DateTime get_MaxDate();
    public void set_MaxDate(DateTime value);
    public bool get_MaxDateSpecified();
    public void set_MaxDateSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.DayOfWeekEnum : Enum {
    public int value__;
    public static DayOfWeekEnum Monday;
    public static DayOfWeekEnum Tuesday;
    public static DayOfWeekEnum Wednesday;
    public static DayOfWeekEnum Thursday;
    public static DayOfWeekEnum Friday;
    public static DayOfWeekEnum Saturday;
    public static DayOfWeekEnum Sunday;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.DeliveryErrorTypeEnum : Enum {
    public int value__;
    [XmlEnumAttribute("Missing Info")]
public static DeliveryErrorTypeEnum MissingInfo;
    public static DeliveryErrorTypeEnum Undeliverable;
    [XmlEnumAttribute("Delivery Server Down")]
public static DeliveryErrorTypeEnum DeliveryServerDown;
    [XmlEnumAttribute("Bounced Email")]
public static DeliveryErrorTypeEnum BouncedEmail;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.DeliveryTypeEnum : Enum {
    public int value__;
    public static DeliveryTypeEnum Email;
    public static DeliveryTypeEnum Tradeshift;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Department : IntuitEntity {
    private string nameField;
    private bool subDepartmentField;
    private bool subDepartmentFieldSpecified;
    private ReferenceType parentRefField;
    private string fullyQualifiedNameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private IntuitAnyType departmentExField;
    private PhysicalAddress addressField;
    public string Name { get; public set; }
    public bool SubDepartment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SubDepartmentSpecified { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public IntuitAnyType DepartmentEx { get; public set; }
    public PhysicalAddress Address { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_SubDepartment();
    public void set_SubDepartment(bool value);
    public bool get_SubDepartmentSpecified();
    public void set_SubDepartmentSpecified(bool value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public IntuitAnyType get_DepartmentEx();
    public void set_DepartmentEx(IntuitAnyType value);
    public PhysicalAddress get_Address();
    public void set_Address(PhysicalAddress value);
}
public class Intuit.Ipp.Data.DepartmentSales : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Deposit : Transaction {
    private ReferenceType depositToAccountRefField;
    private CashBackInfo cashBackField;
    private GlobalTaxCalculationEnum globalTaxCalculationField;
    private bool globalTaxCalculationFieldSpecified;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private decimal homeTotalAmtField;
    private bool homeTotalAmtFieldSpecified;
    private IntuitAnyType depositExField;
    public ReferenceType DepositToAccountRef { get; public set; }
    public CashBackInfo CashBack { get; public set; }
    public GlobalTaxCalculationEnum GlobalTaxCalculation { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool GlobalTaxCalculationSpecified { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public decimal HomeTotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeTotalAmtSpecified { get; public set; }
    public IntuitAnyType DepositEx { get; public set; }
    public ReferenceType get_DepositToAccountRef();
    public void set_DepositToAccountRef(ReferenceType value);
    public CashBackInfo get_CashBack();
    public void set_CashBack(CashBackInfo value);
    public GlobalTaxCalculationEnum get_GlobalTaxCalculation();
    public void set_GlobalTaxCalculation(GlobalTaxCalculationEnum value);
    public bool get_GlobalTaxCalculationSpecified();
    public void set_GlobalTaxCalculationSpecified(bool value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public decimal get_HomeTotalAmt();
    public void set_HomeTotalAmt(decimal value);
    public bool get_HomeTotalAmtSpecified();
    public void set_HomeTotalAmtSpecified(bool value);
    public IntuitAnyType get_DepositEx();
    public void set_DepositEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.DepositLineDetail : object {
    private ReferenceType entityField;
    private ReferenceType classRefField;
    private ReferenceType accountRefField;
    private ReferenceType paymentMethodRefField;
    private string checkNumField;
    private TxnTypeEnum txnTypeField;
    private bool txnTypeFieldSpecified;
    private ReferenceType taxCodeRefField;
    private TaxApplicableOnEnum taxApplicableOnField;
    private bool taxApplicableOnFieldSpecified;
    private IntuitAnyType depositLineDetailExField;
    public ReferenceType Entity { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType AccountRef { get; public set; }
    public ReferenceType PaymentMethodRef { get; public set; }
    public string CheckNum { get; public set; }
    public TxnTypeEnum TxnType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TxnTypeSpecified { get; public set; }
    public ReferenceType TaxCodeRef { get; public set; }
    public TaxApplicableOnEnum TaxApplicableOn { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxApplicableOnSpecified { get; public set; }
    public IntuitAnyType DepositLineDetailEx { get; public set; }
    public ReferenceType get_Entity();
    public void set_Entity(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public ReferenceType get_PaymentMethodRef();
    public void set_PaymentMethodRef(ReferenceType value);
    public string get_CheckNum();
    public void set_CheckNum(string value);
    public TxnTypeEnum get_TxnType();
    public void set_TxnType(TxnTypeEnum value);
    public bool get_TxnTypeSpecified();
    public void set_TxnTypeSpecified(bool value);
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public TaxApplicableOnEnum get_TaxApplicableOn();
    public void set_TaxApplicableOn(TaxApplicableOnEnum value);
    public bool get_TaxApplicableOnSpecified();
    public void set_TaxApplicableOnSpecified(bool value);
    public IntuitAnyType get_DepositLineDetailEx();
    public void set_DepositLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.DescriptionLineDetail : object {
    private DateTime serviceDateField;
    private bool serviceDateFieldSpecified;
    private ReferenceType taxCodeRefField;
    private IntuitAnyType descriptionLineDetailExField;
    [XmlElementAttribute]
public DateTime ServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ServiceDateSpecified { get; public set; }
    public ReferenceType TaxCodeRef { get; public set; }
    public IntuitAnyType DescriptionLineDetailEx { get; public set; }
    public DateTime get_ServiceDate();
    public void set_ServiceDate(DateTime value);
    public bool get_ServiceDateSpecified();
    public void set_ServiceDateSpecified(bool value);
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public IntuitAnyType get_DescriptionLineDetailEx();
    public void set_DescriptionLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.DesktopEntityTypeEnum : Enum {
    public int value__;
    public static DesktopEntityTypeEnum ANY;
    public static DesktopEntityTypeEnum CREDIT_CARD;
    public static DesktopEntityTypeEnum DEPOSIT;
    public static DesktopEntityTypeEnum CHECK;
    public static DesktopEntityTypeEnum INVOICE;
    public static DesktopEntityTypeEnum CASHSALE;
    public static DesktopEntityTypeEnum CREDIT_MEMO;
    public static DesktopEntityTypeEnum APP_PAY;
    public static DesktopEntityTypeEnum GENERAL_JOURNAL;
    public static DesktopEntityTypeEnum BILL;
    public static DesktopEntityTypeEnum GENERIC;
    public static DesktopEntityTypeEnum CREDIT_CARD_REFUND;
    public static DesktopEntityTypeEnum BILL_REFUND;
    public static DesktopEntityTypeEnum AR_CREDIT_CARD_REFUND;
    public static DesktopEntityTypeEnum BILL_CHECK;
    public static DesktopEntityTypeEnum BILL_CREDIT_CARD;
    public static DesktopEntityTypeEnum SALES_TAX_PAYMENT;
    public static DesktopEntityTypeEnum PURCHASE_ORDER;
    public static DesktopEntityTypeEnum INVENTORY_ADJUSTMENT;
    public static DesktopEntityTypeEnum INVENTORY_RECEIPT;
    public static DesktopEntityTypeEnum PAYCHECK;
    public static DesktopEntityTypeEnum LIABILITY_CHECK;
    public static DesktopEntityTypeEnum BEGIN_BALANCE_CHECK;
    public static DesktopEntityTypeEnum LIABILITY_ADJUSTMENT;
    public static DesktopEntityTypeEnum ESTIMATE;
    public static DesktopEntityTypeEnum STATEMENT_CHARGE;
    public static DesktopEntityTypeEnum TRANSFER;
    public static DesktopEntityTypeEnum SALESORDER;
    public static DesktopEntityTypeEnum QBRSLIABCHECK;
    public static DesktopEntityTypeEnum BUILDASSEMBLY;
    public static DesktopEntityTypeEnum EFPLIABCHECK;
    public static DesktopEntityTypeEnum PRIOR_PMT;
    public static DesktopEntityTypeEnum LIAB_REFUND_CHECK;
    public static DesktopEntityTypeEnum ITEM_SERVICE;
    public static DesktopEntityTypeEnum ITEM_INVENTORY;
    public static DesktopEntityTypeEnum ITEM_ASSEMBLY;
    public static DesktopEntityTypeEnum ITEM_PART;
    public static DesktopEntityTypeEnum ITEM_FIXEDASSET;
    public static DesktopEntityTypeEnum ITEM_CHARGES;
    public static DesktopEntityTypeEnum ITEM_SUBTOTAL;
    public static DesktopEntityTypeEnum ITEM_GROUP;
    public static DesktopEntityTypeEnum ITEM_DISCOUNT;
    public static DesktopEntityTypeEnum ITEM_PAYMENT;
    public static DesktopEntityTypeEnum ITEM_TAXCOMP;
    public static DesktopEntityTypeEnum ITEM_TAXGROUP;
    public static DesktopEntityTypeEnum ITEM_GROUPEND;
    public static DesktopEntityTypeEnum ITEM_PURCHASE;
    public static DesktopEntityTypeEnum ITEM_PO;
    public static DesktopEntityTypeEnum ITEM_INVOICE;
    public static DesktopEntityTypeEnum ITEM_ALLITEMS;
    public static DesktopEntityTypeEnum ITEM_NOTAXES;
    public static DesktopEntityTypeEnum ITEM_SERVICES_AND_CHARGES;
    public static DesktopEntityTypeEnum ITEM_REAL_GROUP_END;
    public static DesktopEntityTypeEnum ITEM_MAX;
    public static DesktopEntityTypeEnum CUSTOMER;
    public static DesktopEntityTypeEnum VENDOR;
    public static DesktopEntityTypeEnum EMPLOYEE;
    public static DesktopEntityTypeEnum OTHERNAME;
    public static DesktopEntityTypeEnum NULLLINKTYPE;
    public static DesktopEntityTypeEnum UNUSED1;
    public static DesktopEntityTypeEnum REFUNDCHECKTOCRMEMO;
    public static DesktopEntityTypeEnum INVOICETOCRMEMO;
    public static DesktopEntityTypeEnum INVOICETOPAYMENT;
    public static DesktopEntityTypeEnum INVOICETODISCOUNT;
    public static DesktopEntityTypeEnum BILLTOCHECK;
    public static DesktopEntityTypeEnum BILLTOCCARD;
    public static DesktopEntityTypeEnum BILLTOCREDIT;
    public static DesktopEntityTypeEnum DEPOSITTOPAYMENT;
    public static DesktopEntityTypeEnum REFUNDCHECKTOPAYMENT;
    public static DesktopEntityTypeEnum INVOICETOPMTLINE;
    public static DesktopEntityTypeEnum INVOICETOCREDITLINE;
    public static DesktopEntityTypeEnum BILLTOCREDITLINE;
    public static DesktopEntityTypeEnum CREDLINETODISCLINE;
    public static DesktopEntityTypeEnum PURCHASEORDERTORECEIPT;
    public static DesktopEntityTypeEnum BILLTODISCOUNT;
    public static DesktopEntityTypeEnum INVOICETODISCOUNTLINE;
    public static DesktopEntityTypeEnum INVOICETOESTIMATEQTY;
    public static DesktopEntityTypeEnum INVOICETOESTIMATEAMT;
    public static DesktopEntityTypeEnum INVOICETOSALESORDERQTY;
    public static DesktopEntityTypeEnum INVOICETOSALESORDERAMT;
    public static DesktopEntityTypeEnum JOURNALENTRYTOCRMEMO;
    public static DesktopEntityTypeEnum AR_CCREFUND_TO_CREDITMEMO;
    public static DesktopEntityTypeEnum AR_CCREFUND_TO_PAYMENT;
    public static DesktopEntityTypeEnum AR_CCREFUND_TO_JOURNAL;
    public static DesktopEntityTypeEnum GIRO_TO_CHECK;
    public static DesktopEntityTypeEnum ITEM;
    public static DesktopEntityTypeEnum DEPARTMENT;
    public static DesktopEntityTypeEnum USERS;
    public static DesktopEntityTypeEnum KLASS;
    public static DesktopEntityTypeEnum PAYMENT_METHOD;
    public static DesktopEntityTypeEnum TERM;
    public static DesktopEntityTypeEnum BUDGET;
    public static DesktopEntityTypeEnum TAX_CODE;
    public static DesktopEntityTypeEnum TAX_CODE_RATE;
    public static DesktopEntityTypeEnum TAX_AGENCY;
    public static DesktopEntityTypeEnum ATTACHABLE;
    public static DesktopEntityTypeEnum ACCOUNT;
    public static DesktopEntityTypeEnum PREFERENCES;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.DiscountLineDetail : DiscountOverride {
    private DateTime serviceDateField;
    private bool serviceDateFieldSpecified;
    private ReferenceType classRefField;
    private ReferenceType taxCodeRefField;
    private IntuitAnyType discountLineDetailExField;
    [XmlElementAttribute]
public DateTime ServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ServiceDateSpecified { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType TaxCodeRef { get; public set; }
    public IntuitAnyType DiscountLineDetailEx { get; public set; }
    public DateTime get_ServiceDate();
    public void set_ServiceDate(DateTime value);
    public bool get_ServiceDateSpecified();
    public void set_ServiceDateSpecified(bool value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public IntuitAnyType get_DiscountLineDetailEx();
    public void set_DiscountLineDetailEx(IntuitAnyType value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.DiscountLineDetail")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.DiscountOverride : object {
    private ReferenceType discountRefField;
    private bool percentBasedField;
    private bool percentBasedFieldSpecified;
    private decimal discountPercentField;
    private bool discountPercentFieldSpecified;
    private ReferenceType discountAccountRefField;
    public ReferenceType DiscountRef { get; public set; }
    public bool PercentBased { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PercentBasedSpecified { get; public set; }
    public decimal DiscountPercent { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DiscountPercentSpecified { get; public set; }
    public ReferenceType DiscountAccountRef { get; public set; }
    public ReferenceType get_DiscountRef();
    public void set_DiscountRef(ReferenceType value);
    public bool get_PercentBased();
    public void set_PercentBased(bool value);
    public bool get_PercentBasedSpecified();
    public void set_PercentBasedSpecified(bool value);
    public decimal get_DiscountPercent();
    public void set_DiscountPercent(decimal value);
    public bool get_DiscountPercentSpecified();
    public void set_DiscountPercentSpecified(bool value);
    public ReferenceType get_DiscountAccountRef();
    public void set_DiscountAccountRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.DiscountTypeEnum : Enum {
    public int value__;
    public static DiscountTypeEnum Rate;
    public static DiscountTypeEnum Amount;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.EffectiveTaxRate : object {
    private decimal rateValueField;
    private bool rateValueFieldSpecified;
    private DateTime effectiveDateField;
    private bool effectiveDateFieldSpecified;
    private DateTime endDateField;
    private bool endDateFieldSpecified;
    private IntuitAnyType effectiveTaxRateExField;
    public decimal RateValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RateValueSpecified { get; public set; }
    public DateTime EffectiveDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EffectiveDateSpecified { get; public set; }
    public DateTime EndDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EndDateSpecified { get; public set; }
    public IntuitAnyType EffectiveTaxRateEx { get; public set; }
    public decimal get_RateValue();
    public void set_RateValue(decimal value);
    public bool get_RateValueSpecified();
    public void set_RateValueSpecified(bool value);
    public DateTime get_EffectiveDate();
    public void set_EffectiveDate(DateTime value);
    public bool get_EffectiveDateSpecified();
    public void set_EffectiveDateSpecified(bool value);
    public DateTime get_EndDate();
    public void set_EndDate(DateTime value);
    public bool get_EndDateSpecified();
    public void set_EndDateSpecified(bool value);
    public IntuitAnyType get_EffectiveTaxRateEx();
    public void set_EffectiveTaxRateEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.EmailAddress : object {
    private string idField;
    private string addressField;
    private bool defaultField;
    private bool defaultFieldSpecified;
    private string tagField;
    public string Id { get; public set; }
    public string Address { get; public set; }
    public bool Default { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultSpecified { get; public set; }
    public string Tag { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_Address();
    public void set_Address(string value);
    public bool get_Default();
    public void set_Default(bool value);
    public bool get_DefaultSpecified();
    public void set_DefaultSpecified(bool value);
    public string get_Tag();
    public void set_Tag(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.EmailAddressTypeEnum : Enum {
    public int value__;
    public static EmailAddressTypeEnum Primary;
    public static EmailAddressTypeEnum CC;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.EmailDeliveryInfo : IntuitEntity {
    private EmailAddress deliveryAddressField;
    private EmailAddress deliveryAddressCcField;
    private EmailAddress deliveryAddressBccField;
    private EmailMessage emailMessageField;
    private bool allowOnlinePaymentField;
    private bool allowOnlinePaymentFieldSpecified;
    private bool allowOnlineCreditCardPaymentField;
    private bool allowOnlineCreditCardPaymentFieldSpecified;
    private bool allowOnlineACHPaymentField;
    private bool allowOnlineACHPaymentFieldSpecified;
    private TransactionDeliveryInfo deliveryInfoField;
    private ETransactionStatusEnum eTransactionStatusField;
    private bool eTransactionStatusFieldSpecified;
    public EmailAddress DeliveryAddress { get; public set; }
    public EmailAddress DeliveryAddressCc { get; public set; }
    public EmailAddress DeliveryAddressBcc { get; public set; }
    public EmailMessage EmailMessage { get; public set; }
    public bool AllowOnlinePayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowOnlinePaymentSpecified { get; public set; }
    public bool AllowOnlineCreditCardPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowOnlineCreditCardPaymentSpecified { get; public set; }
    public bool AllowOnlineACHPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowOnlineACHPaymentSpecified { get; public set; }
    public TransactionDeliveryInfo DeliveryInfo { get; public set; }
    public ETransactionStatusEnum ETransactionStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ETransactionStatusSpecified { get; public set; }
    public EmailAddress get_DeliveryAddress();
    public void set_DeliveryAddress(EmailAddress value);
    public EmailAddress get_DeliveryAddressCc();
    public void set_DeliveryAddressCc(EmailAddress value);
    public EmailAddress get_DeliveryAddressBcc();
    public void set_DeliveryAddressBcc(EmailAddress value);
    public EmailMessage get_EmailMessage();
    public void set_EmailMessage(EmailMessage value);
    public bool get_AllowOnlinePayment();
    public void set_AllowOnlinePayment(bool value);
    public bool get_AllowOnlinePaymentSpecified();
    public void set_AllowOnlinePaymentSpecified(bool value);
    public bool get_AllowOnlineCreditCardPayment();
    public void set_AllowOnlineCreditCardPayment(bool value);
    public bool get_AllowOnlineCreditCardPaymentSpecified();
    public void set_AllowOnlineCreditCardPaymentSpecified(bool value);
    public bool get_AllowOnlineACHPayment();
    public void set_AllowOnlineACHPayment(bool value);
    public bool get_AllowOnlineACHPaymentSpecified();
    public void set_AllowOnlineACHPaymentSpecified(bool value);
    public TransactionDeliveryInfo get_DeliveryInfo();
    public void set_DeliveryInfo(TransactionDeliveryInfo value);
    public ETransactionStatusEnum get_ETransactionStatus();
    public void set_ETransactionStatus(ETransactionStatusEnum value);
    public bool get_ETransactionStatusSpecified();
    public void set_ETransactionStatusSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.EmailMessage : object {
    private string subjectField;
    private string messageField;
    public string Subject { get; public set; }
    public string Message { get; public set; }
    public string get_Subject();
    public void set_Subject(string value);
    public string get_Message();
    public void set_Message(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.EmailMessagesPrefs : object {
    private NameValue[] nameValueField;
    private EmailMessage invoiceMessageField;
    private EmailMessage estimateMessageField;
    private EmailMessage salesReceiptMessageField;
    private EmailMessage statementMessageField;
    [XmlElementAttribute("NameValue")]
public NameValue[] NameValue { get; public set; }
    public EmailMessage InvoiceMessage { get; public set; }
    public EmailMessage EstimateMessage { get; public set; }
    public EmailMessage SalesReceiptMessage { get; public set; }
    public EmailMessage StatementMessage { get; public set; }
    public NameValue[] get_NameValue();
    public void set_NameValue(NameValue[] value);
    public EmailMessage get_InvoiceMessage();
    public void set_InvoiceMessage(EmailMessage value);
    public EmailMessage get_EstimateMessage();
    public void set_EstimateMessage(EmailMessage value);
    public EmailMessage get_SalesReceiptMessage();
    public void set_SalesReceiptMessage(EmailMessage value);
    public EmailMessage get_StatementMessage();
    public void set_StatementMessage(EmailMessage value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.EmailStatusEnum : Enum {
    public int value__;
    public static EmailStatusEnum NotSet;
    public static EmailStatusEnum NeedToSend;
    public static EmailStatusEnum EmailSent;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Employee : NameBase {
    private string employeeTypeField;
    private string employeeNumberField;
    private string sSNField;
    private PhysicalAddress primaryAddrField;
    private PhysicalAddress[] otherAddrField;
    private bool billableTimeField;
    private bool billableTimeFieldSpecified;
    private decimal billRateField;
    private bool billRateFieldSpecified;
    private DateTime birthDateField;
    private bool birthDateFieldSpecified;
    private gender genderField;
    private bool genderFieldSpecified;
    private DateTime hiredDateField;
    private bool hiredDateFieldSpecified;
    private DateTime releasedDateField;
    private bool releasedDateFieldSpecified;
    private TimeEntryUsedForPaychecksEnum useTimeEntryField;
    private bool useTimeEntryFieldSpecified;
    private IntuitAnyType employeeExField;
    private decimal costRateField;
    private bool costRateFieldSpecified;
    private string notesField;
    public string EmployeeType { get; public set; }
    public string EmployeeNumber { get; public set; }
    public string SSN { get; public set; }
    public PhysicalAddress PrimaryAddr { get; public set; }
    [XmlElementAttribute("OtherAddr")]
public PhysicalAddress[] OtherAddr { get; public set; }
    public bool BillableTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillableTimeSpecified { get; public set; }
    public decimal BillRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillRateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime BirthDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BirthDateSpecified { get; public set; }
    public gender Gender { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool GenderSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime HiredDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HiredDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime ReleasedDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReleasedDateSpecified { get; public set; }
    public TimeEntryUsedForPaychecksEnum UseTimeEntry { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UseTimeEntrySpecified { get; public set; }
    public IntuitAnyType EmployeeEx { get; public set; }
    public decimal CostRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CostRateSpecified { get; public set; }
    public string Notes { get; public set; }
    public string get_EmployeeType();
    public void set_EmployeeType(string value);
    public string get_EmployeeNumber();
    public void set_EmployeeNumber(string value);
    public string get_SSN();
    public void set_SSN(string value);
    public PhysicalAddress get_PrimaryAddr();
    public void set_PrimaryAddr(PhysicalAddress value);
    public PhysicalAddress[] get_OtherAddr();
    public void set_OtherAddr(PhysicalAddress[] value);
    public bool get_BillableTime();
    public void set_BillableTime(bool value);
    public bool get_BillableTimeSpecified();
    public void set_BillableTimeSpecified(bool value);
    public decimal get_BillRate();
    public void set_BillRate(decimal value);
    public bool get_BillRateSpecified();
    public void set_BillRateSpecified(bool value);
    public DateTime get_BirthDate();
    public void set_BirthDate(DateTime value);
    public bool get_BirthDateSpecified();
    public void set_BirthDateSpecified(bool value);
    public gender get_Gender();
    public void set_Gender(gender value);
    public bool get_GenderSpecified();
    public void set_GenderSpecified(bool value);
    public DateTime get_HiredDate();
    public void set_HiredDate(DateTime value);
    public bool get_HiredDateSpecified();
    public void set_HiredDateSpecified(bool value);
    public DateTime get_ReleasedDate();
    public void set_ReleasedDate(DateTime value);
    public bool get_ReleasedDateSpecified();
    public void set_ReleasedDateSpecified(bool value);
    public TimeEntryUsedForPaychecksEnum get_UseTimeEntry();
    public void set_UseTimeEntry(TimeEntryUsedForPaychecksEnum value);
    public bool get_UseTimeEntrySpecified();
    public void set_UseTimeEntrySpecified(bool value);
    public IntuitAnyType get_EmployeeEx();
    public void set_EmployeeEx(IntuitAnyType value);
    public decimal get_CostRate();
    public void set_CostRate(decimal value);
    public bool get_CostRateSpecified();
    public void set_CostRateSpecified(bool value);
    public string get_Notes();
    public void set_Notes(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.EmployeeTypeEnum : Enum {
    public int value__;
    public static EmployeeTypeEnum Officer;
    public static EmployeeTypeEnum Owner;
    public static EmployeeTypeEnum Regular;
    public static EmployeeTypeEnum Statutory;
}
public class Intuit.Ipp.Data.Entitlement : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Term>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TermId>k__BackingField;
    public string Id { get; private set; }
    public string Name { get; private set; }
    public string Term { get; private set; }
    public string TermId { get; private set; }
    public Entitlement(XmlNode singleEntitlementNode);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Term();
    [CompilerGeneratedAttribute]
private void set_Term(string value);
    [CompilerGeneratedAttribute]
public string get_TermId();
    [CompilerGeneratedAttribute]
private void set_TermId(string value);
    public static List`1<Entitlement> ParseEntitlements(XmlNode node);
}
public class Intuit.Ipp.Data.EntitlementAndUserRoleInfo : object {
    [CompilerGeneratedAttribute]
private EntitlementInfo <EntitlementInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<RoleInfo> <RoleInformation>k__BackingField;
    public EntitlementInfo EntitlementInformation { get; private set; }
    public Collection`1<RoleInfo> RoleInformation { get; private set; }
    public EntitlementAndUserRoleInfo(XmlNode entitlementAndRoleNode);
    [CompilerGeneratedAttribute]
public EntitlementInfo get_EntitlementInformation();
    [CompilerGeneratedAttribute]
private void set_EntitlementInformation(EntitlementInfo value);
    [CompilerGeneratedAttribute]
public Collection`1<RoleInfo> get_RoleInformation();
    [CompilerGeneratedAttribute]
private void set_RoleInformation(Collection`1<RoleInfo> value);
}
public class Intuit.Ipp.Data.EntitlementInfo : object {
    [CompilerGeneratedAttribute]
private string <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxUsers>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentUsers>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DaysRemaining>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Fee>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <BetaExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CurrentFileUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Entitlement> <Entitlements>k__BackingField;
    public string AppId { get; private set; }
    public string ProductId { get; private set; }
    public string PlanName { get; private set; }
    public string PlanType { get; private set; }
    public int MaxUsers { get; private set; }
    public int CurrentUsers { get; private set; }
    public int DaysRemaining { get; private set; }
    public double Fee { get; private set; }
    public DateTime BetaExpirationDate { get; private set; }
    public long CurrentFileUsage { get; private set; }
    public IList`1<Entitlement> Entitlements { get; private set; }
    public EntitlementInfo(XmlNode entitlementNode);
    [CompilerGeneratedAttribute]
public string get_AppId();
    [CompilerGeneratedAttribute]
private void set_AppId(string value);
    [CompilerGeneratedAttribute]
public string get_ProductId();
    [CompilerGeneratedAttribute]
private void set_ProductId(string value);
    [CompilerGeneratedAttribute]
public string get_PlanName();
    [CompilerGeneratedAttribute]
private void set_PlanName(string value);
    [CompilerGeneratedAttribute]
public string get_PlanType();
    [CompilerGeneratedAttribute]
private void set_PlanType(string value);
    [CompilerGeneratedAttribute]
public int get_MaxUsers();
    [CompilerGeneratedAttribute]
private void set_MaxUsers(int value);
    [CompilerGeneratedAttribute]
public int get_CurrentUsers();
    [CompilerGeneratedAttribute]
private void set_CurrentUsers(int value);
    [CompilerGeneratedAttribute]
public int get_DaysRemaining();
    [CompilerGeneratedAttribute]
private void set_DaysRemaining(int value);
    [CompilerGeneratedAttribute]
public double get_Fee();
    [CompilerGeneratedAttribute]
private void set_Fee(double value);
    [CompilerGeneratedAttribute]
public DateTime get_BetaExpirationDate();
    [CompilerGeneratedAttribute]
private void set_BetaExpirationDate(DateTime value);
    [CompilerGeneratedAttribute]
public long get_CurrentFileUsage();
    [CompilerGeneratedAttribute]
private void set_CurrentFileUsage(long value);
    [CompilerGeneratedAttribute]
public IList`1<Entitlement> get_Entitlements();
    [CompilerGeneratedAttribute]
private void set_Entitlements(IList`1<Entitlement> value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.EntitlementsResponse : object {
    private bool qboCompanyField;
    private string planNameField;
    private string maxUsersField;
    private string currentUsersField;
    private string daysRemainingTrialField;
    private EntitlementsResponseEntitlement[] entitlementField;
    private Object[] thresholdsField;
    public bool QboCompany { get; public set; }
    public string PlanName { get; public set; }
    [XmlElementAttribute]
public string MaxUsers { get; public set; }
    [XmlElementAttribute]
public string CurrentUsers { get; public set; }
    [XmlElementAttribute]
public string DaysRemainingTrial { get; public set; }
    [XmlElementAttribute("Entitlement")]
public EntitlementsResponseEntitlement[] Entitlement { get; public set; }
    [XmlElementAttribute("Thresholds")]
public Object[] Thresholds { get; public set; }
    public bool get_QboCompany();
    public void set_QboCompany(bool value);
    public string get_PlanName();
    public void set_PlanName(string value);
    public string get_MaxUsers();
    public void set_MaxUsers(string value);
    public string get_CurrentUsers();
    public void set_CurrentUsers(string value);
    public string get_DaysRemainingTrial();
    public void set_DaysRemainingTrial(string value);
    public EntitlementsResponseEntitlement[] get_Entitlement();
    public void set_Entitlement(EntitlementsResponseEntitlement[] value);
    public Object[] get_Thresholds();
    public void set_Thresholds(Object[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
public class Intuit.Ipp.Data.EntitlementsResponseEntitlement : object {
    private string nameField;
    private EntitlementsResponseEntitlementTerm termField;
    private string idField;
    public string name { get; public set; }
    public EntitlementsResponseEntitlementTerm term { get; public set; }
    [XmlAttributeAttribute]
public string id { get; public set; }
    public string get_name();
    public void set_name(string value);
    public EntitlementsResponseEntitlementTerm get_term();
    public void set_term(EntitlementsResponseEntitlementTerm value);
    public string get_id();
    public void set_id(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.EntitlementsResponseEntitlementTerm : Enum {
    public int value__;
    public static EntitlementsResponseEntitlementTerm On;
    public static EntitlementsResponseEntitlementTerm Off;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.EntityStatusEnum : Enum {
    public int value__;
    public static EntityStatusEnum Deleted;
    public static EntityStatusEnum Voided;
    public static EntityStatusEnum Draft;
    public static EntityStatusEnum Pending;
    public static EntityStatusEnum InTransit;
    public static EntityStatusEnum Synchronized;
    public static EntityStatusEnum SyncError;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.EntityTypeEnum : Enum {
    public int value__;
    public static EntityTypeEnum Customer;
    public static EntityTypeEnum Employee;
    public static EntityTypeEnum Job;
    public static EntityTypeEnum Other;
    public static EntityTypeEnum Vendor;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.EntityTypeRef : object {
    private EntityTypeEnum typeField;
    private bool typeFieldSpecified;
    private ReferenceType entityRefField;
    public EntityTypeEnum Type { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TypeSpecified { get; public set; }
    public ReferenceType EntityRef { get; public set; }
    public EntityTypeEnum get_Type();
    public void set_Type(EntityTypeEnum value);
    public bool get_TypeSpecified();
    public void set_TypeSpecified(bool value);
    public ReferenceType get_EntityRef();
    public void set_EntityRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Error : object {
    private string messageField;
    private string detailField;
    private string detailLinkField;
    private string codeField;
    private string elementField;
    public string Message { get; public set; }
    public string Detail { get; public set; }
    public string DetailLink { get; public set; }
    [XmlAttributeAttribute]
public string code { get; public set; }
    [XmlAttributeAttribute]
public string element { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    public string get_Detail();
    public void set_Detail(string value);
    public string get_DetailLink();
    public void set_DetailLink(string value);
    public string get_code();
    public void set_code(string value);
    public string get_element();
    public void set_element(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Estimate : SalesTransaction {
    private DateTime expirationDateField;
    private bool expirationDateFieldSpecified;
    private string acceptedByField;
    private DateTime acceptedDateField;
    private bool acceptedDateFieldSpecified;
    private IntuitAnyType estimateExField;
    [XmlElementAttribute]
public DateTime ExpirationDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ExpirationDateSpecified { get; public set; }
    public string AcceptedBy { get; public set; }
    [XmlElementAttribute]
public DateTime AcceptedDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AcceptedDateSpecified { get; public set; }
    public IntuitAnyType EstimateEx { get; public set; }
    public DateTime get_ExpirationDate();
    public void set_ExpirationDate(DateTime value);
    public bool get_ExpirationDateSpecified();
    public void set_ExpirationDateSpecified(bool value);
    public string get_AcceptedBy();
    public void set_AcceptedBy(string value);
    public DateTime get_AcceptedDate();
    public void set_AcceptedDate(DateTime value);
    public bool get_AcceptedDateSpecified();
    public void set_AcceptedDateSpecified(bool value);
    public IntuitAnyType get_EstimateEx();
    public void set_EstimateEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.EstimateStatusEnum : Enum {
    public int value__;
    public static EstimateStatusEnum Active;
    public static EstimateStatusEnum NotActive;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ETransactionEnabledStatusEnum : Enum {
    public int value__;
    public static ETransactionEnabledStatusEnum Enabled;
    public static ETransactionEnabledStatusEnum NotApplicable;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ETransactionStatusEnum : Enum {
    public int value__;
    public static ETransactionStatusEnum Sent;
    public static ETransactionStatusEnum Viewed;
    public static ETransactionStatusEnum Paid;
    [XmlEnumAttribute("Delivery Error")]
public static ETransactionStatusEnum DeliveryError;
    public static ETransactionStatusEnum Updated;
    public static ETransactionStatusEnum Error;
    public static ETransactionStatusEnum Accepted;
    public static ETransactionStatusEnum Rejected;
    [XmlEnumAttribute("Sent With ICN Error")]
public static ETransactionStatusEnum SentWithICNError;
    public static ETransactionStatusEnum Delivered;
    public static ETransactionStatusEnum Disputed;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ExchangeRate : IntuitEntity {
    private string sourceCurrencyCodeField;
    private string targetCurrencyCodeField;
    private decimal rateField;
    private bool rateFieldSpecified;
    private DateTime asOfDateField;
    private bool asOfDateFieldSpecified;
    private IntuitAnyType exchangeRateExField;
    public string SourceCurrencyCode { get; public set; }
    public string TargetCurrencyCode { get; public set; }
    public decimal Rate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime AsOfDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AsOfDateSpecified { get; public set; }
    public IntuitAnyType ExchangeRateEx { get; public set; }
    public string get_SourceCurrencyCode();
    public void set_SourceCurrencyCode(string value);
    public string get_TargetCurrencyCode();
    public void set_TargetCurrencyCode(string value);
    public decimal get_Rate();
    public void set_Rate(decimal value);
    public bool get_RateSpecified();
    public void set_RateSpecified(bool value);
    public DateTime get_AsOfDate();
    public void set_AsOfDate(DateTime value);
    public bool get_AsOfDateSpecified();
    public void set_AsOfDateSpecified(bool value);
    public IntuitAnyType get_ExchangeRateEx();
    public void set_ExchangeRateEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Fault : object {
    private Error[] errorField;
    private string typeField;
    [XmlElementAttribute("Error")]
public Error[] Error { get; public set; }
    [XmlAttributeAttribute]
public string type { get; public set; }
    public Error[] get_Error();
    public void set_Error(Error[] value);
    public string get_type();
    public void set_type(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.FaultTypeEnum : Enum {
    public int value__;
    public static FaultTypeEnum AuthenticationFault;
    public static FaultTypeEnum AuthorizatonFault;
    public static FaultTypeEnum ValidationFault;
    public static FaultTypeEnum SystemFault;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.FifoCalculationStatus : Enum {
    public int value__;
    public static FifoCalculationStatus None;
    public static FifoCalculationStatus InProgress;
    public static FifoCalculationStatus Completed;
    public static FifoCalculationStatus Error;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.FinanceChargePrefs : object {
    private decimal annualInterestRateField;
    private bool annualInterestRateFieldSpecified;
    private decimal minFinChrgField;
    private bool minFinChrgFieldSpecified;
    private string gracePeriodField;
    private bool calcFinChrgFromTxnDateField;
    private bool calcFinChrgFromTxnDateFieldSpecified;
    private bool assessFinChrgForOverdueChargesField;
    private bool assessFinChrgForOverdueChargesFieldSpecified;
    private ReferenceType finChrgAccountRefField;
    public decimal AnnualInterestRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AnnualInterestRateSpecified { get; public set; }
    public decimal MinFinChrg { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MinFinChrgSpecified { get; public set; }
    [XmlElementAttribute]
public string GracePeriod { get; public set; }
    public bool CalcFinChrgFromTxnDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CalcFinChrgFromTxnDateSpecified { get; public set; }
    public bool AssessFinChrgForOverdueCharges { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AssessFinChrgForOverdueChargesSpecified { get; public set; }
    public ReferenceType FinChrgAccountRef { get; public set; }
    public decimal get_AnnualInterestRate();
    public void set_AnnualInterestRate(decimal value);
    public bool get_AnnualInterestRateSpecified();
    public void set_AnnualInterestRateSpecified(bool value);
    public decimal get_MinFinChrg();
    public void set_MinFinChrg(decimal value);
    public bool get_MinFinChrgSpecified();
    public void set_MinFinChrgSpecified(bool value);
    public string get_GracePeriod();
    public void set_GracePeriod(string value);
    public bool get_CalcFinChrgFromTxnDate();
    public void set_CalcFinChrgFromTxnDate(bool value);
    public bool get_CalcFinChrgFromTxnDateSpecified();
    public void set_CalcFinChrgFromTxnDateSpecified(bool value);
    public bool get_AssessFinChrgForOverdueCharges();
    public void set_AssessFinChrgForOverdueCharges(bool value);
    public bool get_AssessFinChrgForOverdueChargesSpecified();
    public void set_AssessFinChrgForOverdueChargesSpecified(bool value);
    public ReferenceType get_FinChrgAccountRef();
    public void set_FinChrgAccountRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.FinancingProductTypeEnum : Enum {
    public int value__;
    public static FinancingProductTypeEnum GET_PAID_UPFRONT;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.FixedAsset : IntuitEntity {
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private AcquiredAsEnum acquiredAsField;
    private bool acquiredAsFieldSpecified;
    private string purchaseDescField;
    private DateTime purchaseDateField;
    private bool purchaseDateFieldSpecified;
    private decimal purchaseCostField;
    private bool purchaseCostFieldSpecified;
    private string vendorField;
    private ReferenceType assetAccountRefField;
    private string salesDescField;
    private DateTime salesDateField;
    private bool salesDateFieldSpecified;
    private decimal salesPriceField;
    private bool salesPriceFieldSpecified;
    private decimal salesExpenseField;
    private bool salesExpenseFieldSpecified;
    private string locationField;
    private string pONumberField;
    private string serialNumberField;
    private DateTime warrantyExpDateField;
    private bool warrantyExpDateFieldSpecified;
    private string descriptionField;
    private string notesField;
    private int assetNumField;
    private bool assetNumFieldSpecified;
    private decimal costBasisField;
    private bool costBasisFieldSpecified;
    private decimal depreciationField;
    private bool depreciationFieldSpecified;
    private decimal bookValueField;
    private bool bookValueFieldSpecified;
    private IntuitAnyType fixedAssetExField;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public AcquiredAsEnum AcquiredAs { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AcquiredAsSpecified { get; public set; }
    public string PurchaseDesc { get; public set; }
    [XmlElementAttribute]
public DateTime PurchaseDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PurchaseDateSpecified { get; public set; }
    public decimal PurchaseCost { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PurchaseCostSpecified { get; public set; }
    public string Vendor { get; public set; }
    public ReferenceType AssetAccountRef { get; public set; }
    public string SalesDesc { get; public set; }
    [XmlElementAttribute]
public DateTime SalesDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SalesDateSpecified { get; public set; }
    public decimal SalesPrice { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SalesPriceSpecified { get; public set; }
    public decimal SalesExpense { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SalesExpenseSpecified { get; public set; }
    public string Location { get; public set; }
    public string PONumber { get; public set; }
    public string SerialNumber { get; public set; }
    [XmlElementAttribute]
public DateTime WarrantyExpDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool WarrantyExpDateSpecified { get; public set; }
    public string Description { get; public set; }
    public string Notes { get; public set; }
    public int AssetNum { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AssetNumSpecified { get; public set; }
    public decimal CostBasis { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CostBasisSpecified { get; public set; }
    public decimal Depreciation { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DepreciationSpecified { get; public set; }
    public decimal BookValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BookValueSpecified { get; public set; }
    public IntuitAnyType FixedAssetEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public AcquiredAsEnum get_AcquiredAs();
    public void set_AcquiredAs(AcquiredAsEnum value);
    public bool get_AcquiredAsSpecified();
    public void set_AcquiredAsSpecified(bool value);
    public string get_PurchaseDesc();
    public void set_PurchaseDesc(string value);
    public DateTime get_PurchaseDate();
    public void set_PurchaseDate(DateTime value);
    public bool get_PurchaseDateSpecified();
    public void set_PurchaseDateSpecified(bool value);
    public decimal get_PurchaseCost();
    public void set_PurchaseCost(decimal value);
    public bool get_PurchaseCostSpecified();
    public void set_PurchaseCostSpecified(bool value);
    public string get_Vendor();
    public void set_Vendor(string value);
    public ReferenceType get_AssetAccountRef();
    public void set_AssetAccountRef(ReferenceType value);
    public string get_SalesDesc();
    public void set_SalesDesc(string value);
    public DateTime get_SalesDate();
    public void set_SalesDate(DateTime value);
    public bool get_SalesDateSpecified();
    public void set_SalesDateSpecified(bool value);
    public decimal get_SalesPrice();
    public void set_SalesPrice(decimal value);
    public bool get_SalesPriceSpecified();
    public void set_SalesPriceSpecified(bool value);
    public decimal get_SalesExpense();
    public void set_SalesExpense(decimal value);
    public bool get_SalesExpenseSpecified();
    public void set_SalesExpenseSpecified(bool value);
    public string get_Location();
    public void set_Location(string value);
    public string get_PONumber();
    public void set_PONumber(string value);
    public string get_SerialNumber();
    public void set_SerialNumber(string value);
    public DateTime get_WarrantyExpDate();
    public void set_WarrantyExpDate(DateTime value);
    public bool get_WarrantyExpDateSpecified();
    public void set_WarrantyExpDateSpecified(bool value);
    public string get_Description();
    public void set_Description(string value);
    public string get_Notes();
    public void set_Notes(string value);
    public int get_AssetNum();
    public void set_AssetNum(int value);
    public bool get_AssetNumSpecified();
    public void set_AssetNumSpecified(bool value);
    public decimal get_CostBasis();
    public void set_CostBasis(decimal value);
    public bool get_CostBasisSpecified();
    public void set_CostBasisSpecified(bool value);
    public decimal get_Depreciation();
    public void set_Depreciation(decimal value);
    public bool get_DepreciationSpecified();
    public void set_DepreciationSpecified(bool value);
    public decimal get_BookValue();
    public void set_BookValue(decimal value);
    public bool get_BookValueSpecified();
    public void set_BookValueSpecified(bool value);
    public IntuitAnyType get_FixedAssetEx();
    public void set_FixedAssetEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.gender : Enum {
    public int value__;
    public static gender Male;
    public static gender Female;
}
public class Intuit.Ipp.Data.GeneralLedger : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.GenericContactType : object {
    private string idField;
    private string nameField;
    private string valueField;
    private string typeField;
    private bool defaultField;
    private bool defaultFieldSpecified;
    private string tagField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string Type { get; public set; }
    public bool Default { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultSpecified { get; public set; }
    public string Tag { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Value();
    public void set_Value(string value);
    public string get_Type();
    public void set_Type(string value);
    public bool get_Default();
    public void set_Default(bool value);
    public bool get_DefaultSpecified();
    public void set_DefaultSpecified(bool value);
    public string get_Tag();
    public void set_Tag(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.GlobalTaxCalculationEnum : Enum {
    public int value__;
    public static GlobalTaxCalculationEnum TaxInclusive;
    public static GlobalTaxCalculationEnum TaxExcluded;
    public static GlobalTaxCalculationEnum NotApplicable;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.GroupLineDetail : object {
    private ReferenceType groupItemRefField;
    private decimal quantityField;
    private bool quantityFieldSpecified;
    private UOMRef uOMRefField;
    private DateTime serviceDateField;
    private bool serviceDateFieldSpecified;
    private Line[] lineField;
    private IntuitAnyType groupLineDetailExField;
    public ReferenceType GroupItemRef { get; public set; }
    public decimal Quantity { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QuantitySpecified { get; public set; }
    public UOMRef UOMRef { get; public set; }
    [XmlElementAttribute]
public DateTime ServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ServiceDateSpecified { get; public set; }
    [XmlElementAttribute("Line")]
public Line[] Line { get; public set; }
    public IntuitAnyType GroupLineDetailEx { get; public set; }
    public ReferenceType get_GroupItemRef();
    public void set_GroupItemRef(ReferenceType value);
    public decimal get_Quantity();
    public void set_Quantity(decimal value);
    public bool get_QuantitySpecified();
    public void set_QuantitySpecified(bool value);
    public UOMRef get_UOMRef();
    public void set_UOMRef(UOMRef value);
    public DateTime get_ServiceDate();
    public void set_ServiceDate(DateTime value);
    public bool get_ServiceDateSpecified();
    public void set_ServiceDateSpecified(bool value);
    public Line[] get_Line();
    public void set_Line(Line[] value);
    public IntuitAnyType get_GroupLineDetailEx();
    public void set_GroupLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.GTMConfigTypeEnum : Enum {
    public int value__;
    public static GTMConfigTypeEnum SYSTEM_GENERATED;
    public static GTMConfigTypeEnum USER_DEFINED;
    public static GTMConfigTypeEnum SCRA_DEFINED;
    public static GTMConfigTypeEnum HIDDEN_AGENCY;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Header : object {
    private ColData[] colDataField;
    [XmlElementAttribute("ColData")]
public ColData[] ColData { get; public set; }
    public ColData[] get_ColData();
    public void set_ColData(ColData[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.idDomainEnum : Enum {
    public int value__;
    public static idDomainEnum BM;
    public static idDomainEnum NG;
    public static idDomainEnum PMT;
    public static idDomainEnum QB;
    public static idDomainEnum QBO;
    public static idDomainEnum QBSDK;
}
public interface Intuit.Ipp.Data.IEntity {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.IntuitAnyType : object {
    private XmlElement[] anyField;
    [XmlAnyElementAttribute]
public XmlElement[] Any { get; public set; }
    public XmlElement[] get_Any();
    public void set_Any(XmlElement[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.IntuitBatchRequest : object {
    private BatchItemRequest[] batchItemRequestField;
    [XmlElementAttribute("BatchItemRequest")]
public BatchItemRequest[] BatchItemRequest { get; public set; }
    public BatchItemRequest[] get_BatchItemRequest();
    public void set_BatchItemRequest(BatchItemRequest[] value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxService")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SyncActivity")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Status")]
[XmlIncludeAttribute("Intuit.Ipp.Data.RecurringTransaction")]
[XmlIncludeAttribute("Intuit.Ipp.Data.VendorType")]
[XmlIncludeAttribute("Intuit.Ipp.Data.JobType")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CustomerType")]
[XmlIncludeAttribute("Intuit.Ipp.Data.User")]
[XmlIncludeAttribute("Intuit.Ipp.Data.NameBase")]
[XmlIncludeAttribute("Intuit.Ipp.Data.OtherName")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Employee")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Vendor")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxAgency")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Customer")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxPayment")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxClassification")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxReturn")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TDSMetadata")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Budget")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Attachable")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TemplateName")]
[XmlIncludeAttribute("Intuit.Ipp.Data.UOM")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Preferences")]
[XmlIncludeAttribute("Intuit.Ipp.Data.UserAlert")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Task")]
[XmlIncludeAttribute("Intuit.Ipp.Data.ShipMethod")]
[XmlIncludeAttribute("Intuit.Ipp.Data.InventorySite")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TimeActivity")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CustomerMsg")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PriceLevelPerItem")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PriceLevel")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesRep")]
[XmlIncludeAttribute("Intuit.Ipp.Data.ExchangeRate")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CompanyCurrency")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Currency")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Term")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Item")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Department")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PaymentMethod")]
[XmlIncludeAttribute("Intuit.Ipp.Data.JournalCode")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Class")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Account")]
[XmlIncludeAttribute("Intuit.Ipp.Data.MasterAccount")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxRate")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxCode")]
[XmlIncludeAttribute("Intuit.Ipp.Data.FixedAsset")]
[XmlIncludeAttribute("Intuit.Ipp.Data.EmailDeliveryInfo")]
[XmlIncludeAttribute("Intuit.Ipp.Data.ConvenienceFeeDetail")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Tag")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Transaction")]
[XmlIncludeAttribute("Intuit.Ipp.Data.ChargeCredit")]
[XmlIncludeAttribute("Intuit.Ipp.Data.ReimburseCharge")]
[XmlIncludeAttribute("Intuit.Ipp.Data.JournalEntry")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Transfer")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Deposit")]
[XmlIncludeAttribute("Intuit.Ipp.Data.BillPayment")]
[XmlIncludeAttribute("Intuit.Ipp.Data.InventoryAdjustment")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Payment")]
[XmlIncludeAttribute("Intuit.Ipp.Data.StatementCharge")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PurchaseByVendor")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PurchaseOrder")]
[XmlIncludeAttribute("Intuit.Ipp.Data.VendorCredit")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Bill")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Purchase")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesTransaction")]
[XmlIncludeAttribute("Intuit.Ipp.Data.RefundReceipt")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CreditMemo")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesOrder")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Estimate")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesReceipt")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Invoice")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CompanyInfo")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Company")]
[XmlIncludeAttribute("Intuit.Ipp.Data.QbdtEntityIdMapping")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public abstract class Intuit.Ipp.Data.IntuitEntity : object {
    private string idField;
    private string syncTokenField;
    private ModificationMetaData metaDataField;
    private CustomField[] customFieldField;
    private AttachableRef[] attachableRefField;
    private string domainField;
    private EntityStatusEnum statusField;
    private bool statusFieldSpecified;
    private bool sparseField;
    private bool sparseFieldSpecified;
    [CompilerGeneratedAttribute]
private string <NameAndId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Overview>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HeaderLite>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HeaderFull>k__BackingField;
    public string Id { get; public set; }
    public string SyncToken { get; public set; }
    public ModificationMetaData MetaData { get; public set; }
    [XmlElementAttribute("CustomField")]
public CustomField[] CustomField { get; public set; }
    [XmlElementAttribute("AttachableRef")]
public AttachableRef[] AttachableRef { get; public set; }
    [XmlAttributeAttribute]
public string domain { get; public set; }
    [XmlAttributeAttribute]
public EntityStatusEnum status { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool statusSpecified { get; public set; }
    [XmlAttributeAttribute]
public bool sparse { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool sparseSpecified { get; public set; }
    [XmlIgnoreAttribute]
public string NameAndId { get; public set; }
    [XmlIgnoreAttribute]
public string Overview { get; public set; }
    [XmlIgnoreAttribute]
public string HeaderLite { get; public set; }
    [XmlIgnoreAttribute]
public string HeaderFull { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_SyncToken();
    public void set_SyncToken(string value);
    public ModificationMetaData get_MetaData();
    public void set_MetaData(ModificationMetaData value);
    public CustomField[] get_CustomField();
    public void set_CustomField(CustomField[] value);
    public AttachableRef[] get_AttachableRef();
    public void set_AttachableRef(AttachableRef[] value);
    public string get_domain();
    public void set_domain(string value);
    public EntityStatusEnum get_status();
    public void set_status(EntityStatusEnum value);
    public bool get_statusSpecified();
    public void set_statusSpecified(bool value);
    public bool get_sparse();
    public void set_sparse(bool value);
    public bool get_sparseSpecified();
    public void set_sparseSpecified(bool value);
    [CompilerGeneratedAttribute]
public string get_NameAndId();
    [CompilerGeneratedAttribute]
public void set_NameAndId(string value);
    [CompilerGeneratedAttribute]
public string get_Overview();
    [CompilerGeneratedAttribute]
public void set_Overview(string value);
    [CompilerGeneratedAttribute]
public string get_HeaderLite();
    [CompilerGeneratedAttribute]
public void set_HeaderLite(string value);
    [CompilerGeneratedAttribute]
public string get_HeaderFull();
    [CompilerGeneratedAttribute]
public void set_HeaderFull(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.IntuitResponse : object {
    private Warning[] warningsField;
    private Object[] itemsField;
    private string requestIdField;
    private DateTime timeField;
    private bool timeFieldSpecified;
    private string statusField;
    private object itemField;
    [XmlArrayItemAttribute]
public Warning[] Warnings { get; public set; }
    [XmlElementAttribute("AttachableResponse", "Intuit.Ipp.Data.AttachableResponse")]
[XmlElementAttribute("BatchItemResponse", "Intuit.Ipp.Data.BatchItemResponse")]
[XmlElementAttribute("CDCResponse", "Intuit.Ipp.Data.CDCResponse")]
[XmlElementAttribute("IntuitObject", "Intuit.Ipp.Data.IntuitEntity")]
[XmlElementAttribute("TaxService", "Intuit.Ipp.Data.TaxService")]
public Object[] AnyIntuitObjects { get; public set; }
    [XmlAttributeAttribute]
public string requestId { get; public set; }
    [XmlAttributeAttribute]
public DateTime time { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool timeSpecified { get; public set; }
    [XmlAttributeAttribute]
public string status { get; public set; }
    [XmlElementAttribute("RecurringTransaction", "Intuit.Ipp.Data.RecurringTransaction")]
[XmlElementAttribute("Customer", "Intuit.Ipp.Data.Customer")]
[XmlElementAttribute("CustomerType", "Intuit.Ipp.Data.CustomerType")]
[XmlElementAttribute("Employee", "Intuit.Ipp.Data.Employee")]
[XmlElementAttribute("Vendor", "Intuit.Ipp.Data.Vendor")]
[XmlElementAttribute("OtherName", "Intuit.Ipp.Data.OtherName")]
[XmlElementAttribute("Estimate", "Intuit.Ipp.Data.Estimate")]
[XmlElementAttribute("SalesOrder", "Intuit.Ipp.Data.SalesOrder")]
[XmlElementAttribute("SalesReceipt", "Intuit.Ipp.Data.SalesReceipt")]
[XmlElementAttribute("PurchaseOrder", "Intuit.Ipp.Data.PurchaseOrder")]
[XmlElementAttribute("Purchase", "Intuit.Ipp.Data.Purchase")]
[XmlElementAttribute("BillPayment", "Intuit.Ipp.Data.BillPayment")]
[XmlElementAttribute("Payment", "Intuit.Ipp.Data.Payment")]
[XmlElementAttribute("CreditMemo", "Intuit.Ipp.Data.CreditMemo")]
[XmlElementAttribute("StatementCharge", "Intuit.Ipp.Data.StatementCharge")]
[XmlElementAttribute("ChargeCredit", "Intuit.Ipp.Data.ChargeCredit")]
[XmlElementAttribute("CreditCardPaymentTxn", "Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlElementAttribute("ReimburseCharge", "Intuit.Ipp.Data.ReimburseCharge")]
[XmlElementAttribute("PaymentMethod", "Intuit.Ipp.Data.PaymentMethod")]
[XmlElementAttribute("Term", "Intuit.Ipp.Data.Term")]
[XmlElementAttribute("JournalEntry", "Intuit.Ipp.Data.JournalEntry")]
[XmlElementAttribute("Transfer", "Intuit.Ipp.Data.Transfer")]
[XmlElementAttribute("Deposit", "Intuit.Ipp.Data.Deposit")]
[XmlElementAttribute("Class", "Intuit.Ipp.Data.Class")]
[XmlElementAttribute("TimeActivity", "Intuit.Ipp.Data.TimeActivity")]
[XmlElementAttribute("Item", "Intuit.Ipp.Data.Item")]
[XmlElementAttribute("TaxClassification", "Intuit.Ipp.Data.TaxClassification")]
[XmlElementAttribute("TaxCode", "Intuit.Ipp.Data.TaxCode")]
[XmlElementAttribute("TaxPayment", "Intuit.Ipp.Data.TaxPayment")]
[XmlElementAttribute("TaxReturn", "Intuit.Ipp.Data.TaxReturn")]
[XmlElementAttribute("TaxRate", "Intuit.Ipp.Data.TaxRate")]
[XmlElementAttribute("VendorCredit", "Intuit.Ipp.Data.VendorCredit")]
[XmlElementAttribute("SalesRep", "Intuit.Ipp.Data.SalesRep")]
[XmlElementAttribute("InventorySite", "Intuit.Ipp.Data.InventorySite")]
[XmlElementAttribute("Task", "Intuit.Ipp.Data.Task")]
[XmlElementAttribute("UserAlert", "Intuit.Ipp.Data.UserAlert")]
[XmlElementAttribute("VendorType", "Intuit.Ipp.Data.VendorType")]
[XmlElementAttribute("PriceLevel", "Intuit.Ipp.Data.PriceLevel")]
[XmlElementAttribute("Company", "Intuit.Ipp.Data.Company")]
[XmlElementAttribute("CompanyInfo", "Intuit.Ipp.Data.CompanyInfo")]
[XmlElementAttribute("FixedAsset", "Intuit.Ipp.Data.FixedAsset")]
[XmlElementAttribute("RefundReceipt", "Intuit.Ipp.Data.RefundReceipt")]
[XmlElementAttribute("Account", "Intuit.Ipp.Data.Account")]
[XmlElementAttribute("Preferences", "Intuit.Ipp.Data.Preferences")]
[XmlElementAttribute("Invoice", "Intuit.Ipp.Data.Invoice")]
[XmlElementAttribute("EmailDeliveryInfo", "Intuit.Ipp.Data.EmailDeliveryInfo")]
[XmlElementAttribute("Department", "Intuit.Ipp.Data.Department")]
[XmlElementAttribute("Bill", "Intuit.Ipp.Data.Bill")]
[XmlElementAttribute("Attachable", "Intuit.Ipp.Data.Attachable")]
[XmlElementAttribute("InventoryAdjustment", "Intuit.Ipp.Data.InventoryAdjustment")]
[XmlElementAttribute("BooleanTypeCustomFieldDefinition", "Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlElementAttribute("CustomFieldDefinition", "Intuit.Ipp.Data.CustomFieldDefinition")]
[XmlElementAttribute("DateTypeCustomFieldDefinition", "Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlElementAttribute("NumberTypeCustomFieldDefinition", "Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlElementAttribute("StringTypeCustomFieldDefinition", "Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[XmlElementAttribute("Status", "Intuit.Ipp.Data.Status")]
[XmlElementAttribute("SyncActivity", "Intuit.Ipp.Data.SyncActivity")]
[XmlElementAttribute("Budget", "Intuit.Ipp.Data.Budget")]
[XmlElementAttribute("TaxAgency", "Intuit.Ipp.Data.TaxAgency")]
[XmlElementAttribute("TDSMetadata", "Intuit.Ipp.Data.TDSMetadata")]
[XmlElementAttribute("CompanyCurrency", "Intuit.Ipp.Data.CompanyCurrency")]
[XmlElementAttribute("ExchangeRate", "Intuit.Ipp.Data.ExchangeRate")]
[XmlElementAttribute("JournalCode", "Intuit.Ipp.Data.JournalCode")]
[XmlElementAttribute("QbdtEntityIdMapping", "Intuit.Ipp.Data.QbdtEntityIdMapping")]
[XmlElementAttribute("MasterAccount", "Intuit.Ipp.Data.MasterAccount")]
[XmlElementAttribute("Tag", "Intuit.Ipp.Data.Tag")]
[XmlElementAttribute("Fault", "Intuit.Ipp.Data.Fault")]
[XmlElementAttribute("Report", "Intuit.Ipp.Data.Report")]
[XmlElementAttribute("QueryResponse", "Intuit.Ipp.Data.QueryResponse")]
[XmlElementAttribute("SyncErrorResponse", "Intuit.Ipp.Data.SyncErrorResponse")]
[XmlElementAttribute("OLBTransaction", "Intuit.Ipp.Data.OLBTransaction")]
[XmlElementAttribute("OLBStatus", "Intuit.Ipp.Data.OLBStatus")]
public object AnyIntuitObject { get; public set; }
    public Warning[] get_Warnings();
    public void set_Warnings(Warning[] value);
    public Object[] get_AnyIntuitObjects();
    public void set_AnyIntuitObjects(Object[] value);
    public string get_requestId();
    public void set_requestId(string value);
    public DateTime get_time();
    public void set_time(DateTime value);
    public bool get_timeSpecified();
    public void set_timeSpecified(bool value);
    public string get_status();
    public void set_status(string value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.InventoryAdjustment : Transaction {
    private bool shippingAdjustmentField;
    private bool shippingAdjustmentFieldSpecified;
    private ReferenceType adjustAccountRefField;
    private ReferenceType customerRefField;
    public bool ShippingAdjustment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ShippingAdjustmentSpecified { get; public set; }
    public ReferenceType AdjustAccountRef { get; public set; }
    public ReferenceType CustomerRef { get; public set; }
    public bool get_ShippingAdjustment();
    public void set_ShippingAdjustment(bool value);
    public bool get_ShippingAdjustmentSpecified();
    public void set_ShippingAdjustmentSpecified(bool value);
    public ReferenceType get_AdjustAccountRef();
    public void set_AdjustAccountRef(ReferenceType value);
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.InventorySite : IntuitEntity {
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private bool defaultSiteField;
    private bool defaultSiteFieldSpecified;
    private string descriptionField;
    private string contactField;
    private PhysicalAddress[] addrField;
    private ContactInfo[] contactInfoField;
    private IntuitAnyType inventorySiteExField;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public bool DefaultSite { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultSiteSpecified { get; public set; }
    public string Description { get; public set; }
    public string Contact { get; public set; }
    [XmlElementAttribute("Addr")]
public PhysicalAddress[] Addr { get; public set; }
    [XmlElementAttribute("ContactInfo")]
public ContactInfo[] ContactInfo { get; public set; }
    public IntuitAnyType InventorySiteEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public bool get_DefaultSite();
    public void set_DefaultSite(bool value);
    public bool get_DefaultSiteSpecified();
    public void set_DefaultSiteSpecified(bool value);
    public string get_Description();
    public void set_Description(string value);
    public string get_Contact();
    public void set_Contact(string value);
    public PhysicalAddress[] get_Addr();
    public void set_Addr(PhysicalAddress[] value);
    public ContactInfo[] get_ContactInfo();
    public void set_ContactInfo(ContactInfo[] value);
    public IntuitAnyType get_InventorySiteEx();
    public void set_InventorySiteEx(IntuitAnyType value);
}
public class Intuit.Ipp.Data.InventoryValuationSummary : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Invoice : SalesTransaction {
    private decimal depositField;
    private bool depositFieldSpecified;
    private bool allowIPNPaymentField;
    private bool allowIPNPaymentFieldSpecified;
    private bool allowOnlinePaymentField;
    private bool allowOnlinePaymentFieldSpecified;
    private bool allowOnlineCreditCardPaymentField;
    private bool allowOnlineCreditCardPaymentFieldSpecified;
    private bool allowOnlineACHPaymentField;
    private bool allowOnlineACHPaymentFieldSpecified;
    private bool allowOnlinePayPalPaymentField;
    private bool allowOnlinePayPalPaymentFieldSpecified;
    private ETransactionStatusEnum eInvoiceStatusField;
    private bool eInvoiceStatusFieldSpecified;
    private DateTime eCloudStatusTimeStampField;
    private bool eCloudStatusTimeStampFieldSpecified;
    private int cfdiUseField;
    private bool cfdiUseFieldSpecified;
    private string exportationField;
    private MXGlobalInfo globalInfoField;
    private string invoiceStatusField;
    private string callToActionField;
    private StatusInfo[] invoiceStatusLogField;
    private IntuitAnyType invoiceExField;
    private decimal lessCISField;
    private bool lessCISFieldSpecified;
    private string invoiceLinkField;
    private string paymentDetailsMessageField;
    private ConvenienceFeeDetail convenienceFeeDetailField;
    private string invoiceLinkSecurityCodeField;
    private DateTime invoiceLinkExpiryDateField;
    private bool invoiceLinkExpiryDateFieldSpecified;
    private bool autoPayEligibleField;
    private bool autoPayEligibleFieldSpecified;
    private bool schedulePayEligibleField;
    private bool schedulePayEligibleFieldSpecified;
    private string scheduledPaymentIdField;
    private bool gratuityEnabledField;
    private bool gratuityEnabledFieldSpecified;
    private FinancingProductTypeEnum financingProductTypeField;
    private bool financingProductTypeFieldSpecified;
    private SubscriptionPaymentsSettingEnum subscriptionPaymentsSettingField;
    private bool subscriptionPaymentsSettingFieldSpecified;
    public decimal Deposit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DepositSpecified { get; public set; }
    public bool AllowIPNPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowIPNPaymentSpecified { get; public set; }
    public bool AllowOnlinePayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowOnlinePaymentSpecified { get; public set; }
    public bool AllowOnlineCreditCardPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowOnlineCreditCardPaymentSpecified { get; public set; }
    public bool AllowOnlineACHPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowOnlineACHPaymentSpecified { get; public set; }
    public bool AllowOnlinePayPalPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowOnlinePayPalPaymentSpecified { get; public set; }
    public ETransactionStatusEnum EInvoiceStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EInvoiceStatusSpecified { get; public set; }
    public DateTime ECloudStatusTimeStamp { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ECloudStatusTimeStampSpecified { get; public set; }
    public int CfdiUse { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CfdiUseSpecified { get; public set; }
    public string Exportation { get; public set; }
    public MXGlobalInfo GlobalInfo { get; public set; }
    public string invoiceStatus { get; public set; }
    public string callToAction { get; public set; }
    [XmlElementAttribute("invoiceStatusLog")]
public StatusInfo[] invoiceStatusLog { get; public set; }
    public IntuitAnyType InvoiceEx { get; public set; }
    public decimal LessCIS { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LessCISSpecified { get; public set; }
    public string InvoiceLink { get; public set; }
    public string PaymentDetailsMessage { get; public set; }
    public ConvenienceFeeDetail ConvenienceFeeDetail { get; public set; }
    public string InvoiceLinkSecurityCode { get; public set; }
    [XmlElementAttribute]
public DateTime InvoiceLinkExpiryDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool InvoiceLinkExpiryDateSpecified { get; public set; }
    public bool AutoPayEligible { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AutoPayEligibleSpecified { get; public set; }
    public bool SchedulePayEligible { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SchedulePayEligibleSpecified { get; public set; }
    public string ScheduledPaymentId { get; public set; }
    public bool GratuityEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool GratuityEnabledSpecified { get; public set; }
    public FinancingProductTypeEnum FinancingProductType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FinancingProductTypeSpecified { get; public set; }
    public SubscriptionPaymentsSettingEnum SubscriptionPaymentsSetting { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SubscriptionPaymentsSettingSpecified { get; public set; }
    public decimal get_Deposit();
    public void set_Deposit(decimal value);
    public bool get_DepositSpecified();
    public void set_DepositSpecified(bool value);
    public bool get_AllowIPNPayment();
    public void set_AllowIPNPayment(bool value);
    public bool get_AllowIPNPaymentSpecified();
    public void set_AllowIPNPaymentSpecified(bool value);
    public bool get_AllowOnlinePayment();
    public void set_AllowOnlinePayment(bool value);
    public bool get_AllowOnlinePaymentSpecified();
    public void set_AllowOnlinePaymentSpecified(bool value);
    public bool get_AllowOnlineCreditCardPayment();
    public void set_AllowOnlineCreditCardPayment(bool value);
    public bool get_AllowOnlineCreditCardPaymentSpecified();
    public void set_AllowOnlineCreditCardPaymentSpecified(bool value);
    public bool get_AllowOnlineACHPayment();
    public void set_AllowOnlineACHPayment(bool value);
    public bool get_AllowOnlineACHPaymentSpecified();
    public void set_AllowOnlineACHPaymentSpecified(bool value);
    public bool get_AllowOnlinePayPalPayment();
    public void set_AllowOnlinePayPalPayment(bool value);
    public bool get_AllowOnlinePayPalPaymentSpecified();
    public void set_AllowOnlinePayPalPaymentSpecified(bool value);
    public ETransactionStatusEnum get_EInvoiceStatus();
    public void set_EInvoiceStatus(ETransactionStatusEnum value);
    public bool get_EInvoiceStatusSpecified();
    public void set_EInvoiceStatusSpecified(bool value);
    public DateTime get_ECloudStatusTimeStamp();
    public void set_ECloudStatusTimeStamp(DateTime value);
    public bool get_ECloudStatusTimeStampSpecified();
    public void set_ECloudStatusTimeStampSpecified(bool value);
    public int get_CfdiUse();
    public void set_CfdiUse(int value);
    public bool get_CfdiUseSpecified();
    public void set_CfdiUseSpecified(bool value);
    public string get_Exportation();
    public void set_Exportation(string value);
    public MXGlobalInfo get_GlobalInfo();
    public void set_GlobalInfo(MXGlobalInfo value);
    public string get_invoiceStatus();
    public void set_invoiceStatus(string value);
    public string get_callToAction();
    public void set_callToAction(string value);
    public StatusInfo[] get_invoiceStatusLog();
    public void set_invoiceStatusLog(StatusInfo[] value);
    public IntuitAnyType get_InvoiceEx();
    public void set_InvoiceEx(IntuitAnyType value);
    public decimal get_LessCIS();
    public void set_LessCIS(decimal value);
    public bool get_LessCISSpecified();
    public void set_LessCISSpecified(bool value);
    public string get_InvoiceLink();
    public void set_InvoiceLink(string value);
    public string get_PaymentDetailsMessage();
    public void set_PaymentDetailsMessage(string value);
    public ConvenienceFeeDetail get_ConvenienceFeeDetail();
    public void set_ConvenienceFeeDetail(ConvenienceFeeDetail value);
    public string get_InvoiceLinkSecurityCode();
    public void set_InvoiceLinkSecurityCode(string value);
    public DateTime get_InvoiceLinkExpiryDate();
    public void set_InvoiceLinkExpiryDate(DateTime value);
    public bool get_InvoiceLinkExpiryDateSpecified();
    public void set_InvoiceLinkExpiryDateSpecified(bool value);
    public bool get_AutoPayEligible();
    public void set_AutoPayEligible(bool value);
    public bool get_AutoPayEligibleSpecified();
    public void set_AutoPayEligibleSpecified(bool value);
    public bool get_SchedulePayEligible();
    public void set_SchedulePayEligible(bool value);
    public bool get_SchedulePayEligibleSpecified();
    public void set_SchedulePayEligibleSpecified(bool value);
    public string get_ScheduledPaymentId();
    public void set_ScheduledPaymentId(string value);
    public bool get_GratuityEnabled();
    public void set_GratuityEnabled(bool value);
    public bool get_GratuityEnabledSpecified();
    public void set_GratuityEnabledSpecified(bool value);
    public FinancingProductTypeEnum get_FinancingProductType();
    public void set_FinancingProductType(FinancingProductTypeEnum value);
    public bool get_FinancingProductTypeSpecified();
    public void set_FinancingProductTypeSpecified(bool value);
    public SubscriptionPaymentsSettingEnum get_SubscriptionPaymentsSetting();
    public void set_SubscriptionPaymentsSetting(SubscriptionPaymentsSettingEnum value);
    public bool get_SubscriptionPaymentsSettingSpecified();
    public void set_SubscriptionPaymentsSettingSpecified(bool value);
}
public interface Intuit.Ipp.Data.IQuery {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Item : IntuitEntity {
    private string nameField;
    private string skuField;
    private string descriptionField;
    private bool activeField;
    private bool activeFieldSpecified;
    private bool subItemField;
    private bool subItemFieldSpecified;
    private ReferenceType parentRefField;
    private int levelField;
    private bool levelFieldSpecified;
    private string fullyQualifiedNameField;
    private bool taxableField;
    private bool taxableFieldSpecified;
    private bool salesTaxIncludedField;
    private bool salesTaxIncludedFieldSpecified;
    private bool percentBasedField;
    private bool percentBasedFieldSpecified;
    private decimal unitPriceField;
    private bool unitPriceFieldSpecified;
    private decimal ratePercentField;
    private bool ratePercentFieldSpecified;
    private ItemTypeEnum typeField;
    private bool typeFieldSpecified;
    private ReferenceType paymentMethodRefField;
    private ReferenceType uOMSetRefField;
    private ReferenceType incomeAccountRefField;
    private string purchaseDescField;
    private bool purchaseTaxIncludedField;
    private bool purchaseTaxIncludedFieldSpecified;
    private decimal purchaseCostField;
    private bool purchaseCostFieldSpecified;
    private ReferenceType expenseAccountRefField;
    private ReferenceType cOGSAccountRefField;
    private ReferenceType assetAccountRefField;
    private ReferenceType prefVendorRefField;
    private decimal avgCostField;
    private bool avgCostFieldSpecified;
    private bool trackQtyOnHandField;
    private bool trackQtyOnHandFieldSpecified;
    private decimal qtyOnHandField;
    private bool qtyOnHandFieldSpecified;
    private decimal qtyOnPurchaseOrderField;
    private bool qtyOnPurchaseOrderFieldSpecified;
    private decimal qtyOnSalesOrderField;
    private bool qtyOnSalesOrderFieldSpecified;
    private decimal reorderPointField;
    private bool reorderPointFieldSpecified;
    private string manPartNumField;
    private ReferenceType depositToAccountRefField;
    private ReferenceType salesTaxCodeRefField;
    private ReferenceType purchaseTaxCodeRefField;
    private DateTime invStartDateField;
    private bool invStartDateFieldSpecified;
    private decimal buildPointField;
    private bool buildPointFieldSpecified;
    private bool printGroupedItemsField;
    private bool printGroupedItemsFieldSpecified;
    private bool specialItemField;
    private bool specialItemFieldSpecified;
    private SpecialItemTypeEnum specialItemTypeField;
    private bool specialItemTypeFieldSpecified;
    private ItemComponentLine[] itemGroupDetailField;
    private ItemComponentLine[] itemAssemblyDetailField;
    private decimal abatementRateField;
    private bool abatementRateFieldSpecified;
    private decimal reverseChargeRateField;
    private bool reverseChargeRateFieldSpecified;
    private string serviceTypeField;
    private string itemCategoryTypeField;
    private IntuitAnyType itemExField;
    private ReferenceType taxClassificationRefField;
    private string uQCDisplayTextField;
    private string uQCIdField;
    private ReferenceType classRefField;
    private string sourceField;
    private bool deferredRevenueField;
    private bool deferredRevenueFieldSpecified;
    public string Name { get; public set; }
    public string Sku { get; public set; }
    public string Description { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public bool SubItem { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SubItemSpecified { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public int Level { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LevelSpecified { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public bool Taxable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxableSpecified { get; public set; }
    public bool SalesTaxIncluded { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SalesTaxIncludedSpecified { get; public set; }
    public bool PercentBased { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PercentBasedSpecified { get; public set; }
    public decimal UnitPrice { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UnitPriceSpecified { get; public set; }
    public decimal RatePercent { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RatePercentSpecified { get; public set; }
    public ItemTypeEnum Type { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TypeSpecified { get; public set; }
    public ReferenceType PaymentMethodRef { get; public set; }
    public ReferenceType UOMSetRef { get; public set; }
    public ReferenceType IncomeAccountRef { get; public set; }
    public string PurchaseDesc { get; public set; }
    public bool PurchaseTaxIncluded { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PurchaseTaxIncludedSpecified { get; public set; }
    public decimal PurchaseCost { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PurchaseCostSpecified { get; public set; }
    public ReferenceType ExpenseAccountRef { get; public set; }
    public ReferenceType COGSAccountRef { get; public set; }
    public ReferenceType AssetAccountRef { get; public set; }
    public ReferenceType PrefVendorRef { get; public set; }
    public decimal AvgCost { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AvgCostSpecified { get; public set; }
    public bool TrackQtyOnHand { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackQtyOnHandSpecified { get; public set; }
    public decimal QtyOnHand { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QtyOnHandSpecified { get; public set; }
    public decimal QtyOnPurchaseOrder { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QtyOnPurchaseOrderSpecified { get; public set; }
    public decimal QtyOnSalesOrder { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QtyOnSalesOrderSpecified { get; public set; }
    public decimal ReorderPoint { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReorderPointSpecified { get; public set; }
    public string ManPartNum { get; public set; }
    public ReferenceType DepositToAccountRef { get; public set; }
    public ReferenceType SalesTaxCodeRef { get; public set; }
    public ReferenceType PurchaseTaxCodeRef { get; public set; }
    [XmlElementAttribute]
public DateTime InvStartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool InvStartDateSpecified { get; public set; }
    public decimal BuildPoint { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BuildPointSpecified { get; public set; }
    public bool PrintGroupedItems { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintGroupedItemsSpecified { get; public set; }
    public bool SpecialItem { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SpecialItemSpecified { get; public set; }
    public SpecialItemTypeEnum SpecialItemType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SpecialItemTypeSpecified { get; public set; }
    [XmlArrayItemAttribute("ItemGroupLine")]
public ItemComponentLine[] ItemGroupDetail { get; public set; }
    [XmlArrayItemAttribute("ItemAssemblyLine")]
public ItemComponentLine[] ItemAssemblyDetail { get; public set; }
    public decimal AbatementRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AbatementRateSpecified { get; public set; }
    public decimal ReverseChargeRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReverseChargeRateSpecified { get; public set; }
    public string ServiceType { get; public set; }
    public string ItemCategoryType { get; public set; }
    public IntuitAnyType ItemEx { get; public set; }
    public ReferenceType TaxClassificationRef { get; public set; }
    public string UQCDisplayText { get; public set; }
    public string UQCId { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public string Source { get; public set; }
    public bool DeferredRevenue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DeferredRevenueSpecified { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Sku();
    public void set_Sku(string value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public bool get_SubItem();
    public void set_SubItem(bool value);
    public bool get_SubItemSpecified();
    public void set_SubItemSpecified(bool value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public int get_Level();
    public void set_Level(int value);
    public bool get_LevelSpecified();
    public void set_LevelSpecified(bool value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public bool get_Taxable();
    public void set_Taxable(bool value);
    public bool get_TaxableSpecified();
    public void set_TaxableSpecified(bool value);
    public bool get_SalesTaxIncluded();
    public void set_SalesTaxIncluded(bool value);
    public bool get_SalesTaxIncludedSpecified();
    public void set_SalesTaxIncludedSpecified(bool value);
    public bool get_PercentBased();
    public void set_PercentBased(bool value);
    public bool get_PercentBasedSpecified();
    public void set_PercentBasedSpecified(bool value);
    public decimal get_UnitPrice();
    public void set_UnitPrice(decimal value);
    public bool get_UnitPriceSpecified();
    public void set_UnitPriceSpecified(bool value);
    public decimal get_RatePercent();
    public void set_RatePercent(decimal value);
    public bool get_RatePercentSpecified();
    public void set_RatePercentSpecified(bool value);
    public ItemTypeEnum get_Type();
    public void set_Type(ItemTypeEnum value);
    public bool get_TypeSpecified();
    public void set_TypeSpecified(bool value);
    public ReferenceType get_PaymentMethodRef();
    public void set_PaymentMethodRef(ReferenceType value);
    public ReferenceType get_UOMSetRef();
    public void set_UOMSetRef(ReferenceType value);
    public ReferenceType get_IncomeAccountRef();
    public void set_IncomeAccountRef(ReferenceType value);
    public string get_PurchaseDesc();
    public void set_PurchaseDesc(string value);
    public bool get_PurchaseTaxIncluded();
    public void set_PurchaseTaxIncluded(bool value);
    public bool get_PurchaseTaxIncludedSpecified();
    public void set_PurchaseTaxIncludedSpecified(bool value);
    public decimal get_PurchaseCost();
    public void set_PurchaseCost(decimal value);
    public bool get_PurchaseCostSpecified();
    public void set_PurchaseCostSpecified(bool value);
    public ReferenceType get_ExpenseAccountRef();
    public void set_ExpenseAccountRef(ReferenceType value);
    public ReferenceType get_COGSAccountRef();
    public void set_COGSAccountRef(ReferenceType value);
    public ReferenceType get_AssetAccountRef();
    public void set_AssetAccountRef(ReferenceType value);
    public ReferenceType get_PrefVendorRef();
    public void set_PrefVendorRef(ReferenceType value);
    public decimal get_AvgCost();
    public void set_AvgCost(decimal value);
    public bool get_AvgCostSpecified();
    public void set_AvgCostSpecified(bool value);
    public bool get_TrackQtyOnHand();
    public void set_TrackQtyOnHand(bool value);
    public bool get_TrackQtyOnHandSpecified();
    public void set_TrackQtyOnHandSpecified(bool value);
    public decimal get_QtyOnHand();
    public void set_QtyOnHand(decimal value);
    public bool get_QtyOnHandSpecified();
    public void set_QtyOnHandSpecified(bool value);
    public decimal get_QtyOnPurchaseOrder();
    public void set_QtyOnPurchaseOrder(decimal value);
    public bool get_QtyOnPurchaseOrderSpecified();
    public void set_QtyOnPurchaseOrderSpecified(bool value);
    public decimal get_QtyOnSalesOrder();
    public void set_QtyOnSalesOrder(decimal value);
    public bool get_QtyOnSalesOrderSpecified();
    public void set_QtyOnSalesOrderSpecified(bool value);
    public decimal get_ReorderPoint();
    public void set_ReorderPoint(decimal value);
    public bool get_ReorderPointSpecified();
    public void set_ReorderPointSpecified(bool value);
    public string get_ManPartNum();
    public void set_ManPartNum(string value);
    public ReferenceType get_DepositToAccountRef();
    public void set_DepositToAccountRef(ReferenceType value);
    public ReferenceType get_SalesTaxCodeRef();
    public void set_SalesTaxCodeRef(ReferenceType value);
    public ReferenceType get_PurchaseTaxCodeRef();
    public void set_PurchaseTaxCodeRef(ReferenceType value);
    public DateTime get_InvStartDate();
    public void set_InvStartDate(DateTime value);
    public bool get_InvStartDateSpecified();
    public void set_InvStartDateSpecified(bool value);
    public decimal get_BuildPoint();
    public void set_BuildPoint(decimal value);
    public bool get_BuildPointSpecified();
    public void set_BuildPointSpecified(bool value);
    public bool get_PrintGroupedItems();
    public void set_PrintGroupedItems(bool value);
    public bool get_PrintGroupedItemsSpecified();
    public void set_PrintGroupedItemsSpecified(bool value);
    public bool get_SpecialItem();
    public void set_SpecialItem(bool value);
    public bool get_SpecialItemSpecified();
    public void set_SpecialItemSpecified(bool value);
    public SpecialItemTypeEnum get_SpecialItemType();
    public void set_SpecialItemType(SpecialItemTypeEnum value);
    public bool get_SpecialItemTypeSpecified();
    public void set_SpecialItemTypeSpecified(bool value);
    public ItemComponentLine[] get_ItemGroupDetail();
    public void set_ItemGroupDetail(ItemComponentLine[] value);
    public ItemComponentLine[] get_ItemAssemblyDetail();
    public void set_ItemAssemblyDetail(ItemComponentLine[] value);
    public decimal get_AbatementRate();
    public void set_AbatementRate(decimal value);
    public bool get_AbatementRateSpecified();
    public void set_AbatementRateSpecified(bool value);
    public decimal get_ReverseChargeRate();
    public void set_ReverseChargeRate(decimal value);
    public bool get_ReverseChargeRateSpecified();
    public void set_ReverseChargeRateSpecified(bool value);
    public string get_ServiceType();
    public void set_ServiceType(string value);
    public string get_ItemCategoryType();
    public void set_ItemCategoryType(string value);
    public IntuitAnyType get_ItemEx();
    public void set_ItemEx(IntuitAnyType value);
    public ReferenceType get_TaxClassificationRef();
    public void set_TaxClassificationRef(ReferenceType value);
    public string get_UQCDisplayText();
    public void set_UQCDisplayText(string value);
    public string get_UQCId();
    public void set_UQCId(string value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public string get_Source();
    public void set_Source(string value);
    public bool get_DeferredRevenue();
    public void set_DeferredRevenue(bool value);
    public bool get_DeferredRevenueSpecified();
    public void set_DeferredRevenueSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ItemAdjustmentLineDetail : object {
    private ReferenceType itemRefField;
    private decimal salesPriceField;
    private bool salesPriceFieldSpecified;
    private decimal itemField;
    private ItemChoiceType1 itemElementNameField;
    private ReferenceType classRefField;
    public ReferenceType ItemRef { get; public set; }
    public decimal SalesPrice { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SalesPriceSpecified { get; public set; }
    [XmlElementAttribute("NewQty", "System.Decimal")]
[XmlElementAttribute("QtyDiff", "System.Decimal")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public decimal AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType1 ItemElementName { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType get_ItemRef();
    public void set_ItemRef(ReferenceType value);
    public decimal get_SalesPrice();
    public void set_SalesPrice(decimal value);
    public bool get_SalesPriceSpecified();
    public void set_SalesPriceSpecified(bool value);
    public decimal get_AnyIntuitObject();
    public void set_AnyIntuitObject(decimal value);
    public ItemChoiceType1 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType1 value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ItemAssemblyDetail : object {
    private ItemComponentLine[] itemAssemblyLineField;
    [XmlElementAttribute("ItemAssemblyLine")]
public ItemComponentLine[] ItemAssemblyLine { get; public set; }
    public ItemComponentLine[] get_ItemAssemblyLine();
    public void set_ItemAssemblyLine(ItemComponentLine[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ItemBasedExpenseLineDetail : ItemLineDetail {
    private ReferenceType customerRefField;
    private BillableStatusEnum billableStatusField;
    private bool billableStatusFieldSpecified;
    private decimal taxInclusiveAmtField;
    private bool taxInclusiveAmtFieldSpecified;
    private IntuitAnyType itemBasedExpenseLineDetailExField;
    public ReferenceType CustomerRef { get; public set; }
    public BillableStatusEnum BillableStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillableStatusSpecified { get; public set; }
    public decimal TaxInclusiveAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxInclusiveAmtSpecified { get; public set; }
    public IntuitAnyType ItemBasedExpenseLineDetailEx { get; public set; }
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public BillableStatusEnum get_BillableStatus();
    public void set_BillableStatus(BillableStatusEnum value);
    public bool get_BillableStatusSpecified();
    public void set_BillableStatusSpecified(bool value);
    public decimal get_TaxInclusiveAmt();
    public void set_TaxInclusiveAmt(decimal value);
    public bool get_TaxInclusiveAmtSpecified();
    public void set_TaxInclusiveAmtSpecified(bool value);
    public IntuitAnyType get_ItemBasedExpenseLineDetailEx();
    public void set_ItemBasedExpenseLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ItemCategoryTypeEnum : Enum {
    public int value__;
    public static ItemCategoryTypeEnum Product;
    public static ItemCategoryTypeEnum Service;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType : Enum {
    public int value__;
    public static ItemChoiceType PriceLevelRef;
    public static ItemChoiceType RatePercent;
    public static ItemChoiceType UnitCostPrice;
    public static ItemChoiceType UnitPrice;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType1 : Enum {
    public int value__;
    public static ItemChoiceType1 NewQty;
    public static ItemChoiceType1 QtyDiff;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType2 : Enum {
    public int value__;
    public static ItemChoiceType2 TaxGroupCodeRef;
    public static ItemChoiceType2 TaxRateRef;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType3 : Enum {
    public int value__;
    public static ItemChoiceType3 DropShipToEntity;
    public static ItemChoiceType3 InventorySiteRef;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType4 : Enum {
    public int value__;
    public static ItemChoiceType4 EmployeeRef;
    public static ItemChoiceType4 OtherNameRef;
    public static ItemChoiceType4 VendorRef;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType5 : Enum {
    public int value__;
    public static ItemChoiceType5 CustomPrice;
    public static ItemChoiceType5 CustomPricePercent;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType6 : Enum {
    public int value__;
    public static ItemChoiceType6 EmployeeRef;
    public static ItemChoiceType6 OtherNameRef;
    public static ItemChoiceType6 VendorRef;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType7 : Enum {
    public int value__;
    public static ItemChoiceType7 TaxGroupCodeRef;
    public static ItemChoiceType7 TaxRateRef;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemChoiceType8 : Enum {
    public int value__;
    public static ItemChoiceType8 Account;
    public static ItemChoiceType8 Attachable;
    public static ItemChoiceType8 Bill;
    public static ItemChoiceType8 BillPayment;
    public static ItemChoiceType8 BooleanTypeCustomFieldDefinition;
    public static ItemChoiceType8 Budget;
    public static ItemChoiceType8 CDCQuery;
    public static ItemChoiceType8 ChargeCredit;
    public static ItemChoiceType8 Class;
    public static ItemChoiceType8 Company;
    public static ItemChoiceType8 CompanyCurrency;
    public static ItemChoiceType8 CompanyInfo;
    public static ItemChoiceType8 CreditCardPaymentTxn;
    public static ItemChoiceType8 CreditMemo;
    public static ItemChoiceType8 CustomFieldDefinition;
    public static ItemChoiceType8 Customer;
    public static ItemChoiceType8 CustomerType;
    public static ItemChoiceType8 DateTypeCustomFieldDefinition;
    public static ItemChoiceType8 Department;
    public static ItemChoiceType8 Deposit;
    public static ItemChoiceType8 EmailDeliveryInfo;
    public static ItemChoiceType8 Employee;
    public static ItemChoiceType8 Estimate;
    public static ItemChoiceType8 ExchangeRate;
    public static ItemChoiceType8 FixedAsset;
    public static ItemChoiceType8 IntuitObject;
    public static ItemChoiceType8 InventoryAdjustment;
    public static ItemChoiceType8 InventorySite;
    public static ItemChoiceType8 Invoice;
    public static ItemChoiceType8 Item;
    public static ItemChoiceType8 JournalCode;
    public static ItemChoiceType8 JournalEntry;
    public static ItemChoiceType8 MasterAccount;
    public static ItemChoiceType8 NumberTypeCustomFieldDefinition;
    public static ItemChoiceType8 OtherName;
    public static ItemChoiceType8 Payment;
    public static ItemChoiceType8 PaymentMethod;
    public static ItemChoiceType8 Preferences;
    public static ItemChoiceType8 PriceLevel;
    public static ItemChoiceType8 Purchase;
    public static ItemChoiceType8 PurchaseOrder;
    public static ItemChoiceType8 QbdtEntityIdMapping;
    public static ItemChoiceType8 Query;
    public static ItemChoiceType8 RecurringTransaction;
    public static ItemChoiceType8 RefundReceipt;
    public static ItemChoiceType8 ReimburseCharge;
    public static ItemChoiceType8 ReportQuery;
    public static ItemChoiceType8 SalesOrder;
    public static ItemChoiceType8 SalesReceipt;
    public static ItemChoiceType8 SalesRep;
    public static ItemChoiceType8 StatementCharge;
    public static ItemChoiceType8 Status;
    public static ItemChoiceType8 StringTypeCustomFieldDefinition;
    public static ItemChoiceType8 SyncActivity;
    public static ItemChoiceType8 TDSMetadata;
    public static ItemChoiceType8 Tag;
    public static ItemChoiceType8 Task;
    public static ItemChoiceType8 TaxAgency;
    public static ItemChoiceType8 TaxClassification;
    public static ItemChoiceType8 TaxCode;
    public static ItemChoiceType8 TaxPayment;
    public static ItemChoiceType8 TaxRate;
    public static ItemChoiceType8 TaxReturn;
    public static ItemChoiceType8 TaxService;
    public static ItemChoiceType8 Term;
    public static ItemChoiceType8 TimeActivity;
    public static ItemChoiceType8 Transfer;
    public static ItemChoiceType8 UserAlert;
    public static ItemChoiceType8 Vendor;
    public static ItemChoiceType8 VendorCredit;
    public static ItemChoiceType8 VendorType;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ItemComponentLine : object {
    private ReferenceType itemRefField;
    private decimal qtyField;
    private bool qtyFieldSpecified;
    private UOMRef uOMRefField;
    public ReferenceType ItemRef { get; public set; }
    public decimal Qty { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QtySpecified { get; public set; }
    public UOMRef UOMRef { get; public set; }
    public ReferenceType get_ItemRef();
    public void set_ItemRef(ReferenceType value);
    public decimal get_Qty();
    public void set_Qty(decimal value);
    public bool get_QtySpecified();
    public void set_QtySpecified(bool value);
    public UOMRef get_UOMRef();
    public void set_UOMRef(UOMRef value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ItemGroupDetail : object {
    private ItemComponentLine[] itemGroupLineField;
    [XmlElementAttribute("ItemGroupLine")]
public ItemComponentLine[] ItemGroupLine { get; public set; }
    public ItemComponentLine[] get_ItemGroupLine();
    public void set_ItemGroupLine(ItemComponentLine[] value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.ReimburseLineDetail")]
[XmlIncludeAttribute("Intuit.Ipp.Data.ItemBasedExpenseLineDetail")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesItemLineDetail")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesOrderItemLineDetail")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PurchaseOrderItemLineDetail")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public abstract class Intuit.Ipp.Data.ItemLineDetail : object {
    private ReferenceType itemRefField;
    private ReferenceType classRefField;
    private object itemField;
    private ItemChoiceType itemElementNameField;
    private MarkupInfo markupInfoField;
    private decimal qtyField;
    private bool qtyFieldSpecified;
    private UOMRef uOMRefField;
    private ReferenceType itemAccountRefField;
    private ReferenceType inventorySiteRefField;
    private ReferenceType taxCodeRefField;
    private ReferenceType taxClassificationRefField;
    public ReferenceType ItemRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    [XmlElementAttribute("PriceLevelRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("RatePercent", "System.Decimal")]
[XmlElementAttribute("UnitCostPrice", "System.Decimal")]
[XmlElementAttribute("UnitPrice", "System.Decimal")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public object AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType ItemElementName { get; public set; }
    public MarkupInfo MarkupInfo { get; public set; }
    public decimal Qty { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QtySpecified { get; public set; }
    public UOMRef UOMRef { get; public set; }
    public ReferenceType ItemAccountRef { get; public set; }
    public ReferenceType InventorySiteRef { get; public set; }
    public ReferenceType TaxCodeRef { get; public set; }
    public ReferenceType TaxClassificationRef { get; public set; }
    public ReferenceType get_ItemRef();
    public void set_ItemRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public ItemChoiceType get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType value);
    public MarkupInfo get_MarkupInfo();
    public void set_MarkupInfo(MarkupInfo value);
    public decimal get_Qty();
    public void set_Qty(decimal value);
    public bool get_QtySpecified();
    public void set_QtySpecified(bool value);
    public UOMRef get_UOMRef();
    public void set_UOMRef(UOMRef value);
    public ReferenceType get_ItemAccountRef();
    public void set_ItemAccountRef(ReferenceType value);
    public ReferenceType get_InventorySiteRef();
    public void set_InventorySiteRef(ReferenceType value);
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public ReferenceType get_TaxClassificationRef();
    public void set_TaxClassificationRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ItemReceiptLineDetail : object {
    private IntuitAnyType itemReceiptLineDetailExField;
    public IntuitAnyType ItemReceiptLineDetailEx { get; public set; }
    public IntuitAnyType get_ItemReceiptLineDetailEx();
    public void set_ItemReceiptLineDetailEx(IntuitAnyType value);
}
public class Intuit.Ipp.Data.ItemSales : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemsChoiceType : Enum {
    public int value__;
    public static ItemsChoiceType DayOfMonthDue;
    public static ItemsChoiceType DiscountDayOfMonth;
    public static ItemsChoiceType DiscountDays;
    public static ItemsChoiceType DueDays;
    public static ItemsChoiceType DueNextMonthDays;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
public enum Intuit.Ipp.Data.ItemsChoiceType1 : Enum {
    public int value__;
    public static ItemsChoiceType1 ColData;
    public static ItemsChoiceType1 Header;
    public static ItemsChoiceType1 Rows;
    public static ItemsChoiceType1 Summary;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ItemTypeEnum : Enum {
    public int value__;
    public static ItemTypeEnum Assembly;
    public static ItemTypeEnum Category;
    [XmlEnumAttribute("Fixed Asset")]
public static ItemTypeEnum FixedAsset;
    public static ItemTypeEnum Group;
    public static ItemTypeEnum Inventory;
    public static ItemTypeEnum NonInventory;
    [XmlEnumAttribute("Other Charge")]
public static ItemTypeEnum OtherCharge;
    public static ItemTypeEnum Payment;
    public static ItemTypeEnum Service;
    public static ItemTypeEnum Subtotal;
    public static ItemTypeEnum Discount;
    public static ItemTypeEnum Tax;
    [XmlEnumAttribute("Tax Group")]
public static ItemTypeEnum TaxGroup;
    public static ItemTypeEnum Bundle;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.JobInfo : object {
    private JobStatusEnum statusField;
    private bool statusFieldSpecified;
    private DateTime startDateField;
    private bool startDateFieldSpecified;
    private DateTime projectedEndDateField;
    private bool projectedEndDateFieldSpecified;
    private DateTime endDateField;
    private bool endDateFieldSpecified;
    private string descriptionField;
    private ReferenceType jobTypeRefField;
    public JobStatusEnum Status { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StatusSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime StartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StartDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime ProjectedEndDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ProjectedEndDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime EndDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EndDateSpecified { get; public set; }
    public string Description { get; public set; }
    public ReferenceType JobTypeRef { get; public set; }
    public JobStatusEnum get_Status();
    public void set_Status(JobStatusEnum value);
    public bool get_StatusSpecified();
    public void set_StatusSpecified(bool value);
    public DateTime get_StartDate();
    public void set_StartDate(DateTime value);
    public bool get_StartDateSpecified();
    public void set_StartDateSpecified(bool value);
    public DateTime get_ProjectedEndDate();
    public void set_ProjectedEndDate(DateTime value);
    public bool get_ProjectedEndDateSpecified();
    public void set_ProjectedEndDateSpecified(bool value);
    public DateTime get_EndDate();
    public void set_EndDate(DateTime value);
    public bool get_EndDateSpecified();
    public void set_EndDateSpecified(bool value);
    public string get_Description();
    public void set_Description(string value);
    public ReferenceType get_JobTypeRef();
    public void set_JobTypeRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.JobStatusEnum : Enum {
    public int value__;
    public static JobStatusEnum Awarded;
    public static JobStatusEnum Closed;
    public static JobStatusEnum InProgress;
    public static JobStatusEnum None;
    public static JobStatusEnum NotAwarded;
    public static JobStatusEnum Pending;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.JobType : IntuitEntity {
    private string nameField;
    private ReferenceType parentRefField;
    private string fullyQualifiedNameField;
    private bool activeField;
    private bool activeFieldSpecified;
    public string Name { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.JournalCode : IntuitEntity {
    private string nameField;
    private string typeField;
    private string descriptionField;
    private bool activeField;
    private bool activeFieldSpecified;
    private IntuitAnyType journalCodeExField;
    public string Name { get; public set; }
    public string Type { get; public set; }
    public string Description { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public IntuitAnyType JournalCodeEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Type();
    public void set_Type(string value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public IntuitAnyType get_JournalCodeEx();
    public void set_JournalCodeEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.JournalCodeTypeEnum : Enum {
    public int value__;
    public static JournalCodeTypeEnum Expenses;
    public static JournalCodeTypeEnum Sales;
    public static JournalCodeTypeEnum Bank;
    public static JournalCodeTypeEnum Nouveaux;
    public static JournalCodeTypeEnum Wages;
    public static JournalCodeTypeEnum Cash;
    public static JournalCodeTypeEnum Others;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.JournalEntry : Transaction {
    private bool adjustmentField;
    private bool adjustmentFieldSpecified;
    private bool homeCurrencyAdjustmentField;
    private bool homeCurrencyAdjustmentFieldSpecified;
    private bool enteredInHomeCurrencyField;
    private bool enteredInHomeCurrencyFieldSpecified;
    private GlobalTaxCalculationEnum globalTaxCalculationField;
    private bool globalTaxCalculationFieldSpecified;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private decimal homeTotalAmtField;
    private bool homeTotalAmtFieldSpecified;
    private IntuitAnyType journalEntryExField;
    public bool Adjustment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AdjustmentSpecified { get; public set; }
    public bool HomeCurrencyAdjustment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeCurrencyAdjustmentSpecified { get; public set; }
    public bool EnteredInHomeCurrency { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EnteredInHomeCurrencySpecified { get; public set; }
    public GlobalTaxCalculationEnum GlobalTaxCalculation { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool GlobalTaxCalculationSpecified { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public decimal HomeTotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeTotalAmtSpecified { get; public set; }
    public IntuitAnyType JournalEntryEx { get; public set; }
    public bool get_Adjustment();
    public void set_Adjustment(bool value);
    public bool get_AdjustmentSpecified();
    public void set_AdjustmentSpecified(bool value);
    public bool get_HomeCurrencyAdjustment();
    public void set_HomeCurrencyAdjustment(bool value);
    public bool get_HomeCurrencyAdjustmentSpecified();
    public void set_HomeCurrencyAdjustmentSpecified(bool value);
    public bool get_EnteredInHomeCurrency();
    public void set_EnteredInHomeCurrency(bool value);
    public bool get_EnteredInHomeCurrencySpecified();
    public void set_EnteredInHomeCurrencySpecified(bool value);
    public GlobalTaxCalculationEnum get_GlobalTaxCalculation();
    public void set_GlobalTaxCalculation(GlobalTaxCalculationEnum value);
    public bool get_GlobalTaxCalculationSpecified();
    public void set_GlobalTaxCalculationSpecified(bool value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public decimal get_HomeTotalAmt();
    public void set_HomeTotalAmt(decimal value);
    public bool get_HomeTotalAmtSpecified();
    public void set_HomeTotalAmtSpecified(bool value);
    public IntuitAnyType get_JournalEntryEx();
    public void set_JournalEntryEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.JournalEntryLineDetail : object {
    private PostingTypeEnum postingTypeField;
    private bool postingTypeFieldSpecified;
    private EntityTypeRef entityField;
    private ReferenceType accountRefField;
    private ReferenceType classRefField;
    private ReferenceType departmentRefField;
    private ReferenceType taxCodeRefField;
    private ReferenceType taxRateRefField;
    private TaxApplicableOnEnum taxApplicableOnField;
    private bool taxApplicableOnFieldSpecified;
    private decimal taxAmountField;
    private bool taxAmountFieldSpecified;
    private decimal taxInclusiveAmtField;
    private bool taxInclusiveAmtFieldSpecified;
    private BillableStatusEnum billableStatusField;
    private bool billableStatusFieldSpecified;
    private ReferenceType journalCodeRefField;
    private IntuitAnyType journalEntryLineDetailExField;
    public PostingTypeEnum PostingType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PostingTypeSpecified { get; public set; }
    public EntityTypeRef Entity { get; public set; }
    public ReferenceType AccountRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType DepartmentRef { get; public set; }
    public ReferenceType TaxCodeRef { get; public set; }
    public ReferenceType TaxRateRef { get; public set; }
    public TaxApplicableOnEnum TaxApplicableOn { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxApplicableOnSpecified { get; public set; }
    public decimal TaxAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxAmountSpecified { get; public set; }
    public decimal TaxInclusiveAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxInclusiveAmtSpecified { get; public set; }
    public BillableStatusEnum BillableStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillableStatusSpecified { get; public set; }
    public ReferenceType JournalCodeRef { get; public set; }
    public IntuitAnyType JournalEntryLineDetailEx { get; public set; }
    public PostingTypeEnum get_PostingType();
    public void set_PostingType(PostingTypeEnum value);
    public bool get_PostingTypeSpecified();
    public void set_PostingTypeSpecified(bool value);
    public EntityTypeRef get_Entity();
    public void set_Entity(EntityTypeRef value);
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_DepartmentRef();
    public void set_DepartmentRef(ReferenceType value);
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public ReferenceType get_TaxRateRef();
    public void set_TaxRateRef(ReferenceType value);
    public TaxApplicableOnEnum get_TaxApplicableOn();
    public void set_TaxApplicableOn(TaxApplicableOnEnum value);
    public bool get_TaxApplicableOnSpecified();
    public void set_TaxApplicableOnSpecified(bool value);
    public decimal get_TaxAmount();
    public void set_TaxAmount(decimal value);
    public bool get_TaxAmountSpecified();
    public void set_TaxAmountSpecified(bool value);
    public decimal get_TaxInclusiveAmt();
    public void set_TaxInclusiveAmt(decimal value);
    public bool get_TaxInclusiveAmtSpecified();
    public void set_TaxInclusiveAmtSpecified(bool value);
    public BillableStatusEnum get_BillableStatus();
    public void set_BillableStatus(BillableStatusEnum value);
    public bool get_BillableStatusSpecified();
    public void set_BillableStatusSpecified(bool value);
    public ReferenceType get_JournalCodeRef();
    public void set_JournalCodeRef(ReferenceType value);
    public IntuitAnyType get_JournalEntryLineDetailEx();
    public void set_JournalEntryLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Line : object {
    private string idField;
    private string lineNumField;
    private string descriptionField;
    private decimal amountField;
    private bool amountFieldSpecified;
    private decimal receivedField;
    private bool receivedFieldSpecified;
    private LinkedTxn[] linkedTxnField;
    private LineDetailTypeEnum detailTypeField;
    private bool detailTypeFieldSpecified;
    private object itemField;
    private CustomField[] customFieldField;
    private IntuitAnyType lineExField;
    private ReferenceType projectRefField;
    private decimal costAmountField;
    private bool costAmountFieldSpecified;
    private decimal homeCostAmountField;
    private bool homeCostAmountFieldSpecified;
    public string Id { get; public set; }
    [XmlElementAttribute]
public string LineNum { get; public set; }
    public string Description { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public decimal Received { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReceivedSpecified { get; public set; }
    [XmlElementAttribute("LinkedTxn")]
public LinkedTxn[] LinkedTxn { get; public set; }
    public LineDetailTypeEnum DetailType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DetailTypeSpecified { get; public set; }
    [XmlElementAttribute("AccountBasedExpenseLineDetail", "Intuit.Ipp.Data.AccountBasedExpenseLineDetail")]
[XmlElementAttribute("DepositLineDetail", "Intuit.Ipp.Data.DepositLineDetail")]
[XmlElementAttribute("DescriptionLineDetail", "Intuit.Ipp.Data.DescriptionLineDetail")]
[XmlElementAttribute("DiscountLineDetail", "Intuit.Ipp.Data.DiscountLineDetail")]
[XmlElementAttribute("GroupLineDetail", "Intuit.Ipp.Data.GroupLineDetail")]
[XmlElementAttribute("ItemAdjustmentLineDetail", "Intuit.Ipp.Data.ItemAdjustmentLineDetail")]
[XmlElementAttribute("ItemBasedExpenseLineDetail", "Intuit.Ipp.Data.ItemBasedExpenseLineDetail")]
[XmlElementAttribute("ItemReceiptLineDetail", "Intuit.Ipp.Data.ItemReceiptLineDetail")]
[XmlElementAttribute("JournalEntryLineDetail", "Intuit.Ipp.Data.JournalEntryLineDetail")]
[XmlElementAttribute("PaymentLineDetail", "Intuit.Ipp.Data.PaymentLineDetail")]
[XmlElementAttribute("PurchaseOrderItemLineDetail", "Intuit.Ipp.Data.PurchaseOrderItemLineDetail")]
[XmlElementAttribute("ReimburseLineDetail", "Intuit.Ipp.Data.ReimburseLineDetail")]
[XmlElementAttribute("SalesItemLineDetail", "Intuit.Ipp.Data.SalesItemLineDetail")]
[XmlElementAttribute("SalesOrderItemLineDetail", "Intuit.Ipp.Data.SalesOrderItemLineDetail")]
[XmlElementAttribute("SubTotalLineDetail", "Intuit.Ipp.Data.SubTotalLineDetail")]
[XmlElementAttribute("TDSLineDetail", "Intuit.Ipp.Data.TDSLineDetail")]
[XmlElementAttribute("TaxLineDetail", "Intuit.Ipp.Data.TaxLineDetail")]
public object AnyIntuitObject { get; public set; }
    [XmlElementAttribute("CustomField")]
public CustomField[] CustomField { get; public set; }
    public IntuitAnyType LineEx { get; public set; }
    public ReferenceType ProjectRef { get; public set; }
    public decimal CostAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CostAmountSpecified { get; public set; }
    public decimal HomeCostAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeCostAmountSpecified { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_LineNum();
    public void set_LineNum(string value);
    public string get_Description();
    public void set_Description(string value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public decimal get_Received();
    public void set_Received(decimal value);
    public bool get_ReceivedSpecified();
    public void set_ReceivedSpecified(bool value);
    public LinkedTxn[] get_LinkedTxn();
    public void set_LinkedTxn(LinkedTxn[] value);
    public LineDetailTypeEnum get_DetailType();
    public void set_DetailType(LineDetailTypeEnum value);
    public bool get_DetailTypeSpecified();
    public void set_DetailTypeSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public CustomField[] get_CustomField();
    public void set_CustomField(CustomField[] value);
    public IntuitAnyType get_LineEx();
    public void set_LineEx(IntuitAnyType value);
    public ReferenceType get_ProjectRef();
    public void set_ProjectRef(ReferenceType value);
    public decimal get_CostAmount();
    public void set_CostAmount(decimal value);
    public bool get_CostAmountSpecified();
    public void set_CostAmountSpecified(bool value);
    public decimal get_HomeCostAmount();
    public void set_HomeCostAmount(decimal value);
    public bool get_HomeCostAmountSpecified();
    public void set_HomeCostAmountSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.LineDetailTypeEnum : Enum {
    public int value__;
    public static LineDetailTypeEnum PaymentLineDetail;
    public static LineDetailTypeEnum DiscountLineDetail;
    public static LineDetailTypeEnum TaxLineDetail;
    public static LineDetailTypeEnum SalesItemLineDetail;
    public static LineDetailTypeEnum ItemBasedExpenseLineDetail;
    public static LineDetailTypeEnum AccountBasedExpenseLineDetail;
    public static LineDetailTypeEnum DepositLineDetail;
    public static LineDetailTypeEnum PurchaseOrderItemLineDetail;
    public static LineDetailTypeEnum ItemReceiptLineDetail;
    public static LineDetailTypeEnum JournalEntryLineDetail;
    public static LineDetailTypeEnum GroupLineDetail;
    public static LineDetailTypeEnum DescriptionOnly;
    public static LineDetailTypeEnum SubTotalLineDetail;
    public static LineDetailTypeEnum SalesOrderItemLineDetail;
    public static LineDetailTypeEnum TDSLineDetail;
    public static LineDetailTypeEnum ReimburseLineDetail;
    public static LineDetailTypeEnum ItemAdjustmentLineDetail;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.LinkedTxn : object {
    private string txnIdField;
    private string txnTypeField;
    private string txnLineIdField;
    public string TxnId { get; public set; }
    public string TxnType { get; public set; }
    public string TxnLineId { get; public set; }
    public string get_TxnId();
    public void set_TxnId(string value);
    public string get_TxnType();
    public void set_TxnType(string value);
    public string get_TxnLineId();
    public void set_TxnLineId(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.MarkupInfo : object {
    private bool percentBasedField;
    private bool percentBasedFieldSpecified;
    private decimal valueField;
    private bool valueFieldSpecified;
    private decimal percentField;
    private bool percentFieldSpecified;
    private ReferenceType priceLevelRefField;
    private ReferenceType markUpIncomeAccountRefField;
    public bool PercentBased { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PercentBasedSpecified { get; public set; }
    public decimal Value { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ValueSpecified { get; public set; }
    public decimal Percent { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PercentSpecified { get; public set; }
    public ReferenceType PriceLevelRef { get; public set; }
    public ReferenceType MarkUpIncomeAccountRef { get; public set; }
    public bool get_PercentBased();
    public void set_PercentBased(bool value);
    public bool get_PercentBasedSpecified();
    public void set_PercentBasedSpecified(bool value);
    public decimal get_Value();
    public void set_Value(decimal value);
    public bool get_ValueSpecified();
    public void set_ValueSpecified(bool value);
    public decimal get_Percent();
    public void set_Percent(decimal value);
    public bool get_PercentSpecified();
    public void set_PercentSpecified(bool value);
    public ReferenceType get_PriceLevelRef();
    public void set_PriceLevelRef(ReferenceType value);
    public ReferenceType get_MarkUpIncomeAccountRef();
    public void set_MarkUpIncomeAccountRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.MasterAccount : Account {
    private bool accountExistsInCompanyField;
    private bool accountExistsInCompanyFieldSpecified;
    public bool AccountExistsInCompany { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AccountExistsInCompanySpecified { get; public set; }
    public bool get_AccountExistsInCompany();
    public void set_AccountExistsInCompany(bool value);
    public bool get_AccountExistsInCompanySpecified();
    public void set_AccountExistsInCompanySpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.MemoRef : object {
    private string idField;
    private string valueField;
    [XmlAttributeAttribute]
public string id { get; public set; }
    [XmlTextAttribute]
public string Value { get; public set; }
    public string get_id();
    public void set_id(string value);
    public string get_Value();
    public void set_Value(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ModificationMetaData : object {
    private ReferenceType createdByRefField;
    private DateTime createTimeField;
    private bool createTimeFieldSpecified;
    private ReferenceType lastModifiedByRefField;
    private DateTime lastUpdatedTimeField;
    private bool lastUpdatedTimeFieldSpecified;
    private DateTime lastChangedInQBField;
    private bool lastChangedInQBFieldSpecified;
    private bool synchronizedField;
    private bool synchronizedFieldSpecified;
    public ReferenceType CreatedByRef { get; public set; }
    public DateTime CreateTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CreateTimeSpecified { get; public set; }
    public ReferenceType LastModifiedByRef { get; public set; }
    public DateTime LastUpdatedTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastUpdatedTimeSpecified { get; public set; }
    public DateTime LastChangedInQB { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastChangedInQBSpecified { get; public set; }
    public bool Synchronized { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SynchronizedSpecified { get; public set; }
    public ReferenceType get_CreatedByRef();
    public void set_CreatedByRef(ReferenceType value);
    public DateTime get_CreateTime();
    public void set_CreateTime(DateTime value);
    public bool get_CreateTimeSpecified();
    public void set_CreateTimeSpecified(bool value);
    public ReferenceType get_LastModifiedByRef();
    public void set_LastModifiedByRef(ReferenceType value);
    public DateTime get_LastUpdatedTime();
    public void set_LastUpdatedTime(DateTime value);
    public bool get_LastUpdatedTimeSpecified();
    public void set_LastUpdatedTimeSpecified(bool value);
    public DateTime get_LastChangedInQB();
    public void set_LastChangedInQB(DateTime value);
    public bool get_LastChangedInQBSpecified();
    public void set_LastChangedInQBSpecified(bool value);
    public bool get_Synchronized();
    public void set_Synchronized(bool value);
    public bool get_SynchronizedSpecified();
    public void set_SynchronizedSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Money : object {
    private string curCodeField;
    private decimal amountField;
    private bool amountFieldSpecified;
    public string CurCode { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public string get_CurCode();
    public void set_CurCode(string value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.MonthEnum : Enum {
    public int value__;
    public static MonthEnum January;
    public static MonthEnum February;
    public static MonthEnum March;
    public static MonthEnum April;
    public static MonthEnum May;
    public static MonthEnum June;
    public static MonthEnum July;
    public static MonthEnum August;
    public static MonthEnum September;
    public static MonthEnum October;
    public static MonthEnum November;
    public static MonthEnum December;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.MXGlobalInfo : object {
    private string periodicityField;
    private string monthField;
    private string yearField;
    public string Periodicity { get; public set; }
    public string Month { get; public set; }
    public string Year { get; public set; }
    public string get_Periodicity();
    public void set_Periodicity(string value);
    public string get_Month();
    public void set_Month(string value);
    public string get_Year();
    public void set_Year(string value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.OtherName")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Employee")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Vendor")]
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxAgency")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Customer")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.NameBase : IntuitEntity {
    private string intuitIdField;
    private bool organizationField;
    private bool organizationFieldSpecified;
    private string titleField;
    private string givenNameField;
    private string middleNameField;
    private string familyNameField;
    private string suffixField;
    private string fullyQualifiedNameField;
    private string companyNameField;
    private string displayNameField;
    private string printOnCheckNameField;
    private string userIdField;
    private bool activeField;
    private bool activeFieldSpecified;
    private string v4IDPseudonymField;
    private TelephoneNumber primaryPhoneField;
    private TelephoneNumber alternatePhoneField;
    private TelephoneNumber mobileField;
    private TelephoneNumber faxField;
    private EmailAddress primaryEmailAddrField;
    private WebSiteAddress webAddrField;
    private ContactInfo[] otherContactInfoField;
    private ReferenceType defaultTaxCodeRefField;
    public string IntuitId { get; public set; }
    public bool Organization { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OrganizationSpecified { get; public set; }
    public string Title { get; public set; }
    public string GivenName { get; public set; }
    public string MiddleName { get; public set; }
    public string FamilyName { get; public set; }
    public string Suffix { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public string CompanyName { get; public set; }
    public string DisplayName { get; public set; }
    public string PrintOnCheckName { get; public set; }
    public string UserId { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public string V4IDPseudonym { get; public set; }
    public TelephoneNumber PrimaryPhone { get; public set; }
    public TelephoneNumber AlternatePhone { get; public set; }
    public TelephoneNumber Mobile { get; public set; }
    public TelephoneNumber Fax { get; public set; }
    public EmailAddress PrimaryEmailAddr { get; public set; }
    public WebSiteAddress WebAddr { get; public set; }
    [XmlElementAttribute("OtherContactInfo")]
public ContactInfo[] OtherContactInfo { get; public set; }
    public ReferenceType DefaultTaxCodeRef { get; public set; }
    public string get_IntuitId();
    public void set_IntuitId(string value);
    public bool get_Organization();
    public void set_Organization(bool value);
    public bool get_OrganizationSpecified();
    public void set_OrganizationSpecified(bool value);
    public string get_Title();
    public void set_Title(string value);
    public string get_GivenName();
    public void set_GivenName(string value);
    public string get_MiddleName();
    public void set_MiddleName(string value);
    public string get_FamilyName();
    public void set_FamilyName(string value);
    public string get_Suffix();
    public void set_Suffix(string value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public string get_CompanyName();
    public void set_CompanyName(string value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_PrintOnCheckName();
    public void set_PrintOnCheckName(string value);
    public string get_UserId();
    public void set_UserId(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public string get_V4IDPseudonym();
    public void set_V4IDPseudonym(string value);
    public TelephoneNumber get_PrimaryPhone();
    public void set_PrimaryPhone(TelephoneNumber value);
    public TelephoneNumber get_AlternatePhone();
    public void set_AlternatePhone(TelephoneNumber value);
    public TelephoneNumber get_Mobile();
    public void set_Mobile(TelephoneNumber value);
    public TelephoneNumber get_Fax();
    public void set_Fax(TelephoneNumber value);
    public EmailAddress get_PrimaryEmailAddr();
    public void set_PrimaryEmailAddr(EmailAddress value);
    public WebSiteAddress get_WebAddr();
    public void set_WebAddr(WebSiteAddress value);
    public ContactInfo[] get_OtherContactInfo();
    public void set_OtherContactInfo(ContactInfo[] value);
    public ReferenceType get_DefaultTaxCodeRef();
    public void set_DefaultTaxCodeRef(ReferenceType value);
}
[CompilerGeneratedAttribute]
internal class Intuit.Ipp.Data.NamespaceDoc : object {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.NameValue : object {
    private string nameField;
    private string valueField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Value();
    public void set_Value(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.NumberTypeCustomFieldDefinition : CustomFieldDefinition {
    private decimal defaultValueField;
    private bool defaultValueFieldSpecified;
    private decimal minValueField;
    private bool minValueFieldSpecified;
    private decimal maxValueField;
    private bool maxValueFieldSpecified;
    public decimal DefaultValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultValueSpecified { get; public set; }
    public decimal MinValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MinValueSpecified { get; public set; }
    public decimal MaxValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MaxValueSpecified { get; public set; }
    public decimal get_DefaultValue();
    public void set_DefaultValue(decimal value);
    public bool get_DefaultValueSpecified();
    public void set_DefaultValueSpecified(bool value);
    public decimal get_MinValue();
    public void set_MinValue(decimal value);
    public bool get_MinValueSpecified();
    public void set_MinValueSpecified(bool value);
    public decimal get_MaxValue();
    public void set_MaxValue(decimal value);
    public bool get_MaxValueSpecified();
    public void set_MaxValueSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.objectNameEnumType : Enum {
    public int value__;
    public static objectNameEnumType Account;
    public static objectNameEnumType All;
    public static objectNameEnumType Attachable;
    public static objectNameEnumType Bill;
    public static objectNameEnumType BillPayment;
    public static objectNameEnumType BOMComponent;
    public static objectNameEnumType ChargeCredit;
    public static objectNameEnumType Class;
    public static objectNameEnumType Company;
    public static objectNameEnumType CompanyInfo;
    public static objectNameEnumType CreditCardPaymentTxn;
    public static objectNameEnumType CreditMemo;
    public static objectNameEnumType Customer;
    public static objectNameEnumType CustomerType;
    public static objectNameEnumType Discount;
    public static objectNameEnumType Department;
    public static objectNameEnumType Deposit;
    public static objectNameEnumType Employee;
    public static objectNameEnumType Estimate;
    public static objectNameEnumType FixedAsset;
    public static objectNameEnumType InventoryAdjustment;
    public static objectNameEnumType InventorySite;
    public static objectNameEnumType Invoice;
    public static objectNameEnumType Item;
    public static objectNameEnumType ItemReceipt;
    public static objectNameEnumType JournalEntry;
    public static objectNameEnumType ListObjectType;
    public static objectNameEnumType Names;
    public static objectNameEnumType OtherName;
    public static objectNameEnumType Payment;
    public static objectNameEnumType PaymentMethod;
    public static objectNameEnumType Preferences;
    public static objectNameEnumType PriceLevel;
    public static objectNameEnumType Purchase;
    public static objectNameEnumType PurchaseOrder;
    public static objectNameEnumType RecurringTransaction;
    public static objectNameEnumType RefundReceipt;
    public static objectNameEnumType ReimburseCharge;
    public static objectNameEnumType Report;
    public static objectNameEnumType SalesOrder;
    public static objectNameEnumType SalesReceipt;
    public static objectNameEnumType SalesRep;
    public static objectNameEnumType ShipMethod;
    public static objectNameEnumType StatementCharge;
    public static objectNameEnumType Tag;
    public static objectNameEnumType TaxCode;
    public static objectNameEnumType TaxClassification;
    public static objectNameEnumType TaxPayment;
    public static objectNameEnumType TaxRate;
    public static objectNameEnumType TaxReturn;
    public static objectNameEnumType Term;
    public static objectNameEnumType TimeActivity;
    public static objectNameEnumType Transfer;
    public static objectNameEnumType Transaction;
    public static objectNameEnumType TxnLocation;
    public static objectNameEnumType UOM;
    public static objectNameEnumType Vendor;
    public static objectNameEnumType VendorCredit;
    public static objectNameEnumType CustomFieldDefinition;
    public static objectNameEnumType ChangeOrder;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.OLBAccount : object {
    private ReferenceType accountIdField;
    private string accountDetailsField;
    private bool subscribedToAppField;
    private bool subscribedToAppFieldSpecified;
    private string appVersionField;
    private decimal lastBankBalanceField;
    private bool lastBankBalanceFieldSpecified;
    public ReferenceType AccountId { get; public set; }
    public string AccountDetails { get; public set; }
    public bool SubscribedToApp { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SubscribedToAppSpecified { get; public set; }
    public string AppVersion { get; public set; }
    public decimal LastBankBalance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastBankBalanceSpecified { get; public set; }
    public ReferenceType get_AccountId();
    public void set_AccountId(ReferenceType value);
    public string get_AccountDetails();
    public void set_AccountDetails(string value);
    public bool get_SubscribedToApp();
    public void set_SubscribedToApp(bool value);
    public bool get_SubscribedToAppSpecified();
    public void set_SubscribedToAppSpecified(bool value);
    public string get_AppVersion();
    public void set_AppVersion(string value);
    public decimal get_LastBankBalance();
    public void set_LastBankBalance(decimal value);
    public bool get_LastBankBalanceSpecified();
    public void set_LastBankBalanceSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.OLBStatus : object {
    private OLBAccount[] oLBAccountField;
    [XmlElementAttribute("OLBAccount")]
public OLBAccount[] OLBAccount { get; public set; }
    public OLBAccount[] get_OLBAccount();
    public void set_OLBAccount(OLBAccount[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.OLBTransaction : object {
    private DateTime oLBDownloadTimeField;
    private bool oLBDownloadTimeFieldSpecified;
    private OLBTxn[] oLBTxnField;
    public DateTime OLBDownloadTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OLBDownloadTimeSpecified { get; public set; }
    [XmlElementAttribute("OLBTxn")]
public OLBTxn[] OLBTxn { get; public set; }
    public DateTime get_OLBDownloadTime();
    public void set_OLBDownloadTime(DateTime value);
    public bool get_OLBDownloadTimeSpecified();
    public void set_OLBDownloadTimeSpecified(bool value);
    public OLBTxn[] get_OLBTxn();
    public void set_OLBTxn(OLBTxn[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.OLBTxn : object {
    private ReferenceType accountIdField;
    private DateTime lastPostingDateField;
    private bool lastPostingDateFieldSpecified;
    private DateTime txnsDownloadTimeField;
    private bool txnsDownloadTimeFieldSpecified;
    private OLBTxnDetail[] oLBTxnDetailField;
    private int startPositionField;
    private bool startPositionFieldSpecified;
    private int maxResultsField;
    private bool maxResultsFieldSpecified;
    private int totalCountField;
    private bool totalCountFieldSpecified;
    public ReferenceType AccountId { get; public set; }
    [XmlElementAttribute]
public DateTime LastPostingDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastPostingDateSpecified { get; public set; }
    public DateTime TxnsDownloadTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TxnsDownloadTimeSpecified { get; public set; }
    [XmlElementAttribute("OLBTxnDetail")]
public OLBTxnDetail[] OLBTxnDetail { get; public set; }
    [XmlAttributeAttribute]
public int startPosition { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool startPositionSpecified { get; public set; }
    [XmlAttributeAttribute]
public int maxResults { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool maxResultsSpecified { get; public set; }
    [XmlAttributeAttribute]
public int totalCount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool totalCountSpecified { get; public set; }
    public ReferenceType get_AccountId();
    public void set_AccountId(ReferenceType value);
    public DateTime get_LastPostingDate();
    public void set_LastPostingDate(DateTime value);
    public bool get_LastPostingDateSpecified();
    public void set_LastPostingDateSpecified(bool value);
    public DateTime get_TxnsDownloadTime();
    public void set_TxnsDownloadTime(DateTime value);
    public bool get_TxnsDownloadTimeSpecified();
    public void set_TxnsDownloadTimeSpecified(bool value);
    public OLBTxnDetail[] get_OLBTxnDetail();
    public void set_OLBTxnDetail(OLBTxnDetail[] value);
    public int get_startPosition();
    public void set_startPosition(int value);
    public bool get_startPositionSpecified();
    public void set_startPositionSpecified(bool value);
    public int get_maxResults();
    public void set_maxResults(int value);
    public bool get_maxResultsSpecified();
    public void set_maxResultsSpecified(bool value);
    public int get_totalCount();
    public void set_totalCount(int value);
    public bool get_totalCountSpecified();
    public void set_totalCountSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.OLBTxnDetail : object {
    private DateTime postDateField;
    private bool postDateFieldSpecified;
    private DateTime txnDateField;
    private bool txnDateFieldSpecified;
    private decimal amountField;
    private bool amountFieldSpecified;
    private string referenceNumberField;
    private string txnStatusField;
    [XmlElementAttribute]
public DateTime PostDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PostDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime TxnDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TxnDateSpecified { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public string ReferenceNumber { get; public set; }
    public string TxnStatus { get; public set; }
    public DateTime get_PostDate();
    public void set_PostDate(DateTime value);
    public bool get_PostDateSpecified();
    public void set_PostDateSpecified(bool value);
    public DateTime get_TxnDate();
    public void set_TxnDate(DateTime value);
    public bool get_TxnDateSpecified();
    public void set_TxnDateSpecified(bool value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public string get_ReferenceNumber();
    public void set_ReferenceNumber(string value);
    public string get_TxnStatus();
    public void set_TxnStatus(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.OLBTxnStatusEnum : Enum {
    public int value__;
    public static OLBTxnStatusEnum Pending;
    public static OLBTxnStatusEnum Approved;
    public static OLBTxnStatusEnum Deleted;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.OperationEnum : Enum {
    public int value__;
    public static OperationEnum create;
    public static OperationEnum update;
    public static OperationEnum revert;
    public static OperationEnum delete;
    public static OperationEnum void;
    public static OperationEnum send;
    public static OperationEnum merge;
    public static OperationEnum query;
    public static OperationEnum report;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.OtherName : NameBase {
    private string acctNumField;
    private PhysicalAddress primaryAddrField;
    private PhysicalAddress[] otherAddrField;
    private IntuitAnyType otherNameExField;
    public string AcctNum { get; public set; }
    public PhysicalAddress PrimaryAddr { get; public set; }
    [XmlElementAttribute("OtherAddr")]
public PhysicalAddress[] OtherAddr { get; public set; }
    public IntuitAnyType OtherNameEx { get; public set; }
    public string get_AcctNum();
    public void set_AcctNum(string value);
    public PhysicalAddress get_PrimaryAddr();
    public void set_PrimaryAddr(PhysicalAddress value);
    public PhysicalAddress[] get_OtherAddr();
    public void set_OtherAddr(PhysicalAddress[] value);
    public IntuitAnyType get_OtherNameEx();
    public void set_OtherNameEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.OtherPrefs : object {
    private NameValue[] nameValueField;
    [XmlElementAttribute("NameValue")]
public NameValue[] NameValue { get; public set; }
    public NameValue[] get_NameValue();
    public void set_NameValue(NameValue[] value);
}
public class Intuit.Ipp.Data.PaidSubscription : object {
    [CompilerGeneratedAttribute]
private string <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerPhone>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MonthlyFee>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MbHours>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastSyncTime>k__BackingField;
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string StartDate { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string CustomerName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string CustomerEmail { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string CustomerPhone { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string Realm { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string ApplicationName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string PlanName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string MonthlyFee { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string MbHours { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string LastSyncTime { get; private set; }
    public PaidSubscription(XmlNode singleUserNode);
    [CompilerGeneratedAttribute]
public string get_StartDate();
    [CompilerGeneratedAttribute]
private void set_StartDate(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerName();
    [CompilerGeneratedAttribute]
private void set_CustomerName(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerEmail();
    [CompilerGeneratedAttribute]
private void set_CustomerEmail(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerPhone();
    [CompilerGeneratedAttribute]
private void set_CustomerPhone(string value);
    [CompilerGeneratedAttribute]
public string get_Realm();
    [CompilerGeneratedAttribute]
private void set_Realm(string value);
    [CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
private void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public string get_PlanName();
    [CompilerGeneratedAttribute]
private void set_PlanName(string value);
    [CompilerGeneratedAttribute]
public string get_MonthlyFee();
    [CompilerGeneratedAttribute]
private void set_MonthlyFee(string value);
    [CompilerGeneratedAttribute]
public string get_MbHours();
    [CompilerGeneratedAttribute]
private void set_MbHours(string value);
    [CompilerGeneratedAttribute]
public string get_LastSyncTime();
    [CompilerGeneratedAttribute]
private void set_LastSyncTime(string value);
    public static Collection`1<PaidSubscription> ParsePaidSubscription(XmlNode node);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Payment : Transaction {
    private ReferenceType customerRefField;
    private ReferenceType remitToRefField;
    private ReferenceType aRAccountRefField;
    private ReferenceType depositToAccountRefField;
    private ReferenceType paymentMethodRefField;
    private string paymentRefNumField;
    private PaymentTypeEnum paymentTypeField;
    private bool paymentTypeFieldSpecified;
    private object itemField;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private decimal unappliedAmtField;
    private bool unappliedAmtFieldSpecified;
    private bool processPaymentField;
    private bool processPaymentFieldSpecified;
    private IntuitAnyType paymentExField;
    public ReferenceType CustomerRef { get; public set; }
    public ReferenceType RemitToRef { get; public set; }
    public ReferenceType ARAccountRef { get; public set; }
    public ReferenceType DepositToAccountRef { get; public set; }
    public ReferenceType PaymentMethodRef { get; public set; }
    public string PaymentRefNum { get; public set; }
    public PaymentTypeEnum PaymentType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PaymentTypeSpecified { get; public set; }
    [XmlElementAttribute("CheckPayment", "Intuit.Ipp.Data.CheckPayment")]
[XmlElementAttribute("CreditCardPayment", "Intuit.Ipp.Data.CreditCardPayment")]
public object AnyIntuitObject { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public decimal UnappliedAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UnappliedAmtSpecified { get; public set; }
    public bool ProcessPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ProcessPaymentSpecified { get; public set; }
    public IntuitAnyType PaymentEx { get; public set; }
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public ReferenceType get_RemitToRef();
    public void set_RemitToRef(ReferenceType value);
    public ReferenceType get_ARAccountRef();
    public void set_ARAccountRef(ReferenceType value);
    public ReferenceType get_DepositToAccountRef();
    public void set_DepositToAccountRef(ReferenceType value);
    public ReferenceType get_PaymentMethodRef();
    public void set_PaymentMethodRef(ReferenceType value);
    public string get_PaymentRefNum();
    public void set_PaymentRefNum(string value);
    public PaymentTypeEnum get_PaymentType();
    public void set_PaymentType(PaymentTypeEnum value);
    public bool get_PaymentTypeSpecified();
    public void set_PaymentTypeSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public decimal get_UnappliedAmt();
    public void set_UnappliedAmt(decimal value);
    public bool get_UnappliedAmtSpecified();
    public void set_UnappliedAmtSpecified(bool value);
    public bool get_ProcessPayment();
    public void set_ProcessPayment(bool value);
    public bool get_ProcessPaymentSpecified();
    public void set_ProcessPaymentSpecified(bool value);
    public IntuitAnyType get_PaymentEx();
    public void set_PaymentEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PaymentLineDetail : object {
    private ReferenceType itemRefField;
    private DateTime serviceDateField;
    private bool serviceDateFieldSpecified;
    private ReferenceType classRefField;
    private decimal balanceField;
    private bool balanceFieldSpecified;
    private decimal homeBalanceField;
    private bool homeBalanceFieldSpecified;
    private DiscountOverride discountField;
    private IntuitAnyType paymentLineExField;
    public ReferenceType ItemRef { get; public set; }
    [XmlElementAttribute]
public DateTime ServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ServiceDateSpecified { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public decimal Balance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BalanceSpecified { get; public set; }
    public decimal HomeBalance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeBalanceSpecified { get; public set; }
    public DiscountOverride Discount { get; public set; }
    public IntuitAnyType PaymentLineEx { get; public set; }
    public ReferenceType get_ItemRef();
    public void set_ItemRef(ReferenceType value);
    public DateTime get_ServiceDate();
    public void set_ServiceDate(DateTime value);
    public bool get_ServiceDateSpecified();
    public void set_ServiceDateSpecified(bool value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public decimal get_Balance();
    public void set_Balance(decimal value);
    public bool get_BalanceSpecified();
    public void set_BalanceSpecified(bool value);
    public decimal get_HomeBalance();
    public void set_HomeBalance(decimal value);
    public bool get_HomeBalanceSpecified();
    public void set_HomeBalanceSpecified(bool value);
    public DiscountOverride get_Discount();
    public void set_Discount(DiscountOverride value);
    public IntuitAnyType get_PaymentLineEx();
    public void set_PaymentLineEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PaymentMethod : IntuitEntity {
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private string typeField;
    private IntuitAnyType paymentMethodExField;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public string Type { get; public set; }
    public IntuitAnyType PaymentMethodEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public string get_Type();
    public void set_Type(string value);
    public IntuitAnyType get_PaymentMethodEx();
    public void set_PaymentMethodEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PaymentMethodEnum : Enum {
    public int value__;
    public static PaymentMethodEnum AmEx;
    public static PaymentMethodEnum Cash;
    public static PaymentMethodEnum Check;
    public static PaymentMethodEnum DebitCard;
    public static PaymentMethodEnum Discover;
    public static PaymentMethodEnum ECheck;
    public static PaymentMethodEnum GiftCard;
    public static PaymentMethodEnum MasterCard;
    public static PaymentMethodEnum Other;
    public static PaymentMethodEnum OtherCreditCard;
    public static PaymentMethodEnum Visa;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PaymentStatusEnum : Enum {
    public int value__;
    public static PaymentStatusEnum Draft;
    public static PaymentStatusEnum Overdue;
    public static PaymentStatusEnum Pending;
    public static PaymentStatusEnum Payable;
    public static PaymentStatusEnum Paid;
    public static PaymentStatusEnum Trash;
    public static PaymentStatusEnum UnPaid;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PaymentTypeEnum : Enum {
    public int value__;
    public static PaymentTypeEnum Cash;
    public static PaymentTypeEnum Check;
    public static PaymentTypeEnum CreditCard;
    public static PaymentTypeEnum Expense;
    public static PaymentTypeEnum Other;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PaySalesTaxEnum : Enum {
    public int value__;
    public static PaySalesTaxEnum Annually;
    public static PaySalesTaxEnum Monthly;
    public static PaySalesTaxEnum Quarterly;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PerItemAdjustEnum : Enum {
    public int value__;
    public static PerItemAdjustEnum Cost;
    public static PerItemAdjustEnum CurrentCustomPrice;
    public static PerItemAdjustEnum StandardPrice;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PhysicalAddress : object {
    private string idField;
    private string line1Field;
    private string line2Field;
    private string line3Field;
    private string line4Field;
    private string line5Field;
    private string cityField;
    private string countryField;
    private string countryCodeField;
    private string countyField;
    private string countrySubDivisionCodeField;
    private string postalCodeField;
    private string postalCodeSuffixField;
    private string latField;
    private string longField;
    private string tagField;
    private string noteField;
    public string Id { get; public set; }
    public string Line1 { get; public set; }
    public string Line2 { get; public set; }
    public string Line3 { get; public set; }
    public string Line4 { get; public set; }
    public string Line5 { get; public set; }
    public string City { get; public set; }
    public string Country { get; public set; }
    public string CountryCode { get; public set; }
    public string County { get; public set; }
    public string CountrySubDivisionCode { get; public set; }
    public string PostalCode { get; public set; }
    public string PostalCodeSuffix { get; public set; }
    public string Lat { get; public set; }
    public string Long { get; public set; }
    public string Tag { get; public set; }
    public string Note { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_Line1();
    public void set_Line1(string value);
    public string get_Line2();
    public void set_Line2(string value);
    public string get_Line3();
    public void set_Line3(string value);
    public string get_Line4();
    public void set_Line4(string value);
    public string get_Line5();
    public void set_Line5(string value);
    public string get_City();
    public void set_City(string value);
    public string get_Country();
    public void set_Country(string value);
    public string get_CountryCode();
    public void set_CountryCode(string value);
    public string get_County();
    public void set_County(string value);
    public string get_CountrySubDivisionCode();
    public void set_CountrySubDivisionCode(string value);
    public string get_PostalCode();
    public void set_PostalCode(string value);
    public string get_PostalCodeSuffix();
    public void set_PostalCodeSuffix(string value);
    public string get_Lat();
    public void set_Lat(string value);
    public string get_Long();
    public void set_Long(string value);
    public string get_Tag();
    public void set_Tag(string value);
    public string get_Note();
    public void set_Note(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PhysicalAddressTypeEnum : Enum {
    public int value__;
    public static PhysicalAddressTypeEnum Billing;
    public static PhysicalAddressTypeEnum Shipping;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PostingTypeEnum : Enum {
    public int value__;
    public static PostingTypeEnum Credit;
    public static PostingTypeEnum Debit;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Preferences : IntuitEntity {
    private CompanyAccountingPrefs accountingInfoPrefsField;
    private AdvancedInventoryPrefs advancedInventoryPrefsField;
    private ProductAndServicesPrefs productAndServicesPrefsField;
    private SalesFormsPrefs salesFormsPrefsField;
    private EmailMessagesPrefs emailMessagesPrefsField;
    private NameValue[] printDocumentPrefsField;
    private VendorAndPurchasesPrefs vendorAndPurchasesPrefsField;
    private TimeTrackingPrefs timeTrackingPrefsField;
    private TaxPrefs taxPrefsField;
    private FinanceChargePrefs financeChargesPrefsField;
    private CurrencyPrefs currencyPrefsField;
    private ReportPrefs reportPrefsField;
    private NameValue[] otherPrefsField;
    public CompanyAccountingPrefs AccountingInfoPrefs { get; public set; }
    public AdvancedInventoryPrefs AdvancedInventoryPrefs { get; public set; }
    public ProductAndServicesPrefs ProductAndServicesPrefs { get; public set; }
    public SalesFormsPrefs SalesFormsPrefs { get; public set; }
    public EmailMessagesPrefs EmailMessagesPrefs { get; public set; }
    [XmlArrayItemAttribute]
public NameValue[] PrintDocumentPrefs { get; public set; }
    public VendorAndPurchasesPrefs VendorAndPurchasesPrefs { get; public set; }
    public TimeTrackingPrefs TimeTrackingPrefs { get; public set; }
    public TaxPrefs TaxPrefs { get; public set; }
    public FinanceChargePrefs FinanceChargesPrefs { get; public set; }
    public CurrencyPrefs CurrencyPrefs { get; public set; }
    public ReportPrefs ReportPrefs { get; public set; }
    [XmlArrayItemAttribute]
public NameValue[] OtherPrefs { get; public set; }
    public CompanyAccountingPrefs get_AccountingInfoPrefs();
    public void set_AccountingInfoPrefs(CompanyAccountingPrefs value);
    public AdvancedInventoryPrefs get_AdvancedInventoryPrefs();
    public void set_AdvancedInventoryPrefs(AdvancedInventoryPrefs value);
    public ProductAndServicesPrefs get_ProductAndServicesPrefs();
    public void set_ProductAndServicesPrefs(ProductAndServicesPrefs value);
    public SalesFormsPrefs get_SalesFormsPrefs();
    public void set_SalesFormsPrefs(SalesFormsPrefs value);
    public EmailMessagesPrefs get_EmailMessagesPrefs();
    public void set_EmailMessagesPrefs(EmailMessagesPrefs value);
    public NameValue[] get_PrintDocumentPrefs();
    public void set_PrintDocumentPrefs(NameValue[] value);
    public VendorAndPurchasesPrefs get_VendorAndPurchasesPrefs();
    public void set_VendorAndPurchasesPrefs(VendorAndPurchasesPrefs value);
    public TimeTrackingPrefs get_TimeTrackingPrefs();
    public void set_TimeTrackingPrefs(TimeTrackingPrefs value);
    public TaxPrefs get_TaxPrefs();
    public void set_TaxPrefs(TaxPrefs value);
    public FinanceChargePrefs get_FinanceChargesPrefs();
    public void set_FinanceChargesPrefs(FinanceChargePrefs value);
    public CurrencyPrefs get_CurrencyPrefs();
    public void set_CurrencyPrefs(CurrencyPrefs value);
    public ReportPrefs get_ReportPrefs();
    public void set_ReportPrefs(ReportPrefs value);
    public NameValue[] get_OtherPrefs();
    public void set_OtherPrefs(NameValue[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PriceLevel : IntuitEntity {
    private object nameField;
    private bool activeField;
    private PriceLevelTypeEnum priceLevelTypeField;
    private Object[] itemsField;
    private ReferenceType currencyRefField;
    private IntuitAnyType priceLevelExField;
    public object Name { get; public set; }
    public bool Active { get; public set; }
    public PriceLevelTypeEnum PriceLevelType { get; public set; }
    [XmlElementAttribute("FixedPercentage", "System.Decimal")]
[XmlElementAttribute("PriceLevelPerItem", "Intuit.Ipp.Data.PriceLevelPerItem")]
public Object[] AnyIntuitObjects { get; public set; }
    public ReferenceType CurrencyRef { get; public set; }
    public IntuitAnyType PriceLevelEx { get; public set; }
    public object get_Name();
    public void set_Name(object value);
    public bool get_Active();
    public void set_Active(bool value);
    public PriceLevelTypeEnum get_PriceLevelType();
    public void set_PriceLevelType(PriceLevelTypeEnum value);
    public Object[] get_AnyIntuitObjects();
    public void set_AnyIntuitObjects(Object[] value);
    public ReferenceType get_CurrencyRef();
    public void set_CurrencyRef(ReferenceType value);
    public IntuitAnyType get_PriceLevelEx();
    public void set_PriceLevelEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PriceLevelPerItem : IntuitEntity {
    private ReferenceType itemRefField;
    private decimal itemField;
    private ItemChoiceType5 itemElementNameField;
    private IntuitAnyType priceLevelPerItemExField;
    public ReferenceType ItemRef { get; public set; }
    [XmlElementAttribute("CustomPrice", "System.Decimal")]
[XmlElementAttribute("CustomPricePercent", "System.Decimal")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public decimal AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType5 ItemElementName { get; public set; }
    public IntuitAnyType PriceLevelPerItemEx { get; public set; }
    public ReferenceType get_ItemRef();
    public void set_ItemRef(ReferenceType value);
    public decimal get_AnyIntuitObject();
    public void set_AnyIntuitObject(decimal value);
    public ItemChoiceType5 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType5 value);
    public IntuitAnyType get_PriceLevelPerItemEx();
    public void set_PriceLevelPerItemEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PriceLevelTypeEnum : Enum {
    public int value__;
    public static PriceLevelTypeEnum FixedPercentage;
    public static PriceLevelTypeEnum PerItem;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PrintDocumentPrefs : object {
    private NameValue[] nameValueField;
    [XmlElementAttribute("NameValue")]
public NameValue[] NameValue { get; public set; }
    public NameValue[] get_NameValue();
    public void set_NameValue(NameValue[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PrintStatusEnum : Enum {
    public int value__;
    public static PrintStatusEnum NotSet;
    public static PrintStatusEnum NeedToPrint;
    public static PrintStatusEnum PrintComplete;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ProductAndServicesPrefs : object {
    private bool forSalesField;
    private bool forSalesFieldSpecified;
    private bool forPurchaseField;
    private bool forPurchaseFieldSpecified;
    private bool inventoryAndPurchaseOrderField;
    private bool inventoryAndPurchaseOrderFieldSpecified;
    private bool quantityWithPriceAndRateField;
    private bool quantityWithPriceAndRateFieldSpecified;
    private bool quantityOnHandField;
    private bool quantityOnHandFieldSpecified;
    private UOMFeatureTypeEnum uOMField;
    private bool uOMFieldSpecified;
    private bool revenueRecognitionField;
    private bool revenueRecognitionFieldSpecified;
    private string revenueRecognitionFrequencyField;
    public bool ForSales { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ForSalesSpecified { get; public set; }
    public bool ForPurchase { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ForPurchaseSpecified { get; public set; }
    public bool InventoryAndPurchaseOrder { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool InventoryAndPurchaseOrderSpecified { get; public set; }
    public bool QuantityWithPriceAndRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QuantityWithPriceAndRateSpecified { get; public set; }
    public bool QuantityOnHand { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool QuantityOnHandSpecified { get; public set; }
    public UOMFeatureTypeEnum UOM { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UOMSpecified { get; public set; }
    public bool RevenueRecognition { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RevenueRecognitionSpecified { get; public set; }
    public string RevenueRecognitionFrequency { get; public set; }
    public bool get_ForSales();
    public void set_ForSales(bool value);
    public bool get_ForSalesSpecified();
    public void set_ForSalesSpecified(bool value);
    public bool get_ForPurchase();
    public void set_ForPurchase(bool value);
    public bool get_ForPurchaseSpecified();
    public void set_ForPurchaseSpecified(bool value);
    public bool get_InventoryAndPurchaseOrder();
    public void set_InventoryAndPurchaseOrder(bool value);
    public bool get_InventoryAndPurchaseOrderSpecified();
    public void set_InventoryAndPurchaseOrderSpecified(bool value);
    public bool get_QuantityWithPriceAndRate();
    public void set_QuantityWithPriceAndRate(bool value);
    public bool get_QuantityWithPriceAndRateSpecified();
    public void set_QuantityWithPriceAndRateSpecified(bool value);
    public bool get_QuantityOnHand();
    public void set_QuantityOnHand(bool value);
    public bool get_QuantityOnHandSpecified();
    public void set_QuantityOnHandSpecified(bool value);
    public UOMFeatureTypeEnum get_UOM();
    public void set_UOM(UOMFeatureTypeEnum value);
    public bool get_UOMSpecified();
    public void set_UOMSpecified(bool value);
    public bool get_RevenueRecognition();
    public void set_RevenueRecognition(bool value);
    public bool get_RevenueRecognitionSpecified();
    public void set_RevenueRecognitionSpecified(bool value);
    public string get_RevenueRecognitionFrequency();
    public void set_RevenueRecognitionFrequency(string value);
}
public class Intuit.Ipp.Data.ProfitAndLoss : ReportQueryBase {
}
public class Intuit.Ipp.Data.ProfitAndLossDetail : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Purchase : Transaction {
    private ReferenceType accountRefField;
    private ReferenceType paymentMethodRefField;
    private string paymentRefNumField;
    private PaymentTypeEnum paymentTypeField;
    private bool paymentTypeFieldSpecified;
    private object itemField;
    private ReferenceType entityRefField;
    private bool creditField;
    private bool creditFieldSpecified;
    private PhysicalAddress remitToAddrField;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private string txnIdField;
    private string txnNumField;
    private string memoField;
    private PrintStatusEnum printStatusField;
    private bool printStatusFieldSpecified;
    private GlobalTaxCalculationEnum globalTaxCalculationField;
    private bool globalTaxCalculationFieldSpecified;
    private IntuitAnyType purchaseExField;
    private decimal lessCISField;
    private bool lessCISFieldSpecified;
    private bool includeInAnnualTPARField;
    private bool includeInAnnualTPARFieldSpecified;
    public ReferenceType AccountRef { get; public set; }
    public ReferenceType PaymentMethodRef { get; public set; }
    public string PaymentRefNum { get; public set; }
    public PaymentTypeEnum PaymentType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PaymentTypeSpecified { get; public set; }
    [XmlElementAttribute("CheckPayment", "Intuit.Ipp.Data.CheckPayment")]
[XmlElementAttribute("CreditCardPayment", "Intuit.Ipp.Data.CreditCardPayment")]
public object AnyIntuitObject { get; public set; }
    public ReferenceType EntityRef { get; public set; }
    public bool Credit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CreditSpecified { get; public set; }
    public PhysicalAddress RemitToAddr { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public string TxnId { get; public set; }
    public string TxnNum { get; public set; }
    public string Memo { get; public set; }
    public PrintStatusEnum PrintStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintStatusSpecified { get; public set; }
    public GlobalTaxCalculationEnum GlobalTaxCalculation { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool GlobalTaxCalculationSpecified { get; public set; }
    public IntuitAnyType PurchaseEx { get; public set; }
    public decimal LessCIS { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LessCISSpecified { get; public set; }
    public bool IncludeInAnnualTPAR { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IncludeInAnnualTPARSpecified { get; public set; }
    public ReferenceType get_AccountRef();
    public void set_AccountRef(ReferenceType value);
    public ReferenceType get_PaymentMethodRef();
    public void set_PaymentMethodRef(ReferenceType value);
    public string get_PaymentRefNum();
    public void set_PaymentRefNum(string value);
    public PaymentTypeEnum get_PaymentType();
    public void set_PaymentType(PaymentTypeEnum value);
    public bool get_PaymentTypeSpecified();
    public void set_PaymentTypeSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public ReferenceType get_EntityRef();
    public void set_EntityRef(ReferenceType value);
    public bool get_Credit();
    public void set_Credit(bool value);
    public bool get_CreditSpecified();
    public void set_CreditSpecified(bool value);
    public PhysicalAddress get_RemitToAddr();
    public void set_RemitToAddr(PhysicalAddress value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public string get_TxnId();
    public void set_TxnId(string value);
    public string get_TxnNum();
    public void set_TxnNum(string value);
    public string get_Memo();
    public void set_Memo(string value);
    public PrintStatusEnum get_PrintStatus();
    public void set_PrintStatus(PrintStatusEnum value);
    public bool get_PrintStatusSpecified();
    public void set_PrintStatusSpecified(bool value);
    public GlobalTaxCalculationEnum get_GlobalTaxCalculation();
    public void set_GlobalTaxCalculation(GlobalTaxCalculationEnum value);
    public bool get_GlobalTaxCalculationSpecified();
    public void set_GlobalTaxCalculationSpecified(bool value);
    public IntuitAnyType get_PurchaseEx();
    public void set_PurchaseEx(IntuitAnyType value);
    public decimal get_LessCIS();
    public void set_LessCIS(decimal value);
    public bool get_LessCISSpecified();
    public void set_LessCISSpecified(bool value);
    public bool get_IncludeInAnnualTPAR();
    public void set_IncludeInAnnualTPAR(bool value);
    public bool get_IncludeInAnnualTPARSpecified();
    public void set_IncludeInAnnualTPARSpecified(bool value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.PurchaseOrder")]
[XmlIncludeAttribute("Intuit.Ipp.Data.VendorCredit")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Bill")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PurchaseByVendor : Transaction {
    private ReferenceType vendorRefField;
    private ReferenceType aPAccountRefField;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private EmailAddress billEmailField;
    private EmailAddress replyEmailField;
    private string memoField;
    private GlobalTaxCalculationEnum globalTaxCalculationField;
    private bool globalTaxCalculationFieldSpecified;
    public ReferenceType VendorRef { get; public set; }
    public ReferenceType APAccountRef { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public EmailAddress BillEmail { get; public set; }
    public EmailAddress ReplyEmail { get; public set; }
    public string Memo { get; public set; }
    public GlobalTaxCalculationEnum GlobalTaxCalculation { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool GlobalTaxCalculationSpecified { get; public set; }
    public ReferenceType get_VendorRef();
    public void set_VendorRef(ReferenceType value);
    public ReferenceType get_APAccountRef();
    public void set_APAccountRef(ReferenceType value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public EmailAddress get_BillEmail();
    public void set_BillEmail(EmailAddress value);
    public EmailAddress get_ReplyEmail();
    public void set_ReplyEmail(EmailAddress value);
    public string get_Memo();
    public void set_Memo(string value);
    public GlobalTaxCalculationEnum get_GlobalTaxCalculation();
    public void set_GlobalTaxCalculation(GlobalTaxCalculationEnum value);
    public bool get_GlobalTaxCalculationSpecified();
    public void set_GlobalTaxCalculationSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PurchaseOrder : PurchaseByVendor {
    private ReferenceType taxCodeRefField;
    private ReferenceType classRefField;
    private ReferenceType reimbursableInfoRefField;
    private ReferenceType salesTermRefField;
    private DateTime dueDateField;
    private bool dueDateFieldSpecified;
    private DateTime expectedDateField;
    private bool expectedDateFieldSpecified;
    private PhysicalAddress vendorAddrField;
    private ReferenceType shipToField;
    private ReferenceType itemField;
    private ItemChoiceType3 itemElementNameField;
    private PhysicalAddress shipAddrField;
    private ReferenceType shipMethodRefField;
    private string fOBField;
    private EmailAddress pOEmailField;
    private ReferenceType templateRefField;
    private PrintStatusEnum printStatusField;
    private bool printStatusFieldSpecified;
    private EmailStatusEnum emailStatusField;
    private bool emailStatusFieldSpecified;
    private bool manuallyClosedField;
    private bool manuallyClosedFieldSpecified;
    private PurchaseOrderStatusEnum pOStatusField;
    private bool pOStatusFieldSpecified;
    private IntuitAnyType purchaseOrderExField;
    public ReferenceType TaxCodeRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType ReimbursableInfoRef { get; public set; }
    public ReferenceType SalesTermRef { get; public set; }
    [XmlElementAttribute]
public DateTime DueDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DueDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime ExpectedDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ExpectedDateSpecified { get; public set; }
    public PhysicalAddress VendorAddr { get; public set; }
    public ReferenceType ShipTo { get; public set; }
    [XmlElementAttribute("DropShipToEntity", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("InventorySiteRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public ReferenceType AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType3 ItemElementName { get; public set; }
    public PhysicalAddress ShipAddr { get; public set; }
    public ReferenceType ShipMethodRef { get; public set; }
    public string FOB { get; public set; }
    public EmailAddress POEmail { get; public set; }
    public ReferenceType TemplateRef { get; public set; }
    public PrintStatusEnum PrintStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintStatusSpecified { get; public set; }
    public EmailStatusEnum EmailStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EmailStatusSpecified { get; public set; }
    public bool ManuallyClosed { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ManuallyClosedSpecified { get; public set; }
    public PurchaseOrderStatusEnum POStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool POStatusSpecified { get; public set; }
    public IntuitAnyType PurchaseOrderEx { get; public set; }
    public ReferenceType get_TaxCodeRef();
    public void set_TaxCodeRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_ReimbursableInfoRef();
    public void set_ReimbursableInfoRef(ReferenceType value);
    public ReferenceType get_SalesTermRef();
    public void set_SalesTermRef(ReferenceType value);
    public DateTime get_DueDate();
    public void set_DueDate(DateTime value);
    public bool get_DueDateSpecified();
    public void set_DueDateSpecified(bool value);
    public DateTime get_ExpectedDate();
    public void set_ExpectedDate(DateTime value);
    public bool get_ExpectedDateSpecified();
    public void set_ExpectedDateSpecified(bool value);
    public PhysicalAddress get_VendorAddr();
    public void set_VendorAddr(PhysicalAddress value);
    public ReferenceType get_ShipTo();
    public void set_ShipTo(ReferenceType value);
    public ReferenceType get_AnyIntuitObject();
    public void set_AnyIntuitObject(ReferenceType value);
    public ItemChoiceType3 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType3 value);
    public PhysicalAddress get_ShipAddr();
    public void set_ShipAddr(PhysicalAddress value);
    public ReferenceType get_ShipMethodRef();
    public void set_ShipMethodRef(ReferenceType value);
    public string get_FOB();
    public void set_FOB(string value);
    public EmailAddress get_POEmail();
    public void set_POEmail(EmailAddress value);
    public ReferenceType get_TemplateRef();
    public void set_TemplateRef(ReferenceType value);
    public PrintStatusEnum get_PrintStatus();
    public void set_PrintStatus(PrintStatusEnum value);
    public bool get_PrintStatusSpecified();
    public void set_PrintStatusSpecified(bool value);
    public EmailStatusEnum get_EmailStatus();
    public void set_EmailStatus(EmailStatusEnum value);
    public bool get_EmailStatusSpecified();
    public void set_EmailStatusSpecified(bool value);
    public bool get_ManuallyClosed();
    public void set_ManuallyClosed(bool value);
    public bool get_ManuallyClosedSpecified();
    public void set_ManuallyClosedSpecified(bool value);
    public PurchaseOrderStatusEnum get_POStatus();
    public void set_POStatus(PurchaseOrderStatusEnum value);
    public bool get_POStatusSpecified();
    public void set_POStatusSpecified(bool value);
    public IntuitAnyType get_PurchaseOrderEx();
    public void set_PurchaseOrderEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.PurchaseOrderItemLineDetail : SalesItemLineDetail {
    private string manPartNumField;
    private bool manuallyClosedField;
    private bool manuallyClosedFieldSpecified;
    private decimal openQtyField;
    private bool openQtyFieldSpecified;
    private IntuitAnyType purchaseOrderItemLineDetailExField;
    public string ManPartNum { get; public set; }
    public bool ManuallyClosed { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ManuallyClosedSpecified { get; public set; }
    public decimal OpenQty { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OpenQtySpecified { get; public set; }
    public IntuitAnyType PurchaseOrderItemLineDetailEx { get; public set; }
    public string get_ManPartNum();
    public void set_ManPartNum(string value);
    public bool get_ManuallyClosed();
    public void set_ManuallyClosed(bool value);
    public bool get_ManuallyClosedSpecified();
    public void set_ManuallyClosedSpecified(bool value);
    public decimal get_OpenQty();
    public void set_OpenQty(decimal value);
    public bool get_OpenQtySpecified();
    public void set_OpenQtySpecified(bool value);
    public IntuitAnyType get_PurchaseOrderItemLineDetailEx();
    public void set_PurchaseOrderItemLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.PurchaseOrderStatusEnum : Enum {
    public int value__;
    public static PurchaseOrderStatusEnum Open;
    public static PurchaseOrderStatusEnum Closed;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.QbdtEntityIdMapping : IntuitEntity {
    private string qboEntityIdField;
    private string qbdtExportableIdField;
    private string qboEntityTypeField;
    private string qbdtEntityTypeField;
    public string QboEntityId { get; public set; }
    public string QbdtExportableId { get; public set; }
    public string QboEntityType { get; public set; }
    public string QbdtEntityType { get; public set; }
    public string get_QboEntityId();
    public void set_QboEntityId(string value);
    public string get_QbdtExportableId();
    public void set_QbdtExportableId(string value);
    public string get_QboEntityType();
    public void set_QboEntityType(string value);
    public string get_QbdtEntityType();
    public void set_QbdtEntityType(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.QboEntityTypeEnum : Enum {
    public int value__;
    public static QboEntityTypeEnum CUSTOMER;
    public static QboEntityTypeEnum VENDOR;
    public static QboEntityTypeEnum EMPLOYEE;
    public static QboEntityTypeEnum CREDIT_CARD;
    public static QboEntityTypeEnum CHECK;
    public static QboEntityTypeEnum INVOICE;
    public static QboEntityTypeEnum RECEIVED_PAYMENT;
    public static QboEntityTypeEnum GENERAL_JOURNAL;
    public static QboEntityTypeEnum BILL;
    public static QboEntityTypeEnum CREDIT_CARD_CREDIT;
    public static QboEntityTypeEnum BILL_CREDIT;
    public static QboEntityTypeEnum CHARGE_CREDIT;
    public static QboEntityTypeEnum BILL_CHECK;
    public static QboEntityTypeEnum BILL_CREDIT_CARD;
    public static QboEntityTypeEnum CHARGE;
    public static QboEntityTypeEnum TRANSFER;
    public static QboEntityTypeEnum RECEIVED_MONEY;
    public static QboEntityTypeEnum STATEMENT;
    public static QboEntityTypeEnum REIMB_CHARGE;
    public static QboEntityTypeEnum CASH_PURCHASE;
    public static QboEntityTypeEnum CASH_SALE;
    public static QboEntityTypeEnum CREDIT_MEMO;
    public static QboEntityTypeEnum CREDIT_REFUND;
    public static QboEntityTypeEnum ESTIMATE;
    public static QboEntityTypeEnum INVENTORY_QUANTITY_ADJUSTMENT;
    public static QboEntityTypeEnum PURCHASE_ORDER;
    public static QboEntityTypeEnum PAYROLL_CHECK;
    public static QboEntityTypeEnum TAX_PAYMENT;
    public static QboEntityTypeEnum PAYROLL_ADJUSTMENT_V2;
    public static QboEntityTypeEnum PAYROLL_REFUND;
    public static QboEntityTypeEnum GLOBAL_TAX_PAYMENT;
    public static QboEntityTypeEnum GLOBAL_TAX_ADJUSTMENT;
    public static QboEntityTypeEnum JOB_INVOICE;
    public static QboEntityTypeEnum ITEM;
    public static QboEntityTypeEnum GENERIC_EXPENSE;
    public static QboEntityTypeEnum TIME_ACTIVITY;
    public static QboEntityTypeEnum DEPARTMENT;
    public static QboEntityTypeEnum USERS;
    public static QboEntityTypeEnum KLASS;
    public static QboEntityTypeEnum PAYMENT_METHOD;
    public static QboEntityTypeEnum MEMORIZED_TRANSACTION;
    public static QboEntityTypeEnum TERM;
    public static QboEntityTypeEnum BUDGET;
    public static QboEntityTypeEnum TAX_CODE;
    public static QboEntityTypeEnum TAX_CODE_RATE;
    public static QboEntityTypeEnum TAX_AGENCY;
    public static QboEntityTypeEnum ATTACHABLE;
    public static QboEntityTypeEnum ACCOUNT;
    public static QboEntityTypeEnum PREFERENCES;
    public static QboEntityTypeEnum JOURNAL_CODE;
    public static QboEntityTypeEnum DISCOUNT_RATE;
    public static QboEntityTypeEnum BANKING_TRANSACTIONS;
    public static QboEntityTypeEnum BUSINESS_TERMS;
    public static QboEntityTypeEnum LIABILITY_CHECK;
    public static QboEntityTypeEnum LIABILITY_CREDIT_CARD;
    public static QboEntityTypeEnum LIABILITY_REFUND;
    public static QboEntityTypeEnum PRIOR_LIABILITY_PAYMENTS;
    public static QboEntityTypeEnum LIABILITY_EPAY;
    public static QboEntityTypeEnum LIABILITY_MMAP;
    public static QboEntityTypeEnum TAX_CREDIT_UTILISE;
    public static QboEntityTypeEnum TAX_CREDIT_DEFER;
    public static QboEntityTypeEnum TAX_CREDIT_REVERSE;
    public static QboEntityTypeEnum TAX_CREDIT_REFUND;
    public static QboEntityTypeEnum GROSS_ADJUSTMENT;
    public static QboEntityTypeEnum REVERSE_CHARGE;
    public static QboEntityTypeEnum DD_CHECK;
    public static QboEntityTypeEnum PAYCHECK;
    public static QboEntityTypeEnum PAYROLL_ADJUSTMENT;
    public static QboEntityTypeEnum PAYROLL_YTD;
    public static QboEntityTypeEnum SDK_USERS;
    public static QboEntityTypeEnum PAYROLL_ITEMS;
    public static QboEntityTypeEnum PAY_GROUPS;
    public static QboEntityTypeEnum PAID_TIME_OFF_ENTRIES;
    public static QboEntityTypeEnum TAX_JURISDICTIONS;
    public static QboEntityTypeEnum MEMORIZED_REPORTS;
    public static QboEntityTypeEnum OLB_FINANCIAL_INSTITUTIONS;
    public static QboEntityTypeEnum DIRECT_DEPOSIT_BANK_INFO;
    public static QboEntityTypeEnum REMINDERS;
    public static QboEntityTypeEnum PAYROLL_FORMS;
    public static QboEntityTypeEnum EPAY_BANK_ACCOUNT_INFO;
    public static QboEntityTypeEnum EPAY_AGENCY_CREDENTIALS;
    public static QboEntityTypeEnum EFILE_ENROLLMENT;
    public static QboEntityTypeEnum TAXRETURNLINES;
    public static QboEntityTypeEnum NOTES;
    public static QboEntityTypeEnum PRINT_PREF;
    public static QboEntityTypeEnum MANAGEMENT_REPORT;
    public static QboEntityTypeEnum OLB_RULES;
    public static QboEntityTypeEnum DESKTOPIMPORT_SEED_QOH;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.QboEstimateStatusEnum : Enum {
    public int value__;
    public static QboEstimateStatusEnum Accepted;
    public static QboEstimateStatusEnum Closed;
    public static QboEstimateStatusEnum Pending;
    public static QboEstimateStatusEnum Rejected;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.QueryResponse : object {
    private Warning[] warningsField;
    private Object[] itemsField;
    private int startPositionField;
    private bool startPositionFieldSpecified;
    private int maxResultsField;
    private bool maxResultsFieldSpecified;
    private int totalCountField;
    private bool totalCountFieldSpecified;
    private object itemField;
    [XmlArrayItemAttribute]
public Warning[] Warnings { get; public set; }
    [XmlElementAttribute("Account", "Intuit.Ipp.Data.Account")]
[XmlElementAttribute("Attachable", "Intuit.Ipp.Data.Attachable")]
[XmlElementAttribute("Bill", "Intuit.Ipp.Data.Bill")]
[XmlElementAttribute("BillPayment", "Intuit.Ipp.Data.BillPayment")]
[XmlElementAttribute("BooleanTypeCustomFieldDefinition", "Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlElementAttribute("Budget", "Intuit.Ipp.Data.Budget")]
[XmlElementAttribute("ChargeCredit", "Intuit.Ipp.Data.ChargeCredit")]
[XmlElementAttribute("Class", "Intuit.Ipp.Data.Class")]
[XmlElementAttribute("Company", "Intuit.Ipp.Data.Company")]
[XmlElementAttribute("CompanyCurrency", "Intuit.Ipp.Data.CompanyCurrency")]
[XmlElementAttribute("CompanyInfo", "Intuit.Ipp.Data.CompanyInfo")]
[XmlElementAttribute("CreditCardPaymentTxn", "Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlElementAttribute("CreditMemo", "Intuit.Ipp.Data.CreditMemo")]
[XmlElementAttribute("CustomFieldDefinition", "Intuit.Ipp.Data.CustomFieldDefinition")]
[XmlElementAttribute("Customer", "Intuit.Ipp.Data.Customer")]
[XmlElementAttribute("CustomerType", "Intuit.Ipp.Data.CustomerType")]
[XmlElementAttribute("DateTypeCustomFieldDefinition", "Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlElementAttribute("Department", "Intuit.Ipp.Data.Department")]
[XmlElementAttribute("Deposit", "Intuit.Ipp.Data.Deposit")]
[XmlElementAttribute("EmailDeliveryInfo", "Intuit.Ipp.Data.EmailDeliveryInfo")]
[XmlElementAttribute("Employee", "Intuit.Ipp.Data.Employee")]
[XmlElementAttribute("Estimate", "Intuit.Ipp.Data.Estimate")]
[XmlElementAttribute("ExchangeRate", "Intuit.Ipp.Data.ExchangeRate")]
[XmlElementAttribute("FixedAsset", "Intuit.Ipp.Data.FixedAsset")]
[XmlElementAttribute("IntuitObject", "Intuit.Ipp.Data.IntuitEntity")]
[XmlElementAttribute("InventoryAdjustment", "Intuit.Ipp.Data.InventoryAdjustment")]
[XmlElementAttribute("InventorySite", "Intuit.Ipp.Data.InventorySite")]
[XmlElementAttribute("Invoice", "Intuit.Ipp.Data.Invoice")]
[XmlElementAttribute("Item", "Intuit.Ipp.Data.Item")]
[XmlElementAttribute("JournalCode", "Intuit.Ipp.Data.JournalCode")]
[XmlElementAttribute("JournalEntry", "Intuit.Ipp.Data.JournalEntry")]
[XmlElementAttribute("MasterAccount", "Intuit.Ipp.Data.MasterAccount")]
[XmlElementAttribute("NumberTypeCustomFieldDefinition", "Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlElementAttribute("OtherName", "Intuit.Ipp.Data.OtherName")]
[XmlElementAttribute("Payment", "Intuit.Ipp.Data.Payment")]
[XmlElementAttribute("PaymentMethod", "Intuit.Ipp.Data.PaymentMethod")]
[XmlElementAttribute("Preferences", "Intuit.Ipp.Data.Preferences")]
[XmlElementAttribute("PriceLevel", "Intuit.Ipp.Data.PriceLevel")]
[XmlElementAttribute("Purchase", "Intuit.Ipp.Data.Purchase")]
[XmlElementAttribute("PurchaseOrder", "Intuit.Ipp.Data.PurchaseOrder")]
[XmlElementAttribute("QbdtEntityIdMapping", "Intuit.Ipp.Data.QbdtEntityIdMapping")]
[XmlElementAttribute("RecurringTransaction", "Intuit.Ipp.Data.RecurringTransaction")]
[XmlElementAttribute("RefundReceipt", "Intuit.Ipp.Data.RefundReceipt")]
[XmlElementAttribute("ReimburseCharge", "Intuit.Ipp.Data.ReimburseCharge")]
[XmlElementAttribute("SalesOrder", "Intuit.Ipp.Data.SalesOrder")]
[XmlElementAttribute("SalesReceipt", "Intuit.Ipp.Data.SalesReceipt")]
[XmlElementAttribute("SalesRep", "Intuit.Ipp.Data.SalesRep")]
[XmlElementAttribute("StatementCharge", "Intuit.Ipp.Data.StatementCharge")]
[XmlElementAttribute("Status", "Intuit.Ipp.Data.Status")]
[XmlElementAttribute("StringTypeCustomFieldDefinition", "Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[XmlElementAttribute("SyncActivity", "Intuit.Ipp.Data.SyncActivity")]
[XmlElementAttribute("TDSMetadata", "Intuit.Ipp.Data.TDSMetadata")]
[XmlElementAttribute("Tag", "Intuit.Ipp.Data.Tag")]
[XmlElementAttribute("Task", "Intuit.Ipp.Data.Task")]
[XmlElementAttribute("TaxAgency", "Intuit.Ipp.Data.TaxAgency")]
[XmlElementAttribute("TaxClassification", "Intuit.Ipp.Data.TaxClassification")]
[XmlElementAttribute("TaxCode", "Intuit.Ipp.Data.TaxCode")]
[XmlElementAttribute("TaxPayment", "Intuit.Ipp.Data.TaxPayment")]
[XmlElementAttribute("TaxRate", "Intuit.Ipp.Data.TaxRate")]
[XmlElementAttribute("TaxReturn", "Intuit.Ipp.Data.TaxReturn")]
[XmlElementAttribute("TaxService", "Intuit.Ipp.Data.TaxService")]
[XmlElementAttribute("Term", "Intuit.Ipp.Data.Term")]
[XmlElementAttribute("TimeActivity", "Intuit.Ipp.Data.TimeActivity")]
[XmlElementAttribute("Transfer", "Intuit.Ipp.Data.Transfer")]
[XmlElementAttribute("UserAlert", "Intuit.Ipp.Data.UserAlert")]
[XmlElementAttribute("Vendor", "Intuit.Ipp.Data.Vendor")]
[XmlElementAttribute("VendorCredit", "Intuit.Ipp.Data.VendorCredit")]
[XmlElementAttribute("VendorType", "Intuit.Ipp.Data.VendorType")]
public Object[] AnyIntuitObjects { get; public set; }
    [XmlAttributeAttribute]
public int startPosition { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool startPositionSpecified { get; public set; }
    [XmlAttributeAttribute]
public int maxResults { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool maxResultsSpecified { get; public set; }
    [XmlAttributeAttribute]
public int totalCount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool totalCountSpecified { get; public set; }
    [XmlElementAttribute("Fault", "Intuit.Ipp.Data.Fault")]
public object AnyIntuitObject { get; public set; }
    public Warning[] get_Warnings();
    public void set_Warnings(Warning[] value);
    public Object[] get_AnyIntuitObjects();
    public void set_AnyIntuitObjects(Object[] value);
    public int get_startPosition();
    public void set_startPosition(int value);
    public bool get_startPositionSpecified();
    public void set_startPositionSpecified(bool value);
    public int get_maxResults();
    public void set_maxResults(int value);
    public bool get_maxResultsSpecified();
    public void set_maxResultsSpecified(bool value);
    public int get_totalCount();
    public void set_totalCount(int value);
    public bool get_totalCountSpecified();
    public void set_totalCountSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.RecurringInfo : object {
    private string nameField;
    private string recurTypeField;
    private bool activeField;
    private bool activeFieldSpecified;
    private RecurringScheduleInfo scheduleInfoField;
    public string Name { get; public set; }
    public string RecurType { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public RecurringScheduleInfo ScheduleInfo { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_RecurType();
    public void set_RecurType(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public RecurringScheduleInfo get_ScheduleInfo();
    public void set_ScheduleInfo(RecurringScheduleInfo value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.RecurringScheduleInfo : object {
    private string intervalTypeField;
    private int numIntervalField;
    private bool numIntervalFieldSpecified;
    private int dayOfMonthField;
    private bool dayOfMonthFieldSpecified;
    private WeekEnum dayOfWeekField;
    private bool dayOfWeekFieldSpecified;
    private int weekOfMonthField;
    private bool weekOfMonthFieldSpecified;
    private MonthEnum monthOfYearField;
    private bool monthOfYearFieldSpecified;
    private int remindDaysField;
    private bool remindDaysFieldSpecified;
    private int daysBeforeField;
    private bool daysBeforeFieldSpecified;
    private int maxOccurrencesField;
    private bool maxOccurrencesFieldSpecified;
    private DateTime startDateField;
    private bool startDateFieldSpecified;
    private DateTime endDateField;
    private bool endDateFieldSpecified;
    private DateTime nextDateField;
    private bool nextDateFieldSpecified;
    private DateTime previousDateField;
    private bool previousDateFieldSpecified;
    public string IntervalType { get; public set; }
    public int NumInterval { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool NumIntervalSpecified { get; public set; }
    public int DayOfMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DayOfMonthSpecified { get; public set; }
    public WeekEnum DayOfWeek { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DayOfWeekSpecified { get; public set; }
    public int WeekOfMonth { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool WeekOfMonthSpecified { get; public set; }
    public MonthEnum MonthOfYear { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MonthOfYearSpecified { get; public set; }
    public int RemindDays { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RemindDaysSpecified { get; public set; }
    public int DaysBefore { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DaysBeforeSpecified { get; public set; }
    public int MaxOccurrences { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MaxOccurrencesSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime StartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StartDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime EndDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EndDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime NextDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool NextDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime PreviousDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PreviousDateSpecified { get; public set; }
    public string get_IntervalType();
    public void set_IntervalType(string value);
    public int get_NumInterval();
    public void set_NumInterval(int value);
    public bool get_NumIntervalSpecified();
    public void set_NumIntervalSpecified(bool value);
    public int get_DayOfMonth();
    public void set_DayOfMonth(int value);
    public bool get_DayOfMonthSpecified();
    public void set_DayOfMonthSpecified(bool value);
    public WeekEnum get_DayOfWeek();
    public void set_DayOfWeek(WeekEnum value);
    public bool get_DayOfWeekSpecified();
    public void set_DayOfWeekSpecified(bool value);
    public int get_WeekOfMonth();
    public void set_WeekOfMonth(int value);
    public bool get_WeekOfMonthSpecified();
    public void set_WeekOfMonthSpecified(bool value);
    public MonthEnum get_MonthOfYear();
    public void set_MonthOfYear(MonthEnum value);
    public bool get_MonthOfYearSpecified();
    public void set_MonthOfYearSpecified(bool value);
    public int get_RemindDays();
    public void set_RemindDays(int value);
    public bool get_RemindDaysSpecified();
    public void set_RemindDaysSpecified(bool value);
    public int get_DaysBefore();
    public void set_DaysBefore(int value);
    public bool get_DaysBeforeSpecified();
    public void set_DaysBeforeSpecified(bool value);
    public int get_MaxOccurrences();
    public void set_MaxOccurrences(int value);
    public bool get_MaxOccurrencesSpecified();
    public void set_MaxOccurrencesSpecified(bool value);
    public DateTime get_StartDate();
    public void set_StartDate(DateTime value);
    public bool get_StartDateSpecified();
    public void set_StartDateSpecified(bool value);
    public DateTime get_EndDate();
    public void set_EndDate(DateTime value);
    public bool get_EndDateSpecified();
    public void set_EndDateSpecified(bool value);
    public DateTime get_NextDate();
    public void set_NextDate(DateTime value);
    public bool get_NextDateSpecified();
    public void set_NextDateSpecified(bool value);
    public DateTime get_PreviousDate();
    public void set_PreviousDate(DateTime value);
    public bool get_PreviousDateSpecified();
    public void set_PreviousDateSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.RecurringTransaction : IntuitEntity {
    private IntuitEntity itemField;
    [XmlElementAttribute("Account", "Intuit.Ipp.Data.Account")]
[XmlElementAttribute("Attachable", "Intuit.Ipp.Data.Attachable")]
[XmlElementAttribute("Bill", "Intuit.Ipp.Data.Bill")]
[XmlElementAttribute("BillPayment", "Intuit.Ipp.Data.BillPayment")]
[XmlElementAttribute("BooleanTypeCustomFieldDefinition", "Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlElementAttribute("Budget", "Intuit.Ipp.Data.Budget")]
[XmlElementAttribute("ChargeCredit", "Intuit.Ipp.Data.ChargeCredit")]
[XmlElementAttribute("Class", "Intuit.Ipp.Data.Class")]
[XmlElementAttribute("Company", "Intuit.Ipp.Data.Company")]
[XmlElementAttribute("CompanyCurrency", "Intuit.Ipp.Data.CompanyCurrency")]
[XmlElementAttribute("CompanyInfo", "Intuit.Ipp.Data.CompanyInfo")]
[XmlElementAttribute("CreditCardPaymentTxn", "Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlElementAttribute("CreditMemo", "Intuit.Ipp.Data.CreditMemo")]
[XmlElementAttribute("CustomFieldDefinition", "Intuit.Ipp.Data.CustomFieldDefinition")]
[XmlElementAttribute("Customer", "Intuit.Ipp.Data.Customer")]
[XmlElementAttribute("CustomerType", "Intuit.Ipp.Data.CustomerType")]
[XmlElementAttribute("DateTypeCustomFieldDefinition", "Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlElementAttribute("Department", "Intuit.Ipp.Data.Department")]
[XmlElementAttribute("Deposit", "Intuit.Ipp.Data.Deposit")]
[XmlElementAttribute("EmailDeliveryInfo", "Intuit.Ipp.Data.EmailDeliveryInfo")]
[XmlElementAttribute("Employee", "Intuit.Ipp.Data.Employee")]
[XmlElementAttribute("Estimate", "Intuit.Ipp.Data.Estimate")]
[XmlElementAttribute("ExchangeRate", "Intuit.Ipp.Data.ExchangeRate")]
[XmlElementAttribute("FixedAsset", "Intuit.Ipp.Data.FixedAsset")]
[XmlElementAttribute("InventoryAdjustment", "Intuit.Ipp.Data.InventoryAdjustment")]
[XmlElementAttribute("InventorySite", "Intuit.Ipp.Data.InventorySite")]
[XmlElementAttribute("Invoice", "Intuit.Ipp.Data.Invoice")]
[XmlElementAttribute("Item", "Intuit.Ipp.Data.Item")]
[XmlElementAttribute("JournalCode", "Intuit.Ipp.Data.JournalCode")]
[XmlElementAttribute("JournalEntry", "Intuit.Ipp.Data.JournalEntry")]
[XmlElementAttribute("MasterAccount", "Intuit.Ipp.Data.MasterAccount")]
[XmlElementAttribute("NumberTypeCustomFieldDefinition", "Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlElementAttribute("OtherName", "Intuit.Ipp.Data.OtherName")]
[XmlElementAttribute("Payment", "Intuit.Ipp.Data.Payment")]
[XmlElementAttribute("PaymentMethod", "Intuit.Ipp.Data.PaymentMethod")]
[XmlElementAttribute("Preferences", "Intuit.Ipp.Data.Preferences")]
[XmlElementAttribute("PriceLevel", "Intuit.Ipp.Data.PriceLevel")]
[XmlElementAttribute("Purchase", "Intuit.Ipp.Data.Purchase")]
[XmlElementAttribute("PurchaseOrder", "Intuit.Ipp.Data.PurchaseOrder")]
[XmlElementAttribute("QbdtEntityIdMapping", "Intuit.Ipp.Data.QbdtEntityIdMapping")]
[XmlElementAttribute("RecurringTransaction", "Intuit.Ipp.Data.RecurringTransaction")]
[XmlElementAttribute("RefundReceipt", "Intuit.Ipp.Data.RefundReceipt")]
[XmlElementAttribute("ReimburseCharge", "Intuit.Ipp.Data.ReimburseCharge")]
[XmlElementAttribute("SalesOrder", "Intuit.Ipp.Data.SalesOrder")]
[XmlElementAttribute("SalesReceipt", "Intuit.Ipp.Data.SalesReceipt")]
[XmlElementAttribute("SalesRep", "Intuit.Ipp.Data.SalesRep")]
[XmlElementAttribute("StatementCharge", "Intuit.Ipp.Data.StatementCharge")]
[XmlElementAttribute("Status", "Intuit.Ipp.Data.Status")]
[XmlElementAttribute("StringTypeCustomFieldDefinition", "Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[XmlElementAttribute("SyncActivity", "Intuit.Ipp.Data.SyncActivity")]
[XmlElementAttribute("TDSMetadata", "Intuit.Ipp.Data.TDSMetadata")]
[XmlElementAttribute("Tag", "Intuit.Ipp.Data.Tag")]
[XmlElementAttribute("Task", "Intuit.Ipp.Data.Task")]
[XmlElementAttribute("TaxAgency", "Intuit.Ipp.Data.TaxAgency")]
[XmlElementAttribute("TaxClassification", "Intuit.Ipp.Data.TaxClassification")]
[XmlElementAttribute("TaxCode", "Intuit.Ipp.Data.TaxCode")]
[XmlElementAttribute("TaxPayment", "Intuit.Ipp.Data.TaxPayment")]
[XmlElementAttribute("TaxRate", "Intuit.Ipp.Data.TaxRate")]
[XmlElementAttribute("TaxReturn", "Intuit.Ipp.Data.TaxReturn")]
[XmlElementAttribute("TaxService", "Intuit.Ipp.Data.TaxService")]
[XmlElementAttribute("Term", "Intuit.Ipp.Data.Term")]
[XmlElementAttribute("TimeActivity", "Intuit.Ipp.Data.TimeActivity")]
[XmlElementAttribute("Transfer", "Intuit.Ipp.Data.Transfer")]
[XmlElementAttribute("UserAlert", "Intuit.Ipp.Data.UserAlert")]
[XmlElementAttribute("Vendor", "Intuit.Ipp.Data.Vendor")]
[XmlElementAttribute("VendorCredit", "Intuit.Ipp.Data.VendorCredit")]
[XmlElementAttribute("VendorType", "Intuit.Ipp.Data.VendorType")]
public IntuitEntity AnyIntuitObject { get; public set; }
    public IntuitEntity get_AnyIntuitObject();
    public void set_AnyIntuitObject(IntuitEntity value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ReferenceType : object {
    private string nameField;
    private string typeField;
    private string valueField;
    [XmlAttributeAttribute]
public string name { get; public set; }
    [XmlAttributeAttribute]
public string type { get; public set; }
    [XmlTextAttribute]
public string Value { get; public set; }
    public string get_name();
    public void set_name(string value);
    public string get_type();
    public void set_type(string value);
    public string get_Value();
    public void set_Value(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.RefundReceipt : SalesTransaction {
    private decimal remainingCreditField;
    private bool remainingCreditFieldSpecified;
    private IntuitAnyType refundReceiptExField;
    public decimal RemainingCredit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RemainingCreditSpecified { get; public set; }
    public IntuitAnyType RefundReceiptEx { get; public set; }
    public decimal get_RemainingCredit();
    public void set_RemainingCredit(decimal value);
    public bool get_RemainingCreditSpecified();
    public void set_RemainingCreditSpecified(bool value);
    public IntuitAnyType get_RefundReceiptEx();
    public void set_RefundReceiptEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ReimbursableTypeEnum : Enum {
    public int value__;
    public static ReimbursableTypeEnum Billable;
    public static ReimbursableTypeEnum BillableHasBeenBilled;
    public static ReimbursableTypeEnum NotBillable;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ReimburseCharge : Transaction {
    private ReferenceType customerRefField;
    private bool hasBeenInvoicedField;
    private bool hasBeenInvoicedFieldSpecified;
    private decimal amountField;
    private bool amountFieldSpecified;
    private decimal homeTotalAmtField;
    private bool homeTotalAmtFieldSpecified;
    public ReferenceType CustomerRef { get; public set; }
    public bool HasBeenInvoiced { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HasBeenInvoicedSpecified { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public decimal HomeTotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeTotalAmtSpecified { get; public set; }
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public bool get_HasBeenInvoiced();
    public void set_HasBeenInvoiced(bool value);
    public bool get_HasBeenInvoicedSpecified();
    public void set_HasBeenInvoicedSpecified(bool value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public decimal get_HomeTotalAmt();
    public void set_HomeTotalAmt(decimal value);
    public bool get_HomeTotalAmtSpecified();
    public void set_HomeTotalAmtSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ReimburseLineDetail : ItemLineDetail {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Report : object {
    private ReportHeader headerField;
    private Column[] columnsField;
    private Row[] rowsField;
    public ReportHeader Header { get; public set; }
    [XmlArrayItemAttribute]
public Column[] Columns { get; public set; }
    [XmlArrayItemAttribute]
public Row[] Rows { get; public set; }
    public ReportHeader get_Header();
    public void set_Header(ReportHeader value);
    public Column[] get_Columns();
    public void set_Columns(Column[] value);
    public Row[] get_Rows();
    public void set_Rows(Row[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ReportBasisEnum : Enum {
    public int value__;
    public static ReportBasisEnum Accrual;
    public static ReportBasisEnum Cash;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ReportHeader : object {
    private DateTime timeField;
    private bool timeFieldSpecified;
    private string reportNameField;
    private string dateMacroField;
    private ReportBasisEnum reportBasisField;
    private bool reportBasisFieldSpecified;
    private string startPeriodField;
    private string endPeriodField;
    private string summarizeColumnsByField;
    private string currencyField;
    private string customerField;
    private string vendorField;
    private string employeeField;
    private string itemField;
    private string classField;
    private string departmentField;
    private NameValue[] optionField;
    public DateTime Time { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TimeSpecified { get; public set; }
    public string ReportName { get; public set; }
    public string DateMacro { get; public set; }
    public ReportBasisEnum ReportBasis { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReportBasisSpecified { get; public set; }
    public string StartPeriod { get; public set; }
    public string EndPeriod { get; public set; }
    public string SummarizeColumnsBy { get; public set; }
    public string Currency { get; public set; }
    public string Customer { get; public set; }
    public string Vendor { get; public set; }
    public string Employee { get; public set; }
    public string AnyIntuitObject { get; public set; }
    public string Class { get; public set; }
    public string Department { get; public set; }
    [XmlElementAttribute("Option")]
public NameValue[] Option { get; public set; }
    public DateTime get_Time();
    public void set_Time(DateTime value);
    public bool get_TimeSpecified();
    public void set_TimeSpecified(bool value);
    public string get_ReportName();
    public void set_ReportName(string value);
    public string get_DateMacro();
    public void set_DateMacro(string value);
    public ReportBasisEnum get_ReportBasis();
    public void set_ReportBasis(ReportBasisEnum value);
    public bool get_ReportBasisSpecified();
    public void set_ReportBasisSpecified(bool value);
    public string get_StartPeriod();
    public void set_StartPeriod(string value);
    public string get_EndPeriod();
    public void set_EndPeriod(string value);
    public string get_SummarizeColumnsBy();
    public void set_SummarizeColumnsBy(string value);
    public string get_Currency();
    public void set_Currency(string value);
    public string get_Customer();
    public void set_Customer(string value);
    public string get_Vendor();
    public void set_Vendor(string value);
    public string get_Employee();
    public void set_Employee(string value);
    public string get_AnyIntuitObject();
    public void set_AnyIntuitObject(string value);
    public string get_Class();
    public void set_Class(string value);
    public string get_Department();
    public void set_Department(string value);
    public NameValue[] get_Option();
    public void set_Option(NameValue[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ReportPrefs : object {
    private ReportBasisEnum reportBasisField;
    private bool reportBasisFieldSpecified;
    private bool calcAgingReportFromTxnDateField;
    private bool calcAgingReportFromTxnDateFieldSpecified;
    public ReportBasisEnum ReportBasis { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReportBasisSpecified { get; public set; }
    public bool CalcAgingReportFromTxnDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CalcAgingReportFromTxnDateSpecified { get; public set; }
    public ReportBasisEnum get_ReportBasis();
    public void set_ReportBasis(ReportBasisEnum value);
    public bool get_ReportBasisSpecified();
    public void set_ReportBasisSpecified(bool value);
    public bool get_CalcAgingReportFromTxnDate();
    public void set_CalcAgingReportFromTxnDate(bool value);
    public bool get_CalcAgingReportFromTxnDateSpecified();
    public void set_CalcAgingReportFromTxnDateSpecified(bool value);
}
public abstract class Intuit.Ipp.Data.ReportQueryBase : object {
    private DateTime timeField;
    private bool timeFieldSpecified;
    private string reportNameField;
    private bool reportBasisFieldSpecified;
    private string startPeriodField;
    private string endPeriodField;
    private string summarizeColumnsByField;
    private string currencyField;
    private string customerField;
    private string vendorField;
    private string employeeField;
    private string itemField;
    private string classField;
    private string departmentField;
    private NameValue[] optionField;
    private int startPageField;
    private int chunkSizeField;
    private DateTime startTransactionDate;
    private DateTime endTransactionDate;
    private DateMacro dateMacro;
    private ReportBasisEnum reportBasisField;
    public int StartPage { get; public set; }
    public int ChunkSize { get; public set; }
    public DateTime StartTransactionDate { get; public set; }
    public DateTime EndTransactionDate { get; public set; }
    public DateMacro DateMacro { get; public set; }
    public ReportBasisEnum ReportBasis { get; public set; }
    public DateTime TimeField { get; public set; }
    public bool TimeFieldSpecified { get; public set; }
    public string ReportNameField { get; public set; }
    public bool ReportBasisFieldSpecified { get; public set; }
    public string StartPeriodField { get; public set; }
    public string EndPeriodField { get; public set; }
    public string SummarizeColumnsByField { get; public set; }
    public string CurrencyField { get; public set; }
    public string CustomerField { get; public set; }
    public string VendorField { get; public set; }
    public string EmployeeField { get; public set; }
    public string ItemField { get; public set; }
    public string ClassField { get; public set; }
    public string DepartmentField { get; public set; }
    public NameValue[] OptionField { get; public set; }
    public int get_StartPage();
    public void set_StartPage(int value);
    public int get_ChunkSize();
    public void set_ChunkSize(int value);
    public DateTime get_StartTransactionDate();
    public void set_StartTransactionDate(DateTime value);
    public DateTime get_EndTransactionDate();
    public void set_EndTransactionDate(DateTime value);
    public DateMacro get_DateMacro();
    public void set_DateMacro(DateMacro value);
    public ReportBasisEnum get_ReportBasis();
    public void set_ReportBasis(ReportBasisEnum value);
    public DateTime get_TimeField();
    public void set_TimeField(DateTime value);
    public bool get_TimeFieldSpecified();
    public void set_TimeFieldSpecified(bool value);
    public string get_ReportNameField();
    public void set_ReportNameField(string value);
    public bool get_ReportBasisFieldSpecified();
    public void set_ReportBasisFieldSpecified(bool value);
    public string get_StartPeriodField();
    public void set_StartPeriodField(string value);
    public string get_EndPeriodField();
    public void set_EndPeriodField(string value);
    public string get_SummarizeColumnsByField();
    public void set_SummarizeColumnsByField(string value);
    public string get_CurrencyField();
    public void set_CurrencyField(string value);
    public string get_CustomerField();
    public void set_CustomerField(string value);
    public string get_VendorField();
    public void set_VendorField(string value);
    public string get_EmployeeField();
    public void set_EmployeeField(string value);
    public string get_ItemField();
    public void set_ItemField(string value);
    public string get_ClassField();
    public void set_ClassField(string value);
    public string get_DepartmentField();
    public void set_DepartmentField(string value);
    public NameValue[] get_OptionField();
    public void set_OptionField(NameValue[] value);
}
public class Intuit.Ipp.Data.RoleInfo : object {
    [CompilerGeneratedAttribute]
private string <Access>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Access { get; private set; }
    public string AccessId { get; private set; }
    public string Name { get; private set; }
    public string Id { get; private set; }
    private RoleInfo(XmlNode singleRoleNode);
    [CompilerGeneratedAttribute]
public string get_Access();
    [CompilerGeneratedAttribute]
private void set_Access(string value);
    [CompilerGeneratedAttribute]
public string get_AccessId();
    [CompilerGeneratedAttribute]
private void set_AccessId(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public static Collection`1<RoleInfo> ParseRoles(XmlNodeList roleNodes);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.RoundingMethodEnum : Enum {
    public int value__;
    public static RoundingMethodEnum Down;
    public static RoundingMethodEnum Nearest;
    public static RoundingMethodEnum None;
    public static RoundingMethodEnum Up;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Row : object {
    private string idField;
    private string parentIdField;
    private Object[] itemsField;
    private ItemsChoiceType1[] itemsElementNameField;
    private RowTypeEnum typeField;
    private bool typeFieldSpecified;
    private string groupField;
    public string id { get; public set; }
    public string parentId { get; public set; }
    [XmlElementAttribute("ColData", "Intuit.Ipp.Data.ColData")]
[XmlElementAttribute("Header", "Intuit.Ipp.Data.Header")]
[XmlElementAttribute("Rows", "Intuit.Ipp.Data.Rows")]
[XmlElementAttribute("Summary", "Intuit.Ipp.Data.Summary")]
[XmlChoiceIdentifierAttribute("ItemsElementName")]
public Object[] AnyIntuitObjects { get; public set; }
    [XmlElementAttribute("ItemsElementName")]
[XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemsChoiceType1[] ItemsElementName { get; public set; }
    [XmlAttributeAttribute]
public RowTypeEnum type { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool typeSpecified { get; public set; }
    [XmlAttributeAttribute]
public string group { get; public set; }
    public string get_id();
    public void set_id(string value);
    public string get_parentId();
    public void set_parentId(string value);
    public Object[] get_AnyIntuitObjects();
    public void set_AnyIntuitObjects(Object[] value);
    public ItemsChoiceType1[] get_ItemsElementName();
    public void set_ItemsElementName(ItemsChoiceType1[] value);
    public RowTypeEnum get_type();
    public void set_type(RowTypeEnum value);
    public bool get_typeSpecified();
    public void set_typeSpecified(bool value);
    public string get_group();
    public void set_group(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
public class Intuit.Ipp.Data.Rows : object {
    private Row[] rowField;
    [XmlElementAttribute("Row")]
public Row[] Row { get; public set; }
    public Row[] get_Row();
    public void set_Row(Row[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute("Rows")]
public class Intuit.Ipp.Data.Rows1 : object {
    private Row[] rowField;
    [XmlElementAttribute("Row")]
public Row[] Row { get; public set; }
    public Row[] get_Row();
    public void set_Row(Row[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.RowTypeEnum : Enum {
    public int value__;
    public static RowTypeEnum Section;
    public static RowTypeEnum Data;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SalesFormsPrefs : object {
    private bool usingProgressInvoicingField;
    private bool usingProgressInvoicingFieldSpecified;
    private CustomFieldDefinition[] customFieldField;
    private bool customTxnNumbersField;
    private bool customTxnNumbersFieldSpecified;
    private bool delayedChargesField;
    private bool delayedChargesFieldSpecified;
    private EmailAddress salesEmailCcField;
    private EmailAddress salesEmailBccField;
    private bool emailCopyToCompanyField;
    private bool emailCopyToCompanyFieldSpecified;
    private bool allowDepositField;
    private bool allowDepositFieldSpecified;
    private bool allowDiscountField;
    private bool allowDiscountFieldSpecified;
    private string defaultDiscountAccountField;
    private bool allowEstimatesField;
    private bool allowEstimatesFieldSpecified;
    private string estimateMessageField;
    private ETransactionEnabledStatusEnum eTransactionEnabledStatusField;
    private bool eTransactionEnabledStatusFieldSpecified;
    private bool eTransactionAttachPDFField;
    private bool eTransactionAttachPDFFieldSpecified;
    private bool eTransactionPaymentEnabledField;
    private bool eTransactionPaymentEnabledFieldSpecified;
    private bool iPNSupportEnabledField;
    private bool iPNSupportEnabledFieldSpecified;
    private string invoiceMessageField;
    private bool allowServiceDateField;
    private bool allowServiceDateFieldSpecified;
    private bool allowShippingField;
    private bool allowShippingFieldSpecified;
    private string defaultShippingAccountField;
    private ReferenceType defaultItemField;
    private ReferenceType defaultTermsField;
    private string defaultDeliveryMethodField;
    private bool autoApplyCreditField;
    private bool autoApplyCreditFieldSpecified;
    private bool autoApplyPaymentsField;
    private bool autoApplyPaymentsFieldSpecified;
    private bool printItemWithZeroAmountField;
    private bool printItemWithZeroAmountFieldSpecified;
    private ReferenceType defaultShipMethodRefField;
    private decimal defaultMarkupField;
    private bool defaultMarkupFieldSpecified;
    private bool trackReimbursableExpensesAsIncomeField;
    private bool trackReimbursableExpensesAsIncomeFieldSpecified;
    private bool usingSalesOrdersField;
    private bool usingSalesOrdersFieldSpecified;
    private bool usingPriceLevelsField;
    private bool usingPriceLevelsFieldSpecified;
    private string defaultFOBField;
    private string defaultCustomerMessageField;
    public bool UsingProgressInvoicing { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UsingProgressInvoicingSpecified { get; public set; }
    [XmlElementAttribute("CustomField")]
public CustomFieldDefinition[] CustomField { get; public set; }
    public bool CustomTxnNumbers { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CustomTxnNumbersSpecified { get; public set; }
    public bool DelayedCharges { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DelayedChargesSpecified { get; public set; }
    public EmailAddress SalesEmailCc { get; public set; }
    public EmailAddress SalesEmailBcc { get; public set; }
    public bool EmailCopyToCompany { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EmailCopyToCompanySpecified { get; public set; }
    public bool AllowDeposit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowDepositSpecified { get; public set; }
    public bool AllowDiscount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowDiscountSpecified { get; public set; }
    public string DefaultDiscountAccount { get; public set; }
    public bool AllowEstimates { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowEstimatesSpecified { get; public set; }
    public string EstimateMessage { get; public set; }
    public ETransactionEnabledStatusEnum ETransactionEnabledStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ETransactionEnabledStatusSpecified { get; public set; }
    public bool ETransactionAttachPDF { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ETransactionAttachPDFSpecified { get; public set; }
    public bool ETransactionPaymentEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ETransactionPaymentEnabledSpecified { get; public set; }
    public bool IPNSupportEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IPNSupportEnabledSpecified { get; public set; }
    public string InvoiceMessage { get; public set; }
    public bool AllowServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowServiceDateSpecified { get; public set; }
    public bool AllowShipping { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AllowShippingSpecified { get; public set; }
    public string DefaultShippingAccount { get; public set; }
    public ReferenceType DefaultItem { get; public set; }
    public ReferenceType DefaultTerms { get; public set; }
    public string DefaultDeliveryMethod { get; public set; }
    public bool AutoApplyCredit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AutoApplyCreditSpecified { get; public set; }
    public bool AutoApplyPayments { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AutoApplyPaymentsSpecified { get; public set; }
    public bool PrintItemWithZeroAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintItemWithZeroAmountSpecified { get; public set; }
    public ReferenceType DefaultShipMethodRef { get; public set; }
    public decimal DefaultMarkup { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultMarkupSpecified { get; public set; }
    public bool TrackReimbursableExpensesAsIncome { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackReimbursableExpensesAsIncomeSpecified { get; public set; }
    public bool UsingSalesOrders { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UsingSalesOrdersSpecified { get; public set; }
    public bool UsingPriceLevels { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UsingPriceLevelsSpecified { get; public set; }
    public string DefaultFOB { get; public set; }
    public string DefaultCustomerMessage { get; public set; }
    public bool get_UsingProgressInvoicing();
    public void set_UsingProgressInvoicing(bool value);
    public bool get_UsingProgressInvoicingSpecified();
    public void set_UsingProgressInvoicingSpecified(bool value);
    public CustomFieldDefinition[] get_CustomField();
    public void set_CustomField(CustomFieldDefinition[] value);
    public bool get_CustomTxnNumbers();
    public void set_CustomTxnNumbers(bool value);
    public bool get_CustomTxnNumbersSpecified();
    public void set_CustomTxnNumbersSpecified(bool value);
    public bool get_DelayedCharges();
    public void set_DelayedCharges(bool value);
    public bool get_DelayedChargesSpecified();
    public void set_DelayedChargesSpecified(bool value);
    public EmailAddress get_SalesEmailCc();
    public void set_SalesEmailCc(EmailAddress value);
    public EmailAddress get_SalesEmailBcc();
    public void set_SalesEmailBcc(EmailAddress value);
    public bool get_EmailCopyToCompany();
    public void set_EmailCopyToCompany(bool value);
    public bool get_EmailCopyToCompanySpecified();
    public void set_EmailCopyToCompanySpecified(bool value);
    public bool get_AllowDeposit();
    public void set_AllowDeposit(bool value);
    public bool get_AllowDepositSpecified();
    public void set_AllowDepositSpecified(bool value);
    public bool get_AllowDiscount();
    public void set_AllowDiscount(bool value);
    public bool get_AllowDiscountSpecified();
    public void set_AllowDiscountSpecified(bool value);
    public string get_DefaultDiscountAccount();
    public void set_DefaultDiscountAccount(string value);
    public bool get_AllowEstimates();
    public void set_AllowEstimates(bool value);
    public bool get_AllowEstimatesSpecified();
    public void set_AllowEstimatesSpecified(bool value);
    public string get_EstimateMessage();
    public void set_EstimateMessage(string value);
    public ETransactionEnabledStatusEnum get_ETransactionEnabledStatus();
    public void set_ETransactionEnabledStatus(ETransactionEnabledStatusEnum value);
    public bool get_ETransactionEnabledStatusSpecified();
    public void set_ETransactionEnabledStatusSpecified(bool value);
    public bool get_ETransactionAttachPDF();
    public void set_ETransactionAttachPDF(bool value);
    public bool get_ETransactionAttachPDFSpecified();
    public void set_ETransactionAttachPDFSpecified(bool value);
    public bool get_ETransactionPaymentEnabled();
    public void set_ETransactionPaymentEnabled(bool value);
    public bool get_ETransactionPaymentEnabledSpecified();
    public void set_ETransactionPaymentEnabledSpecified(bool value);
    public bool get_IPNSupportEnabled();
    public void set_IPNSupportEnabled(bool value);
    public bool get_IPNSupportEnabledSpecified();
    public void set_IPNSupportEnabledSpecified(bool value);
    public string get_InvoiceMessage();
    public void set_InvoiceMessage(string value);
    public bool get_AllowServiceDate();
    public void set_AllowServiceDate(bool value);
    public bool get_AllowServiceDateSpecified();
    public void set_AllowServiceDateSpecified(bool value);
    public bool get_AllowShipping();
    public void set_AllowShipping(bool value);
    public bool get_AllowShippingSpecified();
    public void set_AllowShippingSpecified(bool value);
    public string get_DefaultShippingAccount();
    public void set_DefaultShippingAccount(string value);
    public ReferenceType get_DefaultItem();
    public void set_DefaultItem(ReferenceType value);
    public ReferenceType get_DefaultTerms();
    public void set_DefaultTerms(ReferenceType value);
    public string get_DefaultDeliveryMethod();
    public void set_DefaultDeliveryMethod(string value);
    public bool get_AutoApplyCredit();
    public void set_AutoApplyCredit(bool value);
    public bool get_AutoApplyCreditSpecified();
    public void set_AutoApplyCreditSpecified(bool value);
    public bool get_AutoApplyPayments();
    public void set_AutoApplyPayments(bool value);
    public bool get_AutoApplyPaymentsSpecified();
    public void set_AutoApplyPaymentsSpecified(bool value);
    public bool get_PrintItemWithZeroAmount();
    public void set_PrintItemWithZeroAmount(bool value);
    public bool get_PrintItemWithZeroAmountSpecified();
    public void set_PrintItemWithZeroAmountSpecified(bool value);
    public ReferenceType get_DefaultShipMethodRef();
    public void set_DefaultShipMethodRef(ReferenceType value);
    public decimal get_DefaultMarkup();
    public void set_DefaultMarkup(decimal value);
    public bool get_DefaultMarkupSpecified();
    public void set_DefaultMarkupSpecified(bool value);
    public bool get_TrackReimbursableExpensesAsIncome();
    public void set_TrackReimbursableExpensesAsIncome(bool value);
    public bool get_TrackReimbursableExpensesAsIncomeSpecified();
    public void set_TrackReimbursableExpensesAsIncomeSpecified(bool value);
    public bool get_UsingSalesOrders();
    public void set_UsingSalesOrders(bool value);
    public bool get_UsingSalesOrdersSpecified();
    public void set_UsingSalesOrdersSpecified(bool value);
    public bool get_UsingPriceLevels();
    public void set_UsingPriceLevels(bool value);
    public bool get_UsingPriceLevelsSpecified();
    public void set_UsingPriceLevelsSpecified(bool value);
    public string get_DefaultFOB();
    public void set_DefaultFOB(string value);
    public string get_DefaultCustomerMessage();
    public void set_DefaultCustomerMessage(string value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesOrderItemLineDetail")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PurchaseOrderItemLineDetail")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SalesItemLineDetail : ItemLineDetail {
    private DateTime serviceDateField;
    private bool serviceDateFieldSpecified;
    private decimal taxInclusiveAmtField;
    private bool taxInclusiveAmtFieldSpecified;
    private decimal discountRateField;
    private bool discountRateFieldSpecified;
    private decimal discountAmtField;
    private bool discountAmtFieldSpecified;
    private bool deferredRevenueField;
    private bool deferredRevenueFieldSpecified;
    private IntuitAnyType salesItemLineDetailExField;
    [XmlElementAttribute]
public DateTime ServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ServiceDateSpecified { get; public set; }
    public decimal TaxInclusiveAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxInclusiveAmtSpecified { get; public set; }
    public decimal DiscountRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DiscountRateSpecified { get; public set; }
    public decimal DiscountAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DiscountAmtSpecified { get; public set; }
    public bool DeferredRevenue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DeferredRevenueSpecified { get; public set; }
    public IntuitAnyType SalesItemLineDetailEx { get; public set; }
    public DateTime get_ServiceDate();
    public void set_ServiceDate(DateTime value);
    public bool get_ServiceDateSpecified();
    public void set_ServiceDateSpecified(bool value);
    public decimal get_TaxInclusiveAmt();
    public void set_TaxInclusiveAmt(decimal value);
    public bool get_TaxInclusiveAmtSpecified();
    public void set_TaxInclusiveAmtSpecified(bool value);
    public decimal get_DiscountRate();
    public void set_DiscountRate(decimal value);
    public bool get_DiscountRateSpecified();
    public void set_DiscountRateSpecified(bool value);
    public decimal get_DiscountAmt();
    public void set_DiscountAmt(decimal value);
    public bool get_DiscountAmtSpecified();
    public void set_DiscountAmtSpecified(bool value);
    public bool get_DeferredRevenue();
    public void set_DeferredRevenue(bool value);
    public bool get_DeferredRevenueSpecified();
    public void set_DeferredRevenueSpecified(bool value);
    public IntuitAnyType get_SalesItemLineDetailEx();
    public void set_SalesItemLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SalesOrder : SalesTransaction {
    private bool manuallyClosedField;
    private bool manuallyClosedFieldSpecified;
    private IntuitAnyType salesOrderExField;
    public bool ManuallyClosed { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ManuallyClosedSpecified { get; public set; }
    public IntuitAnyType SalesOrderEx { get; public set; }
    public bool get_ManuallyClosed();
    public void set_ManuallyClosed(bool value);
    public bool get_ManuallyClosedSpecified();
    public void set_ManuallyClosedSpecified(bool value);
    public IntuitAnyType get_SalesOrderEx();
    public void set_SalesOrderEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SalesOrderItemLineDetail : SalesItemLineDetail {
    private bool manuallyClosedField;
    private bool manuallyClosedFieldSpecified;
    public bool ManuallyClosed { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ManuallyClosedSpecified { get; public set; }
    public bool get_ManuallyClosed();
    public void set_ManuallyClosed(bool value);
    public bool get_ManuallyClosedSpecified();
    public void set_ManuallyClosedSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SalesReceipt : SalesTransaction {
    private IntuitAnyType salesReceiptExField;
    private decimal lessCISField;
    private bool lessCISFieldSpecified;
    public IntuitAnyType SalesReceiptEx { get; public set; }
    public decimal LessCIS { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LessCISSpecified { get; public set; }
    public IntuitAnyType get_SalesReceiptEx();
    public void set_SalesReceiptEx(IntuitAnyType value);
    public decimal get_LessCIS();
    public void set_LessCIS(decimal value);
    public bool get_LessCISSpecified();
    public void set_LessCISSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SalesRep : IntuitEntity {
    private SalesRepTypeEnum nameOfField;
    private bool nameOfFieldSpecified;
    private bool activeField;
    private bool activeFieldSpecified;
    private ReferenceType itemField;
    private ItemChoiceType4 itemElementNameField;
    private string initialsField;
    private IntuitAnyType salesRepExField;
    public SalesRepTypeEnum NameOf { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool NameOfSpecified { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    [XmlElementAttribute("EmployeeRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("OtherNameRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("VendorRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public ReferenceType AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType4 ItemElementName { get; public set; }
    public string Initials { get; public set; }
    public IntuitAnyType SalesRepEx { get; public set; }
    public SalesRepTypeEnum get_NameOf();
    public void set_NameOf(SalesRepTypeEnum value);
    public bool get_NameOfSpecified();
    public void set_NameOfSpecified(bool value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public ReferenceType get_AnyIntuitObject();
    public void set_AnyIntuitObject(ReferenceType value);
    public ItemChoiceType4 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType4 value);
    public string get_Initials();
    public void set_Initials(string value);
    public IntuitAnyType get_SalesRepEx();
    public void set_SalesRepEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SalesRepTypeEnum : Enum {
    public int value__;
    public static SalesRepTypeEnum Employee;
    public static SalesRepTypeEnum Other;
    public static SalesRepTypeEnum Vendor;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SalesTermTypeEnum : Enum {
    public int value__;
    public static SalesTermTypeEnum DateDriven;
    public static SalesTermTypeEnum Standard;
}
[XmlIncludeAttribute("Intuit.Ipp.Data.RefundReceipt")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CreditMemo")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesOrder")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Estimate")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesReceipt")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Invoice")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SalesTransaction : Transaction {
    private bool autoDocNumberField;
    private bool autoDocNumberFieldSpecified;
    private ReferenceType customerRefField;
    private MemoRef customerMemoField;
    private PhysicalAddress billAddrField;
    private PhysicalAddress shipAddrField;
    private bool freeFormAddressField;
    private bool freeFormAddressFieldSpecified;
    private PhysicalAddress shipFromAddrField;
    private ReferenceType remitToRefField;
    private ReferenceType classRefField;
    private ReferenceType salesTermRefField;
    private DateTime dueDateField;
    private bool dueDateFieldSpecified;
    private ReferenceType salesRepRefField;
    private string pONumberField;
    private string fOBField;
    private ReferenceType shipMethodRefField;
    private DateTime shipDateField;
    private bool shipDateFieldSpecified;
    private string trackingNumField;
    private GlobalTaxCalculationEnum globalTaxCalculationField;
    private bool globalTaxCalculationFieldSpecified;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private decimal homeTotalAmtField;
    private bool homeTotalAmtFieldSpecified;
    private bool applyTaxAfterDiscountField;
    private bool applyTaxAfterDiscountFieldSpecified;
    private bool shippingTaxIncludedInTotalTaxField;
    private bool shippingTaxIncludedInTotalTaxFieldSpecified;
    private ReferenceType templateRefField;
    private PrintStatusEnum printStatusField;
    private bool printStatusFieldSpecified;
    private EmailStatusEnum emailStatusField;
    private bool emailStatusFieldSpecified;
    private EmailAddress billEmailField;
    private EmailAddress billEmailCcField;
    private EmailAddress billEmailBccField;
    private ReferenceType aRAccountRefField;
    private decimal balanceField;
    private bool balanceFieldSpecified;
    private decimal homeBalanceField;
    private bool homeBalanceFieldSpecified;
    private bool financeChargeField;
    private bool financeChargeFieldSpecified;
    private ReferenceType paymentMethodRefField;
    private string paymentRefNumField;
    private PaymentTypeEnum paymentTypeField;
    private bool paymentTypeFieldSpecified;
    private object itemField;
    private ReferenceType depositToAccountRefField;
    private TransactionDeliveryInfo deliveryInfoField;
    private decimal discountRateField;
    private bool discountRateFieldSpecified;
    private decimal discountAmtField;
    private bool discountAmtFieldSpecified;
    private string govtTxnRefIdentifierField;
    private ReferenceType taxExemptionRefField;
    public bool AutoDocNumber { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AutoDocNumberSpecified { get; public set; }
    public ReferenceType CustomerRef { get; public set; }
    public MemoRef CustomerMemo { get; public set; }
    public PhysicalAddress BillAddr { get; public set; }
    public PhysicalAddress ShipAddr { get; public set; }
    public bool FreeFormAddress { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FreeFormAddressSpecified { get; public set; }
    public PhysicalAddress ShipFromAddr { get; public set; }
    public ReferenceType RemitToRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType SalesTermRef { get; public set; }
    [XmlElementAttribute]
public DateTime DueDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DueDateSpecified { get; public set; }
    public ReferenceType SalesRepRef { get; public set; }
    public string PONumber { get; public set; }
    public string FOB { get; public set; }
    public ReferenceType ShipMethodRef { get; public set; }
    [XmlElementAttribute]
public DateTime ShipDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ShipDateSpecified { get; public set; }
    public string TrackingNum { get; public set; }
    public GlobalTaxCalculationEnum GlobalTaxCalculation { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool GlobalTaxCalculationSpecified { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public decimal HomeTotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeTotalAmtSpecified { get; public set; }
    public bool ApplyTaxAfterDiscount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ApplyTaxAfterDiscountSpecified { get; public set; }
    public bool ShippingTaxIncludedInTotalTax { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ShippingTaxIncludedInTotalTaxSpecified { get; public set; }
    public ReferenceType TemplateRef { get; public set; }
    public PrintStatusEnum PrintStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PrintStatusSpecified { get; public set; }
    public EmailStatusEnum EmailStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EmailStatusSpecified { get; public set; }
    public EmailAddress BillEmail { get; public set; }
    public EmailAddress BillEmailCc { get; public set; }
    public EmailAddress BillEmailBcc { get; public set; }
    public ReferenceType ARAccountRef { get; public set; }
    public decimal Balance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BalanceSpecified { get; public set; }
    public decimal HomeBalance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeBalanceSpecified { get; public set; }
    public bool FinanceCharge { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FinanceChargeSpecified { get; public set; }
    public ReferenceType PaymentMethodRef { get; public set; }
    public string PaymentRefNum { get; public set; }
    public PaymentTypeEnum PaymentType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PaymentTypeSpecified { get; public set; }
    [XmlElementAttribute("CheckPayment", "Intuit.Ipp.Data.CheckPayment")]
[XmlElementAttribute("CreditCardPayment", "Intuit.Ipp.Data.CreditCardPayment")]
public object AnyIntuitObject { get; public set; }
    public ReferenceType DepositToAccountRef { get; public set; }
    public TransactionDeliveryInfo DeliveryInfo { get; public set; }
    public decimal DiscountRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DiscountRateSpecified { get; public set; }
    public decimal DiscountAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DiscountAmtSpecified { get; public set; }
    public string GovtTxnRefIdentifier { get; public set; }
    public ReferenceType TaxExemptionRef { get; public set; }
    public bool get_AutoDocNumber();
    public void set_AutoDocNumber(bool value);
    public bool get_AutoDocNumberSpecified();
    public void set_AutoDocNumberSpecified(bool value);
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public MemoRef get_CustomerMemo();
    public void set_CustomerMemo(MemoRef value);
    public PhysicalAddress get_BillAddr();
    public void set_BillAddr(PhysicalAddress value);
    public PhysicalAddress get_ShipAddr();
    public void set_ShipAddr(PhysicalAddress value);
    public bool get_FreeFormAddress();
    public void set_FreeFormAddress(bool value);
    public bool get_FreeFormAddressSpecified();
    public void set_FreeFormAddressSpecified(bool value);
    public PhysicalAddress get_ShipFromAddr();
    public void set_ShipFromAddr(PhysicalAddress value);
    public ReferenceType get_RemitToRef();
    public void set_RemitToRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_SalesTermRef();
    public void set_SalesTermRef(ReferenceType value);
    public DateTime get_DueDate();
    public void set_DueDate(DateTime value);
    public bool get_DueDateSpecified();
    public void set_DueDateSpecified(bool value);
    public ReferenceType get_SalesRepRef();
    public void set_SalesRepRef(ReferenceType value);
    public string get_PONumber();
    public void set_PONumber(string value);
    public string get_FOB();
    public void set_FOB(string value);
    public ReferenceType get_ShipMethodRef();
    public void set_ShipMethodRef(ReferenceType value);
    public DateTime get_ShipDate();
    public void set_ShipDate(DateTime value);
    public bool get_ShipDateSpecified();
    public void set_ShipDateSpecified(bool value);
    public string get_TrackingNum();
    public void set_TrackingNum(string value);
    public GlobalTaxCalculationEnum get_GlobalTaxCalculation();
    public void set_GlobalTaxCalculation(GlobalTaxCalculationEnum value);
    public bool get_GlobalTaxCalculationSpecified();
    public void set_GlobalTaxCalculationSpecified(bool value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public decimal get_HomeTotalAmt();
    public void set_HomeTotalAmt(decimal value);
    public bool get_HomeTotalAmtSpecified();
    public void set_HomeTotalAmtSpecified(bool value);
    public bool get_ApplyTaxAfterDiscount();
    public void set_ApplyTaxAfterDiscount(bool value);
    public bool get_ApplyTaxAfterDiscountSpecified();
    public void set_ApplyTaxAfterDiscountSpecified(bool value);
    public bool get_ShippingTaxIncludedInTotalTax();
    public void set_ShippingTaxIncludedInTotalTax(bool value);
    public bool get_ShippingTaxIncludedInTotalTaxSpecified();
    public void set_ShippingTaxIncludedInTotalTaxSpecified(bool value);
    public ReferenceType get_TemplateRef();
    public void set_TemplateRef(ReferenceType value);
    public PrintStatusEnum get_PrintStatus();
    public void set_PrintStatus(PrintStatusEnum value);
    public bool get_PrintStatusSpecified();
    public void set_PrintStatusSpecified(bool value);
    public EmailStatusEnum get_EmailStatus();
    public void set_EmailStatus(EmailStatusEnum value);
    public bool get_EmailStatusSpecified();
    public void set_EmailStatusSpecified(bool value);
    public EmailAddress get_BillEmail();
    public void set_BillEmail(EmailAddress value);
    public EmailAddress get_BillEmailCc();
    public void set_BillEmailCc(EmailAddress value);
    public EmailAddress get_BillEmailBcc();
    public void set_BillEmailBcc(EmailAddress value);
    public ReferenceType get_ARAccountRef();
    public void set_ARAccountRef(ReferenceType value);
    public decimal get_Balance();
    public void set_Balance(decimal value);
    public bool get_BalanceSpecified();
    public void set_BalanceSpecified(bool value);
    public decimal get_HomeBalance();
    public void set_HomeBalance(decimal value);
    public bool get_HomeBalanceSpecified();
    public void set_HomeBalanceSpecified(bool value);
    public bool get_FinanceCharge();
    public void set_FinanceCharge(bool value);
    public bool get_FinanceChargeSpecified();
    public void set_FinanceChargeSpecified(bool value);
    public ReferenceType get_PaymentMethodRef();
    public void set_PaymentMethodRef(ReferenceType value);
    public string get_PaymentRefNum();
    public void set_PaymentRefNum(string value);
    public PaymentTypeEnum get_PaymentType();
    public void set_PaymentType(PaymentTypeEnum value);
    public bool get_PaymentTypeSpecified();
    public void set_PaymentTypeSpecified(bool value);
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
    public ReferenceType get_DepositToAccountRef();
    public void set_DepositToAccountRef(ReferenceType value);
    public TransactionDeliveryInfo get_DeliveryInfo();
    public void set_DeliveryInfo(TransactionDeliveryInfo value);
    public decimal get_DiscountRate();
    public void set_DiscountRate(decimal value);
    public bool get_DiscountRateSpecified();
    public void set_DiscountRateSpecified(bool value);
    public decimal get_DiscountAmt();
    public void set_DiscountAmt(decimal value);
    public bool get_DiscountAmtSpecified();
    public void set_DiscountAmtSpecified(bool value);
    public string get_GovtTxnRefIdentifier();
    public void set_GovtTxnRefIdentifier(string value);
    public ReferenceType get_TaxExemptionRef();
    public void set_TaxExemptionRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.ServiceTypeEnum : Enum {
    public int value__;
    public static ServiceTypeEnum ADVT;
    public static ServiceTypeEnum AIRPORTSERVICES;
    public static ServiceTypeEnum AIRTRANSPORT;
    public static ServiceTypeEnum AIRTRVLAGNT;
    public static ServiceTypeEnum ARCHITECT;
    public static ServiceTypeEnum ASSTMGMT;
    public static ServiceTypeEnum ATMMAINTENANCE;
    public static ServiceTypeEnum AUCTIONSERV;
    public static ServiceTypeEnum AUTHSERST;
    public static ServiceTypeEnum BANKANDFIN;
    public static ServiceTypeEnum BEAUTYPARLOR;
    public static ServiceTypeEnum BROADCAST;
    public static ServiceTypeEnum BUSINESSAUX;
    public static ServiceTypeEnum BUSINESSEXHIBITION;
    public static ServiceTypeEnum BUSINESSSUPPORTSERV;
    public static ServiceTypeEnum CA;
    public static ServiceTypeEnum CABLEOPTR;
    public static ServiceTypeEnum CARGOHAND;
    public static ServiceTypeEnum CLEANINGSERV;
    public static ServiceTypeEnum CLEARANDFORW;
    public static ServiceTypeEnum CLUBSANDASSSERVICE;
    public static ServiceTypeEnum COMMCOACHORTRAINING;
    public static ServiceTypeEnum CONSENG;
    public static ServiceTypeEnum CONSTRCOMMERCIALCOMPLEX;
    public static ServiceTypeEnum CONTAINERRAILTRANS;
    public static ServiceTypeEnum CONVSERV;
    public static ServiceTypeEnum COSTACC;
    public static ServiceTypeEnum COURIER;
    public static ServiceTypeEnum CREDITCARD;
    public static ServiceTypeEnum CREDITRATAGNCY;
    public static ServiceTypeEnum CRUISESHIPTOUR;
    public static ServiceTypeEnum CS;
    public static ServiceTypeEnum CUSHOUSEAG;
    public static ServiceTypeEnum DESIGNSERV;
    public static ServiceTypeEnum DEVELOPSUPPLYCONTENT;
    public static ServiceTypeEnum DREDGING;
    public static ServiceTypeEnum DRYCLEANING;
    public static ServiceTypeEnum ERECTIONCOMMORINSTALL;
    public static ServiceTypeEnum EVENTMGMT;
    public static ServiceTypeEnum FASHIONDES;
    public static ServiceTypeEnum FOREXBROKING;
    public static ServiceTypeEnum FORWARDCONTRACT;
    public static ServiceTypeEnum FRANCHISESERV;
    public static ServiceTypeEnum GENERALINSURANCE;
    public static ServiceTypeEnum GOODSTRANSPORT;
    public static ServiceTypeEnum HEALTHCLUBANDFITNESS;
    public static ServiceTypeEnum INFORMATIONSERV;
    public static ServiceTypeEnum INSURAUX;
    public static ServiceTypeEnum INTDEC;
    public static ServiceTypeEnum INTELLECTUALPROPERTY;
    public static ServiceTypeEnum INTERNATIONALAIRTRAVEL;
    public static ServiceTypeEnum INTERNETCAFE;
    public static ServiceTypeEnum INTERNETTELEPHONY;
    public static ServiceTypeEnum LIFEINS;
    public static ServiceTypeEnum MAILLISTCOMPILE;
    public static ServiceTypeEnum MANDAPKEEPER;
    public static ServiceTypeEnum MANPWRRECRUIT;
    public static ServiceTypeEnum MGMTCONSUL;
    public static ServiceTypeEnum MGMTMAINTREPAIR;
    public static ServiceTypeEnum MININGOIL;
    public static ServiceTypeEnum MKTRESAGNCY;
    public static ServiceTypeEnum ONLINEINFORMRETRIEVAL;
    public static ServiceTypeEnum OPINIONPOLL;
    public static ServiceTypeEnum OUTDOORCATERING;
    public static ServiceTypeEnum PACKAGINGSERV;
    public static ServiceTypeEnum PANDALSHAMIANA;
    public static ServiceTypeEnum PHOTOGRAPHY;
    public static ServiceTypeEnum PORT;
    public static ServiceTypeEnum PORTSER;
    public static ServiceTypeEnum PROCESSCLEARHOUSE;
    public static ServiceTypeEnum PUBLICRELATIONMGMT;
    public static ServiceTypeEnum RAILTRAVELAGNT;
    public static ServiceTypeEnum REALESTAGT;
    public static ServiceTypeEnum RECOVERYAGENTS;
    public static ServiceTypeEnum REGISTRARSERV;
    public static ServiceTypeEnum RENTACAB;
    public static ServiceTypeEnum RENTINGIMMOVABLEPROP;
    public static ServiceTypeEnum RESIDENTIALCOMPLEXCONST;
    public static ServiceTypeEnum SALEOFSPACEFORADVT;
    public static ServiceTypeEnum SCANDTECHCONSUL;
    public static ServiceTypeEnum SECAG;
    public static ServiceTypeEnum SERVICESPROVIDEDFORTRANSACTION;
    public static ServiceTypeEnum SHARETRANSFERSERV;
    public static ServiceTypeEnum SHIPMGMT;
    public static ServiceTypeEnum SITEPREP;
    public static ServiceTypeEnum SOUNDRECORD;
    public static ServiceTypeEnum SPONSORSHIP;
    public static ServiceTypeEnum STAG;
    public static ServiceTypeEnum STOCKBROKING;
    public static ServiceTypeEnum STOCKEXCHGSERV;
    public static ServiceTypeEnum STORANDWAREHOUSING;
    public static ServiceTypeEnum SUPPLYTANGIBLEGOODS;
    public static ServiceTypeEnum SURVEYANDMAPMAKING;
    public static ServiceTypeEnum SURVEYMINERALS;
    public static ServiceTypeEnum TECHINSPECTION;
    public static ServiceTypeEnum TECHTESTING;
    public static ServiceTypeEnum TELECOMMUNICATIONSERV;
    public static ServiceTypeEnum TELEVISIONANDRADIO;
    public static ServiceTypeEnum TOUROP;
    public static ServiceTypeEnum TRANSPORTPIPELINE;
    public static ServiceTypeEnum TRAVELAGENT;
    public static ServiceTypeEnum ULIPMANAGEMENT;
    public static ServiceTypeEnum UNDERWRITER;
    public static ServiceTypeEnum VIDEOTAPEPROD;
    public static ServiceTypeEnum WORKSCONTRACT;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.ShipMethod : IntuitEntity {
    private string nameField;
    private bool activeField;
    private IntuitAnyType shipMethodExField;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    public IntuitAnyType ShipMethodEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public IntuitAnyType get_ShipMethodEx();
    public void set_ShipMethodEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SourceTypeEnum : Enum {
    public int value__;
    public static SourceTypeEnum QBCommerce;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SpecialItemTypeEnum : Enum {
    public int value__;
    public static SpecialItemTypeEnum FinanceCharge;
    public static SpecialItemTypeEnum ReimbursableExpenseGroup;
    public static SpecialItemTypeEnum ReimbursableExpenseSubtotal;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SpecialTaxTypeEnum : Enum {
    public int value__;
    public static SpecialTaxTypeEnum NONE;
    public static SpecialTaxTypeEnum ZERO_RATE;
    public static SpecialTaxTypeEnum FOREIGN_TAX;
    public static SpecialTaxTypeEnum REVERSE_CHARGE;
    public static SpecialTaxTypeEnum ADJUSTMENT_RATE;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.StatementCharge : Transaction {
    private bool creditField;
    private bool creditFieldSpecified;
    private ReferenceType customerRefField;
    private ReferenceType remitToRefField;
    private ReferenceType aRAccountRefField;
    private ReferenceType classRefField;
    private DateTime dueDateField;
    private bool dueDateFieldSpecified;
    private DateTime billedDateField;
    private bool billedDateFieldSpecified;
    private decimal totalAmtField;
    private bool totalAmtFieldSpecified;
    private IntuitAnyType statementChargeExField;
    public bool Credit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CreditSpecified { get; public set; }
    public ReferenceType CustomerRef { get; public set; }
    public ReferenceType RemitToRef { get; public set; }
    public ReferenceType ARAccountRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    [XmlElementAttribute]
public DateTime DueDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DueDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime BilledDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BilledDateSpecified { get; public set; }
    public decimal TotalAmt { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalAmtSpecified { get; public set; }
    public IntuitAnyType StatementChargeEx { get; public set; }
    public bool get_Credit();
    public void set_Credit(bool value);
    public bool get_CreditSpecified();
    public void set_CreditSpecified(bool value);
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public ReferenceType get_RemitToRef();
    public void set_RemitToRef(ReferenceType value);
    public ReferenceType get_ARAccountRef();
    public void set_ARAccountRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public DateTime get_DueDate();
    public void set_DueDate(DateTime value);
    public bool get_DueDateSpecified();
    public void set_DueDateSpecified(bool value);
    public DateTime get_BilledDate();
    public void set_BilledDate(DateTime value);
    public bool get_BilledDateSpecified();
    public void set_BilledDateSpecified(bool value);
    public decimal get_TotalAmt();
    public void set_TotalAmt(decimal value);
    public bool get_TotalAmtSpecified();
    public void set_TotalAmtSpecified(bool value);
    public IntuitAnyType get_StatementChargeEx();
    public void set_StatementChargeEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Status : IntuitEntity {
    private string requestIdField;
    private string batchIdField;
    private string objectTypeField;
    private string stateCodeField;
    private string stateDescField;
    private string messageCodeField;
    private string messageDescField;
    public string RequestId { get; public set; }
    public string BatchId { get; public set; }
    public string ObjectType { get; public set; }
    public string StateCode { get; public set; }
    public string StateDesc { get; public set; }
    public string MessageCode { get; public set; }
    public string MessageDesc { get; public set; }
    public string get_RequestId();
    public void set_RequestId(string value);
    public string get_BatchId();
    public void set_BatchId(string value);
    public string get_ObjectType();
    public void set_ObjectType(string value);
    public string get_StateCode();
    public void set_StateCode(string value);
    public string get_StateDesc();
    public void set_StateDesc(string value);
    public string get_MessageCode();
    public void set_MessageCode(string value);
    public string get_MessageDesc();
    public void set_MessageDesc(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.StatusInfo : object {
    private string statusField;
    private DateTime statusDateField;
    private bool statusDateFieldSpecified;
    private string callToActionField;
    public string status { get; public set; }
    [XmlElementAttribute]
public DateTime statusDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool statusDateSpecified { get; public set; }
    public string callToAction { get; public set; }
    public string get_status();
    public void set_status(string value);
    public DateTime get_statusDate();
    public void set_statusDate(DateTime value);
    public bool get_statusDateSpecified();
    public void set_statusDateSpecified(bool value);
    public string get_callToAction();
    public void set_callToAction(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.StringTypeCustomFieldDefinition : CustomFieldDefinition {
    private string defaultStringField;
    private string regularExpressionField;
    private int maxLengthField;
    private bool maxLengthFieldSpecified;
    public string DefaultString { get; public set; }
    public string RegularExpression { get; public set; }
    public int MaxLength { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MaxLengthSpecified { get; public set; }
    public string get_DefaultString();
    public void set_DefaultString(string value);
    public string get_RegularExpression();
    public void set_RegularExpression(string value);
    public int get_MaxLength();
    public void set_MaxLength(int value);
    public bool get_MaxLengthSpecified();
    public void set_MaxLengthSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SubcontractorTypeEnum : Enum {
    public int value__;
    public static SubcontractorTypeEnum Individual;
    public static SubcontractorTypeEnum Company;
    public static SubcontractorTypeEnum Partnership;
    public static SubcontractorTypeEnum Trust;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SubscriptionPaymentsSettingEnum : Enum {
    public int value__;
    public static SubscriptionPaymentsSettingEnum SALE_TERM;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SubTotalLineDetail : object {
    private ReferenceType itemRefField;
    private DateTime serviceDateField;
    private bool serviceDateFieldSpecified;
    public ReferenceType ItemRef { get; public set; }
    [XmlElementAttribute]
public DateTime ServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ServiceDateSpecified { get; public set; }
    public ReferenceType get_ItemRef();
    public void set_ItemRef(ReferenceType value);
    public DateTime get_ServiceDate();
    public void set_ServiceDate(DateTime value);
    public bool get_ServiceDateSpecified();
    public void set_ServiceDateSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SummarizeColumnsByEnum : Enum {
    public int value__;
    public static SummarizeColumnsByEnum Total;
    public static SummarizeColumnsByEnum Year;
    public static SummarizeColumnsByEnum Quarter;
    public static SummarizeColumnsByEnum FiscalYear;
    public static SummarizeColumnsByEnum FiscalQuarter;
    public static SummarizeColumnsByEnum Month;
    public static SummarizeColumnsByEnum Week;
    public static SummarizeColumnsByEnum Days;
    public static SummarizeColumnsByEnum Customers;
    public static SummarizeColumnsByEnum Vendors;
    public static SummarizeColumnsByEnum Employees;
    public static SummarizeColumnsByEnum Departments;
    public static SummarizeColumnsByEnum Classes;
    public static SummarizeColumnsByEnum ProductsAndServices;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Summary : object {
    private ColData[] colDataField;
    [XmlElementAttribute("ColData")]
public ColData[] ColData { get; public set; }
    public ColData[] get_ColData();
    public void set_ColData(ColData[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SymbolPositionEnum : Enum {
    public int value__;
    public static SymbolPositionEnum Leading;
    public static SymbolPositionEnum Trailing;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SyncActivity : IntuitEntity {
    private DateTime latestUploadDateTimeField;
    private bool latestUploadDateTimeFieldSpecified;
    private DateTime latestWriteBackDateTimeField;
    private bool latestWriteBackDateTimeFieldSpecified;
    private SyncType syncTypeField;
    private bool syncTypeFieldSpecified;
    private DateTime startSyncTMSField;
    private bool startSyncTMSFieldSpecified;
    private DateTime endSyncTMSField;
    private bool endSyncTMSFieldSpecified;
    private string entityNameField;
    private int entityRowCountField;
    private bool entityRowCountFieldSpecified;
    public DateTime LatestUploadDateTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LatestUploadDateTimeSpecified { get; public set; }
    public DateTime LatestWriteBackDateTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LatestWriteBackDateTimeSpecified { get; public set; }
    public SyncType SyncType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SyncTypeSpecified { get; public set; }
    public DateTime StartSyncTMS { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StartSyncTMSSpecified { get; public set; }
    public DateTime EndSyncTMS { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EndSyncTMSSpecified { get; public set; }
    public string EntityName { get; public set; }
    public int EntityRowCount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EntityRowCountSpecified { get; public set; }
    public DateTime get_LatestUploadDateTime();
    public void set_LatestUploadDateTime(DateTime value);
    public bool get_LatestUploadDateTimeSpecified();
    public void set_LatestUploadDateTimeSpecified(bool value);
    public DateTime get_LatestWriteBackDateTime();
    public void set_LatestWriteBackDateTime(DateTime value);
    public bool get_LatestWriteBackDateTimeSpecified();
    public void set_LatestWriteBackDateTimeSpecified(bool value);
    public SyncType get_SyncType();
    public void set_SyncType(SyncType value);
    public bool get_SyncTypeSpecified();
    public void set_SyncTypeSpecified(bool value);
    public DateTime get_StartSyncTMS();
    public void set_StartSyncTMS(DateTime value);
    public bool get_StartSyncTMSSpecified();
    public void set_StartSyncTMSSpecified(bool value);
    public DateTime get_EndSyncTMS();
    public void set_EndSyncTMS(DateTime value);
    public bool get_EndSyncTMSSpecified();
    public void set_EndSyncTMSSpecified(bool value);
    public string get_EntityName();
    public void set_EntityName(string value);
    public int get_EntityRowCount();
    public void set_EntityRowCount(int value);
    public bool get_EntityRowCountSpecified();
    public void set_EntityRowCountSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SyncError : object {
    private Error errorField;
    private SyncObject cloudVersionField;
    private SyncObject qBVersionField;
    private string typeField;
    private string appTokenField;
    public Error Error { get; public set; }
    public SyncObject CloudVersion { get; public set; }
    public SyncObject QBVersion { get; public set; }
    [XmlAttributeAttribute]
public string Type { get; public set; }
    [XmlAttributeAttribute]
public string AppToken { get; public set; }
    public Error get_Error();
    public void set_Error(Error value);
    public SyncObject get_CloudVersion();
    public void set_CloudVersion(SyncObject value);
    public SyncObject get_QBVersion();
    public void set_QBVersion(SyncObject value);
    public string get_Type();
    public void set_Type(string value);
    public string get_AppToken();
    public void set_AppToken(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SyncErrorResponse : object {
    private SyncError[] syncErrorField;
    private DateTime latestUploadTimeField;
    private bool latestUploadTimeFieldSpecified;
    private int startPositionField;
    private bool startPositionFieldSpecified;
    private int maxResultsField;
    private bool maxResultsFieldSpecified;
    private int totalCountField;
    private bool totalCountFieldSpecified;
    [XmlElementAttribute("SyncError")]
public SyncError[] SyncError { get; public set; }
    [XmlAttributeAttribute]
public DateTime latestUploadTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool latestUploadTimeSpecified { get; public set; }
    [XmlAttributeAttribute]
public int startPosition { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool startPositionSpecified { get; public set; }
    [XmlAttributeAttribute]
public int maxResults { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool maxResultsSpecified { get; public set; }
    [XmlAttributeAttribute]
public int totalCount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool totalCountSpecified { get; public set; }
    public SyncError[] get_SyncError();
    public void set_SyncError(SyncError[] value);
    public DateTime get_latestUploadTime();
    public void set_latestUploadTime(DateTime value);
    public bool get_latestUploadTimeSpecified();
    public void set_latestUploadTimeSpecified(bool value);
    public int get_startPosition();
    public void set_startPosition(int value);
    public bool get_startPositionSpecified();
    public void set_startPositionSpecified(bool value);
    public int get_maxResults();
    public void set_maxResults(int value);
    public bool get_maxResultsSpecified();
    public void set_maxResultsSpecified(bool value);
    public int get_totalCount();
    public void set_totalCount(int value);
    public bool get_totalCountSpecified();
    public void set_totalCountSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SyncErrorType : Enum {
    public int value__;
    public static SyncErrorType OutOfSync;
    public static SyncErrorType BusinessLogic;
    public static SyncErrorType SystemError;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.SyncObject : object {
    private object itemField;
    [XmlElementAttribute("Account", "Intuit.Ipp.Data.Account")]
[XmlElementAttribute("Attachable", "Intuit.Ipp.Data.Attachable")]
[XmlElementAttribute("Bill", "Intuit.Ipp.Data.Bill")]
[XmlElementAttribute("BillPayment", "Intuit.Ipp.Data.BillPayment")]
[XmlElementAttribute("BooleanTypeCustomFieldDefinition", "Intuit.Ipp.Data.BooleanTypeCustomFieldDefinition")]
[XmlElementAttribute("Budget", "Intuit.Ipp.Data.Budget")]
[XmlElementAttribute("ChargeCredit", "Intuit.Ipp.Data.ChargeCredit")]
[XmlElementAttribute("Class", "Intuit.Ipp.Data.Class")]
[XmlElementAttribute("Company", "Intuit.Ipp.Data.Company")]
[XmlElementAttribute("CompanyCurrency", "Intuit.Ipp.Data.CompanyCurrency")]
[XmlElementAttribute("CompanyInfo", "Intuit.Ipp.Data.CompanyInfo")]
[XmlElementAttribute("CreditCardPaymentTxn", "Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlElementAttribute("CreditMemo", "Intuit.Ipp.Data.CreditMemo")]
[XmlElementAttribute("CustomFieldDefinition", "Intuit.Ipp.Data.CustomFieldDefinition")]
[XmlElementAttribute("Customer", "Intuit.Ipp.Data.Customer")]
[XmlElementAttribute("CustomerType", "Intuit.Ipp.Data.CustomerType")]
[XmlElementAttribute("DateTypeCustomFieldDefinition", "Intuit.Ipp.Data.DateTypeCustomFieldDefinition")]
[XmlElementAttribute("Department", "Intuit.Ipp.Data.Department")]
[XmlElementAttribute("Deposit", "Intuit.Ipp.Data.Deposit")]
[XmlElementAttribute("EmailDeliveryInfo", "Intuit.Ipp.Data.EmailDeliveryInfo")]
[XmlElementAttribute("Employee", "Intuit.Ipp.Data.Employee")]
[XmlElementAttribute("Estimate", "Intuit.Ipp.Data.Estimate")]
[XmlElementAttribute("ExchangeRate", "Intuit.Ipp.Data.ExchangeRate")]
[XmlElementAttribute("Fault", "Intuit.Ipp.Data.Fault")]
[XmlElementAttribute("FixedAsset", "Intuit.Ipp.Data.FixedAsset")]
[XmlElementAttribute("IntuitObject", "Intuit.Ipp.Data.IntuitEntity")]
[XmlElementAttribute("InventoryAdjustment", "Intuit.Ipp.Data.InventoryAdjustment")]
[XmlElementAttribute("InventorySite", "Intuit.Ipp.Data.InventorySite")]
[XmlElementAttribute("Invoice", "Intuit.Ipp.Data.Invoice")]
[XmlElementAttribute("Item", "Intuit.Ipp.Data.Item")]
[XmlElementAttribute("JournalCode", "Intuit.Ipp.Data.JournalCode")]
[XmlElementAttribute("JournalEntry", "Intuit.Ipp.Data.JournalEntry")]
[XmlElementAttribute("MasterAccount", "Intuit.Ipp.Data.MasterAccount")]
[XmlElementAttribute("NumberTypeCustomFieldDefinition", "Intuit.Ipp.Data.NumberTypeCustomFieldDefinition")]
[XmlElementAttribute("OtherName", "Intuit.Ipp.Data.OtherName")]
[XmlElementAttribute("Payment", "Intuit.Ipp.Data.Payment")]
[XmlElementAttribute("PaymentMethod", "Intuit.Ipp.Data.PaymentMethod")]
[XmlElementAttribute("Preferences", "Intuit.Ipp.Data.Preferences")]
[XmlElementAttribute("PriceLevel", "Intuit.Ipp.Data.PriceLevel")]
[XmlElementAttribute("Purchase", "Intuit.Ipp.Data.Purchase")]
[XmlElementAttribute("PurchaseOrder", "Intuit.Ipp.Data.PurchaseOrder")]
[XmlElementAttribute("QbdtEntityIdMapping", "Intuit.Ipp.Data.QbdtEntityIdMapping")]
[XmlElementAttribute("RecurringTransaction", "Intuit.Ipp.Data.RecurringTransaction")]
[XmlElementAttribute("RefundReceipt", "Intuit.Ipp.Data.RefundReceipt")]
[XmlElementAttribute("ReimburseCharge", "Intuit.Ipp.Data.ReimburseCharge")]
[XmlElementAttribute("SalesOrder", "Intuit.Ipp.Data.SalesOrder")]
[XmlElementAttribute("SalesReceipt", "Intuit.Ipp.Data.SalesReceipt")]
[XmlElementAttribute("SalesRep", "Intuit.Ipp.Data.SalesRep")]
[XmlElementAttribute("StatementCharge", "Intuit.Ipp.Data.StatementCharge")]
[XmlElementAttribute("Status", "Intuit.Ipp.Data.Status")]
[XmlElementAttribute("StringTypeCustomFieldDefinition", "Intuit.Ipp.Data.StringTypeCustomFieldDefinition")]
[XmlElementAttribute("SyncActivity", "Intuit.Ipp.Data.SyncActivity")]
[XmlElementAttribute("TDSMetadata", "Intuit.Ipp.Data.TDSMetadata")]
[XmlElementAttribute("Tag", "Intuit.Ipp.Data.Tag")]
[XmlElementAttribute("Task", "Intuit.Ipp.Data.Task")]
[XmlElementAttribute("TaxAgency", "Intuit.Ipp.Data.TaxAgency")]
[XmlElementAttribute("TaxClassification", "Intuit.Ipp.Data.TaxClassification")]
[XmlElementAttribute("TaxCode", "Intuit.Ipp.Data.TaxCode")]
[XmlElementAttribute("TaxPayment", "Intuit.Ipp.Data.TaxPayment")]
[XmlElementAttribute("TaxRate", "Intuit.Ipp.Data.TaxRate")]
[XmlElementAttribute("TaxReturn", "Intuit.Ipp.Data.TaxReturn")]
[XmlElementAttribute("TaxService", "Intuit.Ipp.Data.TaxService")]
[XmlElementAttribute("Term", "Intuit.Ipp.Data.Term")]
[XmlElementAttribute("TimeActivity", "Intuit.Ipp.Data.TimeActivity")]
[XmlElementAttribute("Transfer", "Intuit.Ipp.Data.Transfer")]
[XmlElementAttribute("UserAlert", "Intuit.Ipp.Data.UserAlert")]
[XmlElementAttribute("Vendor", "Intuit.Ipp.Data.Vendor")]
[XmlElementAttribute("VendorCredit", "Intuit.Ipp.Data.VendorCredit")]
[XmlElementAttribute("VendorType", "Intuit.Ipp.Data.VendorType")]
public object AnyIntuitObject { get; public set; }
    public object get_AnyIntuitObject();
    public void set_AnyIntuitObject(object value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.SyncType : Enum {
    public int value__;
    public static SyncType Upload;
    public static SyncType Writeback;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Tag : IntuitEntity {
    private string nameField;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Task : IntuitEntity {
    private string notesField;
    private string fromField;
    private bool activeField;
    private bool activeFieldSpecified;
    private bool doneField;
    private bool doneFieldSpecified;
    private DateTime reminderDateField;
    private bool reminderDateFieldSpecified;
    private IntuitAnyType taskExField;
    public string Notes { get; public set; }
    public string From { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public bool Done { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DoneSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime ReminderDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReminderDateSpecified { get; public set; }
    public IntuitAnyType TaskEx { get; public set; }
    public string get_Notes();
    public void set_Notes(string value);
    public string get_From();
    public void set_From(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public bool get_Done();
    public void set_Done(bool value);
    public bool get_DoneSpecified();
    public void set_DoneSpecified(bool value);
    public DateTime get_ReminderDate();
    public void set_ReminderDate(DateTime value);
    public bool get_ReminderDateSpecified();
    public void set_ReminderDateSpecified(bool value);
    public IntuitAnyType get_TaskEx();
    public void set_TaskEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxAgency : Vendor {
    private ReferenceType salesTaxCodeRefField;
    private string salesTaxCountryField;
    private ReferenceType salesTaxReturnRefField;
    private string taxRegistrationNumberField;
    private string reportingPeriodField;
    private bool taxTrackedOnPurchasesField;
    private bool taxTrackedOnPurchasesFieldSpecified;
    private ReferenceType taxOnPurchasesAccountRefField;
    private bool taxTrackedOnSalesField;
    private bool taxTrackedOnSalesFieldSpecified;
    private ReferenceType taxTrackedOnSalesAccountRefField;
    private bool taxOnTaxField;
    private bool taxOnTaxFieldSpecified;
    private DateTime lastFileDateField;
    private bool lastFileDateFieldSpecified;
    private IntuitAnyType taxAgencyExtField;
    private string taxAgencyConfigField;
    public ReferenceType SalesTaxCodeRef { get; public set; }
    public string SalesTaxCountry { get; public set; }
    public ReferenceType SalesTaxReturnRef { get; public set; }
    public string TaxRegistrationNumber { get; public set; }
    public string ReportingPeriod { get; public set; }
    public bool TaxTrackedOnPurchases { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxTrackedOnPurchasesSpecified { get; public set; }
    public ReferenceType TaxOnPurchasesAccountRef { get; public set; }
    public bool TaxTrackedOnSales { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxTrackedOnSalesSpecified { get; public set; }
    public ReferenceType TaxTrackedOnSalesAccountRef { get; public set; }
    public bool TaxOnTax { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxOnTaxSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime LastFileDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastFileDateSpecified { get; public set; }
    public IntuitAnyType TaxAgencyExt { get; public set; }
    public string TaxAgencyConfig { get; public set; }
    public ReferenceType get_SalesTaxCodeRef();
    public void set_SalesTaxCodeRef(ReferenceType value);
    public string get_SalesTaxCountry();
    public void set_SalesTaxCountry(string value);
    public ReferenceType get_SalesTaxReturnRef();
    public void set_SalesTaxReturnRef(ReferenceType value);
    public string get_TaxRegistrationNumber();
    public void set_TaxRegistrationNumber(string value);
    public string get_ReportingPeriod();
    public void set_ReportingPeriod(string value);
    public bool get_TaxTrackedOnPurchases();
    public void set_TaxTrackedOnPurchases(bool value);
    public bool get_TaxTrackedOnPurchasesSpecified();
    public void set_TaxTrackedOnPurchasesSpecified(bool value);
    public ReferenceType get_TaxOnPurchasesAccountRef();
    public void set_TaxOnPurchasesAccountRef(ReferenceType value);
    public bool get_TaxTrackedOnSales();
    public void set_TaxTrackedOnSales(bool value);
    public bool get_TaxTrackedOnSalesSpecified();
    public void set_TaxTrackedOnSalesSpecified(bool value);
    public ReferenceType get_TaxTrackedOnSalesAccountRef();
    public void set_TaxTrackedOnSalesAccountRef(ReferenceType value);
    public bool get_TaxOnTax();
    public void set_TaxOnTax(bool value);
    public bool get_TaxOnTaxSpecified();
    public void set_TaxOnTaxSpecified(bool value);
    public DateTime get_LastFileDate();
    public void set_LastFileDate(DateTime value);
    public bool get_LastFileDateSpecified();
    public void set_LastFileDateSpecified(bool value);
    public IntuitAnyType get_TaxAgencyExt();
    public void set_TaxAgencyExt(IntuitAnyType value);
    public string get_TaxAgencyConfig();
    public void set_TaxAgencyConfig(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxApplicableOnEnum : Enum {
    public int value__;
    public static TaxApplicableOnEnum Purchase;
    public static TaxApplicableOnEnum Sales;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxClassification : IntuitEntity {
    private string codeField;
    private string nameField;
    private string descriptionField;
    private string levelField;
    private ReferenceType parentRefField;
    private ItemTypeEnum[] applicableToField;
    public string Code { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string Level { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    [XmlElementAttribute("ApplicableTo")]
public ItemTypeEnum[] ApplicableTo { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_Level();
    public void set_Level(string value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public ItemTypeEnum[] get_ApplicableTo();
    public void set_ApplicableTo(ItemTypeEnum[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxCode : IntuitEntity {
    private string nameField;
    private string descriptionField;
    private bool activeField;
    private bool activeFieldSpecified;
    private bool hiddenField;
    private bool hiddenFieldSpecified;
    private bool taxableField;
    private bool taxableFieldSpecified;
    private bool taxGroupField;
    private bool taxGroupFieldSpecified;
    private TaxRateList salesTaxRateListField;
    private TaxRateList purchaseTaxRateListField;
    private TaxRateList adjustmentTaxRateListField;
    private IntuitAnyType taxCodeExField;
    private GTMConfigTypeEnum taxCodeConfigTypeField;
    private bool taxCodeConfigTypeFieldSpecified;
    public string Name { get; public set; }
    public string Description { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public bool Hidden { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HiddenSpecified { get; public set; }
    public bool Taxable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxableSpecified { get; public set; }
    public bool TaxGroup { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxGroupSpecified { get; public set; }
    public TaxRateList SalesTaxRateList { get; public set; }
    public TaxRateList PurchaseTaxRateList { get; public set; }
    public TaxRateList AdjustmentTaxRateList { get; public set; }
    public IntuitAnyType TaxCodeEx { get; public set; }
    public GTMConfigTypeEnum TaxCodeConfigType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxCodeConfigTypeSpecified { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public bool get_HiddenSpecified();
    public void set_HiddenSpecified(bool value);
    public bool get_Taxable();
    public void set_Taxable(bool value);
    public bool get_TaxableSpecified();
    public void set_TaxableSpecified(bool value);
    public bool get_TaxGroup();
    public void set_TaxGroup(bool value);
    public bool get_TaxGroupSpecified();
    public void set_TaxGroupSpecified(bool value);
    public TaxRateList get_SalesTaxRateList();
    public void set_SalesTaxRateList(TaxRateList value);
    public TaxRateList get_PurchaseTaxRateList();
    public void set_PurchaseTaxRateList(TaxRateList value);
    public TaxRateList get_AdjustmentTaxRateList();
    public void set_AdjustmentTaxRateList(TaxRateList value);
    public IntuitAnyType get_TaxCodeEx();
    public void set_TaxCodeEx(IntuitAnyType value);
    public GTMConfigTypeEnum get_TaxCodeConfigType();
    public void set_TaxCodeConfigType(GTMConfigTypeEnum value);
    public bool get_TaxCodeConfigTypeSpecified();
    public void set_TaxCodeConfigTypeSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxFormTypeEnum : Enum {
    public int value__;
    [XmlEnumAttribute("Form C")]
public static TaxFormTypeEnum FormC;
    [XmlEnumAttribute("Form F")]
public static TaxFormTypeEnum FormF;
    [XmlEnumAttribute("Form I")]
public static TaxFormTypeEnum FormI;
    [XmlEnumAttribute("Form H")]
public static TaxFormTypeEnum FormH;
    [XmlEnumAttribute("Form E1")]
public static TaxFormTypeEnum FormE1;
    [XmlEnumAttribute("Form E2")]
public static TaxFormTypeEnum FormE2;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxLineDetail : object {
    private ReferenceType taxRateRefField;
    private bool percentBasedField;
    private bool percentBasedFieldSpecified;
    private decimal taxPercentField;
    private bool taxPercentFieldSpecified;
    private decimal netAmountTaxableField;
    private bool netAmountTaxableFieldSpecified;
    private decimal taxInclusiveAmountField;
    private bool taxInclusiveAmountFieldSpecified;
    private decimal overrideDeltaAmountField;
    private bool overrideDeltaAmountFieldSpecified;
    private DateTime serviceDateField;
    private bool serviceDateFieldSpecified;
    private IntuitAnyType taxLineDetailExField;
    public ReferenceType TaxRateRef { get; public set; }
    public bool PercentBased { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PercentBasedSpecified { get; public set; }
    public decimal TaxPercent { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxPercentSpecified { get; public set; }
    public decimal NetAmountTaxable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool NetAmountTaxableSpecified { get; public set; }
    public decimal TaxInclusiveAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxInclusiveAmountSpecified { get; public set; }
    public decimal OverrideDeltaAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OverrideDeltaAmountSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime ServiceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ServiceDateSpecified { get; public set; }
    public IntuitAnyType TaxLineDetailEx { get; public set; }
    public ReferenceType get_TaxRateRef();
    public void set_TaxRateRef(ReferenceType value);
    public bool get_PercentBased();
    public void set_PercentBased(bool value);
    public bool get_PercentBasedSpecified();
    public void set_PercentBasedSpecified(bool value);
    public decimal get_TaxPercent();
    public void set_TaxPercent(decimal value);
    public bool get_TaxPercentSpecified();
    public void set_TaxPercentSpecified(bool value);
    public decimal get_NetAmountTaxable();
    public void set_NetAmountTaxable(decimal value);
    public bool get_NetAmountTaxableSpecified();
    public void set_NetAmountTaxableSpecified(bool value);
    public decimal get_TaxInclusiveAmount();
    public void set_TaxInclusiveAmount(decimal value);
    public bool get_TaxInclusiveAmountSpecified();
    public void set_TaxInclusiveAmountSpecified(bool value);
    public decimal get_OverrideDeltaAmount();
    public void set_OverrideDeltaAmount(decimal value);
    public bool get_OverrideDeltaAmountSpecified();
    public void set_OverrideDeltaAmountSpecified(bool value);
    public DateTime get_ServiceDate();
    public void set_ServiceDate(DateTime value);
    public bool get_ServiceDateSpecified();
    public void set_ServiceDateSpecified(bool value);
    public IntuitAnyType get_TaxLineDetailEx();
    public void set_TaxLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxPayment : IntuitEntity {
    private DateTime paymentDateField;
    private bool paymentDateFieldSpecified;
    private ReferenceType paymentAccountRefField;
    private decimal paymentAmountField;
    private bool paymentAmountFieldSpecified;
    private string descriptionField;
    private bool refundField;
    private bool refundFieldSpecified;
    [XmlElementAttribute]
public DateTime PaymentDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PaymentDateSpecified { get; public set; }
    public ReferenceType PaymentAccountRef { get; public set; }
    public decimal PaymentAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PaymentAmountSpecified { get; public set; }
    public string Description { get; public set; }
    public bool Refund { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RefundSpecified { get; public set; }
    public DateTime get_PaymentDate();
    public void set_PaymentDate(DateTime value);
    public bool get_PaymentDateSpecified();
    public void set_PaymentDateSpecified(bool value);
    public ReferenceType get_PaymentAccountRef();
    public void set_PaymentAccountRef(ReferenceType value);
    public decimal get_PaymentAmount();
    public void set_PaymentAmount(decimal value);
    public bool get_PaymentAmountSpecified();
    public void set_PaymentAmountSpecified(bool value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Refund();
    public void set_Refund(bool value);
    public bool get_RefundSpecified();
    public void set_RefundSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxPrefs : object {
    private bool usingSalesTaxField;
    private bool usingSalesTaxFieldSpecified;
    private bool partnerTaxEnabledField;
    private bool partnerTaxEnabledFieldSpecified;
    private bool hideTaxManagementField;
    private bool hideTaxManagementFieldSpecified;
    private ReferenceType itemField;
    private ItemChoiceType2 itemElementNameField;
    private PaySalesTaxEnum paySalesTaxField;
    private bool paySalesTaxFieldSpecified;
    private ReferenceType nonTaxableSalesTaxCodeRefField;
    private ReferenceType taxableSalesTaxCodeRefField;
    public bool UsingSalesTax { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UsingSalesTaxSpecified { get; public set; }
    public bool PartnerTaxEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PartnerTaxEnabledSpecified { get; public set; }
    public bool HideTaxManagement { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HideTaxManagementSpecified { get; public set; }
    [XmlElementAttribute("TaxGroupCodeRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("TaxRateRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public ReferenceType AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType2 ItemElementName { get; public set; }
    public PaySalesTaxEnum PaySalesTax { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PaySalesTaxSpecified { get; public set; }
    public ReferenceType NonTaxableSalesTaxCodeRef { get; public set; }
    public ReferenceType TaxableSalesTaxCodeRef { get; public set; }
    public bool get_UsingSalesTax();
    public void set_UsingSalesTax(bool value);
    public bool get_UsingSalesTaxSpecified();
    public void set_UsingSalesTaxSpecified(bool value);
    public bool get_PartnerTaxEnabled();
    public void set_PartnerTaxEnabled(bool value);
    public bool get_PartnerTaxEnabledSpecified();
    public void set_PartnerTaxEnabledSpecified(bool value);
    public bool get_HideTaxManagement();
    public void set_HideTaxManagement(bool value);
    public bool get_HideTaxManagementSpecified();
    public void set_HideTaxManagementSpecified(bool value);
    public ReferenceType get_AnyIntuitObject();
    public void set_AnyIntuitObject(ReferenceType value);
    public ItemChoiceType2 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType2 value);
    public PaySalesTaxEnum get_PaySalesTax();
    public void set_PaySalesTax(PaySalesTaxEnum value);
    public bool get_PaySalesTaxSpecified();
    public void set_PaySalesTaxSpecified(bool value);
    public ReferenceType get_NonTaxableSalesTaxCodeRef();
    public void set_NonTaxableSalesTaxCodeRef(ReferenceType value);
    public ReferenceType get_TaxableSalesTaxCodeRef();
    public void set_TaxableSalesTaxCodeRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxRate : IntuitEntity {
    private string nameField;
    private string descriptionField;
    private bool activeField;
    private bool activeFieldSpecified;
    private decimal rateValueField;
    private bool rateValueFieldSpecified;
    private ReferenceType agencyRefField;
    private ReferenceType taxReturnLineRefField;
    private EffectiveTaxRate[] effectiveTaxRateField;
    private SpecialTaxTypeEnum specialTaxTypeField;
    private bool specialTaxTypeFieldSpecified;
    private TaxRateDisplayTypeEnum displayTypeField;
    private bool displayTypeFieldSpecified;
    private IntuitAnyType taxRateExField;
    private ReferenceType originalTaxRateField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public decimal RateValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RateValueSpecified { get; public set; }
    public ReferenceType AgencyRef { get; public set; }
    public ReferenceType TaxReturnLineRef { get; public set; }
    [XmlElementAttribute("EffectiveTaxRate")]
public EffectiveTaxRate[] EffectiveTaxRate { get; public set; }
    public SpecialTaxTypeEnum SpecialTaxType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SpecialTaxTypeSpecified { get; public set; }
    public TaxRateDisplayTypeEnum DisplayType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DisplayTypeSpecified { get; public set; }
    public IntuitAnyType TaxRateEx { get; public set; }
    public ReferenceType OriginalTaxRate { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public decimal get_RateValue();
    public void set_RateValue(decimal value);
    public bool get_RateValueSpecified();
    public void set_RateValueSpecified(bool value);
    public ReferenceType get_AgencyRef();
    public void set_AgencyRef(ReferenceType value);
    public ReferenceType get_TaxReturnLineRef();
    public void set_TaxReturnLineRef(ReferenceType value);
    public EffectiveTaxRate[] get_EffectiveTaxRate();
    public void set_EffectiveTaxRate(EffectiveTaxRate[] value);
    public SpecialTaxTypeEnum get_SpecialTaxType();
    public void set_SpecialTaxType(SpecialTaxTypeEnum value);
    public bool get_SpecialTaxTypeSpecified();
    public void set_SpecialTaxTypeSpecified(bool value);
    public TaxRateDisplayTypeEnum get_DisplayType();
    public void set_DisplayType(TaxRateDisplayTypeEnum value);
    public bool get_DisplayTypeSpecified();
    public void set_DisplayTypeSpecified(bool value);
    public IntuitAnyType get_TaxRateEx();
    public void set_TaxRateEx(IntuitAnyType value);
    public ReferenceType get_OriginalTaxRate();
    public void set_OriginalTaxRate(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxRateApplicableOnEnum : Enum {
    public int value__;
    public static TaxRateApplicableOnEnum Sales;
    public static TaxRateApplicableOnEnum Purchase;
    public static TaxRateApplicableOnEnum Adjustment;
    public static TaxRateApplicableOnEnum Other;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxRateDetail : object {
    private ReferenceType taxRateRefField;
    private TaxTypeApplicablityEnum taxTypeApplicableField;
    private bool taxTypeApplicableFieldSpecified;
    private int taxOrderField;
    private bool taxOrderFieldSpecified;
    private int taxOnTaxOrderField;
    private bool taxOnTaxOrderFieldSpecified;
    public ReferenceType TaxRateRef { get; public set; }
    public TaxTypeApplicablityEnum TaxTypeApplicable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxTypeApplicableSpecified { get; public set; }
    public int TaxOrder { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxOrderSpecified { get; public set; }
    public int TaxOnTaxOrder { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxOnTaxOrderSpecified { get; public set; }
    public ReferenceType get_TaxRateRef();
    public void set_TaxRateRef(ReferenceType value);
    public TaxTypeApplicablityEnum get_TaxTypeApplicable();
    public void set_TaxTypeApplicable(TaxTypeApplicablityEnum value);
    public bool get_TaxTypeApplicableSpecified();
    public void set_TaxTypeApplicableSpecified(bool value);
    public int get_TaxOrder();
    public void set_TaxOrder(int value);
    public bool get_TaxOrderSpecified();
    public void set_TaxOrderSpecified(bool value);
    public int get_TaxOnTaxOrder();
    public void set_TaxOnTaxOrder(int value);
    public bool get_TaxOnTaxOrderSpecified();
    public void set_TaxOnTaxOrderSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxRateDetails : object {
    private string taxRateNameField;
    private string taxRateIdField;
    private decimal rateValueField;
    private bool rateValueFieldSpecified;
    private string taxAgencyIdField;
    private TaxRateApplicableOnEnum taxApplicableOnField;
    private bool taxApplicableOnFieldSpecified;
    public string TaxRateName { get; public set; }
    public string TaxRateId { get; public set; }
    public decimal RateValue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool RateValueSpecified { get; public set; }
    public string TaxAgencyId { get; public set; }
    public TaxRateApplicableOnEnum TaxApplicableOn { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxApplicableOnSpecified { get; public set; }
    public string get_TaxRateName();
    public void set_TaxRateName(string value);
    public string get_TaxRateId();
    public void set_TaxRateId(string value);
    public decimal get_RateValue();
    public void set_RateValue(decimal value);
    public bool get_RateValueSpecified();
    public void set_RateValueSpecified(bool value);
    public string get_TaxAgencyId();
    public void set_TaxAgencyId(string value);
    public TaxRateApplicableOnEnum get_TaxApplicableOn();
    public void set_TaxApplicableOn(TaxRateApplicableOnEnum value);
    public bool get_TaxApplicableOnSpecified();
    public void set_TaxApplicableOnSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxRateDisplayTypeEnum : Enum {
    public int value__;
    public static TaxRateDisplayTypeEnum ReadOnly;
    public static TaxRateDisplayTypeEnum HideInTransactionForms;
    public static TaxRateDisplayTypeEnum HideInPrintedForms;
    public static TaxRateDisplayTypeEnum HideInAll;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxRateList : object {
    private TaxRateDetail[] taxRateDetailField;
    private string originatingGroupIdField;
    [XmlElementAttribute("TaxRateDetail")]
public TaxRateDetail[] TaxRateDetail { get; public set; }
    [XmlAttributeAttribute]
public string originatingGroupId { get; public set; }
    public TaxRateDetail[] get_TaxRateDetail();
    public void set_TaxRateDetail(TaxRateDetail[] value);
    public string get_originatingGroupId();
    public void set_originatingGroupId(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxReportBasisTypeEnum : Enum {
    public int value__;
    public static TaxReportBasisTypeEnum Cash;
    public static TaxReportBasisTypeEnum Accrual;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxReturn : IntuitEntity {
    private bool upcomingFilingField;
    private bool upcomingFilingFieldSpecified;
    private DateTime startDateField;
    private bool startDateFieldSpecified;
    private DateTime endDateField;
    private bool endDateFieldSpecified;
    private DateTime fileDateField;
    private bool fileDateFieldSpecified;
    private DateTime agencyPaymentDateField;
    private bool agencyPaymentDateFieldSpecified;
    private decimal agencyPaymentAmountField;
    private bool agencyPaymentAmountFieldSpecified;
    private decimal netTaxAmountDueField;
    private bool netTaxAmountDueFieldSpecified;
    private decimal flatRateSavingsAmountDueField;
    private bool flatRateSavingsAmountDueFieldSpecified;
    private decimal payGWithheldAmountField;
    private bool payGWithheldAmountFieldSpecified;
    private ReferenceType agencyRefField;
    private TaxReturnStatusEnum taxReturnStatusField;
    private bool taxReturnStatusFieldSpecified;
    private string taxReturnEFilingFailureReasonField;
    private DateTime eFileErrorFixByDateField;
    private bool eFileErrorFixByDateFieldSpecified;
    private AgencyPaymentMethodEnum agencyPaymentMethodField;
    private bool agencyPaymentMethodFieldSpecified;
    private string taxReturnCodeField;
    public bool UpcomingFiling { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UpcomingFilingSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime StartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StartDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime EndDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EndDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime FileDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FileDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime AgencyPaymentDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AgencyPaymentDateSpecified { get; public set; }
    public decimal AgencyPaymentAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AgencyPaymentAmountSpecified { get; public set; }
    public decimal NetTaxAmountDue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool NetTaxAmountDueSpecified { get; public set; }
    public decimal FlatRateSavingsAmountDue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool FlatRateSavingsAmountDueSpecified { get; public set; }
    public decimal PayGWithheldAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool PayGWithheldAmountSpecified { get; public set; }
    public ReferenceType AgencyRef { get; public set; }
    public TaxReturnStatusEnum TaxReturnStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxReturnStatusSpecified { get; public set; }
    public string TaxReturnEFilingFailureReason { get; public set; }
    [XmlElementAttribute]
public DateTime EFileErrorFixByDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EFileErrorFixByDateSpecified { get; public set; }
    public AgencyPaymentMethodEnum AgencyPaymentMethod { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AgencyPaymentMethodSpecified { get; public set; }
    public string TaxReturnCode { get; public set; }
    public bool get_UpcomingFiling();
    public void set_UpcomingFiling(bool value);
    public bool get_UpcomingFilingSpecified();
    public void set_UpcomingFilingSpecified(bool value);
    public DateTime get_StartDate();
    public void set_StartDate(DateTime value);
    public bool get_StartDateSpecified();
    public void set_StartDateSpecified(bool value);
    public DateTime get_EndDate();
    public void set_EndDate(DateTime value);
    public bool get_EndDateSpecified();
    public void set_EndDateSpecified(bool value);
    public DateTime get_FileDate();
    public void set_FileDate(DateTime value);
    public bool get_FileDateSpecified();
    public void set_FileDateSpecified(bool value);
    public DateTime get_AgencyPaymentDate();
    public void set_AgencyPaymentDate(DateTime value);
    public bool get_AgencyPaymentDateSpecified();
    public void set_AgencyPaymentDateSpecified(bool value);
    public decimal get_AgencyPaymentAmount();
    public void set_AgencyPaymentAmount(decimal value);
    public bool get_AgencyPaymentAmountSpecified();
    public void set_AgencyPaymentAmountSpecified(bool value);
    public decimal get_NetTaxAmountDue();
    public void set_NetTaxAmountDue(decimal value);
    public bool get_NetTaxAmountDueSpecified();
    public void set_NetTaxAmountDueSpecified(bool value);
    public decimal get_FlatRateSavingsAmountDue();
    public void set_FlatRateSavingsAmountDue(decimal value);
    public bool get_FlatRateSavingsAmountDueSpecified();
    public void set_FlatRateSavingsAmountDueSpecified(bool value);
    public decimal get_PayGWithheldAmount();
    public void set_PayGWithheldAmount(decimal value);
    public bool get_PayGWithheldAmountSpecified();
    public void set_PayGWithheldAmountSpecified(bool value);
    public ReferenceType get_AgencyRef();
    public void set_AgencyRef(ReferenceType value);
    public TaxReturnStatusEnum get_TaxReturnStatus();
    public void set_TaxReturnStatus(TaxReturnStatusEnum value);
    public bool get_TaxReturnStatusSpecified();
    public void set_TaxReturnStatusSpecified(bool value);
    public string get_TaxReturnEFilingFailureReason();
    public void set_TaxReturnEFilingFailureReason(string value);
    public DateTime get_EFileErrorFixByDate();
    public void set_EFileErrorFixByDate(DateTime value);
    public bool get_EFileErrorFixByDateSpecified();
    public void set_EFileErrorFixByDateSpecified(bool value);
    public AgencyPaymentMethodEnum get_AgencyPaymentMethod();
    public void set_AgencyPaymentMethod(AgencyPaymentMethodEnum value);
    public bool get_AgencyPaymentMethodSpecified();
    public void set_AgencyPaymentMethodSpecified(bool value);
    public string get_TaxReturnCode();
    public void set_TaxReturnCode(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxReturnStatusEnum : Enum {
    public int value__;
    public static TaxReturnStatusEnum FILED;
    public static TaxReturnStatusEnum FILING_FAILED;
    public static TaxReturnStatusEnum FILING_FAILED_WRONG_AGENCY_CREDENTIALS;
    public static TaxReturnStatusEnum AGENCY_PAYMENT_INITIATED;
    public static TaxReturnStatusEnum AGENCY_PAYMENT_COMPLETED;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxReviewStatusEnum : Enum {
    public int value__;
    public static TaxReviewStatusEnum NON_AST_TAX;
    public static TaxReviewStatusEnum AST_TAX_OVERRIDE;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TaxService : IntuitEntity {
    private string taxCodeField;
    private string taxCodeIdField;
    private TaxRateDetails[] taxRateDetailsField;
    private Fault faultField;
    public string TaxCode { get; public set; }
    public string TaxCodeId { get; public set; }
    [XmlElementAttribute("TaxRateDetails")]
public TaxRateDetails[] TaxRateDetails { get; public set; }
    public Fault Fault { get; public set; }
    public string get_TaxCode();
    public void set_TaxCode(string value);
    public string get_TaxCodeId();
    public void set_TaxCodeId(string value);
    public TaxRateDetails[] get_TaxRateDetails();
    public void set_TaxRateDetails(TaxRateDetails[] value);
    public Fault get_Fault();
    public void set_Fault(Fault value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TaxTypeApplicablityEnum : Enum {
    public int value__;
    public static TaxTypeApplicablityEnum TaxOnAmount;
    public static TaxTypeApplicablityEnum TaxOnAmountPlusTax;
    public static TaxTypeApplicablityEnum TaxOnTax;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TDSLineDetail : object {
    private ReferenceType tDSAccountRefField;
    private int tDSSectionTypeIdField;
    private bool tDSSectionTypeIdFieldSpecified;
    private IntuitAnyType tDSLineDetailExField;
    public ReferenceType TDSAccountRef { get; public set; }
    public int TDSSectionTypeId { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TDSSectionTypeIdSpecified { get; public set; }
    public IntuitAnyType TDSLineDetailEx { get; public set; }
    public ReferenceType get_TDSAccountRef();
    public void set_TDSAccountRef(ReferenceType value);
    public int get_TDSSectionTypeId();
    public void set_TDSSectionTypeId(int value);
    public bool get_TDSSectionTypeIdSpecified();
    public void set_TDSSectionTypeIdSpecified(bool value);
    public IntuitAnyType get_TDSLineDetailEx();
    public void set_TDSLineDetailEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TDSMetadata : IntuitEntity {
    private NameValue[] tDSEntityTypesField;
    private NameValue[] tDSSectionTypesField;
    [XmlElementAttribute("TDSEntityTypes")]
public NameValue[] TDSEntityTypes { get; public set; }
    [XmlElementAttribute("TDSSectionTypes")]
public NameValue[] TDSSectionTypes { get; public set; }
    public NameValue[] get_TDSEntityTypes();
    public void set_TDSEntityTypes(NameValue[] value);
    public NameValue[] get_TDSSectionTypes();
    public void set_TDSSectionTypes(NameValue[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TelephoneDeviceTypeEnum : Enum {
    public int value__;
    public static TelephoneDeviceTypeEnum LandLine;
    public static TelephoneDeviceTypeEnum Mobile;
    public static TelephoneDeviceTypeEnum Fax;
    public static TelephoneDeviceTypeEnum Pager;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TelephoneNumber : object {
    private string idField;
    private string deviceTypeField;
    private string countryCodeField;
    private string areaCodeField;
    private string exchangeCodeField;
    private string extensionField;
    private string freeFormNumberField;
    private bool defaultField;
    private bool defaultFieldSpecified;
    private string tagField;
    public string Id { get; public set; }
    public string DeviceType { get; public set; }
    public string CountryCode { get; public set; }
    public string AreaCode { get; public set; }
    public string ExchangeCode { get; public set; }
    public string Extension { get; public set; }
    public string FreeFormNumber { get; public set; }
    public bool Default { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultSpecified { get; public set; }
    public string Tag { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_DeviceType();
    public void set_DeviceType(string value);
    public string get_CountryCode();
    public void set_CountryCode(string value);
    public string get_AreaCode();
    public void set_AreaCode(string value);
    public string get_ExchangeCode();
    public void set_ExchangeCode(string value);
    public string get_Extension();
    public void set_Extension(string value);
    public string get_FreeFormNumber();
    public void set_FreeFormNumber(string value);
    public bool get_Default();
    public void set_Default(bool value);
    public bool get_DefaultSpecified();
    public void set_DefaultSpecified(bool value);
    public string get_Tag();
    public void set_Tag(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TelephoneNumberTypeEnum : Enum {
    public int value__;
    public static TelephoneNumberTypeEnum Business;
    public static TelephoneNumberTypeEnum Fax;
    public static TelephoneNumberTypeEnum Home;
    public static TelephoneNumberTypeEnum Mobile;
    public static TelephoneNumberTypeEnum Pager;
    public static TelephoneNumberTypeEnum Primary;
    public static TelephoneNumberTypeEnum Secondary;
    public static TelephoneNumberTypeEnum Other;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TemplateName : IntuitEntity {
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private TemplateTypeEnum typeField;
    private bool typeFieldSpecified;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public TemplateTypeEnum Type { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TypeSpecified { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public TemplateTypeEnum get_Type();
    public void set_Type(TemplateTypeEnum value);
    public bool get_TypeSpecified();
    public void set_TypeSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TemplateTypeEnum : Enum {
    public int value__;
    public static TemplateTypeEnum BuildAssembly;
    public static TemplateTypeEnum CreditMemo;
    public static TemplateTypeEnum Estimate;
    public static TemplateTypeEnum Invoice;
    public static TemplateTypeEnum PurchaseOrder;
    public static TemplateTypeEnum SalesOrder;
    public static TemplateTypeEnum SalesReceipt;
    public static TemplateTypeEnum StatementCharge;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Term : IntuitEntity {
    private string nameField;
    private bool activeField;
    private bool activeFieldSpecified;
    private string typeField;
    private decimal discountPercentField;
    private bool discountPercentFieldSpecified;
    private Object[] itemsField;
    private ItemsChoiceType[] itemsElementNameField;
    private IntuitAnyType salesTermExField;
    public string Name { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public string Type { get; public set; }
    public decimal DiscountPercent { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DiscountPercentSpecified { get; public set; }
    [XmlElementAttribute("DayOfMonthDue", "System.String")]
[XmlElementAttribute("DiscountDayOfMonth", "System.String")]
[XmlElementAttribute("DiscountDays", "System.Int32")]
[XmlElementAttribute("DueDays", "System.Int32")]
[XmlElementAttribute("DueNextMonthDays", "System.String")]
[XmlChoiceIdentifierAttribute("ItemsElementName")]
public Object[] AnyIntuitObjects { get; public set; }
    [XmlElementAttribute("ItemsElementName")]
[XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemsChoiceType[] ItemsElementName { get; public set; }
    public IntuitAnyType SalesTermEx { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public string get_Type();
    public void set_Type(string value);
    public decimal get_DiscountPercent();
    public void set_DiscountPercent(decimal value);
    public bool get_DiscountPercentSpecified();
    public void set_DiscountPercentSpecified(bool value);
    public Object[] get_AnyIntuitObjects();
    public void set_AnyIntuitObjects(Object[] value);
    public ItemsChoiceType[] get_ItemsElementName();
    public void set_ItemsElementName(ItemsChoiceType[] value);
    public IntuitAnyType get_SalesTermEx();
    public void set_SalesTermEx(IntuitAnyType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Thresholds : object {
    private ThresholdsThreshold[] thresholdField;
    [XmlElementAttribute("Threshold")]
public ThresholdsThreshold[] Threshold { get; public set; }
    public ThresholdsThreshold[] get_Threshold();
    public void set_Threshold(ThresholdsThreshold[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
public class Intuit.Ipp.Data.ThresholdsThreshold : object {
    private string nameField;
    private string limitField;
    private string enforcedField;
    private string currentCountField;
    private string aboveThresholdField;
    public string name { get; public set; }
    public string limit { get; public set; }
    public string enforced { get; public set; }
    public string currentCount { get; public set; }
    public string aboveThreshold { get; public set; }
    public string get_name();
    public void set_name(string value);
    public string get_limit();
    public void set_limit(string value);
    public string get_enforced();
    public void set_enforced(string value);
    public string get_currentCount();
    public void set_currentCount(string value);
    public string get_aboveThreshold();
    public void set_aboveThreshold(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TimeActivity : IntuitEntity {
    private string timeZoneField;
    private DateTime txnDateField;
    private bool txnDateFieldSpecified;
    private TimeActivityTypeEnum nameOfField;
    private bool nameOfFieldSpecified;
    private ReferenceType itemField;
    private ItemChoiceType6 itemElementNameField;
    private ReferenceType customerRefField;
    private ReferenceType departmentRefField;
    private ReferenceType itemRefField;
    private ReferenceType classRefField;
    private ReferenceType payrollItemRefField;
    private ReferenceType projectRefField;
    private int timeChargeIdField;
    private bool timeChargeIdFieldSpecified;
    private BillableStatusEnum billableStatusField;
    private bool billableStatusFieldSpecified;
    private bool taxableField;
    private bool taxableFieldSpecified;
    private decimal hourlyRateField;
    private bool hourlyRateFieldSpecified;
    private decimal costRateField;
    private bool costRateFieldSpecified;
    private int hoursField;
    private bool hoursFieldSpecified;
    private int minutesField;
    private bool minutesFieldSpecified;
    private int secondsField;
    private bool secondsFieldSpecified;
    private int breakHoursField;
    private bool breakHoursFieldSpecified;
    private int breakMinutesField;
    private bool breakMinutesFieldSpecified;
    private int breakSecondsField;
    private bool breakSecondsFieldSpecified;
    private DateTime startTimeField;
    private bool startTimeFieldSpecified;
    private DateTime endTimeField;
    private bool endTimeFieldSpecified;
    private string descriptionField;
    private IntuitAnyType timeActivityExField;
    private bool hoursInEmployeeTimeZoneField;
    private bool hoursInEmployeeTimeZoneFieldSpecified;
    public string TimeZone { get; public set; }
    [XmlElementAttribute]
public DateTime TxnDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TxnDateSpecified { get; public set; }
    public TimeActivityTypeEnum NameOf { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool NameOfSpecified { get; public set; }
    [XmlElementAttribute("EmployeeRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("OtherNameRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlElementAttribute("VendorRef", "Intuit.Ipp.Data.ReferenceType")]
[XmlChoiceIdentifierAttribute("ItemElementName")]
public ReferenceType AnyIntuitObject { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public ItemChoiceType6 ItemElementName { get; public set; }
    public ReferenceType CustomerRef { get; public set; }
    public ReferenceType DepartmentRef { get; public set; }
    public ReferenceType ItemRef { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public ReferenceType PayrollItemRef { get; public set; }
    public ReferenceType ProjectRef { get; public set; }
    public int TimeChargeId { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TimeChargeIdSpecified { get; public set; }
    public BillableStatusEnum BillableStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillableStatusSpecified { get; public set; }
    public bool Taxable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxableSpecified { get; public set; }
    public decimal HourlyRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HourlyRateSpecified { get; public set; }
    public decimal CostRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CostRateSpecified { get; public set; }
    public int Hours { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HoursSpecified { get; public set; }
    public int Minutes { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MinutesSpecified { get; public set; }
    public int Seconds { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool SecondsSpecified { get; public set; }
    public int BreakHours { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BreakHoursSpecified { get; public set; }
    public int BreakMinutes { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BreakMinutesSpecified { get; public set; }
    public int BreakSeconds { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BreakSecondsSpecified { get; public set; }
    public DateTime StartTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool StartTimeSpecified { get; public set; }
    public DateTime EndTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EndTimeSpecified { get; public set; }
    public string Description { get; public set; }
    public IntuitAnyType TimeActivityEx { get; public set; }
    public bool HoursInEmployeeTimeZone { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HoursInEmployeeTimeZoneSpecified { get; public set; }
    public string get_TimeZone();
    public void set_TimeZone(string value);
    public DateTime get_TxnDate();
    public void set_TxnDate(DateTime value);
    public bool get_TxnDateSpecified();
    public void set_TxnDateSpecified(bool value);
    public TimeActivityTypeEnum get_NameOf();
    public void set_NameOf(TimeActivityTypeEnum value);
    public bool get_NameOfSpecified();
    public void set_NameOfSpecified(bool value);
    public ReferenceType get_AnyIntuitObject();
    public void set_AnyIntuitObject(ReferenceType value);
    public ItemChoiceType6 get_ItemElementName();
    public void set_ItemElementName(ItemChoiceType6 value);
    public ReferenceType get_CustomerRef();
    public void set_CustomerRef(ReferenceType value);
    public ReferenceType get_DepartmentRef();
    public void set_DepartmentRef(ReferenceType value);
    public ReferenceType get_ItemRef();
    public void set_ItemRef(ReferenceType value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public ReferenceType get_PayrollItemRef();
    public void set_PayrollItemRef(ReferenceType value);
    public ReferenceType get_ProjectRef();
    public void set_ProjectRef(ReferenceType value);
    public int get_TimeChargeId();
    public void set_TimeChargeId(int value);
    public bool get_TimeChargeIdSpecified();
    public void set_TimeChargeIdSpecified(bool value);
    public BillableStatusEnum get_BillableStatus();
    public void set_BillableStatus(BillableStatusEnum value);
    public bool get_BillableStatusSpecified();
    public void set_BillableStatusSpecified(bool value);
    public bool get_Taxable();
    public void set_Taxable(bool value);
    public bool get_TaxableSpecified();
    public void set_TaxableSpecified(bool value);
    public decimal get_HourlyRate();
    public void set_HourlyRate(decimal value);
    public bool get_HourlyRateSpecified();
    public void set_HourlyRateSpecified(bool value);
    public decimal get_CostRate();
    public void set_CostRate(decimal value);
    public bool get_CostRateSpecified();
    public void set_CostRateSpecified(bool value);
    public int get_Hours();
    public void set_Hours(int value);
    public bool get_HoursSpecified();
    public void set_HoursSpecified(bool value);
    public int get_Minutes();
    public void set_Minutes(int value);
    public bool get_MinutesSpecified();
    public void set_MinutesSpecified(bool value);
    public int get_Seconds();
    public void set_Seconds(int value);
    public bool get_SecondsSpecified();
    public void set_SecondsSpecified(bool value);
    public int get_BreakHours();
    public void set_BreakHours(int value);
    public bool get_BreakHoursSpecified();
    public void set_BreakHoursSpecified(bool value);
    public int get_BreakMinutes();
    public void set_BreakMinutes(int value);
    public bool get_BreakMinutesSpecified();
    public void set_BreakMinutesSpecified(bool value);
    public int get_BreakSeconds();
    public void set_BreakSeconds(int value);
    public bool get_BreakSecondsSpecified();
    public void set_BreakSecondsSpecified(bool value);
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    public bool get_StartTimeSpecified();
    public void set_StartTimeSpecified(bool value);
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    public bool get_EndTimeSpecified();
    public void set_EndTimeSpecified(bool value);
    public string get_Description();
    public void set_Description(string value);
    public IntuitAnyType get_TimeActivityEx();
    public void set_TimeActivityEx(IntuitAnyType value);
    public bool get_HoursInEmployeeTimeZone();
    public void set_HoursInEmployeeTimeZone(bool value);
    public bool get_HoursInEmployeeTimeZoneSpecified();
    public void set_HoursInEmployeeTimeZoneSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TimeActivityTypeEnum : Enum {
    public int value__;
    public static TimeActivityTypeEnum Employee;
    public static TimeActivityTypeEnum Other;
    public static TimeActivityTypeEnum Vendor;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TimeEntryUsedForPaychecksEnum : Enum {
    public int value__;
    public static TimeEntryUsedForPaychecksEnum NotSet;
    public static TimeEntryUsedForPaychecksEnum DoNotUseTimeEntry;
    public static TimeEntryUsedForPaychecksEnum UseTimeEntry;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TimeTrackingPrefs : object {
    private bool useServicesField;
    private bool useServicesFieldSpecified;
    private ReferenceType defaultTimeItemField;
    private bool billCustomersField;
    private bool billCustomersFieldSpecified;
    private bool showBillRateToAllField;
    private bool showBillRateToAllFieldSpecified;
    private WeekEnum workWeekStartDateField;
    private bool workWeekStartDateFieldSpecified;
    private bool timeTrackingEnabledField;
    private bool timeTrackingEnabledFieldSpecified;
    private bool markTimeEntriesBillableField;
    private bool markTimeEntriesBillableFieldSpecified;
    private bool markExpensesAsBillableField;
    private bool markExpensesAsBillableFieldSpecified;
    public bool UseServices { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UseServicesSpecified { get; public set; }
    public ReferenceType DefaultTimeItem { get; public set; }
    public bool BillCustomers { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillCustomersSpecified { get; public set; }
    public bool ShowBillRateToAll { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ShowBillRateToAllSpecified { get; public set; }
    public WeekEnum WorkWeekStartDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool WorkWeekStartDateSpecified { get; public set; }
    public bool TimeTrackingEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TimeTrackingEnabledSpecified { get; public set; }
    public bool MarkTimeEntriesBillable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MarkTimeEntriesBillableSpecified { get; public set; }
    public bool MarkExpensesAsBillable { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MarkExpensesAsBillableSpecified { get; public set; }
    public bool get_UseServices();
    public void set_UseServices(bool value);
    public bool get_UseServicesSpecified();
    public void set_UseServicesSpecified(bool value);
    public ReferenceType get_DefaultTimeItem();
    public void set_DefaultTimeItem(ReferenceType value);
    public bool get_BillCustomers();
    public void set_BillCustomers(bool value);
    public bool get_BillCustomersSpecified();
    public void set_BillCustomersSpecified(bool value);
    public bool get_ShowBillRateToAll();
    public void set_ShowBillRateToAll(bool value);
    public bool get_ShowBillRateToAllSpecified();
    public void set_ShowBillRateToAllSpecified(bool value);
    public WeekEnum get_WorkWeekStartDate();
    public void set_WorkWeekStartDate(WeekEnum value);
    public bool get_WorkWeekStartDateSpecified();
    public void set_WorkWeekStartDateSpecified(bool value);
    public bool get_TimeTrackingEnabled();
    public void set_TimeTrackingEnabled(bool value);
    public bool get_TimeTrackingEnabledSpecified();
    public void set_TimeTrackingEnabledSpecified(bool value);
    public bool get_MarkTimeEntriesBillable();
    public void set_MarkTimeEntriesBillable(bool value);
    public bool get_MarkTimeEntriesBillableSpecified();
    public void set_MarkTimeEntriesBillableSpecified(bool value);
    public bool get_MarkExpensesAsBillable();
    public void set_MarkExpensesAsBillable(bool value);
    public bool get_MarkExpensesAsBillableSpecified();
    public void set_MarkExpensesAsBillableSpecified(bool value);
}
[XmlIncludeAttribute("Intuit.Ipp.Data.ChargeCredit")]
[XmlIncludeAttribute("Intuit.Ipp.Data.ReimburseCharge")]
[XmlIncludeAttribute("Intuit.Ipp.Data.JournalEntry")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CreditCardPaymentTxn")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Transfer")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Deposit")]
[XmlIncludeAttribute("Intuit.Ipp.Data.BillPayment")]
[XmlIncludeAttribute("Intuit.Ipp.Data.InventoryAdjustment")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Payment")]
[XmlIncludeAttribute("Intuit.Ipp.Data.StatementCharge")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PurchaseByVendor")]
[XmlIncludeAttribute("Intuit.Ipp.Data.PurchaseOrder")]
[XmlIncludeAttribute("Intuit.Ipp.Data.VendorCredit")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Bill")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Purchase")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesTransaction")]
[XmlIncludeAttribute("Intuit.Ipp.Data.RefundReceipt")]
[XmlIncludeAttribute("Intuit.Ipp.Data.CreditMemo")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesOrder")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Estimate")]
[XmlIncludeAttribute("Intuit.Ipp.Data.SalesReceipt")]
[XmlIncludeAttribute("Intuit.Ipp.Data.Invoice")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Transaction : IntuitEntity {
    private string docNumberField;
    private DateTime txnDateField;
    private bool txnDateFieldSpecified;
    private ReferenceType departmentRefField;
    private ReferenceType currencyRefField;
    private decimal exchangeRateField;
    private bool exchangeRateFieldSpecified;
    private string privateNoteField;
    private string txnStatusField;
    private LinkedTxn[] linkedTxnField;
    private Line[] lineField;
    private TxnTaxDetail txnTaxDetailField;
    private string txnSourceField;
    private string taxFormTypeField;
    private string taxFormNumField;
    private string transactionLocationTypeField;
    private Tag[] tagField;
    private TxnApprovalInfo txnApprovalInfoField;
    private ReferenceType recurDataRefField;
    private RecurringInfo recurringInfoField;
    private ReferenceType projectRefField;
    private decimal totalCostAmountField;
    private bool totalCostAmountFieldSpecified;
    private decimal homeTotalCostAmountField;
    private bool homeTotalCostAmountFieldSpecified;
    public string DocNumber { get; public set; }
    [XmlElementAttribute]
public DateTime TxnDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TxnDateSpecified { get; public set; }
    public ReferenceType DepartmentRef { get; public set; }
    public ReferenceType CurrencyRef { get; public set; }
    public decimal ExchangeRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ExchangeRateSpecified { get; public set; }
    public string PrivateNote { get; public set; }
    public string TxnStatus { get; public set; }
    [XmlElementAttribute("LinkedTxn")]
public LinkedTxn[] LinkedTxn { get; public set; }
    [XmlElementAttribute("Line")]
public Line[] Line { get; public set; }
    public TxnTaxDetail TxnTaxDetail { get; public set; }
    public string TxnSource { get; public set; }
    public string TaxFormType { get; public set; }
    public string TaxFormNum { get; public set; }
    public string TransactionLocationType { get; public set; }
    [XmlElementAttribute("Tag")]
public Tag[] Tag { get; public set; }
    public TxnApprovalInfo TxnApprovalInfo { get; public set; }
    public ReferenceType RecurDataRef { get; public set; }
    public RecurringInfo RecurringInfo { get; public set; }
    public ReferenceType ProjectRef { get; public set; }
    public decimal TotalCostAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalCostAmountSpecified { get; public set; }
    public decimal HomeTotalCostAmount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HomeTotalCostAmountSpecified { get; public set; }
    public string get_DocNumber();
    public void set_DocNumber(string value);
    public DateTime get_TxnDate();
    public void set_TxnDate(DateTime value);
    public bool get_TxnDateSpecified();
    public void set_TxnDateSpecified(bool value);
    public ReferenceType get_DepartmentRef();
    public void set_DepartmentRef(ReferenceType value);
    public ReferenceType get_CurrencyRef();
    public void set_CurrencyRef(ReferenceType value);
    public decimal get_ExchangeRate();
    public void set_ExchangeRate(decimal value);
    public bool get_ExchangeRateSpecified();
    public void set_ExchangeRateSpecified(bool value);
    public string get_PrivateNote();
    public void set_PrivateNote(string value);
    public string get_TxnStatus();
    public void set_TxnStatus(string value);
    public LinkedTxn[] get_LinkedTxn();
    public void set_LinkedTxn(LinkedTxn[] value);
    public Line[] get_Line();
    public void set_Line(Line[] value);
    public TxnTaxDetail get_TxnTaxDetail();
    public void set_TxnTaxDetail(TxnTaxDetail value);
    public string get_TxnSource();
    public void set_TxnSource(string value);
    public string get_TaxFormType();
    public void set_TaxFormType(string value);
    public string get_TaxFormNum();
    public void set_TaxFormNum(string value);
    public string get_TransactionLocationType();
    public void set_TransactionLocationType(string value);
    public Tag[] get_Tag();
    public void set_Tag(Tag[] value);
    public TxnApprovalInfo get_TxnApprovalInfo();
    public void set_TxnApprovalInfo(TxnApprovalInfo value);
    public ReferenceType get_RecurDataRef();
    public void set_RecurDataRef(ReferenceType value);
    public RecurringInfo get_RecurringInfo();
    public void set_RecurringInfo(RecurringInfo value);
    public ReferenceType get_ProjectRef();
    public void set_ProjectRef(ReferenceType value);
    public decimal get_TotalCostAmount();
    public void set_TotalCostAmount(decimal value);
    public bool get_TotalCostAmountSpecified();
    public void set_TotalCostAmountSpecified(bool value);
    public decimal get_HomeTotalCostAmount();
    public void set_HomeTotalCostAmount(decimal value);
    public bool get_HomeTotalCostAmountSpecified();
    public void set_HomeTotalCostAmountSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TransactionDeliveryInfo : object {
    private DeliveryTypeEnum deliveryTypeField;
    private bool deliveryTypeFieldSpecified;
    private DateTime deliveryTimeField;
    private bool deliveryTimeFieldSpecified;
    private DeliveryErrorTypeEnum deliveryErrorTypeField;
    private bool deliveryErrorTypeFieldSpecified;
    public DeliveryTypeEnum DeliveryType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DeliveryTypeSpecified { get; public set; }
    public DateTime DeliveryTime { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DeliveryTimeSpecified { get; public set; }
    public DeliveryErrorTypeEnum DeliveryErrorType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DeliveryErrorTypeSpecified { get; public set; }
    public DeliveryTypeEnum get_DeliveryType();
    public void set_DeliveryType(DeliveryTypeEnum value);
    public bool get_DeliveryTypeSpecified();
    public void set_DeliveryTypeSpecified(bool value);
    public DateTime get_DeliveryTime();
    public void set_DeliveryTime(DateTime value);
    public bool get_DeliveryTimeSpecified();
    public void set_DeliveryTimeSpecified(bool value);
    public DeliveryErrorTypeEnum get_DeliveryErrorType();
    public void set_DeliveryErrorType(DeliveryErrorTypeEnum value);
    public bool get_DeliveryErrorTypeSpecified();
    public void set_DeliveryErrorTypeSpecified(bool value);
}
public class Intuit.Ipp.Data.TransactionList : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TransactionLocationTypeEnum : Enum {
    public int value__;
    public static TransactionLocationTypeEnum WithinFrance;
    public static TransactionLocationTypeEnum FranceOverseas;
    public static TransactionLocationTypeEnum OutsideFranceWithEU;
    public static TransactionLocationTypeEnum OutsideEU;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Transfer : Transaction {
    private ReferenceType fromAccountRefField;
    private ReferenceType toAccountRefField;
    private decimal amountField;
    private bool amountFieldSpecified;
    private ReferenceType classRefField;
    private IntuitAnyType transferExField;
    public ReferenceType FromAccountRef { get; public set; }
    public ReferenceType ToAccountRef { get; public set; }
    public decimal Amount { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AmountSpecified { get; public set; }
    public ReferenceType ClassRef { get; public set; }
    public IntuitAnyType TransferEx { get; public set; }
    public ReferenceType get_FromAccountRef();
    public void set_FromAccountRef(ReferenceType value);
    public ReferenceType get_ToAccountRef();
    public void set_ToAccountRef(ReferenceType value);
    public decimal get_Amount();
    public void set_Amount(decimal value);
    public bool get_AmountSpecified();
    public void set_AmountSpecified(bool value);
    public ReferenceType get_ClassRef();
    public void set_ClassRef(ReferenceType value);
    public IntuitAnyType get_TransferEx();
    public void set_TransferEx(IntuitAnyType value);
}
public class Intuit.Ipp.Data.TrialBalance : ReportQueryBase {
}
public class Intuit.Ipp.Data.TrialSubscription : object {
    [CompilerGeneratedAttribute]
private string <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerPhone>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IsBeta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MbHours>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastSyncTime>k__BackingField;
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string StartDate { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string CustomerName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string CustomerEmail { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string CustomerPhone { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string Realm { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string ApplicationName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string PlanName { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string IsBeta { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string MbHours { get; private set; }
    [ObfuscationAttribute]
[ObfuscationAttribute]
public string LastSyncTime { get; private set; }
    public TrialSubscription(XmlNode singleUserNode);
    [CompilerGeneratedAttribute]
public string get_StartDate();
    [CompilerGeneratedAttribute]
private void set_StartDate(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerName();
    [CompilerGeneratedAttribute]
private void set_CustomerName(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerEmail();
    [CompilerGeneratedAttribute]
private void set_CustomerEmail(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerPhone();
    [CompilerGeneratedAttribute]
private void set_CustomerPhone(string value);
    [CompilerGeneratedAttribute]
public string get_Realm();
    [CompilerGeneratedAttribute]
private void set_Realm(string value);
    [CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
private void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public string get_PlanName();
    [CompilerGeneratedAttribute]
private void set_PlanName(string value);
    [CompilerGeneratedAttribute]
public string get_IsBeta();
    [CompilerGeneratedAttribute]
private void set_IsBeta(string value);
    [CompilerGeneratedAttribute]
public string get_MbHours();
    [CompilerGeneratedAttribute]
private void set_MbHours(string value);
    [CompilerGeneratedAttribute]
public string get_LastSyncTime();
    [CompilerGeneratedAttribute]
private void set_LastSyncTime(string value);
    public static Collection`1<TrialSubscription> ParseTrialSubscription(XmlNode node);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TxnApprovalInfo : object {
    private string approvalStatusField;
    private string approvalStatusDetailField;
    private string lastChangedByUserField;
    private DateTime lastChangedDateField;
    private bool lastChangedDateFieldSpecified;
    public string ApprovalStatus { get; public set; }
    public string ApprovalStatusDetail { get; public set; }
    public string LastChangedByUser { get; public set; }
    public DateTime LastChangedDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool LastChangedDateSpecified { get; public set; }
    public string get_ApprovalStatus();
    public void set_ApprovalStatus(string value);
    public string get_ApprovalStatusDetail();
    public void set_ApprovalStatusDetail(string value);
    public string get_LastChangedByUser();
    public void set_LastChangedByUser(string value);
    public DateTime get_LastChangedDate();
    public void set_LastChangedDate(DateTime value);
    public bool get_LastChangedDateSpecified();
    public void set_LastChangedDateSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TxnSourceEnum : Enum {
    public int value__;
    public static TxnSourceEnum QBMobile;
    public static TxnSourceEnum GoPayment;
    public static TxnSourceEnum EInvoice;
    public static TxnSourceEnum Square;
    public static TxnSourceEnum QBCommerce;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.TxnTaxDetail : object {
    private ReferenceType defaultTaxCodeRefField;
    private ReferenceType txnTaxCodeRefField;
    private decimal totalTaxField;
    private bool totalTaxFieldSpecified;
    private TaxReviewStatusEnum taxReviewStatusField;
    private bool taxReviewStatusFieldSpecified;
    private Line[] taxLineField;
    private bool useAutomatedSalesTaxField;
    private bool useAutomatedSalesTaxFieldSpecified;
    public ReferenceType DefaultTaxCodeRef { get; public set; }
    public ReferenceType TxnTaxCodeRef { get; public set; }
    public decimal TotalTax { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TotalTaxSpecified { get; public set; }
    public TaxReviewStatusEnum TaxReviewStatus { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxReviewStatusSpecified { get; public set; }
    [XmlElementAttribute("TaxLine")]
public Line[] TaxLine { get; public set; }
    public bool UseAutomatedSalesTax { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UseAutomatedSalesTaxSpecified { get; public set; }
    public ReferenceType get_DefaultTaxCodeRef();
    public void set_DefaultTaxCodeRef(ReferenceType value);
    public ReferenceType get_TxnTaxCodeRef();
    public void set_TxnTaxCodeRef(ReferenceType value);
    public decimal get_TotalTax();
    public void set_TotalTax(decimal value);
    public bool get_TotalTaxSpecified();
    public void set_TotalTaxSpecified(bool value);
    public TaxReviewStatusEnum get_TaxReviewStatus();
    public void set_TaxReviewStatus(TaxReviewStatusEnum value);
    public bool get_TaxReviewStatusSpecified();
    public void set_TaxReviewStatusSpecified(bool value);
    public Line[] get_TaxLine();
    public void set_TaxLine(Line[] value);
    public bool get_UseAutomatedSalesTax();
    public void set_UseAutomatedSalesTax(bool value);
    public bool get_UseAutomatedSalesTaxSpecified();
    public void set_UseAutomatedSalesTaxSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.TxnTypeEnum : Enum {
    public int value__;
    public static TxnTypeEnum APCreditCard;
    public static TxnTypeEnum ARRefundCreditCard;
    public static TxnTypeEnum Bill;
    public static TxnTypeEnum BillPaymentCheck;
    public static TxnTypeEnum BuildAssembly;
    public static TxnTypeEnum CarryOver;
    public static TxnTypeEnum CashPurchase;
    public static TxnTypeEnum Charge;
    public static TxnTypeEnum Check;
    public static TxnTypeEnum CreditCardPayment;
    public static TxnTypeEnum CreditMemo;
    public static TxnTypeEnum Deposit;
    public static TxnTypeEnum EFPLiabilityCheck;
    public static TxnTypeEnum EFTBillPayment;
    public static TxnTypeEnum EFTRefund;
    public static TxnTypeEnum Estimate;
    public static TxnTypeEnum InventoryAdjustment;
    public static TxnTypeEnum InventoryTransfer;
    public static TxnTypeEnum Invoice;
    public static TxnTypeEnum ItemReceipt;
    public static TxnTypeEnum JournalEntry;
    public static TxnTypeEnum LiabilityAdjustment;
    public static TxnTypeEnum Paycheck;
    public static TxnTypeEnum PayrollLiabilityCheck;
    public static TxnTypeEnum PurchaseOrder;
    public static TxnTypeEnum PriorPayment;
    public static TxnTypeEnum ReceivePayment;
    public static TxnTypeEnum RefundCheck;
    public static TxnTypeEnum ReimburseCharge;
    public static TxnTypeEnum SalesOrder;
    public static TxnTypeEnum SalesReceipt;
    public static TxnTypeEnum SalesTaxPaymentCheck;
    public static TxnTypeEnum Transfer;
    public static TxnTypeEnum TimeActivity;
    public static TxnTypeEnum VendorCredit;
    public static TxnTypeEnum YTDAdjustment;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.UOM : IntuitEntity {
    private string nameField;
    private string abbrvField;
    private UOMBaseTypeEnum baseTypeField;
    private bool baseTypeFieldSpecified;
    private UOMConvUnit[] convUnitField;
    public string Name { get; public set; }
    public string Abbrv { get; public set; }
    public UOMBaseTypeEnum BaseType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BaseTypeSpecified { get; public set; }
    [XmlElementAttribute("ConvUnit")]
public UOMConvUnit[] ConvUnit { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Abbrv();
    public void set_Abbrv(string value);
    public UOMBaseTypeEnum get_BaseType();
    public void set_BaseType(UOMBaseTypeEnum value);
    public bool get_BaseTypeSpecified();
    public void set_BaseTypeSpecified(bool value);
    public UOMConvUnit[] get_ConvUnit();
    public void set_ConvUnit(UOMConvUnit[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.UOMBaseTypeEnum : Enum {
    public int value__;
    public static UOMBaseTypeEnum Area;
    public static UOMBaseTypeEnum Count;
    public static UOMBaseTypeEnum Length;
    public static UOMBaseTypeEnum Other;
    public static UOMBaseTypeEnum Time;
    public static UOMBaseTypeEnum Volume;
    public static UOMBaseTypeEnum Weight;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.UOMConvUnit : object {
    private string nameField;
    private string abbrvField;
    private decimal convRatioField;
    private bool convRatioFieldSpecified;
    public string Name { get; public set; }
    public string Abbrv { get; public set; }
    public decimal ConvRatio { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ConvRatioSpecified { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Abbrv();
    public void set_Abbrv(string value);
    public decimal get_ConvRatio();
    public void set_ConvRatio(decimal value);
    public bool get_ConvRatioSpecified();
    public void set_ConvRatioSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.UOMFeatureTypeEnum : Enum {
    public int value__;
    public static UOMFeatureTypeEnum Disabled;
    public static UOMFeatureTypeEnum SinglePerItem;
    public static UOMFeatureTypeEnum MultiplePerItem;
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.UOMRef : object {
    private string unitField;
    private ReferenceType uOMSetRefField;
    public string Unit { get; public set; }
    public ReferenceType UOMSetRef { get; public set; }
    public string get_Unit();
    public void set_Unit(string value);
    public ReferenceType get_UOMSetRef();
    public void set_UOMSetRef(ReferenceType value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.User : IntuitEntity {
    private string displayNameField;
    private string titleField;
    private string givenNameField;
    private string middleNameField;
    private string familyNameField;
    private string suffixField;
    private EmailAddress[] emailAddrField;
    private PhysicalAddress[] addrField;
    private TelephoneNumber[] phoneNumberField;
    private string localeCountryField;
    private string localeLanguageField;
    private string localePostalCodeField;
    private string localeTimeZoneField;
    private NameValue[] nameValueAttrField;
    public string DisplayName { get; public set; }
    public string Title { get; public set; }
    public string GivenName { get; public set; }
    public string MiddleName { get; public set; }
    public string FamilyName { get; public set; }
    public string Suffix { get; public set; }
    [XmlElementAttribute("EmailAddr")]
public EmailAddress[] EmailAddr { get; public set; }
    [XmlElementAttribute("Addr")]
public PhysicalAddress[] Addr { get; public set; }
    [XmlElementAttribute("PhoneNumber")]
public TelephoneNumber[] PhoneNumber { get; public set; }
    public string LocaleCountry { get; public set; }
    public string LocaleLanguage { get; public set; }
    public string LocalePostalCode { get; public set; }
    public string LocaleTimeZone { get; public set; }
    [XmlElementAttribute("NameValueAttr")]
public NameValue[] NameValueAttr { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_Title();
    public void set_Title(string value);
    public string get_GivenName();
    public void set_GivenName(string value);
    public string get_MiddleName();
    public void set_MiddleName(string value);
    public string get_FamilyName();
    public void set_FamilyName(string value);
    public string get_Suffix();
    public void set_Suffix(string value);
    public EmailAddress[] get_EmailAddr();
    public void set_EmailAddr(EmailAddress[] value);
    public PhysicalAddress[] get_Addr();
    public void set_Addr(PhysicalAddress[] value);
    public TelephoneNumber[] get_PhoneNumber();
    public void set_PhoneNumber(TelephoneNumber[] value);
    public string get_LocaleCountry();
    public void set_LocaleCountry(string value);
    public string get_LocaleLanguage();
    public void set_LocaleLanguage(string value);
    public string get_LocalePostalCode();
    public void set_LocalePostalCode(string value);
    public string get_LocaleTimeZone();
    public void set_LocaleTimeZone(string value);
    public NameValue[] get_NameValueAttr();
    public void set_NameValueAttr(NameValue[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.UserAlert : IntuitEntity {
    private string notesField;
    private bool activeField;
    private bool activeFieldSpecified;
    private bool doneField;
    private bool doneFieldSpecified;
    private string typeField;
    private DateTime reminderDateField;
    private bool reminderDateFieldSpecified;
    private DateTime expireDateField;
    private bool expireDateFieldSpecified;
    private DateTime dueDateField;
    private bool dueDateFieldSpecified;
    private string uRLField;
    private string filterField;
    private NameValue[] nameValueField;
    private IntuitAnyType userAlertExField;
    public string Notes { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public bool Done { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DoneSpecified { get; public set; }
    public string Type { get; public set; }
    public DateTime ReminderDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ReminderDateSpecified { get; public set; }
    public DateTime ExpireDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ExpireDateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime DueDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DueDateSpecified { get; public set; }
    public string URL { get; public set; }
    public string Filter { get; public set; }
    [XmlElementAttribute("NameValue")]
public NameValue[] NameValue { get; public set; }
    public IntuitAnyType UserAlertEx { get; public set; }
    public string get_Notes();
    public void set_Notes(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
    public bool get_Done();
    public void set_Done(bool value);
    public bool get_DoneSpecified();
    public void set_DoneSpecified(bool value);
    public string get_Type();
    public void set_Type(string value);
    public DateTime get_ReminderDate();
    public void set_ReminderDate(DateTime value);
    public bool get_ReminderDateSpecified();
    public void set_ReminderDateSpecified(bool value);
    public DateTime get_ExpireDate();
    public void set_ExpireDate(DateTime value);
    public bool get_ExpireDateSpecified();
    public void set_ExpireDateSpecified(bool value);
    public DateTime get_DueDate();
    public void set_DueDate(DateTime value);
    public bool get_DueDateSpecified();
    public void set_DueDateSpecified(bool value);
    public string get_URL();
    public void set_URL(string value);
    public string get_Filter();
    public void set_Filter(string value);
    public NameValue[] get_NameValue();
    public void set_NameValue(NameValue[] value);
    public IntuitAnyType get_UserAlertEx();
    public void set_UserAlertEx(IntuitAnyType value);
}
public class Intuit.Ipp.Data.UserInfo : object {
    private string roleNames;
    private Collection`1<RoleInfo> roles;
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FirstName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string AccountId { get; private set; }
    public DateTime LastAccess { get; private set; }
    public string Name { get; private set; }
    public string ScreenName { get; private set; }
    public string Email { get; private set; }
    public string Login { get; private set; }
    public string LastName { get; private set; }
    public string FirstName { get; private set; }
    public string Id { get; private set; }
    public Collection`1<RoleInfo> Roles { get; private set; }
    public string RoleNames { get; }
    public UserInfo(XmlNode singleUserNode);
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
private void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public DateTime get_LastAccess();
    [CompilerGeneratedAttribute]
private void set_LastAccess(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ScreenName();
    [CompilerGeneratedAttribute]
private void set_ScreenName(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
private void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_Login();
    [CompilerGeneratedAttribute]
private void set_Login(string value);
    [CompilerGeneratedAttribute]
public string get_LastName();
    [CompilerGeneratedAttribute]
private void set_LastName(string value);
    [CompilerGeneratedAttribute]
public string get_FirstName();
    [CompilerGeneratedAttribute]
private void set_FirstName(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public Collection`1<RoleInfo> get_Roles();
    private void set_Roles(Collection`1<RoleInfo> value);
    public string get_RoleNames();
    public static Collection`1<UserInfo> ParseUsers(XmlNodeList nodes);
    public static IDictionary`2<string, RoleInfo> ExtractRolesUsedByUsers(IEnumerable`1<UserInfo> uis);
    public static IList`1<RoleInfo> DiffActualRolesFromAppRoles(IDictionary`2<string, RoleInfo> rolesOfUsers, IList`1<RoleInfo> appDefinedRoles);
    private string BuildRoleNamesString();
}
[XmlIncludeAttribute("Intuit.Ipp.Data.TaxAgency")]
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Vendor : NameBase {
    private string contactNameField;
    private string altContactNameField;
    private string notesField;
    private PhysicalAddress billAddrField;
    private PhysicalAddress shipAddrField;
    private PhysicalAddress[] otherAddrField;
    private string taxCountryField;
    private string taxIdentifierField;
    private DateTime taxIdEffectiveDateField;
    private bool taxIdEffectiveDateFieldSpecified;
    private string businessNumberField;
    private ReferenceType parentRefField;
    private ReferenceType vendorTypeRefField;
    private ReferenceType termRefField;
    private ReferenceType prefillAccountRefField;
    private decimal balanceField;
    private bool balanceFieldSpecified;
    private decimal billRateField;
    private bool billRateFieldSpecified;
    private DateTime openBalanceDateField;
    private bool openBalanceDateFieldSpecified;
    private decimal creditLimitField;
    private bool creditLimitFieldSpecified;
    private string acctNumField;
    private bool vendor1099Field;
    private bool vendor1099FieldSpecified;
    private bool t4AEligibleField;
    private bool t4AEligibleFieldSpecified;
    private bool t5018EligibleField;
    private bool t5018EligibleFieldSpecified;
    private ReferenceType currencyRefField;
    private bool tDSEnabledField;
    private bool tDSEnabledFieldSpecified;
    private int tDSEntityTypeIdField;
    private bool tDSEntityTypeIdFieldSpecified;
    private int tDSSectionTypeIdField;
    private bool tDSSectionTypeIdFieldSpecified;
    private bool tDSOverrideThresholdField;
    private bool tDSOverrideThresholdFieldSpecified;
    private string taxReportingBasisField;
    private ReferenceType aPAccountRefField;
    private IntuitAnyType vendorExField;
    private string gSTINField;
    private string gSTRegistrationTypeField;
    private bool isSubContractorField;
    private bool isSubContractorFieldSpecified;
    private string subcontractorTypeField;
    private string cISRateField;
    private bool hasTPARField;
    private bool hasTPARFieldSpecified;
    private VendorBankAccountDetail vendorPaymentBankDetailField;
    private string sourceField;
    private decimal costRateField;
    private bool costRateFieldSpecified;
    public string ContactName { get; public set; }
    public string AltContactName { get; public set; }
    public string Notes { get; public set; }
    public PhysicalAddress BillAddr { get; public set; }
    public PhysicalAddress ShipAddr { get; public set; }
    [XmlElementAttribute("OtherAddr")]
public PhysicalAddress[] OtherAddr { get; public set; }
    public string TaxCountry { get; public set; }
    public string TaxIdentifier { get; public set; }
    [XmlElementAttribute]
public DateTime TaxIdEffectiveDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TaxIdEffectiveDateSpecified { get; public set; }
    public string BusinessNumber { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public ReferenceType VendorTypeRef { get; public set; }
    public ReferenceType TermRef { get; public set; }
    public ReferenceType PrefillAccountRef { get; public set; }
    public decimal Balance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BalanceSpecified { get; public set; }
    public decimal BillRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillRateSpecified { get; public set; }
    [XmlElementAttribute]
public DateTime OpenBalanceDate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool OpenBalanceDateSpecified { get; public set; }
    public decimal CreditLimit { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CreditLimitSpecified { get; public set; }
    public string AcctNum { get; public set; }
    public bool Vendor1099 { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool Vendor1099Specified { get; public set; }
    public bool T4AEligible { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool T4AEligibleSpecified { get; public set; }
    public bool T5018Eligible { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool T5018EligibleSpecified { get; public set; }
    public ReferenceType CurrencyRef { get; public set; }
    public bool TDSEnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TDSEnabledSpecified { get; public set; }
    public int TDSEntityTypeId { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TDSEntityTypeIdSpecified { get; public set; }
    public int TDSSectionTypeId { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TDSSectionTypeIdSpecified { get; public set; }
    public bool TDSOverrideThreshold { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TDSOverrideThresholdSpecified { get; public set; }
    public string TaxReportingBasis { get; public set; }
    public ReferenceType APAccountRef { get; public set; }
    public IntuitAnyType VendorEx { get; public set; }
    public string GSTIN { get; public set; }
    public string GSTRegistrationType { get; public set; }
    public bool IsSubContractor { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IsSubContractorSpecified { get; public set; }
    public string SubcontractorType { get; public set; }
    public string CISRate { get; public set; }
    public bool HasTPAR { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool HasTPARSpecified { get; public set; }
    public VendorBankAccountDetail VendorPaymentBankDetail { get; public set; }
    public string Source { get; public set; }
    public decimal CostRate { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool CostRateSpecified { get; public set; }
    public string get_ContactName();
    public void set_ContactName(string value);
    public string get_AltContactName();
    public void set_AltContactName(string value);
    public string get_Notes();
    public void set_Notes(string value);
    public PhysicalAddress get_BillAddr();
    public void set_BillAddr(PhysicalAddress value);
    public PhysicalAddress get_ShipAddr();
    public void set_ShipAddr(PhysicalAddress value);
    public PhysicalAddress[] get_OtherAddr();
    public void set_OtherAddr(PhysicalAddress[] value);
    public string get_TaxCountry();
    public void set_TaxCountry(string value);
    public string get_TaxIdentifier();
    public void set_TaxIdentifier(string value);
    public DateTime get_TaxIdEffectiveDate();
    public void set_TaxIdEffectiveDate(DateTime value);
    public bool get_TaxIdEffectiveDateSpecified();
    public void set_TaxIdEffectiveDateSpecified(bool value);
    public string get_BusinessNumber();
    public void set_BusinessNumber(string value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public ReferenceType get_VendorTypeRef();
    public void set_VendorTypeRef(ReferenceType value);
    public ReferenceType get_TermRef();
    public void set_TermRef(ReferenceType value);
    public ReferenceType get_PrefillAccountRef();
    public void set_PrefillAccountRef(ReferenceType value);
    public decimal get_Balance();
    public void set_Balance(decimal value);
    public bool get_BalanceSpecified();
    public void set_BalanceSpecified(bool value);
    public decimal get_BillRate();
    public void set_BillRate(decimal value);
    public bool get_BillRateSpecified();
    public void set_BillRateSpecified(bool value);
    public DateTime get_OpenBalanceDate();
    public void set_OpenBalanceDate(DateTime value);
    public bool get_OpenBalanceDateSpecified();
    public void set_OpenBalanceDateSpecified(bool value);
    public decimal get_CreditLimit();
    public void set_CreditLimit(decimal value);
    public bool get_CreditLimitSpecified();
    public void set_CreditLimitSpecified(bool value);
    public string get_AcctNum();
    public void set_AcctNum(string value);
    public bool get_Vendor1099();
    public void set_Vendor1099(bool value);
    public bool get_Vendor1099Specified();
    public void set_Vendor1099Specified(bool value);
    public bool get_T4AEligible();
    public void set_T4AEligible(bool value);
    public bool get_T4AEligibleSpecified();
    public void set_T4AEligibleSpecified(bool value);
    public bool get_T5018Eligible();
    public void set_T5018Eligible(bool value);
    public bool get_T5018EligibleSpecified();
    public void set_T5018EligibleSpecified(bool value);
    public ReferenceType get_CurrencyRef();
    public void set_CurrencyRef(ReferenceType value);
    public bool get_TDSEnabled();
    public void set_TDSEnabled(bool value);
    public bool get_TDSEnabledSpecified();
    public void set_TDSEnabledSpecified(bool value);
    public int get_TDSEntityTypeId();
    public void set_TDSEntityTypeId(int value);
    public bool get_TDSEntityTypeIdSpecified();
    public void set_TDSEntityTypeIdSpecified(bool value);
    public int get_TDSSectionTypeId();
    public void set_TDSSectionTypeId(int value);
    public bool get_TDSSectionTypeIdSpecified();
    public void set_TDSSectionTypeIdSpecified(bool value);
    public bool get_TDSOverrideThreshold();
    public void set_TDSOverrideThreshold(bool value);
    public bool get_TDSOverrideThresholdSpecified();
    public void set_TDSOverrideThresholdSpecified(bool value);
    public string get_TaxReportingBasis();
    public void set_TaxReportingBasis(string value);
    public ReferenceType get_APAccountRef();
    public void set_APAccountRef(ReferenceType value);
    public IntuitAnyType get_VendorEx();
    public void set_VendorEx(IntuitAnyType value);
    public string get_GSTIN();
    public void set_GSTIN(string value);
    public string get_GSTRegistrationType();
    public void set_GSTRegistrationType(string value);
    public bool get_IsSubContractor();
    public void set_IsSubContractor(bool value);
    public bool get_IsSubContractorSpecified();
    public void set_IsSubContractorSpecified(bool value);
    public string get_SubcontractorType();
    public void set_SubcontractorType(string value);
    public string get_CISRate();
    public void set_CISRate(string value);
    public bool get_HasTPAR();
    public void set_HasTPAR(bool value);
    public bool get_HasTPARSpecified();
    public void set_HasTPARSpecified(bool value);
    public VendorBankAccountDetail get_VendorPaymentBankDetail();
    public void set_VendorPaymentBankDetail(VendorBankAccountDetail value);
    public string get_Source();
    public void set_Source(string value);
    public decimal get_CostRate();
    public void set_CostRate(decimal value);
    public bool get_CostRateSpecified();
    public void set_CostRateSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.VendorAndPurchasesPrefs : object {
    private bool enableBillsField;
    private bool enableBillsFieldSpecified;
    private bool trackingByCustomerField;
    private bool trackingByCustomerFieldSpecified;
    private bool billableExpenseTrackingField;
    private bool billableExpenseTrackingFieldSpecified;
    private ReferenceType defaultTermsField;
    private decimal defaultMarkupField;
    private bool defaultMarkupFieldSpecified;
    private ReferenceType defaultMarkupAccountField;
    private bool automaticBillPaymentField;
    private bool automaticBillPaymentFieldSpecified;
    private bool tPAREnabledField;
    private bool tPAREnabledFieldSpecified;
    private CustomFieldDefinition[] pOCustomFieldField;
    private string msgToVendorsField;
    private bool usingInventoryField;
    private bool usingInventoryFieldSpecified;
    private bool usingMultiLocationInventoryField;
    private bool usingMultiLocationInventoryFieldSpecified;
    private int daysBillsAreDueField;
    private bool daysBillsAreDueFieldSpecified;
    private ReferenceType discountAccountRefField;
    public bool EnableBills { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool EnableBillsSpecified { get; public set; }
    public bool TrackingByCustomer { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TrackingByCustomerSpecified { get; public set; }
    public bool BillableExpenseTracking { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BillableExpenseTrackingSpecified { get; public set; }
    public ReferenceType DefaultTerms { get; public set; }
    public decimal DefaultMarkup { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultMarkupSpecified { get; public set; }
    public ReferenceType DefaultMarkupAccount { get; public set; }
    public bool AutomaticBillPayment { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool AutomaticBillPaymentSpecified { get; public set; }
    public bool TPAREnabled { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool TPAREnabledSpecified { get; public set; }
    [XmlElementAttribute("POCustomField")]
public CustomFieldDefinition[] POCustomField { get; public set; }
    public string MsgToVendors { get; public set; }
    public bool UsingInventory { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UsingInventorySpecified { get; public set; }
    public bool UsingMultiLocationInventory { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool UsingMultiLocationInventorySpecified { get; public set; }
    public int DaysBillsAreDue { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DaysBillsAreDueSpecified { get; public set; }
    public ReferenceType DiscountAccountRef { get; public set; }
    public bool get_EnableBills();
    public void set_EnableBills(bool value);
    public bool get_EnableBillsSpecified();
    public void set_EnableBillsSpecified(bool value);
    public bool get_TrackingByCustomer();
    public void set_TrackingByCustomer(bool value);
    public bool get_TrackingByCustomerSpecified();
    public void set_TrackingByCustomerSpecified(bool value);
    public bool get_BillableExpenseTracking();
    public void set_BillableExpenseTracking(bool value);
    public bool get_BillableExpenseTrackingSpecified();
    public void set_BillableExpenseTrackingSpecified(bool value);
    public ReferenceType get_DefaultTerms();
    public void set_DefaultTerms(ReferenceType value);
    public decimal get_DefaultMarkup();
    public void set_DefaultMarkup(decimal value);
    public bool get_DefaultMarkupSpecified();
    public void set_DefaultMarkupSpecified(bool value);
    public ReferenceType get_DefaultMarkupAccount();
    public void set_DefaultMarkupAccount(ReferenceType value);
    public bool get_AutomaticBillPayment();
    public void set_AutomaticBillPayment(bool value);
    public bool get_AutomaticBillPaymentSpecified();
    public void set_AutomaticBillPaymentSpecified(bool value);
    public bool get_TPAREnabled();
    public void set_TPAREnabled(bool value);
    public bool get_TPAREnabledSpecified();
    public void set_TPAREnabledSpecified(bool value);
    public CustomFieldDefinition[] get_POCustomField();
    public void set_POCustomField(CustomFieldDefinition[] value);
    public string get_MsgToVendors();
    public void set_MsgToVendors(string value);
    public bool get_UsingInventory();
    public void set_UsingInventory(bool value);
    public bool get_UsingInventorySpecified();
    public void set_UsingInventorySpecified(bool value);
    public bool get_UsingMultiLocationInventory();
    public void set_UsingMultiLocationInventory(bool value);
    public bool get_UsingMultiLocationInventorySpecified();
    public void set_UsingMultiLocationInventorySpecified(bool value);
    public int get_DaysBillsAreDue();
    public void set_DaysBillsAreDue(int value);
    public bool get_DaysBillsAreDueSpecified();
    public void set_DaysBillsAreDueSpecified(bool value);
    public ReferenceType get_DiscountAccountRef();
    public void set_DiscountAccountRef(ReferenceType value);
}
public class Intuit.Ipp.Data.VendorBalance : ReportQueryBase {
}
public class Intuit.Ipp.Data.VendorBalanceDetail : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.VendorBankAccountDetail : object {
    private string bankBranchIdentifierField;
    private string bankAccountNumberField;
    private string bankAccountNameField;
    private string statementTextField;
    public string BankBranchIdentifier { get; public set; }
    public string BankAccountNumber { get; public set; }
    public string BankAccountName { get; public set; }
    public string StatementText { get; public set; }
    public string get_BankBranchIdentifier();
    public void set_BankBranchIdentifier(string value);
    public string get_BankAccountNumber();
    public void set_BankAccountNumber(string value);
    public string get_BankAccountName();
    public void set_BankAccountName(string value);
    public string get_StatementText();
    public void set_StatementText(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.VendorCredit : PurchaseByVendor {
    private PhysicalAddress vendorAddrField;
    private IntuitAnyType vendorCreditExField;
    private decimal balanceField;
    private bool balanceFieldSpecified;
    private bool includeInAnnualTPARField;
    private bool includeInAnnualTPARFieldSpecified;
    public PhysicalAddress VendorAddr { get; public set; }
    public IntuitAnyType VendorCreditEx { get; public set; }
    public decimal Balance { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool BalanceSpecified { get; public set; }
    public bool IncludeInAnnualTPAR { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IncludeInAnnualTPARSpecified { get; public set; }
    public PhysicalAddress get_VendorAddr();
    public void set_VendorAddr(PhysicalAddress value);
    public IntuitAnyType get_VendorCreditEx();
    public void set_VendorCreditEx(IntuitAnyType value);
    public decimal get_Balance();
    public void set_Balance(decimal value);
    public bool get_BalanceSpecified();
    public void set_BalanceSpecified(bool value);
    public bool get_IncludeInAnnualTPAR();
    public void set_IncludeInAnnualTPAR(bool value);
    public bool get_IncludeInAnnualTPARSpecified();
    public void set_IncludeInAnnualTPARSpecified(bool value);
}
public class Intuit.Ipp.Data.VendorExpenses : ReportQueryBase {
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.VendorType : IntuitEntity {
    private string nameField;
    private ReferenceType parentRefField;
    private string fullyQualifiedNameField;
    private bool activeField;
    private bool activeFieldSpecified;
    public string Name { get; public set; }
    public ReferenceType ParentRef { get; public set; }
    public string FullyQualifiedName { get; public set; }
    public bool Active { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool ActiveSpecified { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public ReferenceType get_ParentRef();
    public void set_ParentRef(ReferenceType value);
    public string get_FullyQualifiedName();
    public void set_FullyQualifiedName(string value);
    public bool get_Active();
    public void set_Active(bool value);
    public bool get_ActiveSpecified();
    public void set_ActiveSpecified(bool value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Warning : object {
    private string messageField;
    private string detailField;
    private string codeField;
    private string elementField;
    public string Message { get; public set; }
    public string Detail { get; public set; }
    [XmlAttributeAttribute]
public string code { get; public set; }
    [XmlAttributeAttribute]
public string element { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    public string get_Detail();
    public void set_Detail(string value);
    public string get_code();
    public void set_code(string value);
    public string get_element();
    public void set_element(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.Warnings : object {
    private Warning[] warningField;
    [XmlElementAttribute("Warning")]
public Warning[] Warning { get; public set; }
    public Warning[] get_Warning();
    public void set_Warning(Warning[] value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Intuit.Ipp.Data.WebSiteAddress : object {
    private string idField;
    private string uRIField;
    private bool defaultField;
    private bool defaultFieldSpecified;
    private string tagField;
    public string Id { get; public set; }
    [XmlElementAttribute]
public string URI { get; public set; }
    public bool Default { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool DefaultSpecified { get; public set; }
    public string Tag { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_URI();
    public void set_URI(string value);
    public bool get_Default();
    public void set_Default(bool value);
    public bool get_DefaultSpecified();
    public void set_DefaultSpecified(bool value);
    public string get_Tag();
    public void set_Tag(string value);
}
[GeneratedCodeAttribute("Intuit.Ipp.XsdExtension", "1.0.0")]
[XmlTypeAttribute]
[XmlRootAttribute]
public enum Intuit.Ipp.Data.WeekEnum : Enum {
    public int value__;
    public static WeekEnum Sunday;
    public static WeekEnum Monday;
    public static WeekEnum Tuesday;
    public static WeekEnum Wednesday;
    public static WeekEnum Thursday;
    public static WeekEnum Friday;
    public static WeekEnum Saturday;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
