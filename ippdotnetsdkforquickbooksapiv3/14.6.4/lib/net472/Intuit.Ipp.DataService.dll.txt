internal class Intuit.Ipp.DataService.AsyncService : object {
    private ServiceContext serviceContext;
    private IEntity requestedEntity;
    [CompilerGeneratedAttribute]
private FindAllCallCompletedEventHandler<IEntity> OnFindAllAsynCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnAddAsyncCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnUpdateAsynCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnUpdateAccAsynCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnDoNotUpdateAccAsyncCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnDeleteAsynCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnVoidAsynCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnFindByIdAsynCompleted;
    [CompilerGeneratedAttribute]
private FindAllCallCompletedEventHandler<IEntity> OnFindByParentIdAsyncCompleted;
    [CompilerGeneratedAttribute]
private FindAllCallCompletedEventHandler<IEntity> OnFindByLevelAsyncCompleted;
    [CompilerGeneratedAttribute]
private PdfCallCompletedEventHandler<IEntity> OnGetPdfAsynCompleted;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> OnSendEmailAsynCompleted;
    [CompilerGeneratedAttribute]
private CDCCallCompletedEventHandler<IEntity> OnCDCAsynCompleted;
    public AsyncService(ServiceContext serviceContext);
    [CompilerGeneratedAttribute]
public void add_OnFindAllAsynCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnFindAllAsynCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnAddAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnAddAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnUpdateAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnUpdateAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnUpdateAccAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnUpdateAccAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnDoNotUpdateAccAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnDoNotUpdateAccAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnDeleteAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnDeleteAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnVoidAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnVoidAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnFindByIdAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnFindByIdAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnFindByParentIdAsyncCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnFindByParentIdAsyncCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnFindByLevelAsyncCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnFindByLevelAsyncCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnGetPdfAsynCompleted(PdfCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnGetPdfAsynCompleted(PdfCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnSendEmailAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnSendEmailAsynCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void add_OnCDCAsynCompleted(CDCCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public void remove_OnCDCAsynCompleted(CDCCallCompletedEventHandler<IEntity> value);
    public void FindAllAsync(T entity, int startPosition, int maxResults);
    public void FindAllAsync(T entity);
    public void AddAsync(T entity);
    public void UpdateAsync(T entity);
    public void UpdateAccAsync(T entity);
    public void DoNotUpdateAccAsync(T entity);
    public void DeleteAsync(T entity);
    public void VoidAsync(T entity);
    public void GetPdfAsync(T entity);
    public void GetPdfCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    public void SendEmailAsync(T entity, string sendToEmail);
    public void SendEmailCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    public void FindByIdAsync(T entity);
    public void FindByIdCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    public void FindByLevelAsync(T entity);
    public void FindByLevelAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    public void FindByParentIdAsync(T entity);
    public void FindByParentIdAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    public void CDCAsync(List`1<IEntity> entityList, DateTime changedSince);
    private static IdsException CreateIdsException(Exception applicationException);
    private void FindAllAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void AddAsyncompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void UpdateAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void UpdateAccAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void DoNotUpdateAccAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void DeleteAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void VoidAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void CDCAsyncCompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
    private void PrepareHttpRequestAsync(string uri, AsyncRestHandler asyncRestHandler);
}
[DefaultMemberAttribute("Item")]
public class Intuit.Ipp.DataService.Batch : object {
    private List`1<BatchItemRequest> batchRequests;
    private List`1<BatchItemResponse> batchResponses;
    private List`1<IntuitBatchResponse> intuitBatchItemResponses;
    private ServiceContext serviceContext;
    private IRestHandler restHandler;
    private IEntitySerializer responseSerializer;
    [CompilerGeneratedAttribute]
private BatchExecutionCompletedEventHandler <OnBatchExecuteAsyncCompleted>k__BackingField;
    public BatchExecutionCompletedEventHandler OnBatchExecuteAsyncCompleted { get; public set; }
    public int Count { get; }
    public ReadOnlyCollection`1<IntuitBatchResponse> IntuitBatchItemResponses { get; }
    public IntuitBatchResponse Item { get; }
    internal Batch(ServiceContext serviceContext, IRestHandler restHandler);
    [CompilerGeneratedAttribute]
public BatchExecutionCompletedEventHandler get_OnBatchExecuteAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnBatchExecuteAsyncCompleted(BatchExecutionCompletedEventHandler value);
    public int get_Count();
    public ReadOnlyCollection`1<IntuitBatchResponse> get_IntuitBatchItemResponses();
    public IntuitBatchResponse get_Item(string id);
    public bool TryGetValue(string id, IntuitBatchResponse& intuitBatchResponse);
    public void Add(string query, string id);
    public void Add(string query, string id, List`1<string> optionsData);
    public void Add(CDCQuery query, string id);
    public void Add(CDCQuery query, string id, List`1<string> optionsData);
    public void Add(IEntity entity, string id, OperationEnum operation);
    public void Add(IEntity entity, string id, OperationEnum operation, List`1<string> optionsData);
    public void Remove(string id);
    public void RemoveAll();
    public void Execute();
    public void ExecuteAsync();
    private static IdsException IterateFaultAndPrepareException(Fault fault);
    private static IntuitBatchResponse ProcessBatchItemResponse(BatchItemResponse batchitemResponse);
    private void BatchAsyncompleted(object sender, AsyncCallCompletedEventArgs eventArgs);
}
public class Intuit.Ipp.DataService.BatchExecutionCompletedEventArgs : object {
    [CompilerGeneratedAttribute]
private Batch <Batch>k__BackingField;
    [CompilerGeneratedAttribute]
private IdsException <Error>k__BackingField;
    public Batch Batch { get; public set; }
    public IdsException Error { get; public set; }
    [CompilerGeneratedAttribute]
public Batch get_Batch();
    [CompilerGeneratedAttribute]
public void set_Batch(Batch value);
    [CompilerGeneratedAttribute]
public IdsException get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(IdsException value);
}
public static class Intuit.Ipp.DataService.BatchProcessingCallback : object {
}
public class Intuit.Ipp.DataService.DataService : object {
    private ServiceContext serviceContext;
    private IRestHandler restHandler;
    [CompilerGeneratedAttribute]
private FindAllCallCompletedEventHandler<IEntity> <OnFindAllAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnAddAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnFindByIdAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private FindAllCallCompletedEventHandler<IEntity> <OnFindByLevelAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private FindAllCallCompletedEventHandler<IEntity> <OnFindByParentIdAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private PdfCallCompletedEventHandler<IEntity> <OnGetPdfAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnSendEmailAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnUpdateAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnUpdateAccAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnDoNotUpdateAccAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnDeleteAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnVoidAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CallCompletedEventHandler<IEntity> <OnRevertAsyncCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private CDCCallCompletedEventHandler<IEntity> <OnCDCAsyncCompleted>k__BackingField;
    public FindAllCallCompletedEventHandler<IEntity> OnFindAllAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnAddAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnFindByIdAsyncCompleted { get; public set; }
    public FindAllCallCompletedEventHandler<IEntity> OnFindByLevelAsyncCompleted { get; public set; }
    public FindAllCallCompletedEventHandler<IEntity> OnFindByParentIdAsyncCompleted { get; public set; }
    public PdfCallCompletedEventHandler<IEntity> OnGetPdfAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnSendEmailAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnUpdateAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnUpdateAccAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnDoNotUpdateAccAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnDeleteAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnVoidAsyncCompleted { get; public set; }
    public CallCompletedEventHandler<IEntity> OnRevertAsyncCompleted { get; public set; }
    public CDCCallCompletedEventHandler<IEntity> OnCDCAsyncCompleted { get; public set; }
    public DataService(ServiceContext serviceContext);
    [CompilerGeneratedAttribute]
public FindAllCallCompletedEventHandler<IEntity> get_OnFindAllAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnFindAllAsyncCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnAddAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnAddAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnFindByIdAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnFindByIdAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public FindAllCallCompletedEventHandler<IEntity> get_OnFindByLevelAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnFindByLevelAsyncCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public FindAllCallCompletedEventHandler<IEntity> get_OnFindByParentIdAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnFindByParentIdAsyncCompleted(FindAllCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public PdfCallCompletedEventHandler<IEntity> get_OnGetPdfAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnGetPdfAsyncCompleted(PdfCallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnSendEmailAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnSendEmailAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnUpdateAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnUpdateAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnUpdateAccAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnUpdateAccAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnDoNotUpdateAccAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnDoNotUpdateAccAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnDeleteAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnDeleteAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnVoidAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnVoidAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CallCompletedEventHandler<IEntity> get_OnRevertAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnRevertAsyncCompleted(CallCompletedEventHandler<IEntity> value);
    [CompilerGeneratedAttribute]
public CDCCallCompletedEventHandler<IEntity> get_OnCDCAsyncCompleted();
    [CompilerGeneratedAttribute]
public void set_OnCDCAsyncCompleted(CDCCallCompletedEventHandler<IEntity> value);
    public sealed virtual T Add(T entity);
    public sealed virtual T Delete(T entity);
    public sealed virtual T Void(T entity);
    public sealed virtual T Update(T entity);
    public T UpdateAccountOnTxns(T entity);
    public T DoNotUpdateAccountOnTxns(T entity);
    public Byte[] GetPdf(T entity);
    public T SendEmail(T entity, string sendToEmail);
    private void ProcessSendToEmail(string sendToEmail);
    private bool IsValidEmailAddress(string emailAddress);
    public sealed virtual T FindById(T entity);
    public sealed virtual ReadOnlyCollection`1<T> FindByParentId(T entity);
    public sealed virtual ReadOnlyCollection`1<T> FindByLevel(T entity);
    public sealed virtual ReadOnlyCollection`1<T> FindAll(T entity, int startPosition, int maxResults);
    public Batch CreateNewBatch();
    public IntuitCDCResponse CDC(List`1<IEntity> entityList, DateTime changedSince);
    public void FindAllAsync(T entity, int startPosition, int maxResults);
    public void FindByLevelAsync(T entity);
    public void FindByParentIdAsync(T entity);
    public void FindByIdAsync(T entity);
    public void GetPdfAsync(T entity);
    public void SendEmailAsync(T entity, string sendToEmail);
    private void CheckForPdfAllowedEntities(IEntity entity);
    private void CheckForVoidAllowedEntities(IEntity entity);
    public void CDCAsync(List`1<IEntity> entityList, DateTime changedSince);
    public void AddAsync(T entity);
    public void DeleteAsync(T entity);
    public void VoidAsync(T entity);
    public void UpdateAsync(T entity);
    public void UpdateAccAsync(T entity);
    public void DoNotUpdateAccAsync(T entity);
    internal static void ServiceContextValidation(ServiceContext serviceContext);
    private void FindAllAsyncCompleted(object sender, FindAllCallCompletedEventArgs eventArgs);
    private void FindByIdAsynCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void FindByLevelAsyncCompleted(object sender, FindAllCallCompletedEventArgs eventArgs);
    private void FindByParentIdAsyncCompleted(object sender, FindAllCallCompletedEventArgs eventArgs);
    private void GetPdfAsynCompleted(object sender, PdfCallCompletedEventArgs eventArgs);
    private void SendEmailAsynCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void AddAsyncCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void DeleteAsyncCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void VoidAsyncCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void UpdateAsyncCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void UpdateAccAsyncCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void DoNotUpdateAccAsyncCompleted(object sender, CallCompletedEventArgs`1<IEntity> eventArgs);
    private void CDCAsyncCompleted(object sender, CDCCallCompletedEventArgs eventArgs);
    public Attachable Upload(Attachable entity, Stream stream);
    public Byte[] Download(Attachable entity);
    private List`1<T> PrepareAndExecuteHttpRequest(string uri);
}
public interface Intuit.Ipp.DataService.IDataService {
    public abstract virtual T Add(T entity);
    public abstract virtual T Delete(T entity);
    public abstract virtual T Void(T entity);
    public abstract virtual T Update(T entity);
    public abstract virtual T FindById(T entity);
    public abstract virtual ReadOnlyCollection`1<T> FindByParentId(T entity);
    public abstract virtual ReadOnlyCollection`1<T> FindByLevel(T entity);
    public abstract virtual ReadOnlyCollection`1<T> FindAll(T entity, int pageNumber, int pageSize);
}
internal enum Intuit.Ipp.DataService.IdsReportResource : Enum {
    public int value__;
    public static IdsReportResource none;
    public static IdsReportResource accountbalances;
    public static IdsReportResource balancesheet;
    public static IdsReportResource customerswhooweme;
    public static IdsReportResource advancedreport;
    public static IdsReportResource incomebreakdown;
    public static IdsReportResource profitandloss;
    public static IdsReportResource salessummary;
    public static IdsReportResource topcustomersbysales;
}
internal enum Intuit.Ipp.DataService.IdsResource : Enum {
    public int value__;
    public static IdsResource user;
    public static IdsResource account;
    public static IdsResource bill;
    public static IdsResource billpayment;
    public static IdsResource billpaymentcreditcard;
    public static IdsResource bomcomponent;
    public static IdsResource buildassembly;
    public static IdsResource charge;
    public static IdsResource check;
    public static IdsResource creditcardcharge;
    public static IdsResource creditcardcredit;
    public static IdsResource creditmemo;
    public static IdsResource currencyinfo;
    public static IdsResource customer;
    public static IdsResource customermsg;
    public static IdsResource customertype;
    public static IdsResource deposit;
    public static IdsResource discount;
    public static IdsResource employee;
    public static IdsResource estimate;
    public static IdsResource fixedasset;
    public static IdsResource incomebreakdown;
    public static IdsResource inventoryadjustment;
    public static IdsResource inventorysite;
    public static IdsResource inventorytransfer;
    public static IdsResource invoice;
    public static IdsResource item;
    public static IdsResource itemconsolidated;
    public static IdsResource itemreceipt;
    public static IdsResource job;
    public static IdsResource jobtype;
    public static IdsResource journalentry;
    public static IdsResource othername;
    public static IdsResource payment;
    public static IdsResource paymentmethod;
    public static IdsResource payrollitem;
    public static IdsResource payrollnonwageitem;
    public static IdsResource purchaseorder;
    public static IdsResource salesorder;
    public static IdsResource salesreceipt;
    public static IdsResource salesrep;
    public static IdsResource salestax;
    public static IdsResource salestaxcode;
    public static IdsResource salestaxgroup;
    public static IdsResource shipmethod;
    public static IdsResource status;
    public static IdsResource task;
    public static IdsResource templatename;
    public static IdsResource timeactivity;
    public static IdsResource uom;
    public static IdsResource vendor;
    public static IdsResource vendorcredit;
    public static IdsResource vendortype;
    public static IdsResource preferences;
    public static IdsResource syncactivityrequest;
    public static IdsResource salesterm;
    public static IdsResource Class;
    public static IdsResource creditcardrefund;
    public static IdsResource companymetadata;
    public static IdsResource customfielddefinition;
    public static IdsResource namevalue;
    public static IdsResource recordcount;
}
public class Intuit.Ipp.DataService.IntuitBatchResponse : object {
    private string batchItemId;
    private ResponseType responseType;
    private IEntity entity;
    private List`1<IEntity> entities;
    private IdsException exception;
    private IntuitCDCResponse cdcResponse;
    private QueryResponse queryResponse;
    public IEntity Entity { get; public set; }
    public ReadOnlyCollection`1<IEntity> Entities { get; }
    public IdsException Exception { get; public set; }
    public ResponseType ResponseType { get; public set; }
    public string Id { get; public set; }
    public IntuitCDCResponse CDCResponse { get; public set; }
    public QueryResponse QueryResponse { get; public set; }
    public IEntity get_Entity();
    public void set_Entity(IEntity value);
    public ReadOnlyCollection`1<IEntity> get_Entities();
    public IdsException get_Exception();
    public void set_Exception(IdsException value);
    public ResponseType get_ResponseType();
    public void set_ResponseType(ResponseType value);
    public string get_Id();
    public void set_Id(string value);
    public IntuitCDCResponse get_CDCResponse();
    public void set_CDCResponse(IntuitCDCResponse value);
    public QueryResponse get_QueryResponse();
    public void set_QueryResponse(QueryResponse value);
    internal void AddEntities(IEntity entity);
}
public class Intuit.Ipp.DataService.IntuitCDCResponse : object {
    public Dictionary`2<string, List`1<IEntity>> entities;
    public Dictionary`2<string, IdsException> exceptions;
    public List`1<IEntity> getEntity(string key);
}
public enum Intuit.Ipp.DataService.IntuitResponseStatus : Enum {
    public int value__;
    public static IntuitResponseStatus Voided;
    public static IntuitResponseStatus Deleted;
}
[CompilerGeneratedAttribute]
public class Intuit.Ipp.DataService.NamespaceDoc : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Intuit.Ipp.DataService.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string BatchIdAlreadyUsed { get; }
    internal static string BatchItemIdNotFound { get; }
    internal static string batchItemsExceededMessage { get; }
    internal static string CommunicationErrorMessage { get; }
    internal static string EmailAddressNotValid { get; }
    internal static string EmailAddressNotValidExceptionMessage { get; }
    internal static string EntityConversionFailedMessage { get; }
    internal static string EntityIdNotNullMessage { get; }
    internal static string EntityString { get; }
    internal static string ExceptionGeneratedMessage { get; }
    internal static string FieldNullOrEmpty { get; }
    internal static string IdsLoggerNotNullMessage { get; }
    internal static string IdString { get; }
    internal static string OperationNotSupportedOnEntity { get; }
    internal static string PageNumberString { get; }
    internal static string PageSizeString { get; }
    internal static string ParameterNotNullMessage { get; }
    internal static string ParameterZeroNegativeValueMessage { get; }
    internal static string PdfOperationNotSupportedOnEntity { get; }
    internal static string RequestValidatorNotNullMessage { get; }
    internal static string ResponseStreamNullOrEmptyMessage { get; }
    internal static string ServiceContextNotNullMessage { get; }
    internal static string ServiceContextParameterName { get; }
    internal static string StatusNotDeleted { get; }
    internal static string StatusNotVoided { get; }
    internal static string StringParameterNullOrEmpty { get; }
    internal static string VoidOperationNotSupportedOnEntity { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_BatchIdAlreadyUsed();
    internal static string get_BatchItemIdNotFound();
    internal static string get_batchItemsExceededMessage();
    internal static string get_CommunicationErrorMessage();
    internal static string get_EmailAddressNotValid();
    internal static string get_EmailAddressNotValidExceptionMessage();
    internal static string get_EntityConversionFailedMessage();
    internal static string get_EntityIdNotNullMessage();
    internal static string get_EntityString();
    internal static string get_ExceptionGeneratedMessage();
    internal static string get_FieldNullOrEmpty();
    internal static string get_IdsLoggerNotNullMessage();
    internal static string get_IdString();
    internal static string get_OperationNotSupportedOnEntity();
    internal static string get_PageNumberString();
    internal static string get_PageSizeString();
    internal static string get_ParameterNotNullMessage();
    internal static string get_ParameterZeroNegativeValueMessage();
    internal static string get_PdfOperationNotSupportedOnEntity();
    internal static string get_RequestValidatorNotNullMessage();
    internal static string get_ResponseStreamNullOrEmptyMessage();
    internal static string get_ServiceContextNotNullMessage();
    internal static string get_ServiceContextParameterName();
    internal static string get_StatusNotDeleted();
    internal static string get_StatusNotVoided();
    internal static string get_StringParameterNullOrEmpty();
    internal static string get_VoidOperationNotSupportedOnEntity();
}
public enum Intuit.Ipp.DataService.ResponseType : Enum {
    public int value__;
    public static ResponseType Entity;
    public static ResponseType Query;
    public static ResponseType Exception;
    public static ResponseType CdcQuery;
}
internal class Intuit.Ipp.DataService.ServicesHelper : object {
    internal static bool IsTypeNull(IEntity entity);
    internal static void ValidateEntity(T entity, ServiceContext serviceContext);
    internal static void ValidateId(string Id, ServiceContext serviceContext);
    internal static void ValidateEntityType(T entity, string type, ServiceContext serviceContext);
    internal static void ValidateObject(object obj, ServiceContext serviceContext);
    internal static void ValidateIntuitEntity(IntuitEntity intuitEntity, ServiceContext serviceContext);
    internal static ReferenceType PrepareByParentId(IEntity entity, ServiceContext serviceContext);
    internal static string PrepareByLevel(IEntity entity, ServiceContext serviceContext);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
