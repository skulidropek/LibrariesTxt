public class Jaeger.Thrift.Agent.Agent : object {
}
[ExtensionAttribute]
public static class Jaeger.Thrift.Agent.agentExtensions : object {
    [ExtensionAttribute]
public static bool Equals(List`1<Annotation> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Annotation> instance);
    [ExtensionAttribute]
public static List`1<Annotation> DeepCopy(List`1<Annotation> source);
    [ExtensionAttribute]
public static bool Equals(List`1<BinaryAnnotation> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<BinaryAnnotation> instance);
    [ExtensionAttribute]
public static List`1<BinaryAnnotation> DeepCopy(List`1<BinaryAnnotation> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Span> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Span> instance);
    [ExtensionAttribute]
public static List`1<Span> DeepCopy(List`1<Span> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Log> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Log> instance);
    [ExtensionAttribute]
public static List`1<Log> DeepCopy(List`1<Log> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Span> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Span> instance);
    [ExtensionAttribute]
public static List`1<Span> DeepCopy(List`1<Span> source);
    [ExtensionAttribute]
public static bool Equals(List`1<SpanRef> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<SpanRef> instance);
    [ExtensionAttribute]
public static List`1<SpanRef> DeepCopy(List`1<SpanRef> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Tag> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Tag> instance);
    [ExtensionAttribute]
public static List`1<Tag> DeepCopy(List`1<Tag> source);
}
public class Jaeger.Thrift.Agent.AggregationValidator : object {
}
[ExtensionAttribute]
public static class Jaeger.Thrift.Agent.baggageExtensions : object {
    [ExtensionAttribute]
public static bool Equals(List`1<BaggageRestriction> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<BaggageRestriction> instance);
    [ExtensionAttribute]
public static List`1<BaggageRestriction> DeepCopy(List`1<BaggageRestriction> source);
}
public class Jaeger.Thrift.Agent.BaggageRestriction : object {
    [CompilerGeneratedAttribute]
private string <BaggageKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxValueLength>k__BackingField;
    public string BaggageKey { get; public set; }
    public int MaxValueLength { get; public set; }
    public BaggageRestriction(string baggageKey, int maxValueLength);
    [CompilerGeneratedAttribute]
public string get_BaggageKey();
    [CompilerGeneratedAttribute]
public void set_BaggageKey(string value);
    [CompilerGeneratedAttribute]
public int get_MaxValueLength();
    [CompilerGeneratedAttribute]
public void set_MaxValueLength(int value);
    public BaggageRestriction DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.BaggageRestriction/<ReadAsync>d__11")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.BaggageRestriction/<WriteAsync>d__12")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.BaggageRestrictionManager : object {
}
public class Jaeger.Thrift.Agent.Dependencies : object {
    [CompilerGeneratedAttribute]
private List`1<DependencyLink> <Links>k__BackingField;
    public List`1<DependencyLink> Links { get; public set; }
    public Dependencies(List`1<DependencyLink> links);
    [CompilerGeneratedAttribute]
public List`1<DependencyLink> get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(List`1<DependencyLink> value);
    public Dependencies DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Dependencies/<ReadAsync>d__7")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Dependencies/<WriteAsync>d__8")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.Dependency : object {
}
[ExtensionAttribute]
public static class Jaeger.Thrift.Agent.dependencyExtensions : object {
    [ExtensionAttribute]
public static bool Equals(List`1<DependencyLink> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<DependencyLink> instance);
    [ExtensionAttribute]
public static List`1<DependencyLink> DeepCopy(List`1<DependencyLink> source);
}
public class Jaeger.Thrift.Agent.DependencyLink : object {
    [CompilerGeneratedAttribute]
private string <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Child>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CallCount>k__BackingField;
    public string Parent { get; public set; }
    public string Child { get; public set; }
    public long CallCount { get; public set; }
    public DependencyLink(string parent, string child, long callCount);
    [CompilerGeneratedAttribute]
public string get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(string value);
    [CompilerGeneratedAttribute]
public string get_Child();
    [CompilerGeneratedAttribute]
public void set_Child(string value);
    [CompilerGeneratedAttribute]
public long get_CallCount();
    [CompilerGeneratedAttribute]
public void set_CallCount(long value);
    public DependencyLink DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.DependencyLink/<ReadAsync>d__15")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.DependencyLink/<WriteAsync>d__16")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.OperationSamplingStrategy : object {
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private ProbabilisticSamplingStrategy <ProbabilisticSampling>k__BackingField;
    public string Operation { get; public set; }
    public ProbabilisticSamplingStrategy ProbabilisticSampling { get; public set; }
    public OperationSamplingStrategy(string operation, ProbabilisticSamplingStrategy probabilisticSampling);
    [CompilerGeneratedAttribute]
public string get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(string value);
    [CompilerGeneratedAttribute]
public ProbabilisticSamplingStrategy get_ProbabilisticSampling();
    [CompilerGeneratedAttribute]
public void set_ProbabilisticSampling(ProbabilisticSamplingStrategy value);
    public OperationSamplingStrategy DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.OperationSamplingStrategy/<ReadAsync>d__11")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.OperationSamplingStrategy/<WriteAsync>d__12")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.PerOperationSamplingStrategies : object {
    private double _defaultUpperBoundTracesPerSecond;
    [CompilerGeneratedAttribute]
private double <DefaultSamplingProbability>k__BackingField;
    [CompilerGeneratedAttribute]
private double <DefaultLowerBoundTracesPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<OperationSamplingStrategy> <PerOperationStrategies>k__BackingField;
    public Isset __isset;
    public double DefaultSamplingProbability { get; public set; }
    public double DefaultLowerBoundTracesPerSecond { get; public set; }
    public List`1<OperationSamplingStrategy> PerOperationStrategies { get; public set; }
    public double DefaultUpperBoundTracesPerSecond { get; public set; }
    public PerOperationSamplingStrategies(double defaultSamplingProbability, double defaultLowerBoundTracesPerSecond, List`1<OperationSamplingStrategy> perOperationStrategies);
    [CompilerGeneratedAttribute]
public double get_DefaultSamplingProbability();
    [CompilerGeneratedAttribute]
public void set_DefaultSamplingProbability(double value);
    [CompilerGeneratedAttribute]
public double get_DefaultLowerBoundTracesPerSecond();
    [CompilerGeneratedAttribute]
public void set_DefaultLowerBoundTracesPerSecond(double value);
    [CompilerGeneratedAttribute]
public List`1<OperationSamplingStrategy> get_PerOperationStrategies();
    [CompilerGeneratedAttribute]
public void set_PerOperationStrategies(List`1<OperationSamplingStrategy> value);
    public double get_DefaultUpperBoundTracesPerSecond();
    public void set_DefaultUpperBoundTracesPerSecond(double value);
    public PerOperationSamplingStrategies DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.PerOperationSamplingStrategies/<ReadAsync>d__21")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.PerOperationSamplingStrategies/<WriteAsync>d__22")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.ProbabilisticSamplingStrategy : object {
    [CompilerGeneratedAttribute]
private double <SamplingRate>k__BackingField;
    public double SamplingRate { get; public set; }
    public ProbabilisticSamplingStrategy(double samplingRate);
    [CompilerGeneratedAttribute]
public double get_SamplingRate();
    [CompilerGeneratedAttribute]
public void set_SamplingRate(double value);
    public ProbabilisticSamplingStrategy DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ProbabilisticSamplingStrategy/<ReadAsync>d__7")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ProbabilisticSamplingStrategy/<WriteAsync>d__8")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.RateLimitingSamplingStrategy : object {
    [CompilerGeneratedAttribute]
private short <MaxTracesPerSecond>k__BackingField;
    public short MaxTracesPerSecond { get; public set; }
    public RateLimitingSamplingStrategy(short maxTracesPerSecond);
    [CompilerGeneratedAttribute]
public short get_MaxTracesPerSecond();
    [CompilerGeneratedAttribute]
public void set_MaxTracesPerSecond(short value);
    public RateLimitingSamplingStrategy DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.RateLimitingSamplingStrategy/<ReadAsync>d__7")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.RateLimitingSamplingStrategy/<WriteAsync>d__8")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[ExtensionAttribute]
public static class Jaeger.Thrift.Agent.samplingExtensions : object {
    [ExtensionAttribute]
public static bool Equals(List`1<OperationSamplingStrategy> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<OperationSamplingStrategy> instance);
    [ExtensionAttribute]
public static List`1<OperationSamplingStrategy> DeepCopy(List`1<OperationSamplingStrategy> source);
}
public class Jaeger.Thrift.Agent.SamplingManager : object {
}
public class Jaeger.Thrift.Agent.SamplingStrategyResponse : object {
    private ProbabilisticSamplingStrategy _probabilisticSampling;
    private RateLimitingSamplingStrategy _rateLimitingSampling;
    private PerOperationSamplingStrategies _operationSampling;
    [CompilerGeneratedAttribute]
private SamplingStrategyType <StrategyType>k__BackingField;
    public Isset __isset;
    public SamplingStrategyType StrategyType { get; public set; }
    public ProbabilisticSamplingStrategy ProbabilisticSampling { get; public set; }
    public RateLimitingSamplingStrategy RateLimitingSampling { get; public set; }
    public PerOperationSamplingStrategies OperationSampling { get; public set; }
    public SamplingStrategyResponse(SamplingStrategyType strategyType);
    [CompilerGeneratedAttribute]
public SamplingStrategyType get_StrategyType();
    [CompilerGeneratedAttribute]
public void set_StrategyType(SamplingStrategyType value);
    public ProbabilisticSamplingStrategy get_ProbabilisticSampling();
    public void set_ProbabilisticSampling(ProbabilisticSamplingStrategy value);
    public RateLimitingSamplingStrategy get_RateLimitingSampling();
    public void set_RateLimitingSampling(RateLimitingSamplingStrategy value);
    public PerOperationSamplingStrategies get_OperationSampling();
    public void set_OperationSampling(PerOperationSamplingStrategies value);
    public SamplingStrategyResponse DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.SamplingStrategyResponse/<ReadAsync>d__21")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.SamplingStrategyResponse/<WriteAsync>d__22")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public enum Jaeger.Thrift.Agent.SamplingStrategyType : Enum {
    public int value__;
    public static SamplingStrategyType PROBABILISTIC;
    public static SamplingStrategyType RATE_LIMITING;
}
public class Jaeger.Thrift.Agent.ServiceThrottlingConfig : object {
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private ThrottlingConfig <Config>k__BackingField;
    public string ServiceName { get; public set; }
    public ThrottlingConfig Config { get; public set; }
    public ServiceThrottlingConfig(string serviceName, ThrottlingConfig config);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public ThrottlingConfig get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(ThrottlingConfig value);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ServiceThrottlingConfig/<ReadAsync>d__10")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ServiceThrottlingConfig/<WriteAsync>d__11")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.ThrottlingConfig : object {
    [CompilerGeneratedAttribute]
private int <MaxOperations>k__BackingField;
    [CompilerGeneratedAttribute]
private double <CreditsPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private double <MaxBalance>k__BackingField;
    public int MaxOperations { get; public set; }
    public double CreditsPerSecond { get; public set; }
    public double MaxBalance { get; public set; }
    public ThrottlingConfig(int maxOperations, double creditsPerSecond, double maxBalance);
    [CompilerGeneratedAttribute]
public int get_MaxOperations();
    [CompilerGeneratedAttribute]
public void set_MaxOperations(int value);
    [CompilerGeneratedAttribute]
public double get_CreditsPerSecond();
    [CompilerGeneratedAttribute]
public void set_CreditsPerSecond(double value);
    [CompilerGeneratedAttribute]
public double get_MaxBalance();
    [CompilerGeneratedAttribute]
public void set_MaxBalance(double value);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ThrottlingConfig/<ReadAsync>d__14")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ThrottlingConfig/<WriteAsync>d__15")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.ThrottlingResponse : object {
    [CompilerGeneratedAttribute]
private ThrottlingConfig <DefaultConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ServiceThrottlingConfig> <ServiceConfigs>k__BackingField;
    public ThrottlingConfig DefaultConfig { get; public set; }
    public List`1<ServiceThrottlingConfig> ServiceConfigs { get; public set; }
    public ThrottlingResponse(ThrottlingConfig defaultConfig, List`1<ServiceThrottlingConfig> serviceConfigs);
    [CompilerGeneratedAttribute]
public ThrottlingConfig get_DefaultConfig();
    [CompilerGeneratedAttribute]
public void set_DefaultConfig(ThrottlingConfig value);
    [CompilerGeneratedAttribute]
public List`1<ServiceThrottlingConfig> get_ServiceConfigs();
    [CompilerGeneratedAttribute]
public void set_ServiceConfigs(List`1<ServiceThrottlingConfig> value);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ThrottlingResponse/<ReadAsync>d__10")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ThrottlingResponse/<WriteAsync>d__11")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.ThrottlingService : object {
}
public class Jaeger.Thrift.Agent.ValidateTraceResponse : object {
    [CompilerGeneratedAttribute]
private bool <Ok>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TraceCount>k__BackingField;
    public bool Ok { get; public set; }
    public long TraceCount { get; public set; }
    public ValidateTraceResponse(bool ok, long traceCount);
    [CompilerGeneratedAttribute]
public bool get_Ok();
    [CompilerGeneratedAttribute]
public void set_Ok(bool value);
    [CompilerGeneratedAttribute]
public long get_TraceCount();
    [CompilerGeneratedAttribute]
public void set_TraceCount(long value);
    public ValidateTraceResponse DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ValidateTraceResponse/<ReadAsync>d__11")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.ValidateTraceResponse/<WriteAsync>d__12")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.Zipkin.Annotation : object {
    private long _timestamp;
    private string _value;
    private Endpoint _host;
    public Isset __isset;
    public long Timestamp { get; public set; }
    public string Value { get; public set; }
    public Endpoint Host { get; public set; }
    public long get_Timestamp();
    public void set_Timestamp(long value);
    public string get_Value();
    public void set_Value(string value);
    public Endpoint get_Host();
    public void set_Host(Endpoint value);
    public Annotation DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Annotation/<ReadAsync>d__16")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Annotation/<WriteAsync>d__17")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public enum Jaeger.Thrift.Agent.Zipkin.AnnotationType : Enum {
    public int value__;
    public static AnnotationType BOOL;
    public static AnnotationType BYTES;
    public static AnnotationType I16;
    public static AnnotationType I32;
    public static AnnotationType I64;
    public static AnnotationType DOUBLE;
    public static AnnotationType STRING;
}
public class Jaeger.Thrift.Agent.Zipkin.BinaryAnnotation : object {
    private string _key;
    private Byte[] _value;
    private AnnotationType _annotation_type;
    private Endpoint _host;
    public Isset __isset;
    public string Key { get; public set; }
    public Byte[] Value { get; public set; }
    public AnnotationType Annotation_type { get; public set; }
    public Endpoint Host { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    public Byte[] get_Value();
    public void set_Value(Byte[] value);
    public AnnotationType get_Annotation_type();
    public void set_Annotation_type(AnnotationType value);
    public Endpoint get_Host();
    public void set_Host(Endpoint value);
    public BinaryAnnotation DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.BinaryAnnotation/<ReadAsync>d__20")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.BinaryAnnotation/<WriteAsync>d__21")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.Zipkin.Endpoint : object {
    private int _ipv4;
    private short _port;
    private string _service_name;
    private Byte[] _ipv6;
    public Isset __isset;
    public int Ipv4 { get; public set; }
    public short Port { get; public set; }
    public string Service_name { get; public set; }
    public Byte[] Ipv6 { get; public set; }
    public int get_Ipv4();
    public void set_Ipv4(int value);
    public short get_Port();
    public void set_Port(short value);
    public string get_Service_name();
    public void set_Service_name(string value);
    public Byte[] get_Ipv6();
    public void set_Ipv6(Byte[] value);
    public Endpoint DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Endpoint/<ReadAsync>d__20")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Endpoint/<WriteAsync>d__21")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.Zipkin.Response : object {
    [CompilerGeneratedAttribute]
private bool <Ok>k__BackingField;
    public bool Ok { get; public set; }
    public Response(bool ok);
    [CompilerGeneratedAttribute]
public bool get_Ok();
    [CompilerGeneratedAttribute]
public void set_Ok(bool value);
    public Response DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Response/<ReadAsync>d__7")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Response/<WriteAsync>d__8")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.Zipkin.Span : object {
    private long _trace_id;
    private string _name;
    private long _id;
    private long _parent_id;
    private List`1<Annotation> _annotations;
    private List`1<BinaryAnnotation> _binary_annotations;
    private bool _debug;
    private long _timestamp;
    private long _duration;
    private long _trace_id_high;
    public Isset __isset;
    public long Trace_id { get; public set; }
    public string Name { get; public set; }
    public long Id { get; public set; }
    public long Parent_id { get; public set; }
    public List`1<Annotation> Annotations { get; public set; }
    public List`1<BinaryAnnotation> Binary_annotations { get; public set; }
    public bool Debug { get; public set; }
    public long Timestamp { get; public set; }
    public long Duration { get; public set; }
    public long Trace_id_high { get; public set; }
    public long get_Trace_id();
    public void set_Trace_id(long value);
    public string get_Name();
    public void set_Name(string value);
    public long get_Id();
    public void set_Id(long value);
    public long get_Parent_id();
    public void set_Parent_id(long value);
    public List`1<Annotation> get_Annotations();
    public void set_Annotations(List`1<Annotation> value);
    public List`1<BinaryAnnotation> get_Binary_annotations();
    public void set_Binary_annotations(List`1<BinaryAnnotation> value);
    public bool get_Debug();
    public void set_Debug(bool value);
    public long get_Timestamp();
    public void set_Timestamp(long value);
    public long get_Duration();
    public void set_Duration(long value);
    public long get_Trace_id_high();
    public void set_Trace_id_high(long value);
    public Span DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Span/<ReadAsync>d__44")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Agent.Zipkin.Span/<WriteAsync>d__45")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Agent.Zipkin.ZipkinCollector : object {
}
public static class Jaeger.Thrift.Agent.Zipkin.zipkincoreConstants : object {
    public static string CLIENT_SEND;
    public static string CLIENT_RECV;
    public static string SERVER_SEND;
    public static string SERVER_RECV;
    public static string MESSAGE_SEND;
    public static string MESSAGE_RECV;
    public static string WIRE_SEND;
    public static string WIRE_RECV;
    public static string CLIENT_SEND_FRAGMENT;
    public static string CLIENT_RECV_FRAGMENT;
    public static string SERVER_SEND_FRAGMENT;
    public static string SERVER_RECV_FRAGMENT;
    public static string LOCAL_COMPONENT;
    public static string CLIENT_ADDR;
    public static string SERVER_ADDR;
    public static string MESSAGE_ADDR;
}
[ExtensionAttribute]
public static class Jaeger.Thrift.Agent.Zipkin.zipkincoreExtensions : object {
    [ExtensionAttribute]
public static bool Equals(List`1<Annotation> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Annotation> instance);
    [ExtensionAttribute]
public static List`1<Annotation> DeepCopy(List`1<Annotation> source);
    [ExtensionAttribute]
public static bool Equals(List`1<BinaryAnnotation> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<BinaryAnnotation> instance);
    [ExtensionAttribute]
public static List`1<BinaryAnnotation> DeepCopy(List`1<BinaryAnnotation> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Response> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Response> instance);
    [ExtensionAttribute]
public static List`1<Response> DeepCopy(List`1<Response> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Span> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Span> instance);
    [ExtensionAttribute]
public static List`1<Span> DeepCopy(List`1<Span> source);
}
public class Jaeger.Thrift.Batch : object {
    private long _seqNo;
    private ClientStats _stats;
    [CompilerGeneratedAttribute]
private Process <Process>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Span> <Spans>k__BackingField;
    public Isset __isset;
    public Process Process { get; public set; }
    public List`1<Span> Spans { get; public set; }
    public long SeqNo { get; public set; }
    public ClientStats Stats { get; public set; }
    public Batch(Process process, List`1<Span> spans);
    [CompilerGeneratedAttribute]
public Process get_Process();
    [CompilerGeneratedAttribute]
public void set_Process(Process value);
    [CompilerGeneratedAttribute]
public List`1<Span> get_Spans();
    [CompilerGeneratedAttribute]
public void set_Spans(List`1<Span> value);
    public long get_SeqNo();
    public void set_SeqNo(long value);
    public ClientStats get_Stats();
    public void set_Stats(ClientStats value);
    public Batch DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Batch/<ReadAsync>d__21")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Batch/<WriteAsync>d__22")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.BatchSubmitResponse : object {
    [CompilerGeneratedAttribute]
private bool <Ok>k__BackingField;
    public bool Ok { get; public set; }
    public BatchSubmitResponse(bool ok);
    [CompilerGeneratedAttribute]
public bool get_Ok();
    [CompilerGeneratedAttribute]
public void set_Ok(bool value);
    public BatchSubmitResponse DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.BatchSubmitResponse/<ReadAsync>d__7")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.BatchSubmitResponse/<WriteAsync>d__8")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.ClientStats : object {
    [CompilerGeneratedAttribute]
private long <FullQueueDroppedSpans>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TooLargeDroppedSpans>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FailedToEmitSpans>k__BackingField;
    public long FullQueueDroppedSpans { get; public set; }
    public long TooLargeDroppedSpans { get; public set; }
    public long FailedToEmitSpans { get; public set; }
    public ClientStats(long fullQueueDroppedSpans, long tooLargeDroppedSpans, long failedToEmitSpans);
    [CompilerGeneratedAttribute]
public long get_FullQueueDroppedSpans();
    [CompilerGeneratedAttribute]
public void set_FullQueueDroppedSpans(long value);
    [CompilerGeneratedAttribute]
public long get_TooLargeDroppedSpans();
    [CompilerGeneratedAttribute]
public void set_TooLargeDroppedSpans(long value);
    [CompilerGeneratedAttribute]
public long get_FailedToEmitSpans();
    [CompilerGeneratedAttribute]
public void set_FailedToEmitSpans(long value);
    public ClientStats DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.ClientStats/<ReadAsync>d__15")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.ClientStats/<WriteAsync>d__16")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Collector : object {
}
public class Jaeger.Thrift.Crossdock.Downstream : object {
    private Downstream _downstream;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerRole>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private Transport <Transport>k__BackingField;
    public Isset __isset;
    public string ServiceName { get; public set; }
    public string ServerRole { get; public set; }
    public string Host { get; public set; }
    public string Port { get; public set; }
    public Transport Transport { get; public set; }
    public Downstream Downstream_ { get; public set; }
    public Downstream(string serviceName, string serverRole, string host, string port, Transport transport);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public string get_ServerRole();
    [CompilerGeneratedAttribute]
public void set_ServerRole(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(string value);
    [CompilerGeneratedAttribute]
public Transport get_Transport();
    [CompilerGeneratedAttribute]
public void set_Transport(Transport value);
    public Downstream get_Downstream_();
    public void set_Downstream_(Downstream value);
    public Downstream DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.Downstream/<ReadAsync>d__29")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.Downstream/<WriteAsync>d__30")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Crossdock.JoinTraceRequest : object {
    private Downstream _downstream;
    [CompilerGeneratedAttribute]
private string <ServerRole>k__BackingField;
    public Isset __isset;
    public string ServerRole { get; public set; }
    public Downstream Downstream { get; public set; }
    public JoinTraceRequest(string serverRole);
    [CompilerGeneratedAttribute]
public string get_ServerRole();
    [CompilerGeneratedAttribute]
public void set_ServerRole(string value);
    public Downstream get_Downstream();
    public void set_Downstream(Downstream value);
    public JoinTraceRequest DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.JoinTraceRequest/<ReadAsync>d__13")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.JoinTraceRequest/<WriteAsync>d__14")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Crossdock.ObservedSpan : object {
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Sampled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Baggage>k__BackingField;
    public string TraceId { get; public set; }
    public bool Sampled { get; public set; }
    public string Baggage { get; public set; }
    public ObservedSpan(string traceId, bool sampled, string baggage);
    [CompilerGeneratedAttribute]
public string get_TraceId();
    [CompilerGeneratedAttribute]
public void set_TraceId(string value);
    [CompilerGeneratedAttribute]
public bool get_Sampled();
    [CompilerGeneratedAttribute]
public void set_Sampled(bool value);
    [CompilerGeneratedAttribute]
public string get_Baggage();
    [CompilerGeneratedAttribute]
public void set_Baggage(string value);
    public ObservedSpan DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.ObservedSpan/<ReadAsync>d__15")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.ObservedSpan/<WriteAsync>d__16")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Crossdock.StartTraceRequest : object {
    [CompilerGeneratedAttribute]
private string <ServerRole>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Sampled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Baggage>k__BackingField;
    [CompilerGeneratedAttribute]
private Downstream <Downstream>k__BackingField;
    public string ServerRole { get; public set; }
    public bool Sampled { get; public set; }
    public string Baggage { get; public set; }
    public Downstream Downstream { get; public set; }
    public StartTraceRequest(string serverRole, bool sampled, string baggage, Downstream downstream);
    [CompilerGeneratedAttribute]
public string get_ServerRole();
    [CompilerGeneratedAttribute]
public void set_ServerRole(string value);
    [CompilerGeneratedAttribute]
public bool get_Sampled();
    [CompilerGeneratedAttribute]
public void set_Sampled(bool value);
    [CompilerGeneratedAttribute]
public string get_Baggage();
    [CompilerGeneratedAttribute]
public void set_Baggage(string value);
    [CompilerGeneratedAttribute]
public Downstream get_Downstream();
    [CompilerGeneratedAttribute]
public void set_Downstream(Downstream value);
    public StartTraceRequest DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.StartTraceRequest/<ReadAsync>d__19")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.StartTraceRequest/<WriteAsync>d__20")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Crossdock.TracedService : object {
}
public class Jaeger.Thrift.Crossdock.TraceResponse : object {
    private ObservedSpan _span;
    private TraceResponse _downstream;
    [CompilerGeneratedAttribute]
private string <NotImplementedError>k__BackingField;
    public Isset __isset;
    public ObservedSpan Span { get; public set; }
    public TraceResponse Downstream { get; public set; }
    public string NotImplementedError { get; public set; }
    public TraceResponse(string notImplementedError);
    public ObservedSpan get_Span();
    public void set_Span(ObservedSpan value);
    public TraceResponse get_Downstream();
    public void set_Downstream(TraceResponse value);
    [CompilerGeneratedAttribute]
public string get_NotImplementedError();
    [CompilerGeneratedAttribute]
public void set_NotImplementedError(string value);
    public TraceResponse DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.TraceResponse/<ReadAsync>d__17")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Crossdock.TraceResponse/<WriteAsync>d__18")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public enum Jaeger.Thrift.Crossdock.Transport : Enum {
    public int value__;
    public static Transport HTTP;
    public static Transport TCHANNEL;
    public static Transport DUMMY;
}
[ExtensionAttribute]
public static class Jaeger.Thrift.jaegerExtensions : object {
    [ExtensionAttribute]
public static bool Equals(List`1<Batch> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Batch> instance);
    [ExtensionAttribute]
public static List`1<Batch> DeepCopy(List`1<Batch> source);
    [ExtensionAttribute]
public static bool Equals(List`1<BatchSubmitResponse> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<BatchSubmitResponse> instance);
    [ExtensionAttribute]
public static List`1<BatchSubmitResponse> DeepCopy(List`1<BatchSubmitResponse> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Log> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Log> instance);
    [ExtensionAttribute]
public static List`1<Log> DeepCopy(List`1<Log> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Span> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Span> instance);
    [ExtensionAttribute]
public static List`1<Span> DeepCopy(List`1<Span> source);
    [ExtensionAttribute]
public static bool Equals(List`1<SpanRef> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<SpanRef> instance);
    [ExtensionAttribute]
public static List`1<SpanRef> DeepCopy(List`1<SpanRef> source);
    [ExtensionAttribute]
public static bool Equals(List`1<Tag> instance, object that);
    [ExtensionAttribute]
public static int GetHashCode(List`1<Tag> instance);
    [ExtensionAttribute]
public static List`1<Tag> DeepCopy(List`1<Tag> source);
}
public class Jaeger.Thrift.Log : object {
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Tag> <Fields>k__BackingField;
    public long Timestamp { get; public set; }
    public List`1<Tag> Fields { get; public set; }
    public Log(long timestamp, List`1<Tag> fields);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public List`1<Tag> get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(List`1<Tag> value);
    public Log DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Log/<ReadAsync>d__11")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Log/<WriteAsync>d__12")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.Process : object {
    private List`1<Tag> _tags;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    public Isset __isset;
    public string ServiceName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Process(string serviceName);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    public Process DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Process/<ReadAsync>d__13")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Process/<WriteAsync>d__14")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
internal interface Jaeger.Thrift.Senders.Internal.IUdpClient {
    public Socket Client { get; }
    public abstract virtual void Connect(string host, int port);
    public abstract virtual Socket get_Client();
    public abstract virtual void Close();
    public abstract virtual Task`1<UdpReceiveResult> ReceiveAsync();
    public abstract virtual Task SendAsync(Byte[] bytes, int bytesLength);
}
public class Jaeger.Thrift.Senders.Internal.ThriftUdpClientTransport : TEndpointTransport {
    public static int MaxPacketSize;
    private string _host;
    private int _port;
    private MemoryStream _byteStream;
    private IUdpClient _client;
    private bool _isDisposed;
    public bool IsOpen { get; }
    public ThriftUdpClientTransport(string host, int port);
    internal ThriftUdpClientTransport(string host, int port, MemoryStream byteStream, IUdpClient udpClient);
    public virtual bool get_IsOpen();
    public virtual Task OpenAsync(CancellationToken cancellationToken);
    public virtual void Close();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Senders.Internal.ThriftUdpClientTransport/<ReadAsync>d__12")]
public virtual ValueTask`1<int> ReadAsync(Byte[] buffer, int offset, int length, CancellationToken cancellationToken);
    public virtual Task WriteAsync(Byte[] buffer, CancellationToken cancellationToken);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int length, CancellationToken cancellationToken);
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public virtual string ToString();
}
public class Jaeger.Thrift.Senders.Internal.THttpTransport : TEndpointTransport {
    private Uri _uri;
    private int _connectTimeout;
    private HttpClient _httpClient;
    private Stream _inputStream;
    private MemoryStream _outputStream;
    private bool _isDisposed;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <CustomProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaTypeHeaderValue <ContentType>k__BackingField;
    public string UserAgent { get; }
    public bool IsOpen { get; }
    public HttpRequestHeaders RequestHeaders { get; }
    public IDictionary`2<string, object> CustomProperties { get; }
    public MediaTypeHeaderValue ContentType { get; public set; }
    public THttpTransport(Uri uri, IDictionary`2<string, string> customRequestHeaders, HttpClientHandler handler, IEnumerable`1<X509Certificate> certificates, string userAgent, IDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    public virtual bool get_IsOpen();
    public HttpRequestHeaders get_RequestHeaders();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_CustomProperties();
    [CompilerGeneratedAttribute]
public MediaTypeHeaderValue get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(MediaTypeHeaderValue value);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Senders.Internal.THttpTransport/<OpenAsync>d__21")]
public virtual Task OpenAsync(CancellationToken cancellationToken);
    public virtual void Close();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Senders.Internal.THttpTransport/<ReadAsync>d__23")]
public virtual ValueTask`1<int> ReadAsync(Byte[] buffer, int offset, int length, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Senders.Internal.THttpTransport/<WriteAsync>d__24")]
public virtual Task WriteAsync(Byte[] buffer, int offset, int length, CancellationToken cancellationToken);
    private HttpClient CreateClient(HttpClientHandler handler, IEnumerable`1<X509Certificate> certificates, IDictionary`2<string, string> customRequestHeaders);
    private HttpRequestMessage CreateRequestMessage(StreamContent streamContent);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Senders.Internal.THttpTransport/<FlushAsync>d__27")]
public virtual Task FlushAsync(CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
}
internal class Jaeger.Thrift.Senders.Internal.UdpClientAdapter : object {
    private UdpClient _client;
    public Socket Client { get; }
    public sealed virtual void Dispose();
    public sealed virtual void Connect(string host, int port);
    public sealed virtual Socket get_Client();
    public sealed virtual void Close();
    public sealed virtual Task`1<UdpReceiveResult> ReceiveAsync();
    public sealed virtual Task SendAsync(Byte[] bytes, int bytesLength);
}
public abstract class Jaeger.Thrift.Senders.ThriftSenderBase : object {
    public static int EmitBatchOverhead;
    private TMemoryBufferTransport _memoryTransport;
    [CompilerGeneratedAttribute]
private TProtocolFactory <ProtocolFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxSpanBytes>k__BackingField;
    protected TProtocolFactory ProtocolFactory { get; }
    protected int MaxSpanBytes { get; }
    public ThriftSenderBase(ProtocolType protocolType, int maxPacketSize);
    [CompilerGeneratedAttribute]
protected TProtocolFactory get_ProtocolFactory();
    [CompilerGeneratedAttribute]
protected int get_MaxSpanBytes();
    public int GetSize(TBase thriftBase);
}
public class Jaeger.Thrift.Span : object {
    private List`1<SpanRef> _references;
    private List`1<Tag> _tags;
    private List`1<Log> _logs;
    [CompilerGeneratedAttribute]
private long <TraceIdLow>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TraceIdHigh>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SpanId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ParentSpanId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperationName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Duration>k__BackingField;
    public Isset __isset;
    public long TraceIdLow { get; public set; }
    public long TraceIdHigh { get; public set; }
    public long SpanId { get; public set; }
    public long ParentSpanId { get; public set; }
    public string OperationName { get; public set; }
    public List`1<SpanRef> References { get; public set; }
    public int Flags { get; public set; }
    public long StartTime { get; public set; }
    public long Duration { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<Log> Logs { get; public set; }
    public Span(long traceIdLow, long traceIdHigh, long spanId, long parentSpanId, string operationName, int flags, long startTime, long duration);
    [CompilerGeneratedAttribute]
public long get_TraceIdLow();
    [CompilerGeneratedAttribute]
public void set_TraceIdLow(long value);
    [CompilerGeneratedAttribute]
public long get_TraceIdHigh();
    [CompilerGeneratedAttribute]
public void set_TraceIdHigh(long value);
    [CompilerGeneratedAttribute]
public long get_SpanId();
    [CompilerGeneratedAttribute]
public void set_SpanId(long value);
    [CompilerGeneratedAttribute]
public long get_ParentSpanId();
    [CompilerGeneratedAttribute]
public void set_ParentSpanId(long value);
    [CompilerGeneratedAttribute]
public string get_OperationName();
    [CompilerGeneratedAttribute]
public void set_OperationName(string value);
    public List`1<SpanRef> get_References();
    public void set_References(List`1<SpanRef> value);
    [CompilerGeneratedAttribute]
public int get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(int value);
    [CompilerGeneratedAttribute]
public long get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(long value);
    [CompilerGeneratedAttribute]
public long get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(long value);
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    public List`1<Log> get_Logs();
    public void set_Logs(List`1<Log> value);
    public Span DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Span/<ReadAsync>d__49")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Span/<WriteAsync>d__50")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Jaeger.Thrift.SpanRef : object {
    [CompilerGeneratedAttribute]
private SpanRefType <RefType>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TraceIdLow>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TraceIdHigh>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SpanId>k__BackingField;
    public SpanRefType RefType { get; public set; }
    public long TraceIdLow { get; public set; }
    public long TraceIdHigh { get; public set; }
    public long SpanId { get; public set; }
    public SpanRef(SpanRefType refType, long traceIdLow, long traceIdHigh, long spanId);
    [CompilerGeneratedAttribute]
public SpanRefType get_RefType();
    [CompilerGeneratedAttribute]
public void set_RefType(SpanRefType value);
    [CompilerGeneratedAttribute]
public long get_TraceIdLow();
    [CompilerGeneratedAttribute]
public void set_TraceIdLow(long value);
    [CompilerGeneratedAttribute]
public long get_TraceIdHigh();
    [CompilerGeneratedAttribute]
public void set_TraceIdHigh(long value);
    [CompilerGeneratedAttribute]
public long get_SpanId();
    [CompilerGeneratedAttribute]
public void set_SpanId(long value);
    public SpanRef DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.SpanRef/<ReadAsync>d__19")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.SpanRef/<WriteAsync>d__20")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public enum Jaeger.Thrift.SpanRefType : Enum {
    public int value__;
    public static SpanRefType CHILD_OF;
    public static SpanRefType FOLLOWS_FROM;
}
public class Jaeger.Thrift.Tag : object {
    private string _vStr;
    private double _vDouble;
    private bool _vBool;
    private long _vLong;
    private Byte[] _vBinary;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private TagType <VType>k__BackingField;
    public Isset __isset;
    public string Key { get; public set; }
    public TagType VType { get; public set; }
    public string VStr { get; public set; }
    public double VDouble { get; public set; }
    public bool VBool { get; public set; }
    public long VLong { get; public set; }
    public Byte[] VBinary { get; public set; }
    public Tag(string key, TagType vType);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public TagType get_VType();
    [CompilerGeneratedAttribute]
public void set_VType(TagType value);
    public string get_VStr();
    public void set_VStr(string value);
    public double get_VDouble();
    public void set_VDouble(double value);
    public bool get_VBool();
    public void set_VBool(bool value);
    public long get_VLong();
    public void set_VLong(long value);
    public Byte[] get_VBinary();
    public void set_VBinary(Byte[] value);
    public Tag DeepCopy();
    [AsyncStateMachineAttribute("Jaeger.Thrift.Tag/<ReadAsync>d__33")]
public sealed virtual Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Jaeger.Thrift.Tag/<WriteAsync>d__34")]
public sealed virtual Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken);
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public enum Jaeger.Thrift.TagType : Enum {
    public int value__;
    public static TagType STRING;
    public static TagType DOUBLE;
    public static TagType BOOL;
    public static TagType LONG;
    public static TagType BINARY;
}
