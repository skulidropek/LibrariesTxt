public class JetBrains.dotCover.ConsoleRunner.VsTestDataCollectors.TcpInProcDataCollector : object {
    private static int ourProcessId;
    private IDictionary`2<string, string> myTargetFrameworkCache;
    private TestProvider myTestProvider;
    private TcpClient myClient;
    private StreamReader myReader;
    private StreamWriter myWriter;
    private bool myCollectPerTest;
    private static TcpInProcDataCollector();
    public sealed virtual void Initialize(IDataCollectionSink dataCollectionSink);
    public sealed virtual void TestSessionStart(TestSessionStartArgs testSessionStartArgs);
    public sealed virtual void TestCaseStart(TestCaseStartArgs testCaseStartArgs);
    public sealed virtual void TestCaseEnd(TestCaseEndArgs testCaseEndArgs);
    public sealed virtual void TestSessionEnd(TestSessionEndArgs testSessionEndArgs);
    private void Send(string command, string args);
    private void InitAndConnectToCoverageService(string configuration);
    private static void ParseSettings(string configuration, String& hostname, Int32& port, Boolean& collectPerTest);
    private static string ConvertToBase64(string text);
    private string ConvertTestCaseToTestId(TestCase testCase);
    private string GetTargetFramework(string source);
    private static string GetTargetFrameworkByName(string assemblyLocation);
}
public class JetBrains.dotCover.ConsoleRunner.VsTestDataCollectors.TestProvider : object {
    private static IDictionary`2<Uri, string> ourCache;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ValueTuple`2[] ourProviderRegex;
    private static TestProvider();
    public string GetProviderId(Uri executorUri);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
