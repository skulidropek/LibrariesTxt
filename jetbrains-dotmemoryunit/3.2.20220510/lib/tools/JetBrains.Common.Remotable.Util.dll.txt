[ExtensionAttribute]
public static class JetBrains.Common.Remotable.Util.FileDescriptorDefinitions : object {
    [CompilerGeneratedAttribute]
private static Func`2<FileStream, Byte[]> CS$<>9__CachedAnonymousMethodDelegate3;
    [ExtensionAttribute]
public static bool AreEquals(FileDescriptor other1, FileDescriptor other2);
    [ExtensionAttribute]
[CanBeNullAttribute]
public static FileDescriptor GetFileDescriptor(FileSystemPath file, FileSystemPath baseDir);
    [CompilerGeneratedAttribute]
private static Byte[] <GetFileDescriptor>b__1(FileStream s);
}
public static class JetBrains.Common.Remotable.Util.RemoteAgentUtil : object {
    public static string Localhost;
    public static string DefaultVirtualRoot;
    public static ushort DefaultPortNetTcp;
    public static ushort DefaultPortWSHttp;
    [NotNullAttribute]
public static Uri MakeNetNamedPipe(string virtualRoot);
    [NotNullAttribute]
public static Uri MakeNetTcp(string host, ushort port, string virtualRoot);
    [NotNullAttribute]
public static Uri MakeWSHttp(string host, ushort port, string virtualRoot);
}
public class JetBrains.Common.Remotable.Util.WatchedDictionary`1 : object {
    private static int TimeoutAlive;
    private static int TimeoutExpired;
    private Timer myAliveTimer;
    private Action`1<TValue> myCloseAction;
    private ILogger myLogger;
    private Dictionary`2<Guid, Item<TValue>> myObjects;
    private Timer myTimer;
    public WatchedDictionary`1(string id, int expiredTimeout, Action`1<TValue> closeAction);
    public WatchedDictionary`1(string id, TimeSpan expiredTimeout, Action`1<TValue> closeAction);
    public sealed virtual void Dispose();
    public Guid Add(TValue obj);
    public Guid Add(Func`2<Guid, TValue> factory);
    [NotNullAttribute]
public TValue Get(Guid id);
    public void Touch(Guid id);
    public void Remove(Guid id);
    public bool TryRemove(Guid id);
    [CompilerGeneratedAttribute]
private void <.ctor>b__8(object _);
    [CompilerGeneratedAttribute]
private void <.ctor>b__9();
}
public static class JetBrains.Common.Remotable.Util.WatchedObjectsTimer : object {
    private static Stopwatch Stopwatch;
    private static int ourObjectsCount;
    private static int ourStopwatchLock;
    private static WatchedObjectsTimer();
    public static TimeSpan StartWatch();
    public static TimeSpan GetTimer();
    public static void StopWatch();
}
