public class JetBrains.Common.Remotable.AsyncCallResult : object {
    public Nullable`1<Guid> AsyncHandle;
    public Byte[] Data;
}
public class JetBrains.Common.Remotable.ContractConstants : object {
    public static string ConfigurationName_Service;
    public static string ConfigurationName_Contract;
    public static string Namespace;
    public static string Namespace_FaultCode;
    public static string Name_FaultCode_CrossDomainProxy;
    public static string Name_FaultCode_Agent;
}
public class JetBrains.Common.Remotable.ElevationEndpointBehavior : object {
    public static string AccessTokenName;
    public sealed virtual void Validate(ServiceEndpoint endpoint);
    public sealed virtual void AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters);
    public sealed virtual void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher);
    public sealed virtual void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime);
}
public class JetBrains.Common.Remotable.ExceptionFaultCode : object {
    public string Name;
    public string Namespace;
}
public class JetBrains.Common.Remotable.ExceptionInfo : object {
    private static int E_NOTIMPL;
    public ExceptionFaultCode[] Code;
    public ExceptionKeyValue[] Data;
    [OptionalFieldAttribute]
public int HResult;
    public ExceptionInfo InnerException;
    public string Message;
    public string StackTrace;
    public string TypeName;
    [OnDeserializingAttribute]
private void OnDeserializing(StreamingContext sc);
    public virtual string ToString();
    private int Dump(StringBuilder builder);
}
public class JetBrains.Common.Remotable.ExceptionKeyValue : object {
    public string Key;
    public string Value;
}
[ExtensionAttribute]
public static class JetBrains.Common.Remotable.ExceptionUtil : object {
    [CompilerGeneratedAttribute]
private static Func`2<DictionaryEntry, ExceptionKeyValue> CS$<>9__CachedAnonymousMethodDelegate3;
    [NotNullAttribute]
[ExtensionAttribute]
public static ExceptionInfo ToExceptionInfo(Exception e);
    [NotNullAttribute]
private static IEnumerable`1<ExceptionFaultCode> GetFaultCodes(FaultCode fc);
    [ExtensionAttribute]
public static bool IsFirstInFaultException(ExceptionInfo info);
    [ExtensionAttribute]
[CanBeNullAttribute]
public static ExceptionInfo TryGetFirstInFaultException(ExceptionInfo info);
    [ExtensionAttribute]
public static bool IsLastInFaultException(ExceptionInfo info);
    [ExtensionAttribute]
public static ExceptionInfo TryGetLastInFaultException(ExceptionInfo info);
    [CanBeNullAttribute]
[ExtensionAttribute]
public static ExceptionInfo TryFindInFaultException(ExceptionInfo info);
    [ExtensionAttribute]
public static void ForEachInFaultException(ExceptionInfo info, Action`1<ExceptionInfo> action);
    [CompilerGeneratedAttribute]
private static ExceptionKeyValue <ToExceptionInfo>b__2(DictionaryEntry x);
}
public class JetBrains.Common.Remotable.FileDescriptor : object {
    public DateTime CreationDate;
    public long Length;
    public string RelatileFile;
    public Byte[] Signature;
    public virtual string ToString();
}
[ServiceContractAttribute]
public interface JetBrains.Common.Remotable.IAgentService {
    [OperationContractAttribute]
[FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
public abstract virtual bool CheckVersions(VersionData4 requireAgentVersion, VersionData4 requireFrameworkVersion);
    [OperationContractAttribute]
[FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
public abstract virtual void LoadService(string serviceName, string assemblyFullName, string typeFullName);
    [FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
[OperationContractAttribute]
[CanBeNullAttribute]
public abstract virtual Byte[] CallService(string serviceName, String[] ids, string method, String[] parametersTypes, Byte[] rawParametersValues);
    [FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
[OperationContractAttribute]
public abstract virtual AsyncCallResult CallServiceAsync(string serviceName, String[] ids, string method, String[] parametersTypes, Byte[] rawParametersValues, TimeSpan immediateResultTimeout);
    [OperationContractAttribute]
[FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
public abstract virtual AsyncCallResult CheckCallServiceAsyncResult(Guid handle);
    [FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
[NotNullAttribute]
[OperationContractAttribute]
public abstract virtual FileDescriptor[] CheckServiceFiles(string serviceName, FileDescriptor[] expected);
    [NotNullAttribute]
[OperationContractAttribute]
[FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
public abstract virtual string CreateServiceFile(string serviceName, string relativeFile, DateTime creationUtcTime);
    [OperationContractAttribute]
[FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
public abstract virtual void FileStreamAppend(string file, long expectedFileOffset, Byte[] buf, RemoteStreamFlags flags);
    [NotNullAttribute]
[OperationContractAttribute]
[FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
public abstract virtual Byte[] FileStreamRead(string file, long fileOffset, int count, RemoteStreamFlags flags);
    [FaultContractAttribute("JetBrains.Common.Remotable.ExceptionInfo")]
[OperationContractAttribute]
public abstract virtual long FileStreamLength(string file);
}
internal class JetBrains.Common.Remotable.Impl.ElevationClientMessageInspector : object {
    private static Guid ourToken;
    private static ElevationClientMessageInspector();
    public sealed virtual object BeforeSendRequest(Message& request, IClientChannel channel);
    public sealed virtual void AfterReceiveReply(Message& reply, object correlationState);
}
internal class JetBrains.Common.Remotable.Impl.ElevationDispatchMessageInspector : object {
    private Guid myToken;
    public sealed virtual object AfterReceiveRequest(Message& request, IClientChannel channel, InstanceContext instanceContext);
    public sealed virtual void BeforeSendReply(Message& reply, object correlationState);
}
[FlagsAttribute]
public enum JetBrains.Common.Remotable.RemoteStreamFlags : Enum {
    public UInt32 value__;
    public static RemoteStreamFlags None;
    public static RemoteStreamFlags CompressionMask;
    public static RemoteStreamFlags Deflated;
    public static RemoteStreamFlags GZipped;
}
public class JetBrains.Common.Remotable.VersionData4 : object {
    public ushort Build;
    public ushort Major;
    public ushort Minor;
    public ushort Revision;
    [NotNullAttribute]
public Version Version { get; }
    public Version get_Version();
    [NotNullAttribute]
public static VersionData4 Create(ushort major, ushort minor, ushort build, ushort revision);
    [NotNullAttribute]
public static VersionData4 Create(string str);
    [NotNullAttribute]
public static VersionData4 Create(Version version);
    [NotNullAttribute]
public static Version op_Explicit(VersionData4 version);
    public virtual string ToString();
}
