public static class JetBrains.Common.Util.Metadata.MetadataSignaturesFactory : object {
    private static bool IsAnonymousTypeName(string name);
    [CanBeNullAttribute]
public static TypeInfoSignature CreateTypeInfoSignature(IMetadataTypeInfo typeInfo);
    private static string ExtractShortTypeName(string name);
    [NotNullAttribute]
public static TypeSignature CreateTypeSignature(IMetadataType type);
    [NotNullAttribute]
public static TypeSignature CreateGenericReferenceSignature(IMetadataGenericArgumentReferenceType argumentReferenceType);
    [NotNullAttribute]
public static ReturnTypeOwnerSignature CreateReturnTypeOwnerSignature(IMetadataProperty property);
    [NotNullAttribute]
public static ReturnTypeOwnerSignature CreateReturnTypeOwnerSignature(IMetadataEvent event);
    [NotNullAttribute]
private static ParameterSignature CreateParameterSignature(IMetadataParameter parameter);
    [NotNullAttribute]
private static FunctionSignature CreateFunctionSignature(MethodSignature signature);
    [NotNullAttribute]
public static MethodSignature CreateMethodSignature(IMetadataMethod method, bool skipCompilerGeneratedParameters);
    [CanBeNullAttribute]
public static ISignature CreateTypeMemberSignature(IMetadataTypeMember metadataTypeMember, bool skipCompilerGeneratedParameters);
}
public class JetBrains.Common.Util.Metadata.ModuleDebugInfo : object {
    public static ModuleDebugInfo NoDebugInfo;
    public static ModuleDebugInfo AbsentDebugInfo;
    public bool NoDebugInfoData;
    [NotNullAttribute]
public IEnumerable`1<DebugInfo> Values;
    private ModuleDebugInfo(bool noDebugInfoData, IEnumerable`1<DebugInfo> debugInfos);
    private static ModuleDebugInfo();
    public static ModuleDebugInfo Build(IEnumerable`1<DebugInfo> debugInfos);
}
