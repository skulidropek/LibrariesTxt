public class BeatyBit.Armature.ArgumentSideTuner : SideTuner {
    [NullableContextAttribute("1")]
public ArgumentSideTuner(Action`1<ITunerBase> tune);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.ArgumentTunerBase`1 : object {
    protected TuneArgumentRecipient TuneArgumentRecipientsTo;
    protected int Weight;
    private TuneArgumentRecipient BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.TuneArgumentRecipient>.Member1 { get; }
    private int BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.TuneArgumentRecipient,System.Int32>.Member2 { get; }
    [DebuggerStepThroughAttribute]
protected ArgumentTunerBase`1(TuneArgumentRecipient tuneArgumentRecipient);
    public IArgumentSideTuner UseValue(T value);
    public IArgumentSideTuner UseFactoryMethod(Func`1<T> factoryMethod);
    public IArgumentSideTuner UseFactoryMethod(Func`2<TR, object> factoryMethod);
    [NullableContextAttribute("2")]
public IArgumentSideTuner UseFactoryMethod(Func`3<T1, T2, object> factoryMethod);
    [NullableContextAttribute("2")]
public IArgumentSideTuner UseFactoryMethod(Func`4<T1, T2, T3, object> factoryMethod);
    [NullableContextAttribute("2")]
public IArgumentSideTuner UseFactoryMethod(Func`5<T1, T2, T3, T4, object> factoryMethod);
    [NullableContextAttribute("2")]
public IArgumentSideTuner UseFactoryMethod(Func`6<T1, T2, T3, T4, T5, object> factoryMethod);
    [NullableContextAttribute("2")]
public IArgumentSideTuner UseFactoryMethod(Func`7<T1, T2, T3, T4, T5, T6, object> factoryMethod);
    [NullableContextAttribute("2")]
public IArgumentSideTuner UseFactoryMethod(Func`8<T1, T2, T3, T4, T5, T6, T7, object> factoryMethod);
    public IArgumentSideTuner UseFactoryMethod(Func`2<IBuildSession, TR> factoryMethod);
    private sealed virtual override TuneArgumentRecipient BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.TuneArgumentRecipient>.get_Member1();
    private sealed virtual override int BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.TuneArgumentRecipient,System.Int32>.get_Member2();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BeatyBit.Armature.AutoBuild : object {
    [NullableAttribute("2")]
private static ParamList _methodArguments;
    public static ParamList MethodArguments { get; }
    public static ParamList get_MethodArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.BuildArgumentByInjectPointNameBase : object {
    [NullableAttribute("2")]
private object _tag;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("2")]
[WithoutTestAttribute]
[DebuggerStepThroughAttribute]
protected BuildArgumentByInjectPointNameBase(object tag);
    [CompilerGeneratedAttribute]
protected BuildArgumentByInjectPointNameBase(BuildArgumentByInjectPointNameBase original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    protected abstract virtual string GetInjectPointName(UnitId unitId);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByInjectPointNameBase left, BuildArgumentByInjectPointNameBase right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByInjectPointNameBase left, BuildArgumentByInjectPointNameBase right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByInjectPointNameBase other);
    [CompilerGeneratedAttribute]
public abstract virtual BuildArgumentByInjectPointNameBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.BuildArgumentByInjectPointTypeBase : object {
    [NullableAttribute("2")]
private object _tag;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("2")]
protected BuildArgumentByInjectPointTypeBase(object tag);
    [CompilerGeneratedAttribute]
protected BuildArgumentByInjectPointTypeBase(BuildArgumentByInjectPointTypeBase original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    protected abstract virtual Type GetInjectPointType(UnitId unitId);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByInjectPointTypeBase left, BuildArgumentByInjectPointTypeBase right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByInjectPointTypeBase left, BuildArgumentByInjectPointTypeBase right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByInjectPointTypeBase other);
    [CompilerGeneratedAttribute]
public abstract virtual BuildArgumentByInjectPointTypeBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildArgumentByParameterInjectPoint : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected BuildArgumentByParameterInjectPoint(BuildArgumentByParameterInjectPoint original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByParameterInjectPoint left, BuildArgumentByParameterInjectPoint right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByParameterInjectPoint left, BuildArgumentByParameterInjectPoint right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByParameterInjectPoint other);
    [CompilerGeneratedAttribute]
public virtual BuildArgumentByParameterInjectPoint <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildArgumentByParameterName : BuildArgumentByInjectPointNameBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public BuildArgumentByParameterName(object tag);
    [CompilerGeneratedAttribute]
protected BuildArgumentByParameterName(BuildArgumentByParameterName original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual string GetInjectPointName(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByParameterName left, BuildArgumentByParameterName right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByParameterName left, BuildArgumentByParameterName right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(BuildArgumentByInjectPointNameBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByParameterName other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual BuildArgumentByInjectPointNameBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildArgumentByParameterType : BuildArgumentByInjectPointTypeBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public BuildArgumentByParameterType(object tag);
    [CompilerGeneratedAttribute]
protected BuildArgumentByParameterType(BuildArgumentByParameterType original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual Type GetInjectPointType(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByParameterType left, BuildArgumentByParameterType right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByParameterType left, BuildArgumentByParameterType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(BuildArgumentByInjectPointTypeBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByParameterType other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual BuildArgumentByInjectPointTypeBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildArgumentByPropertyInjectPoint : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected BuildArgumentByPropertyInjectPoint(BuildArgumentByPropertyInjectPoint original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByPropertyInjectPoint left, BuildArgumentByPropertyInjectPoint right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByPropertyInjectPoint left, BuildArgumentByPropertyInjectPoint right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByPropertyInjectPoint other);
    [CompilerGeneratedAttribute]
public virtual BuildArgumentByPropertyInjectPoint <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildArgumentByPropertyName : BuildArgumentByInjectPointNameBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public BuildArgumentByPropertyName(object tag);
    [CompilerGeneratedAttribute]
protected BuildArgumentByPropertyName(BuildArgumentByPropertyName original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual string GetInjectPointName(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByPropertyName left, BuildArgumentByPropertyName right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByPropertyName left, BuildArgumentByPropertyName right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(BuildArgumentByInjectPointNameBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByPropertyName other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual BuildArgumentByInjectPointNameBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildArgumentByPropertyType : BuildArgumentByInjectPointTypeBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public BuildArgumentByPropertyType(object tag);
    [CompilerGeneratedAttribute]
protected BuildArgumentByPropertyType(BuildArgumentByPropertyType original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual Type GetInjectPointType(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(BuildArgumentByPropertyType left, BuildArgumentByPropertyType right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(BuildArgumentByPropertyType left, BuildArgumentByPropertyType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(BuildArgumentByInjectPointTypeBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(BuildArgumentByPropertyType other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual BuildArgumentByInjectPointTypeBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class BeatyBit.Armature.BuilderExtension : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static WithTag UsingTag(Builder builder, object tag);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static T Build(Builder builder);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static T Build(Builder builder, Object[] arguments);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IReadOnlyList`1<object> BuildAll(Builder builder);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IReadOnlyList`1<object> BuildAll(Builder builder, Object[] arguments);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
private static IReadOnlyList`1<object> BuildAll(Builder builder, object tag, Object[] arguments);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[DebuggerStepThroughAttribute]
private static T Build(Builder builder, object tag, Object[] arguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class BeatyBit.Armature.BuildingOpenGenericTuner : BuildingTuner`1<object> {
    [DebuggerStepThroughAttribute]
public BuildingOpenGenericTuner(ITuner parent, CreateNode createNode, IUnitPattern unitPattern);
    public virtual ICreationTuner As(Type openGenericType, object tag);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildingTuner`1 : SubjectTuner {
    protected IUnitPattern _unitPattern;
    [NullableAttribute("2")]
protected IBuildStackPattern _leafNode;
    private IUnitPattern BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.Core.IUnitPattern>.Member1 { get; }
    private IBuildStackPattern BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.Core.IUnitPattern,BeatyBit.Armature.Core.IBuildStackPattern>.Member2 { get; }
    public BuildingTuner`1(ITuner parent, CreateNode createNode, IUnitPattern unitPattern);
    private sealed virtual override ISettingTuner BeatyBit.Armature.ICreationTuner.CreatedByDefault();
    private sealed virtual override ISettingTuner BeatyBit.Armature.ICreationTuner.CreatedByReflection();
    private sealed virtual override ICreationTuner BeatyBit.Armature.ICreationTuner.AmendWeight(int delta);
    protected ISettingTuner CreateBy(IBuildAction buildAction);
    private sealed virtual override ISettingTuner BeatyBit.Armature.IDependencyTuner<BeatyBit.Armature.ISettingTuner>.Using(ISideTuner[] sideTuners);
    private sealed virtual override ISettingTuner BeatyBit.Armature.IDependencyTuner<BeatyBit.Armature.ISettingTuner>.UsingArguments(Object[] arguments);
    private sealed virtual override ISettingTuner BeatyBit.Armature.IDependencyTuner<BeatyBit.Armature.ISettingTuner>.UsingInjectionPoints(IInjectionPointSideTuner[] injectionPoints);
    private sealed virtual override ISettingTuner BeatyBit.Armature.IDependencyTuner<BeatyBit.Armature.ISettingTuner>.AmendWeight(int delta);
    private sealed virtual override IContextTuner BeatyBit.Armature.ISettingTuner.AsSingleton();
    private sealed virtual override ISubjectTuner BeatyBit.Armature.IContextTuner.BuildingIt();
    public sealed virtual void AsInstance(T instance);
    public virtual ICreationTuner As(Type type, object tag);
    [NullableContextAttribute("2")]
public sealed virtual ICreationTuner As(object tag);
    public sealed virtual ISettingTuner AsIs();
    public sealed virtual ISettingTuner AsCreated(Type type, object tag);
    [NullableContextAttribute("2")]
public sealed virtual ISettingTuner AsCreated(object tag);
    public sealed virtual ISettingTuner AsCreatedWith(Func`1<T> factoryMethod);
    public sealed virtual ISettingTuner AsCreatedWith(Func`2<T1, T> factoryMethod);
    public sealed virtual ISettingTuner AsCreatedWith(Func`3<T1, T2, T> factoryMethod);
    [NullableContextAttribute("2")]
public sealed virtual ISettingTuner AsCreatedWith(Func`4<T1, T2, T3, T> factoryMethod);
    [NullableContextAttribute("2")]
public sealed virtual ISettingTuner AsCreatedWith(Func`5<T1, T2, T3, T4, T> factoryMethod);
    [NullableContextAttribute("2")]
public sealed virtual ISettingTuner AsCreatedWith(Func`6<T1, T2, T3, T4, T5, T> factoryMethod);
    [NullableContextAttribute("2")]
public sealed virtual ISettingTuner AsCreatedWith(Func`7<T1, T2, T3, T4, T5, T6, T> factoryMethod);
    [NullableContextAttribute("2")]
public sealed virtual ISettingTuner AsCreatedWith(Func`8<T1, T2, T3, T4, T5, T6, T7, T> factoryMethod);
    public sealed virtual ISettingTuner AsCreatedWith(Func`2<IBuildSession, T> factoryMethod);
    private sealed virtual override IBuildingTuner`1<T> BeatyBit.Armature.IBuildingTuner<T>.AmendWeight(int delta);
    protected IBuildStackPattern BuildStackPatternSubtree();
    private sealed virtual override IUnitPattern BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.Core.IUnitPattern>.get_Member1();
    private sealed virtual override IBuildStackPattern BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.Core.IUnitPattern,BeatyBit.Armature.Core.IBuildStackPattern>.get_Member2();
    [CompilerGeneratedAttribute]
private IBuildStackPattern <BeatyBit.Armature.IContextTuner.BuildingIt>g__CreateNode|9_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.BuildListArgumentBase : object {
    private static Object[] ParamContainer;
    private static Type[] TypeParamContainer;
    private static Type[] IntTypeParam;
    [NullableAttribute("2")]
private object _tag;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
protected BuildListArgumentBase(object tag);
    [CompilerGeneratedAttribute]
protected BuildListArgumentBase(BuildListArgumentBase original);
    private static BuildListArgumentBase();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    protected abstract virtual Type GetArgumentType(UnitId unitId);
    private static object CreateListInstance(Type listType, int capacity);
    private static void FillList(object listInstance, Type listType, Type itemType, IEnumerable`1<BuildResult> values);
    private static Object[] CreateParameter(object value);
    private static Type[] CreateTypeParameter(Type type);
    private static bool IsCollection(Type type, Type& listType);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BuildListArgumentBase left, BuildListArgumentBase right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BuildListArgumentBase left, BuildListArgumentBase right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(BuildListArgumentBase other);
    [CompilerGeneratedAttribute]
public abstract virtual BuildListArgumentBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildListArgumentForMethodParameter : BuildListArgumentBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public BuildListArgumentForMethodParameter(object tag);
    [CompilerGeneratedAttribute]
protected BuildListArgumentForMethodParameter(BuildListArgumentForMethodParameter original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual Type GetArgumentType(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(BuildListArgumentForMethodParameter left, BuildListArgumentForMethodParameter right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(BuildListArgumentForMethodParameter left, BuildListArgumentForMethodParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(BuildListArgumentBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(BuildListArgumentForMethodParameter other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual BuildListArgumentBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildListArgumentForProperty : BuildListArgumentBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public BuildListArgumentForProperty(object tag);
    [CompilerGeneratedAttribute]
protected BuildListArgumentForProperty(BuildListArgumentForProperty original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual Type GetArgumentType(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(BuildListArgumentForProperty left, BuildListArgumentForProperty right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(BuildListArgumentForProperty left, BuildListArgumentForProperty right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(BuildListArgumentBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(BuildListArgumentForProperty other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual BuildListArgumentBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildMethodArgumentsInDirectOrder : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected BuildMethodArgumentsInDirectOrder(BuildMethodArgumentsInDirectOrder original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BuildMethodArgumentsInDirectOrder left, BuildMethodArgumentsInDirectOrder right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BuildMethodArgumentsInDirectOrder left, BuildMethodArgumentsInDirectOrder right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(BuildMethodArgumentsInDirectOrder other);
    [CompilerGeneratedAttribute]
public virtual BuildMethodArgumentsInDirectOrder <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class BeatyBit.Armature.BuildStackPatternTreeExtension : object {
    [ExtensionAttribute]
public static IBuildingTuner`1<object> Treat(BuildStackPatternTree tree, Type type, object tag);
    [ExtensionAttribute]
public static IBuildingTuner`1<T> Treat(BuildStackPatternTree tree, object tag);
    [ExtensionAttribute]
public static IBuildingTuner`1<object> TreatOpenGeneric(BuildStackPatternTree tree, Type openGenericType, object tag);
    [ExtensionAttribute]
public static IBuildingTuner`1<object> TreatInheritorsOf(BuildStackPatternTree tree, Type baseType, object tag);
    [ExtensionAttribute]
public static IBuildingTuner`1<T> TreatInheritorsOf(BuildStackPatternTree tree, object tag);
    [ExtensionAttribute]
public static ISubjectTuner Building(BuildStackPatternTree tree, Type type, object tag);
    [ExtensionAttribute]
public static ISubjectTuner Building(BuildStackPatternTree tree, object tag);
    [ExtensionAttribute]
public static IDependencyTuner`1<RootTuner> TreatAll(BuildStackPatternTree tree);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.BuildStage : object {
    public static BuildStage Log;
    public static BuildStage Intercept;
    public static BuildStage Cache;
    public static BuildStage Aware;
    public static BuildStage Process;
    public static BuildStage Initialize;
    public static BuildStage Create;
    private string _name;
    protected BuildStage(string name);
    private static BuildStage();
    public sealed virtual string ToHoconString();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CanBeInstantiated : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected CanBeInstantiated(CanBeInstantiated original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CanBeInstantiated left, CanBeInstantiated right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CanBeInstantiated left, CanBeInstantiated right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(CanBeInstantiated other);
    [CompilerGeneratedAttribute]
public virtual CanBeInstantiated <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BeatyBit.Armature.Constructor : object {
    public static IInjectionPointSideTuner WithMaxParametersCount();
    public static IInjectionPointSideTuner MarkedWithInjectAttribute(object injectionPointTag);
    public static IInjectionPointSideTuner Parameterless();
    public static IInjectionPointSideTuner WithParameters();
    [NullableContextAttribute("2")]
public static IInjectionPointSideTuner WithParameters();
    [NullableContextAttribute("2")]
public static IInjectionPointSideTuner WithParameters();
    [NullableContextAttribute("2")]
public static IInjectionPointSideTuner WithParameters();
    public static IInjectionPointSideTuner WithParameters(Type[] parameterTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateByReflection : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected CreateByReflection(CreateByReflection original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CreateByReflection left, CreateByReflection right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CreateByReflection left, CreateByReflection right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(CreateByReflection other);
    [CompilerGeneratedAttribute]
public virtual CreateByReflection <Clone>$();
}
public class BeatyBit.Armature.CreateNode : MulticastDelegate {
    public CreateNode(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual IBuildStackPattern Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual IBuildStackPattern EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethod`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<IBuildSession, TR> _factoryMethod;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public CreateWithFactoryMethod`1(Func`2<IBuildSession, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethod`1(CreateWithFactoryMethod`1<TR> original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethod`1<TR> left, CreateWithFactoryMethod`1<TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethod`1<TR> left, CreateWithFactoryMethod`1<TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethod`1<TR> other);
    [CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethod`1<TR> <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.CreateWithFactoryMethodBuildAction : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction(CreateWithFactoryMethodBuildAction original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    protected abstract virtual MethodBase GetMethod();
    [NullableContextAttribute("2")]
protected abstract virtual object Execute(Object[] arguments);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction left, CreateWithFactoryMethodBuildAction right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction left, CreateWithFactoryMethodBuildAction right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public abstract virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethodBuildAction`2 : CreateWithFactoryMethodBuildAction {
    private Func`2<T1, TR> _factoryMethod;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public CreateWithFactoryMethodBuildAction`2(Func`2<T1, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction`2(CreateWithFactoryMethodBuildAction`2<T1, TR> original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    protected virtual MethodBase GetMethod();
    [NullableContextAttribute("2")]
protected virtual object Execute(Object[] arguments);
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction`2<T1, TR> left, CreateWithFactoryMethodBuildAction`2<T1, TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction`2<T1, TR> left, CreateWithFactoryMethodBuildAction`2<T1, TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction`2<T1, TR> other);
    [CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethodBuildAction`3 : CreateWithFactoryMethodBuildAction {
    private Func`3<T1, T2, TR> _factoryMethod;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public CreateWithFactoryMethodBuildAction`3(Func`3<T1, T2, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction`3(CreateWithFactoryMethodBuildAction`3<T1, T2, TR> original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    protected virtual MethodBase GetMethod();
    [NullableContextAttribute("2")]
protected virtual object Execute(Object[] arguments);
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction`3<T1, T2, TR> left, CreateWithFactoryMethodBuildAction`3<T1, T2, TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction`3<T1, T2, TR> left, CreateWithFactoryMethodBuildAction`3<T1, T2, TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction`3<T1, T2, TR> other);
    [CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethodBuildAction`4 : CreateWithFactoryMethodBuildAction {
    private Func`4<T1, T2, T3, TR> _factoryMethod;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public CreateWithFactoryMethodBuildAction`4(Func`4<T1, T2, T3, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction`4(CreateWithFactoryMethodBuildAction`4<T1, T2, T3, TR> original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    protected virtual MethodBase GetMethod();
    [NullableContextAttribute("2")]
protected virtual object Execute(Object[] arguments);
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction`4<T1, T2, T3, TR> left, CreateWithFactoryMethodBuildAction`4<T1, T2, T3, TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction`4<T1, T2, T3, TR> left, CreateWithFactoryMethodBuildAction`4<T1, T2, T3, TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction`4<T1, T2, T3, TR> other);
    [CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethodBuildAction`5 : CreateWithFactoryMethodBuildAction {
    [NullableAttribute("1")]
private Func`5<T1, T2, T3, T4, TR> _factoryMethod;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public CreateWithFactoryMethodBuildAction`5(Func`5<T1, T2, T3, T4, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction`5(CreateWithFactoryMethodBuildAction`5<T1, T2, T3, T4, TR> original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual MethodBase GetMethod();
    protected virtual object Execute(Object[] arguments);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction`5<T1, T2, T3, T4, TR> left, CreateWithFactoryMethodBuildAction`5<T1, T2, T3, T4, TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction`5<T1, T2, T3, T4, TR> left, CreateWithFactoryMethodBuildAction`5<T1, T2, T3, T4, TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction`5<T1, T2, T3, T4, TR> other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethodBuildAction`6 : CreateWithFactoryMethodBuildAction {
    [NullableAttribute("1")]
private Func`6<T1, T2, T3, T4, T5, TR> _factoryMethod;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public CreateWithFactoryMethodBuildAction`6(Func`6<T1, T2, T3, T4, T5, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction`6(CreateWithFactoryMethodBuildAction`6<T1, T2, T3, T4, T5, TR> original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual MethodBase GetMethod();
    protected virtual object Execute(Object[] arguments);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction`6<T1, T2, T3, T4, T5, TR> left, CreateWithFactoryMethodBuildAction`6<T1, T2, T3, T4, T5, TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction`6<T1, T2, T3, T4, T5, TR> left, CreateWithFactoryMethodBuildAction`6<T1, T2, T3, T4, T5, TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction`6<T1, T2, T3, T4, T5, TR> other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethodBuildAction`7 : CreateWithFactoryMethodBuildAction {
    [NullableAttribute("1")]
private Func`7<T1, T2, T3, T4, T5, T6, TR> _factoryMethod;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public CreateWithFactoryMethodBuildAction`7(Func`7<T1, T2, T3, T4, T5, T6, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction`7(CreateWithFactoryMethodBuildAction`7<T1, T2, T3, T4, T5, T6, TR> original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual MethodBase GetMethod();
    protected virtual object Execute(Object[] arguments);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction`7<T1, T2, T3, T4, T5, T6, TR> left, CreateWithFactoryMethodBuildAction`7<T1, T2, T3, T4, T5, T6, TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction`7<T1, T2, T3, T4, T5, T6, TR> left, CreateWithFactoryMethodBuildAction`7<T1, T2, T3, T4, T5, T6, TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction`7<T1, T2, T3, T4, T5, T6, TR> other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.CreateWithFactoryMethodBuildAction`8 : CreateWithFactoryMethodBuildAction {
    [NullableAttribute("1")]
private Func`8<T1, T2, T3, T4, T5, T6, T7, TR> _factoryMethod;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public CreateWithFactoryMethodBuildAction`8(Func`8<T1, T2, T3, T4, T5, T6, T7, TR> factoryMethod);
    [CompilerGeneratedAttribute]
protected CreateWithFactoryMethodBuildAction`8(CreateWithFactoryMethodBuildAction`8<T1, T2, T3, T4, T5, T6, T7, TR> original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual MethodBase GetMethod();
    protected virtual object Execute(Object[] arguments);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CreateWithFactoryMethodBuildAction`8<T1, T2, T3, T4, T5, T6, T7, TR> left, CreateWithFactoryMethodBuildAction`8<T1, T2, T3, T4, T5, T6, T7, TR> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CreateWithFactoryMethodBuildAction`8<T1, T2, T3, T4, T5, T6, T7, TR> left, CreateWithFactoryMethodBuildAction`8<T1, T2, T3, T4, T5, T6, T7, TR> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CreateWithFactoryMethodBuildAction other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CreateWithFactoryMethodBuildAction`8<T1, T2, T3, T4, T5, T6, T7, TR> other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual CreateWithFactoryMethodBuildAction <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BeatyBit.Armature.DependencyTuner : object {
    public static T UsingArguments(T tuner, Object[] arguments);
    public static T UsingInjectionPoints(T tuner, IInjectionPointSideTuner[] injectionPoints);
    public static T Using(T tuner, ISideTuner[] sideTuners);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BeatyBit.Armature.ForParameter : object {
    public static MethodArgumentTuner`1<object> OfType(Type type);
    public static MethodArgumentTuner`1<T> OfType();
    public static MethodArgumentTuner`1<object> Named(string parameterName);
    [NullableContextAttribute("2")]
public static MethodArgumentTuner`1<object> WithInjectPoint(object injectPointId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BeatyBit.Armature.ForProperty : object {
    public static PropertyArgumentTuner`1<object> OfType(Type type);
    public static PropertyArgumentTuner`1<T> OfType();
    public static PropertyArgumentTuner`1<object> Named(string propertyName);
    [NullableContextAttribute("2")]
public static PropertyArgumentTuner`1<object> WithInjectPoint(object injectPointTag);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.GetConstructorByInjectPoint : object {
    private BindingFlags _bindingFlags;
    [NullableAttribute("2")]
private object _injectPointTag;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public GetConstructorByInjectPoint(BindingFlags bindingFlags);
    [NullableContextAttribute("2")]
public GetConstructorByInjectPoint(object injectPointTag, BindingFlags bindingFlags);
    [CompilerGeneratedAttribute]
protected GetConstructorByInjectPoint(GetConstructorByInjectPoint original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetConstructorByInjectPoint left, GetConstructorByInjectPoint right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetConstructorByInjectPoint left, GetConstructorByInjectPoint right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetConstructorByInjectPoint other);
    [CompilerGeneratedAttribute]
public virtual GetConstructorByInjectPoint <Clone>$();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <Process>b__7_0(ConstructorInfo ctor);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <Process>b__7_1(InjectAttribute attribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.GetConstructorByParameterTypes : object {
    private BindingFlags _bindingFlags;
    private Type[] _parameterTypes;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public GetConstructorByParameterTypes(Type[] parameterTypes);
    public GetConstructorByParameterTypes(BindingFlags bindingFlags, Type[] parameterTypes);
    [CompilerGeneratedAttribute]
protected GetConstructorByParameterTypes(GetConstructorByParameterTypes original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    private ConstructorInfo GetConstructor(Type unitType, BindingFlags bindingFlags);
    private static bool IsParametersListMatch(ParameterInfo[] parameterInfos, Type[] parameterTypes);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [NullableContextAttribute("2")]
public virtual bool Equals(GetConstructorByParameterTypes other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetConstructorByParameterTypes left, GetConstructorByParameterTypes right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetConstructorByParameterTypes left, GetConstructorByParameterTypes right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual GetConstructorByParameterTypes <Clone>$();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetConstructor>b__8_0(ConstructorInfo ctor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.GetConstructorWithMaxParametersCount : object {
    private BindingFlags _bindingFlags;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public GetConstructorWithMaxParametersCount(BindingFlags bindingFlags);
    [CompilerGeneratedAttribute]
protected GetConstructorWithMaxParametersCount(GetConstructorWithMaxParametersCount original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    private static ConstructorInfo GetConstructor(IReadOnlyList`1<ConstructorInfo> constructors, Type unitType);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetConstructorWithMaxParametersCount left, GetConstructorWithMaxParametersCount right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetConstructorWithMaxParametersCount left, GetConstructorWithMaxParametersCount right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetConstructorWithMaxParametersCount other);
    [CompilerGeneratedAttribute]
public virtual GetConstructorWithMaxParametersCount <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.GetParameterDefaultValue : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected GetParameterDefaultValue(GetParameterDefaultValue original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetParameterDefaultValue left, GetParameterDefaultValue right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetParameterDefaultValue left, GetParameterDefaultValue right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetParameterDefaultValue other);
    [CompilerGeneratedAttribute]
public virtual GetParameterDefaultValue <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.GetPropertyByType : object {
    private Type _type;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public GetPropertyByType(Type _type);
    [CompilerGeneratedAttribute]
protected GetPropertyByType(GetPropertyByType original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetPropertyByType left, GetPropertyByType right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetPropertyByType left, GetPropertyByType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetPropertyByType other);
    [CompilerGeneratedAttribute]
public virtual GetPropertyByType <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Type& _type);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <Process>b__4_0(PropertyInfo _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.GetPropertyListByNames : object {
    private IReadOnlyCollection`1<string> _names;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public GetPropertyListByNames(String[] names);
    [CompilerGeneratedAttribute]
protected GetPropertyListByNames(GetPropertyListByNames original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetPropertyListByNames left, GetPropertyListByNames right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetPropertyListByNames left, GetPropertyListByNames right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetPropertyListByNames other);
    [CompilerGeneratedAttribute]
public virtual GetPropertyListByNames <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.GetPropertyListByTags : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Object[] _tags;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public GetPropertyListByTags(Object[] tags);
    [CompilerGeneratedAttribute]
protected GetPropertyListByTags(GetPropertyListByTags original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetPropertyListByTags left, GetPropertyListByTags right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetPropertyListByTags left, GetPropertyListByTags right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetPropertyListByTags other);
    [CompilerGeneratedAttribute]
public virtual GetPropertyListByTags <Clone>$();
}
public interface BeatyBit.Armature.IAllTuner {
}
public interface BeatyBit.Armature.IArgumentSideTuner {
}
[NullableContextAttribute("1")]
public interface BeatyBit.Armature.IBuildingTuner`1 {
    public abstract virtual IBuildingTuner`1<T> AmendWeight(int delta);
    public abstract virtual void AsInstance(T instance);
    public abstract virtual ICreationTuner As(Type type, object tag);
    [NullableContextAttribute("2")]
public abstract virtual ICreationTuner As(object tag);
    public abstract virtual ISettingTuner AsIs();
    public abstract virtual ISettingTuner AsCreated(Type type, object tag);
    [NullableContextAttribute("2")]
public abstract virtual ISettingTuner AsCreated(object tag);
    public abstract virtual ISettingTuner AsCreatedWith(Func`1<T> factoryMethod);
    public abstract virtual ISettingTuner AsCreatedWith(Func`2<T1, T> factoryMethod);
    public abstract virtual ISettingTuner AsCreatedWith(Func`3<T1, T2, T> factoryMethod);
    [NullableContextAttribute("2")]
public abstract virtual ISettingTuner AsCreatedWith(Func`4<T1, T2, T3, T> factoryMethod);
    [NullableContextAttribute("2")]
public abstract virtual ISettingTuner AsCreatedWith(Func`5<T1, T2, T3, T4, T> factoryMethod);
    [NullableContextAttribute("2")]
public abstract virtual ISettingTuner AsCreatedWith(Func`6<T1, T2, T3, T4, T5, T> factoryMethod);
    [NullableContextAttribute("2")]
public abstract virtual ISettingTuner AsCreatedWith(Func`7<T1, T2, T3, T4, T5, T6, T> factoryMethod);
    [NullableContextAttribute("2")]
public abstract virtual ISettingTuner AsCreatedWith(Func`8<T1, T2, T3, T4, T5, T6, T7, T> factoryMethod);
    public abstract virtual ISettingTuner AsCreatedWith(Func`2<IBuildSession, T> factoryMethod);
}
public interface BeatyBit.Armature.IContextTuner {
    [NullableContextAttribute("1")]
public abstract virtual ISubjectTuner BuildingIt();
}
[NullableContextAttribute("1")]
public interface BeatyBit.Armature.ICreationTuner {
    public abstract virtual ICreationTuner AmendWeight(int delta);
    public abstract virtual ISettingTuner CreatedByDefault();
    public abstract virtual ISettingTuner CreatedByReflection();
}
[NullableContextAttribute("1")]
public interface BeatyBit.Armature.IDependencyTuner`1 {
    public abstract virtual T AmendWeight(int delta);
    public abstract virtual T Using(ISideTuner[] sideTuners);
    public abstract virtual T UsingArguments(Object[] arguments);
    public abstract virtual T UsingInjectionPoints(IInjectionPointSideTuner[] injectionPoints);
}
public interface BeatyBit.Armature.IInjectionPointSideTuner {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.InjectDependenciesIntoProperties : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected InjectDependenciesIntoProperties(InjectDependenciesIntoProperties original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void Process(IBuildSession buildSession);
    public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(InjectDependenciesIntoProperties left, InjectDependenciesIntoProperties right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(InjectDependenciesIntoProperties left, InjectDependenciesIntoProperties right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(InjectDependenciesIntoProperties other);
    [CompilerGeneratedAttribute]
public virtual InjectDependenciesIntoProperties <Clone>$();
}
public class BeatyBit.Armature.InjectionPointSideTuner : SideTuner {
    [NullableContextAttribute("1")]
public InjectionPointSideTuner(Action`1<ITunerBase> tune);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.InjectPointNamedBase : object {
    protected string _name;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    private string BeatyBit.Armature.Core.Sdk.IInternal<System.String>.Member1 { get; }
    [DebuggerStepThroughAttribute]
protected InjectPointNamedBase(string name);
    [CompilerGeneratedAttribute]
protected InjectPointNamedBase(InjectPointNamedBase original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [NullableContextAttribute("2")]
protected abstract virtual string GetInjectPointName(UnitId unitId);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    private sealed virtual override string BeatyBit.Armature.Core.Sdk.IInternal<System.String>.get_Member1();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(InjectPointNamedBase left, InjectPointNamedBase right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(InjectPointNamedBase left, InjectPointNamedBase right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(InjectPointNamedBase other);
    [CompilerGeneratedAttribute]
public abstract virtual InjectPointNamedBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.InjectPointOfTypeBase : object {
    private IUnitPattern _typePattern;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    private IUnitPattern BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.Core.IUnitPattern>.Member1 { get; }
    [DebuggerStepThroughAttribute]
protected InjectPointOfTypeBase(IUnitPattern typePattern);
    [CompilerGeneratedAttribute]
protected InjectPointOfTypeBase(InjectPointOfTypeBase original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [NullableContextAttribute("2")]
protected abstract virtual Type GetInjectPointType(UnitId unitId);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    private sealed virtual override IUnitPattern BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.Core.IUnitPattern>.get_Member1();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(InjectPointOfTypeBase left, InjectPointOfTypeBase right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(InjectPointOfTypeBase left, InjectPointOfTypeBase right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(InjectPointOfTypeBase other);
    [CompilerGeneratedAttribute]
public abstract virtual InjectPointOfTypeBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.Instance`1 : object {
    private T _value;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public Instance`1(T value);
    [CompilerGeneratedAttribute]
protected Instance`1(Instance`1<T> original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(Instance`1<T> left, Instance`1<T> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(Instance`1<T> left, Instance`1<T> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(Instance`1<T> other);
    [CompilerGeneratedAttribute]
public virtual Instance`1<T> <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsAssignableFromType : TypePatternBase {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public IsAssignableFromType(Type Type, object Tag);
    [CompilerGeneratedAttribute]
protected IsAssignableFromType(IsAssignableFromType original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsAssignableFromType left, IsAssignableFromType right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsAssignableFromType left, IsAssignableFromType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypePatternBase other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsAssignableFromType other);
    [CompilerGeneratedAttribute]
public virtual TypePatternBase <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Type& Type, Object& Tag);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsConstructor : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected IsConstructor(IsConstructor original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsConstructor left, IsConstructor right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsConstructor left, IsConstructor right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsConstructor other);
    [CompilerGeneratedAttribute]
public virtual IsConstructor <Clone>$();
}
public interface BeatyBit.Armature.ISettingTuner {
    [NullableContextAttribute("1")]
public abstract virtual IContextTuner AsSingleton();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsGenericOfDefinition : TypePatternBase {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public IsGenericOfDefinition(Type genericTypeDefinition, object tag);
    [CompilerGeneratedAttribute]
protected IsGenericOfDefinition(IsGenericOfDefinition original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsGenericOfDefinition left, IsGenericOfDefinition right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsGenericOfDefinition left, IsGenericOfDefinition right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypePatternBase other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsGenericOfDefinition other);
    [CompilerGeneratedAttribute]
public virtual TypePatternBase <Clone>$();
}
[NullableContextAttribute("1")]
public interface BeatyBit.Armature.ISideTuner {
    public abstract virtual void ApplyTo(ITunerBase tuner);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsInheritorOf : TypePatternBase {
    protected bool _isInterface;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool Member1 { get; }
    public IsInheritorOf(Type type, object tag);
    [CompilerGeneratedAttribute]
protected IsInheritorOf(IsInheritorOf original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    public sealed virtual bool get_Member1();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsInheritorOf left, IsInheritorOf right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsInheritorOf left, IsInheritorOf right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypePatternBase other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsInheritorOf other);
    [CompilerGeneratedAttribute]
public virtual TypePatternBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.IsInjectPointBase : object {
    protected object _injectPointTag;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    private object BeatyBit.Armature.Core.Sdk.IInternal<System.Object>.Member1 { get; }
    [DebuggerStepThroughAttribute]
protected IsInjectPointBase(object injectPointTag);
    [CompilerGeneratedAttribute]
protected IsInjectPointBase(IsInjectPointBase original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [NullableContextAttribute("1")]
protected abstract virtual IEnumerable`1<InjectAttribute> GetAttributes(UnitId unitId);
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    private sealed virtual override object BeatyBit.Armature.Core.Sdk.IInternal<System.Object>.get_Member1();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(IsInjectPointBase left, IsInjectPointBase right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(IsInjectPointBase left, IsInjectPointBase right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(IsInjectPointBase other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public abstract virtual IsInjectPointBase <Clone>$();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <Matches>b__4_0(InjectAttribute attr);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsParameterAttributed : IsInjectPointBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public IsParameterAttributed(object injectPointTag);
    [CompilerGeneratedAttribute]
protected IsParameterAttributed(IsParameterAttributed original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual IEnumerable`1<InjectAttribute> GetAttributes(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(IsParameterAttributed left, IsParameterAttributed right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(IsParameterAttributed left, IsParameterAttributed right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(IsInjectPointBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(IsParameterAttributed other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual IsInjectPointBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsParameterInfo : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected IsParameterInfo(IsParameterInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsParameterInfo left, IsParameterInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsParameterInfo left, IsParameterInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsParameterInfo other);
    [CompilerGeneratedAttribute]
public virtual IsParameterInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsParameterInfoArray : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected IsParameterInfoArray(IsParameterInfoArray original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsParameterInfoArray left, IsParameterInfoArray right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsParameterInfoArray left, IsParameterInfoArray right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsParameterInfoArray other);
    [CompilerGeneratedAttribute]
public virtual IsParameterInfoArray <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsParameterNamed : InjectPointNamedBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public IsParameterNamed(string name);
    [CompilerGeneratedAttribute]
protected IsParameterNamed(IsParameterNamed original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    protected virtual string GetInjectPointName(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(IsParameterNamed left, IsParameterNamed right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(IsParameterNamed left, IsParameterNamed right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(InjectPointNamedBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(IsParameterNamed other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual InjectPointNamedBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsParameterOfType : InjectPointOfTypeBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
public IsParameterOfType(IUnitPattern typePattern);
    [CompilerGeneratedAttribute]
protected IsParameterOfType(IsParameterOfType original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    protected virtual Type GetInjectPointType(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(IsParameterOfType left, IsParameterOfType right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(IsParameterOfType left, IsParameterOfType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(InjectPointOfTypeBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(IsParameterOfType other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual InjectPointOfTypeBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsPropertyAttributed : IsInjectPointBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public IsPropertyAttributed(object injectPointTag);
    [CompilerGeneratedAttribute]
protected IsPropertyAttributed(IsPropertyAttributed original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
protected virtual IEnumerable`1<InjectAttribute> GetAttributes(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(IsPropertyAttributed left, IsPropertyAttributed right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(IsPropertyAttributed left, IsPropertyAttributed right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(IsInjectPointBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(IsPropertyAttributed other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual IsInjectPointBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsPropertyInfo : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected IsPropertyInfo(IsPropertyInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsPropertyInfo left, IsPropertyInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsPropertyInfo left, IsPropertyInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsPropertyInfo other);
    [CompilerGeneratedAttribute]
public virtual IsPropertyInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsPropertyInfoCollection : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected IsPropertyInfoCollection(IsPropertyInfoCollection original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsPropertyInfoCollection left, IsPropertyInfoCollection right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsPropertyInfoCollection left, IsPropertyInfoCollection right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsPropertyInfoCollection other);
    [CompilerGeneratedAttribute]
public virtual IsPropertyInfoCollection <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsPropertyNamed : InjectPointNamedBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
public IsPropertyNamed(string propertyName);
    [CompilerGeneratedAttribute]
protected IsPropertyNamed(IsPropertyNamed original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    protected virtual string GetInjectPointName(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(IsPropertyNamed left, IsPropertyNamed right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(IsPropertyNamed left, IsPropertyNamed right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(InjectPointNamedBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(IsPropertyNamed other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual InjectPointNamedBase <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsPropertyOfType : InjectPointOfTypeBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public IsPropertyOfType(IUnitPattern typePattern);
    [CompilerGeneratedAttribute]
protected IsPropertyOfType(IsPropertyOfType original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    protected virtual Type GetInjectPointType(UnitId unitId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(IsPropertyOfType left, IsPropertyOfType right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(IsPropertyOfType left, IsPropertyOfType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(InjectPointOfTypeBase other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(IsPropertyOfType other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual InjectPointOfTypeBase <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.IsServiceUnit : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected IsServiceUnit(IsServiceUnit original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual bool Matches(UnitId unitId);
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(IsServiceUnit left, IsServiceUnit right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(IsServiceUnit left, IsServiceUnit right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(IsServiceUnit other);
    [CompilerGeneratedAttribute]
public virtual IsServiceUnit <Clone>$();
}
[NullableContextAttribute("1")]
public interface BeatyBit.Armature.ISubjectTuner {
    public abstract virtual ISubjectTuner AmendWeight(int delta);
    public abstract virtual ISubjectTuner Building(Type type, object tag);
    [NullableContextAttribute("2")]
public abstract virtual ISubjectTuner Building(object tag);
    public abstract virtual IBuildingTuner`1<object> Treat(Type type, object tag);
    [NullableContextAttribute("2")]
public abstract virtual IBuildingTuner`1<T> Treat(object tag);
    public abstract virtual IBuildingTuner`1<object> TreatOpenGeneric(Type openGenericType, object tag);
    public abstract virtual IBuildingTuner`1<object> TreatInheritorsOf(Type baseType, object tag);
    [NullableContextAttribute("2")]
public abstract virtual IBuildingTuner`1<T> TreatInheritorsOf(object tag);
    public abstract virtual IAllTuner TreatAll();
}
public interface BeatyBit.Armature.ITunerBase {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class BeatyBit.Armature.MethodArgumentTuner`1 : ArgumentTunerBase`1<T> {
    public MethodArgumentTuner`1(TuneArgumentRecipient tuneArgumentRecipient);
    public IArgumentSideTuner UseTag(object tag);
    public IArgumentSideTuner UseInjectPointTag();
    public MethodArgumentTuner`1<T> AmendWeight(int weight);
    [CompilerGeneratedAttribute]
private void <UseInjectPointTag>b__2_0(ITunerBase tuner);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BeatyBit.Armature.Property : object {
    public static IInjectionPointSideTuner OfType();
    public static IInjectionPointSideTuner OfType(Type type);
    public static IInjectionPointSideTuner Named(String[] names);
    public static IInjectionPointSideTuner ByInjectPointTag(Object[] tags);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class BeatyBit.Armature.PropertyArgumentTuner`1 : ArgumentTunerBase`1<T> {
    public PropertyArgumentTuner`1(TuneArgumentRecipient tuneArgumentRecipient);
    public IArgumentSideTuner UseTag(object tag);
    public IArgumentSideTuner UseInjectPointTag();
    public PropertyArgumentTuner`1<T> AmendWeight(int weight);
    [CompilerGeneratedAttribute]
private void <UseInjectPointTag>b__2_0(ITunerBase node);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.Redirect : object {
    private UnitId _unitId;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public Redirect(UnitId unitId);
    [CompilerGeneratedAttribute]
protected Redirect(Redirect original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(Redirect left, Redirect right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(Redirect left, Redirect right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(Redirect other);
    [CompilerGeneratedAttribute]
public virtual Redirect <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.RedirectOpenGenericType : object {
    private Type _redirectTo;
    [NullableAttribute("2")]
private object _tag;
    private bool _throwOnMismatch;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DebuggerStepThroughAttribute]
public RedirectOpenGenericType(Type redirectTo, object tag, bool throwOnMismatch);
    [CompilerGeneratedAttribute]
protected RedirectOpenGenericType(RedirectOpenGenericType original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    [WithoutTestAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RedirectOpenGenericType left, RedirectOpenGenericType right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RedirectOpenGenericType left, RedirectOpenGenericType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(RedirectOpenGenericType other);
    [CompilerGeneratedAttribute]
public virtual RedirectOpenGenericType <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.RootTuner : object {
    [CompilerGeneratedAttribute]
private IBuildStackPattern <TreeRoot>k__BackingField;
    [NullableAttribute("2")]
public ITuner Parent { get; }
    public IBuildStackPattern TreeRoot { get; }
    public int Weight { get; }
    public RootTuner(IBuildStackPattern treeRoot);
    [NullableContextAttribute("2")]
public sealed virtual ITuner get_Parent();
    [CompilerGeneratedAttribute]
public sealed virtual IBuildStackPattern get_TreeRoot();
    public sealed virtual int get_Weight();
    public sealed virtual IBuildStackPattern GetOrAddNodeTo(IBuildStackPattern node);
    public sealed virtual RootTuner AmendWeight(int delta);
    public sealed virtual RootTuner Using(ISideTuner[] sideTuners);
    public sealed virtual RootTuner UsingArguments(Object[] arguments);
    public sealed virtual RootTuner UsingInjectionPoints(IInjectionPointSideTuner[] injectionPoints);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class BeatyBit.Armature.Sdk.ArmatureUtil : object {
    [ExtensionAttribute]
public static ITuner GetInternals(ITunerBase tuner);
    [ExtensionAttribute]
public static IBuildStackPattern ApplyTuner(BuildStackPatternBase impl, ITunerBase tuner);
    [ExtensionAttribute]
public static IBuildStackPattern Tune(ITuner self, IBuildStackPattern rootNode);
    [ExtensionAttribute]
public static IBuildStackPattern Apply(ITuner self);
    [NullableContextAttribute("2")]
public static BuildStackPatternTree TryCreatePatternTreeOnArguments(Object[] arguments, short weight);
    public static BuildStackPatternTree CreatePatternTreeOnArguments(Object[] arguments, short weight);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class BeatyBit.Armature.Sdk.BuildSessionExtension : object {
    [ExtensionAttribute]
public static ConstructorInfo GetConstructorOf(IBuildSession buildSession, Type type);
    [ExtensionAttribute]
public static Object[] BuildArgumentsForMethod(IBuildSession buildSession, ParameterInfo[] parameters);
    [ExtensionAttribute]
public static object BuildArgumentForMethod(IBuildSession buildSession, ParameterInfo parameter);
    [ExtensionAttribute]
public static object BuildPropertyArgument(IBuildSession buildSession, PropertyInfo propertyInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.Sdk.Default : object {
    [CompilerGeneratedAttribute]
private static IBuildAction <CreationBuildAction>k__BackingField;
    public static IBuildAction CreationBuildAction { get; protected set; }
    private static Default();
    [CompilerGeneratedAttribute]
public static IBuildAction get_CreationBuildAction();
    [CompilerGeneratedAttribute]
protected static void set_CreationBuildAction(IBuildAction value);
}
[NullableContextAttribute("1")]
public interface BeatyBit.Armature.Sdk.ITuner {
    [NullableAttribute("2")]
public ITuner Parent { get; }
    public IBuildStackPattern TreeRoot { get; }
    public int Weight { get; }
    [NullableContextAttribute("2")]
public abstract virtual ITuner get_Parent();
    public abstract virtual IBuildStackPattern get_TreeRoot();
    public abstract virtual IBuildStackPattern GetOrAddNodeTo(IBuildStackPattern node);
    public abstract virtual int get_Weight();
}
[ExtensionAttribute]
public static class BeatyBit.Armature.Sdk.LogExtension : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static void WriteToLog(ConstructorInfo constructor, LogLevel logLevel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.Sdk.ServiceTag : Tag {
    public static ServiceTag Constructor;
    public static ServiceTag PropertyCollection;
    public static ServiceTag Argument;
    public ServiceTag(string name);
    private static ServiceTag();
}
[ExtensionAttribute]
public static class BeatyBit.Armature.Sdk.UnitIdExtension : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static Type GetUnitType(UnitId unitId);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static Type GetUnitTypeSafe(UnitId unitId);
}
public class BeatyBit.Armature.Sdk.WeightOf : WeightOf {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.SideTuner : object {
    protected Action`1<ITunerBase> _tune;
    private Action`1<ITunerBase> BeatyBit.Armature.Core.Sdk.IInternal<System.Action<BeatyBit.Armature.ITunerBase>>.Member1 { get; }
    public SideTuner(Action`1<ITunerBase> tune);
    public sealed virtual void ApplyTo(ITunerBase tuner);
    private sealed virtual override Action`1<ITunerBase> BeatyBit.Armature.Core.Sdk.IInternal<System.Action<BeatyBit.Armature.ITunerBase>>.get_Member1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.Singleton : object {
    private bool _hasInstance;
    [NullableAttribute("2")]
private object _instance;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected Singleton(Singleton original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public sealed virtual void Process(IBuildSession buildSession);
    public sealed virtual void PostProcess(IBuildSession buildSession);
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(Singleton left, Singleton right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(Singleton left, Singleton right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(Singleton other);
    [CompilerGeneratedAttribute]
public virtual Singleton <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.SubjectTuner : object {
    protected CreateNode _createNode;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITuner <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuildStackPattern <TreeRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Weight>k__BackingField;
    [NullableAttribute("2")]
public ITuner Parent { get; }
    public IBuildStackPattern TreeRoot { get; }
    public int Weight { get; private set; }
    private CreateNode BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.CreateNode>.Member1 { get; }
    [DebuggerStepThroughAttribute]
public SubjectTuner(ITuner parent, CreateNode createNode);
    public sealed virtual ISubjectTuner Building(Type type, object tag);
    [NullableContextAttribute("2")]
public sealed virtual ISubjectTuner Building(object tag);
    public sealed virtual IBuildingTuner`1<object> Treat(Type type, object tag);
    [NullableContextAttribute("2")]
public sealed virtual IBuildingTuner`1<T> Treat(object tag);
    public sealed virtual IBuildingTuner`1<object> TreatOpenGeneric(Type openGenericType, object tag);
    public sealed virtual IBuildingTuner`1<object> TreatInheritorsOf(Type baseType, object tag);
    [NullableContextAttribute("2")]
public sealed virtual IBuildingTuner`1<T> TreatInheritorsOf(object tag);
    public sealed virtual IAllTuner TreatAll();
    public sealed virtual IAllTuner UsingArguments(Object[] arguments);
    public sealed virtual IAllTuner UsingInjectionPoints(IInjectionPointSideTuner[] injectionPoints);
    public sealed virtual IAllTuner Using(ISideTuner[] sideTuners);
    private sealed virtual override ISubjectTuner BeatyBit.Armature.ISubjectTuner.AmendWeight(int delta);
    private sealed virtual override IAllTuner BeatyBit.Armature.IDependencyTuner<BeatyBit.Armature.IAllTuner>.AmendWeight(int delta);
    protected T AmendWeight(int delta, T inheritor);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual ITuner get_Parent();
    [CompilerGeneratedAttribute]
public sealed virtual IBuildStackPattern get_TreeRoot();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Weight();
    [CompilerGeneratedAttribute]
private void set_Weight(int value);
    public sealed virtual IBuildStackPattern GetOrAddNodeTo(IBuildStackPattern node);
    private sealed virtual override CreateNode BeatyBit.Armature.Core.Sdk.IInternal<BeatyBit.Armature.CreateNode>.get_Member1();
    public static ISubjectTuner Building(ITuner parentTuner, Type type, object tag, int weight);
    public static IBuildingTuner`1<object> Treat(ITuner parentTuner, Type type, object tag, int weight);
    public static IBuildingTuner`1<T> Treat(ITuner parentTuner, object tag, int weight);
    public static IBuildingTuner`1<object> TreatOpenGeneric(ITuner parentTuner, Type openGenericType, object tag, int weight);
    public static IBuildingTuner`1<object> TreatInheritorsOf(ITuner parentTuner, Type baseType, object tag, int weight);
    public static IBuildingTuner`1<T> TreatInheritorsOf(ITuner parentTuner, object tag, int weight);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.TryInOrder : TryInOrderBase {
    private Dictionary`2<IBuildSession, IBuildAction> _effectiveBuildActions;
    public TryInOrder(IBuildAction[] buildActions);
    protected virtual void StashBuildAction(IBuildSession buildSession, IBuildAction buildAction);
    protected virtual bool DumpBuildAction(IBuildSession buildSession, IBuildAction& buildAction);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.TryInOrderBase : object {
    private List`1<IBuildAction> _buildActions;
    protected TryInOrderBase(IBuildAction[] buildActions);
    protected abstract virtual void StashBuildAction(IBuildSession buildSession, IBuildAction buildAction);
    protected abstract virtual bool DumpBuildAction(IBuildSession buildSession, IBuildAction& buildAction);
    public sealed virtual void Process(IBuildSession buildSession);
    public sealed virtual void PostProcess(IBuildSession buildSession);
    [NullableContextAttribute("2")]
public virtual bool Equals(TryInOrderBase other);
    public virtual int GetHashCode();
    public TryInOrderBase Add(IBuildAction buildAction);
    [WithoutTestAttribute]
public sealed virtual IEnumerator GetEnumerator();
    [DebuggerStepThroughAttribute]
public virtual string ToString();
    public sealed virtual string ToHoconString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BeatyBit.Armature.TryInOrderThreadSafe : TryInOrderBase {
    private ConcurrentDictionary`2<IBuildSession, IBuildAction> _effectiveBuildActions;
    public TryInOrderThreadSafe(IBuildAction[] buildActions);
    protected virtual void StashBuildAction(IBuildSession buildSession, IBuildAction buildAction);
    protected virtual bool DumpBuildAction(IBuildSession buildSession, IBuildAction& buildAction);
}
public class BeatyBit.Armature.TuneArgumentRecipient : MulticastDelegate {
    public TuneArgumentRecipient(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual IBuildStackPattern Invoke(ITunerBase tuner, int weight);
    public virtual IAsyncResult BeginInvoke(ITunerBase tuner, int weight, AsyncCallback callback, object object);
    public virtual IBuildStackPattern EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class BeatyBit.Armature.TypePatternBase : object {
    protected Type Type;
    [NullableAttribute("2")]
protected object Tag;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    private Type BeatyBit.Armature.Core.Sdk.IInternal<System.Type>.Member1 { get; }
    [NullableAttribute("2")]
private object BeatyBit.Armature.Core.Sdk.IInternal<System.Type,System.Object>.Member2 { get; }
    protected TypePatternBase(Type type, object tag);
    [CompilerGeneratedAttribute]
protected TypePatternBase(TypePatternBase original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToHoconString();
    [DebuggerStepThroughAttribute]
public sealed virtual string ToString();
    private sealed virtual override Type BeatyBit.Armature.Core.Sdk.IInternal<System.Type>.get_Member1();
    [NullableContextAttribute("2")]
private sealed virtual override object BeatyBit.Armature.Core.Sdk.IInternal<System.Type,System.Object>.get_Member2();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypePatternBase left, TypePatternBase right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypePatternBase left, TypePatternBase right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TypePatternBase other);
    [CompilerGeneratedAttribute]
public abstract virtual TypePatternBase <Clone>$();
}
[FlagsAttribute]
internal enum JetBrains.Annotations.ImplicitUseKindFlags : Enum {
    public int value__;
    public static ImplicitUseKindFlags Default;
    public static ImplicitUseKindFlags Access;
    public static ImplicitUseKindFlags Assign;
    public static ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature;
    public static ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature;
}
[FlagsAttribute]
internal enum JetBrains.Annotations.ImplicitUseTargetFlags : Enum {
    public int value__;
    public static ImplicitUseTargetFlags Default;
    public static ImplicitUseTargetFlags Itself;
    public static ImplicitUseTargetFlags Members;
    public static ImplicitUseTargetFlags WithInheritors;
    public static ImplicitUseTargetFlags WithMembers;
}
[AttributeUsageAttribute("18436")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
internal class JetBrains.Annotations.MeansImplicitUseAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    public ImplicitUseKindFlags UseKindFlags { get; }
    public ImplicitUseTargetFlags TargetFlags { get; }
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags);
    public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags);
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
internal class JetBrains.Annotations.PublicAPIAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public string Comment { get; }
    [NullableContextAttribute("1")]
public PublicAPIAttribute(string comment);
    [CompilerGeneratedAttribute]
public string get_Comment();
}
[AttributeUsageAttribute("32767")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
internal class JetBrains.Annotations.UsedImplicitlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    public ImplicitUseKindFlags UseKindFlags { get; }
    public ImplicitUseTargetFlags TargetFlags { get; }
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags);
    public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags);
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
