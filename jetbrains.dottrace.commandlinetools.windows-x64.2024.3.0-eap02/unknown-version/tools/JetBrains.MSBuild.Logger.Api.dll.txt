[AttributeUsageAttribute("2048")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.AssertionConditionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private AssertionConditionType <ConditionType>k__BackingField;
    public AssertionConditionType ConditionType { get; }
    public AssertionConditionAttribute(AssertionConditionType conditionType);
    [CompilerGeneratedAttribute]
public AssertionConditionType get_ConditionType();
}
internal enum JetBrains.MSBuild.Logger.Api.Annotations.AssertionConditionType : Enum {
    public int value__;
    public static AssertionConditionType IS_TRUE;
    public static AssertionConditionType IS_FALSE;
    public static AssertionConditionType IS_NULL;
    public static AssertionConditionType IS_NOT_NULL;
}
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.AssertionMethodAttribute : Attribute {
}
[AttributeUsageAttribute("4")]
[BaseTypeRequiredAttribute("System.Attribute")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.BaseTypeRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BaseType>k__BackingField;
    [NotNullAttribute]
public Type BaseType { get; }
    public BaseTypeRequiredAttribute(Type baseType);
    [CompilerGeneratedAttribute]
public Type get_BaseType();
}
[AttributeUsageAttribute("24516")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.CanBeNullAttribute : Attribute {
}
[AttributeUsageAttribute("1036")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.CannotApplyEqualityOperatorAttribute : Attribute {
}
[AttributeUsageAttribute("224")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.CollectionAccessAttribute : Attribute {
    [CompilerGeneratedAttribute]
private CollectionAccessType <CollectionAccessType>k__BackingField;
    public CollectionAccessType CollectionAccessType { get; }
    public CollectionAccessAttribute(CollectionAccessType collectionAccessType);
    [CompilerGeneratedAttribute]
public CollectionAccessType get_CollectionAccessType();
}
[FlagsAttribute]
internal enum JetBrains.MSBuild.Logger.Api.Annotations.CollectionAccessType : Enum {
    public int value__;
    public static CollectionAccessType None;
    public static CollectionAccessType Read;
    public static CollectionAccessType ModifyExistingContent;
    public static CollectionAccessType UpdatedContent;
}
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Contract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceFullStates>k__BackingField;
    [NotNullAttribute]
public string Contract { get; }
    public bool ForceFullStates { get; }
    public ContractAnnotationAttribute(string contract);
    public ContractAnnotationAttribute(string contract, bool forceFullStates);
    [CompilerGeneratedAttribute]
public string get_Contract();
    [CompilerGeneratedAttribute]
public bool get_ForceFullStates();
}
[AttributeUsageAttribute("1037")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.ImplicitNotNullAttribute : Attribute {
}
[FlagsAttribute]
internal enum JetBrains.MSBuild.Logger.Api.Annotations.ImplicitUseKindFlags : Enum {
    public int value__;
    public static ImplicitUseKindFlags Default;
    public static ImplicitUseKindFlags Access;
    public static ImplicitUseKindFlags Assign;
    public static ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature;
    public static ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature;
}
[FlagsAttribute]
internal enum JetBrains.MSBuild.Logger.Api.Annotations.ImplicitUseTargetFlags : Enum {
    public int value__;
    public static ImplicitUseTargetFlags Default;
    public static ImplicitUseTargetFlags Itself;
    public static ImplicitUseTargetFlags Members;
    public static ImplicitUseTargetFlags WithMembers;
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.InstantHandleAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.InvokerParameterNameAttribute : Attribute {
}
[AttributeUsageAttribute("6592")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.ItemCanBeNullAttribute : Attribute {
}
[AttributeUsageAttribute("6592")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.ItemNotNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.LinqTunnelAttribute : Attribute {
}
[AttributeUsageAttribute("32767")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.LocalizationRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    public bool Required { get; }
    public LocalizationRequiredAttribute(bool required);
    [CompilerGeneratedAttribute]
public bool get_Required();
}
[AttributeUsageAttribute("2112")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.MacroAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Editable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    public int Editable { get; public set; }
    public string Expression { get; public set; }
    public string Target { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Editable();
    [CompilerGeneratedAttribute]
public void set_Editable(int value);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
}
[AttributeUsageAttribute("16388")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.MeansImplicitUseAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [UsedImplicitlyAttribute]
public ImplicitUseTargetFlags TargetFlags { get; }
    [UsedImplicitlyAttribute]
public ImplicitUseKindFlags UseKindFlags { get; }
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags);
    public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags);
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
}
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.MustUseReturnValueAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [CanBeNullAttribute]
public string Justification { get; }
    public MustUseReturnValueAttribute(string justification);
    [CompilerGeneratedAttribute]
public string get_Justification();
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.NoEnumerationAttribute : Attribute {
}
[AttributeUsageAttribute("32767")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.NoReorder : Attribute {
}
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.NotifyPropertyChangedInvocatorAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    [CanBeNullAttribute]
public string ParameterName { get; }
    public NotifyPropertyChangedInvocatorAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("24516")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.PathReferenceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <BasePath>k__BackingField;
    [CanBeNullAttribute]
public string BasePath { get; }
    public PathReferenceAttribute(string basePath);
    [CompilerGeneratedAttribute]
public string get_BasePath();
}
[AttributeUsageAttribute("19916")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.ProvidesContextAttribute : Attribute {
}
[MeansImplicitUseAttribute("3")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.PublicAPIAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CanBeNullAttribute]
public string Comment { get; }
    public PublicAPIAttribute(string comment);
    [CompilerGeneratedAttribute]
public string get_Comment();
}
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.PureAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.RegexPatternAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.SourceTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("4320")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.StringFormatMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FormatParameterName>k__BackingField;
    [NotNullAttribute]
public string FormatParameterName { get; }
    public StringFormatMethodAttribute(string formatParameterName);
    [CompilerGeneratedAttribute]
public string get_FormatParameterName();
}
[ObsoleteAttribute("Use [ContractAnnotation('=> halt')] instead")]
[AttributeUsageAttribute("64")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.TerminatesProgramAttribute : Attribute {
}
[AttributeUsageAttribute("32767")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.UsedImplicitlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    public ImplicitUseTargetFlags TargetFlags { get; }
    public ImplicitUseKindFlags UseKindFlags { get; }
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags);
    public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags);
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
}
[AttributeUsageAttribute("2432")]
internal class JetBrains.MSBuild.Logger.Api.Annotations.ValueProviderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; }
    public ValueProviderAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[GuidAttribute("DD9CE94B-6D7D-4ABD-99DC-1F2C4EB0CA1A")]
[ComVisibleAttribute("True")]
[PublicAPIAttribute]
public interface JetBrains.MSBuild.Logger.Api.IJetMsbuildLoggerApi {
    [NotNullAttribute]
public abstract virtual IJetMsbuildLoggerApiSession CreateSession(IJetMsbuildLoggerApiErrorReportService errreport);
}
[PublicAPIAttribute]
[ComVisibleAttribute("True")]
[GuidAttribute("6877347B-0C34-4C01-B3F4-1D9D526D8586")]
public interface JetBrains.MSBuild.Logger.Api.IJetMsbuildLoggerApiErrorReportService {
    public abstract virtual void Error(string message);
}
[PublicAPIAttribute]
[ComVisibleAttribute("True")]
[GuidAttribute("1F96AFE0-CB04-4253-9600-2A781B8E28D9")]
public interface JetBrains.MSBuild.Logger.Api.IJetMsbuildLoggerApiMessageSink {
    public abstract virtual void LogMessageReceived(JetMsbuildLoggerApiLoggerMessageKind kind, string text, string errorCode, int nodeid, int projectid);
}
[PublicAPIAttribute]
[ComVisibleAttribute("True")]
[GuidAttribute("BC506846-9E9B-461A-9745-2129EE907ACF")]
public interface JetBrains.MSBuild.Logger.Api.IJetMsbuildLoggerApiSession {
    public abstract virtual void Close();
    [NotNullAttribute]
public abstract virtual string MakeMsbuildCommandLineParameterForLogger(bool isVerbose);
    public abstract virtual void SetMessageSink(IJetMsbuildLoggerApiMessageSink sink);
}
[ComVisibleAttribute("True")]
public enum JetBrains.MSBuild.Logger.Api.JetMsbuildLoggerApiLoggerMessageKind : Enum {
    public int value__;
    public static JetMsbuildLoggerApiLoggerMessageKind Verbose;
    public static JetMsbuildLoggerApiLoggerMessageKind Output;
    public static JetMsbuildLoggerApiLoggerMessageKind Warning;
    public static JetMsbuildLoggerApiLoggerMessageKind Error;
    public static JetMsbuildLoggerApiLoggerMessageKind ProjectFinished;
    public static JetMsbuildLoggerApiLoggerMessageKind ProjectStarted;
}
