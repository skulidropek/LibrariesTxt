public class JetBrains.Profiler.Windows.Remotable.Agent.BaseAgentService : RdExtReflectionBindableBase {
    private static int MaxBufferSize;
    private static int TimeoutAsyncCall;
    private static ILogger ourLogger;
    private WatchedDictionary`1<AsyncCallResult> myCallServiceJobs;
    private Lifetime myLifetime;
    private Dictionary`2<string, CrossDomainProxy> myLoadedService;
    private ReaderWriterLock myLoadedServiceLock;
    private long myCallId;
    public BaseAgentService(Lifetime lifetime);
    private static BaseAgentService();
    public sealed virtual void FileStreamAppend(string file, long expectedFileOffset, Byte[] buf, RemoteStreamFlags flags);
    public sealed virtual Byte[] FileStreamRead(string file, long fileOffset, int count, RemoteStreamFlags flags);
    public sealed virtual long FileStreamLength(string file);
    public sealed virtual void LoadService(string serviceName, string assemblyFullName, string typeFullName);
    public sealed virtual Byte[] CallService(string serviceName, String[] ids, string method, String[] parametersTypes, Byte[] rawParametersValues);
    public sealed virtual AsyncCallResult CallServiceAsync(string serviceName, String[] ids, string method, String[] parametersTypes, Byte[] rawParametersValues, TimeSpan immediateResultTimeout);
    public sealed virtual AsyncCallResult CheckCallServiceAsyncResult(Guid handle);
    private void UnderReaderLock(Action action);
    private TResult UnderReaderLock(Func`1<TResult> func);
    private void UnderWriterLock(Action action);
    private static DateTime LoadTouchTime(FileSystemPath file);
    private static void UpdateTouchTime(FileSystemPath file, DateTime timestamp);
    private static void WriteConfiguration(Stream stream, Assembly[] assemblies);
}
[ExtensionAttribute]
public static class JetBrains.Profiler.Windows.Remotable.Agent.CommandLineParseUtil : object {
    [ExtensionAttribute]
[NotNullAttribute]
public static String[] Parse(String[] args, Action`1<Option> action);
    private static void ParseOption(string arg, Action`1<Option> action);
}
public static class JetBrains.Profiler.Windows.Remotable.Agent.ConsoleUtil : object {
    [NotNullAttribute]
public static Func`1<bool> GetCancelRequest(Lifetime lifetime);
    [NotNullAttribute]
public static WaitHandle AddCancelHandler(Lifetime lifetime);
}
public static class JetBrains.Profiler.Windows.Remotable.Agent.ExternalStopRequestUtil : object {
    public static bool HasExternalStopRequest(string eventName);
    public static void SetExternalReadySignal(string eventName);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
