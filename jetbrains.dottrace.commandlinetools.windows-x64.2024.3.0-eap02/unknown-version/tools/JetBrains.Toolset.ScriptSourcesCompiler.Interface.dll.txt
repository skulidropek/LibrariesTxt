[AttributeUsageAttribute("24516")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
internal class JetBrains.Annotations.CanBeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
internal class JetBrains.Annotations.InstantHandleAttribute : Attribute {
}
[AttributeUsageAttribute("24516")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
internal class JetBrains.Annotations.NotNullAttribute : Attribute {
}
[GuidAttribute("7511E268-580E-4DB5-9D66-1BEE0EAAA37E")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IResolvedScriptSourceDllReference {
    public string AssemblySimpleName { get; }
    public string AssemblyTextualIdentity { get; }
    public string FullPathIfOnDisk { get; }
    public bool IsLoadedInMemory { get; }
    public abstract virtual string get_AssemblySimpleName();
    public abstract virtual string get_AssemblyTextualIdentity();
    public abstract virtual string get_FullPathIfOnDisk();
    public abstract virtual bool get_IsLoadedInMemory();
    public abstract virtual Stream GetInMemoryStreamOrLoadFromDisk();
}
[GuidAttribute("F1D838DF-F0E3-4471-853A-639411747221")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IResolvedScriptSourceDllReference2 {
    public bool IsEmbedInteropTypes { get; }
    public abstract virtual bool get_IsEmbedInteropTypes();
}
[GuidAttribute("D5B3FA3B-2A28-45CD-BAF7-626BFCE7A8C5")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourceCache {
    public ConcurrentDictionary`2<string, object> Cache { get; }
    public abstract virtual ConcurrentDictionary`2<string, object> get_Cache();
}
[GuidAttribute("A16D8FBE-A0A3-4962-A786-2C2DC23DD91A")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourcesCompiler {
    public abstract virtual IScriptSourcesCompilerSession CreateSession(IScriptSourcesCompilerExternalObjectsFactory objectsfactory, IScriptSourcesCompilerLogger logger);
}
[GuidAttribute("7EF86F79-6A65-4F90-9878-6EE7EA08F9A9")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourcesCompilerAssemblyItem {
}
[GuidAttribute("72395C34-1942-4E60-9B69-2CFB244C1392")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourcesCompilerExternalObjectsFactory {
    public abstract virtual IScriptSourcesCompilerAssemblyItem CreateScriptSourcesCompilerAssemblyItem(Action`1<Action`1<Stream>> dll, Action`1<Action`1<Stream>> pdb, Action`1<Action`1<Stream>> xmldoc);
    public abstract virtual IScriptSourceToDllReference CreateScriptToGacDllReference(string sScriptFileRelativePath, string sAssemblyTextualIdentity);
    public abstract virtual IScriptSourceToDllReference CreateScriptToNugetReference(string sScriptFileRelativePath, string sId, string sVersion);
    public abstract virtual IScriptSourceToDllReference TryParseReferenceDirective(string pragmatext, string sFileRelativePath, bool isReportNonReference, Action`1<string> FError, Action`1<string> FVerbose);
}
[GuidAttribute("72B548B5-382C-479A-B26C-82BBA6D0A8D4")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourcesCompilerFileItem {
    public string RelativePath { get; }
    public abstract virtual string get_RelativePath();
    public abstract virtual void FileContent(Action`1<Stream> FWithStream);
}
[GuidAttribute("781882D1-FF7C-47D1-866B-7C3EF3D3917A")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourcesCompilerLogger {
    public abstract virtual void Log(ScriptSourcesCompilerLoggerLevel level, Exception ex, string text);
}
[GuidAttribute("16434228-D8D3-432E-A658-C15E7AAE1782")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourcesCompilerSession {
    public abstract virtual IList`1<IScriptSourceToDllReference> CollectScriptToDllReferences();
    public abstract virtual IScriptSourcesCompilerAssemblyItem Compile();
    public abstract virtual void SetAssemblySimpleName(string simplename);
    public abstract virtual void SetPreprocessorSymbols(ICollection`1<string> defines);
    public abstract virtual void SetScriptToDllReferences(ICollection`1<IResolvedScriptSourceDllReference> dllreferences);
    public abstract virtual void SetSourceFiles(ICollection`1<IScriptSourcesCompilerFileItem> sources);
}
[GuidAttribute("DE06CD8A-E32D-4F6F-B371-3D33539C5D75")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourcesCompilerSession2 {
    public abstract virtual void SetPublicKey(Byte[] publickey);
}
[GuidAttribute("3E11B635-86B0-4666-A5F5-755845AA2578")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourceToDllReference {
    public string ScriptFileRelativePath { get; }
    public abstract virtual string get_ScriptFileRelativePath();
}
[GuidAttribute("F06ECAD2-2F3E-4848-8CDA-4614B822EC21")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourceToGacDllReference {
    public string AssemblyTextualIdentity { get; }
    public abstract virtual string get_AssemblyTextualIdentity();
}
[GuidAttribute("E17C2DCE-BDF2-4356-A3F6-470DDCFA31CE")]
public interface JetBrains.Toolset.ScriptSourcesCompiler.Interface.IScriptSourceToNugetPackageReference {
    public string Id { get; }
    public string Version { get; }
    public abstract virtual string get_Id();
    public abstract virtual string get_Version();
}
public class JetBrains.Toolset.ScriptSourcesCompiler.Interface.ScriptSourcesCompilationErrorException : ApplicationException {
    public string Code;
    public int Col;
    public int ColRangeEnd;
    public string File;
    public string Kind;
    public int Line;
    public int LineRangeEnd;
    public string OriginalMessage;
    public string Subcategory;
    public int ThreadId;
    public ScriptSourcesCompilationErrorException(string kind, string subcategory, string text, string code, string file, int line, int lineRangeEnd, int col, int colRangeEnd, int threadId, Exception innerException);
    public static string FormatBuildMessage(string kind, string subcategory, string text, string code, string file, int line, int lineRangeEnd, int col, int colRangeEnd, int threadId);
    private static string Ctor_CombineExceptionAndText(string text, Exception innerException);
    private static string FormatBuildMessage_FormatString(string subcategory, string message, string code, string file, int line, int lineRangeEnd, int col, int colRangeEnd);
}
public enum JetBrains.Toolset.ScriptSourcesCompiler.Interface.ScriptSourcesCompilerLoggerLevel : Enum {
    public int value__;
    public static ScriptSourcesCompilerLoggerLevel Trace;
    public static ScriptSourcesCompilerLoggerLevel Verbose;
    public static ScriptSourcesCompilerLoggerLevel Info;
    public static ScriptSourcesCompilerLoggerLevel Warning;
    public static ScriptSourcesCompilerLoggerLevel Error;
}
