public class JetBrains.Platform.IisExpressTask.Models.IisExpressWorkerModel : RdExtBase {
    [NotNullAttribute]
private RdProperty`1<int> _WorkerHostProcessId;
    [NotNullAttribute]
private RdProperty`1<RdIisExpressWorkerHostedProcessInfo> _LastProcessInfo;
    [NotNullAttribute]
private RdSignal`1<RdIisExpressWorkerProcessOutput> _ProcessOutput;
    public static CtxReadDelegate`1<RdIisExpressWorkerHostedProcessInfo> ReadRdIisExpressWorkerHostedProcessInfoNullable;
    public static CtxWriteDelegate`1<RdIisExpressWorkerHostedProcessInfo> WriteRdIisExpressWorkerHostedProcessInfoNullable;
    [NotNullAttribute]
public IViewableProperty`1<int> WorkerHostProcessId { get; }
    [NotNullAttribute]
public IViewableProperty`1<RdIisExpressWorkerHostedProcessInfo> LastProcessInfo { get; }
    protected long SerializationHash { get; }
    protected Action`1<ISerializers> Register { get; }
    private IisExpressWorkerModel(RdProperty`1<int> workerHostProcessId, RdProperty`1<RdIisExpressWorkerHostedProcessInfo> lastProcessInfo, RdSignal`1<RdIisExpressWorkerProcessOutput> processOutput);
    public IisExpressWorkerModel(Lifetime lifetime, IProtocol protocol);
    private static IisExpressWorkerModel();
    public IViewableProperty`1<int> get_WorkerHostProcessId();
    public IViewableProperty`1<RdIisExpressWorkerHostedProcessInfo> get_LastProcessInfo();
    [NotNullAttribute]
public void ProcessOutput(RdIisExpressWorkerProcessOutput value);
    protected virtual long get_SerializationHash();
    protected virtual Action`1<ISerializers> get_Register();
    public static void RegisterDeclaredTypesSerializers(ISerializers serializers);
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Platform.IisExpressTask.Models.RdIisExpressWorkerHostedProcessInfo : object {
    [CompilerGeneratedAttribute]
private int <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ThreadId>k__BackingField;
    [CompilerGeneratedAttribute]
private PlatformArchitecture <PlatformArchitecture>k__BackingField;
    public static CtxReadDelegate`1<RdIisExpressWorkerHostedProcessInfo> Read;
    public static CtxWriteDelegate`1<RdIisExpressWorkerHostedProcessInfo> Write;
    public int ProcessId { get; private set; }
    public int ThreadId { get; private set; }
    public PlatformArchitecture PlatformArchitecture { get; private set; }
    public RdIisExpressWorkerHostedProcessInfo(int processId, int threadId, PlatformArchitecture platformArchitecture);
    private static RdIisExpressWorkerHostedProcessInfo();
    [CompilerGeneratedAttribute]
public int get_ProcessId();
    [CompilerGeneratedAttribute]
private void set_ProcessId(int value);
    [CompilerGeneratedAttribute]
public int get_ThreadId();
    [CompilerGeneratedAttribute]
private void set_ThreadId(int value);
    [CompilerGeneratedAttribute]
public PlatformArchitecture get_PlatformArchitecture();
    [CompilerGeneratedAttribute]
private void set_PlatformArchitecture(PlatformArchitecture value);
    public void Deconstruct(Int32& processId, Int32& threadId, PlatformArchitecture& platformArchitecture);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdIisExpressWorkerHostedProcessInfo other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Platform.IisExpressTask.Models.RdIisExpressWorkerProcessOutput : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStdErr>k__BackingField;
    public static CtxReadDelegate`1<RdIisExpressWorkerProcessOutput> Read;
    public static CtxWriteDelegate`1<RdIisExpressWorkerProcessOutput> Write;
    [NotNullAttribute]
public string Text { get; private set; }
    public bool IsStdErr { get; private set; }
    public RdIisExpressWorkerProcessOutput(string text, bool isStdErr);
    private static RdIisExpressWorkerProcessOutput();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    [CompilerGeneratedAttribute]
public bool get_IsStdErr();
    [CompilerGeneratedAttribute]
private void set_IsStdErr(bool value);
    public void Deconstruct(String& text, Boolean& isStdErr);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdIisExpressWorkerProcessOutput other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
