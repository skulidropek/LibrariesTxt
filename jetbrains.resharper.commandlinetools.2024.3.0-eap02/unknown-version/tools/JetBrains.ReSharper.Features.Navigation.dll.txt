[UsedImplicitlyAttribute]
internal class JetBrains.ReSharper.Features.Navigation.AssemblyRef : object {
    public AssemblyRef(ServicesNavigationThemedIcons refs);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IConsumingApiesContextSearch {
    public abstract virtual ConsumingApiesSearchRequest CreateSearchRequest(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IExposingApiesContextSearch {
    public abstract virtual ExposingApiesSearchRequest CreateSearchRequest(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IExtensionMethodsContextSearch {
    [CanBeNullAttribute]
public abstract virtual ExtensionMethodsSearchRequest GetExtensionMethodsRequest(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IFindUsagesAdvancedContextSearch {
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IFindUsagesContextSearch {
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IFlowTargetContextSearch {
    [CanBeNullAttribute]
public abstract virtual Tuple`2<ITreeNode, ICollection`1<ITreeNode>> SearchTargetAndFinallyBlocks(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IFunctionExitsContextSearch {
    public abstract virtual IEnumerable`1<DocumentRange> SearchTargets(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IHighlightUsagesContextSearch {
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IImplementingMembersContextSearch {
    public abstract virtual bool IsInterface(IDeclaredElement declaredElement);
    public abstract virtual IEnumerable`1<DocumentRange> GetImplementingMemebersDocumentRange(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IParameterDeclarationContextSearch {
    public abstract virtual IEnumerable`1<IDeclaredElement> SearchTargets(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.ISubstitutionContextSearch {
    [CanBeNullAttribute]
public abstract virtual SearchSubstitutionRequest GetSubstitutionRequest(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.IUsagesContextSearch {
}
public abstract class JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.ParameterDeclarationContextSearchBase : object {
    [NotNullAttribute]
protected List`1<IDeclaredElement> GetCandidatesFromDerivedTypes(IParameter parameter, ISearchDomain domain);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.ContextSearches.ProjectItemsReferencedCodeContextSearch : DeclaredElementContextSearchBase`1<SearchReferencedCodeRequest> {
    protected virtual SearchReferencedCodeRequest CreateSearchRequest(IDataContext dataContext, IList`1<IDeclaredElement> declaredElements);
    protected virtual SearchReferencedCodeRequest CreateSearchRequest(IDataContext dataContext, IDeclaredElement declaredElement, IDeclaredElement initialTarget);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
}
public static class JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.Util.ExitFinderUtil : object {
    [CanBeNullAttribute]
public static IFunctionExitsFinder GetFunctionExitsFinder(PsiLanguageType languageType);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.ContextNavigation.Util.IFunctionExitsFinder {
    public abstract virtual IEnumerable`1<ITreeNode> GetReachableExitNodes(ITreeNode contextNode);
    public abstract virtual IEnumerable`1<DocumentRange> GetReachableExitKeywordsRanges(ITreeNode contextNode);
}
[SolutionFeaturePartAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Core.DeclaredElementNavigation.CompiledElementNavigator : DefaultDeclaredElementNavigator {
    public CompiledElementNavigator(ISolution solution, IFeaturePartsContainer shellFeaturePartsContainer, ISettingsStore settingsStore);
    public virtual bool IsApplicable(IDeclaredElement declaredElement);
    public virtual void Navigate(IDeclaredElement declaredElement, PopupWindowContextSource windowContext, bool transferFocus, SolutionFeaturePartsContainer container, Nullable`1<OccurrencePresentationOptions> options, TabOptions tabOptions);
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Features.Navigation.Core.Diagnostics.StupidPropertyExtensions : object {
    [ExtensionAttribute]
public static void When(IProperty`1<T> property, Lifetime lifetime, Predicate`1<T> checker, Action`2<Lifetime, T> handler);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Navigation.Core.Diagnostics.TrigramConsistencyProbailityWatchdog : object {
    [NotNullAttribute]
private ISolution mySolution;
    private int myCheckCounter;
    private Random myRandom;
    private IWordIndex myWordindex;
    private TrigramIndex myTrigramIndex;
    private DocumentManager myDocumentManager;
    private static int TryCount;
    private static int Threshold;
    public TrigramConsistencyProbailityWatchdog(Lifetime lifetime, ISolution solution, ISettingsStore settingsStore, DocumentManager documentManager);
    private void RunCheck();
    private void CheckRandomProjectFile();
    private bool StaleDetect(IDocument document, string fileName);
    private bool StaleDetectSmart(IDocument document, IPsiSourceFile psiSourceFile, VirtualFileSystemPath location);
    [CompilerGeneratedAttribute]
private IPsiSourceFile <StaleDetect>b__11_0(IDocument d);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.Core.Diagnostics.ZoneMarker : object {
}
[RelatedFilesProviderAttribute("JetBrains.ProjectModel.KnownProjectFileType", "16")]
public class JetBrains.ReSharper.Features.Navigation.Core.Navigation.GoToRelated.DependentRelatedFilesProvider : object {
    public sealed virtual IEnumerable`1<RelatedFileOccurence> GetRelatedFiles(IProjectFile projectFile);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.Navigation.GoToRelated.DependentRelatedFilesProvider/<GetAllDependices>d__1")]
private static IEnumerable`1<IProjectFile> GetAllDependices(IProjectFile projectFile, IProjectFile[] exclude);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.Navigation.GoToRelated.RelatedFilesManager : object {
    private IProjectFileTypeServices myProjectFileTypeServices;
    public RelatedFilesManager(IProjectFileTypeServices projectFileTypeServices);
    public IEnumerable`1<RelatedFileOccurence> GetRelatedFiles(IProjectFile projectFile);
}
[RelatedFilesProviderAttribute("JetBrains.ProjectModel.KnownProjectFileType", "16")]
public class JetBrains.ReSharper.Features.Navigation.Core.Navigation.GoToRelated.TypeRelatedFilesProvider : object {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.Navigation.GoToRelated.TypeRelatedFilesProvider/<GetRelatedFiles>d__0")]
public sealed virtual IEnumerable`1<RelatedFileOccurence> GetRelatedFiles(IProjectFile projectFile);
}
[AttributeUsageAttribute("4")]
[MeansImplicitUseAttribute]
public class JetBrains.ReSharper.Features.Navigation.Core.Navigation.NavigationProviderAttribute : SolutionComponentAttribute {
    public NavigationProviderAttribute(Instantiation instantiation);
}
[SolutionFeaturePartAttribute("16")]
[DerivedComponentsInstantiationRequirementAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Core.Navigation.ProjectFileNavigationProvider : object {
    public virtual bool IsApplicable(IProjectModelElement element);
    public virtual IEnumerable`1<INavigationPoint> CreateNavigationPoints(IProjectModelElement element);
}
[SolutionFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.Navigation.ProjectFileToSolutionExplorerProvider : ProjectFileNavigationProvider {
    public virtual bool IsApplicable(IProjectModelElement projectModelElement);
    private static bool IsApplicableProjectItem(IProjectItem projectItem);
    public virtual IEnumerable`1<INavigationPoint> CreateNavigationPoints(IProjectModelElement projectModelElement);
}
[SolutionFeaturePartAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Core.Navigation.PsiSourceFileNavigationProvider : object {
    private FileSystemPathNavigator myNavigator;
    private ProjectFileExtensions myExtensions;
    private PsiProjectFileTypeCoordinator myFileTypeCoordinator;
    private IEditorManager myEditorManager;
    public PsiSourceFileNavigationProvider(FileSystemPathNavigator navigator, ProjectFileExtensions extensions, PsiProjectFileTypeCoordinator fileTypeCoordinator, IEditorManager editorManager);
    public sealed virtual bool IsApplicable(PsiSourceFileRange sourceFileRange);
    public sealed virtual IEnumerable`1<INavigationPoint> CreateNavigationPoints(PsiSourceFileRange sourceFileRange);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Core.Navigation.SolutionExplorerNavigationProviderBase : object {
    public sealed virtual bool IsApplicable(IProjectItem data);
    public virtual IEnumerable`1<INavigationPoint> CreateNavigationPoints(IProjectItem target);
    protected abstract virtual INavigationPoint CreateNavigationPoint(IProjectItem item);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousBlock.GotoBlockBase : object {
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    private void NavigateTo(ITextControlCaret controlCaret, IDocument document);
    protected abstract virtual Int32`1<DocLine> GetTargetLine(IDocument document, Int32`1<DocLine> currentLine);
}
[ActionAttribute("GotoNextBlock", "Next Block")]
public class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousBlock.GotoNextBlockAction : GotoBlockBase {
    protected virtual Int32`1<DocLine> GetTargetLine(IDocument document, Int32`1<DocLine> currentLine);
}
[ActionAttribute("GotoPrevBlock", "Previous Block")]
public class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousBlock.GotoPrevBlockAction : GotoBlockBase {
    protected virtual Int32`1<DocLine> GetTargetLine(IDocument document, Int32`1<DocLine> currentLine);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousBlock.IntoNavigateOthersGroupLast : object {
    public IntoNavigateOthersGroupLast(GotoNextBlockAction gotoNextBlock, GotoPrevBlockAction gotoPrevBlock);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousBlock.ZoneMarker : object {
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "NextMemberActionText")]
public class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousMember.GotoNextMemberAction : GotoNextPrevMemberActionBase {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousMember.GotoNextPrevMemberActionBase : object {
    protected static void Execute(IDataContext context, bool nextMember);
    protected static bool Update(IDataContext context, bool nextMember);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
    protected static int GetNavigationOffset(ISolution solution, ITextControl textControl, bool nextMember);
    public static int GetTargetOffset(IPsiSourceFile sourceFile, int offset, bool nextMember);
    private static void FindNearest(IEnumerable`1<CodeStructureElement> elements, Int32& targetOffset, int currentOffset, bool next);
    private static void UpdateNearest(Int32& targetOffset, int currentOffset, DocumentRange documentRange, bool next);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "PreviousMemberActionText")]
public class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousMember.GotoPrevMemberAction : GotoNextPrevMemberActionBase {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Core.NextPreviousMember.IntoNavigateLocalGroup : object {
    public IntoNavigateLocalGroup(GotoNextMemberAction gotoNextMemberAction, GotoPrevMemberAction gotoPrevMemberAction);
}
public class JetBrains.ReSharper.Features.Navigation.Core.Occurrences.CachedOccurrenceComparer : object {
    private Func`3<IOccurrence, IOccurrence, int> myCustomCompareFunction;
    private OccurrencePresentationOptions myOptions;
    private Dictionary`2<RangeOccurrence, string> myCache;
    public CachedOccurrenceComparer(Func`3<IOccurrence, IOccurrence, int> customCompareFunction, OccurrencePresentationOptions options);
    public sealed virtual int Compare(IOccurrence x, IOccurrence y);
    public sealed virtual string GetRangeOccurrenceText(RangeOccurrence rangeOccurrence, Func`2<RangeOccurrence, string> valueFactory);
}
[OccurrenceSorterAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.Occurrences.DefaultOccurrenceComparer : object {
    public sealed virtual IComparer`1<IOccurrence> TryCreateComparer(SearchRequest request);
}
[OccurrencePresenterAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.Occurrences.Presentation.Presenters.ExternalSourceOccurrencePresenter : object {
    public sealed virtual bool Present(IMenuItemDescriptor descriptor, IOccurrence occurrence, OccurrencePresentationOptions occurrencePresentationOptions);
    public sealed virtual bool IsApplicable(IOccurrence occurrence);
}
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.FileLocationInfo : object {
    [CanBeNullAttribute]
private IProjectModelElementPointer myPointer;
    private VirtualFileSystemPath myFileSystemPath;
    private IMenuItemDescriptor myCachedPresentation;
    [CompilerGeneratedAttribute]
private int <CaretOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32`1<TextControlLine> <DistanceFromTop>k__BackingField;
    public int CaretOffset { get; public set; }
    public Int32`1<TextControlLine> DistanceFromTop { get; public set; }
    [CanBeNullAttribute]
public VirtualFileSystemPath FileSystemPath { get; }
    [CanBeNullAttribute]
public IMenuItemDescriptor CachedPresentation { get; }
    public FileLocationInfo(IProjectFile projectFile);
    public virtual string ToString();
    [CanBeNullAttribute]
public IProjectFile GetProjectFile(ProjectModelElementPointerManager pointerManager);
    [CompilerGeneratedAttribute]
public int get_CaretOffset();
    [CompilerGeneratedAttribute]
public void set_CaretOffset(int value);
    [CompilerGeneratedAttribute]
public Int32`1<TextControlLine> get_DistanceFromTop();
    [CompilerGeneratedAttribute]
public void set_DistanceFromTop(Int32`1<TextControlLine> value);
    public VirtualFileSystemPath get_FileSystemPath();
    public IMenuItemDescriptor get_CachedPresentation();
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "PreviousEditActionText")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.GotoLastEditLocationAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "RecentEditsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.GotoRecentEditsAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.GotoRecentEditsProvider : object {
    public virtual IEnumerable`1<Pair`2<IOccurrence, MatchingInfo>> GetMatchingOccurrences(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    private static int AdjustmentFunc(MatcherScore score);
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.GotoRecentFilesProvider : object {
    private ITextControlManager myTextControlManager;
    public GotoRecentFilesProvider(ITextControlManager textControlManager);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.GotoRecentFilesProvider/<GetMatchingOccurrences>d__2")]
public sealed virtual IEnumerable`1<Pair`2<IOccurrence, MatchingInfo>> GetMatchingOccurrences(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    [CanBeNullAttribute]
private IProjectFile GetCurrentProjectFile(ISolution solution);
    private static int AdjustmentFunc(MatcherScore score);
    [CanBeNullAttribute]
protected virtual IOccurrence CreateRecentOccurrence(FileLocationInfo fileLocationInfo, ISolution solution);
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    protected IProjectFile LookupProjectFileByLocationIfNotValid(IProjectFile file, ISolution solution);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.GotoRecentMethodsProvider : object {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.GotoRecentMethodsProvider/<GetMatchingOccurrences>d__0")]
public virtual IEnumerable`1<Pair`2<IOccurrence, MatchingInfo>> GetMatchingOccurrences(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    private static int AdjustmentFunc(MatcherScore score);
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
}
public interface JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.IRecentFilesIgnoreProvider {
    public abstract virtual bool IsIgnored(IProjectFile file);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesBlacklistLocationFiles : object {
    private IFileLocationsBlacklist myLocationsBlacklist;
    public RecentFilesBlacklistLocationFiles(IFileLocationsBlacklist locationsBlacklist);
    public sealed virtual bool IsIgnored(IProjectFile file);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesCommands : object {
    private Lifetime myLifetime;
    private RecentFilesTracker myTracker;
    private IShellLocks myShellLocks;
    private OccurrencePresentationManager myOccurrencePresentationManager;
    private IPsiFiles myPsiFiles;
    private JetPopupMenus myJetPopupMenus;
    private IMainWindowPopupWindowContext myMainWindowPopupWindowContext;
    private ISolution mySolution;
    private ISettingsStore mySettingsStore;
    private ProjectModelElementPointerManager myPointerManager;
    public RecentFilesCommands(Lifetime lifetime, RecentFilesTracker tracker, IShellLocks shellLocks, OccurrencePresentationManager occurrencePresentationManager, IPsiFiles psiFiles, JetPopupMenus jetPopupMenus, IMainWindowPopupWindowContext mainWindowPopupWindowContext, ISolution solution, ISettingsStore settingsStore);
    public void ShowRecentEdits(IDataContext context);
    public void ShowRecentFiles(IDataContext context);
    private void ShowItems(IDataContext context, IReadOnlyList`1<FileLocationInfo> locations, string caption, FileLocationInfo currentLocation, bool bindToPsi);
    private IEnumerable`1<FileLocationInfo> GetMenuItemsKeys(IEnumerable`1<FileLocationInfo> locations, bool mergeItems, bool bindToPsi);
    [CanBeNullAttribute]
private IOccurrence GetOccurrence(FileLocationInfo location, bool bindToPsi);
    private void Describe(DescribeItemEventArgs args, IOccurrence occurrence, bool isCurrent);
    public void NavigatePreviousEditLocation(ITextControl textControl);
    [CompilerGeneratedAttribute]
private bool <GetMenuItemsKeys>b__14_0(FileLocationInfo info);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesIgnoreTempFolderProvider : object {
    public sealed virtual bool IsIgnored(IProjectFile file);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesIgnoreVcxMiscFiles : object {
    public sealed virtual bool IsIgnored(IProjectFile file);
}
[SolutionFeaturePartAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesNavigationProvider : ProjectFileNavigationProvider {
    private ProjectModelElementPointerManager myPointerManager;
    private RecentFilesTracker myRecentFilesTracker;
    public RecentFilesNavigationProvider(ProjectModelElementPointerManager pointerManager, RecentFilesTracker recentFilesTracker);
    public virtual bool IsApplicable(IProjectModelElement data);
    public virtual IEnumerable`1<INavigationPoint> CreateNavigationPoints(IProjectModelElement target);
}
[SolutionComponentAttribute("2")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesTracker : object {
    private static ILogger ourLog;
    private static string AttrCaret;
    private static string AttrID;
    private static string AttrDistanceFromTop;
    private static string FileTagName;
    private static Int32`1<DocLine> ourLineDistanceThreshold;
    private static string RecentEditsTagName;
    private static string RecentFilesTagName;
    private static int retryAttempts;
    private static int retryDelayMs;
    private FileSystemPath myRecentItemsFilePath;
    private LifetimeDefinition myPersistenceDef;
    private DateTime myRecentItemsFileTimestampUtc;
    private Lifetime myLifetime;
    protected ISolution mySolution;
    private DocumentManager myDocumentManager;
    private ICommandProcessor myCommandProcessor;
    private ITextControlManager myTextControlManager;
    private IShellLocks myShellLocks;
    private ProjectModelElementPointerManager myPointerManager;
    private List`1<PostponedDocumentChange> myPostponedDocumentChanges;
    [NotNullAttribute]
private IProperty`1<ITextControl> myActiveTextControl;
    private RecentItemsList`1<FileLocationInfo> myRecentEditLocations;
    private RecentItemsList`1<FileLocationInfo> myRecentFileLocations;
    private IEnumerable`1<IRecentFilesIgnoreProvider> myIgnoreProviders;
    private FileLocationInfo myBeforeCommandPosition;
    private FileLocationInfo myLastPosition;
    private static TimeSpan ourRecordInterval;
    protected Scheduling PersistenceScheduler { get; }
    public bool IsEnabled { get; }
    public FileLocationInfo CurrentFile { get; }
    public FileLocationInfo CurrentEdit { get; }
    public RecentFilesTracker(Lifetime lifetime, ISolution solution, DocumentManager documentManager, ChangeManager changeManager, ICommandProcessor commandProcessor, ITextControlManager textControlManager, IShellLocks shellLocks, ProjectModelElementPointerManager pointerManager, IPsiConfiguration configuration, IEnumerable`1<IRecentFilesIgnoreProvider> ignoreProviders, ISolutionLoadTasksScheduler scheduler, NavigationSettings settings, Optional`1<IUIApplicationSimple> app);
    private static RecentFilesTracker();
    [AsyncStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesTracker/<Activate>d__29")]
private Task Activate(Lifetime lifetime, ChangeManager changeManager, IPsiConfiguration configuration, IUIApplicationSimple app);
    [AsyncStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesTracker/<ActivatePersistence>d__30")]
private Task ActivatePersistence(Lifetime lifetime, IPsiConfiguration configuration, IUIApplicationSimple app);
    [AsyncStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesTracker/<Sync>d__31")]
private Task Sync();
    [AsyncStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesTracker/<Save>d__32")]
private Task Save();
    [AsyncStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentFilesTracker/<Load>d__33")]
private Task Load();
    protected virtual Scheduling get_PersistenceScheduler();
    public virtual bool get_IsEnabled();
    public IReadOnlyList`1<FileLocationInfo> GetFileLocations();
    public IReadOnlyList`1<FileLocationInfo> GetEditLocations();
    public FileLocationInfo get_CurrentFile();
    public FileLocationInfo get_CurrentEdit();
    private sealed virtual override void JetBrains.Application.Configuration.IXmlReadable.ReadFromXml(XmlElement element);
    private sealed virtual override void JetBrains.Application.Configuration.IXmlWritable.WriteToXml(XmlElement element);
    private void CreateRecentList(RecentItemsList`1<FileLocationInfo> locations, IList`1<string> ids, IList`1<FileLocationInfo> loadingLocations);
    [CanBeNullAttribute]
protected virtual IProjectFile GetProjectFile(string id);
    [CanBeNullAttribute]
protected virtual string GetId(FileLocationInfo location);
    public FileLocationInfo PreviousEditLocation(ITextControl textControl);
    public FileLocationInfo CurrentEditLocation(ITextControl textControl);
    private FileLocationInfo GetRecentFileLocation(ITextControl textControl);
    private FileLocationInfo GetRecentFileLocation(IProjectFile file);
    private void UpdateActiveTextControlInfo(FileLocationInfo position);
    private void UpdateActiveTextControl(object sender, EventArgs e);
    private void ActiveTextControlChanged();
    private void AddTextControl(ITextControl textControl);
    private sealed virtual override object JetBrains.Application.changes.IChangeProvider.Execute(IChangeMap changeMap);
    private void UpdateLocations(DocumentChange args, IProjectFile projectFile);
    private void UpdateLocations(RecentItemsList`1<FileLocationInfo> recentLocations, DocumentChange args, IProjectFile projectFile);
    private static void UpdateLocation(FileLocationInfo location, DocumentChange args);
    public void RemoveRecentFile(FileLocationInfo item);
    public void RemoveRecentFileLocation(FileLocationInfo item);
    private bool IsLocationNearby(FileLocationInfo location, IDocument document, int offset);
    private bool IsLocationSame(FileLocationInfo location, IDocument document, int offset);
    [GuardAttribute("1")]
private void ProcessPostponedChangesAndUpdate();
    [GuardAttribute("-1")]
private void RememberPosition();
    private static Int32`1<TextControlLine> GetDistanceFromTop(ITextControl textControl);
    [CanBeNullAttribute]
private FileLocationInfo GetCurrentPosition();
    private void UpdateFromPosition(FileLocationInfo position);
    private void ProcessPostponedChanges();
    [CompilerGeneratedAttribute]
internal static void <JetBrains.Application.Configuration.IXmlReadable.ReadFromXml>g__LoadRecentItems|44_0(XmlElement element, ICollection`1<string> ids, ICollection`1<FileLocationInfo> locations);
    [CompilerGeneratedAttribute]
private void <JetBrains.Application.Configuration.IXmlWritable.WriteToXml>g__SaveRecentItems|45_0(XmlElement element, IReadOnlyList`1<FileLocationInfo> locations, string tagName);
}
[SolutionComponentAttribute("2")]
public class JetBrains.ReSharper.Features.Navigation.Core.RecentFiles.RecentlyViewedMethods : object {
    protected static SolutionLoadTaskIdentifier Init;
    protected static SolutionLoadTaskIdentifier Load;
    private Queue`1<Pair`2<string, DeclaredElementEnvoy`1<ITypeMember>>> myHistory;
    private IShellLocks myShellLocks;
    private Lifetime myLifetime;
    private ITextControlManager myTextControlManager;
    private ITextControl myActiveTextControl;
    private GroupingEvent myCaretChangedEvent;
    private int myLastCaretPosition;
    private Nullable`1<TextRange> myLastCalculatedMethodRange;
    private ISolution mySolution;
    private ILogger myLogger;
    private IPsiCachesState myCachesState;
    private SynchronizationPoints mySynchronizationPoints;
    private DateTime myPersistDate;
    private Stopwatch myStopwatch;
    private ITypeMember myLastTypeMember;
    private static int Duration;
    private static int HistoryLength;
    private object myFileWritingLock;
    private static int PersistIntervalMs;
    private static string RecentActionsTagName;
    private static string ActionTagName;
    private static string AttrID;
    public RecentlyViewedMethods(IShellLocks shellLocks, IPsiServices psiServices, IPsiConfiguration configuration, Lifetime lifetime, ITextControlManager textControlManager, ISolution solution, ISolutionLoadTasksScheduler scheduler, ILogger logger, IPsiCachesState cachesState, SynchronizationPoints synchronizationPoints);
    private static RecentlyViewedMethods();
    private void Execute();
    private void UpdateLastMember();
    private void ActiveTextControlChanged(object sender, EventArgs e);
    private void UpdateActiveTextControl(object sender, EventArgs e);
    private void InitPersistence(IPsiServices psiServices, IPsiConfiguration configuration, ISolution solution, Lifetime lifetime, ISolutionLoadTasksScheduler scheduler);
    private void ScheduleReadFromCache(Lifetime lifetime, FileSystemPath targetFile);
    private void ReadFromCache(FileSystemPath targetFile);
    private void DoWriteToXml(FileSystemPath targetFolder, FileSystemPath targetFile);
    [CanBeNullAttribute]
public static RecentlyViewedMethods TryGetInstance(ISolution solution);
    private sealed virtual override void JetBrains.Application.Configuration.IXmlWritable.WriteToXml(XmlElement element);
    private sealed virtual override void JetBrains.Application.Configuration.IXmlReadable.ReadFromXml(XmlElement e);
    private void EnqueueHistory(Pair`2<string, DeclaredElementEnvoy`1<ITypeMember>> pair);
    public IEnumerable`1<ITypeMember> GetRecentMethods(string filter);
    [CompilerGeneratedAttribute]
private void <Execute>b__22_0();
    [CompilerGeneratedAttribute]
private void <ReadFromCache>b__28_0(Stream stream);
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Core.Search.ExpressionFinder : object {
    public ReferencePreferenceKind Kind { get; }
    public PreferLocationStyle LocationStyle { get; }
    public sealed virtual object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    public sealed virtual void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    public sealed virtual string Present(object target);
    public sealed virtual string GetTitle();
    public sealed virtual ReferencePreferenceKind get_Kind();
    public sealed virtual ISearchDomainContext GetSearchDomainContext(object target);
    public sealed virtual IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual PreferLocationStyle get_LocationStyle();
}
public class JetBrains.ReSharper.Features.Navigation.Core.Search.SearchRequests.ConsumingApiesSearchRequest : SearchRequest {
    private IExposingApiesFinder myExposingApiesFinder;
    private DeclaredElementEnvoy`1<IDeclaredElement> myTarget;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private ExposingApiesContext <Context>k__BackingField;
    public string Title { get; }
    public ISolution Solution { get; }
    public ICollection SearchTargets { get; }
    public ExposingApiesContext Context { get; }
    public ConsumingApiesSearchRequest(IExposingApiesFinder exposingApiesFinder, ExposingApiesContext context);
    [CompilerGeneratedAttribute]
public virtual string get_Title();
    public virtual ISolution get_Solution();
    public virtual ICollection get_SearchTargets();
    [CompilerGeneratedAttribute]
public ExposingApiesContext get_Context();
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
}
public class JetBrains.ReSharper.Features.Navigation.Core.Search.SearchRequests.ExposingApiesSearchRequest : SearchRequest {
    private IExposingApiesFinder myExposingApiesFinder;
    private ExposingApiesContext myContext;
    private DeclaredElementEnvoy`1<IDeclaredElement> myTarget;
    private string myTitle;
    public string Title { get; }
    public ISolution Solution { get; }
    public ICollection SearchTargets { get; }
    public ExposingApiesContext Context { get; }
    public ExposingApiesSearchRequest(IExposingApiesFinder exposingApiesFinder, ExposingApiesContext context);
    public virtual string get_Title();
    public virtual ISolution get_Solution();
    public virtual ICollection get_SearchTargets();
    public ExposingApiesContext get_Context();
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
}
public class JetBrains.ReSharper.Features.Navigation.Core.Search.SearchRequests.ExtensionMethodsSearchRequest : SearchRequest {
    private IType myType;
    private IClrDeclaredElement myTarget;
    private IPsiModule myModule;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private ISolution <Solution>k__BackingField;
    public string Title { get; }
    public ISolution Solution { get; }
    public ICollection SearchTargets { get; }
    public ExtensionMethodsSearchRequest(IType type, ISolution solution, IClrDeclaredElement target, PsiLanguageType languageType, IPsiModule module);
    [CompilerGeneratedAttribute]
public virtual string get_Title();
    [CompilerGeneratedAttribute]
public virtual ISolution get_Solution();
    public virtual ICollection get_SearchTargets();
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
}
public class JetBrains.ReSharper.Features.Navigation.Core.Search.SearchRequests.PredefinedResultsSearchRequest : object {
}
public class JetBrains.ReSharper.Features.Navigation.Core.Search.SearchRequests.SearchProjectItemReferencedCodeRequest : SearchReferencedCodeRequest {
    private ISolution mySolution;
    private List`1<ProjectModelElementEnvoy> myTargetEnvoys;
    private ReferencedCodeSearcher myReferencedCodeSearcher;
    private bool myUseRetargeting;
    [CanBeNullAttribute]
private List`1<IModule> myReferencedCodeScope;
    private int myThresholdByModule;
    private bool myIncludeRelated;
    private SearchReferencedCodeModuleThersholdConsumer myThresholdConsumer;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <OverflowPresentationMessage>k__BackingField;
    public IEnumerable`1<IModule> ThresholdedModules { get; }
    public ISolution Solution { get; }
    public ICollection SearchTargets { get; }
    public string Title { get; }
    public Func`2<string, string> OverflowPresentationMessage { get; public set; }
    public SearchProjectItemReferencedCodeRequest(IEnumerable`1<IProjectItem> targetElements, ISolution solution, bool includeRelated, bool useRetargeting, List`1<IModule> referencedCodeScope, int thresholdByModule);
    public IEnumerable`1<IModule> get_ThresholdedModules();
    public virtual ISolution get_Solution();
    public virtual ICollection get_SearchTargets();
    public virtual string get_Title();
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_OverflowPresentationMessage();
    [CompilerGeneratedAttribute]
public void set_OverflowPresentationMessage(Func`2<string, string> value);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator pi);
}
public class JetBrains.ReSharper.Features.Navigation.Core.Search.SearchRequests.SearchProjectModelUsagesRequest : SearchDeclaredElementUsagesRequest {
    private List`1<ProjectModelElementEnvoy> myTargetEnvoys;
    public ICollection SearchTargets { get; }
    public string Title { get; }
    public SearchProjectModelUsagesRequest(ICollection`1<IProjectModelElement> targets, ICollection`1<DeclaredElementInstance> nestedElements, SearchPattern searchPattern, ISearchDomain searchDomain);
    public virtual ICollection get_SearchTargets();
    protected virtual ISearchResultsConsumer CreateSearchResultsConsumer(ICollection`1<DeclaredElementInstance> searchElements, NavigationContext navigationContext);
    public virtual string get_Title();
}
public class JetBrains.ReSharper.Features.Navigation.Core.Search.SearchRequests.SearchSubstitutionRequest : SearchRequest {
    [NotNullAttribute]
private ISolution mySolution;
    [NotNullAttribute]
private ISearchDomain myDomain;
    [NotNullAttribute]
private DeclaredElementEnvoy`1<ITypeParameter> myTarget;
    public string Title { get; }
    public ISolution Solution { get; }
    public ICollection SearchTargets { get; }
    public SearchSubstitutionRequest(ITypeParameter typeParameter, ISolution solution, ISearchDomain domain);
    public virtual string get_Title();
    public virtual ISolution get_Solution();
    public virtual ICollection get_SearchTargets();
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Features.Navigation.Debugger.BreakpointActionHelper : object {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Debugger.BreakpointActionHelper/<TryFindBreakpointFromContext>d__0")]
[NotNullAttribute]
public static IEnumerable`1<IVsBreakpointDescriptor> TryFindBreakpointFromContext(IDataContext context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Debugger.BreakpointActionHelper/<TryGetOccurrences>d__1")]
[NotNullAttribute]
public static IEnumerable`1<RangeOccurrence> TryGetOccurrences(IDataContext context);
    [CanBeNullAttribute]
public static IVsBreakpointDescriptor FindBreakpointDescriptor(IBreakpointsSynchronizer cache, RangeOccurrence occurrence);
    [ExtensionAttribute]
public static bool HasBreakpointOnOccurrence(IBreakpointsSynchronizer cache, RangeOccurrence occurrence);
}
[SolutionFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.BreakpointOccurrenceInfoProvider : object {
    public sealed virtual IDeclaredElementEnvoy GetTypeMember(IOccurrence occurrence);
    public sealed virtual IDeclaredElementEnvoy GetTypeElement(IOccurrence occurrence);
    public sealed virtual IDeclaredElementEnvoy GetNamespace(IOccurrence occurrence);
    public sealed virtual OccurrenceMergeContext GetMergeContext(IOccurrence occurrence);
    public sealed virtual TextRange GetTextRange(IOccurrence occurrence);
    public sealed virtual ProjectModelElementEnvoy GetProjectModelElementEnvoy(IOccurrence occurrence);
    public sealed virtual SourceFilePtr GetSourceFilePtr(IOccurrence occurrence);
    public sealed virtual bool IsApplicable(IOccurrence occurrence);
}
[OccurrencePresenterAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.BreakpointOccurrencePresenter : object {
    public sealed virtual bool Present(IMenuItemDescriptor descriptor, IOccurrence occurrence, OccurrencePresentationOptions occurrencePresentationOptions);
    public static RichText CreateOccurrenceRichText(IVsBreakpointInformation breakpoint, ISolution solution, IProjectFile& projectFile);
    protected virtual void PresentLocation(IMenuItemDescriptor descriptor, OccurrencePresentationOptions options, IProjectItem projectItem);
    private static RichText ParseFunctionName(string functionName);
    public sealed virtual bool IsApplicable(IOccurrence occurrence);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindResultEnableBreakpointActionText")]
[VsOverrideActionAttribute("({5efc7975-14bc-11cf-9b2b-00aa00573819}:376)")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.FindResultEnableBreakpointAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindResultToggleBreakpointActionText")]
[VsOverrideActionAttribute("({5efc7975-14bc-11cf-9b2b-00aa00573819}:255)")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.FindResultToggleBreakpointAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionGroupAttribute("DebuggerActions", "2", "10")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.IntoDebuggerActionGroup : object {
    public IntoDebuggerActionGroup(SetBreakpointAction action, SetTracepointAction setTracepoint, RemoveBreakpointAction removeBreakpoint);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "RemoveBreakpointActionText")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.RemoveBreakpointAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "SetBreakpointActionText")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.SetBreakpointAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "SetTracepointActionText")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.SetTracepointAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    private static void SetTracepoints(ISolution solution, IEnumerable`1<RangeOccurrence> occurrences, string tracePattern, List`1<IVsBreakpointDescriptor> toDelete);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Debugger.TracePointEditorDialogOwner : object {
    public virtual void Show(string initialValue, Action`1<string> commit);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.Debugger.ZoneMarker : object {
}
[ActionGroupAttribute("NavigateToContextMenu", "0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.CommandPromptContextNavigateGroup : object {
    public CommandPromptContextNavigateGroup(Separator sep, OpenWindowsExplorerAction openWindowsExplorerAction);
}
[ActionAttribute("NavigateToCommandPrompt", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "CommandPromptActionText")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.OpenCommandPromptAction : ContextNavigationActionBase`1<OpenCommandPromptProvider> {
}
[ContextNavigationProviderAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.OpenCommandPromptProvider : OpenFileProviderBase {
    protected virtual string GetTitle();
    protected virtual void Execute(FileSystemPath path);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.OpenFileProviderBase : object {
    [CanBeNullAttribute]
protected abstract virtual void Execute(FileSystemPath path);
    [CanBeNullAttribute]
protected virtual FileSystemPath GetPathByContext(IDataContext context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.OpenFileProviderBase/<CreateWorkflow>d__2")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    protected abstract virtual string GetTitle();
}
[ActionAttribute("NavigateToWindowsExplorer", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "WindowsExplorerActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.OpenWindowsExplorerAction : ContextNavigationActionBase`1<OpenWindowsExplorerProvider> {
}
[ContextNavigationProviderAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.OpenWindowsExplorerProvider : OpenFileProviderBase {
    private ICommonLocateFile myCommonLocateFile;
    public OpenWindowsExplorerProvider(ICommonLocateFile commonLocateFile);
    protected virtual void Execute(FileSystemPath path);
    protected virtual string GetTitle();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.Features.CommandPrompt.ZoneMarker : object {
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ConsumingAPIsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.ExposingApies.ConsumingApiesNavigationAction : ContextNavigationActionBase`1<ConsumingApiesNavigationProvider> {
    protected RichText Caption { get; }
    protected virtual RichText get_Caption();
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.ExposingApies.ConsumingApiesNavigationProvider : ContextNavigationProviderBase`2<IConsumingApiesContextSearch, ConsumingApiesNavigationAction> {
    private IShellLocks myLocks;
    private ITooltipManager myTooltipManager;
    protected NavigationActionGroup ActionGroup { get; }
    public ConsumingApiesNavigationProvider(IShellLocks locks, ITooltipManager tooltipManager, IFeaturePartsContainer manager);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IConsumingApiesContextSearch> searches, INavigationExecutionHost host);
    private void ShowToolTip(IDataContext dataContext, string tooltip);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ExposingAPIsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.ExposingApies.ExposingApiesNavigationAction : ContextNavigationActionBase`1<ExposingApiesNavigationProvider> {
    protected RichText Caption { get; }
    protected virtual RichText get_Caption();
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.ExposingApies.ExposingApiesNavigationProvider : ContextNavigationProviderBase`2<IExposingApiesContextSearch, ExposingApiesNavigationAction> {
    private IShellLocks myLocks;
    private ITooltipManager myTooltipManager;
    protected NavigationActionGroup ActionGroup { get; }
    public ExposingApiesNavigationProvider(IShellLocks locks, ITooltipManager tooltipManager, IFeaturePartsContainer manager);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IExposingApiesContextSearch> searches, INavigationExecutionHost host);
    private void ShowToolTip(IDataContext dataContext, string tooltip);
}
public class JetBrains.ReSharper.Features.Navigation.Features.ExposingApies.ExposingApiesSearchDescriptor : SearchDescriptor {
    public string ActionBarID { get; }
    public TypeDependenciesOptions DiagrammingOptions { get; }
    public ExposingApiesSearchDescriptor(SearchRequest request, ICollection`1<IOccurrence> results);
    public virtual string get_ActionBarID();
    public virtual string GetResultsTitle(OccurrenceSection section);
    public virtual TypeDependenciesOptions get_DiagrammingOptions();
    protected virtual Func`2<SearchRequest, IOccurrenceBrowserDescriptor> GetDescriptorFactory();
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.DeclarationHyperlinkBase : object {
    [CanBeNullAttribute]
private ISolution mySolution;
    [CanBeNullAttribute]
private DocumentEditorContext myEditorContext;
    protected DeclarationHyperlinkBase(IDataContext context);
    public virtual DocumentRange GetDocumentRange();
    public sealed virtual IHighlighter CreateHighlighter(ITextControl textControl);
    public abstract virtual void Navigate(IDataContext dataContext);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ContainingDeclarationActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoContainingDeclarationAction : object {
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
    private static DocumentOffset GetNavigationOffset(ISolution solution, ITextControl textControl);
    private static DocumentOffset GetTargetOffset(IProjectFile projectFile, DocumentOffset offset);
    protected static void FindClosest(IEnumerable`1<CodeStructureElement> elements, DocumentOffset offset, DocumentRange& closestRange, CodeStructureElement& closestElement);
}
internal class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoDeclarationHyperlink : DeclarationHyperlinkBase {
    private GotoDeclarationAction myProvider;
    public GotoDeclarationHyperlink(GotoDeclarationAction provider, IDataContext context);
    public virtual void Navigate(IDataContext dataContext);
}
[HyperlinkProviderAttribute("0", "16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoDeclarationHyperlinkProvider : GotoDeclarationAction {
    private RequirementsManager myRequirementsManager;
    public KeyStateMasks ActivationKeys { get; }
    public GotoDeclarationHyperlinkProvider(RequirementsManager requirementsManager);
    public sealed virtual KeyStateMasks get_ActivationKeys();
    public sealed virtual IHyperlink CreateHyperlink(IDataContext context);
}
internal class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoImplementationHyperlink : DeclarationHyperlinkBase {
    private GotoImplementationHyperlinkProvider myProvider;
    public GotoImplementationHyperlink(GotoImplementationHyperlinkProvider provider, IDataContext context);
    public virtual void Navigate(IDataContext dataContext);
}
[HyperlinkProviderAttribute("0", "16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoImplementationHyperlinkProvider : GotoImplementationsAction {
    private RequirementsManager myRequirementsManager;
    public KeyStateMasks ActivationKeys { get; }
    public GotoImplementationHyperlinkProvider(RequirementsManager requirementsManager);
    public sealed virtual KeyStateMasks get_ActivationKeys();
    public sealed virtual IHyperlink CreateHyperlink(IDataContext context);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoPossibleDeclarationHyperlink : DeclarationHyperlinkBase {
    private CommentDeclaredElement myTarget;
    private GotoDeclarationAction myProvider;
    public GotoPossibleDeclarationHyperlink(IDataContext context, CommentDeclaredElement target, GotoDeclarationAction provider);
    public virtual DocumentRange GetDocumentRange();
    public virtual void Navigate(IDataContext dataContext);
}
[HyperlinkProviderAttribute("10", "16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoPossibleDeclarationHyperlinkProvider : GotoDeclarationAction {
    private RequirementsManager myRequirementsManager;
    public KeyStateMasks ActivationKeys { get; }
    public GotoPossibleDeclarationHyperlinkProvider(RequirementsManager requirementsManager);
    public sealed virtual KeyStateMasks get_ActivationKeys();
    public sealed virtual IHyperlink CreateHyperlink(IDataContext context);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "TypeOfSymbolActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoTypeDeclarationAction : ContextNavigationActionBase`1<GotoTypeDeclarationProvider> {
    protected RichText Caption { get; }
    protected virtual RichText get_Caption();
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoTypeDeclarationProvider : RequestContextSearchProvider`3<ITypeDeclarationContextSearch, SearchDeclarationsRequest, SearchDeclarationsDescriptor> {
    public GotoTypeDeclarationProvider(IFeaturePartsContainer manager);
    protected virtual void ProcessResults(IDataContext context, SearchDeclarationsRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences, Func`1<IOccurrenceBrowserDescriptor> descriptorFactory);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.GotoTypeDeclarationProvider/<CreateWorkflow>d__2")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    protected virtual SearchDeclarationsDescriptor CreateSearchDescriptor(SearchDeclarationsRequest searchRequest, ICollection`1<IOccurrence> results);
}
[HyperlinkProviderAttribute("0", "16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.MiddleButtonHyperLinkProvider : GotoDeclarationAction {
    private RequirementsManager myRequirementsManager;
    public KeyStateMasks ActivationKeys { get; }
    public MiddleButtonHyperLinkProvider(RequirementsManager requirementsManager);
    public sealed virtual KeyStateMasks get_ActivationKeys();
    public sealed virtual IHyperlink CreateHyperlink(IDataContext context);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "SelectContainingDeclarationActionText")]
internal class JetBrains.ReSharper.Features.Navigation.Features.FindDeclarations.SelectContainingDeclarationAction : object {
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
    private static DocumentRange GetSelectionRange(ISolution solution, ITextControl textControl);
    private static DocumentRange GetSelectionRange(IPsiSourceFile sourceFile, DocumentOffset offset, HashSet`1<DocumentRange> selectedRanges);
    protected static void FindClosest(IEnumerable`1<CodeStructureElement> elements, DocumentOffset offset, HashSet`1<DocumentRange> selectedRanges, DocumentRange& closestRange, CodeStructureElement& closestElement);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindDependentCodeActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.FindDependentCodeAction : ContextSearchActionBase`1<IFindDependentCodeProvider> {
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindDependentCodeAllProjectsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.FindDependentCodeInSolutionAction : ContextSearchActionBase`1<IFindDependentCodeInSolutionProvider> {
}
[ShellComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.FindDependentCodeInSolutionProvider : FindDependentCodeProviderBase {
    public bool SolutionWide { get; }
    public virtual bool get_SolutionWide();
}
[ShellComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.FindDependentCodeProvider : FindDependentCodeProviderBase {
    public bool SolutionWide { get; }
    public virtual bool get_SolutionWide();
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.FindDependentCodeProviderBase : object {
    public bool SolutionWide { get; }
    public sealed virtual Action GetSearchesExecution(IDataContext dataContext, INavigationExecutionHost host);
    [CanBeNullAttribute]
protected virtual ICollection`1<IProjectToModuleReference> GetSelectedReferences(IDataContext context);
    protected static void AddNuGetReferencesToModuleReferences(IDataContext context, List`1<IProjectToPackageReference> nugetReferences, List`1<IProjectToModuleReference> moduleReferences);
    private SearchRequest CreateSearchRequest(IDataContext context);
    public abstract virtual bool get_SolutionWide();
    private sealed virtual override void JetBrains.ReSharper.Feature.Services.Navigation.ContextNavigation.ISearchResultPresenter.ProcessResults(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences, Func`1<IOccurrenceBrowserDescriptor> descriptorFactory);
    private sealed virtual override bool JetBrains.ReSharper.Feature.Services.Navigation.ContextNavigation.ISearchResultPresenter.ProcessImmediateResults(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> results);
    private sealed virtual override void JetBrains.ReSharper.Feature.Services.Navigation.ContextNavigation.ISearchResultPresenter.ProcessMessage(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, string message);
    private sealed virtual override string JetBrains.ReSharper.Feature.Services.Navigation.ContextNavigation.ISearchResultPresenter.GetNotFoundMessage(SearchRequest request);
    public sealed virtual IOccurrenceBrowserDescriptor CreateSearchDescriptor(SearchRequest searchRequest, ICollection`1<IOccurrence> results);
    public sealed virtual IAsyncOccurrenceBrowserDescriptor TryCreateAsyncDescriptor(SearchRequest searchRequest);
    public sealed virtual bool ProcessRawResults(IDataContext context, ICollection`1<IOccurrence> results, INavigationExecutionHost navigationExecutionHost, SearchRequest searchRequest);
    [CompilerGeneratedAttribute]
internal static bool <CreateSearchRequest>g__IsNativeProject|3_0(IProject project);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.FindUsagesOfModuleReferenceContextSearch : MultipleRequestContextSearchBase`2<SearchCodeDependentOnReferenceRequest, IProjectToModuleReference> {
    public virtual RequestContextSearchCandidateType GetCandidateType(ICollection`1<IRequestContextSearchCandidate> candidates);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IOccurrence Present(IProjectToModuleReference candidate);
    protected virtual IEnumerable`1<IProjectToModuleReference> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual SearchCodeDependentOnReferenceRequest CreateSearchRequest(IDataContext context, ICollection`1<IProjectToModuleReference> elements, ICollection`1<IProjectToModuleReference> initialTargets);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.IFindDependentCodeInSolutionProvider {
}
public interface JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.IFindDependentCodeProvider {
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.IntoFindDependenciesGroup : object {
    public IntoFindDependenciesGroup(FindDependentCodeAction findDependentCodeAction, FindDependentCodeInSolutionAction findDependentCodeInSolution, FindReferencedCodeAction findReferencedCodeAction);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.IntoFindDependenciesGroup2 : object {
    public IntoFindDependenciesGroup2(FindDependentCodeAction findDependentCodeAction, FindDependentCodeInSolutionAction findDependentCodeInSolution);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.ReferencedCodeUsagesDescriptor : SearchUsagesDescriptor {
    public TypeDependenciesOptions DiagrammingOptions { get; }
    public string ActionBarID { get; }
    public ReferencedCodeUsagesDescriptor(SearchRequest request, ICollection`1<IOccurrence> results);
    public virtual TypeDependenciesOptions get_DiagrammingOptions();
    public virtual string get_ActionBarID();
    protected virtual string GetScopeTitleWithoutCache(Scope scope);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.SearchCodeDependentOnReferenceRequest : SearchRequest {
    private IReadOnlyList`1<IProjectToModuleReference> myTargetProjectToModuleReferences;
    private ISearchResultsConsumer myCustomConsumer;
    [CompilerGeneratedAttribute]
private ISolution <Solution>k__BackingField;
    public ISolution Solution { get; }
    public string Title { get; }
    public ICollection SearchTargets { get; }
    public SearchCodeDependentOnReferenceRequest(ICollection`1<IProjectToModuleReference> projectToModuleReferences, ISearchResultsConsumer customConsumer);
    [CompilerGeneratedAttribute]
public virtual ISolution get_Solution();
    public virtual string get_Title();
    public virtual ICollection get_SearchTargets();
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    public static bool Filter(FindResultReferencedCode findResultReferencedCode);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindDependentCode.SearchDependentCodeProjectRequest : SearchRequest {
    private List`1<IProject> myProjects;
    private JetHashSet`1<string> myAssemblyNames;
    private List`1<IModule> myModules;
    [CompilerGeneratedAttribute]
private ISolution <Solution>k__BackingField;
    public string Title { get; }
    public ISolution Solution { get; }
    public ICollection SearchTargets { get; }
    public SearchDependentCodeProjectRequest(IEnumerable`1<IModule> modules);
    public virtual string get_Title();
    [CompilerGeneratedAttribute]
public virtual ISolution get_Solution();
    public virtual ICollection get_SearchTargets();
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindExtensions.SearchExtensionMethodsDescriptor : SearchDescriptor {
    public SearchExtensionMethodsDescriptor(ExtensionMethodsSearchRequest request, ICollection`1<IOccurrence> occurrences);
    public virtual string GetResultsTitle(OccurrenceSection section);
    protected virtual Func`2<SearchRequest, IOccurrenceBrowserDescriptor> GetDescriptorFactory();
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "BaseSymbolsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindHierarchy.GotoBaseAction : ContextNavigationActionBase`1<INavigateToBaseProvider> {
    public static string GOTO_BASE_ACTION_ID;
    public virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "DerivedSymbolsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindHierarchy.GotoInheritorsAction : ContextNavigationActionBase`1<IGotoInheritorsProvider> {
    public virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindHierarchy.GotoInheritorsProvider : HierarchyProviderBase`3<IInheritorsContextSearch, SearchRequest, SearchDescriptor> {
    public GotoInheritorsProvider(IFeaturePartsContainer manager);
    protected virtual SearchDescriptor CreateSearchDescriptor(SearchRequest searchRequest, ICollection`1<IOccurrence> results);
    protected virtual OccurrencePresentationOptions ProvideFeatureSpecificPresentationOptions(SearchRequest searchRequest);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.FindHierarchy.GotoInheritorsProvider/<CreateWorkflow>d__3")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.FindHierarchy.HierarchyProviderBase`3 : RequestContextSearchProvider`3<TContextSearch, TSearchRequest, TDescriptor> {
    protected HierarchyProviderBase`3(IFeaturePartsContainer manager);
    protected virtual bool ProcessImmediateResults(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences);
    protected virtual void ProcessResults(IDataContext context, TSearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences, Func`1<IOccurrenceBrowserDescriptor> descriptorFactory);
    protected abstract virtual OccurrencePresentationOptions ProvideFeatureSpecificPresentationOptions(TSearchRequest searchRequest);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindHierarchy.NavigateToBaseProvider : HierarchyProviderBase`3<IBaseContextSearch, SearchRequest, SearchDescriptor> {
    public NavigateToBaseProvider(IFeaturePartsContainer manager);
    protected virtual SearchDescriptor CreateSearchDescriptor(SearchRequest searchRequest, ICollection`1<IOccurrence> results);
    protected virtual OccurrencePresentationOptions ProvideFeatureSpecificPresentationOptions(SearchRequest searchRequest);
    public virtual bool ProcessRawResults(IDataContext context, ICollection`1<IOccurrence> results, INavigationExecutionHost navigationExecutionHost, SearchRequest searchRequest);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.FindHierarchy.NavigateToBaseProvider/<CreateWorkflow>d__4")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ReferencedCodeActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.FindReferencedCodeAction : ContextNavigationActionBase`1<FindReferencedCodeProvider> {
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.FindReferencedCodeDescriptor : SearchDescriptor {
    private SearchRequest myRequest;
    protected int DefaultGroupingIndex { get; protected set; }
    public string ActionBarID { get; }
    public bool ShouldBeUnloaded { get; }
    public FindReferencedCodeDescriptor(SearchRequest request);
    public FindReferencedCodeDescriptor(SearchRequest request, ICollection`1<IOccurrence> results);
    protected virtual int get_DefaultGroupingIndex();
    protected virtual void set_DefaultGroupingIndex(int value);
    public virtual string get_ActionBarID();
    protected virtual string GetResultTitleTemplate(OccurrenceSection section);
    public virtual string GetResultsTitle(OccurrenceSection section);
    public virtual bool Search();
    public virtual SearchRequestRestorePoint CreateRestorePoint();
    public virtual bool get_ShouldBeUnloaded();
    protected virtual Func`2<SearchRequest, IOccurrenceBrowserDescriptor> GetDescriptorFactory();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.FindReferencedCodeGroupingProvider : OccurrenceBrowserGroupingProvider {
    private static TreeModelGrouping`1[] ourGroupings;
    private static FindReferencedCodeGroupingProvider();
    public virtual ICollection`1<TreeModelGrouping`1<IOccurrence>> GetGroupings(TreeModelBrowserDescriptorBase descriptor);
    public virtual bool IsApplicable(TreeModelBrowserDescriptorBase descriptor);
}
[ShellComponentAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.FindReferencedCodeProvider : RequestContextSearchProvider`3<IReferencedCodeContextSearch, SearchReferencedCodeRequest, FindReferencedCodeDescriptor> {
    public FindReferencedCodeProvider(IFeaturePartsContainer manager);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.FindReferencedCodeProvider/<CreateWorkflow>d__1")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    protected virtual FindReferencedCodeDescriptor CreateSearchDescriptor(SearchReferencedCodeRequest searchRequest, ICollection`1<IOccurrence> results);
}
[SettingsKeyAttribute("JetBrains.Application.UI.Utils.UserInterfaceSettings", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindReferencedCodeViewSettingsSettingDescription")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.FindReferencedCodeViewSettings : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "GroupBySettingDescription")]
public int GroupingIndex;
}
[GlobalSettingsUpgraderAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.FindReferencedCodeViewSettingsUpgrader : SettingTablesUpgrader {
    public FindReferencedCodeViewSettingsUpgrader(ProductConfigurations productConfigurations);
    protected virtual void DoUpgrade(IComponentSettingsProvider legacySettingsProvider, IContextBoundSettingsStore boundSettingsStore, Lifetime upgradeLifetime, SettingsTableBase workspaceSettingsTable, SettingsTableBase globalSettingsTable);
}
[ActionAttribute("FindReferencedCode.Update", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "RefreshActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindReferencedCode.ReferencedCodeUpdateAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.GotoDeclaredElementsDescriptorFactory : object {
    public static GotoDeclaredElementsDescriptorFactory Instance;
    private static GotoDeclaredElementsDescriptorFactory();
    public sealed virtual IOccurrenceBrowserDescriptor Create(ISolution solution, GotoSearchController controller, ICollection`1<IOccurrence> results, Func`1<IEnumerable`1<IOccurrence>> restoreFunc, IProgressIndicator progressIndicator);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.GotoFindResultHelper : object {
    public static void EnableShow(GotoSearchController controller, LifetimeDefinition definition, GotoToFindResultFactory builder, bool autoAsterisk);
    private static ICollection`1<IOccurrence> RestoreFunc(IGotoControllerItemsProvider provider, GotoItemsProviderModel itemsModel);
    private static void ConsumeItems(IGotoControllerItemsProvider itemsProvider, GotoItemsProviderModel itemsModel, List`1<PresentableGotoItem> pairsToPresent);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.GotoSymbolDescriptorFactory : object {
    public static GotoSymbolDescriptorFactory Instance;
    private static GotoSymbolDescriptorFactory();
    public sealed virtual IOccurrenceBrowserDescriptor Create(ISolution solution, GotoSearchController controller, ICollection`1<IOccurrence> results, Func`1<IEnumerable`1<IOccurrence>> restoreFunc, IProgressIndicator progressIndicator);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.GotoToFindResultFactory : object {
    [CompilerGeneratedAttribute]
private ISolution <Solution>k__BackingField;
    [CompilerGeneratedAttribute]
private IModuleReferenceResolveContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IGotoOccurrenceDescriptorFactory <DescriptorFactory>k__BackingField;
    [NotNullAttribute]
public ISolution Solution { get; }
    [NotNullAttribute]
public IModuleReferenceResolveContext Context { get; }
    public IGotoOccurrenceDescriptorFactory DescriptorFactory { get; }
    public GotoToFindResultFactory(ISolution solution, IModuleReferenceResolveContext context, IGotoOccurrenceDescriptorFactory descriptorFactory);
    [CompilerGeneratedAttribute]
public ISolution get_Solution();
    [CompilerGeneratedAttribute]
public IModuleReferenceResolveContext get_Context();
    [CompilerGeneratedAttribute]
public IGotoOccurrenceDescriptorFactory get_DescriptorFactory();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.IGotoOccurrenceDescriptorFactory {
    public abstract virtual IOccurrenceBrowserDescriptor Create(ISolution solution, GotoSearchController controller, ICollection`1<IOccurrence> results, Func`1<IEnumerable`1<IOccurrence>> restoreFunc, IProgressIndicator progressIndicator);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.IntoNavigateOthersGroup : object {
    public IntoNavigateOthersGroup(NavigateBackwardAction navigateBackwardAction, NavigateForwardAction navigateForwardAction);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "NavigateBackwardActionText")]
[VsOverrideActionAttribute("({12F1A339-02B9-46e6-BDAF-1071F76056BF}:1)")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.MouseButtonNavigateBackwardAction : NavigateBackwardActionBase {
    public sealed virtual bool ShouldFallBack(IDataContext context);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "NavigateForwardActionText")]
[VsOverrideActionAttribute("({12F1A339-02B9-46e6-BDAF-1071F76056BF}:2)")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.MouseButtonNavigateForwardAction : NavigateForwardActionBase {
    public sealed virtual bool ShouldFallBack(IDataContext context);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "NavigateBackwardActionText")]
[VsOverrideActionAttribute("({5EFC7975-14BC-11CF-9B2B-00AA00573819}:1106)")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.NavigateBackwardAction : NavigateBackwardActionBase {
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.NavigateBackwardActionBase : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "NavigateForwardActionText")]
[VsOverrideActionAttribute("({5EFC7975-14BC-11CF-9B2B-00AA00573819}:1126)")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.NavigateForwardAction : NavigateForwardActionBase {
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.NavigateForwardActionBase : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindResultsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindResultsBrowser.ShowFindResultsAction : ActivateToolWindowActionHandler`1<FindResultsToolWindowDescriptor> {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindCompiledParameterUsagesContextSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
    private static IProjectFile GetProjectFile(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindSpecialUsagesContextSearch : SpecialUsagesContextSearchBase {
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindUsagesActionText")]
[VsOverrideActionAttribute("({5EFC7975-14BC-11CF-9B2B-00AA00573819}:1915)")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindUsagesAction : ContextNavigationActionBase`1<IFindUsagesProvider> {
    public virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual bool ShouldFallBack(IDataContext context);
    public virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
[DerivedComponentsInstantiationRequirementAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindUsagesContextSearch : UsagesContextSearchBase {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindUsagesOfAssemblyContextSearch : FindUsagesProjectModelElementsContextSearch {
    public FindUsagesOfAssemblyContextSearch(Lifetime lifetime, IShellLocks locks, ProductConfigurations configuration);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual HashSet`1<DeclaredElementInstance> GetTargetDeclaredElements(IDataContext dataContext);
    private static void CollectNonEmptyNamespaces(ISymbolScope cache, INamespace ns, List`1<INamespace> allNamespaces);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindUsagesProjectModelElementsContextSearch : FindUsagesContextSearch {
    private Lifetime myLifetime;
    private IShellLocks myLocks;
    private static object ourLockObj;
    public FindUsagesProjectModelElementsContextSearch(Lifetime lifetime, IShellLocks locks, ProductConfigurations configurations);
    private static FindUsagesProjectModelElementsContextSearch();
    public virtual RequestContextSearchCandidateType GetCandidateType(ICollection`1<IRequestContextSearchCandidate> candidates);
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    [CanBeNullAttribute]
protected virtual HashSet`1<DeclaredElementInstance> GetTargetDeclaredElements(IDataContext dataContext);
    public virtual bool IsContextApplicable(IDataContext dataContext);
}
[ShellComponentAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindUsagesProvider : UsagesContextSearchProviderBase`1<IFindUsagesContextSearch> {
    public FindUsagesProvider(IFeaturePartsContainer manager);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.FindUsages.FindUsagesProvider/<CreateWorkflow>d__1")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.IntoFindUsagesContextMenuActionGroup : object {
    public IntoFindUsagesContextMenuActionGroup(FindUsagesAction findUsages, FindUsagesAdvancedAction findUsagesAdvanced);
}
[ActionAttribute("FindUsages.Update", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "RefreshActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsages.UpdateFindUsagesAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    private void ShowError(string message, LifetimeDefinition refreshLifetime);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.AdvancedSearchingInfo : object {
    [CompilerGeneratedAttribute]
private ISearchDomain <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchPattern <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<DeclaredElementInstance> <Elements>k__BackingField;
    public ISearchDomain Domain { get; }
    public SearchPattern Pattern { get; }
    public ICollection`1<DeclaredElementInstance> Elements { get; }
    public AdvancedSearchingInfo(ICollection`1<DeclaredElementInstance> elements, SearchPattern pattern, ISearchDomain domain);
    [CompilerGeneratedAttribute]
public ISearchDomain get_Domain();
    [CompilerGeneratedAttribute]
public SearchPattern get_Pattern();
    [CompilerGeneratedAttribute]
public ICollection`1<DeclaredElementInstance> get_Elements();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.FindSpecialUsagesAdvancedContextSearch : SpecialUsagesContextSearchBase {
    private IAdvancedSearchingHost myHost;
    public FindSpecialUsagesAdvancedContextSearch(IAdvancedSearchingHost host);
    protected virtual ISearchDomain GetSpecialFinderSearchDomain(ISpecialElementFinder finder, object target, IDataContext context);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FindUsagesAdvancedActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.FindUsagesAdvancedAction : ContextSearchActionBase`1<FindUsagesAdvancedProvider> {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.FindUsagesAdvancedContextSearch : UsagesContextSearchBase {
    private IAdvancedSearchingHost myHost;
    protected IAdvancedSearchingHost Host { get; }
    public FindUsagesAdvancedContextSearch(IAdvancedSearchingHost host);
    public virtual RequestContextSearchCandidateType GetCandidateType(ICollection`1<IRequestContextSearchCandidate> candidates);
    protected IAdvancedSearchingHost get_Host();
    protected virtual ICollection`1<DeclaredElementInstance> Promote(ICollection`1<DeclaredElementInstance> elements);
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
    private static bool AnyExternalAssemblyInDomain(IEnumerable`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
    protected virtual SearchRequest CreateAggregateSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> initialTargets);
}
[ShellComponentAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.FindUsagesAdvancedProvider : UsagesContextSearchProviderBase`1<IFindUsagesAdvancedContextSearch> {
    public FindUsagesAdvancedProvider(IFeaturePartsContainer manager);
}
[DerivedComponentsInstantiationRequirementAttribute("1")]
public interface JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.IAdvancedSearchingHost {
    public abstract virtual AdvancedSearchingInfo ExecuteWithDialog(IDataContext dataContext, ICollection`1<DeclaredElementInstance> instances);
    public abstract virtual ISearchDomain SelectScope(ISearchDomainContext searchDomainContext);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.InteractiveAdvancedSearchingHost : StubAdvancedSearchingHost {
    private ISettingsStore mySettingsStore;
    private IIconHost myIconHost;
    private ILazy`1<OccurrenceStyles> myOccurrenceStyles;
    private ILazy`1<HelpSystem> myHelpSystem;
    protected InteractiveAdvancedSearchingHost(ISettingsStore settingsStore, IIconHost iconHost, ILazy`1<OccurrenceStyles> occurrenceStyles, ILazy`1<HelpSystem> helpSystem);
    public abstract virtual AdvancedSearchingInfo ExecuteWithDialog(IDataContext dataContext, ICollection`1<DeclaredElementInstance> instances);
    protected static AdvancedSearchingInfo CreateAdvancedSearchingInfo(DialogModel`1<AdvancedSearchPropertiesModel> model);
    protected DialogModel`1<AdvancedSearchPropertiesModel> CreateDialogModel(IDataContext dataContext, ICollection`1<DeclaredElementInstance> instances, Lifetime lifetime);
    private static SearchPattern GetSearchPattern(AdvancedSearchPropertiesModel model);
    private static List`1<DeclaredElementInstance> GetSearchElements(AdvancedSearchPropertiesModel model);
    protected BeDialog GetAdvancedSearchPropertiesDialog(Lifetime& lifetime, DialogModel`1<AdvancedSearchPropertiesModel> model);
    private BeControl GetAdvancedSearchPropertiesControl(Lifetime& lifetime, AdvancedSearchPropertiesModel model);
    private BeControl GetDeclaredElementSelectorControl(Lifetime& lifetime, DeclaredElementSelectorModel model);
    private BeControl GetSearchFlagsCollectionControl(Lifetime& lifetime, SearchFlagsCollectionModel model);
    protected BeControl GetScopeSelectorControl(Lifetime& lifetime, ScopeSelectorModel scopeSelectorModel);
    [CompilerGeneratedAttribute]
internal static IEnumerable`1<DeclaredElementInstance> <GetSearchElements>g__GetOverloads|9_0(IEnumerable`1<DeclaredElementInstance> elements);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.FindUsagesAdvanced.StubAdvancedSearchingHost : object {
    [CompilerGeneratedAttribute]
private SearchPattern <Pattern>k__BackingField;
    protected SearchPattern Pattern { get; protected set; }
    [CompilerGeneratedAttribute]
protected SearchPattern get_Pattern();
    [CompilerGeneratedAttribute]
protected void set_Pattern(SearchPattern value);
    public virtual AdvancedSearchingInfo ExecuteWithDialog(IDataContext dataContext, ICollection`1<DeclaredElementInstance> elements);
    public virtual ISearchDomain SelectScope(ISearchDomainContext searchDomainContext);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.AggregatedItemsProviderBase : object {
    [NotNullAttribute]
private List`1<GotoItemsProviderRegistration> myItemsProviders;
    [CompilerGeneratedAttribute]
private GotoControllerNavigationFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LibrariesFlagAutoSwitch>k__BackingField;
    [NotNullAttribute]
public GotoControllerNavigationFilter Filter { get; }
    public bool LibrariesFlagAutoSwitch { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual GotoControllerNavigationFilter get_Filter();
    [CompilerGeneratedAttribute]
public bool get_LibrariesFlagAutoSwitch();
    [CompilerGeneratedAttribute]
public void set_LibrariesFlagAutoSwitch(bool value);
    protected virtual bool AutoActivateAdvancedSearch(GotoItemsProviderModel itemsModel);
    protected virtual bool DeactivateAdvancedSearch(GotoItemsProviderModel itemsModel);
    protected void RegisterFallbackProvider(IGotoControllerItemsProvider provider, bool autoUpgrade);
    protected void RegisterItemsProvider(IGotoControllerItemsProvider provider, string sectionTitle, bool canAutoUpgrade);
    public sealed virtual void ConsumePresentableItems(GotoItemsProviderModel itemsModel, int itemsCount, GotoItemsConsumer itemsConsumer);
    public sealed virtual void ClearCaches();
    private bool ProvideItems(GotoItemsProviderModel itemsModel, GotoItemsConsumer itemsConsumer, IEnumerable`1<GotoItemsProviderRegistration> providers, bool librariesFlagAutoSwitch, int itemsCount);
    [CanBeNullAttribute]
protected virtual object GetMergeKey(PresentableGotoItem item);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.AggregatedGotoClassMemberItemsProvider : AggregatedItemsProviderBase {
    public static AggregatedGotoClassMemberItemsProvider Create(Lifetime lifetime, ISolution solution, IPsiSourceFile sourceFile);
}
[SolutionComponentAttribute("16")]
[DerivedComponentsInstantiationRequirementAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.DefaultExternalSourcesNavigationContextService : object {
    public virtual IDisposable SetExternalSourcesNavigationContext(IPsiSourceFile sourceFile);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.FindInFileItemsProvider : object {
    private ISolution mySolution;
    private IPsiSourceFile mySourceFile;
    public GotoControllerNavigationFilter Filter { get; }
    public FindInFileItemsProvider(ISolution solution, IPsiSourceFile sourceFile);
    public sealed virtual GotoControllerNavigationFilter get_Filter();
    public sealed virtual void ConsumePresentableItems(GotoItemsProviderModel itemsModel, int itemsCount, GotoItemsConsumer itemsConsumer);
    public sealed virtual void ClearCaches();
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.GotoClassMemberController : GotoSearchController {
    private static int GotoClassMemberMenuItemsCount;
    [CompilerGeneratedAttribute]
private IPsiSourceFile <PrimaryPsiSourceFile>k__BackingField;
    private IExternalSourcesNavigationContextService myExternalSourcesNavigationContextService;
    public int MenuItemsCountLimit { get; }
    public IPsiSourceFile PrimaryPsiSourceFile { get; }
    private bool IsAdvancedSearch { get; }
    protected GotoClassMemberController(Lifetime lifetime, GotoByNameModel model, IMainWindowPopupWindowContext popupWindowContext, IExternalSourcesNavigationContextService externalSourcesNavigationContextService, ISolution solution, Nullable`1<LibrariesFlag> librariesFlag, IGotoControllerItemsProvider itemsProvider, IPsiSourceFile primaryPsiSourceFile);
    public virtual int get_MenuItemsCountLimit();
    [CompilerGeneratedAttribute]
public IPsiSourceFile get_PrimaryPsiSourceFile();
    public static GotoClassMemberController Create(Lifetime lifetime, GotoByNameModel model, IShellLocks locks, IMainWindowPopupWindowContext popupWindowContext, IExternalSourcesNavigationContextService externalSourcesNavigationContextService, ISolution solution, IPsiSourceFile sourceFile);
    public virtual bool IsSpecialString(String& filterString);
    protected virtual JetPopupMenuItem Describe(PresentableGotoItem item);
    private JetPopupMenuItem CreateJetPopupMenuItem(PresentableGotoMenuItemTreeNode presentableItem);
    private bool get_IsAdvancedSearch();
    protected virtual IDisposable SetNavigationContext();
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.GotoClassMemberItemsProvider : object {
    private GotoProvidersManager myProvidersManager;
    private FileMemberNavigationScope myScope;
    private GotoContext myGotoContext;
    public GotoControllerNavigationFilter Filter { get; }
    public FileMemberNavigationScope Scope { get; }
    public GotoClassMemberItemsProvider(ISolution solution, IPsiSourceFile sourceFile);
    public sealed virtual GotoControllerNavigationFilter get_Filter();
    public FileMemberNavigationScope get_Scope();
    public sealed virtual void ConsumePresentableItems(GotoItemsProviderModel itemsModel, int itemsCount, GotoItemsConsumer itemsConsumer);
    public sealed virtual void ClearCaches();
    [CanBeNullAttribute]
protected virtual IReadOnlyList`1<IMatchingInfoTreeNode> GetRoots(Func`1<bool> checkForInterrupt, IIdentifierMatcher matcher, bool isExtended);
    private static IEnumerable`1<PresentableGotoMenuItemTreeNode> CreatePresentableItems(IMatchingInfoTreeNode item, int level, IIdentifierMatcher matcher, bool enabled, MatcherScore maxScore);
    [CanBeNullAttribute]
private IList`1<PresentableGotoMenuItemTreeNode> GetMatchedItems(IIdentifierMatcher matcher, IMatchingInfoTreeNode context, int level);
    [CompilerGeneratedAttribute]
internal static IOccurrence <GetMatchedItems>g__Occurrence|12_2(Pair`2<MatcherScore, IEnumerable`1<PresentableGotoMenuItemTreeNode>> pair);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.IExternalSourcesNavigationContextService {
    public abstract virtual IDisposable SetExternalSourcesNavigationContext(IPsiSourceFile sourceFile);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.IGotoClassMemberInitializer {
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToClassMember.PresentableGotoMenuItemTreeNode : PresentableGotoItem {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IMatchingInfoTreeNode <Item>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private MatcherScore <Score>k__BackingField;
    public bool Enabled { get; }
    public IMatchingInfoTreeNode Item { get; }
    public int Level { get; public set; }
    public MatcherScore Score { get; }
    public PresentableGotoMenuItemTreeNode(MatcherScore score, IOccurrence occurrence, int level, MatchingInfo matchingInfo, IMatchingInfoTreeNode item, bool enabled);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public IMatchingInfoTreeNode get_Item();
    [CompilerGeneratedAttribute]
public int get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(int value);
    [CompilerGeneratedAttribute]
public MatcherScore get_Score();
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToFile.GotoFileActionDefaultNameProvider : object {
    public virtual string GetActionName();
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToFile.GotoFileBrowserDescriptor : GotoDeclaredElementsBrowserDescriptor {
    public GotoFileBrowserDescriptor(ISolution solution, string kind, string pattern, IEnumerable`1<IOccurrence> occurrences, Func`1<IEnumerable`1<IOccurrence>> func, IProgressIndicator indicator);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToFile.GotoFileBrowserDescriptorFactory : object {
    public virtual GotoFileBrowserDescriptor CreateGotoFileBrowserDescriptor(ISolution solution, string pattern, IEnumerable`1<IOccurrence> occurrences, Func`1<IEnumerable`1<IOccurrence>> restoreFunc);
    public sealed virtual IOccurrenceBrowserDescriptor Create(ISolution solution, GotoSearchController controller, ICollection`1<IOccurrence> results, Func`1<IEnumerable`1<IOccurrence>> restoreFunc, IProgressIndicator progressIndicator);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToFile.GotoFileBrowserGroupingProvider : OccurrenceBrowserGroupingProvider {
    private static TreeModelGrouping`1[] ourGroupings;
    private static GotoFileBrowserGroupingProvider();
    public virtual ICollection`1<TreeModelGrouping`1<IOccurrence>> GetGroupings(TreeModelBrowserDescriptorBase descriptor);
    public virtual bool IsApplicable(TreeModelBrowserDescriptorBase descriptor);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToMember.GotoFileMemberController : GotoSearchController {
    protected GotoFileMemberController(Lifetime lifetime, ISolution solution, LibrariesFlag librariesFlag, IMainWindowPopupWindowContext popupContext, IGotoControllerItemsProvider itemsProvider);
    public static GotoFileMemberController CreateController(Lifetime lifetime, IPsiSourceFile sourceFile, ISolution solution, LibrariesFlag librariesFlag, IMainWindowPopupWindowContext popupContext);
    private void InitModel(Lifetime lifetime);
    public virtual bool IsSpecialString(String& filterString);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToMember.GotoFileMemberItemsProvider : GotoItemsProviderBase`3<IGotoFileMemberProvider, IChainedSearchProvider, IInstantGotoProvider> {
    private IPsiSourceFile mySourceFile;
    private ICollection`1<IProjectFile> myRelatedFiles;
    public IPsiSourceFile SourceFile { get; }
    public GotoFileMemberItemsProvider(Lifetime lifetime, ISolution solution, object scopeData, bool enableMulticore);
    public IPsiSourceFile get_SourceFile();
    public virtual void ConsumePresentableItems(GotoItemsProviderModel itemsModel, int itemsCount, GotoItemsConsumer itemsConsumer);
    private FileMemberNavigationScope BuildNavigationScope(bool isSearchingInLibs, INavigationProviderFilter filter);
    protected virtual ICollection`1<ChainedNavigationItemData> InitScopes(bool isSearchingInLibs, INavigationProviderFilter navfilter);
    protected virtual void SortOccurrences(List`1<PresentableGotoItem> items, string filterString);
    private static ICollection`1<IProjectFile> GetRelatedFiles(IPsiSourceFile psiSourceFile);
    [CompilerGeneratedAttribute]
private ICollection`1<IProjectFile> <BuildNavigationScope>b__6_0();
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToMember.GotoMethodController : GotoFileMemberController {
    public GotoMethodController(Lifetime lifetime, ISolution solution, LibrariesFlag librariesFlag, IMainWindowPopupWindowContext mainWindowPopupWindowContext, IGotoControllerItemsProvider itemsProvider);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToMember.GotoMethodItemsProvider : GotoFileMemberItemsProvider {
    public GotoMethodItemsProvider(Lifetime lifetime, ISolution solution, object scopeData, bool enableMulticore);
    protected virtual ICollection`1<ChainedNavigationItemData> InitScopes(bool isSearchingInLibs, INavigationProviderFilter navfilter);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToRecentFiles.GotoRecentFilesController : GotoSearchController {
    private GotoRecentFilesController(Lifetime lifetime, GotoByNameModel model, IMainWindowPopupWindowContext popupWindowContext, ISolution solution, IGotoControllerItemsProvider itemsProvider);
    public static GotoRecentFilesController Create(Lifetime lifetime, GotoByNameModel model, IMainWindowPopupWindowContext popupWindowContext, ISolution solution, Nullable`1<LibrariesFlag> librariesFlag);
    public virtual bool IsSpecialString(String& filterString);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToRecentFiles.GotoRecentFilesItemsProvider : AggregatedItemsProviderBase {
    public GotoRecentFilesItemsProvider(Lifetime lifetime, ISolution solution);
    protected virtual object GetMergeKey(PresentableGotoItem item);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToRecentFiles.RecentFilesItemsProvider : GotoSortedItemsProvider`1<OccurrenceAndMatchingInfo> {
    [NotNullAttribute]
private ISolution mySolution;
    public RecentFilesItemsProvider(ISolution solution);
    protected virtual bool Matches(IIdentifierMatcher identifierMatcher, OccurrenceAndMatchingInfo item);
    protected virtual IEnumerable`1<OccurrenceAndMatchingInfo> ProvideItems();
    protected virtual PresentableGotoItem Describe(OccurrenceAndMatchingInfo item, IIdentifierMatcher identifierMatcher);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "RelatedFilesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToRelated.GotoRelatedFilesAction : ContextNavigationActionBase`1<GotoRelatedFilesProvider> {
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToRelated.GotoRelatedFilesProvider : object {
    private Lifetime myLifetime;
    private IShellLocks myShellLocks;
    private RelatedFilesManager myRelatedFilesManager;
    private JetPopupMenus myJetPopupMenus;
    private ProjectModelElementPresentationService myProjectModelElementPresentationService;
    private IUIApplication myEnvironment;
    public GotoRelatedFilesProvider(Lifetime lifetime, IShellLocks shellLocks, RelatedFilesManager relatedFilesManager, JetPopupMenus jetPopupMenus, ProjectModelElementPresentationService projectModelElementPresentationService, IUIApplication environment);
    private static bool IsAvailable(IDataContext context);
    private Action`1<DescribeItemEventArgs> GetDescribeAction(Lifetime lifetime, IEnumerable`1<RelatedFileOccurence> currentLevelMenuItems, IDictionary`2<IProjectFile, IconId> iconIds, IDictionary`2<IProjectFile, IList`1<RelatedFileOccurence>> relatedData, IProjectFile originalProjectFile);
    private void OpenRelatedFiles(IDataContext context);
    public virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Goto.GoToSymbol.GotoSymbolBrowserDescriptor : GotoDeclaredElementsBrowserDescriptor {
    public GotoSymbolBrowserDescriptor(ISolution solution, string kind, string pattern, IEnumerable`1<IOccurrence> occurrences, Func`1<IEnumerable`1<IOccurrence>> restoreFunc, IProgressIndicator indicator);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaration.DeclarationProviderBase`3 : RequestContextSearchProvider`3<TContextSearch, TSearchRequest, TSearchDescriptor> {
    protected DeclarationProviderBase`3(IFeaturePartsContainer manager);
    public virtual SearchesExecutionResult`1<TContextSearch> GetContextSearchRequests(IDataContext dataContext);
    protected virtual void ProcessResults(IDataContext context, TSearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences, Func`1<IOccurrenceBrowserDescriptor> descriptorFactory);
    protected virtual OccurrencePresentationOptions ProvideFeatureSpecificPresentationOptions(TSearchRequest searchRequest);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "GoToDeclarationActionText")]
[VsOverrideActionAttribute("({5EFC7975-14BC-11CF-9B2B-00AA00573819}:935)")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaration.GotoDeclarationAction : ContextSearchActionBase`1<IGotoDeclarationProvider> {
    public static string VS_OVERRIDDEN_ID;
    private static ILogger ourLog;
    private static GotoDeclarationAction();
    public sealed virtual bool ShouldFallBack(IDataContext context);
    protected virtual void Execute(IList`1<Pair`2<Action, IGotoDeclarationProvider>> executes);
    public virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaration.GotoDeclarationProvider : DeclarationProviderBase`3<IDeclarationSearch, SearchDeclarationsRequest, SearchDeclarationsDescriptor> {
    public GotoDeclarationProvider(IFeaturePartsContainer manager);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaration.GotoDeclarationProvider/<CreateWorkflow>d__1")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    protected virtual SearchDeclarationsDescriptor CreateSearchDescriptor(SearchDeclarationsRequest searchRequest, ICollection`1<IOccurrence> results);
}
[ContextNavigationProviderAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaration.GotoModuleReferenceProvider : object {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaration.GotoModuleReferenceProvider/<CreateWorkflow>d__0")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    public sealed virtual Action GetSearchesExecution(IDataContext dataContext, INavigationExecutionHost host);
    private static Action GetSearchesExecutionInternal(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaration.IGotoDeclarationProvider {
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.GotoDeclarationUsagesIgnoreSingleDeclarationPolicy : DefaultIgnoreSingleDeclarationPolicy {
    public virtual bool ShouldIgnoreSingleDeclaration(IDataContext context, IDeclaration declaration, TypeUsageContextSearchBase`1<TSearchRequest> typeUsageContextSearch);
}
[ShellComponentAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.GotoDeclarationUsagesProvider : DeclarationProviderBase`3<IDeclarationSearch, SearchDeclarationsRequest, SearchDeclarationsDescriptor> {
    [NotNullAttribute]
private GotoDeclarationUsagesSettings mySettings;
    public GotoDeclarationUsagesProvider(GotoDeclarationUsagesSettings settings, IFeaturePartsContainer manager);
    protected virtual void Execute(IDataContext context, IEnumerable`1<IDeclarationSearch> searches, INavigationExecutionHost host);
    protected virtual bool ProcessImmediateResults(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences);
    protected virtual void ProcessResults(IDataContext context, SearchDeclarationsRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences, Func`1<IOccurrenceBrowserDescriptor> descriptorFactory);
    protected virtual SearchDeclarationsDescriptor CreateSearchDescriptor(SearchDeclarationsRequest searchRequest, ICollection`1<IOccurrence> results);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.GotoDeclarationUsagesSettings : object {
    [NotNullAttribute]
private IProperty`1<SmartGotoDeclarationMode> myMode;
    public SmartGotoDeclarationMode Mode { get; }
    public bool IsRevolver { get; }
    public bool IsNothing { get; }
    public bool IsShowUsages { get; }
    public bool IsNavigateTo { get; }
    public GotoDeclarationUsagesSettings(Lifetime lifetime, ISettingsStore settingsStore, IThreading threading);
    public virtual SmartGotoDeclarationMode get_Mode();
    public bool get_IsRevolver();
    public bool get_IsNothing();
    public bool get_IsShowUsages();
    public bool get_IsNavigateTo();
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.BackState : GotoDeclarationUsagesStateBase {
    [NotNullAttribute]
private IGotoDeclarationUsagesState myState;
    [NotNullAttribute]
private RangeOccurrence myTarget;
    [NotNullAttribute]
private RangeOccurrence myTargetRange;
    public string Status { get; }
    public BackState(IGotoDeclarationUsagesState state, RangeOccurrence target, RangeOccurrence targetRange);
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual string get_Status();
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.CheckDeclarationsState : GotoDeclarationUsagesStateBase {
    private SearchDeclarationsRequest mySearchRequest;
    private IGotoDeclarationUsagesState myBackState;
    private IList`1<IOccurrence> myOriginalDeclarations;
    public string Status { get; }
    public CheckDeclarationsState(SearchDeclarationsRequest searchRequest, IGotoDeclarationUsagesState backState, IList`1<IOccurrence> originalDeclarations);
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual string get_Status();
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.FirstDeclarationState : GotoDeclarationUsagesStateBase {
    [NotNullAttribute]
private INavigationExecutionHost myHost;
    [NotNullAttribute]
private IGotoDeclarationUsagesState myBackState;
    [NotNullAttribute]
private IList`1<IOccurrence> myDeclarations;
    private Nullable`1<OccurrencePresentationOptions> myOptions;
    public string Status { get; }
    public FirstDeclarationState(INavigationExecutionHost host, IGotoDeclarationUsagesState backState, IList`1<IOccurrence> declarations, Nullable`1<OccurrencePresentationOptions> options);
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual string get_Status();
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.GotoDeclarationUsagesFinder : object {
    [NotNullAttribute]
private LifetimeDefinition myFinderLifetimeDefinition;
    [NotNullAttribute]
private Lifetime mySessionLifetime;
    [NotNullAttribute]
private ISolution mySolution;
    [NotNullAttribute]
private IPsiSourceFile mySourceFile;
    [NotNullAttribute]
private ProgressIndicator myProgressIndicator;
    private TextRange myRange;
    [NotNullAttribute]
private Property`1<int> myIndexProperty;
    [NotNullAttribute]
private Property`1<int> myTotalProperty;
    [NotNullAttribute]
private List`1<IOccurrence> myPendingOccurrences;
    [NotNullAttribute]
private List`1<IOccurrence> myFeatureOccurrences;
    [NotNullAttribute]
private List`1<IOccurrence> myAllOccurrences;
    [CanBeNullAttribute]
private GotoDeclarationUsagesFinderProvider myFinderProvider;
    private bool myHasContextNotificationHost;
    [CanBeNullAttribute]
private INavigationModeProvider myNavigationModeProvider;
    [CompilerGeneratedAttribute]
private int <Shift>k__BackingField;
    [NotNullAttribute]
public ProgressIndicator ProgressIndicator { get; }
    [NotNullAttribute]
public IProperty`1<int> IndexProperty { get; }
    [NotNullAttribute]
public IProperty`1<int> TotalProperty { get; }
    public int Shift { get; private set; }
    [NotNullAttribute]
public IList`1<IOccurrence> FeatureOccurrences { get; }
    [NotNullAttribute]
public List`1<IOccurrence> AllOccurrences { get; }
    public bool HasContextNotificationHost { get; }
    public GotoDeclarationUsagesFinder(Lifetime sessionLifetime, ISolution solution, IContextNotificationHost host, IPsiSourceFile sourceFile, TextRange range);
    public ProgressIndicator get_ProgressIndicator();
    public IProperty`1<int> get_IndexProperty();
    public IProperty`1<int> get_TotalProperty();
    [CompilerGeneratedAttribute]
public int get_Shift();
    [CompilerGeneratedAttribute]
private void set_Shift(int value);
    public IList`1<IOccurrence> get_FeatureOccurrences();
    public List`1<IOccurrence> get_AllOccurrences();
    public bool get_HasContextNotificationHost();
    [NotNullAttribute]
private IList`1<IOccurrence> GetCurrentFeatureOccurrences();
    public void NavigateFirst(IDataContext context, IGotoDeclarationUsagesNavigator navigator, IGotoDeclarationUsagesState state);
    public void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator, IGotoDeclarationUsagesState state);
    public void NavigateBack(IDataContext context, IGotoDeclarationUsagesNavigator navigator, IGotoDeclarationUsagesState state);
    [NotNullAttribute]
public IOccurrenceBrowserDescriptor CreateDescriptor();
    [CanBeNullAttribute]
private IOccurrence FirstOccurrence(IGotoDeclarationUsagesNavigator navigator);
    [CanBeNullAttribute]
private IOccurrence NextOccurrence(IGotoDeclarationUsagesNavigator navigator);
    [CanBeNullAttribute]
private IOccurrence BackOccurrence(IGotoDeclarationUsagesNavigator navigator);
    private void NextOccurrenceWithModelDialog(IDataContext context, IGotoDeclarationUsagesNavigator navigator, IGotoDeclarationUsagesState state, Func`2<IGotoDeclarationUsagesNavigator, IOccurrence> nextOccurrence);
    private void QueueReadLock(string name, Action action);
    private void ExecuteOrQueueWhenNotGuarded(Lifetime lifetime, string name, Action action);
    public void Merge(IOccurrence data);
    public void Complete();
    public void SetCurrent(IOccurrence occurrence);
    [CompilerGeneratedAttribute]
private void <.ctor>b__14_0();
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.GotoDeclarationUsagesFinderProvider : UsagesContextSearchProviderBase`1<IFindUsagesContextSearch> {
    private GotoDeclarationUsagesFinder myFinder;
    private IGotoDeclarationUsagesNavigator myNavigator;
    private SearchRequest myLast;
    public GotoDeclarationUsagesFinderProvider(GotoDeclarationUsagesFinder finder, IGotoDeclarationUsagesNavigator navigator);
    protected virtual void ExecuteSearchRequest(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host);
    public SearchDescriptor Create(ICollection`1<IOccurrence> occurrences);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.GotoDeclarationUsagesManager : object {
    private Lifetime myLifetime;
    [NotNullAttribute]
private ISolution mySolution;
    private GotoDeclarationUsagesSettings mySettings;
    [NotNullAttribute]
private IProperty`1<GotoDeclarationUsagesSession> mySession;
    [CanBeNullAttribute]
private IContextNotificationHost myContextNotificationHost;
    [NotNullAttribute]
public IProperty`1<GotoDeclarationUsagesSession> Session { get; }
    public GotoDeclarationUsagesManager(Lifetime lifetime, ISolution solution, ITextControlManager textControlManager, IOptional`1<IContextNotificationHost> contextNotificationHost, ContextManager contextManager, GotoDeclarationUsagesSettings settings);
    public IProperty`1<GotoDeclarationUsagesSession> get_Session();
    private void BeforePhysicalPsiChanged(ITreeNode obj);
    public bool Execute(IDataContext context, INavigationExecutionHost host);
    public bool ProcessResults(IDataContext context, INavigationExecutionHost host, SearchDeclarationsRequest searchRequest, IList`1<IOccurrence> declarations, Nullable`1<OccurrencePresentationOptions> options, string title);
    protected virtual bool StationaryGotoDeclaration(IDataContext context);
    [CanBeNullAttribute]
private GotoDeclarationUsagesSession CreateSession(IDataContext context, INavigationExecutionHost host, SearchDeclarationsRequest searchRequest, IList`1<IOccurrence> declarations, Nullable`1<OccurrencePresentationOptions> options, string title);
    private bool IsNavigateToSearchTarget(SearchDeclarationsRequest searchRequest, IDataContext dataContext);
    [CompilerGeneratedAttribute]
private void <CreateSession>b__12_1();
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.GotoDeclarationUsagesNotificationModel : ContextNotificationModel {
    [CanBeNullAttribute]
private GotoDeclarationUsagesSession mySession;
    [NotNullAttribute]
private string myName;
    [CanBeNullAttribute]
private string myShortcut;
    public bool HasProgress { get; }
    public double Fraction { get; }
    public string Title { get; }
    public double TitleExtraWidth { get; }
    private bool IsValid { get; }
    [NotNullAttribute]
public GotoDeclarationUsagesSession Session { get; }
    public GotoDeclarationUsagesNotificationModel(LifetimeDefinition lifetimeDefinition, GotoDeclarationUsagesSession session, string name);
    public virtual bool get_HasProgress();
    public virtual double get_Fraction();
    public virtual string get_Title();
    public virtual double get_TitleExtraWidth();
    protected virtual void FillActions();
    private bool get_IsValid();
    public GotoDeclarationUsagesSession get_Session();
    [CompilerGeneratedAttribute]
private void <.ctor>b__3_0();
    [CompilerGeneratedAttribute]
private void <.ctor>b__3_1();
}
[RegisterHighlighterAttribute("ReSharper Smart Declaration")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.GotoDeclarationUsagesSession : object {
    public static string ATTRIBUTE_ID;
    [NotNullAttribute]
private INavigationExecutionHost myNavigationExecutionHost;
    [NotNullAttribute]
private string myName;
    [NotNullAttribute]
private IShellLocks myLocks;
    [NotNullAttribute]
private IDocumentMarkupManager myDocumentMarkupManager;
    [NotNullAttribute]
private LifetimeDefinition myLifetimeDefinition;
    [NotNullAttribute]
private GotoDeclarationUsagesFinder myFinder;
    [NotNullAttribute]
private SimpleSignal myChangesSignal;
    [CanBeNullAttribute]
private IContextNotificationHost myContextNotificationHost;
    [NotNullAttribute]
private IGotoDeclarationUsagesState myState;
    [NotNullAttribute]
private IDocument myDocument;
    [NotNullAttribute]
private ICollection`1<IHighlighter> myHighlighters;
    [CanBeNullAttribute]
private GotoDeclarationUsagesNotificationModel myNotificationModel;
    private bool myUseResultList;
    [NotNullAttribute]
private List`1<IOccurrence> myCurrentOccurrences;
    [CanBeNullAttribute]
private IOccurrence myCurrentOccurrence;
    private bool myInternalNavigation;
    private TextRange myDeclarationRange;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    [NotNullAttribute]
public Lifetime Lifetime { get; }
    [NotNullAttribute]
public GotoDeclarationUsagesFinder Finder { get; }
    [NotNullAttribute]
public IShellLocks Locks { get; }
    [NotNullAttribute]
public IGotoDeclarationUsagesState State { get; }
    public INavigationExecutionHost NavigationExecutionHost { get; }
    public TextRange CurrentRange { get; }
    [NotNullAttribute]
public SimpleSignal ChangesSignal { get; }
    public GotoDeclarationUsagesSession(LifetimeDefinition lifetimeDefinition, GotoDeclarationUsagesFinder finder, IGotoDeclarationUsagesState state, ISolution solution, IContextNotificationHost contextNotificationHost, INavigationExecutionHost navigationExecutionHost, IPsiSourceFile sourceFile, string name);
    public Lifetime get_Lifetime();
    public GotoDeclarationUsagesFinder get_Finder();
    public IShellLocks get_Locks();
    public IGotoDeclarationUsagesState get_State();
    public sealed virtual INavigationExecutionHost get_NavigationExecutionHost();
    public sealed virtual TextRange get_CurrentRange();
    public SimpleSignal get_ChangesSignal();
    public sealed virtual void Terminate();
    public void NavigateNext(IDataContext context);
    public void NavigateBack(IDataContext context);
    public void UpdateDocument(IDocument document);
    private sealed virtual override void JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.IGotoDeclarationUsagesNavigator.Navigate(IDataContext context, IGotoDeclarationUsagesState nextState, NavigatorStrategy strategy, IOccurrence target, IOccurrence targetRange);
    private sealed virtual override void JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.IGotoDeclarationUsagesNavigator.TerminateWithMessage(IDataContext context, string message);
    private void SetState(IGotoDeclarationUsagesState nextState);
    public sealed virtual void ShowFindResults();
    private sealed virtual override void JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.IGotoDeclarationUsagesNavigator.ShowNavigationMenu(IDataContext context, IGotoDeclarationUsagesState nextState);
    private void UpdateHighlightings();
    private void RemoveHighlightings();
    public bool Update(IDataContext context);
    public bool AcceptChange(int offset, Func`1<TextRange> updateRangeAction);
    private sealed virtual override Action JetBrains.Application.ResultList.IResultListHandler.GoToNextLocation(Lifetime lifetimeExec, IDataContext context, ActionPresentation presentation);
    private sealed virtual override Action JetBrains.Application.ResultList.IResultListHandler.GoToPrevLocation(Lifetime lifetimeExec, IDataContext context, ActionPresentation presentation);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    private void UpdateState();
    [CompilerGeneratedAttribute]
private void <.ctor>b__18_0();
    [CompilerGeneratedAttribute]
private void <JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.IGotoDeclarationUsagesNavigator.Navigate>b__37_0();
    [CompilerGeneratedAttribute]
private void <ShowFindResults>b__40_0();
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.GotoDeclarationUsagesStateBase : object {
    public string Status { get; }
    public virtual bool CanNavigateNext();
    public virtual bool CanNavigateBack();
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual void NavigateBack(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public abstract virtual string get_Status();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.IGotoDeclarationUsagesNavigator {
    [NotNullAttribute]
public INavigationExecutionHost NavigationExecutionHost { get; }
    public TextRange CurrentRange { get; }
    public abstract virtual INavigationExecutionHost get_NavigationExecutionHost();
    public abstract virtual TextRange get_CurrentRange();
    public abstract virtual void Navigate(IDataContext context, IGotoDeclarationUsagesState nextState, NavigatorStrategy strategy, IOccurrence target, IOccurrence targetRange);
    public abstract virtual void Terminate();
    public abstract virtual void TerminateWithMessage(IDataContext context, string message);
    public abstract virtual void ShowFindResults();
    public abstract virtual void ShowNavigationMenu(IDataContext context, IGotoDeclarationUsagesState nextState);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.IGotoDeclarationUsagesState {
    public string Status { get; }
    public abstract virtual string get_Status();
    public abstract virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public abstract virtual bool CanNavigateNext();
    public abstract virtual void NavigateBack(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public abstract virtual bool CanNavigateBack();
}
public enum JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.NavigatorStrategy : Enum {
    public int value__;
    public static NavigatorStrategy Notification;
    public static NavigatorStrategy Nothing;
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.NextDeclarationState : GotoDeclarationUsagesStateBase {
    [NotNullAttribute]
private IGotoDeclarationUsagesState myBackState;
    [NotNullAttribute]
private IList`1<IOccurrence> myOccurrences;
    [NotNullAttribute]
private IOccurrence myOriginal;
    private int myIndex;
    private IOccurrence myOccurrence;
    private int myTransitions;
    public string Status { get; }
    public NextDeclarationState(IGotoDeclarationUsagesState backState, IList`1<IOccurrence> occurrences, IOccurrence original);
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual string get_Status();
    private void SetNext(bool skipOriginal);
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.ShowMenuState : GotoDeclarationUsagesStateBase {
    private IGotoDeclarationUsagesState myState;
    public string Status { get; }
    public ShowMenuState(IGotoDeclarationUsagesState state);
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual string get_Status();
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.UsagesState : GotoDeclarationUsagesStateBase {
    [NotNullAttribute]
private GotoDeclarationUsagesFinder myFinder;
    public string Status { get; }
    public UsagesState(GotoDeclarationUsagesFinder finder);
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual void NavigateBack(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual bool CanNavigateBack();
    public virtual string get_Status();
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.Impl.WaitForUsagesState : GotoDeclarationUsagesStateBase {
    [NotNullAttribute]
private GotoDeclarationUsagesFinder myFinder;
    public string Status { get; }
    public WaitForUsagesState(GotoDeclarationUsagesFinder finder);
    public virtual void NavigateNext(IDataContext context, IGotoDeclarationUsagesNavigator navigator);
    public virtual string get_Status();
}
[ActionAttribute("NavigateFromDeclaration", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "IterateUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclarationUsages.NavigateFromDeclarationAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaredElement.GotoDeclaredElementActionBase : object {
    protected abstract virtual void Execute(ISolution solution, IDataContext context);
    private sealed virtual override void JetBrains.Application.UI.ActionsRevised.Menu.IExecutableAction.Execute(IDataContext context, DelegateExecute nextExecute);
    private sealed virtual override bool JetBrains.Application.UI.ActionsRevised.Menu.IExecutableAction.Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaredElement.GotoDeclaredElementsBrowserDescriptor : OccurrenceBrowserDescriptor {
    private TreeSectionModel myModel;
    private string myPattern;
    private IPreviewSupportProvider myPreviewSupportProvider;
    private Func`1<IEnumerable`1<IOccurrence>> myRestoreFunc;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    public string ActionBarID { get; }
    public TreeModel Model { get; }
    [NotNullAttribute]
public string Kind { get; }
    public PreviewSupport PreviewSupport { get; }
    public bool ShouldBeUnloaded { get; }
    public GotoDeclaredElementsBrowserDescriptor(ISolution solution, string kind, string pattern, IEnumerable`1<IOccurrence> occurrences, Func`1<IEnumerable`1<IOccurrence>> restoreFunc, IProgressIndicator indicator);
    protected virtual void SetResults(ICollection`1<IOccurrence> items, IProgressIndicator indicator, bool mergeItems);
    public void Update();
    public virtual string get_ActionBarID();
    public virtual TreeModel get_Model();
    [CompilerGeneratedAttribute]
public string get_Kind();
    public virtual PreviewSupport get_PreviewSupport();
    public sealed virtual SearchRequestRestorePoint CreateRestorePoint();
    public sealed virtual bool get_ShouldBeUnloaded();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaredElement.GotoDeclaredElementsSectionProvider : OccurrenceSectionProvider {
    public virtual bool IsApplicable(IOccurrenceBrowserDescriptor descriptor);
    public virtual ICollection`1<TreeSection> GetTreeSections(IOccurrenceBrowserDescriptor descriptor);
    private static TreeSection CreateTreeSection(OccurrenceSection section, string kind);
}
[ActionAttribute("GotoByName.Update", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "RefreshActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToDeclaredElement.UpdateGotoByNameAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToImplementation.GotoImplementationProvider : DeclarationProviderBase`3<IImplementationContextSearch, SearchImplementationsRequest, SearchImplementationsDescriptor> {
    public GotoImplementationProvider(IFeaturePartsContainer manager);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToImplementation.GotoImplementationProvider/<CreateWorkflow>d__1")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    protected virtual OccurrencePresentationOptions ProvideFeatureSpecificPresentationOptions(SearchImplementationsRequest searchRequest);
    protected virtual SearchImplementationsDescriptor CreateSearchDescriptor(SearchImplementationsRequest searchRequest, ICollection`1<IOccurrence> results);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "GoToImplementationActionText")]
[VsOverrideActionAttribute("({5EFC7975-14BC-11CF-9B2B-00AA00573819}:936)")]
[VsOverrideActionAttribute("({b61e1a20-8c13-49a9-a727-a0ec091647dd}:512)")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToImplementation.GotoImplementationsAction : ContextNavigationActionBase`1<IGotoImplementationsProvider> {
    public sealed virtual bool ShouldFallBack(IDataContext context);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.AggregatedGotoTextItemsProvider : object {
    private List`1<GotoItemsProviderRegistration> myRegistrations;
    [CompilerGeneratedAttribute]
private GotoControllerNavigationFilter <Filter>k__BackingField;
    public string DeclaredElementKindDisplayName { get; }
    [NotNullAttribute]
public GotoControllerNavigationFilter Filter { get; }
    public AggregatedGotoTextItemsProvider(Lifetime lifetime, ISolution solution);
    public sealed virtual string get_DeclaredElementKindDisplayName();
    [CompilerGeneratedAttribute]
public sealed virtual GotoControllerNavigationFilter get_Filter();
    public sealed virtual bool IsApplicable(GotoItemsProviderModel itemsModel);
    public sealed virtual void ConsumePresentableItems(GotoItemsProviderModel itemsModel, int itemsCount, GotoItemsConsumer itemsConsumer);
    public sealed virtual void ClearCaches();
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.DottingItemsConsumer : object {
    private int myMaxDotsCount;
    private int myCurrentDotsCount;
    private GotoItemsConsumer myItemsConsumer;
    private object myLock;
    private Timer myTimer;
    private bool myDisposed;
    private bool myDotsAdded;
    private bool myDotsEnabled;
    public bool DotsEnabled { get; public set; }
    public DottingItemsConsumer(GotoItemsConsumer itemsConsumer, int maxDotsCount, TimeSpan interval);
    public bool get_DotsEnabled();
    public void set_DotsEnabled(bool value);
    public void ConsumeItems(IEnumerable`1<PresentableGotoItem> items, AddItemsBehavior addBehavior);
    public sealed virtual void Dispose();
    private void AddDots();
    private void RemoveDots();
    private void UpdateDots(object source, ElapsedEventArgs e);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.FilesExplorer : object {
    private static ILogger ourLog;
    private ISolution mySolution;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyCollection`1<ValueTuple`2<IPsiSourceFile, int>> myScoredFiles;
    private string myPattern;
    private AhoCorasickStateMachine myStateMachine;
    private FuzzyResultComparer myFuzzyResultComparer;
    private int myCurrentMaxRangeScore;
    private FilesExplorer(ISolution solution, IReadOnlyCollection`1<ValueTuple`2<IPsiSourceFile, int>> sortedScoredFiles, string pattern);
    private static FilesExplorer();
    public static IEnumerable`1<FuzzyResult> ExploreForFuzzyResults(ISolution solution, IReadOnlyCollection`1<ValueTuple`2<IPsiSourceFile, int>> sortedScoredFiles, string pattern);
    public static BlockingCollection`1<ValueTuple`2<IPsiSourceFile, IDocument>> GetDocumentsAsync(IEnumerable`1<IPsiSourceFile> files, int maxBufferSize, IShellLocks locks, Lifetime lifetime, InterruptionSet interruptionSet);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.FilesExplorer/<Explore>d__10")]
private IEnumerable`1<FuzzyResult> Explore();
    private IEnumerable`1<FuzzyResult> ExploreBuffer(IEnumerable`1<ValueTuple`2<IPsiSourceFile, IDocument>> buffer);
    private IEnumerable`1<FuzzyResult> FilterRangesAndMakeFuzzyResults(IEnumerable`1<ValueTuple`2<IPsiSourceFile, List`1<ScoredRange>>> rangesWithFiles);
    [CompilerGeneratedAttribute]
private string <.ctor>b__9_0(int index);
    [CompilerGeneratedAttribute]
private bool <ExploreBuffer>b__11_2(ScoredRange r);
}
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.FuzzyAlignment : ValueType {
    public static int ourMismatchFine;
    private static Int32[] ourMissingSymbolsFine;
    private static Int32[] ourMatchReward;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    private Cell* myCells;
    private int myPatternLengthPlus1;
    public string Text { get; }
    public string Pattern { get; }
    public int PatternLength { get; }
    public int TextLength { get; }
    public Cell Item { get; public set; }
    public FuzzyAlignment(Cell* cells, string pattern, string text);
    private static FuzzyAlignment();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public string get_Pattern();
    public int get_PatternLength();
    public int get_TextLength();
    public Cell& Get(int textIndex, int patternIndex);
    public Cell get_Item(int textIndex, int patternIndex);
    public void set_Item(int textIndex, int patternIndex, Cell value);
    public static FuzzyAlignment Align(string text, string pattern, Cell* cells);
    public int CalculateAlignmentScore();
    public static int GetMatchReward(int i);
    public static int GetMissingFine(int i);
    [CanBeNullAttribute]
public static Int32[] RecoverMatchedIndices(FuzzyAlignment al);
    public void Dump(StringBuilder o);
    [CompilerGeneratedAttribute]
internal static Cell& <Align>g__Get|20_0(int textIndex, int patternIndex, <>c__DisplayClass20_0& );
    [CompilerGeneratedAttribute]
internal static bool <CalculateAlignmentScore>g__CheckInPattern|21_0(int i, string t);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.FuzzyResult : object {
    [CompilerGeneratedAttribute]
private IPsiSourceFile <File>k__BackingField;
    [CompilerGeneratedAttribute]
private ScoredRange <Range>k__BackingField;
    [NotNullAttribute]
public IPsiSourceFile File { get; }
    public ScoredRange Range { get; }
    public FuzzyResult(IPsiSourceFile file, ScoredRange range);
    [CompilerGeneratedAttribute]
public IPsiSourceFile get_File();
    [CompilerGeneratedAttribute]
public ScoredRange get_Range();
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.FuzzyResultComparer : object {
    public sealed virtual bool Equals(FuzzyResult first, FuzzyResult second);
    public sealed virtual int GetHashCode(FuzzyResult fuzzyResult);
    public sealed virtual int Compare(FuzzyResult first, FuzzyResult second);
    public static IEnumerable`1<FuzzyResult> GetUniqueFuzzyResults(IEnumerable`1<FuzzyResult> fuzzyResults);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.GotoTextFuzzySearchItemsProvider : object {
    [NotNullAttribute]
private ISolution mySolution;
    private List`1<IGotoTextFuzzySearchProvider> myAllGotoTextProviders;
    [NotNullAttribute]
private IgnoredElementsSearchProvider myIgnoredElements;
    [NotNullAttribute]
private IContextBoundSettingsStore mySettingsStore;
    [CompilerGeneratedAttribute]
private GotoControllerNavigationFilter <Filter>k__BackingField;
    public string DeclaredElementKindDisplayName { get; }
    [NotNullAttribute]
public GotoControllerNavigationFilter Filter { get; }
    public GotoTextFuzzySearchItemsProvider(Lifetime lifetime, ISolution solution);
    public sealed virtual string get_DeclaredElementKindDisplayName();
    [CompilerGeneratedAttribute]
public sealed virtual GotoControllerNavigationFilter get_Filter();
    public sealed virtual bool IsApplicable(GotoItemsProviderModel itemsModel);
    public sealed virtual void ConsumePresentableItems(GotoItemsProviderModel itemsModel, int itemsCount, GotoItemsConsumer itemsConsumer);
    public sealed virtual void ClearCaches();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.GotoTextFuzzySearchNonCachedProvider : object {
    public static int FuzzyCountLimit;
    private IShellLocks myShellLocks;
    public int Priority { get; }
    public GotoTextFuzzySearchNonCachedProvider(Lifetime lifetime, IShellLocks shellLocks);
    public sealed virtual int get_Priority();
    private sealed virtual override bool JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.IApplicableGotoProvider.IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IEnumerable`1<IOccurrence> GetOccurrences(string filter, INavigationScope scope);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.GotoTextFuzzySearchNonCachedProvider/<GetOccurrencesInternal>d__7")]
private IEnumerable`1<RangeOccurrence> GetOccurrencesInternal(string filter, INavigationScope scope);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.GotoTextFuzzySearchProvider : object {
    private static ILogger ourLog;
    private IShellLocks myShellLocks;
    public int Priority { get; }
    public GotoTextFuzzySearchProvider(Lifetime lifetime, IShellLocks shellLocks);
    private static GotoTextFuzzySearchProvider();
    public sealed virtual int get_Priority();
    private sealed virtual override bool JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.IApplicableGotoProvider.IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IEnumerable`1<IOccurrence> GetOccurrences(string filter, INavigationScope scope);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.GotoTextFuzzySearchProvider/<GetOccurrencesInternal>d__7")]
private IEnumerable`1<RangeOccurrence> GetOccurrencesInternal(string filter, INavigationScope scope);
    private static IEnumerable`1<ValueTuple`2<IPsiSourceFile, int>> ScoreFiles(string pattern, INavigationScope scope);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.GotoTextFuzzySearchProvider/<FilterAndSortScoredFiles>d__9")]
private static IEnumerable`1<ValueTuple`2<IPsiSourceFile, int>> FilterAndSortScoredFiles(IEnumerable`1<ValueTuple`2<IPsiSourceFile, int>> scoredFiles);
    public static IEnumerable`1<RangeOccurrence> GetOccurrencesFromFuzzyResults(IEnumerable`1<FuzzyResult> fuzzyResults);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.IGotoTextFuzzySearchProvider {
}
public static class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.RangesFinder : object {
    public static Nullable`1<ScoredRange> FindBestRange(string text, string pattern, StringBuilder dbg);
}
[IsReadOnlyAttribute]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.ScoredRange : ValueType {
    private TextRange myRange;
    [CompilerGeneratedAttribute]
private int <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <MatchedIndices>k__BackingField;
    public int Start { get; }
    public int End { get; }
    public int Score { get; }
    public Int32[] MatchedIndices { get; }
    public ScoredRange(int start, int end, int score, Int32[] matchedIndices);
    public int get_Start();
    public int get_End();
    [CompilerGeneratedAttribute]
public int get_Score();
    [CompilerGeneratedAttribute]
public Int32[] get_MatchedIndices();
    public virtual string ToString();
    public static TextRange op_Explicit(ScoredRange scoredRange);
}
public static class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.TextExplorer : object {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.TextExplorer/<ExploreForBestRanges>d__0")]
public static IEnumerable`1<ScoredRange> ExploreForBestRanges(string text, string pattern, AhoCorasickStateMachine trigramSearcher);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.FuzzySearch.TrigramsCounter : object {
    private Int32[] myPatternTrigramEntries;
    private Int32[] myCurrentTrigramEntries;
    private int myPatternTotalEntries;
    private int myCurrentTotalEntries;
    public float FullnessProportion { get; }
    public TrigramsCounter(string pattern, AhoCorasickStateMachine stateMachine);
    public float get_FullnessProportion();
    public void Add(int trigramIndex);
    public void Remove(int trigramIndex);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextController : GotoSearchController {
    public GotoTextController(Lifetime lifetime, IGotoControllerItemsProvider itemsProvider, ISolution solution, IMainWindowPopupWindowContext popupContext, Nullable`1<LibrariesFlag> librariesFlag, GotoByNameModel gotoByNameModel);
    [NotNullAttribute]
public static GotoSearchController Create(Lifetime lifetime, ISolution solution, LibrariesFlag librariesFlag, IShellLocks locks, GotoByNameModel gotoByNameModel, IMainWindowPopupWindowContext mainWindowPopupWindowContext);
    public virtual bool IsSpecialString(String& filterString);
    protected virtual bool ExecuteItem(JetPopupMenuItem item, ISignal`1<bool> closeBeforeExecute);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextController/<ProvideRecentSearches>d__4")]
private IEnumerable`1<JetPopupMenuItem> ProvideRecentSearches();
    protected virtual IEnumerable`1<JetPopupMenuItem> TryProvideCustomItems(string filterString);
    protected virtual OccurrencePresentationOptions GetPresentationOptions();
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextControllerContextProvider : object {
    public sealed virtual void Initialize(IDataContext context, GotoByNameController controller);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextEmptyQueryProvider : object {
    public int Priority { get; }
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual int get_Priority();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextEmptyQueryProvider/<GetOccurrences>d__3")]
public sealed virtual IEnumerable`1<IOccurrence> GetOccurrences(string filter, INavigationScope scope);
    private static bool IsAccepted(INavigationScope scope, IProjectFile projectItem, ITrigramIndex[] indices);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextInitialQueryProvider : object {
    [NotNullAttribute]
private IClipboardEntries myClipboardManager;
    [NotNullAttribute]
private IGotoTextRecentSearchesProvider myRecentSearchesProvider;
    [NotNullAttribute]
private TextControlManager myTextControlManager;
    public GotoTextInitialQueryProvider(IClipboardEntries clipboardManager, IGotoTextRecentSearchesProvider recentSearchesProvider, TextControlManager textControlManager);
    public sealed virtual Nullable`1<SearchQuery> GetOnceAndForget();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextIntoGotoEverythingProvider : object {
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextIntoGotoEverythingProvider/<GetOccurrencesByMatchingInfo>d__2")]
public sealed virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextItemsProvider : object {
    [NotNullAttribute]
private ISolution mySolution;
    private List`1<IGotoTextProvider> myAllGotoTextProvider;
    [NotNullAttribute]
private IgnoredElementsSearchProvider myIgnoredElements;
    [CompilerGeneratedAttribute]
private GotoControllerNavigationFilter <Filter>k__BackingField;
    public string DeclaredElementKindDisplayName { get; }
    [NotNullAttribute]
public GotoControllerNavigationFilter Filter { get; }
    public GotoTextItemsProvider(Lifetime lifetime, ISolution solution);
    public sealed virtual string get_DeclaredElementKindDisplayName();
    [CompilerGeneratedAttribute]
public sealed virtual GotoControllerNavigationFilter get_Filter();
    public sealed virtual bool IsApplicable(GotoItemsProviderModel itemsModel);
    public sealed virtual void ConsumePresentableItems(GotoItemsProviderModel itemsModel, int itemsCount, GotoItemsConsumer itemsConsumer);
    public sealed virtual void ClearCaches();
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GoToTextModelInitializer : object {
    [NotNullAttribute]
private IGotoTextInitialQueryProvider myInitialQueryProvider;
    public GoToTextModelInitializer(IGotoTextInitialQueryProvider initialQueryProvider);
    public virtual void InitModel(Lifetime lifetime, GotoByNameModel model);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextNonCachedProvider : object {
    private static ILogger ourLog;
    private IShellLocks myShellLocks;
    public int Priority { get; }
    public GotoTextNonCachedProvider(Lifetime lifetime, IShellLocks shellLocks);
    private static GotoTextNonCachedProvider();
    public sealed virtual int get_Priority();
    private sealed virtual override bool JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.IApplicableGotoProvider.IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IEnumerable`1<IOccurrence> GetOccurrences(string filter, INavigationScope scope);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextNonCachedProvider/<GetOccurrencesInternal>d__7")]
private IEnumerable`1<RangeOccurrence> GetOccurrencesInternal(INavigationScope scope, string filter);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextNonCachedProvider/<GetNonCachedFiles>d__8")]
public static IEnumerable`1<IPsiSourceFile> GetNonCachedFiles(INavigationScope scope);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextProvider : object {
    private static ILogger ourLog;
    private IShellLocks myShellLocks;
    public int Priority { get; }
    public GotoTextProvider(Lifetime lifetime, IShellLocks shellLocks);
    private static GotoTextProvider();
    public sealed virtual int get_Priority();
    private sealed virtual override bool JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.IApplicableGotoProvider.IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IEnumerable`1<IOccurrence> GetOccurrences(string filter, INavigationScope scope);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextProvider/<GetOccurrencesInternal>d__7")]
private IEnumerable`1<RangeOccurrence> GetOccurrencesInternal(INavigationScope scope, string filter);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextProvider/<GetSearchInFileQuery>d__8")]
public static IEnumerable`1<RangeOccurrence> GetSearchInFileQuery(string searchText, IPsiSourceFile sourceFile, bool matchCase);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextProvider/<MergeLazy>d__9")]
public static IEnumerable`1<IOccurrence> MergeLazy(IEnumerable`1<RangeOccurrence> occurrences);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.GotoTextRecentSearchesProvider : object {
    public static int MaxCapacity;
    private List`1<SearchQuery> myQueries;
    public sealed virtual void AddSearchQuery(SearchQuery query);
    public sealed virtual IEnumerable`1<SearchQuery> GetRecentQueries();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.GoToText.IGotoTextInitialQueryProvider {
    [CanBeNullAttribute]
public abstract virtual Nullable`1<SearchQuery> GetOnceAndForget();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.GoToText.IGotoTextProvider {
    public int Priority { get; }
    public abstract virtual int get_Priority();
    public abstract virtual IEnumerable`1<IOccurrence> GetOccurrences(string filter, INavigationScope scope);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.GoToText.IGotoTextRecentSearchesProvider {
    public abstract virtual void AddSearchQuery(SearchQuery query);
    [CanBeNullAttribute]
public abstract virtual IEnumerable`1<SearchQuery> GetRecentQueries();
}
internal class JetBrains.ReSharper.Features.Navigation.Features.GoToText.PsiSourceFilePathComparer : object {
    public sealed virtual bool Equals(IPsiSourceFile x, IPsiSourceFile y);
    public sealed virtual int GetHashCode(IPsiSourceFile psiSourceFile);
}
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.SearchQuery : ValueType {
    private bool myMatchCase;
    [NotNullAttribute]
private string myFilter;
    public bool MatchCase { get; }
    [NotNullAttribute]
public string Filter { get; }
    public SearchQuery(string filter, bool matchCase);
    public bool get_MatchCase();
    public string get_Filter();
    public sealed virtual bool Equals(SearchQuery other);
}
[ActionAttribute("GotoText.Update", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "RefreshActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.GoToText.UpdateGotoTextAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "CancelHighlighingUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.CancelHighlightUsagesAction : object {
    private sealed virtual override void JetBrains.Application.UI.ActionsRevised.Menu.IExecutableAction.Execute(IDataContext dc, DelegateExecute nextExecute);
    private sealed virtual override bool JetBrains.Application.UI.ActionsRevised.Menu.IExecutableAction.Update(IDataContext dc, ActionPresentation presentation, DelegateUpdate nextUpdate);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.HighlightSpecialUsagesContextSearchBase : SpecialUsagesContextSearchBase {
    protected virtual ISearchDomain GetSpecialFinderSearchDomain(ISpecialElementFinder finder, object target, IDataContext context);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "HighlightUsagesInFileActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.HighlightUsagesAction : ContextSearchActionBase`1<HighlightUsagesProvider> {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.HighlightUsagesContextSearch : UsagesContextSearchBase {
    protected bool SearchParametersOverloads { get; }
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    protected virtual bool UseTypeParameters(IList`1<DeclaredElementInstance> squeezedCandidate);
    protected virtual ISearchDomain CreateSearchDomain(IDataContext context);
    protected virtual bool get_SearchParametersOverloads();
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
}
[ShellComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.HighlightUsagesErrorStripeIndicator : object {
    public HighlightUsagesErrorStripeIndicator(Lifetime lifetime, ITextControlManager textcontrolman, ILazy`1<HighlighterCountsByKindsTrackerComponent> hitracker, ILazy`1<IActionManager> actionman, ILazy`1<JetPopupMenus> jpms, IShellLocks locks, ILogger logger);
}
[ActionGroupAttribute("Highlight Usages Indicator Menu", "1", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.HighlightUsagesIndicatorContextMenuActionGroup : object {
    public HighlightUsagesIndicatorContextMenuActionGroup(NavigateToPrevUsageAction a, NavigateToNextUsageAction b, Separator c, CancelHighlightUsagesAction d);
}
[ShellComponentAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.HighlightUsagesProvider : UsagesContextSearchProviderBase`1<IHighlightUsagesContextSearch> {
    private ISettingsStore mySettingsStore;
    private ITooltipManager myTooltipManager;
    public HighlightUsagesProvider(IFeaturePartsContainer manager, ISettingsStore settingsStore, ITooltipManager tooltipManager);
    protected virtual bool ProcessImmediateResults(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences);
    public virtual string GetNotFoundMessage(SearchRequest request);
    public virtual bool ProcessRawResults(IDataContext context, ICollection`1<IOccurrence> results, INavigationExecutionHost navigationExecutionHost, SearchRequest searchRequest);
    protected virtual void ProcessResults(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences, Func`1<IOccurrenceBrowserDescriptor> descriptorFactory);
    public void HighlightOccurrences(IEnumerable`1<IOccurrence> occurrences, ISolution solution, IDocument document, SearchRequest searchRequest, PopupWindowContextSource popupWindowContextSource);
    private static IEnumerable`1<CustomHighlightingEntry> CreateDeclarationHighlightingEntries(SearchRequest request, IProjectFile projectFile, int usages, String& message);
    protected virtual void ShowHintIfNecessary(ISolution solution, PopupWindowContextSource popupWindowContextSource);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.HighlightUsages.HighlightUsagesProvider/<ProcessSpecialSearch>d__10")]
private static IEnumerable`1<CustomHighlightingEntry> ProcessSpecialSearch(SearchSpecialUsagesRequest request, IProjectFile projectFile);
    private static IList`1<CustomHighlightingEntry> ProcessDeclarations(SearchRequest request, IProjectFile projectFile, String& targetName);
    private static IEnumerable`1<DocumentRange> FindDeclarationsInThisFile(IProjectFile file, IDeclaredElement target);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.LocateIn.IAssemblyExplorerContextSearch {
    public abstract virtual void Execute(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Navigation.Features.LocateIn.ILocateInSolutionOrAssemblyExplorerProvider {
    public string ActionText { get; }
    public int Priority { get; }
    public abstract virtual string get_ActionText();
    public abstract virtual int get_Priority();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.LocateIn.ISolutionExplorerContextSearch {
    public abstract virtual void Execute(IDataContext dataContext);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInAssemblyExplorerProvider : ContextNavigationProviderBase`2<IAssemblyExplorerContextSearch, LocateInSolutionOrAssemblyExplorerAction> {
    protected NavigationActionGroup ActionGroup { get; }
    public string ActionText { get; }
    public int Priority { get; }
    public LocateInAssemblyExplorerProvider(IFeaturePartsContainer manager);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IAssemblyExplorerContextSearch> searches, INavigationExecutionHost host);
    public sealed virtual string get_ActionText();
    public sealed virtual int get_Priority();
}
public static class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInConstants : object {
    public static string LocateInAssemblyExplorer;
    public static string LocateInSolutionExplorer;
    private static string ourTooltipMessage;
    private static LocateInConstants();
    public static void ShowTooltip(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInSolutionExplorerContextSearch : object {
    public virtual bool IsAvailable(IDataContext dataContext);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    public virtual void Execute(IDataContext dataContext);
    private static bool CheckProjectItem(IProjectItem projectItem);
    private static IProjectItem GetProjectItem(IDataContext dataContext, ISolution solution);
    private static ITextControl GetTextControl(IDataContext context);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInSolutionExplorerProvider : ContextNavigationProviderBase`2<ISolutionExplorerContextSearch, LocateInSolutionOrAssemblyExplorerAction> {
    protected NavigationActionGroup ActionGroup { get; }
    public string ActionText { get; }
    public int Priority { get; }
    public LocateInSolutionExplorerProvider(IFeaturePartsContainer manager);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<ISolutionExplorerContextSearch> searches, INavigationExecutionHost host);
    public sealed virtual string get_ActionText();
    public sealed virtual int get_Priority();
}
[ContextNavigationProviderAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInSolutionExplorerShowSolutionExplorerFallback : object {
    public string ActionText { get; }
    public int Priority { get; }
    private static bool IsAvailable(IDataContext context);
    public sealed virtual Action GetSearchesExecution(IDataContext context, INavigationExecutionHost host);
    public sealed virtual string get_ActionText();
    public sealed virtual int get_Priority();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInSolutionExplorerShowSolutionExplorerFallback/<CreateWorkflow>d__6")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    private void OpenSolutionExplorer(IDataContext dataContext);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "LocateInSolutionOrAssemblyExplorer_ActionName")]
public class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInSolutionOrAssemblyExplorerAction : ContextSearchActionBase`1<ILocateInSolutionOrAssemblyExplorerProvider> {
    protected virtual void Execute(IList`1<Pair`2<Action, ILocateInSolutionOrAssemblyExplorerProvider>> executes);
    protected virtual void Present(ActionPresentation presentation, ISolution solution, IList`1<Pair`2<Action, ILocateInSolutionOrAssemblyExplorerProvider>> executes);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.LocateInSolutionOrAssemblyExplorerActionDefaultNameProvider : object {
    public virtual string GetActionName();
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ViewInAssemblyExplorerActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.LocateIn.ViewInAssemblyExplorerAction : ContextSearchActionBase`1<LocateInAssemblyExplorerProvider> {
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.Menus.InsertIntoAssemblyExplorerContextMenuActionGroup1 : object {
    public InsertIntoAssemblyExplorerContextMenuActionGroup1(NavigateContextualGroup navigateContextual);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.Menus.InsertIntoAssemblyExplorerContextMenuActionGroup2 : object {
    public InsertIntoAssemblyExplorerContextMenuActionGroup2(FindUsagesContextualGroup contextualGroup);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.Menus.IntoContextNavigateToGroup : object {
    public IntoContextNavigateToGroup(ShowUsagesAction showUsagesAction, GotoBaseAction gotoBaseAction, GotoInheritorsAction gotoInheritorsAction, GotoTypeDeclarationAction gotoTypeDeclarationAction, GotoRelatedFilesAction gotoRelatedFilesAction, FlowTargetNavigationAction flowTargetNavigationAction, FunctionExitsNavigationAction functionExitsNavigationAction, ParameterDeclarationNavigationAction parameterDeclarationNavigationAction, ExtensionMethodsNavigationAction extensionMethodsNavigationAction, ExposingApiesNavigationAction exposingApiesNavigationAction, ConsumingApiesNavigationAction consumingApiesNavigationAction, SubstitutionNavigationAction substitutionNavigationAction, ImplementingMembersNavigationAction implementingMembersNavigationAction, ConflictDeclarationsNavigationAction conflictDeclarationsNavigationAction, OverloadsNavigationAction overloadsNavigationAction);
}
[ActionAttribute("NavigateToDeclarationConflict", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ConflictingDeclarationSActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ConflictDeclarations.ConflictDeclarationsNavigationAction : ContextNavigationActionBase`1<IConflictDeclarationsNavigationProvider> {
}
[ContextNavigationProviderAttribute("0")]
internal class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ConflictDeclarations.ConflictDeclarationsNavigationProvider : ContextNavigationProviderBase`2<IConflictDeclarationsContextSearch, ConflictDeclarationsNavigationAction> {
    protected NavigationActionGroup ActionGroup { get; }
    public ConflictDeclarationsNavigationProvider(IFeaturePartsContainer manager);
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IConflictDeclarationsContextSearch> searches, INavigationExecutionHost host);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ConflictDeclarations.IConflictDeclarationsNavigationProvider {
}
[ActionAttribute("NavigateToExtensionMethods", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ExtensionMethodsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ExtensionMethods.ExtensionMethodsNavigationAction : ContextNavigationActionBase`1<ExtensionMethodsNavigationProvider> {
    protected RichText Caption { get; }
    protected virtual RichText get_Caption();
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ExtensionMethods.ExtensionMethodsNavigationProvider : ContextNavigationProviderBase`2<IExtensionMethodsContextSearch, ExtensionMethodsNavigationAction> {
    private IShellLocks myLocks;
    private ITooltipManager myTooltipManager;
    protected NavigationActionGroup ActionGroup { get; }
    public ExtensionMethodsNavigationProvider(IShellLocks locks, ITooltipManager tooltipManager, IFeaturePartsContainer manager);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IExtensionMethodsContextSearch> searches, INavigationExecutionHost host);
}
[ActionAttribute("NavigateToControlFlowTarget", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ControlFlowTargetActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.FlowTarget.FlowTargetNavigationAction : ContextNavigationActionBase`1<IFlowTargetNavigationProvider> {
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.FlowTarget.FlowTargetNavigationProvider : ContextNavigationProviderBase`2<IFlowTargetContextSearch, FlowTargetNavigationAction> {
    protected NavigationActionGroup ActionGroup { get; }
    public FlowTargetNavigationProvider(IFeaturePartsContainer manager);
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IFlowTargetContextSearch> searches, INavigationExecutionHost host);
    protected virtual void NavigateToTreeNode(ITreeNode element, bool activate, IDataContext dataContext);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.FlowTarget.IFlowTargetNavigationProvider {
}
[ActionAttribute("NavigateToFunctionExits", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "FunctionExitSActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.FunctionExits.FunctionExitsNavigationAction : ContextNavigationActionBase`1<IFunctionExitsNavigationProvider> {
    public static string CONTROL_FLOW_NEVER_LEAVES_FUNCTION;
    private static FunctionExitsNavigationAction();
}
[ContextNavigationProviderAttribute("0")]
internal class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.FunctionExits.FunctionExitsNavigationProvider : ContextNavigationProviderBase`2<IFunctionExitsContextSearch, FunctionExitsNavigationAction> {
    protected NavigationActionGroup ActionGroup { get; }
    public FunctionExitsNavigationProvider(IFeaturePartsContainer manager);
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IFunctionExitsContextSearch> searches, INavigationExecutionHost host);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.FunctionExits.IFunctionExitsNavigationProvider {
}
public interface JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ImplementingMembers.IImplementingMembersNavigationProvider {
}
[ActionAttribute("NavigateToInterfaceImplementation", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ImplementingMembersActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ImplementingMembers.ImplementingMembersNavigationAction : ContextNavigationActionBase`1<IImplementingMembersNavigationProvider> {
    public static string ARGUMENT_NOT_FOUND;
    private static ImplementingMembersNavigationAction();
}
[ContextNavigationProviderAttribute("0")]
internal class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ImplementingMembers.ImplementingMembersNavigationProvider : ContextNavigationProviderBase`2<IImplementingMembersContextSearch, ImplementingMembersNavigationAction> {
    private IFeaturePartsContainer myManager;
    protected NavigationActionGroup ActionGroup { get; }
    public ImplementingMembersNavigationProvider(IFeaturePartsContainer manager);
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IImplementingMembersContextSearch> searches, INavigationExecutionHost host);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.IntoNavigateContextualInMainMenuGroup : object {
    public IntoNavigateContextualInMainMenuGroup(NavigateFromHereAction navigateFromHereAction, ShowUsagesAction showUsagesAction, GotoDeclarationAction gotoDeclarationAction, GotoImplementationsAction gotoImplementationsAction, GotoBaseAction gotoBaseAction, GotoInheritorsAction gotoInheritorsAction, GotoTypeDeclarationAction gotoTypeDeclarationAction);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.IntoNavigateContextualShort : object {
    public IntoNavigateContextualShort(GotoDeclarationAction gotoDeclarationAction, GotoImplementationsAction gotoImplementationsAction, NavigateFromHereAction navigateFromHereAction, ContextNavigateMenu contextNavigateMenu);
}
[ActionAttribute("NavigateTo", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "NavigateToActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.NavigateFromHereAction : ContextNavigationActionBase`1<INavigateFromHereProvider> {
    protected RichText Caption { get; }
    protected bool ShowMenuWithOneItem { get; }
    protected virtual RichText get_Caption();
    protected virtual bool get_ShowMenuWithOneItem();
}
[ActionAttribute("NavigateTo…", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "NavigateToActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.NavigateFromHereShortListAction : ContextNavigationActionBase`1<INavigateFromHereImportantProvider> {
    protected RichText Caption { get; }
    protected bool ShowMenuWithOneItem { get; }
    protected virtual RichText get_Caption();
    protected virtual bool get_ShowMenuWithOneItem();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Overloads.IOverloadsNavigationProvider {
}
[ActionAttribute("NavigateToOverloads", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "MemberOverloadsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Overloads.OverloadsNavigationAction : ContextNavigationActionBase`1<IOverloadsNavigationProvider> {
}
[ContextNavigationProviderAttribute("0")]
internal class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Overloads.OverloadsNavigationProvider : ContextNavigationProviderBase`2<IOverloadsContextSearch, OverloadsNavigationAction> {
    protected NavigationActionGroup ActionGroup { get; }
    public OverloadsNavigationProvider(IFeaturePartsContainer manager);
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IOverloadsContextSearch> searches, INavigationExecutionHost host);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ParameterDeclaration.IParameterDeclarationNavigationProvider {
}
[ActionAttribute("NavigateToParameter", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ParameterDeclarationActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ParameterDeclaration.ParameterDeclarationNavigationAction : ContextNavigationActionBase`1<IParameterDeclarationNavigationProvider> {
}
[ContextNavigationProviderAttribute("0")]
internal class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.ParameterDeclaration.ParameterDeclarationNavigationProvider : ContextNavigationProviderBase`2<IParameterDeclarationContextSearch, ParameterDeclarationNavigationAction> {
    protected NavigationActionGroup ActionGroup { get; }
    public ParameterDeclarationNavigationProvider(IFeaturePartsContainer manager);
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<IParameterDeclarationContextSearch> searches, INavigationExecutionHost host);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
}
public interface JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.ISubstitutionNavigationProvider {
}
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.SearchSubstitutionsDescriptor : SearchDescriptor {
    public bool QuickSearchSupported { get; }
    public SearchSubstitutionsDescriptor(SearchSubstitutionRequest request, ICollection`1<IOccurrence> occurrences);
    private static SubstitutionTypePresenter CreatePresenter(ISolution solution);
    public virtual bool get_QuickSearchSupported();
    public virtual bool QuickSearchMatches(TreeModelNode modelNode, string quickSearchText);
    public virtual string GetResultsTitle(OccurrenceSection section);
    public virtual bool Navigate(TreeModelNode node, PopupWindowContextSource windowContext, bool transferFocus, TabOptions options);
    protected virtual IComparer`1<object> CreateComparer();
    protected virtual Func`2<SearchRequest, IOccurrenceBrowserDescriptor> GetDescriptorFactory();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.SubstitutionGroupingProvider : OccurrenceBrowserGroupingProvider {
    public virtual bool IsApplicable(TreeModelBrowserDescriptorBase descriptor);
    public virtual ICollection`1<TreeModelGrouping`1<IOccurrence>> GetGroupings(TreeModelBrowserDescriptorBase descriptor);
}
[ActionAttribute("NavigateToSubstitutions", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "GenericSubstitutionsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.SubstitutionNavigationAction : ContextNavigationActionBase`1<ISubstitutionNavigationProvider> {
    protected RichText Caption { get; }
    protected virtual RichText get_Caption();
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.SubstitutionNavigationProvider : ContextNavigationProviderBase`2<ISubstitutionContextSearch, SubstitutionNavigationAction> {
    private IShellLocks myShellLocks;
    protected NavigationActionGroup ActionGroup { get; }
    public SubstitutionNavigationProvider(IFeaturePartsContainer manager, IShellLocks shellLocks);
    protected virtual void Execute(IDataContext dataContext, IEnumerable`1<ISubstitutionContextSearch> searches, INavigationExecutionHost host);
    protected virtual string GetNavigationMenuTitle(IDataContext dataContext);
    protected virtual NavigationActionGroup get_ActionGroup();
}
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.SubstitutionTypeGroup : object {
    [CompilerGeneratedAttribute]
private IType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private PsiLanguageType <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypePresentation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTypeParameterGroup>k__BackingField;
    [NotNullAttribute]
public IType Type { get; }
    [NotNullAttribute]
public PsiLanguageType Language { get; }
    [NotNullAttribute]
public string TypePresentation { get; }
    public bool IsTypeParameterGroup { get; }
    public SubstitutionTypeGroup(IType type, PsiLanguageType language);
    [CompilerGeneratedAttribute]
public IType get_Type();
    [CompilerGeneratedAttribute]
public PsiLanguageType get_Language();
    [CompilerGeneratedAttribute]
public string get_TypePresentation();
    [CompilerGeneratedAttribute]
public bool get_IsTypeParameterGroup();
    public sealed virtual bool Equals(SubstitutionTypeGroup other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual int CompareTo(SubstitutionTypeGroup other);
}
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.SubstitutionTypeGroupComparer : OccurrenceComparer {
    [NotNullAttribute]
public static SubstitutionTypeGroupComparer Instance;
    private static SubstitutionTypeGroupComparer();
}
public class JetBrains.ReSharper.Features.Navigation.Features.NavigateFromHere.Substitutions.SubstitutionTypePresenter : OccurrenceBrowserPresenter {
    public SubstitutionTypePresenter(ISolution solution);
    private void PresentTypeGroup(SubstitutionTypeGroup typeGroup, IPresentableItem item, TreeModelNode modelNode, PresentationState state);
}
[ActionAttribute("OccurrenceBrowser.ShowIgnoredOccurrences", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowIgnoredUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.BrowserShowIgnoredAction : object {
    public sealed virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
}
[ActionAttribute("OccurrenceBrowser.MergeOccurrences", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "MergeOccurrencesOnTheSameLineActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.OccurrenceBrowserMergeAction : object {
    public sealed virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowAll", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowAllUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowAllAccessAction : object {
    public sealed virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowAttribute", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowAttributeUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowAttributeAccessAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowBaseMethodCall", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowBaseMethodCallsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowBaseMethodCallAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowDocumentation", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowUsagesInDocumentationActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowDocumentationAccessAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowInvocation", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowInvocationUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowInvocationAccessAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowNameCapture", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowNameCapturesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowNameCaptureAccessAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowOccurrenceKindBaseAction : object {
    [NotNullAttribute]
public OccurrenceKind OccurrenceKind { get; }
    public abstract virtual OccurrenceKind get_OccurrenceKind();
    public sealed virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowOnlyAccessTypeBaseAction : object {
    [NotNullAttribute]
public OccurrenceKind OccurrenceKind { get; }
    public abstract virtual OccurrenceKind get_OccurrenceKind();
    public sealed virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowOnlyRead", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowOnlyReadUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowOnlyReadAccessAction : ShowOnlyAccessTypeBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowOnlyWrite", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowOnlyWriteUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowOnlyWriteAccessAction : ShowOnlyAccessTypeBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowOther", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowOtherUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowOtherAccessAction : object {
    [CanBeNullAttribute]
private static List`1<OccurrenceKind> ourOldKinds;
    public sealed virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    [NotNullAttribute]
private ICollection`1<OccurrenceKind> GetOtherOccurrenceKinds(IDataContext context, IOccurrenceBrowserDescriptor descriptor);
    public sealed virtual void Execute(IDataContext context);
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowRead", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowReadUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowReadAccessAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowUnitTestUsages", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowUnitTestUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowUnitTestAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowVBHandlesClause", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowVBHandlesClausesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowVBHandlesClauseAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowInterfaceQualification", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowInterfaceQualificationsActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowVBImplementsClauseAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ActionAttribute("OccurrenceBrowser.Filter.ShowWrite", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowWriteUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.OccurrencesActions.ShowWriteAccessAction : ShowOccurrenceKindBaseAction {
    public OccurrenceKind OccurrenceKind { get; }
    public virtual OccurrenceKind get_OccurrenceKind();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.Search.ReferencedCodeUsagesSectionProvider : SearchDescriptorSectionProvider {
    public virtual bool IsApplicable(IOccurrenceBrowserDescriptor descriptor);
    public virtual ICollection`1<GroupingSectionId> GetGroupSectionId(IOccurrence occurrence, IOccurrenceBrowserDescriptor descriptor);
}
public class JetBrains.ReSharper.Features.Navigation.Features.ShowUsages.FromShowUsagesToFindUsageFactory : object {
    private SearchRequest mySearchRequest;
    private INavigationExecutionHost myHost;
    private ISearchResultPresenter myPresenter;
    private IAsyncFindResultViewFactory myFindUsageFactory;
    private OccurrencePresentationOptions myOptions;
    public FromShowUsagesToFindUsageFactory(SearchRequest searchRequest, INavigationExecutionHost host, ISearchResultPresenter presenter, IAsyncFindResultViewFactory findUsageFactory);
    public virtual IAsyncFindResultView CreateView(IDataContext context, Lifetime lifetime, IAsyncSearchResult asyncResult);
    public virtual IFindResultResultProcessor CreateResultProcessor(IDataContext context, IAsyncSearchResult asyncResult, IFindResultResultProcessor defaultResultProcessor);
}
[ActionAttribute("JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ShowUsagesActionText")]
public class JetBrains.ReSharper.Features.Navigation.Features.ShowUsages.ShowUsagesAction : ContextNavigationActionBase`1<IShowUsagesProvider> {
}
public class JetBrains.ReSharper.Features.Navigation.Features.ShowUsages.ShowUsagesPopupMenuView : object {
    [CompilerGeneratedAttribute]
private IDataContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchRequest <SearchRequest>k__BackingField;
    [NotNullAttribute]
private ISearchResultPresenter mySearchResultPresenter;
    [NotNullAttribute]
private INavigationExecutionHost myHost;
    private OccurrencePresentationOptions myOptions;
    [CanBeNullAttribute]
private IOccurrencePopupMenu myMenu;
    [CompilerGeneratedAttribute]
private ISimpleSignal <SwitchToFindUsages>k__BackingField;
    public IDataContext Context { get; public set; }
    public SearchRequest SearchRequest { get; public set; }
    [CanBeNullAttribute]
public IOccurrencePopupMenu Menu { get; }
    public ISimpleSignal SwitchToFindUsages { get; }
    public bool IsAsyncSupport { get; }
    public ShowUsagesPopupMenuView(IDataContext context, SearchRequest searchRequest, ISearchResultPresenter searchResultPresenter, INavigationExecutionHost host, OccurrencePresentationOptions options);
    [CompilerGeneratedAttribute]
public IDataContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(IDataContext value);
    [CompilerGeneratedAttribute]
public SearchRequest get_SearchRequest();
    [CompilerGeneratedAttribute]
public void set_SearchRequest(SearchRequest value);
    public IOccurrencePopupMenu get_Menu();
    [CompilerGeneratedAttribute]
public ISimpleSignal get_SwitchToFindUsages();
    public bool get_IsAsyncSupport();
    public sealed virtual IProgressIndicator ProcessAsyncResults(LifetimeDefinition searchLifetimeDefinition, IAsyncSearchResult asyncResult);
    public sealed virtual bool CommitResults(ICollection`1<IOccurrence> results);
    private static bool Filter(IOccurrence occurrence);
    public IProgressIndicator CreateProgressIndicator(LifetimeDefinition lifetimeDefinition);
    [CompilerGeneratedAttribute]
private void <ProcessAsyncResults>b__20_0(IOccurrence occurrence);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Features.ShowUsages.ShowUsagesProvider : UsagesContextSearchProviderBase`1<IFindUsagesContextSearch> {
    internal static OccurrencePresentationOptions ShowUsagesPresentationOptions;
    public ShowUsagesProvider(IFeaturePartsContainer manager);
    private static ShowUsagesProvider();
    public virtual OccurrencePresentationOptions GetPresentationOptions();
    protected virtual void ExecuteSearchRequest(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host);
    protected virtual void ProcessResults(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host, ICollection`1<IOccurrence> occurrences, Func`1<IOccurrenceBrowserDescriptor> descriptorFactory);
    private static bool Filter(IOccurrence occurrence);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Features.ShowUsages.ShowUsagesProvider/<CreateWorkflow>d__6")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
}
public class JetBrains.ReSharper.Features.Navigation.Features.ShowUsages.ShowUsagesResultProcessor : object {
    [CompilerGeneratedAttribute]
private IDataContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchRequest <SearchRequest>k__BackingField;
    private ISearchResultPresenter myPresenter;
    private INavigationExecutionHost myHost;
    private IFindResultResultProcessor myDefaultResultProcessor;
    public IDataContext Context { get; public set; }
    public SearchRequest SearchRequest { get; public set; }
    public ShowUsagesResultProcessor(IDataContext context, ISearchResultPresenter presenter, SearchRequest request, INavigationExecutionHost host, IFindResultResultProcessor defaultResultProcessor);
    [CompilerGeneratedAttribute]
public IDataContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(IDataContext value);
    [CompilerGeneratedAttribute]
public SearchRequest get_SearchRequest();
    [CompilerGeneratedAttribute]
public void set_SearchRequest(SearchRequest value);
    public sealed virtual void ShowError(IDataContext context, string message);
    public sealed virtual void ShowResults(IDataContext context, ICollection`1<IOccurrence> results, IAsyncFindResultView asyncFindResultView, bool caretAtTheSamePosition);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Usages.FindResultUsagesViewFactory : object {
    private SearchRequest mySearchRequest;
    private INavigationExecutionHost myHost;
    private ISearchResultPresenter myPresenter;
    public FindResultUsagesViewFactory(SearchRequest searchRequest, INavigationExecutionHost host, ISearchResultPresenter presenter);
    public sealed virtual IAsyncFindResultView CreateView(IDataContext context, Lifetime lifetime, IAsyncSearchResult asyncResult);
    public sealed virtual IFindResultResultProcessor CreateResultProcessor(IDataContext context, IAsyncSearchResult asyncResult, IFindResultResultProcessor defaultResultProcessor);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Features.Usages.FindUsagesAsyncViewProvider : FindUsagesAsyncViewProviderBase {
    public virtual IAsyncFindResultViewFactory GetFactoryFindUsages(SearchRequest searchRequest, INavigationExecutionHost host, ISearchResultPresenter presenter);
    public virtual IAsyncFindResultViewFactory GetFactoryShowUsages(SearchRequest searchRequest, INavigationExecutionHost host, ISearchResultPresenter presenter);
}
[ActionGroupAttribute("0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.Usages.IntoFindUsagesGroup : object {
    public IntoFindUsagesGroup(FindUsagesAction findUsagesAction, FindUsagesAdvancedAction findUsagesAdvancedAction, HighlightUsagesAction highlightUsagesAction);
}
[ActionGroupAttribute("", "0", "10")]
public class JetBrains.ReSharper.Features.Navigation.Features.Usages.IntoOccurrenceBrowserContextMenuActionGroup : object {
    public IntoOccurrenceBrowserContextMenuActionGroup(FindUsagesAction findUsagesAction, FindUsagesAdvancedAction findUsagesAdvancedAction);
}
public class JetBrains.ReSharper.Features.Navigation.Features.Usages.SearchSpecialUsagesDescriptor : SearchUsagesDescriptor {
    [CompilerGeneratedAttribute]
private SearchSpecialUsagesRequest <SpecialUsagesRequest>k__BackingField;
    public SearchSpecialUsagesRequest SpecialUsagesRequest { get; }
    public TypeDependenciesOptions DiagrammingOptions { get; }
    public SearchSpecialUsagesDescriptor(SearchSpecialUsagesRequest request, ICollection`1<IOccurrence> results);
    [CompilerGeneratedAttribute]
public SearchSpecialUsagesRequest get_SpecialUsagesRequest();
    public virtual string GetResultsTitle(OccurrenceSection section);
    public virtual TypeDependenciesOptions get_DiagrammingOptions();
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.Usages.SpecialUsagesContextSearchBase : RequestContextSearchBase`2<SearchSpecialUsagesRequest, Pair`2<object, ISpecialElementFinder>> {
    protected bool IsExecuteImmediately { get; }
    protected virtual SearchSpecialUsagesRequest CreateSearchRequest(IDataContext context, Pair`2<object, ISpecialElementFinder> element, Pair`2<object, ISpecialElementFinder> initialTarget);
    protected virtual IOccurrence Present(Pair`2<object, ISpecialElementFinder> candidate);
    protected virtual bool get_IsExecuteImmediately();
    protected virtual IEnumerable`1<Pair`2<object, ISpecialElementFinder>> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    [CanBeNullAttribute]
protected virtual ISearchDomain GetSpecialFinderSearchDomain(ISpecialElementFinder finder, object target, IDataContext context);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.Usages.UsagesContextSearchBase : MultipleRequestContextSearchBase`2<SearchDeclaredElementUsagesRequest, DeclaredElementInstance> {
    protected ReferencePreferenceKind ReferencePreferenceKind { get; }
    protected bool SearchParametersOverloads { get; }
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    protected virtual ICollection`1<DeclaredElementInstance> Promote(ICollection`1<DeclaredElementInstance> elements);
    protected virtual IOccurrence Present(DeclaredElementInstance candidate);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual bool UseTypeParameters(IList`1<DeclaredElementInstance> squeezedCandidate);
    private static ICollection`1<DeclaredElementInstance> IgnoreSubstitutions(ICollection`1<DeclaredElementInstance> candidates);
    public virtual RequestContextSearchCandidateType GetCandidateType(ICollection`1<IRequestContextSearchCandidate> candidates);
    protected virtual ReferencePreferenceKind get_ReferencePreferenceKind();
    protected sealed virtual SearchDeclaredElementUsagesRequest CreateSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets);
    [CanBeNullAttribute]
protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
    protected virtual ISearchDomain CreateSearchDomain(IDataContext context);
    private void InitializeSearchRequest(SearchDeclaredElementUsagesRequest searchRequest, ICollection`1<DeclaredElementInstance> initialTargets);
    protected virtual bool get_SearchParametersOverloads();
    protected virtual Pair`2<VirtualFileSystemPath, TextRange> GetElementTarget(DeclaredElementInstance candidate);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Features.Usages.UsagesContextSearchProviderBase`1 : RequestContextSearchProvider`3<TUsagesContextSearch, SearchRequest, SearchUsagesDescriptor> {
    protected UsagesContextSearchProviderBase`1(IFeaturePartsContainer manager);
    protected virtual SearchUsagesDescriptor CreateSearchDescriptor(SearchRequest searchRequest, ICollection`1<IOccurrence> results);
}
[ShellComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Navigation.Goto.DataRules.OccurrencesDataRules : object {
    public OccurrencesDataRules(Lifetime lifetime, IActionManager actionManager);
    private IProjectModelElement ProjectModelElementFromGotoByNameMenu(IDataContext ctx);
    [CanBeNullAttribute]
private static ICollection`1<IDeclaredElement> DeclaredElementsFromGotoByNameMenu(IDataContext ctx);
}
[ShellFeaturePartAttribute("20")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoAllTypeMembersAndTypesProvider : ClrGotoSymbolProvider {
    public ClrGotoAllTypeMembersAndTypesProvider(IShellLocks locks, Lifetime lifetime, ISettingsStore settingsStore, IThreading threading);
    protected virtual IEnumerable`1<string> GetFromNamespace(ISymbolScope cache, INamespace ns, Predicate`1<IClrDeclaredElement> passFilter);
    protected virtual IEnumerable`1<string> GetShortNamesFromCache(ISymbolScope cache);
}
[ShellFeaturePartAttribute("20")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoAllTypeMembersProvider : ClrGotoSymbolProvider {
    private Func`2<MatcherScore, int> JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.IGotoProviderWithPriority.ItemsPriorityFunc { get; }
    public ClrGotoAllTypeMembersProvider(IShellLocks locks, Lifetime lifetime, ISettingsStore settingsStore, IThreading threading);
    protected virtual IEnumerable`1<string> GetShortNamesFromCache(ISymbolScope cache);
    private sealed virtual override Func`2<MatcherScore, int> JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.IGotoProviderWithPriority.get_ItemsPriorityFunc();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoByFqnProvider : object {
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IEnumerable`1<Pair`2<IOccurrence, MatchingInfo>> GetMatchingOccurrences(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoByFqnProvider/<GetOccurrencesByMatchingInfo>d__3")]
public sealed virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    private static bool LooksLikeFqn(string identifier);
    [CanBeNullAttribute]
private static IOccurrence TryFindCandidate(INavigationScope scope, string fqn);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoClassMemberProviderBase : object {
    private static ILogger ourLog;
    private static ClrGotoClassMemberProviderBase();
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IReadOnlyList`1<IMatchingInfoTreeNode> CreateTree(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher, Func`1<bool> checkForInterrupt);
    protected abstract virtual bool IsApplicable(IPsiSourceFile primarySourceFile, FileMemberNavigationScope fileMemberScope, GotoContext gotoContext, IIdentifierMatcher matcher);
    protected virtual IEnumerable`1<OccurrenceMatchingInfoTree> GetChildren(FileMemberNavigationScope scope, IDeclaredElement element, bool isExtended, int level);
    protected virtual IEnumerable`1<string> GetQuickSearchTexts(IDeclaredElement declaredElement);
    protected virtual bool IsIndexer(IDeclaredElement declaredElement);
    private List`1<ITypeMember> GetMembersNoOverrides(ITypeElement typeElement);
    protected virtual bool BasicFileMemberFilter(ITypeElement typeToSearchIn, ITypeMember member);
    protected virtual bool IsSourceFileAvailable(IPsiSourceFile sourceFile);
    protected virtual IEnumerable`1<ITypeElement> GetPrimaryMembers(IPsiSourceFile psiSourceFile);
    protected virtual ICollection`1<ITypeElement> GetPsiSourceFileTypeElements(IPsiSourceFile primarySourceFile);
}
[ShellFeaturePartAttribute("16")]
[DerivedComponentsInstantiationRequirementAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoFileMemberProvider : object {
    public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    protected virtual bool IsSourceFileAvailable(IPsiSourceFile sourceFile);
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoFileMemberProvider/<GetOccurrencesByMatchingInfo>d__3")]
public virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    [CanBeNullAttribute]
protected virtual IOccurrence CreateOccurrence(ClrFileMemberData clrFileMemberData);
    private IEnumerable`1<ClrFileMemberData> GetPrimaryMembers(FileMemberNavigationScope fileMemberScope);
    protected virtual ICollection`1<ITypeElement> GetPsiSourceFileTypeElements(IPsiSourceFile primarySourceFile);
    protected virtual ICollection`1<ClrFileMemberData> GetSecondaryMembers(IPsiSourceFile primarySourceFile, Func`1<ICollection`1<IProjectFile>> secondaryProjectFilesGetter);
    protected virtual bool IsIndexer(IDeclaredElement declaredElement);
    protected virtual bool IsValidMemberOfSourceFile(IPsiSourceFile sourceFile, IDeclaredElement typeMember, ITypeElement containingTypeElement);
    protected virtual IEnumerable`1<Tuple`2<string, bool>> GetQuickSearchTexts(IDeclaredElement declaredElement);
}
public static class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoMemberUtil : object {
    [NotNullAttribute]
public static IEnumerable`1<Tuple`2<string, bool>> ClrQuickSearchTexts(IDeclaredElement declaredElement, bool isIndexer);
    [CompilerGeneratedAttribute]
internal static string <ClrQuickSearchTexts>g__GetDefaultSearchText|0_0(IDeclaredElement de);
    [CompilerGeneratedAttribute]
internal static string <ClrQuickSearchTexts>g__GetTypeSearchText|0_1(IType type);
}
[ShellFeaturePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoNamespaceProvider : CachedGotoSymbolBase`1<ISymbolScope> {
    public ClrGotoNamespaceProvider(IShellLocks locks);
    protected virtual ISymbolScope GetCache(INavigationScope scope, ISolution solution, GotoContext gotoContext);
    protected virtual IEnumerable`1<string> GetNames(ISymbolScope cache, INavigationScope scope, GotoContext context);
    public virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoSymbolProvider : CachedGotoSymbolBase`1<ISymbolScope> {
    private IProperty`1<bool> myShowNonPublicCompiledElementsInGoto;
    private IDictionary`2<LibrariesFlag, Key`1<Task`1<IEnumerable`1<string>>>> FlagToCaches;
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    protected ClrGotoSymbolProvider(IShellLocks locks, Lifetime lifetime, ISettingsStore settingsStore, IThreading threading);
    public virtual void PrecalculateCaches(INavigationScope scope, ISolution solution, GotoContext context);
    private Task`1<IEnumerable`1<string>> RunOrGetCachesLoadTask(INavigationScope scope, ISolution solution, GotoContext context);
    protected virtual ISymbolScope GetCache(INavigationScope scope, ISolution solution, GotoContext gotoContext);
    protected virtual IEnumerable`1<string> GetNames(ISymbolScope cache, INavigationScope scope, GotoContext context);
    public virtual Predicate`1<IClrDeclaredElement> HandleFilters(INavigationScope scope);
    protected virtual IEnumerable`1<string> GetFromNamespace(ISymbolScope cache, INamespace ns, Predicate`1<IClrDeclaredElement> passFilter);
    protected abstract virtual IEnumerable`1<string> GetShortNamesFromCache(ISymbolScope cache);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoSymbolProvider/<GetOccurrencesByMatchingInfo>d__10")]
public virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    protected virtual bool IsDeclaredElementVisible(IClrDeclaredElement element, ISymbolScope cache);
    protected virtual bool ShowNonPublicCompiledElements();
    protected virtual bool ShowCompilerGeneratedCode();
    public sealed virtual IEnumerable`1<ChainedNavigationItemData> GetNextChainedScopes(GotoContext gotoContext, IIdentifierMatcher matcher, INavigationScope containingScope);
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
[ShellFeaturePartAttribute("20")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoTypeMemberProvider : object {
    private IProperty`1<bool> myShowNonPublicCompiledElementsInGoto;
    private static Key`1<Dictionary`2<ITypeElement, ICollection`1<DeclaredElementData>>> ourMembersInScopeMapKey;
    private static Key`1<OneToSetMap`2<string, ITypeMember>> ourShortNameToTypeMembersInSolutionMapKey;
    private static String[] ourConstructorsNames;
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public ClrGotoTypeMemberProvider(Lifetime lifetime, ISettingsStore settingsStore, IThreading threading);
    private static ClrGotoTypeMemberProvider();
    public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoTypeMemberProvider/<GetOccurrencesByMatchingInfo>d__3")]
public sealed virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoTypeMemberProvider/<GetFromScope>d__4")]
private IEnumerable`1<IClrDeclaredElement> GetFromScope(INavigationScope scope, IEnumerable`1<IClrDeclaredElement> allElements);
    [CanBeNullAttribute]
private ITypeElement GetContainingType(IClrDeclaredElement clrDeclaredElement);
    private static bool TypeIsInNamespace(ITypeElement typeElement, INamespace ns);
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    private bool IsDeclaredElementVisible(IClrDeclaredElement element);
    protected virtual bool ShowNonPublicCompiledElements();
    protected virtual bool ShowCompilerGenerated();
    private static IEnumerable`1<string> ProcessTypeElementScope(TypeElementNavigationScope scope);
    private static IEnumerable`1<string> GetMembersNames(ITypeElement typeElement);
    private static IEnumerable`1<string> ProcessNamespaceScope(NamespaceNavigationScope namespaceScope, GotoContext gotoContext);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
[ShellFeaturePartAttribute("20")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrGotoTypeProvider : CachedGotoSymbolBase`1<ISymbolScope> {
    private IShellLocks myLocks;
    private static Key`1<IEnumerable`1<string>> ourAllTypesNamesKey;
    private IProperty`1<bool> myShowNonPublicCompiledElementsInGoto;
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public ClrGotoTypeProvider(IShellLocks locks, Lifetime lifetime, ISettingsStore settingsStore, IThreading threading);
    private static ClrGotoTypeProvider();
    public sealed virtual void PrecalculateCaches(INavigationScope scope, ISolution solution, GotoContext context);
    public sealed virtual IEnumerable`1<ChainedNavigationItemData> GetNextChainedScopes(GotoContext gotoContext, IIdentifierMatcher matcher, INavigationScope containingScope);
    public virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
    public sealed virtual IEnumerable`1<Pair`2<IOccurrence, MatchingInfo>> GetMatchingOccurrences(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    protected virtual ISymbolScope GetCache(INavigationScope scope, ISolution solution, GotoContext gotoContext);
    protected virtual IEnumerable`1<string> GetNames(ISymbolScope cache, INavigationScope scope, GotoContext context);
    protected virtual bool IsDeclaredElementVisible(IClrDeclaredElement element, ISymbolScope cache);
    protected virtual bool ShowNonPublicCompiledElements();
    private static AccessibilityDomainType GetAccessDomainForCompiledElement(IClrDeclaredElement element);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ClrSpecificGotoFileMemberProvider : ClrGotoFileMemberProvider {
    protected virtual ICollection`1<ClrFileMemberData> GetSecondaryMembers(IPsiSourceFile primarySourceFile, Func`1<ICollection`1<IProjectFile>> secondaryProjectFiles);
    protected virtual bool IsValidSecondaryMember(IPsiSourceFile primarySourceFile, IDeclaredElement typeMember, ITypeElement containingTypeElement);
}
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ExceptObjectMembersFilter : SimpleSymbolFilter {
    public static ExceptObjectMembersFilter INSTANCE;
    public ResolveErrorType ErrorType { get; }
    private static ExceptObjectMembersFilter();
    public virtual ResolveErrorType get_ErrorType();
    public virtual bool Accepts(IDeclaredElement declaredElement, ISubstitution substitution);
}
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ExtensionMethodNavigationScope : object {
    private ISolution mySolution;
    [CompilerGeneratedAttribute]
private IIdentifierMatcher <TypeMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private LibrariesFlag <ExtendedSearchFlag>k__BackingField;
    [CompilerGeneratedAttribute]
private INavigationProviderFilter <Filter>k__BackingField;
    public IIdentifierMatcher TypeMatcher { get; }
    public LibrariesFlag ExtendedSearchFlag { get; public set; }
    public INavigationProviderFilter Filter { get; }
    public ExtensionMethodNavigationScope(ISolution solution, LibrariesFlag extendedSearchFlag, INavigationProviderFilter filter, IIdentifierMatcher typeMatcher);
    [CompilerGeneratedAttribute]
public IIdentifierMatcher get_TypeMatcher();
    [CompilerGeneratedAttribute]
public sealed virtual LibrariesFlag get_ExtendedSearchFlag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedSearchFlag(LibrariesFlag value);
    [CompilerGeneratedAttribute]
public sealed virtual INavigationProviderFilter get_Filter();
    public sealed virtual ISolution GetSolution();
}
public static class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.FilterUtils : object {
    public static bool IsFilteredOut(INavigationScope scope, TypeNavigationFilterEnum[] providedTypes);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.GotoExtensionProvider : object {
    private Key`1<Tuple`2<IIdentifierMatcher, IEnumerable`1<MatchingInfo>>> ourCache;
    private Key`1<ExtensionCache> ourExtensionCache;
    private Key`1<ExtensionCache> ourFullExtensionCache;
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual void PrecalculateCaches(INavigationScope scope, ISolution solution, GotoContext context);
    private static ExtensionCache CreateExtensionCache(ISolution solution, bool includeLibraries);
    public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    private ExtensionCache GetCache(INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.GotoExtensionProvider/<GetOccurrencesByMatchingInfo>d__9")]
public sealed virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.GotoFileProvider : CachedGotoSymbolBase`1<IProjectModelElement> {
    private static Key`1<ChunkHashMap`2<string, List`1<IProjectItem>>> ourProjectItemsKey;
    private static Key`1<ChunkHashMap`2<string, List`1<IProjectItem>>> ourProjectFoldersKey;
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public GotoFileProvider(IShellLocks locks);
    private static GotoFileProvider();
    public sealed virtual void PrecalculateCaches(INavigationScope scope, ISolution solution, GotoContext context);
    public virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    protected virtual IProjectModelElement GetCache(INavigationScope scope, ISolution solution, GotoContext gotoContext);
    protected virtual IEnumerable`1<string> GetNames(IProjectModelElement element, INavigationScope scope, GotoContext context);
    private static ChunkHashMap`2<string, List`1<IProjectItem>> GetOrCreateCacheForElement(IProjectModelElement element, INavigationScope scope, GotoContext context);
    public static Predicate`1<IProjectItem> HandleFiltersForFileTypes(INavigationScope scope);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.GotoFileProvider/<GetOccurrencesByMatchingInfo>d__9")]
public virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.GotoFileProvider/<GetMatchingOccurrences>d__11")]
public sealed virtual IEnumerable`1<Pair`2<IOccurrence, MatchingInfo>> GetMatchingOccurrences(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.GotoFileProvider/<GetNextChainedScopes>d__12")]
public sealed virtual IEnumerable`1<ChainedNavigationItemData> GetNextChainedScopes(GotoContext gotoContext, IIdentifierMatcher matcher, INavigationScope containingScope);
    [CanBeNullAttribute]
private static IProjectModelElement GetProjectModelElementFromScope(INavigationScope navigationScope);
    public static ChunkHashMap`2<string, List`1<IProjectItem>> CollectProjectFolderNames(IProjectModelElement root);
    public static ChunkHashMap`2<string, List`1<IProjectItem>> CollectProjectItemNames(IProjectModelElement root);
    private static ChunkHashMap`2<string, List`1<IProjectItem>> CollectNames(IProjectModelElement root, Predicate`1<IProjectItem> filter);
    public static void VisitProjectItemsAndMatch(IProjectModelElement projectModelElement, IIdentifierMatcher itemMatcher, List`1<Pair`2<IProjectItem, MatchingInfo>> projectItems);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.GotoLineNumberProvider : object {
    private ICollection`1<string> ourFilterExtensions;
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    public sealed virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    [CanBeNullAttribute]
public static IOccurrence TryGetOccurrence(IProjectFile projectFile, Nullable`1<Int32`1<DocLine>> maybeLine, Nullable`1<Int32`1<DocColumn>> column, MatchingInfo navigationInfo);
    private bool IsAvailable(IProjectFile projectFile);
    private static DocumentRange GetTrimmedLine(IDocument document, DocumentCoords coords);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
public interface JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.IClrGotoClassMemberProvider {
}
public interface JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.IGotoTreeProvider {
    public abstract virtual IReadOnlyList`1<IMatchingInfoTreeNode> CreateTree(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher, Func`1<bool> checkForInterrupt);
}
public interface JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.IMatchingInfoTreeNode {
    [NotNullAttribute]
public IReadOnlyList`1<IMatchingInfoTreeNode> Children { get; }
    public bool IsContainer { get; }
    public abstract virtual IReadOnlyList`1<IMatchingInfoTreeNode> get_Children();
    public abstract virtual bool get_IsContainer();
    public abstract virtual IEnumerable`1<IOccurrence> GetOccurrences();
    public abstract virtual Nullable`1<MatcherScore> Matches(IIdentifierMatcher matcher);
}
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.OccurrenceMatchingInfoTree : object {
    [CompilerGeneratedAttribute]
private bool <FromSameFile>k__BackingField;
    [CanBeNullAttribute]
private DeclaredElementOccurrence[] myDeclaredElementOccurrence;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IMatchingInfoTreeNode> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <Element>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Names>k__BackingField;
    public bool FromSameFile { get; }
    public IReadOnlyList`1<IMatchingInfoTreeNode> Children { get; }
    public bool IsContainer { get; }
    public IDeclaredElement Element { get; }
    public IEnumerable`1<string> Names { get; }
    public string DebuggerDisplay { get; }
    public OccurrenceMatchingInfoTree(IDeclaredElement element, IEnumerable`1<string> names, IReadOnlyList`1<OccurrenceMatchingInfoTree> children, bool fromSameFileBonus);
    [CompilerGeneratedAttribute]
public bool get_FromSameFile();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<IMatchingInfoTreeNode> get_Children();
    public sealed virtual bool get_IsContainer();
    public sealed virtual IEnumerable`1<IOccurrence> GetOccurrences();
    public sealed virtual Nullable`1<MatcherScore> Matches(IIdentifierMatcher matcher);
    [CompilerGeneratedAttribute]
public IDeclaredElement get_Element();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Names();
    public string get_DebuggerDisplay();
}
[SolutionComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ProtobufGotoGeneratedClr.ProtobufGotoGeneratedClrProvider : object {
    public sealed virtual IEnumerable`1<IDeclaredElement> GetDerivedElements(IPsiSourceFile protoFile, string protobufPackage, string protobufTypeName, IDictionary`2<string, string> fileOptions, ProtobufDeclaredElementType declaredElementType, string subobjectName);
}
[ZoneMarkerAttribute]
internal class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.ProtobufGotoGeneratedClr.ZoneMarker : object {
}
public static class JetBrains.ReSharper.Features.Navigation.Goto.GotoProviders.TypeMemberNavigationUtil : object {
    public static IEnumerable`1<ITypeElement> GetPsiSourceFileTypeElements(IPsiSourceFile sourceFile);
    public static IEnumerable`1<IDeclaredElement> GetTypeElementMembers(ITypeElement typeElement, Func`3<ITypeMember, ITypeElement, bool> typeMembersFilter, string shortName);
    public static IEnumerable`1<ITypeMember> GetFilteredTypeMembers(ITypeElement typeToSearchIn, Func`3<ITypeMember, ITypeElement, bool> typeMembersFilter, string shortName);
    public static bool BasicFileMemberFilter(ITypeElement typeToSearchIn, ITypeMember member);
    private static bool IsCompiledElementVisible(ITypeMember member, ITypeElement typeToSearchIn);
}
public abstract class JetBrains.ReSharper.Features.Navigation.Languages.BuildScripts.GoToNextPrevTarget.GoToNextPrevTargetHandlerBase : object {
    protected void Execute(IDataContext context, bool nextMethod);
    protected static int GetNavigationOffset(IDataContext context, bool nextMethod);
    private static IXmlToken GetSourceTokenFromEditor(IDataContext dataContext);
    protected static bool IsAvailable(IDataContext context, bool nextMethod);
    public abstract virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public abstract virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionHandler("JetBrains.ReSharper.Features.Navigation.Core.NextPreviousMember.GotoNextMemberAction")]
public class JetBrains.ReSharper.Features.Navigation.Languages.BuildScripts.GoToNextPrevTarget.GotoNextTargetHandler : GoToNextPrevTargetHandlerBase {
    public virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionHandler("JetBrains.ReSharper.Features.Navigation.Core.NextPreviousMember.GotoPrevMemberAction")]
public class JetBrains.ReSharper.Features.Navigation.Languages.BuildScripts.GoToNextPrevTarget.GoToPrevTargetHandler : GoToNextPrevTargetHandlerBase {
    public virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.Languages.BuildScripts.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpApiesContextSearchBase : object {
    protected IExposingApiesFinder myExposingApiesFinder;
    public CSharpApiesContextSearchBase(IExposingApiesFinder exposingApiesFinder);
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
    [CanBeNullAttribute]
public ExposingApiesContext CreateContext(IDataContext dataContext);
    protected virtual IExposingApiesAccessValidator CreateAccessValidator(ITreeNode node, IType type);
    private static bool IsTypeMember(ITreeNode node);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeBaseSearch : BaseContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<IDeclaredElement> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeDeclarationSearch : TypeDeclarationContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<IDeclaredElement> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeFindUsagesAdvancedSearch : FindUsagesAdvancedContextSearch {
    public CSharpCompositeTypeFindUsagesAdvancedSearch(IAdvancedSearchingHost host);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeFindUsagesSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeGotoDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeHighlightUsagesSearch : HighlightUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeImplementationsSearch : ImplementationContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeInheritorsSearch : InheritorsContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
public static class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpCompositeTypeSearchUtil : object {
    public static bool IsCompositeType(IDeclaredElement declaredElement);
    public static bool IsContextApplicable(IDataContext dataContext);
    [NotNullAttribute]
[ItemNotNullAttribute]
public static IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, bool stripSubstitution);
    [CompilerGeneratedAttribute]
internal static void <GetElementCandidates>g__AddTypeArgumentCandidates|2_0(ISubstitution substitution, <>c__DisplayClass2_0& );
    [CompilerGeneratedAttribute]
internal static void <GetElementCandidates>g__AddCandidates|2_1(IType type, <>c__DisplayClass2_0& );
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpConsumingApiesContextSearch : CSharpApiesContextSearchBase {
    public CSharpConsumingApiesContextSearch(IExposingApiesFinder exposingApiesFinder);
    public sealed virtual ConsumingApiesSearchRequest CreateSearchRequest(IDataContext dataContext);
    protected virtual IExposingApiesAccessValidator CreateAccessValidator(ITreeNode node, IType type);
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpContextNavigationUtil : object {
    [CanBeNullAttribute]
public static ICSharpControlFlowGraph BuildGraph(IDataContext dataContext);
    [ExtensionAttribute]
[CanBeNullAttribute]
internal static TTreeNode GetSelectedTreeNode(IDataContext dataContext);
    [CanBeNullAttribute]
internal static IType GetTypeOfSelectedElement(IDataContext dataContext);
    internal static bool IsSelectedElementAssociatedWithType(IDataContext dataContext);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpExitsFinder : object {
    private static ICSharpControlFlowGraph GetControlFlowGraph(ITreeNode contextNode);
    [NotNullAttribute]
public sealed virtual IEnumerable`1<ITreeNode> GetReachableExitNodes(ITreeNode contextNode);
    [NotNullAttribute]
public sealed virtual IEnumerable`1<DocumentRange> GetReachableExitKeywordsRanges(ITreeNode contextNode);
    [CanBeNullAttribute]
private static Nullable`1<DocumentRange> GetExitKeywordDocumentRange(ITreeNode treeNode);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpExitsFinder/<ExitNodesToKeywordsRanges>d__4")]
private static IEnumerable`1<DocumentRange> ExitNodesToKeywordsRanges(IEnumerable`1<ITreeNode> exitNodes);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpExposingApiesContextSearch : CSharpApiesContextSearchBase {
    public CSharpExposingApiesContextSearch(IExposingApiesFinder exposingApiesFinder);
    public sealed virtual ExposingApiesSearchRequest CreateSearchRequest(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpExtensionMethodsContextSearch : object {
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    public sealed virtual ExtensionMethodsSearchRequest GetExtensionMethodsRequest(IDataContext dataContext);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
}
[ContextActionAttribute]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpFindNullableWarningSuppressionsAction : object {
    [NotNullAttribute]
private IContextActionDataProvider myProvider;
    public CSharpFindNullableWarningSuppressionsAction(LanguageIndependentContextActionDataProvider provider);
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpFlowTargetContextSearch : object {
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    public sealed virtual Tuple`2<ITreeNode, ICollection`1<ITreeNode>> SearchTargetAndFinallyBlocks(IDataContext dataContext);
    [CanBeNullAttribute]
private ITreeNode FindCatch(IThrowStatement throwStatement, ICollection`1<ITreeNode> finallyBlocks, ICSharpControlFlowGraph graph);
    private static IControlFlowElement GetFlowElement(ITreeNode element, ICSharpControlFlowGraph graph);
    [PureAttribute]
private static bool InsideKeyword(ITokenNode keyword, DocumentOffset caretOffset);
    private ITreeNode GetControlFlowTarget(ITreeNode statement, ICollection`1<ITreeNode> finallyBlocks, ICSharpControlFlowGraph graph, bool hasMultiplexor);
    private ITreeNode EdgeExit(ICSharpControlFlowEdge edge, ICollection`1<ITreeNode> finallyBlocks, ICSharpControlFlowGraph graph, bool hasMultiplexor);
    private static ITreeNode GetExitElement(ICSharpControlFlowGraph graph);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpFunctionExitsContextSearch : object {
    [NotNullAttribute]
public sealed virtual IEnumerable`1<DocumentRange> SearchTargets(IDataContext dataContext);
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    private static bool GetFunctionBody(IDataContext dataContext);
    private static bool InsideClosingBrace(IBlock body, IDataContext dataContext);
    private static bool InsideName(IDeclaration declaration, IDataContext dataContext);
    private static bool InsideExitStatement(IDataContext dataContext);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpImplementationsContextSearch : object {
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    [CanBeNullAttribute]
private static IClassLikeDeclaration FindClassDeclaration(IDataContext dataContext);
    private static IDeclaredType FindSelectedInheritedTypeElement(IClassLikeDeclaration declaration, IDataContext dataContext);
    public sealed virtual bool IsInterface(IDeclaredElement declaredElement);
    public sealed virtual IEnumerable`1<DocumentRange> GetImplementingMemebersDocumentRange(IDataContext dataContext);
    private static IEnumerable`1<IDeclaration> GetTreeNode(IDeclaredElement declaredElement, IDataContext dataContext);
    public IEnumerable`1<IDeclaredElement> GetDeclaredElements(IDataContext dataContext);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpOperatorDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpOperatorImplementationSearch : ImplementationContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpOperatorReferencesContextSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ShellFeaturePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpOverloadsContextSearch : object {
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpOverloadsContextSearch/<GetOverloadRanges>d__1")]
public sealed virtual IEnumerable`1<DocumentRange> GetOverloadRanges(IDataContext dataContext);
    private static IClassMemberDeclaration FindClassMemberDeclaration(IDataContext dataContext);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpParameterDeclarationContextSearch : ParameterDeclarationContextSearchBase {
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    public sealed virtual IEnumerable`1<IDeclaredElement> SearchTargets(IDataContext dataContext);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpSubstitutionsContextSearch : object {
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
    public sealed virtual SearchSubstitutionRequest GetSubstitutionRequest(IDataContext dataContext);
    [CanBeNullAttribute]
private static ITypeParametersOwner GetTypeParametersOwner(ITypeArgumentList argumentList);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpSymbolAliasDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpSymbolAliasFindUsagesSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpSymbolAliasHighlightUsagesSearch : HighlightUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpSymbolAliasSearchUtil : object {
    public static bool IsContextApplicable(IDataContext dataContext);
    public static IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext dataContext);
    private static ISymbolAlias TryGetSymbolAlias(ResolveResultWithInfo resolveResult);
}
internal static class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ContextNavigation.CSharpSyntheticOperatorNavigationUtil : object {
    public static bool HasReferenceToSyntheticOperator(IDataContext dataContext);
    [NotNullAttribute]
[ItemNotNullAttribute]
public static IEnumerable`1<TCandidate> GetCandidates(IDataContext context, Func`2<DeclaredElementInstance, TCandidate> candidateSelector, bool addParentTupleOperator);
    [CompilerGeneratedAttribute]
internal static void <GetCandidates>g__CollectAllReferencedOperators|1_0(IDeclaredElement declaredElement, <>c__DisplayClass1_0`1& );
    [CompilerGeneratedAttribute]
internal static void <GetCandidates>g__CollectNestedTupleOperators|1_1(TupleEqualityOperator tupleEqualityOperator, <>c__DisplayClass1_0`1& );
    [CompilerGeneratedAttribute]
internal static DeclaredElementInstance <GetCandidates>g__ToDeclaredElementInstance|1_2(IOperator operator);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.CSharpOccurrenceContextService : object {
    public sealed virtual ITreeNode FindEnclosingContextNode(ITreeNode occurrenceNode);
}
[ShellFeaturePartAttribute("16")]
[DerivedComponentsInstantiationRequirementAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpCachedGotoFileMemberProvider : ClrSpecificGotoFileMemberProvider {
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    protected virtual bool IsIndexer(IDeclaredElement declaredElement);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpCachedGotoFileMemberProvider/<GetQuickSearchTexts>d__2")]
protected virtual IEnumerable`1<Tuple`2<string, bool>> GetQuickSearchTexts(IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Tuple`2<string, bool>> <>n__0(IDeclaredElement declaredElement);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpClassMemberProvider : ClrGotoClassMemberProviderBase {
    protected virtual bool IsApplicable(IPsiSourceFile primarySourceFile, FileMemberNavigationScope fileMemberScope, GotoContext gotoContext, IIdentifierMatcher matcher);
    protected virtual bool IsIndexer(IDeclaredElement declaredElement);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpClassMemberProvider/<GetQuickSearchTexts>d__2")]
protected virtual IEnumerable`1<string> GetQuickSearchTexts(IDeclaredElement declaredElement);
    protected virtual IEnumerable`1<OccurrenceMatchingInfoTree> GetChildren(FileMemberNavigationScope scope, IDeclaredElement element, bool isExtended, int level);
    protected virtual bool BasicFileMemberFilter(ITypeElement typeToSearchIn, ITypeMember member);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<string> <>n__0(IDeclaredElement declaredElement);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpLocalFunctionFileMemberProvider : object {
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpLocalFunctionFileMemberProvider/<FindMatchingInfos>d__1")]
public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpLocalFunctionFileMemberProvider/<GetOccurrencesByMatchingInfo>d__2")]
public sealed virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpOccurrenceKindProvider : object {
    [NotNullAttribute]
public sealed virtual ICollection`1<OccurrenceKind> GetOccurrenceKinds(IOccurrence occurrence);
    public sealed virtual IEnumerable`1<OccurrenceKind> GetAllPossibleOccurrenceKinds();
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpTextOccurrenceKindProvider : object {
    public sealed virtual ICollection`1<OccurrenceKind> GetOccurrenceKinds(IOccurrence occurrence);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.CSharpTextOccurrenceKindProvider/<GetAllPossibleOccurrenceKinds>d__1")]
public sealed virtual IEnumerable`1<OccurrenceKind> GetAllPossibleOccurrenceKinds();
}
[ShellFeaturePartAttribute("16")]
[DerivedComponentsInstantiationRequirementAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Navigation.ExternalSourcesFileMemberProvider : CSharpCachedGotoFileMemberProvider {
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    protected virtual bool IsValidMemberOfSourceFile(IPsiSourceFile sourceFile, IDeclaredElement typeMember, ITypeElement containingTypeElement);
    protected virtual bool IsValidSecondaryMember(IPsiSourceFile primarySourceFile, IDeclaredElement typeMember, ITypeElement containingTypeElement);
    protected virtual ICollection`1<ITypeElement> GetPsiSourceFileTypeElements(IPsiSourceFile primarySourceFile);
    protected virtual IOccurrence CreateOccurrence(ClrFileMemberData clrFileMemberData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[QuickDocProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.QuickDoc.CSharpSymbolAliasQuickDocProvider : object {
    private ISolution mySolution;
    private HelpSystem myHelpSystem;
    private QuickDocTypeMemberProvider myQuickDocTypeMemberProvider;
    public CSharpSymbolAliasQuickDocProvider(ISolution solution, HelpSystem helpSystem, QuickDocTypeMemberProvider quickDocTypeMemberProvider);
    public sealed virtual bool CanNavigate(IDataContext context);
    public sealed virtual void Resolve(IDataContext context, Action`2<IQuickDocPresenter, PsiLanguageType> resolved);
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Search.CSharpAnonymousTypeFinder : object {
    public ReferencePreferenceKind Kind { get; }
    public PreferLocationStyle LocationStyle { get; }
    public sealed virtual object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    public sealed virtual void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    public sealed virtual string Present(object target);
    public sealed virtual string GetTitle();
    public sealed virtual ReferencePreferenceKind get_Kind();
    public sealed virtual ISearchDomainContext GetSearchDomainContext(object target);
    public sealed virtual IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual PreferLocationStyle get_LocationStyle();
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Search.CSharpFunctionExitsFinder : object {
    public ReferencePreferenceKind Kind { get; }
    public PreferLocationStyle LocationStyle { get; }
    public sealed virtual object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    private static bool IsFunctionExit(ICSharpStatement selectedStatement, DocumentRange range);
    private static bool IsClosingBrace(ICSharpStatement selectedStatement, DocumentRange range);
    public sealed virtual void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    public sealed virtual string Present(object target);
    public sealed virtual string GetTitle();
    public sealed virtual ReferencePreferenceKind get_Kind();
    public sealed virtual ISearchDomainContext GetSearchDomainContext(object target);
    public sealed virtual IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual PreferLocationStyle get_LocationStyle();
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.Search.CSharpUsingDirectiveFinder : object {
    public ReferencePreferenceKind Kind { get; }
    public PreferLocationStyle LocationStyle { get; }
    public sealed virtual object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    public sealed virtual void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    public sealed virtual string Present(object target);
    public sealed virtual string GetTitle();
    public sealed virtual ReferencePreferenceKind get_Kind();
    public sealed virtual ISearchDomainContext GetSearchDomainContext(object target);
    public sealed virtual IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual PreferLocationStyle get_LocationStyle();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.Languages.CSharp.ZoneMarker : object {
}
internal class JetBrains.ReSharper.Features.Navigation.Languages.Protobuf.GeneratedClassOccurrenceBrowserDescriptor : OccurrenceBrowserDescriptor {
    public TreeModel Model { get; }
    public GeneratedClassOccurrenceBrowserDescriptor(ISolution solution);
    public virtual TreeModel get_Model();
}
public class JetBrains.ReSharper.Features.Navigation.Languages.Protobuf.GotoGeneratedClassContextAction : ContextNavigationActionBase`1<GotoGeneratedClassProvider> {
    public static string ACTION_ID;
}
[ContextNavigationProviderAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.Protobuf.GotoGeneratedClassProvider : object {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Navigation.Languages.Protobuf.GotoGeneratedClassProvider/<CreateWorkflow>d__0")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
}
[ZoneMarkerAttribute]
internal class JetBrains.ReSharper.Features.Navigation.Languages.Protobuf.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Navigation.Languages.Xaml.Navigation.GotoBindingDataContextAction : ContextNavigationActionBase`1<GotoBindingDataContextProvider> {
}
[ContextNavigationProviderAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.Xaml.Navigation.GotoBindingDataContextProvider : object {
    public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.Xaml.Navigation.XamlClrGotoFileMemberProvider : ClrGotoFileMemberProvider {
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    protected virtual bool IsSourceFileAvailable(IPsiSourceFile sourceFile);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.Languages.Xaml.ZoneMarker : object {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.Languages.Xml.Navigation.XmlGotoFileMemberProvider : NonCachedFileMemberProvider`1<XmlLanguage> {
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Languages.Xml.Search.XmlAttributeFinder : object {
    public ReferencePreferenceKind Kind { get; }
    public PreferLocationStyle LocationStyle { get; }
    public sealed virtual object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    public sealed virtual void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    private static bool FindAttributes(IXmlTagContainer tagContainer, string attributeName, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator indicator, double value);
    public sealed virtual string Present(object target);
    public sealed virtual string GetTitle();
    public sealed virtual ReferencePreferenceKind get_Kind();
    public sealed virtual ISearchDomainContext GetSearchDomainContext(object target);
    public sealed virtual IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual PreferLocationStyle get_LocationStyle();
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.Languages.Xml.Search.XmlTagFinder : object {
    public ReferencePreferenceKind Kind { get; }
    public PreferLocationStyle LocationStyle { get; }
    public sealed virtual object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    public sealed virtual void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    private static bool FindTags(IXmlTagContainer tagContainer, string tagName, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator indicator, double value);
    public sealed virtual string Present(object target);
    public sealed virtual string GetTitle();
    public sealed virtual ReferencePreferenceKind get_Kind();
    public sealed virtual ISearchDomainContext GetSearchDomainContext(object target);
    public sealed virtual IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual PreferLocationStyle get_LocationStyle();
}
[OptionsPageAttribute("SearchAndNavigationGeneralOptionPagePID", "General", "JetBrains.ReSharper.Features.Navigation.Resources.FeaturesFindingThemedIcons/SearchOptionsPage")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Options.SearchAndNavigationGeneralOptionPage : CustomSimpleOptionsPage {
    public static string PID;
    public SearchAndNavigationGeneralOptionPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext, IShellLocks locks, ProjectModelElementPresentationService projectModelElementPresentationService, ISolution solution);
    private sealed virtual override IEnumerable`1<string> JetBrains.ReSharper.Feature.Services.Util.FilesAndDirs.IFilesAndDirsItemIndexStore.EnumerateIndexes();
    private sealed virtual override void JetBrains.ReSharper.Feature.Services.Util.FilesAndDirs.IFilesAndDirsItemIndexStore.Add(string index);
    private sealed virtual override void JetBrains.ReSharper.Feature.Services.Util.FilesAndDirs.IFilesAndDirsItemIndexStore.Remove(string index);
}
[OptionsPageAttribute("SearchAndNavigationOptionPagePID", "Search & Navigation", "JetBrains.ReSharper.Features.Navigation.Resources.FeaturesFindingThemedIcons/SearchOptionsPage")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Navigation.Options.SearchAndNavigationOptionPage : AEmptyOptionsPage {
    public static string PID;
}
public class JetBrains.ReSharper.Features.Navigation.Resources.FeaturesCommonThemedIcons : object {
}
public class JetBrains.ReSharper.Features.Navigation.Resources.FeaturesFindingThemedIcons : object {
}
[ActionGroupAttribute("FindDependentCode.ActionBar", "1", "10")]
public class JetBrains.ReSharper.Features.Navigation.resources.FindDependentCodeActionBarActionGroup : object {
    public FindDependentCodeActionBarActionGroup(UpdateFindUsagesAction updateFindUsagesAction, Separator sep, TreeModelBrowserStandardActionGroup treeModelBrowserStandardActionGroup, Separator sep1, OccurrenceBrowserMergeAction occurrenceBrowserMergeAction, Separator sep2, FilterOccurrencesMenuAction newFilterMenu, Separator sep3);
}
[ActionGroupAttribute("FindDependentCode.Filter", "1", "10")]
public class JetBrains.ReSharper.Features.Navigation.resources.FindDependentCodeFilterActionGroup : object {
    public FindDependentCodeFilterActionGroup(ShowReadAccessAction showReadAccessAction, ShowWriteAccessAction showWriteAccessAction, ShowInvocationAccessAction showInvocationAccessAction, ShowNameCaptureAccessAction showNameCaptureAccessAction, ShowAttributeAccessAction showAttributeAccessAction, ShowOtherAccessAction showOtherAccessAction);
}
[ActionGroupAttribute("FindReferencedCode.ActionBar", "1", "10")]
public class JetBrains.ReSharper.Features.Navigation.resources.FindReferencedCodeActionBarActionGroup : object {
    public FindReferencedCodeActionBarActionGroup(ReferencedCodeUpdateAction referencedCodeUpdateAction, Separator sep, TreeModelBrowserStandardActionGroup treeModelBrowserStandardActionGroup, Separator sep1, OccurrenceBrowserStandardActionGroup occurrenceBrowserStandardActionGroup);
}
[ActionGroupAttribute("FindUsages.ActionBar", "0", "10")]
public class JetBrains.ReSharper.Features.Navigation.resources.FindUsagesActionBarActionGroup : object {
    public FindUsagesActionBarActionGroup(UpdateFindUsagesAction updateFindUsagesAction, Separator sep, TreeModelBrowserStandardActionGroup treeModelBrowserStandardActionGroup, Separator sep1, OccurrenceBrowserStandardActionGroup occurrenceBrowserStandardActionGroup, OccurrenceKindGrouping grouping);
}
[ActionGroupAttribute("GotoByName.ActionBar", "1", "10")]
public class JetBrains.ReSharper.Features.Navigation.resources.GotoByNameActionBarActionGroup : object {
    public GotoByNameActionBarActionGroup(UpdateGotoByNameAction updateGotoByNameAction, Separator sep, TreeModelBrowserStandardActionGroup treeModelBrowserStandardActionGroup, Separator sep1, OccurrenceBrowserStandardActionGroup occurrenceBrowserStandardActionGroup);
}
[ActionGroupAttribute("OccurrenceBrowser.Show", "1", "10")]
public class JetBrains.ReSharper.Features.Navigation.resources.OccurrenceBrowserShowActionGroup : object {
    public OccurrenceBrowserShowActionGroup(ShowReadAccessAction showReadAccessAction, ShowWriteAccessAction showWriteAccessAction, ShowInvocationAccessAction showInvocationAccessAction, ShowNameCaptureAccessAction showNameCaptureAccessAction, ShowAttributeAccessAction showAttributeAccessAction, ShowOtherAccessAction showOtherAccessAction, Separator sep, ShowVBImplementsClauseAction showVBImplementsClauseAction, ShowBaseMethodCallAction showBaseMethodCallAction, ShowVBHandlesClauseAction showVBHandlesClauseAction, ShowUnitTestAction showUnitTestAction, ShowDocumentationAccessAction showDocumentationAccessAction);
}
[ActionGroupAttribute("OccurrenceBrowser.Standard", "0", "10")]
public class JetBrains.ReSharper.Features.Navigation.resources.OccurrenceBrowserStandardActionGroup : object {
    public OccurrenceBrowserStandardActionGroup(OccurrenceBrowserMergeAction occurrenceBrowserMergeAction, Separator sep, ShowAllAccessAction showAllAccessAction, ShowOnlyReadAccessAction showOnlyReadAccessAction, ShowOnlyWriteAccessAction showOnlyWriteAccessAction, OccurrenceBrowserShowActionGroup occurrenceBrowserShowActionGroup, FilterOccurrencesMenuAction newFilterMenu, BrowserShowIgnoredAction browserShowIgnoredAction);
}
[ActionGroupAttribute("FindUsages.Grouping", "2", "16")]
public class JetBrains.ReSharper.Features.Navigation.resources.OccurrenceKindGrouping : object {
}
[ActionAttribute("FindUsages.OccurrenceToggleKindGroupings", "JetBrains.ReSharper.Features.Navigation.Resources.Strings", "ToggleKindGroupingActionText")]
public class JetBrains.ReSharper.Features.Navigation.resources.OccurrenceToggleKindGroupingsAction : object {
    public sealed virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
}
[ActionGroupAttribute("0", "16")]
public class JetBrains.ReSharper.Features.Navigation.resources.SolutionFolderGroupActionGroup : object {
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public static class JetBrains.ReSharper.Features.Navigation.Resources.Strings : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string ClickForNextUsage_Text { get; }
    public static string NUsagesHighlighted_Text { get; }
    public static string BaseSymbolsActionText { get; }
    public static string CancelHighlighingUsagesActionText { get; }
    public static string CommandPromptActionText { get; }
    public static string ConflictingDeclarationSActionText { get; }
    public static string ConsumingAPIsActionText { get; }
    public static string ContainingDeclarationActionText { get; }
    public static string ControlFlowTargetActionText { get; }
    public static string DerivedSymbolsActionText { get; }
    public static string ExposingAPIsActionText { get; }
    public static string ExtensionMethodsActionText { get; }
    public static string FilterUsagesActionGroupText { get; }
    public static string FindDependenciesActionGroupText { get; }
    public static string FindDependentCodeActionGroupText { get; }
    public static string FindDependentCodeActionText { get; }
    public static string FindDependentCodeAllProjectsActionText { get; }
    public static string FindReferencedCodeViewSettingsSettingDescription { get; }
    public static string FindResultEnableBreakpointActionText { get; }
    public static string FindResultsActionText { get; }
    public static string FindResultToggleBreakpointActionText { get; }
    public static string FindUsagesActionGroupText { get; }
    public static string FindUsagesActionText { get; }
    public static string FindUsagesAdvancedActionText { get; }
    public static string SearchProperties_Caption { get; }
    public static string Find_Text { get; }
    public static string Search_Text { get; }
    public static string _Implementing__Text { get; }
    public static string _Overriding__Text { get; }
    public static string UsagesOf_derived__Text { get; }
    public static string Include_overloading__Text { get; }
    public static string Include_overloading_Text { get; }
    public static string _ExtendingInterfaces_Text { get; }
    public static string _Implementations_Text { get; }
    public static string _DelegateTargets_Text { get; }
    public static string UsagesOf_members_Text { get; }
    public static string _Hiding_Text { get; }
    public static string _DynamicReferences_Text { get; }
    public static string _TextualOccurrences_Text { get; }
    public static string UsagesOf_derived_Text { get; }
    public static string _Usages_Text { get; }
    public static string _DerivedTypes_Text { get; }
    public static string Scope_Text { get; }
    public static string FunctionExitSActionText { get; }
    public static string GeneralOptionPageTitle { get; }
    public static string GenericSubstitutionsActionText { get; }
    public static string GoToByNameActionGroupText { get; }
    public static string GoToDeclarationActionText { get; }
    public static string GoToImplementationActionText { get; }
    public static string GroupBySettingDescription { get; }
    public static string HighlightUsagesInFileActionText { get; }
    public static string ImplementingMembersActionText { get; }
    public static string IterateUsagesActionText { get; }
    public static string MemberOverloadsActionText { get; }
    public static string MergeOccurrencesOnTheSameLineActionText { get; }
    public static string NavigateBackwardActionText { get; }
    public static string NavigateForwardActionText { get; }
    public static string NavigateToActionText { get; }
    public static string NextMemberActionText { get; }
    public static string ParameterDeclarationActionText { get; }
    public static string PreviousEditActionText { get; }
    public static string PreviousMemberActionText { get; }
    public static string RecentEditsActionText { get; }
    public static string ReferencedCodeActionText { get; }
    public static string RefreshActionText { get; }
    public static string RelatedFilesActionText { get; }
    public static string RemoveBreakpointActionText { get; }
    public static string SearchNavigationOptionPageTitle { get; }
    public static string SelectContainingDeclarationActionText { get; }
    public static string SetBreakpointActionText { get; }
    public static string SetTracepointActionText { get; }
    public static string ShowAllUsagesActionText { get; }
    public static string ShowAttributeUsagesActionText { get; }
    public static string ShowBaseMethodCallsActionText { get; }
    public static string ShowIgnoredUsagesActionText { get; }
    public static string ShowInterfaceQualificationsActionText { get; }
    public static string ShowInvocationUsagesActionText { get; }
    public static string ShowNameCapturesActionText { get; }
    public static string ShowOnlyReadUsagesActionText { get; }
    public static string ShowOnlyWriteUsagesActionText { get; }
    public static string ShowOtherUsagesActionText { get; }
    public static string ShowReadUsagesActionText { get; }
    public static string ShowUnitTestUsagesActionText { get; }
    public static string ShowUsagesActionText { get; }
    public static string ShowUsagesInDocumentationActionText { get; }
    public static string ShowVBHandlesClausesActionText { get; }
    public static string ShowWriteUsagesActionText { get; }
    public static string StandardOccurrenceBrowserActionsActionGroupText { get; }
    public static string ToggleKindGroupingActionText { get; }
    public static string TypeOfSymbolActionText { get; }
    public static string ViewInAssemblyExplorerActionText { get; }
    public static string WindowsExplorerActionText { get; }
    public static string LocateInSolutionOrAssemblyExplorer_ActionName { get; }
    public static string CantLocateInSolutionOrAssemblyExplorer_TooltipMessage { get; }
    public static string LocateInAssemblyExplorer_ActionName { get; }
    public static string LocateInSolutionExplorer_ActionName { get; }
    public static string General_Header_Text { get; }
    public static string EnableSearchEverywhere_Text { get; }
    public static string IntegrateGoToTextIntoSearchEverywhere_Text { get; }
    public static string FuzzyResultsInGoToText_Text { get; }
    public static string RememberLastSearch_Text { get; }
    public static string RememberLastInputForSearchCommandsAnd_Text { get; }
    public static string RememberExtendedSearchPreferences_Text { get; }
    public static string RememberTheIncludeLibraryTypesInclude_Text { get; }
    public static string GoToUsageIfThereIsOnly_oneResultNavigate_Text { get; }
    public static string GoToBaseInheritorIfThereIsOnlyOneResult_Text { get; }
    public static string Rich_mouseNavigationInTheEditor_Text { get; }
    public static string UseCtrlAltClickToGoToImplementations_Text { get; }
    public static string UseMiddleClickToGoToDeclaration_Text { get; }
    public static string UseCtrlMiddleClickToPeekUsages_Text { get; }
    public static string UseCtrlShiftClickToPeekDeclaration_Text { get; }
    public static string UseCtrlAltMiddleClickToPeekImplementations_Text { get; }
    public static string OpenNewFilesIn_previewTabFromEverywhere_BoolOption_Text { get; }
    public static string SmartGoTo_DeclarationBehavior_ComboEnum_Caption { get; }
    public static string FindGenericTypeUsagesBehaviour_ComboEnum_Caption { get; }
    public static string FindResultsWindow_Header_Text { get; }
    public static string E_xpandSearchResultsTreeByDefault_Text { get; }
    public static string MergeOccurrencesOnASingleLine_Text { get; }
    public static string OpenPreviewTabForSelectedItem_Text { get; }
    public static string ElementsToSkip_Header_Text { get; }
    public static string HereYouCanSpecifyFilesAndFoldersThat_Text_Text { get; }
    public static string ToEditTheListOfSkippedFilesAndFolders_Text { get; }
    public static string MouseNavigation_Header_Text { get; }
    public static string UseReSharperNavigationHistoryForMouse_Text { get; }
    public static string DisableGroupingByKind_Text { get; }
    public static string EnableGroupingByKind_Text { get; }
    public static string RecentFiles_Caption { get; }
    public static string RecentEdits_Caption { get; }
    public static string ThereAreNo__Text { get; }
    public static string ScanningFile__Text { get; }
    public static string ScanningAnElement_Text { get; }
    public static string UsagesOf_FindUsagesTitle_Text { get; }
    public static string ConsumingAPIsFor__Text { get; }
    public static string ExposingAPIsFor__Text { get; }
    public static string ExtensionMethodsFor__Text { get; }
    public static string ExtensionMethodsForUnknownType_Text { get; }
    public static string EmptySearch_Text { get; }
    public static string ReferencedCode_Text { get; }
    public static string ReferencedCodeIn__Text { get; }
    public static string ReferencedCodeIn_U2026_Text { get; }
    public static string CannotEvaluate_ThereAreTooManyReferences_Text { get; }
    public static string Usages_Text { get; }
    public static string UsagesOf__Text { get; }
    public static string SubstitutionsOfTypeParameter_Text { get; }
    public static string SubstitutionsOf__Text { get; }
    public static string CommandPrompt_Text { get; }
    public static string WindowsExplorer_Text { get; }
    public static string ConsuminGAPIs_Text { get; }
    public static string ConsumingAPIsAreNotAvailableForStatic_ToolTip { get; }
    public static string NoConsumingAPIsFound_ToolTip { get; }
    public static string FindInFile_Text { get; }
    public static string FindIn_Project_Text { get; }
    public static string FindIn_Solution_Text { get; }
    public static string FindIn__Text { get; }
    public static string NullableWarningSuppressionExpressions_Text { get; }
    public static string Found1NullableWarningSuppression_Text { get; }
    public static string Found_NullableWarningSuppressions_Text { get; }
    public static string FindNullableWarningSuppressions_Text { get; }
    public static string InvalidElement_Text { get; }
    public static string TypesSimilarTo_FindUsagesTitle_Text { get; }
    public static string AnonymousFunction_Text { get; }
    public static string UnknownExpression_Text { get; }
    public static string ReachableExitsOf_FindUsagesTitle_Text { get; }
    public static string InvalidUsingDirective_Text { get; }
    public static string ReferencesAvailableVia_FindUsagesTitle_Text { get; }
    public static string GeneratedClasses_Text { get; }
    public static string GeneratedClasses_Caption { get; }
    public static string BindingDataContext_Caption { get; }
    public static string SameAttributesAs_FindUsagesTitle_Text { get; }
    public static string SameTagsAs_FindUsagesTitle_Text { get; }
    public static string AnalyzingTargets_Text { get; }
    public static string SearchingForQuasiImplementations_Text { get; }
    public static string PressCancelToContinueSearchWithoutQuasi_Text { get; }
    public static string DoYouWantToFindUsagesOfTheParameter_Text { get; }
    public static string ShowUsages_Caption { get; }
    public static string NoUsagesFound_Text { get; }
    public static string Usages_FindResult_Form_Text { get; }
    public static string Usage_FindResult_Form_Text { get; }
    public static string Found___Text { get; }
    public static string Displaying_Of_Found__Text { get; }
    public static string NoGenericSubstitutionsFoundForThisType_Text { get; }
    public static string GenericSubstitutions_Text { get; }
    public static string ImplementingMembers_Text { get; }
    public static string OverridingMembers_Text { get; }
    public static string NoImplementationsFoundForThisType_Text { get; }
    public static string NavigateTo_Text { get; }
    public static string MemberOverloads_Text { get; }
    public static string ParameterDeclaration_Text { get; }
    public static string NoDeclarationsFoundForThisParameter_Text { get; }
    public static string NoSubstitutionFound_Text { get; }
    public static string Substitution_Plural { get; }
    public static string GenericSubstitution_Text { get; }
    public static string ExposingAPIs_Text { get; }
    public static string NoExposingAPIsFound_ToolTip { get; }
    public static string ExposingAPIsAreNotAvailableForStatic_ToolTip { get; }
    public static string NoExposingAPIsFound_Text { get; }
    public static string ExposingAPIs_FindResult_Form_Text { get; }
    public static string NavigateToTypeDeclaration_Text { get; }
    public static string TypeOfSymbol_Caption { get; }
    public static string _WasNotFound_Text { get; }
    public static string CodeDependentOn_Ellipsis___Text { get; }
    public static string CodeDependentOnProject__Text { get; }
    public static string CodeDependentOnAssembly__Text { get; }
    public static string CodeDependentOn__Text { get; }
    public static string EnterMemberName_Text { get; }
    public static string INcludeBaseMembers_Text { get; }
    public static string NoMembersFoundInThisFile_Text { get; }
    public static string FindText_Text { get; }
    public static string SearchingPleaseWait_Text { get; }
    public static string ExactMatches_Text { get; }
    public static string NoTermsFoundInSolution_Text { get; }
    public static string INcludeMembersFromRelatedFiles_Text { get; }
    public static string NoTypeMembersFoundInThisFile_Text { get; }
    public static string SomeItemsMayBeMissingAtTheMoment_Text { get; }
    public static string RecentFiles_Text { get; }
    public static string GoToFile_Caption { get; }
    public static string SelectFile_Text { get; }
    public static string ThereAreNoRelatedFiles_Text { get; }
    public static string RelatedFiles_Caption { get; }
    public static string _NotFoundInThisFile_Text { get; }
    public static string PressEscapeToRemoveHighlighting_Text { get; }
    public static string EXtensionMethods_Text { get; }
    public static string NoExtensionMethodsFoundForThisType_Text { get; }
    public static string ControlFlowTarget_Text { get; }
    public static string FunctionExitS_Text { get; }
    public static string ControlFlowNeverLeavesTheFunction_Text { get; }
    public static string NavigateToSolutionExplorer_Caption { get; }
    public static string SolutionExplorer_Caption { get; }
    public static string ShowSolutionExplorer_Text { get; }
    public static string ConflictDeclarationS_Text { get; }
    public static string SelectDeclaration_Caption { get; }
    public static string _FromAssembly_WhichIsNotReferencedIn_Text { get; }
    public static string _Assembly_IsNotReferenced_Text { get; }
    public static string BaseSymbols_Caption { get; }
    public static string DerivedSymbols_Caption { get; }
    public static string ReferencedCodeScope_Text { get; }
    public static string ReferencedCode_Caption { get; }
    public static string CollectingSymbolsMatching__Text { get; }
    public static string ShowInFindResults_Text { get; }
    public static string ShowUsages_Text { get; }
    public static string ScanningForTargets_Text { get; }
    public static string FindUsages_Caption { get; }
    public static string Stop_Text { get; }
    public static string SeachingForNextUsage_Text { get; }
    public static string NavigateTo_Ellipsis_Text { get; }
    public static string GoToModuleReferenceDeclaration_Caption { get; }
    public static string Declaration_Caption { get; }
    public static string CannotExecuteTheGoToActionBecauseThere_Text { get; }
    public static string Item_Default_DeclaredElement_Kind_Text { get; }
    public static string _Matching__Text { get; }
    public static string Text_Find_Result_Kind_Text { get; }
    public static string Found___Caption { get; }
    public static string _Fuzzy_TreeSection_Title_Text { get; }
    public static string Implementation_Caption { get; }
    public static string FuzzyResults_Caption { get; }
    public static string SearchFor_MatchCase_Text { get; }
    public static string SearchFor__Text { get; }
    public static string FindInFile_Caption { get; }
    public static string Found__PressEscapeToRemoveHighlighting_Text { get; }
    public static string Found__PressEscapeToRemoveHighlighting_Plural { get; }
    public static string Found__And__PressEscapeToRemoveHighlighting_Plural { get; }
    public static string Declarations_Text { get; }
    public static string Declaration_Text { get; }
    public static string UsagesNotFound_Text { get; }
    public static string ThisIsTheOnlyUsage_Text { get; }
    public static string File_Goto_Target_Text { get; }
    public static string Symbol_Goto_Target_Text { get; }
    public static string NoDeclarationsFound_Text { get; }
    public static string ObjectExtensionMethod_FindResult_Kind_Plural { get; }
    public static string ExtensionMethod_FindResult_Kind__Plural { get; }
    public static string Reference_FindResult_Kind_Plural { get; }
    public static string NoExternalReferencesFound_Text { get; }
    public static string InReferencedLibraries_Text { get; }
    public static string InDocumentation_Text { get; }
    public static string InSolution_Text { get; }
    public static string Found____Text { get; }
    public static string Displaying_Of____Text { get; }
    public static string ReturnToUsageOf__Text { get; }
    public static string DeclarationOf__Text { get; }
    public static string LookForAdditionalDeclarations_Text { get; }
    public static string GotoNextDeclarationOf_1__Text { get; }
    public static string GotoNextDeclarationOf____Text { get; }
    public static string GotoNextUsageOf__Text { get; }
    public static string GotoNextUsageOf___All__Text { get; }
    public static string GotoNextUsageOf____Text { get; }
    public static string SearchScope_Solution_Text { get; }
    public static string SearchScope_CurrentProject_Text { get; }
    public static string SearchScope_CurrentFile_Text { get; }
    public static string Solution_Text { get; }
    public static string SearchDomainForGlobalUsing_Text { get; }
    public static string CurrentFile_Text { get; }
    public static string CurrentMethod_Text { get; }
    public static string GoToFile_Text { get; }
    public static string FindNullableWarningSuppressionsContextAction_Description { get; }
    public static string FindNullableWarningSuppressionsContextAction_Name { get; }
    public static string ModulesReferencedOn__Text { get; }
    public static string In_ReferencedModule_Text { get; }
    public static string InReferencedModules_AndOthers_Text { get; }
    public static string CodeOf_DependentOn__Text { get; }
    public static string CodeOf_DependentOn___Text { get; }
    public static string CodeOf_DependentOn__AndOthers_Text { get; }
    public static string InvalidBreakpoint_Text { get; }
    public static string FileIsMissing_Text { get; }
    private static Strings();
    public static JetResourceManager get_ResourceManager();
    public static string Choice(string format, Object[] args);
    public static string get_ClickForNextUsage_Text();
    public static string get_NUsagesHighlighted_Text();
    public static string get_BaseSymbolsActionText();
    public static string get_CancelHighlighingUsagesActionText();
    public static string get_CommandPromptActionText();
    public static string get_ConflictingDeclarationSActionText();
    public static string get_ConsumingAPIsActionText();
    public static string get_ContainingDeclarationActionText();
    public static string get_ControlFlowTargetActionText();
    public static string get_DerivedSymbolsActionText();
    public static string get_ExposingAPIsActionText();
    public static string get_ExtensionMethodsActionText();
    public static string get_FilterUsagesActionGroupText();
    public static string get_FindDependenciesActionGroupText();
    public static string get_FindDependentCodeActionGroupText();
    public static string get_FindDependentCodeActionText();
    public static string get_FindDependentCodeAllProjectsActionText();
    public static string get_FindReferencedCodeViewSettingsSettingDescription();
    public static string get_FindResultEnableBreakpointActionText();
    public static string get_FindResultsActionText();
    public static string get_FindResultToggleBreakpointActionText();
    public static string get_FindUsagesActionGroupText();
    public static string get_FindUsagesActionText();
    public static string get_FindUsagesAdvancedActionText();
    public static string get_SearchProperties_Caption();
    public static string get_Find_Text();
    public static string get_Search_Text();
    public static string get__Implementing__Text();
    public static string get__Overriding__Text();
    public static string get_UsagesOf_derived__Text();
    public static string get_Include_overloading__Text();
    public static string get_Include_overloading_Text();
    public static string get__ExtendingInterfaces_Text();
    public static string get__Implementations_Text();
    public static string get__DelegateTargets_Text();
    public static string get_UsagesOf_members_Text();
    public static string get__Hiding_Text();
    public static string get__DynamicReferences_Text();
    public static string get__TextualOccurrences_Text();
    public static string get_UsagesOf_derived_Text();
    public static string get__Usages_Text();
    public static string get__DerivedTypes_Text();
    public static string get_Scope_Text();
    public static string get_FunctionExitSActionText();
    public static string get_GeneralOptionPageTitle();
    public static string get_GenericSubstitutionsActionText();
    public static string get_GoToByNameActionGroupText();
    public static string get_GoToDeclarationActionText();
    public static string get_GoToImplementationActionText();
    public static string get_GroupBySettingDescription();
    public static string get_HighlightUsagesInFileActionText();
    public static string get_ImplementingMembersActionText();
    public static string get_IterateUsagesActionText();
    public static string get_MemberOverloadsActionText();
    public static string get_MergeOccurrencesOnTheSameLineActionText();
    public static string get_NavigateBackwardActionText();
    public static string get_NavigateForwardActionText();
    public static string get_NavigateToActionText();
    public static string get_NextMemberActionText();
    public static string get_ParameterDeclarationActionText();
    public static string get_PreviousEditActionText();
    public static string get_PreviousMemberActionText();
    public static string get_RecentEditsActionText();
    public static string get_ReferencedCodeActionText();
    public static string get_RefreshActionText();
    public static string get_RelatedFilesActionText();
    public static string get_RemoveBreakpointActionText();
    public static string get_SearchNavigationOptionPageTitle();
    public static string get_SelectContainingDeclarationActionText();
    public static string get_SetBreakpointActionText();
    public static string get_SetTracepointActionText();
    public static string get_ShowAllUsagesActionText();
    public static string get_ShowAttributeUsagesActionText();
    public static string get_ShowBaseMethodCallsActionText();
    public static string get_ShowIgnoredUsagesActionText();
    public static string get_ShowInterfaceQualificationsActionText();
    public static string get_ShowInvocationUsagesActionText();
    public static string get_ShowNameCapturesActionText();
    public static string get_ShowOnlyReadUsagesActionText();
    public static string get_ShowOnlyWriteUsagesActionText();
    public static string get_ShowOtherUsagesActionText();
    public static string get_ShowReadUsagesActionText();
    public static string get_ShowUnitTestUsagesActionText();
    public static string get_ShowUsagesActionText();
    public static string get_ShowUsagesInDocumentationActionText();
    public static string get_ShowVBHandlesClausesActionText();
    public static string get_ShowWriteUsagesActionText();
    public static string get_StandardOccurrenceBrowserActionsActionGroupText();
    public static string get_ToggleKindGroupingActionText();
    public static string get_TypeOfSymbolActionText();
    public static string get_ViewInAssemblyExplorerActionText();
    public static string get_WindowsExplorerActionText();
    public static string get_LocateInSolutionOrAssemblyExplorer_ActionName();
    public static string get_CantLocateInSolutionOrAssemblyExplorer_TooltipMessage();
    public static string get_LocateInAssemblyExplorer_ActionName();
    public static string get_LocateInSolutionExplorer_ActionName();
    public static string get_General_Header_Text();
    public static string get_EnableSearchEverywhere_Text();
    public static string get_IntegrateGoToTextIntoSearchEverywhere_Text();
    public static string get_FuzzyResultsInGoToText_Text();
    public static string get_RememberLastSearch_Text();
    public static string get_RememberLastInputForSearchCommandsAnd_Text();
    public static string get_RememberExtendedSearchPreferences_Text();
    public static string get_RememberTheIncludeLibraryTypesInclude_Text();
    public static string get_GoToUsageIfThereIsOnly_oneResultNavigate_Text();
    public static string get_GoToBaseInheritorIfThereIsOnlyOneResult_Text();
    public static string get_Rich_mouseNavigationInTheEditor_Text();
    public static string get_UseCtrlAltClickToGoToImplementations_Text();
    public static string get_UseMiddleClickToGoToDeclaration_Text();
    public static string get_UseCtrlMiddleClickToPeekUsages_Text();
    public static string get_UseCtrlShiftClickToPeekDeclaration_Text();
    public static string get_UseCtrlAltMiddleClickToPeekImplementations_Text();
    public static string get_OpenNewFilesIn_previewTabFromEverywhere_BoolOption_Text();
    public static string get_SmartGoTo_DeclarationBehavior_ComboEnum_Caption();
    public static string get_FindGenericTypeUsagesBehaviour_ComboEnum_Caption();
    public static string get_FindResultsWindow_Header_Text();
    public static string get_E_xpandSearchResultsTreeByDefault_Text();
    public static string get_MergeOccurrencesOnASingleLine_Text();
    public static string get_OpenPreviewTabForSelectedItem_Text();
    public static string get_ElementsToSkip_Header_Text();
    public static string get_HereYouCanSpecifyFilesAndFoldersThat_Text_Text();
    public static string get_ToEditTheListOfSkippedFilesAndFolders_Text();
    public static string get_MouseNavigation_Header_Text();
    public static string get_UseReSharperNavigationHistoryForMouse_Text();
    public static string get_DisableGroupingByKind_Text();
    public static string get_EnableGroupingByKind_Text();
    public static string get_RecentFiles_Caption();
    public static string get_RecentEdits_Caption();
    public static string get_ThereAreNo__Text();
    public static string get_ScanningFile__Text();
    public static string get_ScanningAnElement_Text();
    public static string get_UsagesOf_FindUsagesTitle_Text();
    public static string get_ConsumingAPIsFor__Text();
    public static string get_ExposingAPIsFor__Text();
    public static string get_ExtensionMethodsFor__Text();
    public static string get_ExtensionMethodsForUnknownType_Text();
    public static string get_EmptySearch_Text();
    public static string get_ReferencedCode_Text();
    public static string get_ReferencedCodeIn__Text();
    public static string get_ReferencedCodeIn_U2026_Text();
    public static string get_CannotEvaluate_ThereAreTooManyReferences_Text();
    public static string get_Usages_Text();
    public static string get_UsagesOf__Text();
    public static string get_SubstitutionsOfTypeParameter_Text();
    public static string get_SubstitutionsOf__Text();
    public static string get_CommandPrompt_Text();
    public static string get_WindowsExplorer_Text();
    public static string get_ConsuminGAPIs_Text();
    public static string get_ConsumingAPIsAreNotAvailableForStatic_ToolTip();
    public static string get_NoConsumingAPIsFound_ToolTip();
    public static string get_FindInFile_Text();
    public static string get_FindIn_Project_Text();
    public static string get_FindIn_Solution_Text();
    public static string get_FindIn__Text();
    public static string get_NullableWarningSuppressionExpressions_Text();
    public static string get_Found1NullableWarningSuppression_Text();
    public static string get_Found_NullableWarningSuppressions_Text();
    public static string get_FindNullableWarningSuppressions_Text();
    public static string get_InvalidElement_Text();
    public static string get_TypesSimilarTo_FindUsagesTitle_Text();
    public static string get_AnonymousFunction_Text();
    public static string get_UnknownExpression_Text();
    public static string get_ReachableExitsOf_FindUsagesTitle_Text();
    public static string get_InvalidUsingDirective_Text();
    public static string get_ReferencesAvailableVia_FindUsagesTitle_Text();
    public static string get_GeneratedClasses_Text();
    public static string get_GeneratedClasses_Caption();
    public static string get_BindingDataContext_Caption();
    public static string get_SameAttributesAs_FindUsagesTitle_Text();
    public static string get_SameTagsAs_FindUsagesTitle_Text();
    public static string get_AnalyzingTargets_Text();
    public static string get_SearchingForQuasiImplementations_Text();
    public static string get_PressCancelToContinueSearchWithoutQuasi_Text();
    public static string get_DoYouWantToFindUsagesOfTheParameter_Text();
    public static string get_ShowUsages_Caption();
    public static string get_NoUsagesFound_Text();
    public static string get_Usages_FindResult_Form_Text();
    public static string get_Usage_FindResult_Form_Text();
    public static string get_Found___Text();
    public static string get_Displaying_Of_Found__Text();
    public static string get_NoGenericSubstitutionsFoundForThisType_Text();
    public static string get_GenericSubstitutions_Text();
    public static string get_ImplementingMembers_Text();
    public static string get_OverridingMembers_Text();
    public static string get_NoImplementationsFoundForThisType_Text();
    public static string get_NavigateTo_Text();
    public static string get_MemberOverloads_Text();
    public static string get_ParameterDeclaration_Text();
    public static string get_NoDeclarationsFoundForThisParameter_Text();
    public static string get_NoSubstitutionFound_Text();
    public static string get_Substitution_Plural();
    public static string get_GenericSubstitution_Text();
    public static string get_ExposingAPIs_Text();
    public static string get_NoExposingAPIsFound_ToolTip();
    public static string get_ExposingAPIsAreNotAvailableForStatic_ToolTip();
    public static string get_NoExposingAPIsFound_Text();
    public static string get_ExposingAPIs_FindResult_Form_Text();
    public static string get_NavigateToTypeDeclaration_Text();
    public static string get_TypeOfSymbol_Caption();
    public static string get__WasNotFound_Text();
    public static string get_CodeDependentOn_Ellipsis___Text();
    public static string get_CodeDependentOnProject__Text();
    public static string get_CodeDependentOnAssembly__Text();
    public static string get_CodeDependentOn__Text();
    public static string get_EnterMemberName_Text();
    public static string get_INcludeBaseMembers_Text();
    public static string get_NoMembersFoundInThisFile_Text();
    public static string get_FindText_Text();
    public static string get_SearchingPleaseWait_Text();
    public static string get_ExactMatches_Text();
    public static string get_NoTermsFoundInSolution_Text();
    public static string get_INcludeMembersFromRelatedFiles_Text();
    public static string get_NoTypeMembersFoundInThisFile_Text();
    public static string get_SomeItemsMayBeMissingAtTheMoment_Text();
    public static string get_RecentFiles_Text();
    public static string get_GoToFile_Caption();
    public static string get_SelectFile_Text();
    public static string get_ThereAreNoRelatedFiles_Text();
    public static string get_RelatedFiles_Caption();
    public static string get__NotFoundInThisFile_Text();
    public static string get_PressEscapeToRemoveHighlighting_Text();
    public static string get_EXtensionMethods_Text();
    public static string get_NoExtensionMethodsFoundForThisType_Text();
    public static string get_ControlFlowTarget_Text();
    public static string get_FunctionExitS_Text();
    public static string get_ControlFlowNeverLeavesTheFunction_Text();
    public static string get_NavigateToSolutionExplorer_Caption();
    public static string get_SolutionExplorer_Caption();
    public static string get_ShowSolutionExplorer_Text();
    public static string get_ConflictDeclarationS_Text();
    public static string get_SelectDeclaration_Caption();
    public static string get__FromAssembly_WhichIsNotReferencedIn_Text();
    public static string get__Assembly_IsNotReferenced_Text();
    public static string get_BaseSymbols_Caption();
    public static string get_DerivedSymbols_Caption();
    public static string get_ReferencedCodeScope_Text();
    public static string get_ReferencedCode_Caption();
    public static string get_CollectingSymbolsMatching__Text();
    public static string get_ShowInFindResults_Text();
    public static string get_ShowUsages_Text();
    public static string get_ScanningForTargets_Text();
    public static string get_FindUsages_Caption();
    public static string get_Stop_Text();
    public static string get_SeachingForNextUsage_Text();
    public static string get_NavigateTo_Ellipsis_Text();
    public static string get_GoToModuleReferenceDeclaration_Caption();
    public static string get_Declaration_Caption();
    public static string get_CannotExecuteTheGoToActionBecauseThere_Text();
    public static string get_Item_Default_DeclaredElement_Kind_Text();
    public static string get__Matching__Text();
    public static string get_Text_Find_Result_Kind_Text();
    public static string get_Found___Caption();
    public static string get__Fuzzy_TreeSection_Title_Text();
    public static string get_Implementation_Caption();
    public static string get_FuzzyResults_Caption();
    public static string get_SearchFor_MatchCase_Text();
    public static string get_SearchFor__Text();
    public static string get_FindInFile_Caption();
    public static string get_Found__PressEscapeToRemoveHighlighting_Text();
    public static string get_Found__PressEscapeToRemoveHighlighting_Plural();
    public static string get_Found__And__PressEscapeToRemoveHighlighting_Plural();
    public static string get_Declarations_Text();
    public static string get_Declaration_Text();
    public static string get_UsagesNotFound_Text();
    public static string get_ThisIsTheOnlyUsage_Text();
    public static string get_File_Goto_Target_Text();
    public static string get_Symbol_Goto_Target_Text();
    public static string get_NoDeclarationsFound_Text();
    public static string get_ObjectExtensionMethod_FindResult_Kind_Plural();
    public static string get_ExtensionMethod_FindResult_Kind__Plural();
    public static string get_Reference_FindResult_Kind_Plural();
    public static string get_NoExternalReferencesFound_Text();
    public static string get_InReferencedLibraries_Text();
    public static string get_InDocumentation_Text();
    public static string get_InSolution_Text();
    public static string get_Found____Text();
    public static string get_Displaying_Of____Text();
    public static string get_ReturnToUsageOf__Text();
    public static string get_DeclarationOf__Text();
    public static string get_LookForAdditionalDeclarations_Text();
    public static string get_GotoNextDeclarationOf_1__Text();
    public static string get_GotoNextDeclarationOf____Text();
    public static string get_GotoNextUsageOf__Text();
    public static string get_GotoNextUsageOf___All__Text();
    public static string get_GotoNextUsageOf____Text();
    public static string get_SearchScope_Solution_Text();
    public static string get_SearchScope_CurrentProject_Text();
    public static string get_SearchScope_CurrentFile_Text();
    public static string get_Solution_Text();
    public static string get_SearchDomainForGlobalUsing_Text();
    public static string get_CurrentFile_Text();
    public static string get_CurrentMethod_Text();
    public static string get_GoToFile_Text();
    public static string get_FindNullableWarningSuppressionsContextAction_Description();
    public static string get_FindNullableWarningSuppressionsContextAction_Name();
    public static string get_ModulesReferencedOn__Text();
    public static string get_In_ReferencedModule_Text();
    public static string get_InReferencedModules_AndOthers_Text();
    public static string get_CodeOf_DependentOn__Text();
    public static string get_CodeOf_DependentOn___Text();
    public static string get_CodeOf_DependentOn__AndOthers_Text();
    public static string get_InvalidBreakpoint_Text();
    public static string get_FileIsMissing_Text();
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Features.Navigation.Utils.ElementInDocumentUtils : object {
    [ExtensionAttribute]
public static DocumentRange GetElementTextRange(DocumentOffset documentOffset, ISolution solution);
    private static DocumentRange GetRangeFromElement(ISolution solution, DocumentOffset documentOffset);
    private static DocumentRange GetRangeFromReference(ISolution solution, DocumentOffset documentOffset);
    private static DocumentRange GetRangeFromDeclaration(ISolution solution, DocumentOffset documentOffset);
}
public class JetBrains.ReSharper.Features.Navigation.Utils.NavigationRequirement : CurrentPsiFileRequirementNoCaches {
    public string Description { get; }
    private NavigationRequirement(ISolution solution, IDataContext dataContext);
    private IEnumerable`1<IReferenceImpl> GetReferences();
    public virtual string get_Description();
    protected virtual bool IsReadyWhenPsiComplete();
    protected virtual void GetReadyWhenPsiComplete();
    public static IActionRequirement FromDataContext(IDataContext dataContext);
    private static bool IsCppFile(IDataContext dataContext);
    private static bool HasCaretOffset(IDataContext dataContext);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
