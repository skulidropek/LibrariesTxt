[GeneratorElementProviderAttribute("EventSubscriptions", "JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspEventsProvider : GeneratorEventsProviderBase`1<AspGeneratorContext> {
    [NotNullAttribute]
private ILanguageManager myLanguageManager;
    public AspEventsProvider(ILanguageManager languageManager);
    public virtual void Populate(AspGeneratorContext context);
    [CanBeNullAttribute]
private static IEvent FindEventSubscription(ITagAttribute attribute);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.KnownLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspEventSubscriptionKnownLanguageService : object {
    public virtual void FilterEventsLanguageCanHandle(AspGeneratorContext context, bool autoEventWireup, List`1<DeclaredElementInstance`1<IEvent>> events);
    private static void RemovePageLevelSubscribedEvents(AspGeneratorContext context, ITypeElement codebehindType, List`1<DeclaredElementInstance`1<IEvent>> instanceEvents);
}
[GeneratorBuilderAttribute("EventSubscriptions", "JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspEventSubscriptionsBuilder : GeneratorBuilderBase`1<AspGeneratorContext> {
    public double Priority { get; }
    public virtual double get_Priority();
    protected virtual void BuildOptions(AspGeneratorContext context, ICollection`1<IGeneratorOption> options);
    [ObsoleteAttribute("Please, override overload with progress indicator")]
protected virtual void Process(AspGeneratorContext context);
    private static bool IsEmptySubscriptionAttribute(ITagAttribute attribute, IEvent targetEvent);
}
public abstract class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspEventSubscriptionsCodeBehindBuilderBase`1 : CodeBehindGeneratorBuilderBase`2<AspGeneratorContext, TCodeBehindContext> {
    public abstract virtual void Process(AspGeneratorContext context, TCodeBehindContext codeBehindContext, AccessRights accessRights, IProgressIndicator progress);
    [CanBeNullAttribute]
protected abstract virtual TCodeBehindContext CodeBehindContextFromDeclaration(AspGeneratorContext context, IDeclaration declaration);
    protected virtual void EmitExplicitSubscriptions(AspGeneratorContext context, TCodeBehindContext codeBehindContext);
    protected virtual TCodeBehindContext CreateCodeBehindContext(AspGeneratorContext context);
    protected virtual void Process(AspGeneratorContext context, IProgressIndicator progress);
    public virtual void ProcessWithCodebehind(AspGeneratorContext context, TCodeBehindContext codeBehindContext, IProgressIndicator progress);
}
[GeneratorBuilderAttribute("EventSubscriptions", "JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspEventSubscriptionsNamesBuilder : GenerateEventSubscriptionsBuilderBase`1<AspGeneratorContext> {
    protected virtual void Process(AspGeneratorContext context, IProgressIndicator progress);
    protected virtual string SuggestEventHandlerPrefix(AspGeneratorContext context);
}
[ActionAttribute("Generate.ASPContentForPlaceholders", "JetBrains.ReSharper.Features.Web.Resources.Strings", "GenerateContentForPlaceholdersActionText")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspGenerateContentGenerateAction : GenerateActionBase`1<AspGenerateContentWorkflowProvider> {
    protected RichText Caption { get; }
    protected virtual RichText get_Caption();
}
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspGenerateContentWorkflow : GenerateCodeWorkflowBase {
    public double Order { get; }
    public virtual double get_Order();
}
[GenerateProviderAttribute("16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspGenerateContentWorkflowProvider : object {
    public sealed virtual IEnumerable`1<IGenerateActionWorkflow> CreateWorkflow(IDataContext dataContext);
}
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspGeneratorContext : GeneratorContextBase {
    [CompilerGeneratedAttribute]
private IAspFile <AspFile>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <Anchor>k__BackingField;
    [NotNullAttribute]
public IAspFile AspFile { get; }
    public PsiLanguageType Language { get; }
    public PsiLanguageType PresentationLanguage { get; }
    public ITreeNode Root { get; }
    public ITreeNode Anchor { get; public set; }
    public ISolution Solution { get; }
    public IPsiModule PsiModule { get; }
    public AspGeneratorContext(string kind, IAspFile file, ITreeNode anchor);
    [CompilerGeneratedAttribute]
public IAspFile get_AspFile();
    public virtual PsiLanguageType get_Language();
    public virtual PsiLanguageType get_PresentationLanguage();
    public virtual ITreeNode get_Root();
    [CompilerGeneratedAttribute]
public sealed virtual ITreeNode get_Anchor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Anchor(ITreeNode value);
    public virtual ISolution get_Solution();
    public virtual TreeTextRange GetSelectionTreeRange();
    public virtual IPsiModule get_PsiModule();
    public virtual IGeneratorContextPointer CreatePointer();
    [CanBeNullAttribute]
public IAspTag FindAspServerTag(ITypeElement& typeElement);
    [CanBeNullAttribute]
public ITypeElement FindPageByAspDirective(Boolean& autoEventsWireUp);
    public bool IsGlobalAsax();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspGeneratorContextFactory : object {
    public sealed virtual IGeneratorContext TryCreate(string kind, IPsiDocumentRangeView psiDocumentRangeView);
    public sealed virtual IGeneratorContext TryCreate(string kind, ITreeNode targetContext, ITreeNode anchor);
    public sealed virtual IGeneratorContext TryCreate(string kind, IDeclaredElement contextElement);
}
[GeneratorBuilderAttribute("Asp.Masterpage.Content", "JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspMasterpageContentBuilder : GeneratorBuilderBase`1<AspGeneratorContext> {
    private static string COPY_DEFAULT_CONTENT_OPTION_KEY;
    private static HashSet`1<string> ourStripSuffixes;
    private static AspMasterpageContentBuilder();
    protected virtual void BuildOptions(AspGeneratorContext context, ICollection`1<IGeneratorOption> options);
    protected virtual void Process(AspGeneratorContext context, IProgressIndicator progress);
    protected virtual bool IsAvailable(AspGeneratorContext context);
}
[GeneratorElementProviderAttribute("Asp.Masterpage.Content", "JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.AspMasterpageContentProvider : GeneratorProviderBase`1<AspGeneratorContext> {
    public virtual void Populate(AspGeneratorContext context);
}
[GeneratorBuilderAttribute("EventSubscriptions", "JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
internal class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.CSharp.AspCSharpEventSubscriptionsBuilder : AspEventSubscriptionsCodeBehindBuilderBase`1<CSharpGeneratorContext> {
    public double Priority { get; }
    public virtual double get_Priority();
    protected virtual IGeneratorBuilder CreateCodeBehindBuilder();
    protected virtual CSharpGeneratorContext CodeBehindContextFromDeclaration(AspGeneratorContext context, IDeclaration declaration);
    public virtual void Process(AspGeneratorContext context, CSharpGeneratorContext codeBehindContext, AccessRights accessRights, IProgressIndicator progress);
    protected virtual void EmitExplicitSubscriptions(AspGeneratorContext context, CSharpGeneratorContext codeBehindContext);
    [CanBeNullAttribute]
private static IConstructorDeclaration FindDefaultConstructor(CSharpGeneratorContext codeBehindContext);
    private static void EmitEventSubscription(IGeneratorContext context, IBlock block, CSharpElementFactory factory);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.CSharp.ZoneMarker : object {
}
public interface JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.IAspEventSubscriptionLanguageService {
    public abstract virtual void FilterEventsLanguageCanHandle(AspGeneratorContext context, bool autoEventWireup, List`1<DeclaredElementInstance`1<IEvent>> events);
}
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.MasterpageGeneratorElement : GeneratorElementBase {
    [CompilerGeneratedAttribute]
private IHtmlTag <Tag>k__BackingField;
    [NotNullAttribute]
private static JetHashSet`1<string> ourDisplayAttributes;
    [NotNullAttribute]
public IHtmlTag Tag { get; }
    [NotNullAttribute]
private string PlaceholderId { get; }
    public string TestDescriptor { get; }
    public MasterpageGeneratorElement(IHtmlTag tag);
    private static MasterpageGeneratorElement();
    [CompilerGeneratedAttribute]
public IHtmlTag get_Tag();
    public virtual object GetPresentationObject();
    public virtual object GetGroupingObject();
    public virtual bool Matches(string searchText, IdentifierMatcher matcher);
    private string get_PlaceholderId();
    public virtual string get_TestDescriptor();
    public sealed virtual void InitGeneratorPresenter(StructuredPresenter`2<TreeModelNode, IPresentableItem> presenter);
    private static void PresentHtmlTag(IAspTag value, IPresentableItem item, TreeModelNode element, PresentationState state);
    private static void PresentFile(IFile value, IPresentableItem item, TreeModelNode element, PresentationState state);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.VB.VBLanguage", "16")]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.VB.AspEventSubscriptionVBLanguageService : AspEventSubscriptionKnownLanguageService {
    public virtual void FilterEventsLanguageCanHandle(AspGeneratorContext context, bool autoEventWireup, List`1<DeclaredElementInstance`1<IEvent>> events);
}
[GeneratorBuilderAttribute("EventSubscriptions", "JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
internal class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.VB.AspVBEventSubscriptionsBuilder : AspEventSubscriptionsCodeBehindBuilderBase`1<VBGeneratorContext> {
    public double Priority { get; }
    public virtual double get_Priority();
    protected virtual IGeneratorBuilder CreateCodeBehindBuilder();
    protected virtual VBGeneratorContext CodeBehindContextFromDeclaration(AspGeneratorContext context, IDeclaration declaration);
    public virtual void Process(AspGeneratorContext context, VBGeneratorContext codeBehindContext, AccessRights accessRights, IProgressIndicator progress);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.Generate.VB.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Altering.Generate.Asp.ZoneMarker : object {
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.AspAutomaticStrategyOnCharacter : HtmlAutomaticStrategyOnListedCharacters`2<IAspFile, IAspTokenNodeTypes> {
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    private SettingsScalarEntry mySettingsEntry;
    public PsiLanguageType Language { get; }
    public AspAutomaticStrategyOnCharacter(HtmlCodeCompletionManager htmlCodeCompletionManager, ISettingsStore settingsStore);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.AspAutomaticStrategyOnCharacter/<GetStartChars>d__3")]
protected virtual IEnumerable`1<StartChar<IAspFile, IAspTokenNodeTypes>> GetStartChars(IAspTokenNodeTypes tokenNodeTypes);
    protected virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore contextBoundSettingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual PsiLanguageType get_Language();
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.AspCodeCompletionContext : HtmlCodeCompletionContext {
    [CompilerGeneratedAttribute]
private IAspDeclaredElementTypes <AspDeclaredElementTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private ISymbolCache <SymbolCache>k__BackingField;
    [NotNullAttribute]
public IAspDeclaredElementTypes AspDeclaredElementTypes { get; }
    [NotNullAttribute]
public ISymbolCache SymbolCache { get; }
    public string ContextId { get; }
    public AspCodeCompletionContext(CodeCompletionContext context, HtmlReparsedCompletionContext unterminatedContext, TextLookupRanges ranges, IAspDeclaredElementTypes aspDeclaredElementTypes);
    [CompilerGeneratedAttribute]
public IAspDeclaredElementTypes get_AspDeclaredElementTypes();
    [CompilerGeneratedAttribute]
public ISymbolCache get_SymbolCache();
    public virtual string get_ContextId();
    public virtual DeclaredElementLookupItem CreateDeclaredElementLookupItem(string name, IDeclaredElement declaredElement);
    public virtual string GetDisplayNameByDeclaredElement(IDeclaredElement declaredElement);
}
[IntellisensePartAttribute("0")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.AspCodeCompletionContextProvider : HtmlCodeCompletionContextProvider {
    private IAspDeclaredElementTypes myAspDeclaredElementTypes;
    public AspCodeCompletionContextProvider(HtmlCodeCompletionManager htmlCodeCompletionManager, IHtmlDeclaredElementTypes htmlCache, IAspDeclaredElementTypes aspDeclaredElementTypes);
    public virtual bool IsApplicable(CodeCompletionContext context);
    protected virtual ISpecificCodeCompletionContext GetSpecificContext(CodeCompletionContext context, TextLookupRanges ranges, HtmlReparsedCompletionContext unterminatedContext);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.AspCompletingCharactersProvider : CompletingCharsProviderWithSetting`2<AspCodeCompletionContext, AspCompletingCharactersSettingsKey> {
    protected virtual bool IsApplicable(AspCodeCompletionContext context);
    protected virtual CompletionAction IsCharacterAcceptable(char c, AspCodeCompletionContext context, IContextBoundSettingsStore settingsStore);
    protected virtual Expression`1<Func`2<AspCompletingCharactersSettingsKey, bool>> GetCompleteOnSpaceSettingKey();
    protected virtual Expression`1<Func`2<AspCompletingCharactersSettingsKey, string>> GetNonCompletingCharactersSettingKey();
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.IntelliSenseCompletingCharactersSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ASPNETSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.AspCompletingCharactersSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "CompleteOnSpaceSettingDescription")]
public bool CompleteOnSpace;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "NonCompletingCharactersSettingDescription")]
public string NonCompletingCharacters;
}
[FlagsAttribute]
public enum JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.AspLookupItemRelevance : Enum {
    public ulong value__;
    public static AspLookupItemRelevance NewMethodRelevant;
    public static AspLookupItemRelevance Item;
    public static AspLookupItemRelevance NewMethodIrrelevant;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.CSharp.Rules.MvcActionCSharpTransformationRule : MvcActionTransformationRule`1<CSharpCodeCompletionContext> {
    protected virtual bool IsAvailable(CSharpCodeCompletionContext context);
    protected virtual void TransformItems(CSharpCodeCompletionContext context, IItemsCollector collector);
    protected virtual void DecorateItems(CSharpCodeCompletionContext context, IReadOnlyCollection`1<ILookupItem> items);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.CSharp.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.LookupItems.AspDeclaredElementLookupItem : HtmlDeclaredElementLookupItem {
    protected Casing Casing { get; }
    public AspDeclaredElementLookupItem(DeclaredElementInstance`1<IDeclaredElement> declaredElement, string name, string displayName, AspCodeCompletionContext context, PsiLanguageType languageType, TextLookupRanges ranges);
    protected virtual Casing get_Casing();
    protected virtual void FixInsertedText(IReference reference);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.LookupItems.AspTagNameLookupItem : HtmlTagNameLookupItem {
    private string myPathString;
    protected Casing Casing { get; }
    protected bool SkipBindReference { get; }
    public AspTagNameLookupItem(DeclaredElementInstance`1<IDeclaredElement> declaredElement, string name, string displayName, AspCodeCompletionContext context, PsiLanguageType languageType, TextLookupRanges ranges);
    private void SetPathString(DeclaredElementInstance`1<IDeclaredElement> declaredElement);
    protected virtual void DecorateDisplayName(RichText displayName, DeclaredElementInstance preferredDeclaredElement);
    protected virtual Casing get_Casing();
    protected virtual bool get_SkipBindReference();
    protected virtual void FixInsertedText(IReference reference);
    private void FixInsertedTextFromHtml(IReference reference);
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.LookupItems.TypeKeywordLookupItem : TextLookupItem {
    private PsiIconManager myPsiIconManager;
    public IconId Image { get; }
    public TypeKeywordLookupItem(string text, TextLookupRanges ranges, PsiIconManager psiIconManager);
    public virtual IconId get_Image();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.AspItemsProviderImportCompletion : ItemsProviderOfSpecificContext`1<AspCodeCompletionContext> {
    protected virtual bool IsAvailable(AspCodeCompletionContext context);
    private DeclaredElementLookupItem CreateLookupItem(string name, IDeclaredElement declaredElement, IHtmlImportCompletableReference reference, AspCodeCompletionContext context);
    protected virtual bool AddLookupItems(AspCodeCompletionContext context, IItemsCollector collector);
    private void GetLookupItemsFromSymbolTable(ISymbolTable symbolTable, IItemsCollector collector, AspCodeCompletionContext context);
    private void CollectElement(string name, IDeclaredElement declaredElement, AspCodeCompletionContext context, IItemsCollector collector);
    private IdentifierMatcher GetIdentifierMatcher(CodeCompletionContext context, TextLookupRanges ranges);
    private ISymbolTable GetCompletionSymbolTable(IHtmlImportCompletableReference reference, AspCodeCompletionContext context);
    private static ISymbolTable GetCompletionSymbolTable(IHtmlImportTypeCompletableReference reference, AspCodeCompletionContext context);
    private static ISymbolFilter[] GetTypeFilters(IHtmlImportCompletableReference reference);
    [NotNullAttribute]
private static ISymbolTable GetCompletionSymbolTable(IFileReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.AspNewMethodItemsProvider : ItemsProviderOfSpecificContext`1<AspCodeCompletionContext> {
    protected virtual bool IsAvailable(AspCodeCompletionContext context);
    protected virtual bool AddLookupItems(AspCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.AspReferencedItemsProvider : HtmlReferencedItemsProvider {
    public AspReferencedItemsProvider(IHtmlTokenNodeTypes tokenNodeTypes, HtmlSvgSchemeComponent htmlSvgSchemeComponent);
    protected virtual IEnumerable`1<string> GetAttributesByImportance(IReference qualifier);
    protected virtual ISymbolTable GetSymbolTable(HtmlCodeCompletionContext context, ImportantNames smartNames);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.AspRelevanceRule : ItemsProviderOfSpecificContext`1<AspCodeCompletionContext> {
    public bool IsFinal { get; }
    public virtual bool get_IsFinal();
    protected virtual bool IsAvailable(AspCodeCompletionContext context);
    protected virtual void TransformItems(AspCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.AspSimpleTypeItemsProvider : ItemsProviderOfSpecificContext`1<AspCodeCompletionContext> {
    protected virtual bool IsAvailable(AspCodeCompletionContext context);
    protected virtual bool AddLookupItems(AspCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.AspVisibilityRule : ItemsProviderOfSpecificContext`1<AspCodeCompletionContext> {
    protected virtual bool IsAvailable(AspCodeCompletionContext context);
    protected virtual void TransformItems(AspCodeCompletionContext context, IItemsCollector collector);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.MvcActionTransformationRule`1 : ItemsProviderOfSpecificContext`1<TContext> {
    protected virtual AutocompletionBehaviour GetAutocompletionBehaviour(TContext specificContext);
    protected bool IsApplicable(IReference reference);
    protected void Transform(IReference reference, IItemsCollector collector);
    protected ICollection`1<ILookupItem> Decorate(IReference reference, IEnumerable`1<ILookupItem> items);
    [NotNullAttribute]
private static IEnumerable`1<ILookupItem> GetLookupItems(IEnumerable`1<ILookupItem> items);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.AutopopupEnabledSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ASPNETSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Settings.AspAutopopupEnabledSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "AfterAndSettingDescription")]
public AutopopupType OnMinusAndColon;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.VB.VBLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.VB.MvcActionVBTransformationRule : MvcActionTransformationRule`1<VBCodeCompletionContextBase> {
    protected virtual bool IsAvailable(VBCodeCompletionContextBase context);
    protected virtual void TransformItems(VBCodeCompletionContextBase context, IItemsCollector collector);
    protected virtual void DecorateItems(VBCodeCompletionContextBase context, IReadOnlyCollection`1<ILookupItem> items);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.VB.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxBasicCodeCompletionItemsProvider : AsxxCodeCompletionItemsProviderBase`1<IAsxxCompletableReference> {
    protected virtual bool IsAvailable(AsxxCodeCompletionContext context);
    protected virtual ISymbolTable GetCompletionSymbolTable(IAsxxCompletableReference reference, AsxxCodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxCodeCompletionContext : SpecificCodeCompletionContext {
    public AsxxReparsedCompletionContext UnterminatedContext;
    public TextLookupRanges Ranges;
    [CanBeNullAttribute]
public IReference Reference { get; }
    [CanBeNullAttribute]
public ITreeNode TreeNode { get; }
    public string ContextId { get; }
    public AsxxCodeCompletionContext(CodeCompletionContext context, AsxxReparsedCompletionContext unterminatedContext, TextLookupRanges ranges);
    public IReference get_Reference();
    public ITreeNode get_TreeNode();
    public virtual string get_ContextId();
}
[IntellisensePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxCodeCompletionContextProvider : CodeCompletionContextProviderBase {
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxCodeCompletionItemsProviderBase`1 : ItemsProviderWithSymbolTable`3<AsxxCodeCompletionContext, T, IAsxxFile> {
    protected virtual T GetReference(AsxxCodeCompletionContext context);
    protected virtual TextLookupRanges EvaluateRanges(AsxxCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxCodeCompletionRangesProvider : ItemsProviderOfSpecificContext`1<AsxxCodeCompletionContext> {
    protected virtual TextLookupRanges GetDefaultRanges(AsxxCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxImportCompletionItemsProvider : AsxxCodeCompletionItemsProviderBase`1<IAsxxImportCompletableReference> {
    protected virtual bool IsAvailable(AsxxCodeCompletionContext context);
    protected virtual ISymbolTable GetCompletionSymbolTable(IAsxxImportCompletableReference reference, AsxxCodeCompletionContext context);
    private ISymbolTable GetCompletionSymbolTable(IAsxxImportTypeCompletableReference reference);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxReparsedCompletionContext : ReparsedCodeCompletionContext {
    public AsxxReparsedCompletionContext(IFile file, TreeTextRange range, string newText);
    protected virtual IReparseContext GetReparseContext(IFile file, TreeTextRange range);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.AsxxSmartCodeCompletionItemsProvider : AsxxCodeCompletionItemsProviderBase`1<IAsxxSmartCompletableReference> {
    protected virtual bool IsAvailable(AsxxCodeCompletionContext context);
    protected virtual ISymbolTable GetCompletionSymbolTable(IAsxxSmartCompletableReference reference, AsxxCodeCompletionContext context);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asxx.ZoneMarker : object {
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Angular2.CssInAngularHtmlCompletionContextProvider : CodeCompletionContextProviderBase {
    private CssCodeCompletionManager myCssCodeCompletionManager;
    public CssInAngularHtmlCompletionContextProvider(HtmlCodeCompletionManager htmlCodeCompletionManager, CssCodeCompletionManager cssCodeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
    public static ISpecificCodeCompletionContext GetSpecificContext(CodeCompletionContext context, ReparsedCodeCompletionContext unterminatedContext);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Angular2Html.Angular2HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Angular2.CssItemsProviderForAngular2Html : ItemsProviderOfSpecificContext`1<CssCodeCompletionContext> {
    protected virtual bool AddLookupItems(CssCodeCompletionContext context, IItemsCollector collector);
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Angular2.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssCodeCompletionContext : SpecificCodeCompletionContext {
    private PsiLanguageType myLanguage;
    private string myName;
    [CompilerGeneratedAttribute]
private TextLookupRanges <ElementRanges>k__BackingField;
    [CompilerGeneratedAttribute]
private TextLookupRanges <ReferenceRanges>k__BackingField;
    [CompilerGeneratedAttribute]
private ReparsedCodeCompletionContext <UnterminatedContext>k__BackingField;
    public PsiLanguageType Language { get; }
    public TextLookupRanges ElementRanges { get; public set; }
    public TextLookupRanges ReferenceRanges { get; public set; }
    public ReparsedCodeCompletionContext UnterminatedContext { get; public set; }
    public string ContextId { get; }
    public CssCodeCompletionContext(CodeCompletionContext context, TextLookupRanges referenceRanges, TextLookupRanges elementRanges, ReparsedCodeCompletionContext unterminatedContext, PsiLanguageType language);
    public virtual PsiLanguageType get_Language();
    [CompilerGeneratedAttribute]
public TextLookupRanges get_ElementRanges();
    [CompilerGeneratedAttribute]
public void set_ElementRanges(TextLookupRanges value);
    [CompilerGeneratedAttribute]
public TextLookupRanges get_ReferenceRanges();
    [CompilerGeneratedAttribute]
public void set_ReferenceRanges(TextLookupRanges value);
    [CompilerGeneratedAttribute]
public ReparsedCodeCompletionContext get_UnterminatedContext();
    [CompilerGeneratedAttribute]
public void set_UnterminatedContext(ReparsedCodeCompletionContext value);
    public virtual string get_ContextId();
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssCodeCompletionContextProviderWithReparse : CodeCompletionContextProviderBase {
    private CssCodeCompletionManager myCssCodeCompletionManager;
    public CssCodeCompletionContextProviderWithReparse(CssCodeCompletionManager cssCodeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
    public static ISpecificCodeCompletionContext GetSpecificContext(CodeCompletionContext context, ReparsedCodeCompletionContext unterminatedContext, PsiLanguageType customLanguageType);
}
internal static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssCodeCompletionHelper : object {
    [NotNullAttribute]
public static ICollection`1<ICssPropertyValueExpression> GetCssColorExpressions(IFile file);
    [NotNullAttribute]
public static string GetHexName(JetRgbaColor color);
    [NotNullAttribute]
public static string ToHexRgb(JetRgbaColor color);
    [NotNullAttribute]
public static string ToHexArgb(JetRgbaColor color);
    [NotNullAttribute]
public static string ToShortHexName(string hexName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssCompletingCharactersProvider : CompletingCharsProviderWithSetting`2<CssCodeCompletionContext, CssCompletingCharactersSettingsKey> {
    protected virtual Expression`1<Func`2<CssCompletingCharactersSettingsKey, bool>> GetCompleteOnSpaceSettingKey();
    protected virtual Expression`1<Func`2<CssCompletingCharactersSettingsKey, string>> GetNonCompletingCharactersSettingKey();
    protected virtual bool IsApplicable(CssCodeCompletionContext context);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.IntelliSenseCompletingCharactersSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "CSSSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssCompletingCharactersSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "CompleteOnSpaceSettingDescription")]
public bool CompleteOnSpace;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "NonCompletingCharactersSettingDescription")]
public string NonCompletingCharacters;
}
[FlagsAttribute]
public enum JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssLookupItemRelevance : Enum {
    public ulong value__;
    public static CssLookupItemRelevance Template;
    public static CssLookupItemRelevance HexColor;
    public static CssLookupItemRelevance Item;
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssReparsedCompletionContext : ReparsedCodeCompletionContext {
    public CssReparsedCompletionContext(IFile file, TreeTextRange selectedTreeRange, string placeholder);
    protected virtual IReparseContext GetReparseContext(IFile file, TreeTextRange range);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssTailType : TailType {
    public static TailType Whitespace;
    public static TailType MediaColon;
    public static TailType PropertyColon;
    public static TailType Braces;
    public static TailType Parentheses;
    public static TailType ParenthesesAndLeaveCaretWithin;
    private CssTailType(string name);
    private static CssTailType();
    public virtual TokenNodeType[] EvaluateTail(ISolution solution, IDocument document);
}
public static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.CssValueTemplates : object {
    public static Dictionary`2<string, Template> ValueTemplates;
    private static CssValueTemplates();
    private static Template CreateLiveTemplate(string shortcut, string description, string text, TemplateField[] fields);
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.LookupItems.CssColorLookupItem : SimpleTextLookupItem {
    private bool myBold;
    private IconId myImage;
    public IconId Image { get; }
    public CssColorLookupItem(string hexName, IRangeMarker rangeMarker, IconId image, bool bold);
    public virtual IconId get_Image();
    protected virtual RichText GetDisplayName();
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.LookupItems.CssDeclaredElementLookupItem : DeclaredElementLookupItem`2<ICompletableReference, ICssFile> {
    [NotNullAttribute]
private static DeclaredElementPresenterStyle ourNoParametersPresenterStyle;
    private IElementInstancePointer`1[] myPointers;
    public DeclaredElementPresenterStyle PresenterStyle { get; }
    public IReadOnlyList`1<DeclaredElementInstance> AllDeclaredElements { get; }
    public IReadOnlyList`1<IElementInstancePointer`1<IDeclaredElement>> DeclaredElementPointers { get; }
    private IEnumerable`1<IDeclaredElement> OrderedDeclaredElements { get; }
    public bool HasCandidates { get; }
    public CssDeclaredElementLookupItem(IList`1<IDeclaredElement> declaredElements, string name, CssCodeCompletionContext context, PsiLanguageType language, TextLookupRanges ranges);
    public CssDeclaredElementLookupItem(IDeclaredElement declaredElement, string name, CssCodeCompletionContext context, PsiLanguageType language, TextLookupRanges ranges);
    private static CssDeclaredElementLookupItem();
    public virtual DeclaredElementPresenterStyle get_PresenterStyle();
    private static IDeclaredElement GetPreferredDeclaredElement(IEnumerable`1<IDeclaredElement> declaredElements);
    public virtual IReadOnlyList`1<DeclaredElementInstance> get_AllDeclaredElements();
    public virtual IReadOnlyList`1<IElementInstancePointer`1<IDeclaredElement>> get_DeclaredElementPointers();
    private IEnumerable`1<IDeclaredElement> get_OrderedDeclaredElements();
    public sealed virtual RichTextBlock GetDescription();
    public virtual bool get_HasCandidates();
    public virtual IEnumerable`1<ICandidate> CreateCandidates(ISolution solution);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.LookupItems.CssDeclaredElementLookupItem/<CreateCandidates>d__17")]
public IEnumerable`1<ICandidate> CreateCandidates();
    protected virtual void OnAfterComplete(ITextControl textControl, DocumentRange& nameRange, DocumentRange& decorationRange, TailType tailType, Suffix& suffix, IRangeMarker& caretPositionRangeMarker);
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.LookupItems.CssValueLookupItem : SimpleTextLookupItem {
    private IconId myImage;
    private PsiLanguageType myLanguage;
    private string myTooltip;
    private IPsiModule myModule;
    public IconId Image { get; }
    public CssValueLookupItem(PsiLanguageType language, string name, IRangeMarker rangeMarker, IconId image, string tooltip, IPsiModule module);
    public virtual IconId get_Image();
    public sealed virtual RichTextBlock GetDescription();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssArgumentValueCompletionRule : CssArgumentValueCompletionRuleBase`1<ICssFunctionDefinition> {
    protected virtual IEnumerable`1<ICssFunctionDefinition> GetDefinitions(CssDefinitions definitions, string name);
    protected virtual bool IsValidDefinition(ICssFunctionDefinition definition);
}
internal abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssArgumentValueCompletionRuleBase`1 : CssValueCompletionRuleBase {
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual ICollection`1<ICssValueDefinition> GetCssValueDefinitions(ISpecificCodeCompletionContext context, ITreeNode node);
    protected abstract virtual IEnumerable`1<T> GetDefinitions(CssDefinitions definitions, string name);
    protected virtual bool IsValidDefinition(T definition);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssCompleteableReferenceItemsProvider : AbbreviatedItemsProviderOfSymbolTableBase`1<CssCodeCompletionContext> {
    private static String[] ourVendorPrefixes;
    private static CssCompleteableReferenceItemsProvider();
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual void CollectElements(IEnumerable`1<ISymbolInfo> elements, CssCodeCompletionContext context, IItemsCollector collector);
    private static ILookupItem GetElement(string name, IEnumerable`1<ISymbolInfo> symbolInfos, CssCodeCompletionContext context);
    protected virtual ILookupItem GetElement(ISymbolInfo symbolInfo, CssCodeCompletionContext context);
    protected virtual ISymbolTable GetSymbolTable(CssCodeCompletionContext context);
    protected sealed virtual string GetPrefix(CssCodeCompletionContext context);
    protected virtual TextLookupRanges GetDefaultRanges(CssCodeCompletionContext context);
    protected virtual String[] GetAbbreviations(CssCodeCompletionContext context);
    protected virtual ILookupItem GetAbbreviationElement(string abbreviation, IList`1<ISymbolInfo> elements, CssCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssDynamicFunctionCompletionRule : ItemsProviderOfSpecificContext`1<CssCodeCompletionContext> {
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual bool AddLookupItems(CssCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssHexColorCompletionRule : ItemsProviderWithContainer`2<CssCodeCompletionContext, IEnumerable`1<IColorElement>> {
    private IVisualElementFactory myElementFactory;
    public CssHexColorCompletionRule(IVisualElementFactory elementFactory);
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual TextLookupRanges EvaluateLookupRanges(CssCodeCompletionContext context);
    protected virtual IEnumerable`1<IColorElement> GetCompletableItems(CssCodeCompletionContext context);
    protected virtual void EvaluateLookupItems(CssCodeCompletionContext context, IItemsCollector collector, IdentifierMatcher prefixMatcher, TextLookupRanges ranges, IEnumerable`1<IColorElement> itemsContainer);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssHexColorCompletionRule/<EnumerateColorExpression>d__7")]
private static IEnumerable`1<ICssColorExpression> EnumerateColorExpression(CssCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssHexColorStringCompletionRule : ItemsProviderWithContainer`2<CssCodeCompletionContext, IEnumerable`1<IColorElement>> {
    private IVisualElementFactory myElementFactory;
    public CssHexColorStringCompletionRule(IVisualElementFactory elementFactory);
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual TextLookupRanges EvaluateLookupRanges(CssCodeCompletionContext context);
    protected virtual IEnumerable`1<IColorElement> GetCompletableItems(CssCodeCompletionContext context);
    protected virtual void EvaluateLookupItems(CssCodeCompletionContext context, IItemsCollector collector, IdentifierMatcher prefixMatcher, TextLookupRanges ranges, IEnumerable`1<IColorElement> itemsContainer);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssHexColorStringCompletionRule/<EnumerateColorExpression>d__7")]
private static IEnumerable`1<ICssStringLiteralExpression> EnumerateColorExpression(CssCodeCompletionContext context);
    private static bool IsColorString(ICssStringLiteralExpression expression);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssImportantKeywordCompletionRule : ItemsProviderWithContainer`2<CssCodeCompletionContext, IEnumerable`1<string>> {
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual TextLookupRanges EvaluateLookupRanges(CssCodeCompletionContext context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssImportantKeywordCompletionRule/<GetCompletableItems>d__2")]
protected virtual IEnumerable`1<string> GetCompletableItems(CssCodeCompletionContext context);
    protected virtual void EvaluateLookupItems(CssCodeCompletionContext context, IItemsCollector collector, IdentifierMatcher prefixMatcher, TextLookupRanges ranges, IEnumerable`1<string> itemsContainer);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssKeywordCompletionRule : ItemsProviderWithContainer`2<CssCodeCompletionContext, IEnumerable`1<string>> {
    private static string ImportKeyword;
    private static String[] ourCssKeywords;
    private static CssKeywordCompletionRule();
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual TextLookupRanges EvaluateLookupRanges(CssCodeCompletionContext context);
    protected virtual IEnumerable`1<string> GetCompletableItems(CssCodeCompletionContext context);
    private static ISelector GetSelector(ITreeNode node);
    private static bool InValidPlace(ITreeNode node);
    protected virtual void EvaluateLookupItems(CssCodeCompletionContext context, IItemsCollector collector, IdentifierMatcher prefixMatcher, TextLookupRanges ranges, IEnumerable`1<string> itemsContainer);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssMediaFeatureValueCompletionRule : CssValueCompletionRuleBase {
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual ICollection`1<ICssValueDefinition> GetCssValueDefinitions(ISpecificCodeCompletionContext context, ITreeNode node);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssPropertyValueCompletionRule : CssValueCompletionRuleBase {
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual ICollection`1<ICssValueDefinition> GetCssValueDefinitions(ISpecificCodeCompletionContext context, ITreeNode node);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssPseudoArgumentValueCompletionRule : CssArgumentValueCompletionRuleBase`1<ICssPseudoFunctionDefinition> {
    protected virtual IEnumerable`1<ICssPseudoFunctionDefinition> GetDefinitions(CssDefinitions definitions, string name);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssRelevanceRule : ItemsProviderOfSpecificContext`1<CssCodeCompletionContext> {
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual void TransformItems(CssCodeCompletionContext context, IItemsCollector collector);
}
internal abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssValueCompletionRuleBase : ItemsProviderWithContainer`2<CssCodeCompletionContext, ICollection`1<ICssValueDefinition>> {
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual void EvaluateLookupItems(CssCodeCompletionContext context, IItemsCollector collector, IdentifierMatcher prefixMatcher, TextLookupRanges ranges, ICollection`1<ICssValueDefinition> itemsContainer);
    protected virtual TextLookupRanges EvaluateLookupRanges(CssCodeCompletionContext context);
    protected virtual ICollection`1<ICssValueDefinition> GetCompletableItems(CssCodeCompletionContext context);
    protected abstract virtual ICollection`1<ICssValueDefinition> GetCssValueDefinitions(ISpecificCodeCompletionContext context, ITreeNode node);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.CssVariableItemsProvider : ItemsProviderOfSymbolTableBase`1<CssCodeCompletionContext> {
    protected virtual bool IsAvailable(CssCodeCompletionContext context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CssCodeCompletionContext context);
    protected virtual ILookupItem GetElement(ISymbolInfo symbolInfo, CssCodeCompletionContext context);
    protected virtual ISymbolTable GetSymbolTable(CssCodeCompletionContext context);
    protected virtual TextLookupRanges GetDefaultRanges(CssCodeCompletionContext context);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Rules.ItemsProviderWithContainer`2 : ItemsProviderOfSpecificContext`1<TContext> {
    protected virtual bool AddLookupItems(TContext context, IItemsCollector collector);
    protected abstract virtual void EvaluateLookupItems(TContext context, IItemsCollector collector, IdentifierMatcher prefixMatcher, TextLookupRanges ranges, TContainer itemsContainer);
    [NotNullAttribute]
protected abstract virtual TContainer GetCompletableItems(TContext context);
    [CanBeNullAttribute]
protected abstract virtual TextLookupRanges EvaluateLookupRanges(TContext context);
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.Angular2.AngularTagsAutomaticCompletionStrategy : object {
    private HtmlCodeCompletionManager myCssCodeCompletionManager;
    private CachingLexerService myCachingLexerService;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public AngularTagsAutomaticCompletionStrategy(HtmlCodeCompletionManager cssCodeCompletionManager, CachingLexerService cachingLexerService);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public sealed virtual bool get_ForceHideCompletion();
}
[SolutionComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.CssAutomaticStrategyOnHexColor : object {
    private CssCodeCompletionManager myCssCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public CssAutomaticStrategyOnHexColor(CssCodeCompletionManager cssCodeCompletionManager, ISettingsStore settingsStore);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool get_ForceHideCompletion();
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    private static bool IsFirstValidChar(char c);
    private static bool IsHexColor(ITokenNode node);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.CssAutomaticStrategyOnIdentifier : object {
    private CssCodeCompletionManager myCssCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public CssAutomaticStrategyOnIdentifier(CssCodeCompletionManager cssCodeCompletionManager, ISettingsStore settingsStore);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool get_ForceHideCompletion();
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    private static bool IsIdentifierStart(ITokenNode node);
    private static bool IsFirstIdentifierChar(char c);
    private static bool IsSelector(ITokenNode node);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.CssAutomaticStrategyOnPunctuation : object {
    private static NodeTypeSet Punctuations;
    private CssCodeCompletionManager myCssCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public CssAutomaticStrategyOnPunctuation(CssCodeCompletionManager cssCodeCompletionManager, ISettingsStore settingsStore);
    private static CssAutomaticStrategyOnPunctuation();
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool get_ForceHideCompletion();
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.CssAutomaticStrategyOnSelector : object {
    private CssCodeCompletionManager myCssCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public CssAutomaticStrategyOnSelector(CssCodeCompletionManager cssCodeCompletionManager, ISettingsStore settingsStore);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public virtual bool get_ForceHideCompletion();
    public virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    private static bool IsFirstIdentifierChar(char c);
    private static bool IsSelector(ITokenNode node);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.Html.HtmlAutomaticStrategyOnWhitespaceInClassAttribute : HtmlAutomaticStrategyOnWhitespaceBase`1<IHtmlFile> {
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public HtmlAutomaticStrategyOnWhitespaceInClassAttribute(HtmlCodeCompletionManager htmlCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    protected virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore toDataContext);
    protected virtual bool ShouldPopup(IHtmlToken tokenNode);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.Html.ZoneMarker : object {
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.HtmlInJsx.HtmlinJsxAutomaticStrategyOnWhitespaceInClassAttribute : HtmlAutomaticStrategyOnWhitespaceInClassAttribute {
    public HtmlinJsxAutomaticStrategyOnWhitespaceInClassAttribute(HtmlCodeCompletionManager htmlCodeCompletionManager, ISettingsStore settingsStore);
    protected virtual bool ShouldPopup(IHtmlToken tokenNode);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.Strategies.HtmlInJsx.ZoneMarker : object {
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.TailEx : object {
    [ExtensionAttribute]
public static TokenNodeType[] AddWhitespaceBeforeToken(TokenNodeType[] tokens, bool insert, TokenNodeType token);
    [ExtensionAttribute]
public static TokenNodeType[] AddWhitespaceAfterToken(TokenNodeType[] tokens, bool insert, TokenNodeType token);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSS.ZoneMarker : object {
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.Angular2.AngularDirectiveLookupItem : TextLookupItem {
    private HtmlCodeCompletionContext myContext;
    private string myQuote;
    public AngularDirectiveLookupItem(string text, HtmlCodeCompletionContext context);
    protected SkippingTypingAssist GetSkippingTypingAssist();
    protected virtual void OnAfterComplete(ITextControl textControl, DocumentRange& nameRange, DocumentRange& decorationRange, TailType tailType, Suffix& suffix, IRangeMarker& caretPositionRangeMarker);
    protected virtual void PlaybackSuffix(ITextControl textControl, Suffix suffix);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Angular2Html.Angular2HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.Angular2.AngularDirectivesHiddenFilterProvider : ItemsProviderOfSpecificContext`1<HtmlCodeCompletionContext> {
    protected virtual void TransformItems(HtmlCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Angular2Html.Angular2HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.Angular2.AngularDirectivesInHtmlItemsProvider : ItemsProviderOfSpecificContext`1<HtmlCodeCompletionContext> {
    private HtmlTokenNodeTypes myNodeTypes;
    private String[] myItems;
    private String[] myItemsInBrackets;
    public AngularDirectivesInHtmlItemsProvider(HtmlTokenNodeTypes nodeTypes);
    protected virtual bool IsAvailable(HtmlCodeCompletionContext context);
    protected virtual bool AddLookupItems(HtmlCodeCompletionContext context, IItemsCollector collector);
}
[FlagsAttribute]
public enum JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.Angular2.AngularHtmlLookupItemRelevance : Enum {
    public ulong value__;
    public static AngularHtmlLookupItemRelevance ComponentProperty;
    public static AngularHtmlLookupItemRelevance DirectiveAttribute;
    public static AngularHtmlLookupItemRelevance Directive;
    public static AngularHtmlLookupItemRelevance Item;
    public static AngularHtmlLookupItemRelevance ObsoleteItem;
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.Angular2.AngularPrefixLookupItem : TextLookupItem {
    private CodeCompletionContext myContext;
    public AngularPrefixLookupItem(CodeCompletionContext context, string text);
    protected virtual void OnAfterComplete(ITextControl textControl, DocumentRange& nameRange, DocumentRange& decorationRange, TailType tailType, Suffix& suffix, IRangeMarker& caretPositionRangeMarker);
    private void ScheduleAutopopup(ITextControl textControl);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.Angular2.ZoneMarker : object {
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnClassesAndID : object {
    private SettingsScalarEntry mySettingsScalarEntry;
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public HtmlAutomaticStrategyOnClassesAndID(ISettingsStore settingsStore, HtmlCodeCompletionManager htmlCodeCompletionManager);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    private bool IsIdentStart(char c);
    public virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public sealed virtual bool get_ForceHideCompletion();
    [CompilerGeneratedAttribute]
private bool <AcceptTyping>b__6_0(string text);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnHash : object {
    private IHtmlDeclaredElementTypes myDeclaredElementTypes;
    private IHtmlDeclaredElementsCache myDeclaredElementsCache;
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public HtmlAutomaticStrategyOnHash(IHtmlDeclaredElementTypes declaredElementTypes, IHtmlDeclaredElementsCache declaredElementsCache, HtmlCodeCompletionManager htmlCodeCompletionManager, ISettingsStore settingsStore);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool get_ForceHideCompletion();
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnIdentifier : object {
    private SettingsScalarEntry mySettingsScalarEntry;
    protected HtmlCodeCompletionManager HtmlCodeCompletionManager;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public HtmlAutomaticStrategyOnIdentifier(ISettingsStore settingsStore, HtmlCodeCompletionManager htmlCodeCompletionManager);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    protected bool IsIdentStart(char c);
    public virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public sealed virtual bool get_ForceHideCompletion();
    [CompilerGeneratedAttribute]
private bool <AcceptTyping>b__6_0(string text);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnListedCharacters`2 : HtmlAutomaticStrategyOnCharacterBase`1<TFile> {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnListedCharacters`2/<GetStartChars>d__1")]
protected virtual IEnumerable`1<StartChar<TFile, TTokenNodeTypes>> GetStartChars(TTokenNodeTypes tokenNodeTypes);
    public virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    protected abstract virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore contextBoundSettingsStore);
    public virtual bool AcceptsFile(IFile file, ITextControl textControl);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnPunctuation : HtmlAutomaticStrategyOnListedCharacters`2<IHtmlFile, IHtmlTokenNodeTypes> {
    private SettingsScalarEntry mySettingsScalarEntry;
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    public HtmlAutomaticStrategyOnPunctuation(ISettingsStore settingsStore, HtmlCodeCompletionManager htmlCodeCompletionManager);
    protected virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore contextBoundSettingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnPunctuation/<GetStartChars>d__5")]
protected virtual IEnumerable`1<StartChar<IHtmlFile, IHtmlTokenNodeTypes>> GetStartChars(IHtmlTokenNodeTypes tokenNodeTypes);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnPunctuationInClassesAndIDs : HtmlAutomaticStrategyOnListedCharacters`2<IHtmlFile, IHtmlTokenNodeTypes> {
    private SettingsScalarEntry mySettingsScalarEntry;
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    public HtmlAutomaticStrategyOnPunctuationInClassesAndIDs(ISettingsStore settingsStore, HtmlCodeCompletionManager htmlCodeCompletionManager);
    protected virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore contextBoundSettingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnPunctuationInClassesAndIDs/<GetStartChars>d__5")]
protected virtual IEnumerable`1<StartChar<IHtmlFile, IHtmlTokenNodeTypes>> GetStartChars(IHtmlTokenNodeTypes tokenNodeTypes);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlAutomaticStrategyOnWhitespace : HtmlAutomaticStrategyOnWhitespaceBase`1<IHtmlFile> {
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public HtmlAutomaticStrategyOnWhitespace(HtmlCodeCompletionManager htmlCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    protected virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore toDataContext);
    protected virtual bool ShouldPopup(IHtmlToken tokenNode);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlCodeCompletionContext : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private HtmlReparsedCompletionContext <UnterminatedContext>k__BackingField;
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <References>k__BackingField;
    public HtmlReparsedCompletionContext UnterminatedContext { get; }
    public TextLookupRanges Ranges { get; }
    public ReferenceCollection References { get; }
    [CanBeNullAttribute]
public IReference Reference { get; }
    [CanBeNullAttribute]
public ITreeNode TreeNode { get; }
    public string ContextId { get; }
    public HtmlCodeCompletionContext(CodeCompletionContext context, HtmlReparsedCompletionContext unterminatedContext, TextLookupRanges ranges);
    [CompilerGeneratedAttribute]
public HtmlReparsedCompletionContext get_UnterminatedContext();
    [CompilerGeneratedAttribute]
public sealed virtual TextLookupRanges get_Ranges();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_References();
    public IReference get_Reference();
    public ITreeNode get_TreeNode();
    public virtual string get_ContextId();
    public virtual void ReparseAfterCompletionIfNeeded();
    public virtual DeclaredElementLookupItem CreateDeclaredElementLookupItem(string name, IDeclaredElement declaredElement);
    public virtual string GetDisplayNameByDeclaredElement(IDeclaredElement declaredElement);
}
[IntellisensePartAttribute("0")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlCodeCompletionContextProvider : CodeCompletionContextProviderBase {
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    private IHtmlDeclaredElementTypes myHtmlCache;
    public HtmlCodeCompletionContextProvider(HtmlCodeCompletionManager htmlCodeCompletionManager, IHtmlDeclaredElementTypes htmlCache);
    protected virtual ISpecificCodeCompletionContext GetSpecificContext(CodeCompletionContext context, TextLookupRanges ranges, HtmlReparsedCompletionContext unterminatedContext);
    public virtual bool IsApplicable(CodeCompletionContext context);
    protected virtual bool IsIntellisenseEnabled(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
    protected virtual bool ReferenceIsAcceptableForHtmlCompletion(IReference referenceToComplete, ITreeNode elementToComplete);
    protected virtual TreeTextRange GetElementRange(ITreeNode element);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlCompletingCharactersProvider : CompletingCharsProviderWithSetting`2<HtmlCodeCompletionContext, HtmlCompletingCharactersSettingsKey> {
    protected virtual CompletionAction IsCharacterAcceptable(char c, HtmlCodeCompletionContext context, IContextBoundSettingsStore settingsStore);
    protected virtual Expression`1<Func`2<HtmlCompletingCharactersSettingsKey, bool>> GetCompleteOnSpaceSettingKey();
    protected virtual Expression`1<Func`2<HtmlCompletingCharactersSettingsKey, string>> GetNonCompletingCharactersSettingKey();
    protected virtual bool IsApplicable(HtmlCodeCompletionContext context);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.IntelliSenseCompletingCharactersSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "HtmlSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlCompletingCharactersSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "CompleteOnSpaceSettingDescription")]
public bool CompleteOnSpace;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "NonCompletingCharactersSettingDescription")]
public string NonCompletingCharacters;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlCompletionRangesProvider : ItemsProviderOfSpecificContext`1<HtmlCodeCompletionContext> {
    protected virtual TextLookupRanges GetDefaultRanges(HtmlCodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlDeclaredElementLookupItem : HtmlDeclaredElementLookupItemBase {
    protected static string SmartAttributeQuotesAction;
    protected Casing Casing { get; }
    public HtmlDeclaredElementLookupItem(DeclaredElementInstance`1<IDeclaredElement> declaredElement, string name, string displayName, HtmlCodeCompletionContext context, PsiLanguageType languageType, TextLookupRanges ranges);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
    protected virtual Casing get_Casing();
    protected virtual void FixInsertedText(IReference reference);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlDeclaredElementLookupItemBase : DeclaredElementLookupItem`2<IHtmlCompletableReference, IHtmlFile> {
    [CompilerGeneratedAttribute]
private Char[] <AllowableSuffixes>k__BackingField;
    protected Char[] AllowableSuffixes { get; protected set; }
    public IHtmlDescriptionsCache HtmlDescriptionsCache { get; }
    protected static VsHtmlFormatSettings VsHtmlFormatSettings { get; }
    protected HtmlDeclaredElementLookupItemBase(DeclaredElementInstance declaredElement, string name, string displayName, HtmlCodeCompletionContext context, PsiLanguageType languageType, TextLookupRanges ranges);
    [CompilerGeneratedAttribute]
protected Char[] get_AllowableSuffixes();
    [CompilerGeneratedAttribute]
protected void set_AllowableSuffixes(Char[] value);
    public IHtmlDescriptionsCache get_HtmlDescriptionsCache();
    protected static VsHtmlFormatSettings get_VsHtmlFormatSettings();
    protected virtual void PlaybackSuffix(ITextControl textControl, Suffix suffix);
    protected abstract virtual void FixInsertedText(IReference reference);
    protected virtual IReference BindReferenceAfterComplete(ITextControl textControl, DocumentRange nameRange, Action`1<IReference> withOldReferenceBeforeComplete);
    protected LastTypingAction GetLastTypingAssist();
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlEntities.HtmlEntityCodeCompletionContext : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    public TextLookupRanges Ranges { get; }
    public string ContextId { get; }
    public HtmlEntityCodeCompletionContext(CodeCompletionContext context, TextLookupRanges ranges);
    [CompilerGeneratedAttribute]
public TextLookupRanges get_Ranges();
    public virtual string get_ContextId();
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlEntities.HtmlEntityCodeCompletionContextProvider : CodeCompletionContextProviderBase {
    private ILanguageManager myLanguageManager;
    private HtmlCodeCompletionManager myHtmlCodeCompletionManager;
    public HtmlEntityCodeCompletionContextProvider(ILanguageManager languageManager, HtmlCodeCompletionManager htmlCodeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlEntities.HtmlEntityDefaultLookupItem : TextLookupItem {
    private HtmlEntitiesService myHtmlEntitiesService;
    private static string DefaultText;
    public HtmlEntityDefaultLookupItem(HtmlEntitiesService htmlEntitiesService);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlEntities.HtmlEntityItemsProvider : ItemsProviderOfSpecificContext`1<HtmlEntityCodeCompletionContext> {
    private HtmlEntitiesService myHtmlEntitiesService;
    public HtmlEntityItemsProvider(HtmlEntitiesService htmlEntitiesService);
    protected virtual bool IsAvailable(HtmlEntityCodeCompletionContext context);
    protected virtual bool AddLookupItems(HtmlEntityCodeCompletionContext context, IItemsCollector collector);
    protected virtual TextLookupRanges GetDefaultRanges(HtmlEntityCodeCompletionContext context);
    private bool GetHtmlEntitiesLookupItems(TextLookupRanges ranges, IItemsCollector collector, HtmlEntityCodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlFooterItem : TextLookupItemBase {
    [NotNullAttribute]
private IconId myImage;
    [NotNullAttribute]
private HtmlCodeCompletionContext myContext;
    private DocumentOffset myCaretPosition;
    public IconId Image { get; }
    public HtmlFooterItem(string text, IconId image, HtmlCodeCompletionContext context);
    public virtual IconId get_Image();
    protected virtual void OnAfterComplete(ITextControl textControl, DocumentRange& nameRange, DocumentRange& decorationRange, TailType tailType, Suffix& suffix, IRangeMarker& caretPositionRangeMarker);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
    protected virtual void PlaybackSuffix(ITextControl textControl, Suffix suffix);
}
[FlagsAttribute]
public enum JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlLookupItemRelevance : Enum {
    public ulong value__;
    public static HtmlLookupItemRelevance Item;
    public static HtmlLookupItemRelevance ObsoleteItem;
    public static HtmlLookupItemRelevance SmartItem;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlReferencedItemsProvider : ItemsProviderOfSpecificContext`1<HtmlCodeCompletionContext> {
    private IHtmlTokenNodeTypes myTokenNodeTypes;
    [NotNullAttribute]
private HtmlSvgSchemeComponent myHtmlSvgSchemeComponent;
    public HtmlReferencedItemsProvider(IHtmlTokenNodeTypes tokenNodeTypes, HtmlSvgSchemeComponent htmlSvgSchemeComponent);
    protected virtual bool IsAvailable(HtmlCodeCompletionContext context);
    protected virtual bool AddLookupItems(HtmlCodeCompletionContext context, IItemsCollector collector);
    private ImportantNames CalculateImportantNames(HtmlCodeCompletionContext context);
    private void GetLookupItemsFromSymbolTable(ISymbolTable symbolTable, ImportantNames smartNames, IItemsCollector collector, HtmlCodeCompletionContext context);
    protected virtual void CollectElement(string name, IDeclaredElement declaredElement, ImportantNames smartNames, HtmlCodeCompletionContext context, IItemsCollector collector);
    [NotNullAttribute]
protected virtual ISymbolTable GetSymbolTable(HtmlCodeCompletionContext context, ImportantNames smartNames);
    protected virtual IEnumerable`1<string> GetAttributesByImportance(IReference qualifier);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(HtmlCodeCompletionContext context);
    private HashSet`1<string> GetHtmlCompletionTags(HtmlCodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlReparsedCompletionContext : ReparsedCodeCompletionContext {
    public HtmlReparsedCompletionContext(IFile file, TreeTextRange range, string newText);
    protected virtual IReparseContext GetReparseContext(IFile file, TreeTextRange range);
    public ReferenceCollection GetReferences();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlTagFooterItemsProvider : ItemsProviderOfSpecificContext`1<HtmlCodeCompletionContext> {
    protected virtual bool IsAvailable(HtmlCodeCompletionContext context);
    protected virtual bool AddLookupItems(HtmlCodeCompletionContext context, IItemsCollector collector);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlTagNameLookupItem : HtmlDeclaredElementLookupItemBase {
    [CompilerGeneratedAttribute]
private bool <SkipFooterUpdate>k__BackingField;
    protected bool SkipFooterUpdate { get; protected set; }
    public bool HasCandidates { get; }
    protected Casing Casing { get; }
    protected bool SkipBindReference { get; }
    public HtmlTagNameLookupItem(DeclaredElementInstance declaredElement, string name, string displayName, HtmlCodeCompletionContext context, PsiLanguageType languageType, TextLookupRanges ranges);
    [CompilerGeneratedAttribute]
protected bool get_SkipFooterUpdate();
    [CompilerGeneratedAttribute]
protected void set_SkipFooterUpdate(bool value);
    public virtual bool get_HasCandidates();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlTagNameLookupItem/<CreateCandidates>d__7")]
public virtual IEnumerable`1<ICandidate> CreateCandidates(ISolution solution);
    protected bool CloseTag(IHtmlTag tag);
    protected virtual Casing get_Casing();
    protected virtual DocumentRange DoReplaceText(ITextControl textControl, DocumentRange replaceRange, string typeInName);
    protected virtual FixTagHeaderResult FixTagHeader(string typeInName, HtmlCodeCompletionContext htmlCodeCompletionContext, DocumentRange baseResult, bool suffixIsSlash, bool suffixIsBracket, ITextControl textControl);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
    protected virtual bool get_SkipBindReference();
    protected virtual IReference BindReferenceAfterComplete(ITextControl textControl, DocumentRange nameRange, Action`1<IReference> withOldReferenceBeforeComplete);
    protected virtual void FixInsertedText(IReference reference);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private void <>n__0(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.ImportantNames : object {
    private Dictionary`2<string, int> myElementPriorities;
    private HashSet`1<string> mySmartNames;
    public static ImportantNames FromUnorderedListOfNames(IEnumerable`1<string> unorderedList);
    public static ImportantNames FromOrderedListOfNames(IEnumerable`1<string> orderedList);
    public void AddSmartName(string name);
    public void AddSmartNames(IEnumerable`1<string> names);
    public ulong GetRelevanceByName(string name);
    public static ulong GetImportanceBits(int importance);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.AutopopupInDocCommentReference : AutopopupInDocCommentReferenceBase {
    private JavaScriptCodeCompletionManager myJavaScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsEntry;
    public AutopopupInDocCommentReference(JavaScriptCodeCompletionManager javaScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore settingsStore);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.AutopopupInDocCommentReferenceBase : object {
    public bool ForceHideCompletion { get; }
    public PsiLanguageType Language { get; }
    public abstract virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public abstract virtual bool IsEnabledInManager(IContextBoundSettingsStore settingsStore);
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public sealed virtual bool get_ForceHideCompletion();
    public virtual PsiLanguageType get_Language();
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.FileReferenceCodeCompletionContext : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private JavaScriptPathReferenceReparsedContext <UnterminatedContext>k__BackingField;
    public TextLookupRanges Ranges { get; }
    public JavaScriptPathReferenceReparsedContext UnterminatedContext { get; }
    public string ContextId { get; }
    public FileReferenceCodeCompletionContext(CodeCompletionContext context, JavaScriptPathReferenceReparsedContext unterminatedContext, TextLookupRanges ranges);
    [CompilerGeneratedAttribute]
public TextLookupRanges get_Ranges();
    [CompilerGeneratedAttribute]
public JavaScriptPathReferenceReparsedContext get_UnterminatedContext();
    public virtual string get_ContextId();
}
[IntellisensePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.FileReferenceCodeCompletionContextProvider : CodeCompletionContextProviderBase {
    private JavaScriptCodeCompletionManager myCodeCompletionManager;
    public FileReferenceCodeCompletionContextProvider(JavaScriptCodeCompletionManager codeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.FileReferenceJavaSciprItemsProvider : FileReferenceItemsProvider`1<FileReferenceCodeCompletionContext> {
    [NotNullAttribute]
private PsiLanguageType myLanguage;
    [NotNullAttribute]
private IShellLocks myLocks;
    public FileReferenceJavaSciprItemsProvider(PsiLanguageType language, IShellLocks locks);
    protected virtual bool IsAvailable(FileReferenceCodeCompletionContext context);
    protected virtual TextLookupRanges EvaluateRanges(FileReferenceCodeCompletionContext context);
    protected virtual ISymbolTable GetCompletionSymbolTable(IFileReference reference, FileReferenceCodeCompletionContext context);
    protected virtual ILookupItem CreateLookupItem(string name, DeclaredElementInstance`1<IDeclaredElement> declaredElementInstance, FileReferenceCodeCompletionContext context, TextLookupRanges ranges, TailType tailType);
    protected virtual IFileReference GetReference(FileReferenceCodeCompletionContext context);
    protected virtual TextLookupRanges GetDefaultRanges(FileReferenceCodeCompletionContext context);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.JavaScriptCodeCompletionContextProviderInDocComment : CodeCompletionContextProviderInDocCommentBase {
    private JavaScriptCodeCompletionManager myCodeCompletionManager;
    public JavaScriptCodeCompletionContextProviderInDocComment(JavaScriptCodeCompletionManager codeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    protected virtual ITokenNode GetTokenNode(CodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.JavaScriptDocCommentElementsItemsProviderImpl : DocCommentElementsItemsProvider {
    private static String[] OurSimpleTags;
    private static String[][] OurClosedTags;
    private static String[][] OurComplexTags;
    private static JavaScriptDocCommentElementsItemsProviderImpl();
    protected virtual void AddExtraItems(ContextInDocComment context, IItemsCollector collector);
    protected virtual String[] GetSimpleTags();
    protected virtual String[][] GetClosedTags();
    protected virtual String[][] GetComplexTags();
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.AutopopupEnabledSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "JavaScriptSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.JavaScriptDocCommentsAutopopupEnabledSetting : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "InDocCommentsSettingDescription")]
public AutopopupType InDocComments;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.JavaScriptFolderReferenceItemsProvider : ItemsProviderWithSymbolTable`3<FileReferenceCodeCompletionContext, JavaScriptFolderReference, IJavaScriptFile> {
    protected virtual TextLookupRanges EvaluateRanges(FileReferenceCodeCompletionContext context);
    protected virtual JavaScriptFolderReference GetReference(FileReferenceCodeCompletionContext context);
    protected virtual ISymbolTable GetCompletionSymbolTable(JavaScriptFolderReference reference, FileReferenceCodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.JavaScriptPathReferenceReparsedContext : ReparsedCodeCompletionContext {
    public JavaScriptPathReferenceReparsedContext(IFile file, TreeTextRange range, string newText);
    protected virtual IReparseContext GetReparseContext(IFile file, TreeTextRange range);
    protected virtual IReference FindReference(TreeTextRange referenceRange, ITreeNode treeNode);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.TypeScriptAutopopupInDocCommentReference : AutopopupInDocCommentReferenceBase {
    private TypeScriptCodeCompletionManager myTypeScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsEntry;
    public PsiLanguageType Language { get; }
    public TypeScriptAutopopupInDocCommentReference(TypeScriptCodeCompletionManager typeScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore settingsStore);
    public virtual PsiLanguageType get_Language();
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.AutopopupEnabledSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "TypeScriptSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.TypeScriptDocCommentsAutopopupEnabledSetting : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "InDocCommentsSettingDescription")]
public AutopopupType InDocComments;
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.Angular2.Angular2BaseLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Angular.AngularNoKeywordsProvider : InjectedJavaScriptCompletionItemsProviderKeywords {
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.AutopopupInJsonStrategy : object {
    private JsonCodeCompletionManager myJsonCodeCompletionManager;
    public bool ForceHideCompletion { get; }
    public PsiLanguageType Language { get; }
    public AutopopupInJsonStrategy(JsonCodeCompletionManager javaScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool get_ForceHideCompletion();
    public virtual PsiLanguageType get_Language();
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.AutopopupInStringLiteralStratery : AutopopupInStringLiteralStrateryBase {
    private JavaScriptCodeCompletionManager myJavaScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public AutopopupInStringLiteralStratery(JavaScriptCodeCompletionManager javaScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.AutopopupInStringLiteralStrateryBase : object {
    public bool ForceHideCompletion { get; }
    public PsiLanguageType Language { get; }
    public abstract virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public abstract virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    protected virtual bool AcceptTyping(char c, ITextControl textControl);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    protected virtual bool AcceptsStringLiteralToken(ITreeNode node);
    public sealed virtual bool get_ForceHideCompletion();
    public virtual PsiLanguageType get_Language();
    [CompilerGeneratedAttribute]
private bool <AcceptsFile>b__5_0(ITokenNode node);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.CompletionStrategyAfterSpace : CompletionStrategyAfterSpaceBase {
    private JavaScriptCodeCompletionManager myCodeCompletionManager;
    private SettingsScalarEntry myEnabledSetting;
    public CompletionStrategyAfterSpace(JavaScriptCodeCompletionManager codeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.CompletionStrategyAfterSpaceBase : object {
    private ISettingsStore mySettingsStore;
    private SettingsScalarEntry mySpaceAroundAssignmentOp;
    public bool ForceHideCompletion { get; }
    public PsiLanguageType Language { get; }
    protected CompletionStrategyAfterSpaceBase(ISettingsStore settingsStore);
    public abstract virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public abstract virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    private bool TryStartOnOperator(ITextControl textControl);
    private bool GetFormatterSettings(ITextControl textControl, SettingsScalarEntry entry);
    private bool TryStartOnSpace(ITextControl textControl);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    private static bool IsEqToken(TokenNodeType tokenType);
    public sealed virtual bool get_ForceHideCompletion();
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.InjectedJavaScriptAutomaticStrategyOnDot : JavaScriptAutomaticStrategyOnDotBase {
    private InjectedJavaScriptCodeCompletionManager myJavaScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public InjectedJavaScriptAutomaticStrategyOnDot(InjectedJavaScriptCodeCompletionManager javaScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.InjectedJavaScriptAutomaticStrategyOnIdentifier : JavaScriptAutomaticStrategyOnIdentifierBase {
    private InjectedJavaScriptCodeCompletionManager myJavaScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public InjectedJavaScriptAutomaticStrategyOnIdentifier(InjectedJavaScriptCodeCompletionManager javaScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.InjectedJavaScriptCompletionStrategyAfterSpace : CompletionStrategyAfterSpaceBase {
    private InjectedJavaScriptCodeCompletionManager myCodeCompletionManager;
    private SettingsScalarEntry myEnabledSetting;
    public PsiLanguageType Language { get; }
    public InjectedJavaScriptCompletionStrategyAfterSpace(InjectedJavaScriptCodeCompletionManager codeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.JavaScriptAutomaticStrategyOnDot : JavaScriptAutomaticStrategyOnDotBase {
    private JavaScriptCodeCompletionManager myJavaScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public JavaScriptAutomaticStrategyOnDot(JavaScriptCodeCompletionManager javaScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.JavaScriptAutomaticStrategyOnDotBase : object {
    public bool ForceHideCompletion { get; }
    public PsiLanguageType Language { get; }
    public abstract virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public abstract virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    protected virtual bool ShouldCompleteIfTokenBeforeDot(ITokenNode previousMeaningfulToken);
    public sealed virtual bool get_ForceHideCompletion();
    public virtual PsiLanguageType get_Language();
    [CompilerGeneratedAttribute]
private bool <AcceptsFile>b__4_0(ITokenNode node);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.JavaScriptAutomaticStrategyOnIdentifier : JavaScriptAutomaticStrategyOnIdentifierBase {
    private JavaScriptCodeCompletionManager myJavaScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public JavaScriptAutomaticStrategyOnIdentifier(JavaScriptCodeCompletionManager javaScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.JavaScriptAutomaticStrategyOnIdentifierBase : object {
    public bool ForceHideCompletion { get; }
    public PsiLanguageType Language { get; }
    public abstract virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public abstract virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    private static bool IsIdentStart(char c);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public sealed virtual bool get_ForceHideCompletion();
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.TypeScriptAutomaticStrategyOnIdentifier : JavaScriptAutomaticStrategyOnIdentifierBase {
    private TypeScriptCodeCompletionManager myTypeScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public TypeScriptAutomaticStrategyOnIdentifier(TypeScriptCodeCompletionManager typeScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.TypeScriptAutopopupInStringLiteralStratery : AutopopupInStringLiteralStrateryBase {
    private TypeScriptCodeCompletionManager myTypeScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public TypeScriptAutopopupInStringLiteralStratery(TypeScriptCodeCompletionManager typeScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual PsiLanguageType get_Language();
    protected virtual bool AcceptTyping(char c, ITextControl textControl);
    protected virtual bool AcceptsStringLiteralToken(ITreeNode node);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.TypeScriptCompletionStrategyAfterSpace : CompletionStrategyAfterSpaceBase {
    private TypeScriptCodeCompletionManager myCodeCompletionManager;
    private SettingsScalarEntry myEnabledSetting;
    public PsiLanguageType Language { get; }
    public TypeScriptCompletionStrategyAfterSpace(TypeScriptCodeCompletionManager codeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual PsiLanguageType get_Language();
}
public enum JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.BracketsType : Enum {
    public int value__;
    public static BracketsType Parentheses;
    public static BracketsType Brackets;
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.CompletionContextInStringLiterals : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private ITokenNode <OwnerStringLiteral>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptCodeCompletionParseContext <UnterminatedContext>k__BackingField;
    [CompilerGeneratedAttribute]
private JsInitialResolveContext <ResolveContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsObjectPropertyDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private char <QuoteChar>k__BackingField;
    [CompilerGeneratedAttribute]
private JavaScriptServices <JavaScriptServices>k__BackingField;
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    public ITokenNode OwnerStringLiteral { get; }
    public IJavaScriptCodeCompletionParseContext UnterminatedContext { get; public set; }
    public JsInitialResolveContext ResolveContext { get; }
    public bool IsFunctionTypeExpected { get; }
    public bool IsUnderNewExpression { get; }
    public bool IsObjectPropertyDeclaration { get; }
    public bool IsUnderStatement { get; }
    public char QuoteChar { get; }
    public JavaScriptServices JavaScriptServices { get; }
    public TextLookupRanges Ranges { get; }
    public string ContextId { get; }
    public CompletionContextInStringLiterals(CodeCompletionContext context, TextLookupRanges ranges, JavaScriptServices jsServices, char quoteChar, ITokenNode ownerStringLiteral, JavaScriptReparsedCompletionContext unterminatedContext);
    [CompilerGeneratedAttribute]
public ITokenNode get_OwnerStringLiteral();
    [CompilerGeneratedAttribute]
public sealed virtual IJavaScriptCodeCompletionParseContext get_UnterminatedContext();
    [CompilerGeneratedAttribute]
public void set_UnterminatedContext(IJavaScriptCodeCompletionParseContext value);
    [CompilerGeneratedAttribute]
public sealed virtual JsInitialResolveContext get_ResolveContext();
    public sealed virtual bool get_IsFunctionTypeExpected();
    public sealed virtual bool get_IsUnderNewExpression();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsObjectPropertyDeclaration();
    public sealed virtual bool get_IsUnderStatement();
    [CompilerGeneratedAttribute]
public char get_QuoteChar();
    [CompilerGeneratedAttribute]
public sealed virtual JavaScriptServices get_JavaScriptServices();
    [CompilerGeneratedAttribute]
public sealed virtual TextLookupRanges get_Ranges();
    public virtual string get_ContextId();
}
[ActionAttribute("IntelliSense_FilterDynamicProperties", "JetBrains.ReSharper.Features.Web.Resources.Strings", "FilterDynamicPropertiesActionText")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.FilterDynamicPropertiesAction : FilterActionBase {
    public string FilterId { get; }
    public virtual string get_FilterId();
}
[ActionAttribute("IntelliSense_FilterDynamicProperties_Invert", "JetBrains.ReSharper.Features.Web.Resources.Strings", "FilterDynamicPropertiesInvertActionText")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.FilterDynamicPropertiesActionInvert : FilterActionBase {
    public string FilterId { get; }
    public bool Reverse { get; }
    public virtual string get_FilterId();
    public virtual bool get_Reverse();
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Infrastructure.Filters.FilterStateSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "JavaScriptSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScript.JavaScriptCompletionFilterStateSettingKey : JavaScriptCompletionFilterStateSettingKeyBase {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScript.JavaScriptDynamicPropertyFilter : JavaScriptDynamicPropertyFilterBase {
    public JavaScriptDynamicPropertyFilter(ISettingsStore store);
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext specificContext, IItemsCollector collector, CompletionListFilterAvailabilityCache cache);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScript.JavaScriptKeywordFilter : CompletionListKeywordFilter`1<IJavaScriptCodeCompletionContext> {
    public JavaScriptKeywordFilter(ISettingsStore store);
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext specificContext, IItemsCollector collector, CompletionListFilterAvailabilityCache cache);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScript.JavaScriptLocalVariableFilter : JavaScriptLocalVariableFilterBase {
    public JavaScriptLocalVariableFilter(ISettingsStore store);
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext specificContext, IItemsCollector collector, CompletionListFilterAvailabilityCache cache);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScript.JavaScriptParameterFilter : JavaScriptParameterFilterBase {
    public JavaScriptParameterFilter(ISettingsStore store);
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext specificContext, IItemsCollector collector, CompletionListFilterAvailabilityCache cache);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScriptCompletionFilterStateSettingKeyBase : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "PropertiesSettingDescription")]
public CompletionListFilterState Properties;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "LocalVariablesSettingDescription")]
public CompletionListFilterState LocalVariables;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "KeywordsSettingDescription")]
public CompletionListFilterState Keywords;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ParametersSettingDescription")]
public CompletionListFilterState Parameters;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "DynamicPropertiesSettingDescription")]
public CompletionListFilterState DynamicProperties;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScriptDynamicPropertyFilterBase : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, IJavaScriptDynamicProperty> {
    public string ActionId { get; }
    public string Text { get; }
    protected JavaScriptDynamicPropertyFilterBase(ISettingsStore store);
    public virtual string get_ActionId();
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScriptFilterIds : FilterIds {
    public static string DynamicProperties;
    public static string DynamicPropertiesInvert;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScriptLocalVariableFilterBase : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, IJavaScriptLocalElement> {
    public string Text { get; }
    public string ActionId { get; }
    protected JavaScriptLocalVariableFilterBase(ISettingsStore store);
    public virtual string get_Text();
    public virtual string get_ActionId();
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext specificContext, IItemsCollector collector, CompletionListFilterAvailabilityCache cache);
    protected virtual bool Accepts(ILookupItem specificItem);
    public virtual IconId GetImage(ISolution solution);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.JavaScriptParameterFilterBase : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, IJavaScriptParameter> {
    public string Text { get; }
    public string ActionId { get; }
    protected JavaScriptParameterFilterBase(ISettingsStore store);
    public virtual string get_Text();
    public virtual string get_ActionId();
    public virtual IconId GetImage(ISolution solution);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptClassFilter : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, ITsClassElement> {
    public string Text { get; }
    public string ActionId { get; }
    public TypeScriptClassFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
    public virtual string get_ActionId();
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Infrastructure.Filters.FilterStateSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "TypeScriptSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptCompletionFilterStateSettingKey : JavaScriptCompletionFilterStateSettingKeyBase {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ClassesSettingDescription")]
public CompletionListFilterState Classes;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "InterfacesSettingDescription")]
public CompletionListFilterState Interfaces;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "EnumsSettingDescription")]
public CompletionListFilterState Enums;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "MethodsSettingDescription")]
public CompletionListFilterState Methods;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "FieldsSettingDescription")]
public CompletionListFilterState Fields;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ModulesSettingDescription")]
public CompletionListFilterState Modules;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "PublicSettingDescription")]
public CompletionListFilterState PublicSymbols;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "PrivateSettingDescription")]
public CompletionListFilterState PrivateSymbols;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ProtectedSettingDescription")]
public CompletionListFilterState ProtectedSymbols;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptDynamicPropertyFilter : JavaScriptDynamicPropertyFilterBase {
    public TypeScriptDynamicPropertyFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptEnumFilter : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, ITsEnumLikeElement> {
    public string Text { get; }
    public string ActionId { get; }
    public TypeScriptEnumFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
    public virtual string get_ActionId();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptFunctionFilter : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, ITsMemberElement> {
    public string ActionId { get; }
    public string Text { get; }
    public TypeScriptFunctionFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
    public virtual string get_ActionId();
    protected virtual bool Accepts(ILookupItem specificItem);
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptInterfaceFilter : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, ITsInterfaceElement> {
    public string Text { get; }
    public string ActionId { get; }
    public TypeScriptInterfaceFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
    public virtual string get_ActionId();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptKeywordFilter : CompletionListKeywordFilter`1<IJavaScriptCodeCompletionContext> {
    public TypeScriptKeywordFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptLocalVariableFilter : JavaScriptLocalVariableFilterBase {
    public TypeScriptLocalVariableFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptModifiersFilterBase : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, ITsMemberElement> {
    protected JsModifiers Modifier { get; }
    protected TypeScriptModifiersFilterBase(ISettingsStore store);
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext specificContext, IItemsCollector collector, CompletionListFilterAvailabilityCache cache);
    protected virtual bool Accepts(ILookupItem specificItem);
    protected abstract virtual JsModifiers get_Modifier();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <IsAvailable>b__1_2(ITsMemberElement element);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptModuleFilter : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, ITsModuleElement> {
    public string Text { get; }
    public string ActionId { get; }
    public TypeScriptModuleFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
    public virtual string get_ActionId();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptParameterFilter : JavaScriptParameterFilterBase {
    public TypeScriptParameterFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptPrivateFilter : TypeScriptModifiersFilterBase {
    public string ActionId { get; }
    protected JsModifiers Modifier { get; }
    public string Text { get; }
    public TypeScriptPrivateFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
    public virtual string get_ActionId();
    protected virtual JsModifiers get_Modifier();
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptProtectedFilter : TypeScriptModifiersFilterBase {
    public string ActionId { get; }
    protected JsModifiers Modifier { get; }
    public string Text { get; }
    public TypeScriptProtectedFilter(ISettingsStore store);
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
    public virtual string get_ActionId();
    protected virtual JsModifiers get_Modifier();
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Filters.TypeScript.TypeScriptPublicFilter : CompletionListDeclaredElementTypeFilter`2<IJavaScriptCodeCompletionContext, ITsMemberElement> {
    public string Text { get; }
    public string ActionId { get; }
    public TypeScriptPublicFilter(ISettingsStore store);
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext specificContext, IItemsCollector collector, CompletionListFilterAvailabilityCache cache);
    protected virtual bool Accepts(ILookupItem specificItem);
    public virtual string get_Text();
    public virtual IconId GetImage(ISolution solution);
    public virtual string get_ActionId();
    protected virtual SettingsScalarEntry GetSettingsEntryInternal(ISettingsStore store);
}
public interface JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.IJavaScriptCodeCompletionContext {
    public TextLookupRanges Ranges { get; }
    public JavaScriptServices JavaScriptServices { get; }
    public IJavaScriptCodeCompletionParseContext UnterminatedContext { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public bool IsFunctionTypeExpected { get; }
    public bool IsUnderNewExpression { get; }
    public bool IsObjectPropertyDeclaration { get; }
    public bool IsUnderStatement { get; }
    public abstract virtual TextLookupRanges get_Ranges();
    public abstract virtual JavaScriptServices get_JavaScriptServices();
    public abstract virtual IJavaScriptCodeCompletionParseContext get_UnterminatedContext();
    public abstract virtual JsInitialResolveContext get_ResolveContext();
    public abstract virtual bool get_IsFunctionTypeExpected();
    public abstract virtual bool get_IsUnderNewExpression();
    public abstract virtual bool get_IsObjectPropertyDeclaration();
    public abstract virtual bool get_IsUnderStatement();
}
public interface JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.IJavaScriptCodeCompletionParseContext {
    [CanBeNullAttribute]
public ITreeNode TreeNode { get; }
    [CanBeNullAttribute]
public IReference Reference { get; }
    public int StartOffset { get; }
    public abstract virtual ITreeNode get_TreeNode();
    public abstract virtual IReference get_Reference();
    public abstract virtual int get_StartOffset();
    public abstract virtual DocumentRange ToDocumentRange(TreeTextRange treeRange);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.InjectedJavaScriptLookupServiceProvider : JavaScriptLookupServiceProviderBase {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptArgumentsContext : object {
    [CompilerGeneratedAttribute]
private BracketsType <BracketsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ArgumentsText>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasRPar>k__BackingField;
    public BracketsType BracketsType { get; private set; }
    public string ArgumentsText { get; private set; }
    public bool HasRPar { get; private set; }
    [CompilerGeneratedAttribute]
public BracketsType get_BracketsType();
    [CompilerGeneratedAttribute]
private void set_BracketsType(BracketsType value);
    [CompilerGeneratedAttribute]
public string get_ArgumentsText();
    [CompilerGeneratedAttribute]
private void set_ArgumentsText(string value);
    [CompilerGeneratedAttribute]
public bool get_HasRPar();
    [CompilerGeneratedAttribute]
private void set_HasRPar(bool value);
    public static JavaScriptArgumentsContext Create(IIdentifierExpression identifier, TreeTextRange& argumentsListRange);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCodeCompletionContext : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private bool <IsFunctionTypeExpected>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnderNewExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnderStatement>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsObjectPropertyDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private JsInitialResolveContext <ResolveContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptCodeCompletionParseContext <UnterminatedContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsQualified>k__BackingField;
    [CompilerGeneratedAttribute]
private JavaScriptArgumentsContext <ArgumentsContext>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <ReplaceRangeWithJoinedArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Quote>k__BackingField;
    [CompilerGeneratedAttribute]
private JavaScriptServices <JavaScriptServices>k__BackingField;
    public bool IsFunctionTypeExpected { get; }
    public bool IsUnderNewExpression { get; }
    public bool IsUnderStatement { get; }
    public bool IsObjectPropertyDeclaration { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public IJavaScriptCodeCompletionParseContext UnterminatedContext { get; }
    public bool IsQualified { get; }
    public JavaScriptArgumentsContext ArgumentsContext { get; }
    public DocumentRange ReplaceRangeWithJoinedArguments { get; }
    public TextLookupRanges Ranges { get; }
    public string Quote { get; }
    public JavaScriptServices JavaScriptServices { get; }
    public string ContextId { get; }
    public JavaScriptCodeCompletionContext(CodeCompletionContext context, TextLookupRanges completionRanges, JavaScriptServices services, JavaScriptFollowingExpressionContext followingExpression, bool isQualified, JavaScriptArgumentsContext argumentsContext, DocumentRange replaceRangeWithJoinedArguments, IJavaScriptCodeCompletionParseContext unterminatedContext, string quote);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsFunctionTypeExpected();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsUnderNewExpression();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsUnderStatement();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsObjectPropertyDeclaration();
    [CompilerGeneratedAttribute]
public sealed virtual JsInitialResolveContext get_ResolveContext();
    [CompilerGeneratedAttribute]
public sealed virtual IJavaScriptCodeCompletionParseContext get_UnterminatedContext();
    [CompilerGeneratedAttribute]
public bool get_IsQualified();
    [CompilerGeneratedAttribute]
public JavaScriptArgumentsContext get_ArgumentsContext();
    [CompilerGeneratedAttribute]
public DocumentRange get_ReplaceRangeWithJoinedArguments();
    [CompilerGeneratedAttribute]
public sealed virtual TextLookupRanges get_Ranges();
    [CompilerGeneratedAttribute]
public string get_Quote();
    [CompilerGeneratedAttribute]
public sealed virtual JavaScriptServices get_JavaScriptServices();
    private static bool CheckIsUnderStatement(ITreeNode node);
    private static bool IsFunctionExpected(ITreeNode node, JsResolveContext resolveContext);
    public virtual string get_ContextId();
    public virtual IElementInstancePointer`1<IDeclaredElement> CreateElementPointer(DeclaredElementInstance`1<IDeclaredElement> instance);
    public virtual DeclaredElementsOrPointers CreatePointer(IDeclaredElement declaredElement);
    public virtual DeclaredElementsOrPointers CreatePointer(DeclaredElementInstance instance);
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCodeCompletionContextEx : object {
    [ExtensionAttribute]
[CanBeNullAttribute]
public static IReferenceExpressionReference GetReferenceExpressionReference(IJavaScriptCodeCompletionContext context);
    [ExtensionAttribute]
[CanBeNullAttribute]
public static IReferenceExpression GetReferenceExpression(IJavaScriptCodeCompletionContext context);
    [CanBeNullAttribute]
public static IReferenceExpression GetReferenceExpressionFromTreeNode(ITreeNode treeNode);
    [ExtensionAttribute]
[CanBeNullAttribute]
public static IJavaScriptLiteralExpression GetLiteralExpression(IJavaScriptCodeCompletionContext context);
    [ExtensionAttribute]
public static bool IsUnderNewExpression(IJavaScriptCodeCompletionContext context);
    public static bool CalculateIsObjectPropertyDeclaration(ITreeNode node);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCodeCompletionContextProvider : CodeCompletionContextProviderBase {
    private JavaScriptCodeCompletionManager myCodeCompletionManager;
    public JavaScriptCodeCompletionContextProvider(JavaScriptCodeCompletionManager codeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
    protected virtual bool EnabledInSettings(CodeCompletionContext context);
    private static TreeTextRange GetElementRange(ITreeNode element);
}
[IntellisensePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCodeCompletionContextProviderInStringLiterals : CodeCompletionContextProviderBase {
    private JavaScriptCodeCompletionManager myJavaScriptCodeCompletionManager;
    public JavaScriptCodeCompletionContextProviderInStringLiterals(JavaScriptCodeCompletionManager javaScriptCodeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCodeCompletionParseContext : object {
    private IFile myFile;
    [CompilerGeneratedAttribute]
private ITreeNode <TreeNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartOffset>k__BackingField;
    public ITreeNode TreeNode { get; }
    public IReference Reference { get; }
    public int StartOffset { get; }
    public JavaScriptCodeCompletionParseContext(ITreeNode treeNode, TreeTextRange range);
    [CompilerGeneratedAttribute]
public sealed virtual ITreeNode get_TreeNode();
    [CompilerGeneratedAttribute]
public sealed virtual IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual int get_StartOffset();
    public sealed virtual DocumentRange ToDocumentRange(TreeTextRange treeRange);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCompletingCharactersProvider : CompletingCharsProviderWithSetting`2<JavaScriptCodeCompletionContext, JavaScriptCompletingCharactersSettingsKey> {
    protected virtual CompletionAction IsCharacterAcceptable(char c, JavaScriptCodeCompletionContext context, IContextBoundSettingsStore settingsStore);
    protected virtual Expression`1<Func`2<JavaScriptCompletingCharactersSettingsKey, bool>> GetCompleteOnSpaceSettingKey();
    protected virtual Expression`1<Func`2<JavaScriptCompletingCharactersSettingsKey, string>> GetNonCompletingCharactersSettingKey();
    protected virtual bool IsApplicable(JavaScriptCodeCompletionContext context);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.IntelliSenseCompletingCharactersSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "JavaScriptSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCompletingCharactersSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "CompleteOnSpaceSettingDescription")]
public bool CompleteOnSpace;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "NonCompletingCharactersSettingDescription")]
public string NonCompletingCharacters;
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCompletionDeclaredElementsUtil : object {
    [ExtensionAttribute]
public static bool ShouldBeExcludedFromCompletion(ITsExportedModuleMember declaredElement);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptFollowingExpressionContext : object {
    [CompilerGeneratedAttribute]
private string <FollowingExpressionText>k__BackingField;
    [CompilerGeneratedAttribute]
private TextRange <FollowingExpressionRange>k__BackingField;
    public string FollowingExpressionText { get; }
    public TextRange FollowingExpressionRange { get; }
    private JavaScriptFollowingExpressionContext(string followingExpressionText, TextRange followingExpressionRange);
    [CompilerGeneratedAttribute]
public string get_FollowingExpressionText();
    [CompilerGeneratedAttribute]
public TextRange get_FollowingExpressionRange();
    public static JavaScriptFollowingExpressionContext Create(IJavaScriptFile file, TreeTextRange selectedTreeRange);
    private static bool HasLineBreaks(ITreeNode node);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptItemsProviderBase : JavaScriptItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptItemsProviderOfSpecificContext`1 : ItemsProviderOfSpecificContext`1<TContext> {
    private Key`1<IDictionary`2<string, ILookupItem>> myAddedItems;
    private string myAddedItemsKeyName;
    protected Key`1<IDictionary`2<string, ILookupItem>> AddedItemsKey { get; }
    protected string AddedItemsKeyName { get; }
    protected Key`1<IDictionary`2<string, ILookupItem>> get_AddedItemsKey();
    protected virtual string get_AddedItemsKeyName();
    protected sealed virtual bool AddLookupItems(TContext context, IItemsCollector collector);
    protected abstract virtual IEnumerable`1<ILookupItem> GetLookupItems(TContext context);
    protected virtual void AddItem(JavaScriptCodeCompletionContext context, ILookupItem item, IItemsCollector collector);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(TContext context);
    protected virtual LookupFocusBehaviour GetAutomaticLookupFocusBehaviour(TContext context);
}
[FlagsAttribute]
public enum JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptLookupItemRelevance : Enum {
    public ulong value__;
    public static JavaScriptLookupItemRelevance GenerativeItem;
    public static JavaScriptLookupItemRelevance LiteralItem;
    public static JavaScriptLookupItemRelevance ExpectedKeyword;
    public static JavaScriptLookupItemRelevance BuiltIn;
    public static JavaScriptLookupItemRelevance Local;
    public static JavaScriptLookupItemRelevance LocalFile;
    public static JavaScriptLookupItemRelevance PossibleKeyword;
    public static JavaScriptLookupItemRelevance Strong;
    public static JavaScriptLookupItemRelevance Item;
    public static JavaScriptLookupItemRelevance UnlikelyKeyword;
    public static JavaScriptLookupItemRelevance Symbol;
    public static JavaScriptLookupItemRelevance ObjectOrFunctionMember;
    public static JavaScriptLookupItemRelevance LowPriority;
    public static JavaScriptLookupItemRelevance AllPropertiesItem;
    public static JavaScriptLookupItemRelevance PostfixItem;
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptLookupItemsFactory : LookupItemFactoryBase {
    private static JavaScriptLookupItemsFactory ourInstance;
    [NotNullAttribute]
public static JavaScriptLookupItemsFactory Instance { get; }
    public static JavaScriptLookupItemsFactory get_Instance();
    [NotNullAttribute]
public virtual LookupItem`1<TextualInfo> CreateKeywordLookupItem(IJavaScriptCodeCompletionContext context, string text, string suffix, TailType tailType);
    [NotNullAttribute]
public LookupItem`1<TextualInfo> CreateTextLookupItem(CodeCompletionContext context, TextLookupRanges ranges, string text, bool emphasize, bool isDynamic, IconId icon);
    public IEnumerable`1<LookupItem`1<TextualInfo>> CreateStringLiteralLookupItems(JavaScriptCodeCompletionContext context, TextLookupRanges ranges, string text, bool quoted);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptLookupItemsFactory/<CreateStringLiteralLookupItems>d__6")]
public IEnumerable`1<LookupItem`1<TextualInfo>> CreateStringLiteralLookupItems(IJavaScriptCodeCompletionContext context, TextLookupRanges ranges, string text, bool quoted, string preferredQuote, bool displayQuoted, string type, bool emphasize, bool isDynamic);
    [NotNullAttribute]
private static string Quote(string text, string quote);
    public virtual LookupItem`1<JavaScriptDeclaredElementInfo> CreateDeclaredElementLookupItemDynamicContext(IJavaScriptCodeCompletionContext context, string name, IDeclaredElement declaredElement, bool isAllPropertiesItem, bool isLowPriorityItem, bool bind);
    [NotNullAttribute]
protected LookupItem`1<JavaScriptDeclaredElementInfo> CreateDeclaredElementLookupItemInternal(IJavaScriptCodeCompletionContext context, string name, IDeclaredElement declaredElement, bool bind, QualifierKind qualifier);
    [NotNullAttribute]
protected virtual JavaScriptDeclaredElementPresentation`1<JavaScriptDeclaredElementInfo> CreateElementPresentation(IDeclaredElement declaredElement, JavaScriptDeclaredElementInfo info, IPsiSourceFile currentSourceFile);
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptLookupItemsUtil : object {
    [ExtensionAttribute]
[PureAttribute]
public static bool IsAllPropertiesItem(ILookupItem item);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptLookupServiceProvider : JavaScriptLookupServiceProviderBase {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptLookupServiceProviderBase : object {
    public sealed virtual string BuildQualifierText(DeclaredElementInstance declaredElementInstance, QualifierKind qualifierKind);
    public sealed virtual void BindToType(ISolution solution, ITextControl textControl, DocumentRange textRange, ITypePointer typePointer, IRangeMarker& caretPositionRangeMarker);
    public sealed virtual void BindToDeclaredElement(ISolution solution, IElementInstancePointer`1<T> instance, ITextControl textControl, DocumentRange range, IRangeMarker& caretPositionRangeMarker);
    public sealed virtual DocumentRange BindToDeclaredElements(ISolution solution, ICollection`1<IElementInstancePointer`1<T>> instances, ITextControl textControl, DocumentRange range, IRangeMarker& caretPositionRangeMarker);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptPossibleDuplicateItemsProvider`1 : JavaScriptItemsProviderOfSpecificContext`1<TContext> {
    protected virtual void TransformItems(TContext context, IItemsCollector collector);
    [NotNullAttribute]
protected abstract virtual ILookupItem MergeItems(ILookupItem item, ILookupItem otherItem);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptReparsedCompletionContext : ReparsedCodeCompletionContext {
    public int StartOffset { get; }
    public JavaScriptReparsedCompletionContext(IFile file, TreeTextRange range, string newText);
    protected virtual IReparseContext GetReparseContext(IFile file, TreeTextRange range);
    protected virtual IReference FindReference(TreeTextRange referenceRange, ITreeNode treeNode);
    public sealed virtual int get_StartOffset();
    private sealed virtual override ITreeNode JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.IJavaScriptCodeCompletionParseContext.get_TreeNode();
    private sealed virtual override IReference JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.IJavaScriptCodeCompletionParseContext.get_Reference();
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptTailType : TailType {
    public static TailType Parentheses;
    public static TailType ParenthesesAndSemicolon;
    public static TailType ParenthesesAndLeaveCaretWithin;
    public static TailType ParenthesesAndLeaveCaretWithinSemicolon;
    public static TailType LParenthisAndLeaveCaretWithin;
    private JavaScriptTailType(string name);
    private static JavaScriptTailType();
    public virtual TokenNodeType[] EvaluateTail(ISolution solution, IDocument document);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavsScriptStringLiteralCompletingCharactersProvider : CompletingCharsProviderWithSettingOther`1<CompletionContextInStringLiterals> {
    protected virtual CompletionAction IsCharacterAcceptable(char c, CompletionContextInStringLiterals context, IContextBoundSettingsStore settingsStore);
    protected virtual bool IsApplicable(CompletionContextInStringLiterals context);
}
public static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JsCompletionTokenUtil : object {
    public static bool ShouldComplete(ITokenNode tokenBeforeDot);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "0")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JsPostfixTemplatesProvider : PostfixTemplatesItemProviderBase`2<JavaScriptCodeCompletionContext, JavaScriptPostfixTemplateContext> {
    [NotNullAttribute]
private JavaScriptPostfixTemplateContextFactory myPostfixContextFactory;
    public JsPostfixTemplatesProvider(PostfixTemplatesManager templatesManager, UsageStatistics usageStatistics, JavaScriptPostfixTemplateContextFactory postfixContextFactory);
    protected virtual JavaScriptPostfixTemplateContext TryCreatePostfixContext(JavaScriptCodeCompletionContext completionContext);
    protected virtual void AdjustLookupItem(LookupItem`1<PostfixTemplateInfo> lookupItem);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.LookupItems.JavaScriptDeclaredElementBehavior`1 : DeclaredElementBehavior`1<TInfo> {
    private Nullable`1<bool> myNeedParentheses;
    public JavaScriptDeclaredElementBehavior`1(TInfo info);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
    private bool NeedParentheses();
    private bool CalculateNeedParentheses();
    protected virtual void OnAfterComplete(ITextControl textControl, LookupItemInsertType insertType, DocumentRange& nameRange, DocumentRange& decorationRange, TailType tailType, Suffix& suffix, IRangeMarker& caretPositionRangeMarker, Boolean& keepCaretStill);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.LookupItems.JavaScriptDeclaredElementInfo : DeclaredElementInfo {
    public static Key IsObjectOrFunctionMember;
    public static Key IsSymbol;
    public static Key IsBuiltIn;
    public static Key IsStrong;
    public static Key IsLocalFile;
    public static Key IsLocal;
    public static Key IsLiteralItem;
    public static Key IsLowPriorityItem;
    public static Key IsVariableForTsInterface;
    public static Key IsExpectedKeyword;
    public static Key IsPossibleKeyword;
    public static Key IsUnexpectedKeyword;
    [CompilerGeneratedAttribute]
private IJavaScriptCodeCompletionContext <CodeCompletionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAllPropertiesItem>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCommonItem>k__BackingField;
    public JsInitialResolveContext ResolveContext { get; }
    public IJavaScriptCodeCompletionContext CodeCompletionContext { get; }
    public string TextToMatch { get; }
    public bool IsAllPropertiesItem { get; public set; }
    public bool IsCommonItem { get; public set; }
    public bool HasCandidates { get; }
    public JavaScriptDeclaredElementInfo(string shortName, DeclaredElementInstance instance, PsiLanguageType languageType, IJavaScriptCodeCompletionContext codeCompletionContext);
    private static JavaScriptDeclaredElementInfo();
    public JsInitialResolveContext get_ResolveContext();
    [CompilerGeneratedAttribute]
public IJavaScriptCodeCompletionContext get_CodeCompletionContext();
    public string get_TextToMatch();
    [CompilerGeneratedAttribute]
public bool get_IsAllPropertiesItem();
    [CompilerGeneratedAttribute]
public void set_IsAllPropertiesItem(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCommonItem();
    [CompilerGeneratedAttribute]
public void set_IsCommonItem(bool value);
    public virtual string MakeSafe(string text);
    public virtual bool get_HasCandidates();
    public virtual IEnumerable`1<ICandidate> CreateCandidates(ISolution solution);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.LookupItems.JavaScriptDeclaredElementMatcher : DeclaredElementMatcher {
    [NotNullAttribute]
private JavaScriptDeclaredElementInfo myInfo;
    public JavaScriptDeclaredElementMatcher(JavaScriptDeclaredElementInfo info, string escapingPrefix);
    public virtual MatchingResult Match(PrefixMatcher prefixMatcher);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.LookupItems.JavaScriptDeclaredElementPresentation`1 : DeclaredElementPresentation`1<TInfo> {
    private IPsiSourceFile myCurrentSourceFile;
    public JavaScriptDeclaredElementPresentation`1(TInfo info, DeclaredElementPresenterStyle presenterStyle, string typeParametersString, IconId image, IPsiSourceFile currentSourceFile);
    protected virtual RichText GetDisplayName();
    public static void AddFileIfNeed(RichText displayName, IDeclaredElement declaredElement, IPsiSourceFile currentSourceFile);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Matcher : object {
    private PostfixTemplateInfo myItem;
    public bool IgnoreSoftOnSpace { get; }
    public string TextToMatch { get; }
    public Matcher(PostfixTemplateInfo item);
    public sealed virtual MatchingResult Match(PrefixMatcher prefixMatcher);
    public sealed virtual bool get_IgnoreSoftOnSpace();
    public sealed virtual string get_TextToMatch();
}
public interface JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.CompletionTablesBuilder.IJsCompletionTablesBuilder {
    public abstract virtual AsyncBuilderResult`2<ISymbolTable, ISymbolTable> Build(IJavaScriptCodeCompletionContext codeCompletionContext, IJavaScriptCompleteableReference reference);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.CompletionTablesBuilder.JsCompletionTablesBuilder : object {
    public virtual AsyncBuilderResult`2<ISymbolTable, ISymbolTable> Build(IJavaScriptCodeCompletionContext codeCompletionContext, IJavaScriptCompleteableReference reference);
}
public interface JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.IKeywordCompletionGenerator {
    public abstract virtual IEnumerable`1<ILookupItem> GetApplicableKeywords(IJavaScriptFile file, TreeTextRange referenceRange);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedItemsProviderOnCompleteableReferenceInsideStringLiteral : ItemsProviderOnCompleteableReferenceInsideStringLiteralBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedItemsProviderOnStringLiteral : ItemsProviderOnStringLiteralBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedJavaScriptCompletionItemsProviderIdentifierName : JavaScriptCompletionItemsProviderIdentifierNameBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedJavaScriptCompletionItemsProviderKeywords : JavaScriptCompletionItemsProviderKeywordsBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedJavaScriptRangesProvider : JavaScriptRangesProviderBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedJavaScriptRelevanceRule : JavaScriptRelevanceRuleBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedJsItemsProviderInsideRequire : JsItemsProviderInsideRequireBase {
    public InjectedJsItemsProviderInsideRequire(ISettingsStore settingsStore);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.InjectedJsItemsProviderOnReferenceExpression : JsItemsProviderOnReferenceExpressionBase {
    public InjectedJsItemsProviderOnReferenceExpression(IJsCompletionTablesBuilder tablesBuilder);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderAddRemoveEventListenerString : JavaScriptPossibleDuplicateItemsProvider`1<JavaScriptCodeCompletionContext> {
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderAddRemoveEventListenerString/<GetLookupItems>d__1")]
protected virtual IEnumerable`1<ILookupItem> GetLookupItems(JavaScriptCodeCompletionContext context);
    protected virtual ILookupItem MergeItems(ILookupItem item, ILookupItem otherItem);
    [NotNullAttribute]
private static ILookupItem PrepareItem(ILookupItem item);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderOnCompleteableReferenceInsideStringLiteral : ItemsProviderOnCompleteableReferenceInsideStringLiteralBase {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderOnCompleteableReferenceInsideStringLiteralBase : ItemsProviderOfSymbolTableBase`1<CompletionContextInStringLiterals> {
    protected virtual bool IsAvailable(CompletionContextInStringLiterals context);
    protected virtual ILookupItem GetElement(ISymbolInfo symbolInfo, CompletionContextInStringLiterals context);
    protected virtual ISymbolTable GetSymbolTable(CompletionContextInStringLiterals context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CompletionContextInStringLiterals context);
    protected virtual TextLookupRanges GetDefaultRanges(CompletionContextInStringLiterals context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderOnReferenceExpressionBase : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private IJsCompletionTablesBuilder myTablesBuilder;
    protected ItemsProviderOnReferenceExpressionBase(IJsCompletionTablesBuilder tablesBuilder);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual bool ShouldCompleteIfTokenBeforeDot(ITokenNode beforeDot);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    protected bool DoAddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector, VariableDeclarationDetector variableDeclaration);
    protected void CollectElementDynamicContext(ISymbolInfo symbolInfo, IItemsCollector collector, IJavaScriptCodeCompletionContext context, bool isAllPropertiesElement, VariableDeclarationDetector variableDeclaration);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(JavaScriptCodeCompletionContext context);
    private static bool IsGeneralWindowMember(ISymbolInfo symbolInfo);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderOnStringLiteral : ItemsProviderOnStringLiteralBase {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderOnStringLiteralBase : ItemsProviderOfSymbolTableBase`1<CompletionContextInStringLiterals> {
    protected virtual bool IsAvailable(CompletionContextInStringLiterals context);
    protected virtual ILookupItem GetElement(ISymbolInfo symbolInfo, CompletionContextInStringLiterals context);
    protected virtual ISymbolTable GetSymbolTable(CompletionContextInStringLiterals context);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(CompletionContextInStringLiterals context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLikeBaseLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderOnTypeofString : JavaScriptItemsProviderBase {
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.ItemsProviderOnTypeofString/<GetLookupItems>d__1")]
protected virtual IEnumerable`1<ILookupItem> GetLookupItems(JavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptCompletionItemsProviderIdentifierName : JavaScriptCompletionItemsProviderIdentifierNameBase {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptCompletionItemsProviderIdentifierNameBase : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private static Key`1<object> ourItemsAddedKey;
    private static JavaScriptCompletionItemsProviderIdentifierNameBase();
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    [CanBeNullAttribute]
private static IList`1<string> GetNames(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(JavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptCompletionItemsProviderKeywords : JavaScriptCompletionItemsProviderKeywordsBase {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptCompletionItemsProviderKeywordsBase : JavaScriptItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptCompletionItemsProviderKeywordsBase/<GetLookupItems>d__1")]
protected virtual IEnumerable`1<ILookupItem> GetLookupItems(JavaScriptCodeCompletionContext context);
    protected virtual IKeywordCompletionGenerator GetCompletionGenerator(JavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptRangesProvider : JavaScriptRangesProviderBase {
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptRangesProviderBase : ItemsProviderOfSpecificContext`1<IJavaScriptCodeCompletionContext> {
    public CompletionMode SupportedCompletionMode { get; }
    protected virtual TextLookupRanges GetDefaultRanges(IJavaScriptCodeCompletionContext context);
    public virtual CompletionMode get_SupportedCompletionMode();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptRelevanceRule : JavaScriptRelevanceRuleBase {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JavaScriptRelevanceRuleBase : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private static Nullable`1<ulong> ourLowPriorityMask;
    private static Nullable`1<ulong> ourClearRelevanceMask;
    public EvaluationMode SupportedEvaluationMode { get; }
    public static ulong LowPriorityMask { get; }
    public static ulong ClearRelevanceMask { get; }
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    public virtual EvaluationMode get_SupportedEvaluationMode();
    protected virtual void TransformItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    internal static void SetRelevance(ILookupItem item);
    private static void AppendRelevance(ILookupItem item);
    public static ulong get_LowPriorityMask();
    public static ulong get_ClearRelevanceMask();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JsItemsProviderInAmbientNameReference : JsItemsProviderInsideRequireBase {
    public JsItemsProviderInAmbientNameReference(ISettingsStore settingsStore);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JsItemsProviderInsideRequireBase : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private ISettingsStore mySettingsStore;
    public JsItemsProviderInsideRequireBase(ISettingsStore settingsStore);
    protected virtual AutocompletionBehaviour GetAutocompletionBehaviour(JavaScriptCodeCompletionContext specificContext);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    private static bool PrepareImportCompletionSymbolTable(JavaScriptCodeCompletionContext context, IAmbientNameReference reference, bool isImportCompletion, ISymbolTable& items, ITreeNode& node, IPsiServices& psiServices);
    private static void AddNodeModulesItemsIntoSymbolTable(ITreeNode node, IPsiServices psiServices, ModulesFilesCache modulesMainFilesCache, bool typeScript, string prefixPathDirectoryString, IReadOnlyCollection`1<VirtualFileSystemPath> possibleNodeModulesDirectories, ISymbolTable& items);
    private static LocalHashSet`1<VirtualFileSystemPath> GetPrefixPaths(string prefix, ITreeNode node, bool hasNodeModulesItems, String& prefixPathDirectoryString, VirtualFileSystemPath& prefixPathDirectory, RelativePath& possibleNodeModulesDirectoryPathSuffix, IReadOnlyCollection`1& possibleNodeModulesDirectories);
    private static VirtualFileSystemPath GetParent(VirtualFileSystemPath path, int depth);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JsItemsProviderOnReferenceExpression : JsItemsProviderOnReferenceExpressionBase {
    public JsItemsProviderOnReferenceExpression(IJsCompletionTablesBuilder tablesBuilder);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JsItemsProviderOnReferenceExpressionBase : ItemsProviderOnReferenceExpressionBase {
    public JsItemsProviderOnReferenceExpressionBase(IJsCompletionTablesBuilder tablesBuilder);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JsKeywordCompletionGenerator : object {
    protected JavaScriptCodeCompletionContext myContext;
    private JsKeywordGenerator myJsKeywordGenerator;
    protected JsKeywordGenerator Generator { get; }
    public JavaScriptLookupItemsFactory ItemsFactory { get; }
    protected bool OverridesClassItems { get; }
    public JsKeywordCompletionGenerator(JavaScriptCodeCompletionContext context, JsKeywordGenerator generator);
    protected JsKeywordGenerator get_Generator();
    protected virtual string GetSuffix(string keyword);
    protected virtual TailType GetTailType(string keyword);
    protected virtual bool HasLetConst(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasYield(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasAsync(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasAwait(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasOfInsideForeach(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasDynamicImports(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasClassInStatements(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual bool HasClassInExpressions(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual Dictionary`2<string, Key`1<object>> GetItemsForOptions(JsKeywordGeneratorFlags options, ITreeNode context, JavaScriptLanguageLevel languageLevel, JavaScriptServices javaScriptServices);
    protected static void AddItem(Dictionary`2<string, Key`1<object>> items, string item, Key`1<object> customKey);
    private static Key`1<object> GetKeyWithMaxPriority(Key`1<object> a, Key`1<object> b);
    protected virtual bool HasTypes(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual bool HasExportImportKeywords(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual bool HasEs6ExportImportItems(ITreeNode context, JavaScriptLanguageLevel level);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JsKeywordCompletionGenerator/<GetApplicableKeywords>d__21")]
public sealed virtual IEnumerable`1<ILookupItem> GetApplicableKeywords(IJavaScriptFile file, TreeTextRange referenceRange);
    public virtual JavaScriptLookupItemsFactory get_ItemsFactory();
    protected virtual JsKeywordGeneratorFlags GetKeywordCompletionOptions(TreeTextRange referenceRange, ITokenNode token, JavaScriptServices javaScriptServices);
    protected virtual bool get_OverridesClassItems();
    private void CheckSuperKeyword(ITokenNode token, JsKeywordGeneratorFlags& options);
    private static bool IsClassElement(ITokenNode token);
    private void CheckExportImportDerivedItems(ITokenNode token, JsKeywordGeneratorFlags& options);
    protected static bool IsDefaultAfterExport(ITokenNode prevMeaningfulToken);
    protected static bool IsStarAfterExport(ITokenNode prevMeaningfulToken);
    protected static bool IsStarAfterImport(ITokenNode prevMeaningfulToken);
    protected static bool IsIdentifierInImport(ITokenNode prevMeaningfulToken);
    protected virtual bool IsAfterIdentifierInImportOrExportList(ITokenNode prevMeaningfulToken);
    protected virtual bool CanBeReturn(ITokenNode token, bool canBeStatement);
    protected virtual bool CanBeThis(ITokenNode node, bool canBeExpression);
    protected bool IsAfterForInitializer(ITokenNode node);
    private bool GetCanBeAccessor(ITokenNode token);
    private bool CheckVarInsideFor(ITokenNode token);
    private void CheckExtends(ITokenNode token, JsKeywordGeneratorFlags& config);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.JsonRelevanceRule : JavaScriptRelevanceRuleBase {
    private static Key`1<object> ourKey;
    private static JsonRelevanceRule();
    protected virtual void DecorateItems(JavaScriptCodeCompletionContext context, IReadOnlyCollection`1<ILookupItem> items);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(JavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.NodeJsCompletionItemsProvider : ItemsProviderOfSpecificContext`1<IJavaScriptCodeCompletionContext> {
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(IJavaScriptCodeCompletionContext context, IItemsCollector collector);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.TsKeywordCompletionGenerator : JsKeywordCompletionGenerator {
    protected TsKeywordGenerator Generator { get; }
    public JavaScriptLookupItemsFactory ItemsFactory { get; }
    protected bool OverridesClassItems { get; }
    public TsKeywordCompletionGenerator(JavaScriptCodeCompletionContext context);
    protected TsKeywordGenerator get_Generator();
    protected virtual string GetSuffix(string keyword);
    protected virtual TailType GetTailType(string keyword);
    protected virtual bool HasClassInStatements(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual bool HasClassInExpressions(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual JsKeywordGeneratorFlags GetKeywordCompletionOptions(TreeTextRange referenceRange, ITokenNode token, JavaScriptServices javaScriptServices);
    protected virtual bool HasExportImportKeywords(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual bool HasEs6ExportImportItems(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual bool HasTypes(ITreeNode context, JavaScriptLanguageLevel level);
    protected virtual Dictionary`2<string, Key`1<object>> GetItemsForOptions(JsKeywordGeneratorFlags options, ITreeNode context, JavaScriptLanguageLevel languageLevel, JavaScriptServices javaScriptServices);
    public virtual JavaScriptLookupItemsFactory get_ItemsFactory();
    protected virtual bool CanBeReturn(ITokenNode token, bool canBeStatement);
    protected virtual bool CanBeThis(ITokenNode node, bool canBeExpression);
    private void CheckSuperKeyword(ITokenNode node, JsKeywordGeneratorFlags& config);
    private bool IsInsideTypeDeclarationBlock(ITokenNode token);
    protected virtual bool IsAfterIdentifierInImportOrExportList(ITokenNode prevMeaningfulToken);
    private void CheckModuleTypeEnumDecl(TreeTextRange referenceRange, ITokenNode token, JsKeywordGeneratorFlags& config, JavaScriptServices javaScriptServices);
    protected virtual bool get_OverridesClassItems();
    private void CheckClassBodyKeywords(ITokenNode node, JsKeywordGeneratorFlags& config);
    private static void CheckTypeUsage(ITokenNode node, JsKeywordGeneratorFlags& config);
    private void CheckInterfaceBodyKeywords(ITokenNode node, JsKeywordGeneratorFlags& config);
    private bool IsClassMemberDeclarationCorrect(ITsClassMemberDeclaration classMemberDeclaration);
    private void CheckExtendsImplements(ITokenNode token, JsKeywordGeneratorFlags& config);
    private bool IsTsStatementCorrect(ITsStatement statement);
    protected virtual bool HasLetConst(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasYield(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasAwait(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasAsync(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasOfInsideForeach(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
    protected virtual bool HasDynamicImports(ITreeNode context, JavaScriptLanguageLevel level, JavaScriptServices services);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.Rules.TypeScriptTailType : TailType {
    public static TailType ParenthesesWithSemiAndLeaveCaretWithin;
    private TypeScriptTailType(string name);
    private static TypeScriptTailType();
    public virtual TokenNodeType[] EvaluateTail(ISolution solution, IDocument document);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.ZoneMarker : object {
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.JsDocAutopopupStrategy : object {
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
    public sealed virtual bool get_ForceHideCompletion();
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.JsDocCodeCompletionContext : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private ITokenNode <TokenAtCaret>k__BackingField;
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    [NotNullAttribute]
public ITokenNode TokenAtCaret { get; }
    public TextLookupRanges Ranges { get; }
    public string ContextId { get; }
    public JsDocCodeCompletionContext(CodeCompletionContext context, ITokenNode tokenAtCaret, TextLookupRanges ranges);
    [CompilerGeneratedAttribute]
public ITokenNode get_TokenAtCaret();
    [CompilerGeneratedAttribute]
public TextLookupRanges get_Ranges();
    public virtual string get_ContextId();
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.JsDocCodeCompletionContextProvider : CodeCompletionContextProviderBase {
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JsDoc.JsDocLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.JsDocInTypeDescItemsProvider : ItemsProviderOfSpecificContext`1<JsDocCodeCompletionContext> {
    private static String[][] myTypeStrings;
    private static JsDocInTypeDescItemsProvider();
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(JsDocCodeCompletionContext context);
    protected virtual bool IsAvailable(JsDocCodeCompletionContext context);
    private static bool ShouldShowTypes(string typeDesc, int offset);
    protected virtual bool AddLookupItems(JsDocCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JsDoc.JsDocLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.JsDocKeywordsProvider : ItemsProviderOfSpecificContext`1<JsDocCodeCompletionContext> {
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(JsDocCodeCompletionContext context);
    protected virtual bool IsAvailable(JsDocCodeCompletionContext context);
    private static bool CanCompleteKeywordOn(ITokenNode node);
    private static ITokenNode GetPrevTokenThroughtWhitespaces(ITokenNode node);
    protected virtual bool AddLookupItems(JsDocCodeCompletionContext context, IItemsCollector collector);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.JsDocLookupItemsFactory : LookupItemFactoryBase {
    [CanBeNullAttribute]
private static JsDocLookupItemsFactory ourInstance;
    [NotNullAttribute]
public static JsDocLookupItemsFactory Instance { get; }
    public static JsDocLookupItemsFactory get_Instance();
    [NotNullAttribute]
public virtual ILookupItem CreateKeywordLookupItem(JsDocCodeCompletionContext context, string text, string suffix, TailType tailType, string desc, IconId customIconId);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JsDoc.JsDocLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.JsDocRangesProvider : ItemsProviderOfSpecificContext`1<JsDocCodeCompletionContext> {
    protected virtual TextLookupRanges GetDefaultRanges(JsDocCodeCompletionContext context);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JsDoc.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.JsonItemsProviderOnReferenceExpression : ItemsProviderOnReferenceExpressionBase {
    public JsonItemsProviderOnReferenceExpression(IJsCompletionTablesBuilder tablesBuilder);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.JsonRangesProvider : ItemsProviderOfSpecificContext`1<IJavaScriptCodeCompletionContext> {
    protected virtual TextLookupRanges GetDefaultRanges(IJavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.ItemsProviderForBowerPackages : PackageItemsProviderBase {
    private IJsonSchemaManager myJsonSchemaManager;
    public ItemsProviderForBowerPackages(IJsonSchemaManager jsonSchemaManager, ISchemaDownloader schemaDownloader, IShellLocks locks);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.ItemsProviderForJsonFilePathReferences : ItemsProviderOfSpecificContext`1<CompletionContextInStringLiterals> {
    private IJsonSchemaManager myJsonSchemaManager;
    private static List`1<Tuple`2<string, string>> ourGlobItems;
    public ItemsProviderForJsonFilePathReferences(IJsonSchemaManager jsonSchemaManager);
    private static ItemsProviderForJsonFilePathReferences();
    protected virtual bool IsAvailable(CompletionContextInStringLiterals context);
    protected virtual void TransformItems(CompletionContextInStringLiterals context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.ItemsProviderForJsonPathReferences : ItemsProviderOfSpecificContext`1<CompletionContextInStringLiterals> {
    private IJsonSchemaManager myJsonSchemaManager;
    public ItemsProviderForJsonPathReferences(IJsonSchemaManager jsonSchemaManager);
    protected virtual bool IsAvailable(CompletionContextInStringLiterals context);
    protected virtual void TransformItems(CompletionContextInStringLiterals context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.ItemsProviderForJsonSchema : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private IJsonSchemaManager myJsonSchemaManager;
    public ItemsProviderForJsonSchema(IJsonSchemaManager jsonSchemaManager);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    public static bool IsNonPackageNameItem(JavaScriptCodeCompletionContext context, IJsonSchemaManager schemaManager);
    private static JsonNodeContext ExtendContextForTsConfigHack(IJsonSchema schema, ITreeNode node, JsonNodeContext ctx);
    protected virtual void TransformItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    private static void AddItem(JavaScriptCodeCompletionContext context, IItemsCollector collector, string value, IconId image, string typeDesc, string textualDescription, bool trimQuotes, bool isPropertyName);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.ItemsProviderForLicenses : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private ApplicationPackagesFiles myFiles;
    private IJsonSchemaManager myJsonSchemaManager;
    public ItemsProviderForLicenses(IJsonSchemaManager jsonSchemaManager, ApplicationPackagesFiles files);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual void TransformItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.ItemsProviderForNpmPackages : PackageItemsProviderBase {
    private static string NpmRegistryUrl;
    private static string NpmReplicateApi;
    private static string NpmPublicApi;
    private IJsonSchemaManager myJsonSchemaManager;
    private Regex myKeyRegex;
    private Regex myVersionRegex;
    public ItemsProviderForNpmPackages(IJsonSchemaManager jsonSchemaManager, ISchemaDownloader schemaDownloader, IShellLocks locks);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.ItemsProviderForNugetPackages : PackageItemsProviderBase {
    private static Random ourRand;
    private IJsonSchemaManager myJsonSchemaManager;
    public bool IsDynamic { get; }
    public ItemsProviderForNugetPackages(IJsonSchemaManager jsonSchemaManager, ISchemaDownloader schemaDownloader, IShellLocks locks);
    private static ItemsProviderForNugetPackages();
    public virtual bool get_IsDynamic();
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.JsonSchemaLookupItem : TextLookupItemBase {
    private CodeCompletionContext myContext;
    private IconId myImage;
    private string myItemText;
    private string myDisplayNameText;
    private string myDescription;
    private bool myIsPropertyName;
    public IconId Image { get; }
    public string Text { get; }
    public JsonSchemaLookupItem(CodeCompletionContext context, IconId image, string itemText, string displayNameText, string displayTypeName, string description, bool isPropertyName, bool isDynamic);
    public virtual IconId get_Image();
    protected virtual RichText GetDisplayName();
    public virtual string get_Text();
    public sealed virtual RichTextBlock GetDescription();
    protected virtual void OnAfterComplete(ITextControl textControl, DocumentRange& nameRange, DocumentRange& decorationRange, TailType tailType, Suffix& suffix, IRangeMarker& caretPositionRangeMarker);
    private void ScheduleAutopopup(ITextControl textControl, DocumentOffset afterPos);
    public virtual MatchingResult Match(PrefixMatcher prefixMatcher);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.Schema.PackageItemsProviderBase : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private ISchemaDownloader mySchemaDownloader;
    private IShellLocks myLocks;
    public bool IsDynamic { get; }
    public EvaluationMode SupportedEvaluationMode { get; }
    public PackageItemsProviderBase(ISchemaDownloader schemaDownloader, IShellLocks locks);
    public virtual bool get_IsDynamic();
    public virtual EvaluationMode get_SupportedEvaluationMode();
    protected string ReadData(string url, string altUrl);
    protected virtual TextLookupRanges GetDefaultRanges(JavaScriptCodeCompletionContext context);
    protected void AddItem(JavaScriptCodeCompletionContext context, IItemsCollector collector, string value, IconId image, bool addQuotes, int rank, bool isPropertyName);
    protected string GetRequestTextForPackageName(ITreeNode treeNode, JavaScriptCodeCompletionContext context);
    protected static bool NightlyPackageVersionFilter(string it);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JSon.ZoneMarker : object {
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Jsx.Html.HtmlInJsxLookupItem : HtmlDeclaredElementLookupItem {
    private string myName;
    private bool myRequireBraces;
    public HtmlInJsxLookupItem(DeclaredElementInstance`1<IDeclaredElement> declaredElement, string name, string displayName, HtmlCodeCompletionContext context, PsiLanguageType languageType, TextLookupRanges ranges, bool requireBraces);
    protected virtual IReference BindReferenceAfterComplete(ITextControl textControl, DocumentRange nameRange, Action`1<IReference> withOldReferenceBeforeComplete);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Jsx.Html.HtmlInJsxReferencedItemsProvider : HtmlReferencedItemsProvider {
    public HtmlInJsxReferencedItemsProvider(IHtmlInJsxTokenNodeTypes tokenNodeTypes, HtmlSvgSchemeComponent htmlSvgSchemeComponent);
    protected virtual bool AddLookupItems(HtmlCodeCompletionContext context, IItemsCollector collector);
    protected virtual void CollectElement(string name, IDeclaredElement declaredElement, ImportantNames smartNames, HtmlCodeCompletionContext context, IItemsCollector collector);
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Jsx.Html.HtmlJsxCustomAttributeItem : TextLookupItem {
    private string myText;
    private IconId myImage;
    private int myCaretRightShift;
    public IconId Image { get; }
    public HtmlJsxCustomAttributeItem(string text, string content, IconId image, int caretRightShift);
    protected virtual RichText GetDisplayName();
    public virtual IconId get_Image();
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Jsx.Html.ZoneMarker : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Jsx.JsxCodeCompletionManager : LanguageSpecificCodeCompletionManager {
    public PsiLanguageType PsiLanguage { get; }
    public JsxCodeCompletionManager(CodeCompletionSettingsService codeCompletionSettings);
    public virtual SettingsScalarEntry GetSettingsEntry(ISettingsSchema settingsSchema);
    public virtual PsiLanguageType get_PsiLanguage();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Jsx.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.LookupItems.FunctionsKeywordLookupItem : TextLookupItem {
    [CompilerGeneratedAttribute]
private RazorTransitionCompletionContext <Context>k__BackingField;
    public RazorTransitionCompletionContext Context { get; }
    public FunctionsKeywordLookupItem(string keyword, RazorTransitionCompletionContext context);
    [CompilerGeneratedAttribute]
public RazorTransitionCompletionContext get_Context();
    protected SkippingTypingAssist GetSkippingTypingAssist();
    protected virtual void OnAfterComplete(ITextControl textControl, DocumentRange& nameRange, DocumentRange& decorationRange, TailType tailType, Suffix& suffix, IRangeMarker& caretPositionRangeMarker);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.LookupItems.RazorSectionNameLookupItem : HtmlDeclaredElementLookupItemBase {
    public RazorSectionNameLookupItem(DeclaredElementInstance`1<IDeclaredElement> declaredElement, string name, HtmlCodeCompletionContext context, PsiLanguageType languageType, TextLookupRanges ranges);
    protected virtual void FixInsertedText(IReference reference);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpCodeCompletionContext : RazorCodeCompletionContext {
    public RazorCSharpCodeCompletionContext(CodeCompletionContext context, HtmlReparsedCompletionContext unterminatedContext, TextLookupRanges ranges);
    public virtual DeclaredElementLookupItem CreateDeclaredElementLookupItem(string name, IDeclaredElement declaredElement);
}
[IntellisensePartAttribute("0")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpCodeCompletionContextProvider : RazorCodeCompletionContextProvider`1<RazorCSharpLanguage> {
    public RazorCSharpCodeCompletionContextProvider(HtmlCodeCompletionManager htmlCodeCompletionManager, IHtmlDeclaredElementTypes cache);
    protected virtual ISpecificCodeCompletionContext GetSpecificContext(CodeCompletionContext context, TextLookupRanges ranges, HtmlReparsedCompletionContext unterminatedContext);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpCompletingCharactersProvider : CompletingCharsProviderWithSetting`2<RazorCodeCompletionContext, RazorCompletingCharactersSettingsKey> {
    protected virtual Expression`1<Func`2<RazorCompletingCharactersSettingsKey, bool>> GetCompleteOnSpaceSettingKey();
    protected virtual Expression`1<Func`2<RazorCompletingCharactersSettingsKey, string>> GetNonCompletingCharactersSettingKey();
    protected virtual bool IsApplicable(RazorCodeCompletionContext context);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpDirectiveCompletionContextProvider : CodeCompletionContextProviderBase {
    [CompilerGeneratedAttribute]
private CSharpCodeCompletionManager <cSharpCodeCompletionManager>P;
    public RazorCSharpDirectiveCompletionContextProvider(CSharpCodeCompletionManager cSharpCodeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpReparsedCompletionContext : CSharpReparsedCompletionContext {
    private int myPrefixLength;
    private int myDocumentShift;
    public RazorCSharpReparsedCompletionContext(IFile file, TreeTextRange range, string newText, int prefixLength, int documentShift);
    protected virtual TreeTextRange GetRangeOfReference(int startOffsetInNewNode);
    public virtual DocumentRange ToDocumentRange(TreeTextRange treeRange);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpSimpleDirectiveCompletionContext : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    public string ContextId { get; }
    public TextLookupRanges Ranges { get; }
    public RazorCSharpSimpleDirectiveCompletionContext(CodeCompletionContext context, TextLookupRanges calculateDefaultRanges);
    public virtual string get_ContextId();
    [CompilerGeneratedAttribute]
public sealed virtual TextLookupRanges get_Ranges();
}
[IntellisensePartAttribute("0")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpSpecificCodeCompletionContextProvider : CSharpCodeCompletionContextProvider {
    [NotNullAttribute]
private ILanguageManager myLanguageManager;
    [NotNullAttribute]
private LookupItemsOwnerFactory myLookupItemsOwnerFactory;
    private static String[] ourPrefixes;
    private static Key`1<string> ourPrefixKey;
    public RazorCSharpSpecificCodeCompletionContextProvider(CSharpCodeCompletionManager cSharpCodeCompletionManager, ILanguageManager languageManager, LookupItemsOwnerFactory factory);
    private static RazorCSharpSpecificCodeCompletionContextProvider();
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
    protected virtual CSharpReparsedCompletionContext CreateReparseContext(CodeCompletionContext context, TreeTextRange selectedTreeRange, string newText);
    [CompilerGeneratedAttribute]
internal static bool <IsApplicable>g__IsAllowedChar|4_0(string s);
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.RazorCSharpTransitionCompletionContextProvider : CodeCompletionContextProviderBase {
    private ILanguageManager myLanguageManager;
    private CSharpCodeCompletionManager myCSharpCodeCompletionManager;
    public RazorCSharpTransitionCompletionContextProvider(ILanguageManager languageManager, CSharpCodeCompletionManager cSharpCodeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    public virtual ISpecificCodeCompletionContext GetCompletionContext(CodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.RazorCSharpLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.AddTrueFalse : ItemsProviderOfSpecificContext`1<RazorCSharpCodeCompletionContext> {
    protected virtual bool IsAvailable(RazorCSharpCodeCompletionContext context);
    protected virtual bool IsAvailable(IDeclaredElement declaredElement);
    [CanBeNullAttribute]
private static IHtmlAttributeName GetAttributeName(ITreeNode node);
    protected virtual bool AddLookupItems(RazorCSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.HideTModelTypeAlias : ItemsProviderOfSpecificContext`1<CSharpCodeCompletionContext> {
    protected virtual bool IsAvailable(CSharpCodeCompletionContext context);
    protected virtual void TransformItems(CSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.ImplementsDirectiveRule : ItemsProviderOfSpecificContext`1<CSharpCodeCompletionContext> {
    public EvaluationMode SupportedEvaluationMode { get; }
    public virtual EvaluationMode get_SupportedEvaluationMode();
    protected virtual bool IsAvailable(CSharpCodeCompletionContext context);
    protected virtual void TransformItems(CSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.RazorCSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.Keywords.RazorCSharpKeywordItemsProvider : ItemsProviderOfSpecificContext`1<RazorTransitionCompletionContext> {
    private static Key`1<HashSet`1<string>> ourAddedKeywordsKey;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <KeywordsToAutocomplete>k__BackingField;
    protected IEnumerable`1<string> Keywords { get; }
    protected ICollection`1<string> KeywordsToAutocomplete { get; }
    private static RazorCSharpKeywordItemsProvider();
    protected virtual bool IsAvailable(RazorTransitionCompletionContext context);
    [CompilerGeneratedAttribute]
protected virtual IEnumerable`1<string> get_Keywords();
    [CompilerGeneratedAttribute]
protected ICollection`1<string> get_KeywordsToAutocomplete();
    protected virtual bool AddLookupItems(RazorTransitionCompletionContext context, IItemsCollector collector);
    protected virtual TextLookupItem CreateLookupItem(RazorTransitionCompletionContext context, string keyword);
    protected virtual void TransformItems(RazorTransitionCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.RazorCSharpMvc6Language", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.Keywords.RazorCSharpMvc6KeywordItemsProvider : RazorCSharpMvcKeywordItemsProvider {
    protected IEnumerable`1<string> Keywords { get; }
    protected virtual IEnumerable`1<string> get_Keywords();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.RazorCSharpMvc7Language", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.Keywords.RazorCSharpMvc7KeywordItemsProvider : RazorCSharpMvc6KeywordItemsProvider {
    protected IEnumerable`1<string> Keywords { get; }
    protected virtual IEnumerable`1<string> get_Keywords();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.RazorCSharpMvc8Language", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.Keywords.RazorCSharpMvc8KeywordItemsProvider : RazorCSharpMvc7KeywordItemsProvider {
    protected IEnumerable`1<string> Keywords { get; }
    protected virtual IEnumerable`1<string> get_Keywords();
    protected virtual TextLookupItem CreateLookupItem(RazorTransitionCompletionContext context, string keyword);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.RazorCSharpMvcLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.Keywords.RazorCSharpMvcKeywordItemsProvider : RazorCSharpKeywordItemsProvider {
    protected IEnumerable`1<string> Keywords { get; }
    protected virtual IEnumerable`1<string> get_Keywords();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.ModelTypeExpressionRule : ItemsProviderOfSpecificContext`1<CSharpCodeCompletionContext> {
    protected virtual bool IsAvailable(CSharpCodeCompletionContext context);
    protected virtual void TransformItems(CSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.RazorCSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.RazorBindAttributeValueRule : ItemsProviderOfSpecificContext`1<RazorCSharpCodeCompletionContext> {
    private IRazorTokenNodeTypes myRazorTokenNodeTypes;
    public RazorBindAttributeValueRule(IRazorTokenNodeTypes razorTokenNodeTypes);
    protected virtual bool IsAvailable(RazorCSharpCodeCompletionContext context);
    private Nullable`1<bool> GetBindDirection(RazorCSharpCodeCompletionContext context);
    protected virtual void TransformItems(RazorCSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.RazorCSharpMvc8Language", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.RazorComponentBindEvent : ItemsProviderOfSpecificContext`1<RazorCSharpCodeCompletionContext> {
    protected virtual bool IsAvailable(RazorCSharpCodeCompletionContext context);
    protected virtual bool AddLookupItems(RazorCSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.RazorComponentLayoutRule : ItemsProviderOfSpecificContext`1<CSharpCodeCompletionContext> {
    public EvaluationMode SupportedEvaluationMode { get; }
    public virtual EvaluationMode get_SupportedEvaluationMode();
    protected virtual bool IsAvailable(CSharpCodeCompletionContext context);
    protected virtual void TransformItems(CSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.RazorCSharpKeywordAttributeRule : ItemsProviderOfSpecificContext`1<CSharpCodeCompletionContext> {
    protected virtual bool IsAvailable(CSharpCodeCompletionContext context);
    protected virtual void TransformItems(CSharpCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.RazorCSharpLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Rules.RazorPreserveWhitespaceRule : ItemsProviderOfSpecificContext`1<RazorCSharpSimpleDirectiveCompletionContext> {
    protected virtual AutocompletionBehaviour GetAutocompletionBehaviour(RazorCSharpSimpleDirectiveCompletionContext specificContext);
    protected virtual bool AddLookupItems(RazorCSharpSimpleDirectiveCompletionContext context, IItemsCollector collector);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Strategies.RazorCSharpAutomaticStrategyOnCharacter : HtmlAutomaticStrategyOnListedCharacters`2<IRazorFile, IRazorTokenNodeTypes> {
    private CSharpCodeCompletionManager myCSharpCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public RazorCSharpAutomaticStrategyOnCharacter(CSharpCodeCompletionManager cSharpCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Strategies.RazorCSharpAutomaticStrategyOnCharacter/<GetStartChars>d__4")]
protected virtual IEnumerable`1<StartChar<IRazorFile, IRazorTokenNodeTypes>> GetStartChars(IRazorTokenNodeTypes tokenNodeTypes);
    protected virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore contextBoundSettingsStore);
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Strategies.RazorCSharpAutomaticStrategyOnDirective : object {
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public RazorCSharpAutomaticStrategyOnDirective(ISettingsStore settingsStore);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool get_ForceHideCompletion();
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore settingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public sealed virtual bool AcceptsFile(IFile file, ITextControl textControl);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Strategies.RazorCSharpAutomaticStrategyOnDot : HtmlAutomaticStrategyOnListedCharacters`2<IRazorFile, IRazorTokenNodeTypes> {
    private CSharpCodeCompletionManager myCSharpCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public RazorCSharpAutomaticStrategyOnDot(CSharpCodeCompletionManager cSharpCodeCompletionManager, ISettingsStore settingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Strategies.RazorCSharpAutomaticStrategyOnDot/<GetStartChars>d__4")]
protected virtual IEnumerable`1<StartChar<IRazorFile, IRazorTokenNodeTypes>> GetStartChars(IRazorTokenNodeTypes tokenNodeTypes);
    protected virtual bool GetIntellisenseEnabled(IContextBoundSettingsStore contextBoundSettingsStore);
    public virtual PsiLanguageType get_Language();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.Strategies.RazorCSharpAutomaticStrategyOnSection : object {
    private CSharpCodeCompletionManager myCSharpCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public bool ForceHideCompletion { get; }
    public RazorCSharpAutomaticStrategyOnSection(CSharpCodeCompletionManager cSharpCodeCompletionManager, ISettingsStore settingsStore);
    public sealed virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
    public sealed virtual PsiLanguageType get_Language();
    public sealed virtual bool get_ForceHideCompletion();
    public sealed virtual bool AcceptTyping(char c, ITextControl textControl, IContextBoundSettingsStore boundSettingsStore);
    public sealed virtual bool ProcessSubsequentTyping(char c, ITextControl textControl);
    public virtual bool AcceptsFile(IFile file, ITextControl textControl);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.CSharp.ZoneMarker : object {
}
public interface JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.IRazorSpecificCodeCompletionContext {
    public TextLookupRanges Ranges { get; }
    public abstract virtual TextLookupRanges get_Ranges();
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.RazorCodeCompletionContext : HtmlCodeCompletionContext {
    public RazorCodeCompletionContext(CodeCompletionContext context, HtmlReparsedCompletionContext unterminatedContext, TextLookupRanges ranges);
    public virtual void ReparseAfterCompletionIfNeeded();
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.RazorCodeCompletionContextProvider`1 : HtmlCodeCompletionContextProvider {
    public RazorCodeCompletionContextProvider`1(HtmlCodeCompletionManager htmlCodeCompletionManager, IHtmlDeclaredElementTypes cache);
    protected virtual ISpecificCodeCompletionContext GetSpecificContext(CodeCompletionContext context, TextLookupRanges ranges, HtmlReparsedCompletionContext unterminatedContext);
    public virtual bool IsApplicable(CodeCompletionContext context);
    protected virtual bool ReferenceIsAcceptableForHtmlCompletion(IReference referenceToComplete, ITreeNode elementToComplete);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.IntelliSenseCompletingCharactersSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "RazorSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.RazorCompletingCharactersSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "CompleteOnSpaceSettingDescription")]
public bool CompleteOnSpace;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "NonCompletingCharactersSettingDescription")]
public string NonCompletingCharacters;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.RazorCompletionRangesProvider : ItemsProviderOfSpecificContext`1<RazorTransitionCompletionContext> {
    protected virtual TextLookupRanges GetDefaultRanges(RazorTransitionCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.RazorTextTagItemProvider : ItemsProviderOfSpecificContext`1<RazorCodeCompletionContext> {
    protected virtual bool IsAvailable(RazorCodeCompletionContext context);
    protected virtual bool AddLookupItems(RazorCodeCompletionContext context, IItemsCollector collector);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.RazorTransitionCompletionContext : SpecificCodeCompletionContext {
    [CompilerGeneratedAttribute]
private TextLookupRanges <Ranges>k__BackingField;
    public TextLookupRanges Ranges { get; }
    public string ContextId { get; }
    public RazorTransitionCompletionContext(CodeCompletionContext context, TextLookupRanges ranges);
    [CompilerGeneratedAttribute]
public sealed virtual TextLookupRanges get_Ranges();
    public virtual string get_ContextId();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.Rules.MvcActionRazorTransformationRule : MvcActionTransformationRule`1<RazorCodeCompletionContext> {
    protected virtual bool IsAvailable(RazorCodeCompletionContext context);
    protected virtual void TransformItems(RazorCodeCompletionContext context, IItemsCollector collector);
    protected virtual void DecorateItems(RazorCodeCompletionContext context, IReadOnlyCollection`1<ILookupItem> items);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.Rules.MvcOnlyInTagHelperRule : ItemsProviderOfSpecificContext`1<RazorCodeCompletionContext> {
    protected virtual bool IsAvailable(RazorCodeCompletionContext context);
    protected virtual void TransformItems(RazorCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.Rules.RazorTagHelperTransformationRule : ItemsProviderOfSpecificContext`1<RazorCodeCompletionContext> {
    public bool IsFinal { get; }
    protected virtual bool IsAvailable(RazorCodeCompletionContext context);
    public virtual bool get_IsFinal();
    protected virtual bool AddLookupItems(RazorCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.KnownLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.Rules.RazorVisibilityRule : EditorBrowsableVisibilityRule {
    protected virtual void TransformItems(ISpecificCodeCompletionContext context, IItemsCollector collector);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.AutopopupEnabledSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "RazorSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.Settings.RazorAutopopupEnabledSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "AfterSpaceInRazorDirectivesSettingsDescription")]
public AutopopupType OnSpaceInDirective;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "AfterSpaceInsectionSettingDescription")]
public AutopopupType OnSpaceInSection;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "AfterAndSettingDescription")]
public AutopopupType OnPunctuation;
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Razor.ZoneMarker : object {
}
[SolutionComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.AutomaticStrategies.TypeScriptAutomaticStrategyOnDot : JavaScriptAutomaticStrategyOnDotBase {
    private TypeScriptCodeCompletionManager myTypeScriptCodeCompletionManager;
    private SettingsScalarEntry mySettingsScalarEntry;
    public PsiLanguageType Language { get; }
    public TypeScriptAutomaticStrategyOnDot(TypeScriptCodeCompletionManager typeScriptCodeCompletionManager, ISettingsStore settingsStore);
    public virtual PsiLanguageType get_Language();
    protected virtual bool ShouldCompleteIfTokenBeforeDot(ITokenNode previousMeaningfulToken);
    public virtual bool IsEnabledInManager(IContextBoundSettingsStore boundSettingsStore);
    public virtual AutopopupType IsEnabledInSettings(IContextBoundSettingsStore settingsStore, ITextControl textControl);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.GenerateConstructorTsBehaviour : TextualBehavior`1<TextualInfo> {
    private String[] myNames;
    public GenerateConstructorTsBehaviour(String[] names, TextualInfo info);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
    [CompilerGeneratedAttribute]
private void <Accept>b__2_0(IGeneratorContext context);
    [CompilerGeneratedAttribute]
private bool <Accept>b__2_1(IGeneratorElement e);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.GenerateFunctionTsBehaviour : TextualBehavior`1<TextualInfo> {
    private IPsiServices myServices;
    private string mySignatureDescription;
    private string myReturnTypeDescription;
    public GenerateFunctionTsBehaviour(IPsiServices services, string signatureDescription, string returnTypeDescription, TextualInfo info);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.GenerateItemTsBehaviour : TextualBehavior`1<TextualInfo> {
    private string myName;
    public GenerateItemTsBehaviour(string name, TextualInfo info);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
    [CompilerGeneratedAttribute]
private void <Accept>b__2_0(IGeneratorContext context);
    [CompilerGeneratedAttribute]
private bool <Accept>b__2_1(IGeneratorElement e);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.GenerateLambdaTsBehaviour : TextualBehavior`1<TextualInfo> {
    private bool myIsFunc;
    private IPsiServices myServices;
    private String[] myParamNames;
    public GenerateLambdaTsBehaviour(bool isFunc, IPsiServices services, String[] paramNames, TextualInfo info);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.GenerateMethodTsBehaviour : TextualBehavior`1<TextualInfo> {
    private ITsClassLikeDeclaration myClassLike;
    private IPsiServices myServices;
    private string mySignatureDescription;
    private string myReturnTypeDescription;
    public GenerateMethodTsBehaviour(ITsClassLikeDeclaration containerClass, IPsiServices services, string signatureDescription, string returnTypeDescription, TextualInfo info);
    public virtual void Accept(ITextControl textControl, DocumentRange nameRange, LookupItemInsertType insertType, Suffix suffix, ISolution solution, bool keepCaretStill);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.TsConstructorRule : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    public EvaluationMode SupportedEvaluationMode { get; }
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    public virtual EvaluationMode get_SupportedEvaluationMode();
    protected virtual TextLookupRanges GetDefaultRanges(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    private void AddItem(string identity, JavaScriptCodeCompletionContext context, IItemsCollector collector, String[] names);
    [NotNullAttribute]
private static RichText GetDisplayName(string name);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.TsLambdaRule : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    public EvaluationMode SupportedEvaluationMode { get; }
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    public virtual EvaluationMode get_SupportedEvaluationMode();
    protected virtual TextLookupRanges GetDefaultRanges(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    private static void AddItem(JavaScriptCodeCompletionContext context, IItemsCollector collector, string identity, Func`2<LookupItem`1<TextualInfo>, ILookupItemBehavior> fGetBehavior);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Generate.TsOverrideRule : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    public EvaluationMode SupportedEvaluationMode { get; }
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    public virtual EvaluationMode get_SupportedEvaluationMode();
    protected virtual TextLookupRanges GetDefaultRanges(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    private void AddItem(JavaScriptCodeCompletionContext context, IItemsCollector collector, string name, string typeName, IconId image);
    [NotNullAttribute]
private static RichText GetDisplayName(string name, string typeName);
}
public interface JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Smart.ITsSmartCompletionSourceItemsProvider {
    [CanBeNullAttribute]
public abstract virtual ISymbolTable GetSymbolTableToFilter(IJavaScriptCodeCompletionContext context);
    [NotNullAttribute]
public abstract virtual ILookupItem CreateLookupItem(IJavaScriptCodeCompletionContext context, ISymbolInfo info);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Smart.TsSmartCompletionProvider : TsSmartCompletionProviderBase {
    public TsSmartCompletionProvider(IEnumerable`1<ITsSmartCompletionSourceItemsProvider> sourceItemsProviders);
    protected virtual ITsType FindMatchedType(JavaScriptCodeCompletionContext context, IJavaScriptTypeOwner declaredElement, ITsType itemTsType, ITsType expectedType);
    protected virtual ITsType GetExpectedTsType(JavaScriptCodeCompletionContext context, IReferenceExpression node);
}
public abstract class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Smart.TsSmartCompletionProviderBase : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    private IEnumerable`1<ITsSmartCompletionSourceItemsProvider> mySourceItemsProviders;
    protected TsSmartCompletionProviderBase(IEnumerable`1<ITsSmartCompletionSourceItemsProvider> sourceItemsProviders);
    [CanBeNullAttribute]
protected abstract virtual ITsType FindMatchedType(JavaScriptCodeCompletionContext context, IJavaScriptTypeOwner declaredElement, ITsType itemTsType, ITsType expectedType);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected abstract virtual ITsType GetExpectedTsType(JavaScriptCodeCompletionContext context, IReferenceExpression node);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Smart.TsSmartCompletionSourceItemsGeneralProvider : object {
    public sealed virtual ISymbolTable GetSymbolTableToFilter(IJavaScriptCodeCompletionContext context);
    public sealed virtual ILookupItem CreateLookupItem(IJavaScriptCodeCompletionContext context, ISymbolInfo info);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Smart.TsSmartCompletionThisQualifiedProvider : object {
    public sealed virtual ISymbolTable GetSymbolTableToFilter(IJavaScriptCodeCompletionContext context);
    public sealed virtual ILookupItem CreateLookupItem(IJavaScriptCodeCompletionContext context, ISymbolInfo info);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.Smart.TsSmartCompletionUnderNewProvider : TsSmartCompletionProviderBase {
    public TsSmartCompletionUnderNewProvider(IEnumerable`1<ITsSmartCompletionSourceItemsProvider> sourceItemsProviders);
    protected virtual ITsType FindMatchedType(JavaScriptCodeCompletionContext context, IJavaScriptTypeOwner declaredElement, ITsType itemTsType, ITsType expectedType);
    protected virtual ITsType GetExpectedTsType(JavaScriptCodeCompletionContext context, IReferenceExpression node);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsImportCompletionItemsProvider : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    protected virtual AutocompletionBehaviour GetAutocompletionBehaviour(JavaScriptCodeCompletionContext specificContext);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsItemsProviderOnBinaryExpressionAsGenericArgumentList : ItemsProviderOfSpecificContext`1<IJavaScriptCodeCompletionContext> {
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(IJavaScriptCodeCompletionContext context, IItemsCollector collector);
    private ISymbolTable GetSymbolTable(IJavaScriptCodeCompletionContext context, ITsReferenceExpression referenceExpression, IJsResolvedType resolvedQualifier);
    private JsPrimitive GetPrimitive(ITsType type);
    private void AddLookupItem(IJavaScriptCodeCompletionContext context, IItemsCollector collector, ISymbolInfo info);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsItemsProviderOnReferenceExpression : JsItemsProviderOnReferenceExpression {
    public CompletionMode SupportedCompletionMode { get; }
    public TsItemsProviderOnReferenceExpression(IJsCompletionTablesBuilder tablesBuilder);
    public virtual CompletionMode get_SupportedCompletionMode();
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual bool ShouldCompleteIfTokenBeforeDot(ITokenNode beforeDot);
    protected virtual LookupFocusBehaviour GetLookupFocusBehaviour(JavaScriptCodeCompletionContext context);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
    private bool AddDoubleCompletionItems(JavaScriptCodeCompletionContext context, IItemsCollector collector, IReferenceExpressionReference referenceExpressionReference, JsTypeResolveResult qualifierResolvedType, VariableDeclarationDetector variableDeclaration, HashSet`1<string> names);
    protected void CollectElementStrongContext(ISymbolInfo symbolInfo, IItemsCollector collector, IJavaScriptCodeCompletionContext context, VariableDeclarationDetector variableDeclaration, int plus);
    protected virtual TextLookupRanges GetDefaultRanges(JavaScriptCodeCompletionContext context);
    private static bool ElementShouldBeFilteredOut(IJavaScriptCodeCompletionContext context, IDeclaredElement declaredElement);
    private static bool CheckUpperLevelItems(ITsClassLikeDeclaration parentRer, ITsTypeElement typeElementToCheckAgainst, JsResolveContext resolveContext);
    protected bool AddItemsFromSymbolTable(JavaScriptCodeCompletionContext completionContext, IItemsCollector collector, IJavaScriptCompleteableReference reference, VariableDeclarationDetector variableDeclaration, HashSet`1<string> names);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsKeywordItemsProvider : JavaScriptCompletionItemsProviderKeywords {
    protected virtual IKeywordCompletionGenerator GetCompletionGenerator(JavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsLiteralAndEnumTypeItemsProvider : JavaScriptPossibleDuplicateItemsProvider`1<JavaScriptCodeCompletionContext> {
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsLiteralAndEnumTypeItemsProvider/<GetLookupItems>d__1")]
protected virtual IEnumerable`1<ILookupItem> GetLookupItems(JavaScriptCodeCompletionContext context);
    private IEnumerable`1<ILookupItem> GetStringItems(JavaScriptCodeCompletionContext context, string value, bool displayQuoted);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsLiteralAndEnumTypeItemsProvider/<GetItems>d__3")]
private IEnumerable`1<ILookupItem> GetItems(JavaScriptCodeCompletionContext context, string value);
    protected virtual void AddItem(JavaScriptCodeCompletionContext context, ILookupItem item, IItemsCollector collector);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsLiteralAndEnumTypeItemsProvider/<GetLiteralTypes>d__5")]
private static IEnumerable`1<IJsResolvedType> GetLiteralTypes(IJsResolvedType type, JsResolveContext resolveContext);
    protected virtual ILookupItem MergeItems(ILookupItem item, ILookupItem otherItem);
    private static ILookupItem PrepareItem(ILookupItem item);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "0")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsPostfixTemplatesProvider : JsPostfixTemplatesProvider {
    public TsPostfixTemplatesProvider(PostfixTemplatesManager templatesManager, UsageStatistics usageStatistics, JavaScriptPostfixTemplateContextFactory postfixContextFactory);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsThisQualifiedItemsProvider : ItemsProviderOfSpecificContext`1<IJavaScriptCodeCompletionContext> {
    protected virtual bool AddLookupItems(IJavaScriptCodeCompletionContext context, IItemsCollector collector);
    protected virtual bool IsAvailable(IJavaScriptCodeCompletionContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Rules.TsxCompletionItemsProvider : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    protected virtual void TransformItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Feature.Services.CodeCompletion.Settings.IntellisenseEnabledSettingsKey", "JetBrains.ReSharper.Features.Web.Resources.Strings", "OverrideVSIntelliSenseForTypeScriptSettingDescription")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Settings.IntellisenseEnabledSettingTypeScript : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Features.Web.Resources.Strings", "TypeScriptTsFilesSettingDescription")]
public bool IntellisenseEnabled;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.Settings.TypeScriptCodeCompletionManager : LanguageSpecificCodeCompletionManager {
    public PsiLanguageType PsiLanguage { get; }
    public TypeScriptCodeCompletionManager(CodeCompletionSettingsService codeCompletionSettings);
    public virtual SettingsScalarEntry GetSettingsEntry(ISettingsSchema settingsSchema);
    public virtual PsiLanguageType get_PsiLanguage();
}
[IntellisensePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.TsCodeCompletionContextProvider : JavaScriptCodeCompletionContextProvider {
    private TypeScriptCodeCompletionManager myTypeScriptCodeCompletionManager;
    public TsCodeCompletionContextProvider(TypeScriptCodeCompletionManager typeScriptCodeCompletionManager, JavaScriptCodeCompletionManager codeCompletionManager);
    public virtual bool IsApplicable(CodeCompletionContext context);
    protected virtual bool EnabledInSettings(CodeCompletionContext context);
}
public static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.TsCompletionTokenUtil : object {
    public static bool ShouldComplete(ITokenNode tokenBeforeDot);
}
public static class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.TsThisQualifiedCompletionUtil : object {
    [CanBeNullAttribute]
public static ISymbolTable GetSymbolTableOfThisQualifier(IJavaScriptCodeCompletionContext context);
    public static bool IsInClassMember(IJavaScriptCodeCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.TypeScriptLookupItemsFactory : JavaScriptLookupItemsFactory {
    private static TypeScriptLookupItemsFactory ourInstance;
    public static TypeScriptLookupItemsFactory Instance { get; }
    public static TypeScriptLookupItemsFactory get_Instance();
    public virtual LookupItem`1<JavaScriptDeclaredElementInfo> CreateDeclaredElementLookupItemStrongContext(IJavaScriptCodeCompletionContext context, string name, IDeclaredElement declaredElement, bool bind);
    public virtual ILookupItem CreateDeclaredElementLookupItemStrongContextThisQualified(IJavaScriptCodeCompletionContext context, string name, IDeclaredElement declaredElement, bool bind);
    protected virtual JavaScriptDeclaredElementPresentation`1<JavaScriptDeclaredElementInfo> CreateElementPresentation(IDeclaredElement declaredElement, JavaScriptDeclaredElementInfo info, IPsiSourceFile currentSourceFile);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.TypeScript.ZoneMarker : object {
}
[IntellisensePartAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Web.WinRT.HtmlWinRTCompletingCharsProvider : CompletingCharsProviderWithSettingOther`1<HtmlCodeCompletionContext> {
    protected virtual bool IsApplicable(HtmlCodeCompletionContext context);
    protected virtual CompletionAction IsCharacterAcceptable(char c, HtmlCodeCompletionContext context, IContextBoundSettingsStore settingsStore);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Web.WinRT.HtmlWinRTControlItemsProvider : ItemsProviderOfSpecificContext`1<HtmlCodeCompletionContext> {
    protected virtual bool IsAvailable(HtmlCodeCompletionContext context);
    [CanBeNullAttribute]
public TextLookupRanges TryGetRanges(HtmlCodeCompletionContext context);
    protected virtual bool AddLookupItems(HtmlCodeCompletionContext context, IItemsCollector collector);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Web.WinRT.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.WebCobfigCompletionRangesProvider : ItemsProviderOfSpecificContext`1<WebConfigCompletionContext> {
    protected virtual TextLookupRanges GetDefaultRanges(WebConfigCompletionContext context);
}
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.WebConfigCodeCompletionReparsedContext : XmlReparsedCodeCompletionContext {
    public WebConfigCodeCompletionReparsedContext(IFile file, TreeTextRange range, string newText);
}
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.WebConfigCompletionContext : XmlCodeCompletionContext {
    [CompilerGeneratedAttribute]
private ISymbolCache <SymbolCache>k__BackingField;
    [NotNullAttribute]
public ISymbolCache SymbolCache { get; }
    public string ContextId { get; }
    public WebConfigCompletionContext(CodeCompletionContext context, TextLookupRanges completionRanges, XmlReparsedCodeCompletionContext unterminatedContext);
    [CompilerGeneratedAttribute]
public ISymbolCache get_SymbolCache();
    public virtual string get_ContextId();
}
[IntellisensePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.WebConfigCompletionContextProvider : XmlCodeCompletionContextProvider {
    protected virtual IXmlFile IsAvailableImpl(CodeCompletionContext context);
    protected virtual XmlReparsedCodeCompletionContext CreateUnterminatedContext(IXmlFile xmlFile, CodeCompletionContext context);
    protected virtual ISpecificCodeCompletionContext CreateSpecificCompletionContext(CodeCompletionContext context, TextLookupRanges ranges, XmlReparsedCodeCompletionContext unterminatedContext);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.WebConfigItemsProviderBasic : ItemsProviderWithSymbolTable`3<WebConfigCompletionContext, ICompletableReference, IWebConfigFile> {
    protected virtual bool IsAvailable(WebConfigCompletionContext context);
    protected virtual TextLookupRanges EvaluateRanges(WebConfigCompletionContext context);
    protected virtual ICompletableReference GetReference(WebConfigCompletionContext context);
    protected virtual ISymbolTable GetCompletionSymbolTable(ICompletableReference reference, WebConfigCompletionContext context);
    protected virtual bool AddLookupItems(WebConfigCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.WebConfigPathItemsProvider : ItemsProviderWithSymbolTable`3<WebConfigCompletionContext, IPathReference, IWebConfigFile> {
    protected virtual bool IsAvailable(WebConfigCompletionContext context);
    protected virtual TextLookupRanges EvaluateRanges(WebConfigCompletionContext context);
    protected virtual IPathReference GetReference(WebConfigCompletionContext context);
    protected virtual ISymbolTable GetCompletionSymbolTable(IPathReference reference, WebConfigCompletionContext context);
    protected virtual ILookupItem CreateLookupItem(string name, DeclaredElementInstance`1<IDeclaredElement> instance, WebConfigCompletionContext context, TextLookupRanges ranges, TailType tailType);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
internal class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.WebConfigTypeItemsProvider : ItemsProviderWithSymbolTable`3<WebConfigCompletionContext, WebConfigTypeReference, IWebConfigFile> {
    protected virtual bool IsAvailable(WebConfigCompletionContext context);
    protected virtual TextLookupRanges EvaluateRanges(WebConfigCompletionContext context);
    protected virtual WebConfigTypeReference GetReference(WebConfigCompletionContext context);
    protected virtual ILookupItem CreateLookupItem(string name, DeclaredElementInstance`1<IDeclaredElement> instance, WebConfigCompletionContext context, TextLookupRanges ranges, TailType tailType);
    protected virtual ISymbolTable GetCompletionSymbolTable(WebConfigTypeReference reference, WebConfigCompletionContext context);
    private static INamespace GetNamespaceQualifier(IQualifiableReference reference);
    private static List`1<ITypeElement> FetchTypeElements(ISymbolScope declarationsCache, bool caseSensitive, INamespace nspace, WebConfigCompletionContext context);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.WebConfig.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.CodeCompletion.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Asp.AspTagCandidate : HtmlTagCandidateBase {
    private ICollection`1<ISymbolInfo> myTable;
    private RichTextBlock myObsoleteDescription;
    private bool myIsObsolete;
    public bool IsObsolete { get; }
    public RichTextBlock ObsoleteDescription { get; }
    public AspTagCandidate(IFile file, ICollection`1<ISymbolInfo> table, IType type, IAspTag tag, RichTextBlock description, IHtmlTagHeader htmlTagHeader, ITagAttribute currentAttribute, IDeclaredElementDescriptionPresenter presenter);
    protected virtual bool IsValid();
    public virtual bool IsParameterRecognized(string attribute);
    public virtual bool get_IsObsolete();
    public virtual RichTextBlock get_ObsoleteDescription();
}
[ParameterInfoContextFactoryAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Asp.AspTagParameterInfoContextFactory : HtmlTagParameterInfoContextFactory {
    public AspTagParameterInfoContextFactory(PsiLanguageType language);
    protected virtual HtmlTagCandidateBase GetCandidate(IHtmlTagHeader htmlTagHeader, IFile file, ITagAttribute currentAttribute);
    private static void AddSymbolTableToListSorted(ISymbolTable symbolTable, OrderedHashSet`1<ISymbolInfo> members);
}
[DeclaredElementDescriptionProviderAttribute("16")]
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Asp.DescriptionAttributeProvider : object {
    [NotNullAttribute]
private object myLockObject;
    private DescriptionAttributeInfo[] myDescriptionAttributeInfos;
    public int Priority { get; }
    private string GetDescription(DescriptionAttributeInfo info, IPsiAssembly assembly, string key);
    public static bool IsHiddenFromDesigner(IAttributesOwner property, EditorBrowsableProcessingType editorBrowsableProcessing);
    public static bool IsHiddenViaEditorBrowsable(IAttributesOwner property, EditorBrowsableProcessingType editorBrowsableProcessing);
    public static bool IsHiddenViaDesignerSerializationVisibility(IAttributesOwner property);
    public static bool IsHiddenViaBrowsable(IAttributesOwner property);
    public string GetDescriptionFromAttributes(IAttributesOwner member, IClrTypeName typeName);
    public string GetDescriptionFromAttributes(IAttributesOwner member);
    public sealed virtual RichTextBlock GetElementDescription(IDeclaredElement element, DeclaredElementDescriptionStyle style, PsiLanguageType language, IPsiModule module);
    public sealed virtual Nullable`1<bool> IsElementObsolete(IDeclaredElement element, RichTextBlock& obsoleteDescription, DeclaredElementDescriptionStyle style);
    public sealed virtual int get_Priority();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Asp.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Html.HtmlTagCandidate : HtmlTagCandidateBase {
    [NotNullAttribute]
private IHtmlTagDeclaredElement myHtmlTag;
    [NotNullAttribute]
private IHtmlTagDescription myHtmlTagDescription;
    private PsiLanguageType myLanguageType;
    private IDeclaredElementDescriptionPresenter myPresenter;
    private IPsiSourceFile mySourceFile;
    private int myOffset;
    public bool IsObsolete { get; }
    public RichTextBlock ObsoleteDescription { get; }
    public HtmlTagCandidate(IHtmlTagDeclaredElement htmlTag, IHtmlTagDescription htmlTagDescription, PsiLanguageType languageType, IDeclaredElementDescriptionPresenter presenter, IHtmlTagHeader htmlTagHeader, ITagAttribute currentAttribute, IPsiSourceFile sourceFile, int offset);
    protected void AddAttributeInfos();
    protected virtual bool IsValid();
    public virtual bool IsParameterRecognized(string attribute);
    public virtual bool get_IsObsolete();
    public virtual RichTextBlock get_ObsoleteDescription();
}
public abstract class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Html.HtmlTagCandidateBase : CachingCandidate {
    private ParamPresentationInfo[] myParameters;
    private RichTextBlock myDescription;
    [CanBeNullAttribute]
private IHtmlTagHeader myHtmlTagHeader;
    [CanBeNullAttribute]
private ITagAttribute myCurrentAttribute;
    [CanBeNullAttribute]
private AttributeInfo mySuggestedAttribute;
    [CompilerGeneratedAttribute]
private bool <IsFilteredOut>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeInfo> <AttributeInfos>k__BackingField;
    public bool IsFilteredOut { get; public set; }
    public int PositionalParameterCount { get; }
    public ITagAttribute CurrentAttribute { get; }
    public bool IsObsolete { get; }
    public RichTextBlock ObsoleteDescription { get; }
    public string SuggestedAttribute { get; }
    protected IHtmlTagHeader HtmlTagHeader { get; }
    protected List`1<AttributeInfo> AttributeInfos { get; }
    protected HtmlTagCandidateBase(RichTextBlock description, IHtmlTagHeader htmlTagHeader, ITagAttribute currentAttribute);
    [CompilerGeneratedAttribute]
public virtual bool get_IsFilteredOut();
    [CompilerGeneratedAttribute]
public virtual void set_IsFilteredOut(bool value);
    public virtual int get_PositionalParameterCount();
    public ITagAttribute get_CurrentAttribute();
    public virtual bool get_IsObsolete();
    public virtual RichTextBlock get_ObsoleteDescription();
    public string get_SuggestedAttribute();
    protected IHtmlTagHeader get_HtmlTagHeader();
    [CompilerGeneratedAttribute]
protected List`1<AttributeInfo> get_AttributeInfos();
    protected void AddUnrecognizedParameters();
    protected virtual bool IsValid();
    protected virtual RichText GetSignatureInternal(String[] namedArguments, ParameterInfoSettings settings, TextRange[]& parameterRanges, TextRange& returnTypeRange, Int32[]& mapToOriginalOrder, ExtensionMethodInfo& extensionMethodInfo, RichText[]& annotations);
    public virtual void GetParametersInfo(ParamPresentationInfo[]& paramInfos, Int32& paramsParameterIndex);
    public virtual RichTextBlock GetDescription(ParameterInfoSettings settings);
    public virtual bool Matches(IDeclaredElement signature);
    protected virtual IList`1<string> GetParameterNames();
    public abstract virtual bool IsParameterRecognized(string attribute);
    public virtual IList`1<TextStyle> GetParameterStyles();
    [CompilerGeneratedAttribute]
private void <GetParametersInfo>b__29_0();
}
[ParameterInfoContextFactoryAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Html.HtmlTagParameterInfoContextFactory : object {
    private PsiLanguageType myLanguage;
    [NotNullAttribute]
private static Char[] IMPORTANT_CHARS;
    public PsiLanguageType Language { get; }
    public IEnumerable`1<char> ImportantChars { get; }
    public HtmlTagParameterInfoContextFactory(PsiLanguageType language);
    private static HtmlTagParameterInfoContextFactory();
    protected virtual HtmlTagCandidateBase GetCandidate(IHtmlTagHeader htmlTagHeader, IFile file, ITagAttribute currentAttribute);
    public sealed virtual bool IsIntellisenseEnabled(ISolution solution, IContextBoundSettingsStore settingsStore);
    public virtual IParameterInfoContext CreateContext(ISolution solution, DocumentOffset caretOffset, DocumentOffset expectedLParenthOffset, char invocationChar, IContextBoundSettingsStore settingsStore);
    public virtual PsiLanguageType get_Language();
    public sealed virtual bool ShouldPopup(DocumentOffset caretOffset, char c, ISolution solution, IContextBoundSettingsStore settingsStore);
    public sealed virtual IEnumerable`1<char> get_ImportantChars();
}
internal class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Html.HtmTagParameterInfoContext : ParameterInfoContextBase {
    [CompilerGeneratedAttribute]
private IHtmlTagHeader <TagHeader>k__BackingField;
    public IHtmlTagHeader TagHeader { get; public set; }
    public HtmTagParameterInfoContext(int parameter, HtmlTagCandidateBase candidate, DocumentRange range, int selectedInvocable, IHtmlTagHeader tagHeader, ParameterInfoSettings settings);
    [CompilerGeneratedAttribute]
public IHtmlTagHeader get_TagHeader();
    [CompilerGeneratedAttribute]
public void set_TagHeader(IHtmlTagHeader value);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.Html.ZoneMarker : object {
}
[ParameterInfoContextFactoryAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.HtmlInJsx.HtmlInJsxTagParameterInfoContextFactory : HtmlTagParameterInfoContextFactory {
    public HtmlInJsxTagParameterInfoContextFactory(PsiLanguageType language);
    public virtual IParameterInfoContext CreateContext(ISolution solution, DocumentOffset caretOffset, DocumentOffset expectedLParenthOffset, char invocationChar, IContextBoundSettingsStore settingsStore);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Intellisense.ParameterInfo.HtmlInJsx.ZoneMarker : object {
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.Html.HtmlAttributeValueTextExtractor : ElementTextExtractor`1<IHtmlAttributeValue> {
    private ISpellingAndGrammarDataBuilder mySpellingAndGrammarDataBuilder;
    private IRequiredSpellCheckingModesProvider myRequiredRequiredSpellCheckingModesProvider;
    private static HashSet`1<string> ourAnalyzableAttributes;
    public HtmlAttributeValueTextExtractor(ISpellingAndGrammarDataBuilder spellingAndGrammarDataBuilder, IRequiredSpellCheckingModesProvider requiredRequiredSpellCheckingModesProvider, GrammarAndSpellingMeasurements grammarAndSpellingMeasurements);
    private static HtmlAttributeValueTextExtractor();
    public virtual bool Extract(IHtmlAttributeValue htmlAttributeValue, ElementTextExtractorContext context);
}
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.Html.HtmlTagModificationContext : TextModificationContextStub {
    public HtmlTagModificationContext(IHtmlTag tag, ITextModificationContext parentContext);
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.Html.HtmlTagTextExtractor : ElementTextExtractor`1<IHtmlTag> {
    private HashSet`1<string> myInlinableTags;
    public HtmlTagTextExtractor(ISpellingAndGrammarDataBuilder reSpellingAndGrammarDataBuilder, IRequiredSpellCheckingModesProvider requiredRequiredSpellCheckingModesProvider, GrammarAndSpellingMeasurements measurements);
    public virtual bool Extract(IHtmlTag htmlTag, ElementTextExtractorContext context);
    private bool CanBeInlined(IHtmlTag htmlTag, SparseTextToCheck& textToCheck, Boolean& skipSpaces);
    [CompilerGeneratedAttribute]
private void <Extract>g__Flush|1_0(<>c__DisplayClass1_0& );
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.Html.ZoneMarker : object {
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.IdentifierExpressionTextExtractor : JavaScriptIdentifierTextExtractor`1<IIdentifierExpression> {
    public IdentifierExpressionTextExtractor(ISpellingAndGrammarDataBuilder reSpellingAndGrammarDataBuilder, IRequiredSpellCheckingModesProvider requiredRequiredSpellCheckingModesProvider, GrammarAndSpellingMeasurements measurements, JavaScriptServices javaScriptServices);
}
public abstract class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.JavaScriptIdentifierTextExtractor`1 : ElementTextExtractor`1<TNode> {
    private JavaScriptServices myJavaScriptServices;
    protected JavaScriptIdentifierTextExtractor`1(ISpellingAndGrammarDataBuilder reSpellingAndGrammarDataBuilder, IRequiredSpellCheckingModesProvider requiredRequiredSpellCheckingModesProvider, GrammarAndSpellingMeasurements measurements, JavaScriptServices javaScriptServices);
    public virtual bool Extract(TNode identifierExpression, ElementTextExtractorContext context);
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.JavaScriptLiteralExpressionTextExtractor : ElementTextExtractor`1<IJavaScriptLiteralExpression> {
    public JavaScriptLiteralExpressionTextExtractor(ISpellingAndGrammarDataBuilder reSpellingAndGrammarDataBuilder, IRequiredSpellCheckingModesProvider requiredRequiredSpellCheckingModesProvider, GrammarAndSpellingMeasurements measurements);
    public virtual bool Extract(IJavaScriptLiteralExpression literalExpression, ElementTextExtractorContext context);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.JSAbbreviationsSettingsReader : object {
    public sealed virtual ISet`1<string> ReadAbbreviations(IContextBoundSettingsStoreLive storeLive);
}
[DaemonStageAttribute("0")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.JsDocTypoAnalyzer : JsDocDaemonStageBase {
    private IRequiredSpellCheckingModesProvider myRequiredSpellCheckingModesProvider;
    private ISpellingAndGrammarDataBuilder mySpellingAndGrammarDataBuilder;
    public JsDocTypoAnalyzer(IRequiredSpellCheckingModesProvider requiredSpellCheckingModesProvider, ISpellingAndGrammarDataBuilder spellingAndGrammarDataBuilder);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJsDocFile file);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.JSPsiHelper : PsiHelperBase {
    public virtual bool ShouldSkipComment(IComment comment);
    public virtual IDocCommentXmlPsi GetXmlDocPsi(IDocCommentBlock docCommentBlock);
    public virtual bool IsMultiLineComment(IComment comment);
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.PropertyNameStringLiteralTextExtractor : JavaScriptIdentifierTextExtractor`1<IPropertyNameStringLiteral> {
    public PropertyNameStringLiteralTextExtractor(ISpellingAndGrammarDataBuilder reSpellingAndGrammarDataBuilder, IRequiredSpellCheckingModesProvider requiredRequiredSpellCheckingModesProvider, GrammarAndSpellingMeasurements measurements, JavaScriptServices javaScriptServices);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.ReSpeller.Analyzers.JS.ZoneMarker : object {
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Web.ExternalFiles.ExternalFilesAnalysisManager : object {
    private Lifetime myLifetime;
    private ILogger myLogger;
    private IShellLocks myLocks;
    private SolutionAnalysisConfiguration mySolutionAnalysisConfiguration;
    private ExternalFilesProcessingWatcher myExternalFilesProcessingWatcher;
    private SynchronizationPoint mySyncPoint;
    private object mySyncObject;
    private LifetimeDefinition mySyncPointLifetime;
    private LifetimeDefinition myPauseLifetimeDef;
    public ExternalFilesAnalysisManager(Lifetime lifetime, ILogger logger, IShellLocks locks, SynchronizationPoints synchronizationPoints, SolutionAnalysisConfiguration solutionAnalysisConfiguration, ExternalFilesProcessingWatcher externalFilesProcessingWatcher);
    private void OnAdd(IPsiSourceFile file);
    private void OnRemove(IPsiSourceFile file);
    private void Log(string message, Object[] parameters);
    [CompilerGeneratedAttribute]
private void <OnAdd>b__10_0(Lifetime loadedLifetime);
}
[PsiComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Web.ExternalFiles.NodeJsModulesFilesManager : object {
    private object mySyncObject;
    private Lifetime myLifetime;
    private ILogger myLogger;
    private ISolution mySolution;
    private IShellLocks myLocks;
    private IPsiFiles myPsiFiles;
    private IPsiModules myPsiModules;
    private ChangeManager myChangeManager;
    private IPersistentIndexManager myPersistentIndexManager;
    private SolutionAnalysisConfiguration mySolutionAnalysisConfiguration;
    private FileDependencyTracker myFileDependencyTracker;
    private AsyncItemsProcessor`1<Action> myLaunchReanalyzeFilesProcessor;
    private int myCounter;
    private ModulesFilesChange myOldChanges;
    private LifetimeDefinition myWaitLifetimeDef;
    public NodeJsModulesFilesManager(Lifetime lifetime, ILogger logger, ISolution solution, IShellLocks locks, IPsiFiles psiFiles, IPsiModules psiModules, ChangeManager changeManager, IPersistentIndexManager persistentIndexManager, SolutionAnalysisConfiguration solutionAnalysisConfiguration, FileDependencyTracker fileDependencyTracker, JavaScriptDependentFilesModuleFactory dependentFilesModuleFactory, ModulesFilesTracker modulesFilesTracker);
    private void OnChangeManagerChanged(ChangeEventArgs changeEventArgs);
    private void OnNodeModulesFilesChanging(Task`1<ModulesFilesChange> update);
    private ModulesFilesChange GetRequiredUpdate(ModulesFilesChange change);
    private void LaunchUpdateFiles(ModulesFilesChange change);
    private void LaunchReanalyzeFiles();
    private void LaunchReanalyzeFilesInternal();
    private bool CanUpdateFile(IPsiSourceFile psiSourceFile);
    private bool IsNeedUpdateFile(IPsiSourceFile psiSourceFile);
    private void OnSolutionAnalysisConfigurationChanged();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.ExternalFiles.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Web.Intellisense.Asp.AspJsJsCssFetcher : JsCssFetcher {
    public AspJsJsCssFetcher(IAspFile aspFile, bool isCssPresent, bool isJsPresent);
    protected virtual bool IsJavascriptTag(IScriptTag scriptTag);
    protected virtual bool IsJavascriptEventAttribute(ITagAttribute tagAttribute);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.Blazor8Language", "16")]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.Blazor8KeywordItemsProvider : BlazorKeywordItemsProvider {
    protected IEnumerable`1<string> Keywords { get; }
    protected virtual IEnumerable`1<string> get_Keywords();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.BlazorLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorAtItemProvider : BlazorAttributesItemsProvider`1<BlazorCodeCompletionContext> {
    private NodeTypeSet myNodeTypeSet;
    public BlazorAtItemProvider(IRazorTokenNodeTypes razorTokenNodeTypes);
    protected virtual bool IsAvailable(BlazorCodeCompletionContext context);
    protected virtual DocumentRange GetAttrNameDocumentRange(IHtmlAttributeName nameElement);
    protected virtual IEnumerable`1<string> GetAttributeNames(BlazorCodeCompletionContext context);
    protected virtual bool AddLookupItems(BlazorCodeCompletionContext context, IItemsCollector collector);
}
public abstract class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorAttributesItemsProvider`1 : ItemsProviderOfSpecificContext`1<TContext> {
    [CompilerGeneratedAttribute]
private IRazorTokenNodeTypes <RazorTokenNodeTypes>k__BackingField;
    protected IRazorTokenNodeTypes RazorTokenNodeTypes { get; }
    protected IconId Icon { get; }
    protected BlazorAttributesItemsProvider`1(IRazorTokenNodeTypes razorTokenNodeTypes);
    [CompilerGeneratedAttribute]
protected IRazorTokenNodeTypes get_RazorTokenNodeTypes();
    protected virtual bool IsAvailable(TContext context);
    protected virtual bool AddLookupItems(TContext context, IItemsCollector collector);
    protected static AfterCompletionHandler ExecuteAutomaticCompletionAsync(TContext context);
    protected virtual IconId get_Icon();
    protected abstract virtual IEnumerable`1<string> GetAttributeNames(TContext context);
    protected virtual DocumentRange GetAttrNameDocumentRange(IHtmlAttributeName nameElement);
}
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorCodeCompletionContext : RazorCSharpCodeCompletionContext {
    public BlazorCodeCompletionContext(CodeCompletionContext context, HtmlReparsedCompletionContext unterminatedContext, TextLookupRanges ranges);
    public virtual DeclaredElementLookupItem CreateDeclaredElementLookupItem(string name, IDeclaredElement declaredElement);
}
[IntellisensePartAttribute("0")]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorCodeCompletionContextProvider : RazorCodeCompletionContextProvider`1<BlazorLanguage> {
    public BlazorCodeCompletionContextProvider(HtmlCodeCompletionManager htmlCodeCompletionManager, IHtmlDeclaredElementTypes cache);
    protected virtual ISpecificCodeCompletionContext GetSpecificContext(CodeCompletionContext context, TextLookupRanges ranges, HtmlReparsedCompletionContext unterminatedContext);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorInsideAttributeTransformationRule : ItemsProviderOfSpecificContext`1<CSharpCodeCompletionContext> {
    protected virtual bool IsAvailable(CSharpCodeCompletionContext context);
    protected virtual void TransformItems(CSharpCodeCompletionContext context, IItemsCollector collector);
    protected virtual void DecorateItems(CSharpCodeCompletionContext context, IReadOnlyCollection`1<ILookupItem> items);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.BlazorLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorKeywordItemsProvider : RazorCSharpMvc8KeywordItemsProvider {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ExcludedKeywords>k__BackingField;
    protected IEnumerable`1<string> Keywords { get; }
    protected IEnumerable`1<string> ExcludedKeywords { get; protected set; }
    protected virtual IEnumerable`1<string> get_Keywords();
    [CompilerGeneratedAttribute]
protected virtual IEnumerable`1<string> get_ExcludedKeywords();
    [CompilerGeneratedAttribute]
protected virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExcludedKeywords(IEnumerable`1<string> value);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.BlazorLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorSpecialAttributesAfterAtItemsProvider : BlazorAttributesItemsProvider`1<RazorTransitionCompletionContext> {
    private static Key ourLookupItem;
    public BlazorSpecialAttributesAfterAtItemsProvider(IRazorTokenNodeTypes razorTokenNodeTypes);
    private static BlazorSpecialAttributesAfterAtItemsProvider();
    protected virtual void TransformItems(RazorTransitionCompletionContext context, IItemsCollector collector);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorSpecialAttributesAfterAtItemsProvider/<GetAttributeNames>d__3")]
protected virtual IEnumerable`1<string> GetAttributeNames(RazorTransitionCompletionContext context);
    protected virtual bool AddLookupItems(RazorTransitionCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.BlazorLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorTypeParametersItemsProvider : BlazorAttributesItemsProvider`1<RazorCSharpCodeCompletionContext> {
    protected IconId Icon { get; }
    public BlazorTypeParametersItemsProvider(IRazorTokenNodeTypes razorTokenNodeTypes);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Intellisense.Blazor.BlazorTypeParametersItemsProvider/<GetAttributeNames>d__1")]
protected virtual IEnumerable`1<string> GetAttributeNames(RazorCSharpCodeCompletionContext context);
    protected virtual IconId get_Icon();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Intellisense.Blazor.ZoneMarker : object {
}
public class JetBrains.ReSharper.Features.Web.Intellisense.Html.JsCssFetcher : object {
    [CanBeNullAttribute]
private IFileImpl myFileImpl;
    private IHtmlTokenNodeTypes myHtmlTokenNodeTypes;
    [CompilerGeneratedAttribute]
private IList`1<DocumentRange> <Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CssLanguagePresent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <JsLanguagePresent>k__BackingField;
    public IList`1<DocumentRange> Ranges { get; }
    public bool CssLanguagePresent { get; }
    public bool JsLanguagePresent { get; }
    public bool ProcessingIsFinished { get; }
    public JsCssFetcher(IHtmlFile file, bool cssLanguagePresent, bool jsLanguagePresent);
    [CompilerGeneratedAttribute]
public IList`1<DocumentRange> get_Ranges();
    [CompilerGeneratedAttribute]
public bool get_CssLanguagePresent();
    [CompilerGeneratedAttribute]
public bool get_JsLanguagePresent();
    public virtual bool InteriorShouldBeProcessed(ITreeNode element);
    public sealed virtual bool get_ProcessingIsFinished();
    public sealed virtual void ProcessBeforeInterior(ITreeNode element);
    private void ProcessJs(ITreeNode element);
    protected virtual bool IsJavascriptEventAttribute(ITagAttribute tagAttribute);
    protected virtual bool IsJavascriptTag(IScriptTag scriptTag);
    private void TryAddRange(ITreeNode node, ITreeRange treeRange);
    private void TryAddTagAttributeValueRange(ITagAttribute tagAttribute);
    private void TryAddRange(TreeTextRange treeTextRange);
    private void ProcessCss(ITreeNode element);
    public sealed virtual void ProcessAfterInterior(ITreeNode element);
}
public class JetBrains.ReSharper.Features.Web.Intellisense.Razor.CSharp.RazorCSharpJsCssFetcher : JsCssFetcher {
    public RazorCSharpJsCssFetcher(IRazorFile razorFile, bool isCssPresent, bool isJsPresent);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element);
    protected virtual bool IsJavascriptEventAttribute(ITagAttribute tagAttribute);
    protected virtual bool IsJavascriptTag(IScriptTag scriptTag);
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Features.Web.Intellisense.Razor.CSharp.Utils.RazorLookupItemUtil : object {
    [ExtensionAttribute]
public static TextLookupItem WithAutocompletionAfter(TextLookupItem item, ISolution solution);
}
[ActionAttribute("JetBrains.ReSharper.Features.Web.Resources.Strings", "DumpLexerState")]
public class JetBrains.ReSharper.Features.Web.Internal.Blazor.DumpLexerStateAction : object {
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    private bool IsRazorOrBlazorFileOpen(IDataContext context);
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Features.Web.Internal.Blazor.Extensions : object {
    [ExtensionAttribute]
[NotNullAttribute]
public static IDictionary`2<TKey, TValue> ToDictionaryEx(IEnumerable`1<TSource> source, Func`2<TSource, TKey> keyFunc, Func`2<TSource, TValue> valueFunc);
    [ExtensionAttribute]
public static bool In(T checkedValue, T[] targetValues);
    [ExtensionAttribute]
public static void WriteDelimiterLine(TextWriter writer, int delimiterLength);
}
public class JetBrains.ReSharper.Features.Web.Internal.Blazor.LexerStateDump : object {
    [NotNullAttribute]
private string myLexerType;
    [NotNullAttribute]
private string mySourceText;
    [NotNullAttribute]
private IDictionary`2<int, string> myStateNames;
    [NotNullAttribute]
private ICollection`1<TokenDump> myTokens;
    private LexerStateDump(string lexerType, string sourceText, ICollection`1<TokenDump> tokens, IDictionary`2<int, string> stateNames);
    [NotNullAttribute]
public static LexerStateDump Dump(ILexer lexer);
    public void Write(TextWriter writer);
    [NotNullAttribute]
private static string GetCurrentStateCaption();
    [NotNullAttribute]
private static string GetStatesStackCaption();
    [NotNullAttribute]
private static string GetTextFragmentCaption();
    [NotNullAttribute]
private static string GetTokenRangeCaption(int tokenRangeLength);
    [NotNullAttribute]
private static string GetTokenTypeCaption(int tokenTypeLength);
    [NotNullAttribute]
private static string GetSectionScopeCaption(int sectionScopeLength);
    [NotNullAttribute]
private static string GetLocalScopeCaption(int localScopeLength);
    [NotNullAttribute]
private static string GetLineNumberCaption(int fixedLength);
    [CompilerGeneratedAttribute]
private string <Write>b__6_0(int s);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Internal.Blazor.ZoneMarker : object {
}
[ActionAttribute("Dump hit stat of JS caches")]
[InternalActionAttribute]
public class JetBrains.ReSharper.Features.Web.Internal.JsResolve.JsCacheDumpHitStatAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ActionAttribute("JavaScript Resolve Log")]
public class JetBrains.ReSharper.Features.Web.Internal.JsResolve.JsResolveLogAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Internal.JsResolve.ZoneMarker : object {
}
[ActionAttribute("MVC Annotator")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.Internal.MvcAnnotator.MvcAnnotatorActionHandler : object {
    private static OneToListMap`2<string, Expression`1<Func`1<Attribute>>> ourParameters;
    private static OneToListMap`2<string, IClrTypeName> ourParameterTypes;
    private static IDictionary`2<string, string> ourHtmlElements;
    private static HashSet`1<string> ourHtmlElementAttributesParameters;
    private static MvcAnnotatorActionHandler();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Internal.MvcAnnotator.MvcAnnotatorActionHandler/<GetMvcHtmlElementAttributesAnnotation>d__4")]
private static IEnumerable`1<Pair`2<Pair`2<MvcKind, string>, XElement>> GetMvcHtmlElementAttributesAnnotation(IParameter parameter);
    [NotNullAttribute]
private static XElement GetHtmlElementAttributesAnnotation(IParameter parameter);
    private static string GetHtmlElementName(IParameter parameter);
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    private void AnnotateAssemblies(IProgressIndicator indicator, FileSystemPath rootPath, HashSet`1<IPsiAssembly> processedAssemblies, ICollection`1<IAssemblyPsiModule> assemblyModules);
    private void AnnotateAssembly(IProgressIndicator progress, FileSystemPath rootPath, IPsiAssembly assembly);
    private static string GetInternalParameterName(IParameter parameter);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Internal.MvcAnnotator.MvcAnnotatorActionHandler/<GetNestedClasses>d__12")]
private static IEnumerable`1<ITypeElement> GetNestedClasses(INamespace namespace, ISymbolScope cache, IProgressIndicator progress);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[OptionsPageAttribute("InternalAsp", "InternalAsp", "JetBrains.Application.Resources.IdeThemedIcons/InternalPage")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.Internal.Options.AspInternalPage : BeSimpleOptionsPage {
    public static string PID;
    public AspInternalPage(Lifetime lifetime, OptionsPageContext optionsPageContext, OptionsSettingsSmartContext optionsSettingsSmartContext, bool wrapInScrollablePanel);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Internal.ZoneMarker : object {
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Web.LiveTemplates.TemplatesLocalizationSourceWeb : object {
    public sealed virtual Type GetResourceType();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Angular2Html.AngularHtmlDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    private static bool IsAngularElementWithDeclarationRange(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest GetDeclarationSearchRequest(DeclaredElementTypeUsageInfo elementInfo, Func`1<bool> checkCancelled);
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Angular2Html.AngularHtmlSearchDeclarationsRequest : SearchDeclarationsRequest {
    public AngularHtmlSearchDeclarationsRequest(DeclaredElementTypeUsageInfo declaredElementInfo, Func`1<bool> checkCancelled);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    private static IOccurrence DeclarationInfoToOccurence(IAngular2DeclarationInfo info);
    private static ICollection`1<IOccurrence> FindAngularAttributeDeclaration(IAngularHtmlAttributeDeclaredElement attributeDeclaredElement);
    private static ICollection`1<IOccurrence> FindAngularDirectiveDeclaration(IAngularHtmlDirectiveDeclaredElement directiveDeclaredElement);
    private static ICollection`1<IOccurrence> FindAngularTagDeclaration(IAngularHtmlTagDeclaredElement tagDeclaredElement);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Angular2Html.AngularHtmlTagAttributeForPropertyUsagesContextSearch : FindUsagesContextSearch {
    private AngularIsEnabledProvider myAngularIsEnabledProvider;
    public AngularHtmlTagAttributeForPropertyUsagesContextSearch(AngularIsEnabledProvider angularIsEnabledProvider);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    private static HashSet`1<string> GetAllPossibleAngularPropNames(JavaScriptServices services);
    private static bool CanContainProp(string prop, HashSet`1<string> everything);
    protected virtual ICollection`1<DeclaredElementInstance> Promote(ICollection`1<DeclaredElementInstance> elements);
    private static IDeclaredElement CreateAngularAttributeFor(INamedDeclarationClassElement element);
    private static bool HasInputOrOutputEmptyDecorator(INamedDeclarationClassElement element);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Angular2Html.AngularHtmlTagAttributeUsagesContextSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual ICollection`1<DeclaredElementInstance> Promote(ICollection`1<DeclaredElementInstance> elements);
    private static IDeclaredElement GetFieldElementForAngularAttribute(IAngularHtmlAttributeDeclaredElement element, JavaScriptServices jsServices);
    private static IDeclaredElement GetFieldForComponent(IDecorator componentDecorator, string name);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Angular2Html.ZoneMarker : object {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Asp.Mvc.GoToController.GoToControllerContextSearch : UsagesContextSearchBase {
    protected virtual IEnumerable`1<DeclaredElementInstance> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    public virtual string GetTitle(IDataContext dataContext);
}
[ActionAttribute("JetBrains.ReSharper.Features.Web.Resources.Strings", "GoToControllerOrViewActionText")]
[VsOverrideActionAttribute("({abf9951d-5255-44c2-bdcc-b9231f81830c}:1792)")]
[VsOverrideActionAttribute("({9255ce9f-e741-48a6-92df-3dde7beba8e5}:2048)")]
public class JetBrains.ReSharper.Features.Web.Navigation.Asp.Mvc.GoToController.GoToControllerOrViewAction : ContextNavigationActionBase`1<GoToControllerOrViewProvider> {
    public virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Web.Navigation.Asp.Mvc.GoToController.GoToControllerOrViewProvider : UsagesContextSearchProviderBase`1<IGoToControllerOrViewContextSearch> {
    public GoToControllerOrViewProvider(IFeaturePartsContainer manager);
    public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    protected virtual void ExecuteSearchRequest(IDataContext context, SearchRequest searchRequest, INavigationExecutionHost host);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Asp.Mvc.GoToController.GoToViewContextSearch : DefaultDeclarationSearchBase {
    public virtual bool IsAvailable(IDataContext dataContext);
    public virtual bool IsGotoDeclarationApplicable();
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    public sealed virtual string GetTitle(IDataContext dataContext);
}
public interface JetBrains.ReSharper.Features.Web.Navigation.Asp.Mvc.GoToController.IGoToControllerOrViewContextSearch {
    public abstract virtual string GetTitle(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Asp.Mvc.MvcReferencesDeclarationSearch : DefaultDeclarationSearch {
    public MvcReferencesDeclarationSearch(OccurrenceFactory occurrenceFactory);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual IOccurrence Present(DeclaredElementTypeUsageInfo candidate);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Asp.Mvc.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Asp.ZoneMarker : object {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.AspRouteTemplates.RouteTemplateActionRouteValueDeclarationSearch : DefaultDeclarationSearch {
    private OccurrenceFactory myOccurrenceFactory;
    public RouteTemplateActionRouteValueDeclarationSearch(OccurrenceFactory occurrenceFactory);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo declaredElement, DeclaredElementTypeUsageInfo initialTarget);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest GetDeclarationSearchRequest(DeclaredElementTypeUsageInfo elementInfo, Func`1<bool> checkCancelled);
}
public class JetBrains.ReSharper.Features.Web.Navigation.AspRouteTemplates.RouteTemplateActionRouteValueSearchDeclarationsRequest : SearchDeclarationsRequest {
    private OccurrenceFactory myOccurrenceFactory;
    public RouteTemplateActionRouteValueSearchDeclarationsRequest(DeclaredElementTypeUsageInfo declaredElementInfo, OccurrenceFactory occurrenceFactory);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    protected virtual string GetTitle(IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
private IOccurrence <Search>b__2_0(IMethod x);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.AspRouteTemplates.RouteTemplateControllerRouteValueDeclarationSearch : DefaultDeclarationSearch {
    private OccurrenceFactory myOccurrenceFactory;
    public RouteTemplateControllerRouteValueDeclarationSearch(OccurrenceFactory occurrenceFactory);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo declaredElement, DeclaredElementTypeUsageInfo initialTarget);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest GetDeclarationSearchRequest(DeclaredElementTypeUsageInfo elementInfo, Func`1<bool> checkCancelled);
}
public class JetBrains.ReSharper.Features.Web.Navigation.AspRouteTemplates.RouteTemplateControllerRouteValueSearchDeclarationsRequest : SearchDeclarationsRequest {
    private OccurrenceFactory myOccurrenceFactory;
    public RouteTemplateControllerRouteValueSearchDeclarationsRequest(DeclaredElementTypeUsageInfo declaredElementInfo, OccurrenceFactory occurrenceFactory);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    protected virtual string GetTitle(IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
private IOccurrence <Search>b__2_0(ValueTuple`2<string, IClass> x);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.AspRouteTemplates.ZoneMarker : object {
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssAtrulesetCodeStructureElement : CssCodeStructureElementBase`1<IAtruleset> {
    private CssCodeElementAspect myAspect;
    public CssAtrulesetCodeStructureElement(IAtruleset atruleset, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssCharsetCodeStructureElement : CssCodeStructureElementBase`1<ICharset> {
    public CssCharsetCodeStructureElement(ICharset charset, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssCodeStructureElementBase`1 : CodeStructureElement {
    private ITreeNodePointer`1<T> myNodePointer;
    private DocumentRange myTextRange;
    [CompilerGeneratedAttribute]
private PsiLanguageType <Language>k__BackingField;
    [CanBeNullAttribute]
protected T PsiElement { get; }
    public ITreeNode TreeNode { get; }
    public PsiLanguageType Language { get; }
    protected CssCodeStructureElementBase`1(T treeNode, CodeStructureElement root);
    protected T get_PsiElement();
    public virtual ITreeNode get_TreeNode();
    [CompilerGeneratedAttribute]
public virtual PsiLanguageType get_Language();
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
    public virtual DocumentRange GetTextRange();
    protected virtual void DumpSelf(TextWriter builder);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssCodeStructureProvider : object {
    public sealed virtual CodeStructureRootElement Build(IFile file, CodeStructureOptions options);
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssCodeStructureRootElement : CodeStructureRootElement {
    public CssCodeStructureRootElement(ICssFile file);
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssImportCodeStructureElement : CssCodeStructureElementBase`1<IImport> {
    private CssCodeStructureAspect myAspect;
    public CssImportCodeStructureElement(IImport importParam, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssKeyframesCodeStructureElement : CssCodeStructureElementBase`1<IKeyframes> {
    private CssCodeStructureAspect myAspect;
    public CssKeyframesCodeStructureElement(IKeyframes keyframes, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssKeyframesItemCodeStructureElement : CssCodeStructureElementBase`1<IKeyframesRule> {
    private CssCodeStructureAspect myAspect;
    public CssKeyframesItemCodeStructureElement(IKeyframesRule item, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssMediaCodeStructureElement : CssCodeStructureElementBase`1<IMedia> {
    private CssCodeStructureAspect myAspect;
    public CssMediaCodeStructureElement(IMedia media, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssNamespaceCodeStructureElement : CssCodeStructureElementBase`1<ICssNamespace> {
    private CssCodeStructureAspect myAspect;
    public CssNamespaceCodeStructureElement(ICssNamespace cssNamespace, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssPageCodeStructureElement : CssCodeStructureElementBase`1<IPage> {
    private CssCodeStructureAspect myAspect;
    public CssPageCodeStructureElement(IPage page, CodeStructureElement root);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssPropertyCodeStructureElement : CssCodeStructureElementBase`1<ICssProperty> {
    private PsiIconManager myIconManager;
    private CssCodeStructureAspect myAspect;
    public CssPropertyCodeStructureElement(ICssProperty cssProperty, CodeStructureElement root, PsiIconManager iconManager);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.CssRulesetCodeStructureElement : CssCodeStructureElementBase`1<IRuleset> {
    private PsiIconManager myPsiIconManager;
    private CssCodeStructureAspect myAspect;
    public CssRulesetCodeStructureElement(IRuleset ruleset, CodeStructureElement root, PsiIconManager psiIconManager);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CodeStructure.QuickSearchTextCollector : TreeNodeVisitor`1<ICollection`1<string>> {
    [NotNullAttribute]
public static IList`1<string> GetQuickSearchText(ITreeNode node);
    public static void GetQuickSearchText(ITreeNode node, ICollection`1<string> words);
    public sealed virtual bool IsProcessingFinished(ICollection`1<string> context);
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element, ICollection`1<string> context);
    public sealed virtual void ProcessBeforeInterior(ITreeNode element, ICollection`1<string> context);
    public sealed virtual void ProcessAfterInterior(ITreeNode element, ICollection`1<string> context);
    public virtual void VisitNode(ITreeNode node, ICollection`1<string> context);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.ContextSearch.CssImplementationContextSearch : ImplementationContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssClassDeclarationSearch : DefaultDeclarationSearch {
    private OccurrenceFactory myOccurrenceFactory;
    public CssClassDeclarationSearch(OccurrenceFactory occurrenceFactory);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo declaredElement, DeclaredElementTypeUsageInfo initialTarget);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest GetDeclarationSearchRequest(DeclaredElementTypeUsageInfo elementInfo, Func`1<bool> checkCancelled);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssClassSearchDeclarationsRequest : SearchDeclarationsRequest {
    private OccurrenceFactory myOccurrenceFactory;
    public CssClassSearchDeclarationsRequest(DeclaredElementTypeUsageInfo declaredElementInfo, OccurrenceFactory occurrenceFactory);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    private static FindResult IsCssClassSymbol(FindResultWebSymbol findResult);
    [CompilerGeneratedAttribute]
private IOccurrence <Search>b__2_2(IWebClassSymbol symbol);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssClassUsagesContextSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssDefinitionUsagesContextSearch : FindUsagesContextSearch {
    protected IEqualityComparer`1<DeclaredElementInstance> Comparer { get; }
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
    protected virtual IEqualityComparer`1<DeclaredElementInstance> get_Comparer();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssGotoFileMemberProvider : NonCachedFileMemberProvider`1<CssLanguage> {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssGotoSymbolProvider : CachedGotoSymbolBase`1<IWebSymbolsCache> {
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public CssGotoSymbolProvider(IShellLocks locks);
    protected virtual IEnumerable`1<string> GetNames(IWebSymbolsCache cache, INavigationScope scope, GotoContext context);
    protected virtual IWebSymbolsCache GetCache(INavigationScope scope, ISolution solution, GotoContext gotoContext);
    public virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
[OccurrencePresenterAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssOccurrencePresenter : WebSymbolOccurrencePresenter {
    public virtual bool IsApplicable(IOccurrence occurrence);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssVariableDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo declaredElement, DeclaredElementTypeUsageInfo initialTarget);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest GetDeclarationSearchRequest(DeclaredElementTypeUsageInfo elementInfo, Func`1<bool> checkCancelled);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Css.CssVariableSearchDeclarationsRequest : SearchDeclarationsRequest {
    public CssVariableSearchDeclarationsRequest(DeclaredElementTypeUsageInfo declaredElementInfo);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    private static FindResult IsCssVariableSymbol(FindResultWebSymbol findResult);
}
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.Finder.HtmlCssReferenceSearcher : object {
    private JetHashSet`1<string> myNames;
    private JetHashSet`1<string> myWordsInText;
    private IDeclaredElementsSet myElements;
    private ReferenceSearcherParameters myReferenceSearcherParameters;
    private IWordIndex myWordIndex;
    public HtmlCssReferenceSearcher(HtmlCssSearchFactory factory, IDeclaredElementsSet elements, ReferenceSearcherParameters referenceSearcherParameters);
    public sealed virtual bool ProcessProjectItem(IPsiSourceFile sourceFile, IFindResultConsumer`1<TResult> consumer);
    public sealed virtual bool ProcessElement(ITreeNode element, IFindResultConsumer`1<TResult> consumer);
    private static IEnumerable`1<string> GetClassNames(IRulesetDeclaredElement rulesetDeclaredElement);
}
[PsiComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.Finder.HtmlCssSearchFactory : DomainSpecificSearcherFactoryBase {
    private SearchDomainFactory mySearchDomainFactory;
    public HtmlCssSearchFactory(SearchDomainFactory searchDomainFactory);
    public virtual ISearchDomain GetDeclaredElementSearchDomain(IDeclaredElement declaredElement);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Css.Finder.HtmlCssSearchFactory/<GetAllPossibleWordsInFile>d__3")]
public virtual IEnumerable`1<string> GetAllPossibleWordsInFile(IDeclaredElement element);
    public virtual IDomainSpecificSearcher CreateReferenceSearcher(IDeclaredElementsSet elements, ReferenceSearcherParameters referenceSearcherParameters);
    public virtual bool IsCompatibleWithLanguage(PsiLanguageType languageType);
    public virtual ICollection`1<FindResult> TransformNavigationTargets(ICollection`1<FindResult> targets);
}
[ActionAttribute("StyleHierarchy.BaseOnThis", "JetBrains.ReSharper.Features.Web.Resources.Strings", "BaseOnThisAction_Text")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.Actions.BaseOnThisAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ActionAttribute("StyleHierarchy.ChildStylesHierarchy", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ChildStylesHierarchyAction_Text")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.Actions.ChildStylesHierarchyAction : object {
    public virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ActionAttribute("StyleHierarchy.ParentStylesHierarchy", "JetBrains.ReSharper.Features.Web.Resources.Strings", "ParentStylesHierarchyAction_Text")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.Actions.ParentStylesHierarchyAction : object {
    public virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ActionAttribute("StyleHierarchy.StyleHierarchy", "JetBrains.ReSharper.Features.Web.Resources.Strings", "StyleHierarchyAction_Text")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.Actions.StyleHierarchyAction : object {
    public virtual bool Update(IDataContext context, CheckedActionPresentation presentation);
    public sealed virtual void Execute(IDataContext context);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
[ActionGroupAttribute("StyleHierarchy.ActionBar", "1", "10")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.Actions.StyleHierarchyActionBarActionGroup : object {
    public StyleHierarchyActionBarActionGroup(UpdateStyleHierarchyAction updateStyleHierarchyAction, BaseOnThisAction baseOnThisAction, Separator sep, TreeModelBrowserStandardActionGroup treeModelBrowserStandardActionGroup, Separator sep1, StyleHierarchyAction styleHierarchyAction, ChildStylesHierarchyAction childStylesHierarchyAction, ParentStylesHierarchyAction parentStylesHierarchyAction);
}
[ActionAttribute("StyleHierarchy.Update", "JetBrains.ReSharper.Features.Web.Resources.Strings", "UpdateStyleHierarchyAction_Text")]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.Actions.UpdateStyleHierarchyAction : object {
    public sealed virtual bool Update(IDataContext context, ActionPresentation presentation, DelegateUpdate nextUpdate);
    public sealed virtual void Execute(IDataContext context, DelegateExecute nextExecute);
    public sealed virtual IActionRequirement GetRequirement(IDataContext dataContext);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.CssStyleHierarchyController : TypeHierarchyController {
    public virtual ICollection`1<IOccurrence> GetSuperTypesOccurrences(IDeclaredElementEnvoy target);
    private static ICollection`1<IOccurrence> GetSuperStylesOccurrencesInternal(IRulesetDeclaredElement rulesetDeclaredElement, ElementEnvoyMap`1<IOccurrence> envoyOccurrenceMap);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.CssStyleHierarchyController/<GetActualSuperTypes>d__2")]
protected virtual IEnumerable`1<IDeclaredElementEnvoy> GetActualSuperTypes(IDeclaredElementEnvoy envoy, TypeHierarchyViewStyle viewStyle);
    public virtual bool Equals(IDeclaredElementEnvoy x, IDeclaredElementEnvoy y);
    public virtual int GetHashCode(IDeclaredElementEnvoy envoy);
    protected virtual ICollection`1<IOccurrence> GetSubtypeOccurrencesInternal(IDeclaredElementEnvoy target, ElementEnvoyMap`1<IOccurrence> map);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.CssStyleHierarchyController/<GetSubItems>d__6")]
private static IEnumerable`1<DeclaredElementOccurrence> GetSubItems(IEnumerable`1<Node> nodes, ElementEnvoyMap`1<IOccurrence> map);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.CssStyleHierarchyController/<GetActualDerivedTypes>d__7")]
protected virtual IEnumerable`1<IDeclaredElementEnvoy> GetActualDerivedTypes(IDeclaredElementEnvoy envoy, TypeHierarchyViewStyle viewStyle);
    public virtual IEnumerable`1<CascadeGroup> GetDefaultRootPath(IOccurrence item, HierarchyDescriptor`1<IDeclaredElementEnvoy> owner);
    private RootPath`1<IDeclaredElementEnvoy> CollectPossibleRootPath(IDeclaredElementEnvoy item, HierarchyDescriptor`1<IDeclaredElementEnvoy> owner);
    protected virtual IEnumerable`1<CascadeGroup> UpdateGroupingRootPath(IEnumerable`1<CascadeGroup> input, IOccurrence item, HierarchyDescriptor`1<IDeclaredElementEnvoy> owner);
    public virtual ICollection`1<IOccurrence> GetClassHierarchyOccurrences(IDeclaredElementEnvoy target);
    public virtual IList`1<IOccurrence> GetImplementersTreesOccurrences(IDeclaredElementEnvoy target);
    public virtual IList`1<IOccurrence> GetInterfaceLeavesOccurrences(IDeclaredElementEnvoy target);
    [CanBeNullAttribute]
private static IRulesetDeclaredElement GetDeclaredElement(Node node);
    [NotNullAttribute]
private static IEnumerable`1<Node> GetNodes(IRulesetDeclaredElement element);
    private static void AggregateBaseElements(Node node, List`1<IRulesetDeclaredElement> baseElements);
    private static IList`1<IRulesetDeclaredElement> GetRootPath(IRulesetDeclaredElement element);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.CssStyleHierarchyDescriptor : HierarchyDescriptor`1<IDeclaredElementEnvoy> {
    private CssStyleHierarchyPresenter myCssStylePresenter;
    public string ActionBarID { get; }
    public StructuredPresenter`2<TreeModelNode, IPresentableItem> Presenter { get; }
    public CssStyleHierarchyDescriptor(CssStyleHierarchyController controller, IDeclaredElementEnvoy target, ISolution solution, TypeHierarchyViewStyle viewStyle);
    public virtual string get_ActionBarID();
    public virtual StructuredPresenter`2<TreeModelNode, IPresentableItem> get_Presenter();
    protected virtual HierarchyPresenterBase`1<IDeclaredElementEnvoy> CreatePresenter();
    protected virtual void UpdateTitle();
    protected virtual void CreateGroupings(List`1<TreeModelGrouping`1<IOccurrence>> groupings);
    public virtual void PreviewUpdate(IPreviewControl previewControl, TreeModelNode modelNode);
}
[ShellFeaturePartAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.CssStyleHierarchyDescriptorFactory : object {
    public sealed virtual HierarchyDescriptorBase CreateDescriptor(IDataContext dataContext);
    public sealed virtual bool IsApplicable(IDataContext dataContext);
    [NotNullAttribute]
private static IEnumerable`1<IRulesetDeclaredElement> GetSelectedSelectors(IDataContext dataContext);
    private static IRulesetDeclaredElement GetSelector(IDataContext context, ICollection`1<IRulesetDeclaredElement> selectors);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Css.Hierarchy.CssStyleHierarchyPresenter : HierarchyPresenterBase`1<IDeclaredElementEnvoy> {
    private CssStyleHierarchyDescriptor myDescriptor;
    public CssStyleHierarchyPresenter(CssStyleHierarchyDescriptor descriptor, ProjectModelElementPresentationService projectModelElementPresentationService);
    protected virtual void PresentDeclaredElementOccurrence(IDeclaredElementOccurrence value, IPresentableItem item, TreeModelNode structureelement, PresentationState state);
    private void PresentRulesetDeclaredElement(IRulesetDeclaredElement value, IPresentableItem item, TreeModelNode structureelement, PresentationState state);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Css.ZoneMarker : object {
}
public interface JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.Css.IMatchedTagsContextSearch {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.Css.MatchedTagsContextSearch : DeclaredElementContextSearchBase`1<SearchMatchedTagsRequest> {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    protected virtual IEnumerable`1<IDeclaredElement> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual SearchMatchedTagsRequest CreateSearchRequest(IDataContext dataContext, IDeclaredElement declaredElement, IDeclaredElement initialTarget);
}
[ActionAttribute("JetBrains.ReSharper.Features.Web.Resources.Strings", "GoToMatchingTagsActionText")]
public class JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.GoToMatchedTagsAction : ContextNavigationActionBase`1<IMatchedTagsNavigationProvider> {
}
[ContextNavigationProviderAttribute("0")]
public class JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.GotoMatchedTagsProvider : RequestContextSearchProvider`3<IMatchedTagsContextSearch, SearchMatchedTagsRequest, SearchMatchedTagsDescriptor> {
    public GotoMatchedTagsProvider(IFeaturePartsContainer manager);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.GotoMatchedTagsProvider/<CreateWorkflow>d__1")]
public sealed virtual IEnumerable`1<ContextNavigation> CreateWorkflow(IDataContext dataContext);
    protected virtual SearchMatchedTagsDescriptor CreateSearchDescriptor(SearchMatchedTagsRequest searchRequest, ICollection`1<IOccurrence> results);
}
public interface JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.IMatchedTagsNavigationProvider {
}
public class JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.SearchMatchedTagsDescriptor : SearchDescriptor {
    public SearchMatchedTagsDescriptor(StructuralSearchRequest request, ICollection`1<IOccurrence> occurrences);
    public virtual string GetResultsTitle(OccurrenceSection section);
    protected virtual Func`2<SearchRequest, IOccurrenceBrowserDescriptor> GetDescriptorFactory();
}
public class JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.SearchMatchedTagsRequest : StructuralSearchRequest {
    private ICssSelectorDeclaredElement myElement;
    public ICollection SearchTargets { get; }
    public SearchMatchedTagsRequest(ISolution solution, DocumentManager documentManager, ISearchDomain domain, SearchDomainFactory factory, ICssSelectorDeclaredElement element, IStructuralSearchPattern request);
    public virtual ICollection get_SearchTargets();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.GoToMatchedTags.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Guru.ZoneMarker : object {
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest GetDeclarationSearchRequest(DeclaredElementTypeUsageInfo elementInfo, Func`1<bool> checkCancelled);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlGotoSymbolProvider : CachedGotoSymbolBase`1<IWebSymbolsCache> {
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public HtmlGotoSymbolProvider(IShellLocks locks);
    protected virtual IEnumerable`1<string> GetNames(IWebSymbolsCache cache, INavigationScope scope, GotoContext context);
    protected virtual IWebSymbolsCache GetCache(INavigationScope scope, ISolution solution, GotoContext gotoContext);
    public virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlImplementationContextSearch : ImplementationContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
}
public static class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlNavigationUtil : object {
    public static bool IsHtmlDeclaredElementWithoutDeclaration(IDeclaredElement declaredElement);
    public static bool IsHtmlDeclaredElementWithDeclaration(IDeclaredElement declaredElement);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlNonCachedGotoFileMemberProvider : NonCachedFileMemberProvider`1<HtmlLanguage> {
}
[OccurrencePresenterAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlOccurrencePresenter : WebSymbolOccurrencePresenter {
    public virtual bool IsApplicable(IOccurrence occurrence);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlTagIdDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo element, DeclaredElementTypeUsageInfo initialTarget);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest GetDeclarationSearchRequest(DeclaredElementTypeUsageInfo elementInfo, Func`1<bool> checkCancelled);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.HtmlTagIdUsagesContextSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Html.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.Navigation.JavaScript.JsExitsFinder : object {
    private static IJsControlFlowGraph GetControlFlowGraph(ITreeNode contextNode);
    [NotNullAttribute]
public sealed virtual IEnumerable`1<ITreeNode> GetReachableExitNodes(ITreeNode contextNode);
    [NotNullAttribute]
public sealed virtual IEnumerable`1<DocumentRange> GetReachableExitKeywordsRanges(ITreeNode declaration);
    [CanBeNullAttribute]
private static Nullable`1<DocumentRange> GetExitKeywordDocumentRange(ITreeNode treeNode);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.JavaScript.JsExitsFinder/<ExitNodesToKeywordsRanges>d__4")]
private static IEnumerable`1<DocumentRange> ExitNodesToKeywordsRanges(IEnumerable`1<ITreeNode> exitNodes);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.JavaScript.JsFunctionExitsContextSearch : object {
    [NotNullAttribute]
public sealed virtual IEnumerable`1<DocumentRange> SearchTargets(IDataContext dataContext);
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    private static bool InsideClosingBrace(IBlock body, IDataContext dataContext);
    protected virtual bool InsideSignature(IJsFunctionLike functionLike, IDataContext dataContext);
    private static bool InsideExitStatement(IDataContext dataContext);
    public virtual bool IsContextApplicable(IDataContext dataContext);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.JavaScript.ZoneMarker : object {
}
public enum JetBrains.ReSharper.Features.Web.Navigation.Microservices.EndpointReferenceType : Enum {
    public int value__;
    public static EndpointReferenceType RouteSegment;
    public static EndpointReferenceType QueryParameter;
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.EndpointsReferenceFindResult : FindResultReference {
    [CompilerGeneratedAttribute]
private EndpointReferenceType <ReferenceType>k__BackingField;
    public EndpointReferenceType ReferenceType { get; }
    public EndpointsReferenceFindResult(IReference reference, EndpointReferenceType referenceType);
    [CompilerGeneratedAttribute]
public EndpointReferenceType get_ReferenceType();
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.EndpointsReferenceOccurrence : ReferenceOccurrence {
    [CompilerGeneratedAttribute]
private EndpointReferenceType <ReferenceType>k__BackingField;
    public EndpointReferenceType ReferenceType { get; }
    public EndpointsReferenceOccurrence(IReference reference, IDeclaredElement target, OccurrenceType occurrenceType, EndpointReferenceType referenceType);
    [CompilerGeneratedAttribute]
public EndpointReferenceType get_ReferenceType();
}
[OccurrenceProviderAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.EndpointsReferenceOccurrenceProvider : object {
    public sealed virtual IOccurrence MakeOccurrence(FindResult findResult);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.EndpointsEntityMatcherContext`1 : object {
    [CompilerGeneratedAttribute]
private IIdentifierMatcher <IdentifierMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ValueTuple`2<TEntity, MatchingInfo>> <FoundEntities>k__BackingField;
    public IIdentifierMatcher IdentifierMatcher { get; }
    public List`1<ValueTuple`2<TEntity, MatchingInfo>> FoundEntities { get; }
    public EndpointsEntityMatcherContext`1(IIdentifierMatcher identifierMatcher);
    [CompilerGeneratedAttribute]
public IIdentifierMatcher get_IdentifierMatcher();
    [CompilerGeneratedAttribute]
public List`1<ValueTuple`2<TEntity, MatchingInfo>> get_FoundEntities();
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.EndpointsTreeNodesNavigationScope : object {
    private ISolution mySolution;
    [CompilerGeneratedAttribute]
private LibrariesFlag <ExtendedSearchFlag>k__BackingField;
    [CompilerGeneratedAttribute]
private IEndpointsTreeNode <EndpointsTreeNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WasStrictMatch>k__BackingField;
    public LibrariesFlag ExtendedSearchFlag { get; public set; }
    public INavigationProviderFilter Filter { get; }
    public IEndpointsTreeNode EndpointsTreeNode { get; }
    public bool WasStrictMatch { get; }
    public EndpointsTreeNodesNavigationScope(IEndpointsTreeNode endpointsTreeNode, ISolution solution, bool wasStrictMatch);
    [CompilerGeneratedAttribute]
public sealed virtual LibrariesFlag get_ExtendedSearchFlag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedSearchFlag(LibrariesFlag value);
    public sealed virtual ISolution GetSolution();
    public sealed virtual INavigationProviderFilter get_Filter();
    [CompilerGeneratedAttribute]
public IEndpointsTreeNode get_EndpointsTreeNode();
    [CompilerGeneratedAttribute]
public bool get_WasStrictMatch();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.GotoEndpointProvider : object {
    public Func`2<MatcherScore, int> ItemsPriorityFunc { get; }
    public sealed virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.GotoEndpointProvider/<GetNextChainedScopes>d__1")]
public sealed virtual IEnumerable`1<ChainedNavigationItemData> GetNextChainedScopes(GotoContext gotoContext, IIdentifierMatcher matcher, INavigationScope containingScope);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.GotoEndpointProvider/<FindMatchingInfos>d__2")]
public sealed virtual IEnumerable`1<MatchingInfo> FindMatchingInfos(IIdentifierMatcher matcher, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.GotoEndpointProvider/<GetOccurrencesByMatchingInfo>d__3")]
public sealed virtual IEnumerable`1<IOccurrence> GetOccurrencesByMatchingInfo(MatchingInfo navigationInfo, INavigationScope scope, GotoContext gotoContext);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.GotoEndpointProvider/<GetCurrentNodes>d__4")]
private IEnumerable`1<ValueTuple`2<IEndpointsTreeNode, bool>> GetCurrentNodes(INavigationScope navigationScope);
    public sealed virtual Func`2<MatcherScore, int> get_ItemsPriorityFunc();
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.MicroservicesFilterDescriptorProvider : object {
    private IEnumerable`1<INavigationFilterClassifier> myClassifiers;
    public static TypeNavigationFilterEnum Endpoint;
    public static TypeNavigationFilterEnum[] MicroservicesFilters;
    public MicroservicesFilterDescriptorProvider(IEnumerable`1<INavigationFilterClassifier> classifiers);
    private static MicroservicesFilterDescriptorProvider();
    public sealed virtual bool IsApplicable(GotoContext context, IEnumerable`1<IApplicableGotoProvider> navProviders);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.GotoEverything.MicroservicesFilterDescriptorProvider/<GetFiltersHelpItems>d__3")]
public sealed virtual IEnumerable`1<INavigationFilterHelpItem> GetFiltersHelpItems(IEnumerable`1<IApplicableGotoProvider> providers, GotoContext context);
    public sealed virtual IFilterDescriptor TryCreate(string key, string value, GotoContext context);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.ExplicitQueryParameterDeclarationOccurrence : RangeOccurrence {
    public ExplicitQueryParameterDeclarationOccurrence(IDeclaration declaration);
    public virtual bool Navigate(ISolution solution, PopupWindowContextSource windowContext, bool transferFocus, TabOptions tabOptions);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.ImplicitQueryParameterDeclarationOccurrence : DeclaredElementOccurrence {
    public ImplicitQueryParameterDeclarationOccurrence(ImplicitEndpointQueryParameter declaration);
    public virtual bool Navigate(ISolution solution, PopupWindowContextSource windowContext, bool transferFocus, TabOptions tabOptions);
}
[OccurrencePresenterAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.QueryParameterDeclarationOccurrencePresenter : RangeOccurrencePresenter {
    public virtual bool IsApplicable(IOccurrence occurrence);
    public virtual bool Present(IMenuItemDescriptor descriptor, IOccurrence occurrence, OccurrencePresentationOptions options);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.UrlQueryParameterDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo element, DeclaredElementTypeUsageInfo initialTarget);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.UrlQueryParameterDeclaredElementReferenceSearcher : object {
    private IReadOnlyList`1<IDeclaredElement> myElements;
    public UrlQueryParameterDeclaredElementReferenceSearcher(IReadOnlyList`1<IDeclaredElement> elements);
    public sealed virtual bool ProcessProjectItem(IPsiSourceFile sourceFile, IFindResultConsumer`1<TResult> consumer);
    public sealed virtual bool ProcessElement(ITreeNode element, IFindResultConsumer`1<TResult> consumer);
}
[PsiComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.UrlQueryParameterDeclaredElementSearcherFactory : DomainSpecificSearcherFactoryBase {
    public virtual bool IsCompatibleWithLanguage(PsiLanguageType languageType);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.UrlQueryParameterDeclaredElementSearcherFactory/<GetAllPossibleWordsInFile>d__1")]
public virtual IEnumerable`1<string> GetAllPossibleWordsInFile(IDeclaredElement element);
    public virtual IDomainSpecificSearcher CreateReferenceSearcher(IDeclaredElementsSet elements, ReferenceSearcherParameters referenceSearcherParameters);
    public virtual ISearchDomain GetDeclaredElementSearchDomain(IDeclaredElement declaredElement);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.UrlQueryParameterDeclaredElementSearcherFactory/<GetRelatedDeclaredElements>d__4")]
public virtual IEnumerable`1<RelatedDeclaredElement> GetRelatedDeclaredElements(IDeclaredElement element);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.QueryParameters.UrlQueryParameterSearchDeclarationRequest : SearchDeclarationsRequest {
    public string Title { get; }
    public UrlQueryParameterSearchDeclarationRequest(DeclaredElementTypeUsageInfo declaredElementInfo);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    public virtual string get_Title();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.RouteParameters.RouteParameterDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool ShouldIgnoreSingleDeclaration(IDataContext context, IDeclaration declaration);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo element, DeclaredElementTypeUsageInfo initialTarget);
}
[PsiComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.RouteParameters.RouteParameterDeclaredElementSearcherFactory : DomainSpecificSearcherFactoryBase {
    public virtual bool IsCompatibleWithLanguage(PsiLanguageType languageType);
    public virtual ISearchDomain GetDeclaredElementSearchDomain(IDeclaredElement declaredElement);
    public virtual IEnumerable`1<RelatedDeclaredElement> GetRelatedDeclaredElements(IDeclaredElement element);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.RouteParameters.RouteParameterSearchDeclarationRequest : SearchDeclarationsRequest {
    public RouteParameterSearchDeclarationRequest(DeclaredElementTypeUsageInfo declaredElementInfo);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
}
[OccurrencePresenterAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.UrlSegments.EndpointDeclaredElementPresenter : DeclaredElementOccurrencePresenter {
    private TextStyle myBoldTextStyle;
    public virtual bool IsApplicable(IOccurrence occurrence);
    protected virtual void DisplayMainText(IMenuItemDescriptor descriptor, IOccurrence occurrence, OccurrencePresentationOptions options, IDeclaredElement declaredElement);
    private void AppendSegment(RichText text, UrlPathSegment segment);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.UrlSegments.UrlSegmentDeclarationSearch : DefaultDeclarationSearch {
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo element, DeclaredElementTypeUsageInfo initialTarget);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.UrlSegments.UrlSegmentDeclaredElementReferenceSearcher : object {
    private IReadOnlyList`1<IDeclaredElement> myElements;
    public UrlSegmentDeclaredElementReferenceSearcher(IReadOnlyList`1<IDeclaredElement> elements);
    public sealed virtual bool ProcessProjectItem(IPsiSourceFile sourceFile, IFindResultConsumer`1<TResult> consumer);
    public sealed virtual bool ProcessElement(ITreeNode element, IFindResultConsumer`1<TResult> consumer);
}
[PsiComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Navigation.Microservices.UrlSegments.UrlSegmentDeclaredElementSearcherFactory : DomainSpecificSearcherFactoryBase {
    public virtual bool IsCompatibleWithLanguage(PsiLanguageType languageType);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.Microservices.UrlSegments.UrlSegmentDeclaredElementSearcherFactory/<GetAllPossibleWordsInFile>d__1")]
public virtual IEnumerable`1<string> GetAllPossibleWordsInFile(IDeclaredElement element);
    public virtual IDomainSpecificSearcher CreateReferenceSearcher(IDeclaredElementsSet elements, ReferenceSearcherParameters referenceSearcherParameters);
    public virtual ISearchDomain GetDeclaredElementSearchDomain(IDeclaredElement declaredElement);
}
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.UrlSegments.UrlSegmentSearchDeclarationRequest : SearchDeclarationsRequest {
    public string Title { get; }
    public UrlSegmentSearchDeclarationRequest(DeclaredElementTypeUsageInfo declaredElementInfo);
    public virtual ICollection`1<IOccurrence> Search(IProgressIndicator progressIndicator);
    public virtual string get_Title();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Microservices.ZoneMarker : object {
}
[ShellFeaturePartAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.Navigation.Razor.FindComponentUsagesContextSearch : GoToControllerContextSearch {
    public virtual string GetTitle(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.Razor.RazorGotoDeclarationSearch : DefaultDeclarationSearch {
    protected bool IsExecuteImmediately { get; }
    public RazorGotoDeclarationSearch(OccurrenceFactory occurrenceFactory);
    protected virtual bool get_IsExecuteImmediately();
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool IsAvailableInternal(IDataContext dataContext);
    public virtual bool IsGotoDeclarationApplicable(IDeclaredElement declaredElement);
    private bool IsDeclaredInRazorFile(IDeclaredElement declaredElement);
    protected virtual SearchDeclarationsRequest CreateSearchRequest(IDataContext dataContext, DeclaredElementTypeUsageInfo element, DeclaredElementTypeUsageInfo initialTarget);
    protected virtual IEnumerable`1<DeclaredElementTypeUsageInfo> GetElementCandidates(IDataContext context, ReferencePreferenceKind kind, bool updateOnly);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.Razor.ZoneMarker : object {
}
[PsiComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Navigation.Search.CSharpInClientWebSearchFilter : object {
    public SearchFilterKind Kind { get; }
    public sealed virtual SearchFilterKind get_Kind();
    public sealed virtual object TryGetKey(IDeclaredElement declaredElement);
    public sealed virtual bool IsAvailable(SearchPattern pattern);
    public sealed virtual bool CanContainReferences(IPsiSourceFile sourceFile, object key);
}
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.StructuralCompatibleDeclaredElementInstance : DeclaredElementInstance {
    public StructuralCompatibleDeclaredElementInstance(IDeclaredElement element, ISubstitution substitution);
    public StructuralCompatibleDeclaredElementInstance(IDeclaredElement element);
}
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.StructuralCompatibleDeclaredElementUsagesResultsConsumer : SearchDeclaredElementUsagesResultsConsumer {
    private JetHashSet`1<IDeclaredElement> myStructuralCompatibleElements;
    public StructuralCompatibleDeclaredElementUsagesResultsConsumer(ICollection`1<IDeclaredElement> structuralCompatibleElements, ICollection`1<DeclaredElementInstance> elements, TargetFrameworkId platformId, ISolution solution);
    public virtual IOccurrence Build(FindResult result);
}
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.StructuralCompatibleFindResult : JsReferenceFindResult {
    public StructuralCompatibleFindResult(IReference reference, ReferenceType referenceType);
    public StructuralCompatibleFindResult(IReference reference, IDeclaredElement declaredElement, ReferenceType referenceType);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsFunctionExitsContextSearch : JsFunctionExitsContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual bool InsideSignature(IJsFunctionLike functionLike, IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsImplementationsContextSearch : object {
    public sealed virtual bool IsContextApplicable(IDataContext dataContext);
    public sealed virtual bool IsAvailable(IDataContext dataContext);
    private static IDeclaredElement GetDeclaredElement(IDataContext dataContext);
    public sealed virtual bool IsInterface(IDeclaredElement declaredElement);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsImplementationsContextSearch/<GetImplementingMemebersDocumentRange>d__4")]
public sealed virtual IEnumerable`1<DocumentRange> GetImplementingMemebersDocumentRange(IDataContext dataContext);
}
[OccurrencePresenterAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsOccurrencePresenter : JavaScriptOccurrencePresenter {
    public virtual bool IsApplicable(IOccurrence occurrence);
    protected virtual RichText GetDisplayText(OccurrencePresentationOptions options, RangeOccurrence rangeOccurrence);
}
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsReferenceOccurrence : JavaScriptReferenceOccurrence {
    public TsReferenceOccurrence(IReference reference, IDeclaredElement target, OccurrenceType occurrenceType, ReferenceType referenceType);
}
[OccurrenceProviderAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsReferenceOccurrenceProvider : object {
    public sealed virtual IOccurrence MakeOccurrence(FindResult findResult);
}
[RelatedFilesProviderAttribute("JetBrains.ProjectModel.TypeScriptProjectFileType", "16")]
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsRelatedFilesProvider : object {
    public sealed virtual IEnumerable`1<RelatedFileOccurence> GetRelatedFiles(IProjectFile projectFile);
}
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsSearchDeclaredElementUsagesResultsConsumer : SearchDeclaredElementUsagesResultsConsumer {
    public TsSearchDeclaredElementUsagesResultsConsumer(ICollection`1<DeclaredElementInstance> elements, TargetFrameworkId platformId, ISolution solution);
    public virtual IOccurrence Build(FindResult result);
    private static bool IsAliasElement(FindResult findResult);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsUsagesContextSearch : FindUsagesContextSearch {
    public virtual bool IsContextApplicable(IDataContext dataContext);
    protected virtual ICollection`1<DeclaredElementInstance> Promote(ICollection`1<DeclaredElementInstance> elements);
    protected virtual SearchDeclaredElementUsagesRequest CreateUsagesSearchRequest(IDataContext context, ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, ISearchDomain searchDomain);
}
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.TsUsagesRequest : SearchDeclaredElementUsagesRequest {
    public IFinderSearchRoot Root { get; }
    public TsUsagesRequest(ICollection`1<DeclaredElementInstance> elements, ICollection`1<DeclaredElementInstance> initialTargets, SearchPattern searchPattern, ISearchDomain searchDomain);
    protected virtual ISearchResultsConsumer CreateSearchResultsConsumer(ICollection`1<DeclaredElementInstance> searchElements, NavigationContext navigationContext);
    public virtual IFinderSearchRoot get_Root();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.TypeScript.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Navigation.ZoneMarker : object {
}
[OptionsPageAttribute("AspxCodeStyle", "Code Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeStyle")]
public class JetBrains.ReSharper.Features.Web.Options.Asp.Editor.AspCodeStylePage : CodeStylePage {
    [PublicAPIAttribute]
public static string PID;
    public string Id { get; }
    public AspCodeStylePage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, AspCodeStylePageImplSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[FormattingSettingsPresentationComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Web.Options.Asp.Editor.AspCodeStylePageImplSchema : CodeStylePageSchema {
    public string PageName { get; }
    public KnownLanguage Language { get; }
    public AspCodeStylePageImplSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    public virtual KnownLanguage get_Language();
    public virtual CodePreviewPreparator GetCodePreviewPreparator();
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
}
[OptionsPageAttribute("Aspx.Editor", "ASP.NET", "JetBrains.ReSharper.Feature.Services.Resources.Web.FeaturesWebOptionsThemedIcons/AspNetOptionPage")]
public class JetBrains.ReSharper.Features.Web.Options.Asp.Editor.AspEditorPage : HtmlEditorBasePage`1<AspTypingAssistSettings> {
    [PublicAPIAttribute]
public static string PID;
    public AspEditorPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.Asp.Editor.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.Asp.ZoneMarker : object {
}
public abstract class JetBrains.ReSharper.Features.Web.Options.Html.Editor.HtmlEditorBasePage`1 : SimpleOptionsPage {
    protected HtmlEditorBasePage`1(string caption, Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext);
}
[OptionsPageAttribute("Html.Editor", "Html", "JetBrains.Application.Resources.IdeThemedIcons/HtmlDocument")]
public class JetBrains.ReSharper.Features.Web.Options.Html.Editor.HtmlEditorPage : HtmlEditorBasePage`1<HtmlTypingAssistSettings> {
    [PublicAPIAttribute]
public static string PID;
    public HtmlEditorPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.Html.Editor.ZoneMarker : object {
}
[OptionsPageAttribute("HtmlCodeStyle", "Formatting Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/FormattingStyle")]
internal class JetBrains.ReSharper.Features.Web.Options.Html.HtmlCodeStylePage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public HtmlCodeStylePage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, HtmlCodeStylePageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.Html.HtmlCodeStylePageSchema : IndentStylePageSchema`2<HtmlFormatterSettingsKey, HtmlCodeStylePreview> {
    public string PageName { get; }
    public KnownLanguage Language { get; }
    public HtmlCodeStylePageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    public virtual KnownLanguage get_Language();
    protected virtual void BuildFirstCategorySettings(SchemaBuilder<HtmlFormatterSettingsKey, HtmlCodeStylePreview> builder);
    protected virtual void Describe(SchemaBuilder<HtmlFormatterSettingsKey, HtmlCodeStylePreview> builder);
    private static void WrapLimitFixup(IContextBoundSettingsStore store);
    protected virtual Pair`2<string, PreviewParseType> GetPreviewForIndents();
}
[OptionsPageAttribute("HtmlCodeStyleOnlyStyle", "Syntax Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeStyle")]
internal class JetBrains.ReSharper.Features.Web.Options.Html.HtmlCodeStylePageStyle : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public HtmlCodeStylePageStyle(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IUIApplication environment, HtmlCodeStylePageStyleSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.Html.HtmlCodeStylePageStyleSchema : CodeStylePageSchema`2<HtmlFormatterSettingsKey, HtmlCodeStylePreview> {
    public string PageName { get; }
    public KnownLanguage Language { get; }
    public HtmlCodeStylePageStyleSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    public virtual KnownLanguage get_Language();
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
}
[CodePreviewPreparatorComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Options.Html.HtmlCodeStylePreview : CodePreviewPreparator {
    public KnownLanguage Language { get; }
    public ProjectFileType ProjectFileType { get; }
    public virtual KnownLanguage get_Language();
    public virtual ProjectFileType get_ProjectFileType();
}
[OptionsPageAttribute("Html.Js", "JavaScript and Frameworks", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/Others")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.Options.Html.HtmlJsIntegrationOptionsPage : CustomSimpleOptionsPage {
    [PublicAPIAttribute]
public static string PID;
    public HtmlJsIntegrationOptionsPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext, IPromptWinForm promptWinForms);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Options.Html.HtmlOptionsHider : object {
    protected ISettingsStore myStore;
    public HtmlOptionsHider(ISettingsStore store);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Features.Web.Options.Html.HtmlOptionsHider/<GetSettingsToHide>d__2")]
public virtual IEnumerable`1<SettingsEntry> GetSettingsToHide();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.Html.ZoneMarker : object {
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.BracesPageSchema : BracesPageSchemaBase`1<JavaScriptCodeStylePreview> {
    public BracesPageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
}
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.BracesPageSchemaBase`1 : JavaScriptCodeStylePageSchema`1<TPreview> {
    public string PageName { get; }
    public BracesPageSchemaBase`1(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, KnownLanguage language, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    protected virtual void GetBraceStyleSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.JavaScript.ContextActions.ZoneMarker : object {
}
[OptionsPageAttribute("JavaScriptInspections", "Inspections", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeInspections")]
public class JetBrains.ReSharper.Features.Web.Options.JavaScript.Inspections.JavaScriptInspectionsSettingsPage : SimpleOptionsPage {
    public static string PID;
    public JavaScriptInspectionsSettingsPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.JavaScript.Inspections.ZoneMarker : object {
}
public static class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptCodeStyleDefSpaces : object {
}
internal abstract class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptCodeStylePageSchema`1 : CodeStylePageSchema`2<JavaScriptCodeFormattingSettingsKey, TPreview> {
    private KnownLanguage myLanguage;
    public KnownLanguage Language { get; }
    protected JavaScriptCodeStylePageSchema`1(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, KnownLanguage language, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual KnownLanguage get_Language();
}
[OptionsPageAttribute("JavaScriptCodeStyle2", "Syntax Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeStyle")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptCodeStylePageStyle : CodeStylePage {
    private static string PID;
    public string Id { get; }
    public JavaScriptCodeStylePageStyle(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IUIApplication environment, JavaScriptCodeStyleSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[CodePreviewPreparatorComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptCodeStylePreview : CodePreviewPreparator {
    public KnownLanguage Language { get; }
    public ProjectFileType ProjectFileType { get; }
    protected virtual ITreeNode Parse(IParser parser, PreviewParseType parseType);
    public virtual KnownLanguage get_Language();
    public virtual ProjectFileType get_ProjectFileType();
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptCodeStyleSchema : CodeStylePageSchema`2<JavaScriptCodeFormattingSettingsKey, JavaScriptCodeStylePreview> {
    public string PageName { get; }
    public KnownLanguage Language { get; }
    public JavaScriptCodeStyleSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    public virtual KnownLanguage get_Language();
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
}
[OptionsPageAttribute("JavaScriptBracesPage", "Braces Layout", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/BracesLayout")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptFormatterBracesPage : CodeStylePage {
    private static string PID;
    public string Id { get; }
    public JavaScriptFormatterBracesPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, BracesPageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[OptionsPageAttribute("JavaScriptLineBreaks", "Line Breaks", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/LineBreaks")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptFormatterLineBreaksPage : CodeStylePage {
    private static string PID;
    public string Id { get; }
    public JavaScriptFormatterLineBreaksPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, LineBreaksPageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[OptionsPageAttribute("JavaScriptOthersPage", "Other", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/Others")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptFormatterOthersPage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public JavaScriptFormatterOthersPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, JavaScriptOthersPageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[OptionsPageAttribute("JavaScriptSpacesPage", "Spaces", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/Spaces")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptFormatterSpacesPage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public JavaScriptFormatterSpacesPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, SpacesPageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[OptionsPageAttribute("JavaScriptFormattingStylePage", "Formatting Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/FormattingStyle")]
public class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptFormattingStylePage : AEmptyOptionsPage {
    public static string PID;
}
[OptionsPageAttribute("JavaScriptIndentStylePage", "Tabs and Indents", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/Indent")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptIndentStylePage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public JavaScriptIndentStylePage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, JavaScriptIndentStylePageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptIndentStylePageSchema : IndentStylePageSchema`2<JavaScriptCodeFormattingSettingsKey, JavaScriptCodeStylePreview> {
    public KnownLanguage Language { get; }
    public JavaScriptIndentStylePageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual KnownLanguage get_Language();
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.JavaScriptOthersPageSchema : OthersPageSchemaBase`1<JavaScriptCodeStylePreview> {
    public JavaScriptOthersPageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.LineBreaksPageSchema : LineBreaksPageSchemaBase`1<JavaScriptCodeStylePreview> {
    public LineBreaksPageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
}
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.LineBreaksPageSchemaBase`1 : JavaScriptCodeStylePageSchema`1<TPreview> {
    public string PageName { get; }
    public LineBreaksPageSchemaBase`1(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, KnownLanguage language, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    protected virtual void GetBlankLinesSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
    protected virtual void GetPlaceOnNewLineSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
    protected virtual void GetLineBreakSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
    protected virtual void GetWrappingSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
    protected static void WrapLimitFixup(IContextBoundSettingsStore boundSettingsStore);
}
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.OthersPageSchemaBase`1 : JavaScriptCodeStylePageSchema`1<TPreview> {
    public string PageName { get; }
    public OthersPageSchemaBase`1(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
    protected virtual void GetAlignMultilineConstructs(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
    protected virtual void GetOther(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.SpacesPageSchema : SpacesPageSchemaBase`1<JavaScriptCodeStylePreview> {
    public SpacesPageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
}
internal class JetBrains.ReSharper.Features.Web.Options.JavaScript.SpacesPageSchemaBase`1 : JavaScriptCodeStylePageSchema`1<TPreview> {
    public string PageName { get; }
    public SpacesPageSchemaBase`1(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, KnownLanguage language, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    protected virtual void GetSpaceCategories(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TPreview> builder);
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.JavaScript.ZoneMarker : object {
}
[OptionsPageAttribute("Razor.Editor", "Razor", "JetBrains.ReSharper.Psi.Resources.PsiRazorThemedIcons/Razor")]
public class JetBrains.ReSharper.Features.Web.Options.Razor.Editor.RazorEditorPage : HtmlEditorBasePage`1<RazorTypingAssistSettings> {
    [PublicAPIAttribute]
public static string PID;
    public RazorEditorPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.Razor.Editor.ZoneMarker : object {
}
[OptionsPageAttribute("RazorCodeStyle", "Code Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeStyle")]
public class JetBrains.ReSharper.Features.Web.Options.Razor.RazorCodeStylePage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public RazorCodeStylePage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, RazorCodeStylePageImplSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[FormattingSettingsPresentationComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Web.Options.Razor.RazorCodeStylePageImplSchema : CodeStylePageSchema {
    public string PageName { get; }
    public KnownLanguage Language { get; }
    public RazorCodeStylePageImplSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    public virtual KnownLanguage get_Language();
    public virtual CodePreviewPreparator GetCodePreviewPreparator();
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
}
[CodePreviewPreparatorComponentAttribute("16")]
public class JetBrains.ReSharper.Features.Web.Options.Razor.RazorCodeStylePreview : CodePreviewPreparator {
    public KnownLanguage Language { get; }
    public ProjectFileType ProjectFileType { get; }
    public virtual KnownLanguage get_Language();
    public virtual ProjectFileType get_ProjectFileType();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.Razor.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.TypeScript.ContextActions.ZoneMarker : object {
}
[OptionsPageAttribute("TypeScriptGeneratedCode", "Generated Code", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/GeneratedCode")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.Inspections.TypeScriptGeneratorSettingsPage : SimpleOptionsPage {
    public static string PID;
    public TypeScriptGeneratorSettingsPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext, ICommonFileDialogs commonFileDialogs);
}
[OptionsPageAttribute("TypeScriptInspections", "Inspections", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeInspections")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.Inspections.TypeScriptInspectionsSettingsPage : SimpleOptionsPage {
    public static string PID;
    public TypeScriptInspectionsSettingsPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext);
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TsBracesPageScheme : BracesPageSchemaBase`1<TypeScriptCodeStylePreview> {
    public TsBracesPageScheme(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    protected virtual void GetBraceStyleSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TypeScriptCodeStylePreview> builder);
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TsLineBreaksPageSchema : LineBreaksPageSchemaBase`1<TypeScriptCodeStylePreview> {
    public TsLineBreaksPageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    protected virtual void GetPlaceOnNewLineSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TypeScriptCodeStylePreview> builder);
    protected virtual void GetLineBreakSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TypeScriptCodeStylePreview> builder);
    protected virtual void GetBlankLinesSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TypeScriptCodeStylePreview> builder);
    protected virtual void GetWrappingSettings(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TypeScriptCodeStylePreview> builder);
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TsSpacesPageSchema : SpacesPageSchemaBase`1<TypeScriptCodeStylePreview> {
    public TsSpacesPageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    protected virtual void GetSpaceCategories(SchemaBuilder<JavaScriptCodeFormattingSettingsKey, TypeScriptCodeStylePreview> builder);
}
[OptionsPageAttribute("TypeScriptBracesPage", "Braces Layout", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/BracesLayout")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptBracesPage : CodeStylePage {
    private static string PID;
    public string Id { get; }
    public TypeScriptBracesPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, TsBracesPageScheme schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[OptionsPageAttribute("TypeScriptCodeStyle2", "Syntax Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeStyle")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptCodeStylePageStyle : CodeStylePage {
    private static string PID;
    public string Id { get; }
    public TypeScriptCodeStylePageStyle(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, TypeScriptCodeStyleSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[CodePreviewPreparatorComponentAttribute("16")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptCodeStylePreview : CodePreviewPreparator {
    public KnownLanguage Language { get; }
    public ProjectFileType ProjectFileType { get; }
    protected virtual ITreeNode Parse(IParser parser, PreviewParseType parseType);
    public virtual KnownLanguage get_Language();
    public virtual ProjectFileType get_ProjectFileType();
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptCodeStyleSchema : CodeStylePageSchema`2<TypeScriptCodeStyleSettingsKey, TypeScriptCodeStylePreview> {
    public string PageName { get; }
    public KnownLanguage Language { get; }
    public TypeScriptCodeStyleSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual string get_PageName();
    public virtual KnownLanguage get_Language();
    protected virtual IEnumerable`1<ICodeStyleEntry> Describe();
}
[OptionsPageAttribute("TypeScriptFormattingStyle", "Formatting Style", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/FormattingStyle")]
public class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptFormattingStylePage : AEmptyOptionsPage {
    public static string PID;
}
[OptionsPageAttribute("TypeScriptIndentStylePage", "Tabs and Indents", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/Indent")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptIndentStylePage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public TypeScriptIndentStylePage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, TypeScriptIndentStylePageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[FormattingSettingsPresentationComponentAttribute("10")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptIndentStylePageSchema : IndentStylePageSchema`2<JavaScriptCodeFormattingSettingsKey, TypeScriptCodeStylePreview> {
    public KnownLanguage Language { get; }
    public TypeScriptIndentStylePageSchema(Lifetime lifetime, IContextBoundSettingsStoreLive smartContext, IValueEditorViewModelFactory itemViewModelFactory, IComponentContainer container, ISettingsToHide settingsToHide);
    public virtual KnownLanguage get_Language();
}
[OptionsPageAttribute("TypeScriptLineBreaks", "Line Breaks", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/LineBreaks")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptLineBreaksPage : CodeStylePage {
    private static string PID;
    public string Id { get; }
    public TypeScriptLineBreaksPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, TsLineBreaksPageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[OptionsPageAttribute("TypeScriptOthersPage", "Other", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/Others")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptOthersPage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public TypeScriptOthersPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, TypeScriptOthersPageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[OptionsPageAttribute("TypeScriptSpacesPage", "Spaces", "JetBrains.ReSharper.Resources.Resources.Icons.PsiFeaturesUnsortedOptionsThemedIcons/Spaces")]
internal class JetBrains.ReSharper.Features.Web.Options.TypeScript.TypeScriptSpacesPage : CodeStylePage {
    public static string PID;
    public string Id { get; }
    public TypeScriptSpacesPage(Lifetime lifetime, OptionsSettingsSmartContext smartContext, IUIApplication environment, TsSpacesPageSchema schema, CodeStylePreview preview, IComponentContainer container);
    public virtual string get_Id();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.TypeScript.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.Options.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.RegExp.CodeCompletion.ItemProviders.AfterRegularExpressionItemProvider : AfterRegularExpressionItemProviderBase {
}
public class JetBrains.ReSharper.Features.Web.RegExp.CodeCompletion.ItemProviders.AfterRegularExpressionItemProviderBase : ItemsProviderOfSpecificContext`1<JavaScriptCodeCompletionContext> {
    protected virtual bool IsAvailable(JavaScriptCodeCompletionContext context);
    public static IList`1<RegexFlag> ParseFlagsFast(string text);
    protected virtual bool AddLookupItems(JavaScriptCodeCompletionContext context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
public class JetBrains.ReSharper.Features.Web.RegExp.CodeCompletion.ItemProviders.InjectedJsAfterRegularExpressionItemProvider : AfterRegularExpressionItemProviderBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.RegExp.CodeCompletion.ItemProviders.InsideRegExpCtorFlagsItemProvider : ItemsProviderOfSpecificContext`1<CompletionContextInStringLiterals> {
    protected virtual bool IsAvailable(CompletionContextInStringLiterals context);
    protected virtual void TransformItems(CompletionContextInStringLiterals context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.RegExp.CodeCompletion.ItemProviders.InsideStringReplaceItemProvider : ItemsProviderOfSpecificContext`1<CompletionContextInStringLiterals> {
    protected virtual bool IsAvailable(CompletionContextInStringLiterals context);
    protected virtual void TransformItems(CompletionContextInStringLiterals context, IItemsCollector collector);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.RegExp.JsRegex.LanguageImpl.JsRegexLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.RegExp.CodeCompletion.ItemProviders.JsRegularExpressionCompletionProvider : object {
    [CompilerGeneratedAttribute]
private JavaScriptLanguageLevel <JsLanguageLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Pair`2<IJsRegexLetter, RegexFlag>> <Flags>k__BackingField;
    public JavaScriptLanguageLevel JsLanguageLevel { get; public set; }
    public IList`1<Pair`2<IJsRegexLetter, RegexFlag>> Flags { get; public set; }
    public sealed virtual bool IsAtRegexStart(RegExpCodeCompletionContext context);
    public sealed virtual bool IsAtRegexEnd(RegExpCodeCompletionContext context);
    public sealed virtual bool IsInFlagsZone(RegExpCodeCompletionContext context);
    public sealed virtual bool InitializeContext(ITreeNode owner, ITreeNode file);
    [CompilerGeneratedAttribute]
public JavaScriptLanguageLevel get_JsLanguageLevel();
    [CompilerGeneratedAttribute]
public void set_JsLanguageLevel(JavaScriptLanguageLevel value);
    [CompilerGeneratedAttribute]
public IList`1<Pair`2<IJsRegexLetter, RegexFlag>> get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(IList`1<Pair`2<IJsRegexLetter, RegexFlag>> value);
    public sealed virtual bool ValidateFinalNode(ITreeNode node);
    public sealed virtual bool ShouldPreserveRange(ITreeNode containsNode, ICollection`1<ITreeNode> leftNodes);
    public sealed virtual string GetReplacementText(ITreeNode owner, string text);
    public sealed virtual void AddStartStringAnchors(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddEndStringAnchors(ICollection`1<LookupItemContent> contents);
    public sealed virtual bool SkipFromCompletion(ITreeNode containsNode, ICollection`1<ITreeNode> leftNodes);
    public sealed virtual bool CanBeQuantifier(ITreeNode containsNode, ICollection`1<ITreeNode> leftNodes);
    public sealed virtual void AddAnchors(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddSets(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddGroups(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddComments(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddRegularCharacters(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddDotCharacters(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddEscapeCharacters(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddGroupParts(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddFlags(ICollection`1<LookupItemContent> contents);
    public sealed virtual bool IsLBracket(TokenNodeType t);
    public sealed virtual bool IsLParenth(TokenNodeType t);
    public sealed virtual bool IsTopLevelRegularExpression(ITreeNode containsNode);
}
public class JetBrains.ReSharper.Features.Web.RegExp.CodeCompletion.JsSpecificItemContentCollection : object {
    public static IEnumerable`1<LookupItemContent> JsEscapeCharacters;
    public static LookupItemContent ExtendedUtfEscape;
    public static IEnumerable`1<LookupItemContent> JsRegexFlags;
    public static IEnumerable`1<LookupItemContent> JsRegexEs6Flags;
    private static JsSpecificItemContentCollection();
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Features.Web.RegExp.Daemon.CustomKeyHelper : object {
    private static Key`1<IList`1<Pair`2<IJsRegexLetter, RegexFlag>>> ourFlagsKey;
    private static CustomKeyHelper();
    [ExtensionAttribute]
public static IList`1<Pair`2<IJsRegexLetter, RegexFlag>> GetFlags(ElementProblemAnalyzerData data);
    [ExtensionAttribute]
public static void SetFlags(ElementProblemAnalyzerData data, IList`1<Pair`2<IJsRegexLetter, RegexFlag>> ctx);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.RegExp.JsRegex.LanguageImpl.JsRegexLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.RegExp.Daemon.JsRegexDaemonProvider : object {
    public sealed virtual void Initialize(ElementProblemAnalyzerData data, IRegexContainer file);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Features.Web.RegExp.Daemon.RegexEscapeCharacterProblemAnalyzer : ElementProblemAnalyzer`1<IJsRegexEscape> {
    protected virtual void Run(IJsRegexEscape escapeParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Features.Web.RegExp.Daemon.RegexExpressionProblemAnalyzer : ElementProblemAnalyzer`1<IJsRegularExpression> {
    protected virtual void Run(IJsRegularExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Features.Web.RegExp.Daemon.RegexLetterClassAtomProblemAnalyzer : ElementProblemAnalyzer`1<IJsRegexClassAtom> {
    private static bool IsCharacterClassEscape(string text);
    protected virtual void Run(IJsRegexClassAtom element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Features.Web.RegExp.Daemon.RegexLetterSlashProblemAnalyzer : ElementProblemAnalyzer`1<IJsRegexLetter> {
    protected virtual void Run(IJsRegexLetter element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.RegExp.Daemon.ZoneMarker : object {
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Features.Web.RegExp.Razor.RegExpPsiProvider : LiteralsInjectionPsiProvider`2<RazorCSharpLanguage, ClrRegexLanguage> {
    public bool ProvidedLanguageCanHaveNestedInjects { get; }
    public RegExpPsiProvider(ClrRegexInjectionProvider injectorProvider);
    public virtual bool get_ProvidedLanguageCanHaveNestedInjects();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.RegExp.Razor.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.RegExp.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.RegExp.HtmlRegExp.LanguageImpl.HtmlRegexLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Features.Web.RegExpForHtml.JsRegularExpressionCompletionProvider : object {
    [CompilerGeneratedAttribute]
private IList`1<Pair`2<IJsRegexLetter, RegexFlag>> <Flags>k__BackingField;
    public IList`1<Pair`2<IJsRegexLetter, RegexFlag>> Flags { get; public set; }
    public sealed virtual bool IsAtRegexStart(RegExpCodeCompletionContext context);
    public sealed virtual bool IsAtRegexEnd(RegExpCodeCompletionContext context);
    public sealed virtual bool IsInFlagsZone(RegExpCodeCompletionContext context);
    public sealed virtual bool InitializeContext(ITreeNode owner, ITreeNode file);
    [CompilerGeneratedAttribute]
public IList`1<Pair`2<IJsRegexLetter, RegexFlag>> get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(IList`1<Pair`2<IJsRegexLetter, RegexFlag>> value);
    public sealed virtual bool ValidateFinalNode(ITreeNode node);
    public sealed virtual bool ShouldPreserveRange(ITreeNode containsNode, ICollection`1<ITreeNode> leftNodes);
    public sealed virtual string GetReplacementText(ITreeNode owner, string text);
    public sealed virtual void AddStartStringAnchors(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddEndStringAnchors(ICollection`1<LookupItemContent> contents);
    public sealed virtual bool SkipFromCompletion(ITreeNode containsNode, ICollection`1<ITreeNode> leftNodes);
    public sealed virtual bool CanBeQuantifier(ITreeNode containsNode, ICollection`1<ITreeNode> leftNodes);
    public sealed virtual void AddAnchors(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddSets(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddGroups(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddComments(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddRegularCharacters(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddDotCharacters(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddEscapeCharacters(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddGroupParts(ICollection`1<LookupItemContent> contents);
    public sealed virtual void AddFlags(ICollection`1<LookupItemContent> contents);
    public sealed virtual bool IsLBracket(TokenNodeType t);
    public sealed virtual bool IsLParenth(TokenNodeType t);
    public sealed virtual bool IsTopLevelRegularExpression(ITreeNode containsNode);
}
public class JetBrains.ReSharper.Features.Web.RegExpForHtml.JsSpecificItemContentCollection : object {
    public static IEnumerable`1<LookupItemContent> JsEscapeCharacters;
    public static LookupItemContent ExtendedUtfEscape;
    private static JsSpecificItemContentCollection();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.RegExpForHtml.ZoneMarker : object {
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public static class JetBrains.ReSharper.Features.Web.Resources.Strings : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string AfterAndSettingDescription { get; }
    public static string AfterSpaceInsectionSettingDescription { get; }
    public static string ASPNETOptionPageTitle { get; }
    public static string ASPNETSettingDescription { get; }
    public static string BracesLayoutOptionPageTitle { get; }
    public static string ClassesSettingDescription { get; }
    public static string Classes_Text { get; }
    public static string CodeStyleOptionPageTitle { get; }
    public static string CompleteOnSpaceSettingDescription { get; }
    public static string CSSSettingDescription { get; }
    public static string DynamicPropertiesSettingDescription { get; }
    public static string DynamicProperties_Text { get; }
    public static string EnterActionSettingDescription { get; }
    public static string EnumsSettingDescription { get; }
    public static string Enums_Text { get; }
    public static string FieldsSettingDescription { get; }
    public static string FilterDynamicPropertiesActionText { get; }
    public static string FilterDynamicPropertiesInvertActionText { get; }
    public static string FormattingStyleOptionPageTitle { get; }
    public static string FunctionMembers_Text { get; }
    public static string GenerateContentForPlaceholdersActionText { get; }
    public static string GeneratedCodeOptionPageTitle { get; }
    public static string GoToMatchingTagsActionText { get; }
    public static string HtmlOptionPageTitle { get; }
    public static string HtmlSettingDescription { get; }
    public static string InDocCommentsSettingDescription { get; }
    public static string InspectionsOptionPageTitle { get; }
    public static string InterfacesSettingDescription { get; }
    public static string Interfaces_Text { get; }
    public static string JavaScriptAndFrameworksOptionPageTitle { get; }
    public static string JavaScriptSettingDescription { get; }
    public static string KeywordsSettingDescription { get; }
    public static string LineBreaksOptionPageTitle { get; }
    public static string LocalVariablesSettingDescription { get; }
    public static string LocalVariables_Text { get; }
    public static string MethodsSettingDescription { get; }
    public static string ModulesSettingDescription { get; }
    public static string Modules_Text { get; }
    public static string NonCompletingCharactersSettingDescription { get; }
    public static string OtherOptionPageTitle { get; }
    public static string OverrideVSIntelliSenseForTypeScriptSettingDescription { get; }
    public static string ParametersSettingDescription { get; }
    public static string Parameters_Text { get; }
    public static string PrivateSettingDescription { get; }
    public static string PrivateSymbols_Text { get; }
    public static string PropertiesSettingDescription { get; }
    public static string ProtectedSettingDescription { get; }
    public static string ProtectedSymbols_Text { get; }
    public static string PublicSettingDescription { get; }
    public static string PublicSymbols_Text { get; }
    public static string RazorOptionPageTitle { get; }
    public static string RazorSettingDescription { get; }
    public static string SpacesOptionPageTitle { get; }
    public static string StyleHierarchyActionGroupText { get; }
    public static string SyntaxStyleOptionPageTitle { get; }
    public static string TabActionSettingDescription { get; }
    public static string TabsAndIndentsOptionPageTitle { get; }
    public static string TypeScriptSettingDescription { get; }
    public static string TypeScriptTsFilesSettingDescription { get; }
    public static string BaseOnThisAction_Text { get; }
    public static string ChildStylesHierarchyAction_Text { get; }
    public static string ParentStylesHierarchyAction_Text { get; }
    public static string StyleHierarchyAction_Text { get; }
    public static string UpdateStyleHierarchyAction_Text { get; }
    public static string AutoFormatOn_Enter_Text { get; }
    public static string AutoFormatOnClosing_tag_Text { get; }
    public static string _SynchronousChangingOfMatchingTag_Text { get; }
    public static string ASPNET_Caption { get; }
    public static string HTML_Caption { get; }
    public static string Razor_Caption { get; }
    public static string Allow_CPUIntensiveTypingAssists_Text { get; }
    public static string JavaScriptLanguageLevel_ComboEnum_Caption { get; }
    public static string EnableJSXSyntaxInJSFiles_ComboEnum_Caption { get; }
    public static string AnalysePropertiesContextWhenInspecting_BoolOption_Text { get; }
    public static string IgnoreAssignmentInConditionWarningIf_BoolOption_Text { get; }
    public static string EnableSemanticFunctionColoring_BoolOption_Text { get; }
    public static string ResolveJavaScriptReferenceCommentsRelative_BoolOption_Text { get; }
    public static string RootPathForReferencesInRequire_Text_Text { get; }
    public static string RootPathForGeneratedRelativeFileReferences_FolderChooserOption_ToolTip { get; }
    public static string ThisOptionIsAvailableOnlyIfYouHaveSyntax_Text { get; }
    public static string TypeScriptLanguageLevel_ComboEnum_Caption { get; }
    public static string EnableSemanticTypeGuardsNarrowingColoring_BoolOption_Text { get; }
    public static string DisablePropertyDottedAccessSyntaxFor_BoolOption_Text { get; }
    public static string SearchForReferencesInJSDocsInsideDTs_BoolOption_Text { get; }
    public static string WhenAnalyzingAFileUseTheClosestTsconfig_Text { get; }
    public static string SupportAngularMarkupInHTMLPages_ComboEnum_Caption { get; }
    public static string ConteNtForPlaceholders_Caption { get; }
    public static string GenerateContentForMasterpageSContent_Caption { get; }
    public static string GenerateContentForMasterpageSContent_Text { get; }
    public static string AnywhereInAngular2HTML_Text { get; }
    public static string WhereATagCouldBeInAngular2HTML_Text { get; }
    public static string WhereAnAttributeCouldBeInAngular2HTML_Text { get; }
    public static string AnywhereInASPNET_Text { get; }
    public static string WhereATagCouldBeInASPNET_Text { get; }
    public static string WhereAnAttributeCouldBeInASPNET_Text { get; }
    public static string DefaultHTMLFileTemplates_Text { get; }
    public static string DefaultHTMLLiveTemplates_Text { get; }
    public static string DefaultHTMLSurroundTemplates_Text { get; }
    public static string HTMLLike_Text { get; }
    public static string AnywhereInHTMLOrSimilarLanguages_Text { get; }
    public static string WhereATagCouldBeInHTMLOrSimilarLanguages_Text { get; }
    public static string WhereAnAttributeCouldBeInHTMLOrSimilar_Text { get; }
    public static string AnywhereInHTMLOnly_Text { get; }
    public static string WhereATagCouldBeInHTMLOnly_Text { get; }
    public static string WhereAnAttributeCouldBeInHTMLOnly_Text { get; }
    public static string HTML_Text { get; }
    public static string HTMLAndSimilar_Text { get; }
    public static string HTMLAndSimilarTags_Text { get; }
    public static string HTMLAndSimilarAttributes_Text { get; }
    public static string HTMLTags_Text { get; }
    public static string HTMLAttributes_Text { get; }
    public static string DefaultJSTSLiveTemplates_Text { get; }
    public static string DefaultJSTSSurroundTemplates_Text { get; }
    public static string ProjectsWithTypeScript_Text { get; }
    public static string AllowInTypeScript_Text { get; }
    public static string MaximumJSVersion_Text { get; }
    public static string MinimumJSVersion_Text { get; }
    public static string NONE_Text { get; }
    public static string AnywhereInTypeScript_Text { get; }
    public static string InTypeScriptWhereExpressionIsExpected_Text { get; }
    public static string InTypeScriptWhereStatementIsExpected_Text { get; }
    public static string InTypeScriptWhereModuleMemberIsExpected_Text { get; }
    public static string InTypeScriptWhereTypeMemberIsExpected_Text { get; }
    public static string AnywhereInRazor_Text { get; }
    public static string WhereATagCouldBeInRazor_Text { get; }
    public static string WhereAnAttributeCouldBeInRazor_Text { get; }
    public static string SpecificRazorLanguage_Text { get; }
    public static string MatchedActions_Text { get; }
    public static string MatchedControllers_Text { get; }
    public static string Angular2HTMLTags_Text { get; }
    public static string Angular2HTMLAttributes_Text { get; }
    public static string DefaultAngular2HTMLLiveTemplates_Text { get; }
    public static string ASPNETTags_Text { get; }
    public static string ASPNETAttributes_Text { get; }
    public static string TSExpressions_Text { get; }
    public static string TSStatements_Text { get; }
    public static string TSModuleMembers_Text { get; }
    public static string TSTypeMembers_Text { get; }
    public static string _Tags_Text { get; }
    public static string _Attributes_Text { get; }
    public static string ChildStylesOf__Text { get; }
    public static string ParentStylesOf__Text { get; }
    public static string HierarchyOf__Text { get; }
    public static string SelectStyle_Text { get; }
    public static string MatchedTags_Caption { get; }
    public static string Found_MatchedTags_Text { get; }
    public static string Displaying_Of_FoundMatchedTags_Text { get; }
    public static string Found_MatchedTag_Text { get; }
    public static string Displaying_Of_FoundMatchedTag_Text { get; }
    public static string NoMatchedTagsFound_Text { get; }
    public static string Endpoint_Text { get; }
    public static string DeclarationsOfQueryParameter__Text { get; }
    public static string DeclarationsOfEndpoint__Text { get; }
    public static string JavaScriptTemplatesMIMETypes_Caption { get; }
    public static string UnterminatedRegularExpressionLiteral_Text { get; }
    public static string InvalidRegularExpressionFlagOneOfIG_Text { get; }
    public static string InvalidRangeInCharacterSet_ToolTip { get; }
    public static string UnexpectedQuantifier_ToolTip { get; }
    public static string DefaultVariableKindVarLetConstSuggest_Text { get; }
    public static string DefinesHowStatementsAreTerminated_Text { get; }
    public static string DefinesWhetherSingleQuotesOrDoubleQuotes_Text { get; }
    public static string DefinesWhetherPublicModifierShouldBe_Text { get; }
    public static string PreferQualifyingInsteadOfAddingAliases_Text { get; }
    public static string RelativeReferencesInRequire_Text { get; }
    public static string AllowRelativeFileReferencesStyleChange_Text { get; }
    public static string ImportReferenceStyleApplicableOnlyFor_Text { get; }
    public static string ExplicitAlwaysSpecifyExplicitTypesAlways_Text { get; }
    public static string NoImplicitAnyForceExplicitAnySpecifications_Text { get; }
    public static string BracesLayout_Text { get; }
    public static string ForceBraces_Text { get; }
    public static string CaseStatement_Text { get; }
    public static string BlankLines_Text { get; }
    public static string LineBreaks_Text { get; }
    public static string WrappingAndChopping_Text { get; }
    public static string PlaceOnANewLine_Text { get; }
    public static string AlignMultilineConstructs_Text { get; }
    public static string Other_Text { get; }
    public static string ProcessingInstructions_Text { get; }
    public static string InsideOfTagHeader_Text { get; }
    public static string AroundTags_Text { get; }
    public static string PreserveExistingFormatting_Text { get; }
    public static string Commas_Text { get; }
    public static string Semicolons_Text { get; }
    public static string InFunctionInvocations_Text { get; }
    public static string InFunctionDeclarations_Text { get; }
    public static string InControlStatements_Text { get; }
    public static string InIndexExpressions_Text { get; }
    public static string InTernaryOperators_Text { get; }
    public static string InObjectExpressions_Text { get; }
    public static string InImportDeclarations_Text { get; }
    public static string InArrayLiterals_Text { get; }
    public static string InExpressions_Text { get; }
    public static string CaseStatements_Text { get; }
    public static string TemplateLiterals_Text { get; }
    public static string Lambdas_Text { get; }
    public static string TypeParametersAndArguments_Text { get; }
    public static string TypeAnnotations_Text { get; }
    public static string UnionAndIntersectionTypes_Text { get; }
    public static string Variables_Text { get; }
    public static string Quotes_Text { get; }
    public static string Statements_Text { get; }
    public static string VariablesInheritedFromJavaScript_Text { get; }
    public static string QuotesInheritedFromJavaScript_Text { get; }
    public static string StatementsInheritedFromJavaScript_Text { get; }
    public static string Modifiers_Text { get; }
    public static string Aliases_Text { get; }
    public static string TypeSpecification_Text { get; }
    public static string InsertRunatMacroDefinition_Description { get; }
    public static string InsertRunatMacroDefinition_LongDescription { get; }
    public static string GenerateContentForMasterpageContentPlaceholdersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_Description { get; }
    public static string GenerateContentForMasterpageContentPlaceholdersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_LongDescription { get; }
    public static string ShowCompletionListWithAvailableASPNETMVCActionsAtThePointWhereTheVariableIsEvaluatedMacroDefinition_Description { get; }
    public static string ShowCompletionListWithAvailableASPNETMVCActionsAtThePointWhereTheVariableIsEvaluatedMacroDefinition_LongDescription { get; }
    public static string ShowCompletionListWithAvailableASPNETMVCControllersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_Description { get; }
    public static string ShowCompletionListWithAvailableASPNETMVCControllersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_LongDescription { get; }
    public static string SuggestAttributeValueForCurrentHtmlTagAttributeMacroDefinition_Description { get; }
    public static string SuggestAttributeValueForCurrentHtmlTagAttributeMacroDefinition_LongDescription { get; }
    public static string SuggestsAttributeNameUsedInTheSameTagsInCurrentDocumentMacroDefinition_Description { get; }
    public static string SuggestsAttributeNameUsedInTheSameTagsInCurrentDocumentMacroDefinition_LongDescription { get; }
    public static string SuggestTagNameUsedInCurrentDocumentMacroDefinition_Description { get; }
    public static string SuggestTagNameUsedInCurrentDocumentMacroDefinition_LongDescription { get; }
    public static string In__Text { get; }
    public static string Angular2HTMLFiles_Text { get; }
    public static string ASPNETFiles_Text { get; }
    public static string HTMLFiles_Text { get; }
    public static string JavaScriptFiles_Text { get; }
    public static string RazorFiles_Text { get; }
    public static string TypeScriptFiles_Text { get; }
    public static string TypeScriptProjects_Text { get; }
    public static string Template_Editable_Q3JlYXRlIHNjcmlwdCB0YWcEQ { get; }
    public static string Template_Editable_Q3JlYXRlIHRhZwEQEQ { get; }
    public static string Template_Editable_Q3JlYXRlIEFTUC5ORVQgdGFn { get; }
    public static string Template_Editable_Q3JlYXRlIGNsb3NlZCB0YWcEQ { get; }
    public static string Template_Editable_Q3JlYXRlIHRhZyBhdHRyaWJ1dGUEQ { get; }
    public static string Template_Editable_QVNQLk5FVCBIeXBlcmxpbmsEQ { get; }
    public static string Template_Editable_UmF6b3IgaW5oZXJpdHMgZGlyZWN0aXZl { get; }
    public static string Template_Editable_UmF6b3IgbW9kZWwgZGlyZWN0aXZl { get; }
    public static string Template_Editable_UmF6b3Igc2VjdGlvbgEQEQ { get; }
    public static string Template_Editable_dGFn { get; }
    public static string Template_Editable_bGluawEQEQ { get; }
    public static string Template_Editable_V2ViIFBhZ2UEQ { get; }
    public static string Template_Editable_TWFzdGVyIHBhZ2Ugd2l0aG91dCBiYXNlIG1hc3RlciBwYWdl { get; }
    public static string Template_Editable_V2ViIGNvbnRyb2wEQ { get; }
    public static string Template_Editable_V2ViIGZvcm0gd2l0aG91dCBtYXN0ZXIgcGFnZQEQEQ { get; }
    public static string Template_Editable_V2ViIGZvcm0gd2l0aCBtYXN0ZXIgcGFnZQEQEQ { get; }
    public static string Template_Editable_TWFzdGVyIHBhZ2Ugd2l0aCBiYXNlIG1hc3RlciBwYWdl { get; }
    public static string Template_Editable_V2ViIENvbnRyb2wEQ { get; }
    public static string Template_Editable_TVZDIFZpZXcgUGFnZSB3aXRoIG1hc3RlciBwYWdl { get; }
    public static string Template_Editable_TVZDIFZpZXcgUGFnZSB3aXRob3V0IG1hc3RlciBwYWdl { get; }
    public static string Template_Editable_TVZDIFZpZXcgVXNlckNvbnRyb2wEQ { get; }
    public static string Template_Editable_UmF6b3IgTVZDIFBhcnRpYWwgVmlldwEQEQ { get; }
    public static string Template_Editable_UmF6b3IgTVZDIFZpZXcEQ { get; }
    public static string Template_Editable_UmF6b3IgTVZDIFZpZXcgd2l0aCBMYXlvdXQEQ { get; }
    public static string Template_Editable_Q29udHJvbGxlcgEQEQ { get; }
    public static string Template_Editable_Q29tcG9uZW50 { get; }
    public static string Template_Editable_UGFnZQEQEQ { get; }
    public static string Template_Editable_Qmxhem9yIENvbXBvbmVudAEQEQ { get; }
    public static string Template_Editable_JlR5cGVTY3JpcHQgQ2xhc3MEQ { get; }
    public static string Template_Editable_VHlwZVNjcmlwdCBFbXB0eSBGaSZsZQEQEQ { get; }
    public static string Template_Editable_VFNYIEVtcHR5IEZpJmxl { get; }
    public static string Template_Editable_VCZ5cGVTY3JpcHQgSW50ZXJmYWNl { get; }
    public static string Template_Editable_VHlwZVNjcmlwdCAmTW9kdWxl { get; }
    public static string Template_Editable_Q29udGVudCBQYWdl { get; }
    public static string Template_Editable_Q29udGVudCBWaWV3 { get; }
    public static string Template_Editable_Q3JlYXRlICB0YWcgYXR0cmlidXRl { get; }
    public static string Template_Editable_QVNQLk5FVCBNVkMgSHRtbC5BY3Rpb25MaW5r { get; }
    public static string Template_Editable_QVNQLk5FVCBNVkMgVXJsLkFjdGlvbgEQEQ { get; }
    public static string Template_Editable_QVNQLk5FVCBDb250cm9sbGVyIFJlZGlyZWN0VG9BY3Rpb24EQ { get; }
    public static string Template_Editable_d2l0aCBDb2RlLUJlaGluZCAoKi5yYXpvci5jcykgRmlsZQEQEQ { get; }
    public static string Template_Editable_d2l0aCBTY29wZWQgQ1NTICgqLnJhem9yLmNzcykgRmlsZQEQEQ { get; }
    public static string Template_Editable_d2l0aCBKUyAoKi5yYXpvci5qcykgRmlsZQEQEQ { get; }
    public static string GenerateOption_CopyDefaultContent_Text { get; }
    public static string WrapLinesDescription { get; }
    public static string FormattingStyle_Text { get; }
    public static string SyntaxStyle_Text { get; }
    public static string Spaces_Text { get; }
    public static string DumpLexerState { get; }
    public static string AfterSpaceInRazorDirectivesSettingsDescription { get; }
    public static string GoToControllerOrViewActionText { get; }
    public static string GoToControllerCaptionText { get; }
    public static string FindComponentUsagesCaptionText { get; }
    public static string GoToViewCaptionText { get; }
    private static Strings();
    public static JetResourceManager get_ResourceManager();
    public static string Choice(string format, Object[] args);
    public static string get_AfterAndSettingDescription();
    public static string get_AfterSpaceInsectionSettingDescription();
    public static string get_ASPNETOptionPageTitle();
    public static string get_ASPNETSettingDescription();
    public static string get_BracesLayoutOptionPageTitle();
    public static string get_ClassesSettingDescription();
    public static string get_Classes_Text();
    public static string get_CodeStyleOptionPageTitle();
    public static string get_CompleteOnSpaceSettingDescription();
    public static string get_CSSSettingDescription();
    public static string get_DynamicPropertiesSettingDescription();
    public static string get_DynamicProperties_Text();
    public static string get_EnterActionSettingDescription();
    public static string get_EnumsSettingDescription();
    public static string get_Enums_Text();
    public static string get_FieldsSettingDescription();
    public static string get_FilterDynamicPropertiesActionText();
    public static string get_FilterDynamicPropertiesInvertActionText();
    public static string get_FormattingStyleOptionPageTitle();
    public static string get_FunctionMembers_Text();
    public static string get_GenerateContentForPlaceholdersActionText();
    public static string get_GeneratedCodeOptionPageTitle();
    public static string get_GoToMatchingTagsActionText();
    public static string get_HtmlOptionPageTitle();
    public static string get_HtmlSettingDescription();
    public static string get_InDocCommentsSettingDescription();
    public static string get_InspectionsOptionPageTitle();
    public static string get_InterfacesSettingDescription();
    public static string get_Interfaces_Text();
    public static string get_JavaScriptAndFrameworksOptionPageTitle();
    public static string get_JavaScriptSettingDescription();
    public static string get_KeywordsSettingDescription();
    public static string get_LineBreaksOptionPageTitle();
    public static string get_LocalVariablesSettingDescription();
    public static string get_LocalVariables_Text();
    public static string get_MethodsSettingDescription();
    public static string get_ModulesSettingDescription();
    public static string get_Modules_Text();
    public static string get_NonCompletingCharactersSettingDescription();
    public static string get_OtherOptionPageTitle();
    public static string get_OverrideVSIntelliSenseForTypeScriptSettingDescription();
    public static string get_ParametersSettingDescription();
    public static string get_Parameters_Text();
    public static string get_PrivateSettingDescription();
    public static string get_PrivateSymbols_Text();
    public static string get_PropertiesSettingDescription();
    public static string get_ProtectedSettingDescription();
    public static string get_ProtectedSymbols_Text();
    public static string get_PublicSettingDescription();
    public static string get_PublicSymbols_Text();
    public static string get_RazorOptionPageTitle();
    public static string get_RazorSettingDescription();
    public static string get_SpacesOptionPageTitle();
    public static string get_StyleHierarchyActionGroupText();
    public static string get_SyntaxStyleOptionPageTitle();
    public static string get_TabActionSettingDescription();
    public static string get_TabsAndIndentsOptionPageTitle();
    public static string get_TypeScriptSettingDescription();
    public static string get_TypeScriptTsFilesSettingDescription();
    public static string get_BaseOnThisAction_Text();
    public static string get_ChildStylesHierarchyAction_Text();
    public static string get_ParentStylesHierarchyAction_Text();
    public static string get_StyleHierarchyAction_Text();
    public static string get_UpdateStyleHierarchyAction_Text();
    public static string get_AutoFormatOn_Enter_Text();
    public static string get_AutoFormatOnClosing_tag_Text();
    public static string get__SynchronousChangingOfMatchingTag_Text();
    public static string get_ASPNET_Caption();
    public static string get_HTML_Caption();
    public static string get_Razor_Caption();
    public static string get_Allow_CPUIntensiveTypingAssists_Text();
    public static string get_JavaScriptLanguageLevel_ComboEnum_Caption();
    public static string get_EnableJSXSyntaxInJSFiles_ComboEnum_Caption();
    public static string get_AnalysePropertiesContextWhenInspecting_BoolOption_Text();
    public static string get_IgnoreAssignmentInConditionWarningIf_BoolOption_Text();
    public static string get_EnableSemanticFunctionColoring_BoolOption_Text();
    public static string get_ResolveJavaScriptReferenceCommentsRelative_BoolOption_Text();
    public static string get_RootPathForReferencesInRequire_Text_Text();
    public static string get_RootPathForGeneratedRelativeFileReferences_FolderChooserOption_ToolTip();
    public static string get_ThisOptionIsAvailableOnlyIfYouHaveSyntax_Text();
    public static string get_TypeScriptLanguageLevel_ComboEnum_Caption();
    public static string get_EnableSemanticTypeGuardsNarrowingColoring_BoolOption_Text();
    public static string get_DisablePropertyDottedAccessSyntaxFor_BoolOption_Text();
    public static string get_SearchForReferencesInJSDocsInsideDTs_BoolOption_Text();
    public static string get_WhenAnalyzingAFileUseTheClosestTsconfig_Text();
    public static string get_SupportAngularMarkupInHTMLPages_ComboEnum_Caption();
    public static string get_ConteNtForPlaceholders_Caption();
    public static string get_GenerateContentForMasterpageSContent_Caption();
    public static string get_GenerateContentForMasterpageSContent_Text();
    public static string get_AnywhereInAngular2HTML_Text();
    public static string get_WhereATagCouldBeInAngular2HTML_Text();
    public static string get_WhereAnAttributeCouldBeInAngular2HTML_Text();
    public static string get_AnywhereInASPNET_Text();
    public static string get_WhereATagCouldBeInASPNET_Text();
    public static string get_WhereAnAttributeCouldBeInASPNET_Text();
    public static string get_DefaultHTMLFileTemplates_Text();
    public static string get_DefaultHTMLLiveTemplates_Text();
    public static string get_DefaultHTMLSurroundTemplates_Text();
    public static string get_HTMLLike_Text();
    public static string get_AnywhereInHTMLOrSimilarLanguages_Text();
    public static string get_WhereATagCouldBeInHTMLOrSimilarLanguages_Text();
    public static string get_WhereAnAttributeCouldBeInHTMLOrSimilar_Text();
    public static string get_AnywhereInHTMLOnly_Text();
    public static string get_WhereATagCouldBeInHTMLOnly_Text();
    public static string get_WhereAnAttributeCouldBeInHTMLOnly_Text();
    public static string get_HTML_Text();
    public static string get_HTMLAndSimilar_Text();
    public static string get_HTMLAndSimilarTags_Text();
    public static string get_HTMLAndSimilarAttributes_Text();
    public static string get_HTMLTags_Text();
    public static string get_HTMLAttributes_Text();
    public static string get_DefaultJSTSLiveTemplates_Text();
    public static string get_DefaultJSTSSurroundTemplates_Text();
    public static string get_ProjectsWithTypeScript_Text();
    public static string get_AllowInTypeScript_Text();
    public static string get_MaximumJSVersion_Text();
    public static string get_MinimumJSVersion_Text();
    public static string get_NONE_Text();
    public static string get_AnywhereInTypeScript_Text();
    public static string get_InTypeScriptWhereExpressionIsExpected_Text();
    public static string get_InTypeScriptWhereStatementIsExpected_Text();
    public static string get_InTypeScriptWhereModuleMemberIsExpected_Text();
    public static string get_InTypeScriptWhereTypeMemberIsExpected_Text();
    public static string get_AnywhereInRazor_Text();
    public static string get_WhereATagCouldBeInRazor_Text();
    public static string get_WhereAnAttributeCouldBeInRazor_Text();
    public static string get_SpecificRazorLanguage_Text();
    public static string get_MatchedActions_Text();
    public static string get_MatchedControllers_Text();
    public static string get_Angular2HTMLTags_Text();
    public static string get_Angular2HTMLAttributes_Text();
    public static string get_DefaultAngular2HTMLLiveTemplates_Text();
    public static string get_ASPNETTags_Text();
    public static string get_ASPNETAttributes_Text();
    public static string get_TSExpressions_Text();
    public static string get_TSStatements_Text();
    public static string get_TSModuleMembers_Text();
    public static string get_TSTypeMembers_Text();
    public static string get__Tags_Text();
    public static string get__Attributes_Text();
    public static string get_ChildStylesOf__Text();
    public static string get_ParentStylesOf__Text();
    public static string get_HierarchyOf__Text();
    public static string get_SelectStyle_Text();
    public static string get_MatchedTags_Caption();
    public static string get_Found_MatchedTags_Text();
    public static string get_Displaying_Of_FoundMatchedTags_Text();
    public static string get_Found_MatchedTag_Text();
    public static string get_Displaying_Of_FoundMatchedTag_Text();
    public static string get_NoMatchedTagsFound_Text();
    public static string get_Endpoint_Text();
    public static string get_DeclarationsOfQueryParameter__Text();
    public static string get_DeclarationsOfEndpoint__Text();
    public static string get_JavaScriptTemplatesMIMETypes_Caption();
    public static string get_UnterminatedRegularExpressionLiteral_Text();
    public static string get_InvalidRegularExpressionFlagOneOfIG_Text();
    public static string get_InvalidRangeInCharacterSet_ToolTip();
    public static string get_UnexpectedQuantifier_ToolTip();
    public static string get_DefaultVariableKindVarLetConstSuggest_Text();
    public static string get_DefinesHowStatementsAreTerminated_Text();
    public static string get_DefinesWhetherSingleQuotesOrDoubleQuotes_Text();
    public static string get_DefinesWhetherPublicModifierShouldBe_Text();
    public static string get_PreferQualifyingInsteadOfAddingAliases_Text();
    public static string get_RelativeReferencesInRequire_Text();
    public static string get_AllowRelativeFileReferencesStyleChange_Text();
    public static string get_ImportReferenceStyleApplicableOnlyFor_Text();
    public static string get_ExplicitAlwaysSpecifyExplicitTypesAlways_Text();
    public static string get_NoImplicitAnyForceExplicitAnySpecifications_Text();
    public static string get_BracesLayout_Text();
    public static string get_ForceBraces_Text();
    public static string get_CaseStatement_Text();
    public static string get_BlankLines_Text();
    public static string get_LineBreaks_Text();
    public static string get_WrappingAndChopping_Text();
    public static string get_PlaceOnANewLine_Text();
    public static string get_AlignMultilineConstructs_Text();
    public static string get_Other_Text();
    public static string get_ProcessingInstructions_Text();
    public static string get_InsideOfTagHeader_Text();
    public static string get_AroundTags_Text();
    public static string get_PreserveExistingFormatting_Text();
    public static string get_Commas_Text();
    public static string get_Semicolons_Text();
    public static string get_InFunctionInvocations_Text();
    public static string get_InFunctionDeclarations_Text();
    public static string get_InControlStatements_Text();
    public static string get_InIndexExpressions_Text();
    public static string get_InTernaryOperators_Text();
    public static string get_InObjectExpressions_Text();
    public static string get_InImportDeclarations_Text();
    public static string get_InArrayLiterals_Text();
    public static string get_InExpressions_Text();
    public static string get_CaseStatements_Text();
    public static string get_TemplateLiterals_Text();
    public static string get_Lambdas_Text();
    public static string get_TypeParametersAndArguments_Text();
    public static string get_TypeAnnotations_Text();
    public static string get_UnionAndIntersectionTypes_Text();
    public static string get_Variables_Text();
    public static string get_Quotes_Text();
    public static string get_Statements_Text();
    public static string get_VariablesInheritedFromJavaScript_Text();
    public static string get_QuotesInheritedFromJavaScript_Text();
    public static string get_StatementsInheritedFromJavaScript_Text();
    public static string get_Modifiers_Text();
    public static string get_Aliases_Text();
    public static string get_TypeSpecification_Text();
    public static string get_InsertRunatMacroDefinition_Description();
    public static string get_InsertRunatMacroDefinition_LongDescription();
    public static string get_GenerateContentForMasterpageContentPlaceholdersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_Description();
    public static string get_GenerateContentForMasterpageContentPlaceholdersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_LongDescription();
    public static string get_ShowCompletionListWithAvailableASPNETMVCActionsAtThePointWhereTheVariableIsEvaluatedMacroDefinition_Description();
    public static string get_ShowCompletionListWithAvailableASPNETMVCActionsAtThePointWhereTheVariableIsEvaluatedMacroDefinition_LongDescription();
    public static string get_ShowCompletionListWithAvailableASPNETMVCControllersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_Description();
    public static string get_ShowCompletionListWithAvailableASPNETMVCControllersAtThePointWhereTheVariableIsEvaluatedMacroDefinition_LongDescription();
    public static string get_SuggestAttributeValueForCurrentHtmlTagAttributeMacroDefinition_Description();
    public static string get_SuggestAttributeValueForCurrentHtmlTagAttributeMacroDefinition_LongDescription();
    public static string get_SuggestsAttributeNameUsedInTheSameTagsInCurrentDocumentMacroDefinition_Description();
    public static string get_SuggestsAttributeNameUsedInTheSameTagsInCurrentDocumentMacroDefinition_LongDescription();
    public static string get_SuggestTagNameUsedInCurrentDocumentMacroDefinition_Description();
    public static string get_SuggestTagNameUsedInCurrentDocumentMacroDefinition_LongDescription();
    public static string get_In__Text();
    public static string get_Angular2HTMLFiles_Text();
    public static string get_ASPNETFiles_Text();
    public static string get_HTMLFiles_Text();
    public static string get_JavaScriptFiles_Text();
    public static string get_RazorFiles_Text();
    public static string get_TypeScriptFiles_Text();
    public static string get_TypeScriptProjects_Text();
    public static string get_Template_Editable_Q3JlYXRlIHNjcmlwdCB0YWcEQ();
    public static string get_Template_Editable_Q3JlYXRlIHRhZwEQEQ();
    public static string get_Template_Editable_Q3JlYXRlIEFTUC5ORVQgdGFn();
    public static string get_Template_Editable_Q3JlYXRlIGNsb3NlZCB0YWcEQ();
    public static string get_Template_Editable_Q3JlYXRlIHRhZyBhdHRyaWJ1dGUEQ();
    public static string get_Template_Editable_QVNQLk5FVCBIeXBlcmxpbmsEQ();
    public static string get_Template_Editable_UmF6b3IgaW5oZXJpdHMgZGlyZWN0aXZl();
    public static string get_Template_Editable_UmF6b3IgbW9kZWwgZGlyZWN0aXZl();
    public static string get_Template_Editable_UmF6b3Igc2VjdGlvbgEQEQ();
    public static string get_Template_Editable_dGFn();
    public static string get_Template_Editable_bGluawEQEQ();
    public static string get_Template_Editable_V2ViIFBhZ2UEQ();
    public static string get_Template_Editable_TWFzdGVyIHBhZ2Ugd2l0aG91dCBiYXNlIG1hc3RlciBwYWdl();
    public static string get_Template_Editable_V2ViIGNvbnRyb2wEQ();
    public static string get_Template_Editable_V2ViIGZvcm0gd2l0aG91dCBtYXN0ZXIgcGFnZQEQEQ();
    public static string get_Template_Editable_V2ViIGZvcm0gd2l0aCBtYXN0ZXIgcGFnZQEQEQ();
    public static string get_Template_Editable_TWFzdGVyIHBhZ2Ugd2l0aCBiYXNlIG1hc3RlciBwYWdl();
    public static string get_Template_Editable_V2ViIENvbnRyb2wEQ();
    public static string get_Template_Editable_TVZDIFZpZXcgUGFnZSB3aXRoIG1hc3RlciBwYWdl();
    public static string get_Template_Editable_TVZDIFZpZXcgUGFnZSB3aXRob3V0IG1hc3RlciBwYWdl();
    public static string get_Template_Editable_TVZDIFZpZXcgVXNlckNvbnRyb2wEQ();
    public static string get_Template_Editable_UmF6b3IgTVZDIFBhcnRpYWwgVmlldwEQEQ();
    public static string get_Template_Editable_UmF6b3IgTVZDIFZpZXcEQ();
    public static string get_Template_Editable_UmF6b3IgTVZDIFZpZXcgd2l0aCBMYXlvdXQEQ();
    public static string get_Template_Editable_Q29udHJvbGxlcgEQEQ();
    public static string get_Template_Editable_Q29tcG9uZW50();
    public static string get_Template_Editable_UGFnZQEQEQ();
    public static string get_Template_Editable_Qmxhem9yIENvbXBvbmVudAEQEQ();
    public static string get_Template_Editable_JlR5cGVTY3JpcHQgQ2xhc3MEQ();
    public static string get_Template_Editable_VHlwZVNjcmlwdCBFbXB0eSBGaSZsZQEQEQ();
    public static string get_Template_Editable_VFNYIEVtcHR5IEZpJmxl();
    public static string get_Template_Editable_VCZ5cGVTY3JpcHQgSW50ZXJmYWNl();
    public static string get_Template_Editable_VHlwZVNjcmlwdCAmTW9kdWxl();
    public static string get_Template_Editable_Q29udGVudCBQYWdl();
    public static string get_Template_Editable_Q29udGVudCBWaWV3();
    public static string get_Template_Editable_Q3JlYXRlICB0YWcgYXR0cmlidXRl();
    public static string get_Template_Editable_QVNQLk5FVCBNVkMgSHRtbC5BY3Rpb25MaW5r();
    public static string get_Template_Editable_QVNQLk5FVCBNVkMgVXJsLkFjdGlvbgEQEQ();
    public static string get_Template_Editable_QVNQLk5FVCBDb250cm9sbGVyIFJlZGlyZWN0VG9BY3Rpb24EQ();
    public static string get_Template_Editable_d2l0aCBDb2RlLUJlaGluZCAoKi5yYXpvci5jcykgRmlsZQEQEQ();
    public static string get_Template_Editable_d2l0aCBTY29wZWQgQ1NTICgqLnJhem9yLmNzcykgRmlsZQEQEQ();
    public static string get_Template_Editable_d2l0aCBKUyAoKi5yYXpvci5qcykgRmlsZQEQEQ();
    public static string get_GenerateOption_CopyDefaultContent_Text();
    public static string get_WrapLinesDescription();
    public static string get_FormattingStyle_Text();
    public static string get_SyntaxStyle_Text();
    public static string get_Spaces_Text();
    public static string get_DumpLexerState();
    public static string get_AfterSpaceInRazorDirectivesSettingsDescription();
    public static string get_GoToControllerOrViewActionText();
    public static string get_GoToControllerCaptionText();
    public static string get_FindComponentUsagesCaptionText();
    public static string get_GoToViewCaptionText();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.StructuralSearch.Html.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.StructuralSearch.JavaScript.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Web.ZoneMarker : object {
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Asp.AspScopeCategoryUIProvider : ScopeCategoryUIProvider {
    public string CategoryCaption { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Asp.AspScopeCategoryUIProvider/<BuildAllPoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    public virtual string get_CategoryCaption();
    public virtual string Present(ITemplateScopePoint point);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Asp.AspScopeProvider : object {
    private Dictionary`2<string, Func`2<PsiLanguageType, ITemplateScopePoint>> myCreators;
    private static bool IsInAttr(TreeOffset treeOffset, ITreeNode tokenAtCaret);
    private static bool IsInTag(TreeOffset treeOffset, IHtmlToken tokenAtCaret);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Asp.AspScopeProvider/<ProvideScopePoints>d__4")]
public sealed virtual IEnumerable`1<ITemplateScopePoint> ProvideScopePoints(TemplateAcceptanceContext context);
    public ITemplateScopePoint ReadFromXml(XmlElement scopeElement);
    public sealed virtual ITemplateScopePoint CreateScope(Guid scopeGuid, string typeName, IEnumerable`1<Pair`2<string, string>> customProperties);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.Asp.AspTemplateHighlightingProvider : HtmlTemplateHighlightingProvider {
    public AspTemplateHighlightingProvider(IAspTokenNodeTypes tokenNodeTypes);
}
public class JetBrains.ReSharper.LiveTemplates.Asp.InAspAttribute : InAspFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InAspAttribute(PsiLanguageType language);
    private static InAspAttribute();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Asp.InAspFile : InHtmlLikeFile {
    private static Guid DefaultUID;
    [CompilerGeneratedAttribute]
private PsiLanguageType <CodeBehindLanguageType>k__BackingField;
    public static string AttrLanguage;
    public PsiLanguageType RelatedLanguage { get; }
    public string PresentableShortName { get; }
    protected string LangString { get; }
    private PsiLanguageType CodeBehindLanguageType { get; }
    public Guid QuickListUID { get; }
    public string QuickListTitle { get; }
    public InAspFile(PsiLanguageType language);
    private static InAspFile();
    public virtual Guid GetDefaultUID();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Asp.InAspFile/<GetExtensions>d__2")]
protected virtual IEnumerable`1<string> GetExtensions();
    public virtual PsiLanguageType get_RelatedLanguage();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
    protected string get_LangString();
    [CompilerGeneratedAttribute]
private PsiLanguageType get_CodeBehindLanguageType();
    public virtual bool IsSubsetOf(ITemplateScopePoint other);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Asp.InAspFile/<EnumerateCustomProperties>d__16")]
public virtual IEnumerable`1<Pair`2<string, string>> EnumerateCustomProperties();
    public sealed virtual Guid get_QuickListUID();
    public sealed virtual string get_QuickListTitle();
}
public class JetBrains.ReSharper.LiveTemplates.Asp.InAspTag : InAspFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InAspTag(PsiLanguageType language);
    private static InAspTag();
    public virtual Guid GetDefaultUID();
    public virtual string CalcPrefix(DocumentOffset caretOffset);
    public virtual string get_PresentableShortName();
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspImpl : MacroImplementationScopeProviderBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspMacroUtil : HtmlMacroUtil {
    public AspMacroUtil(AspLanguage language);
}
[MacroDefinitionAttribute("AspMasterpageContentGenerator")]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspMasterpageContentGeneratorMacroDef : SimpleMacroDefinition {
    public virtual string GetPlaceholder(IDocument document, ISolution solution, IEnumerable`1<IMacroParameterValue> parameters);
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspMasterpageContentGeneratorMacroImpl : GeneratorMacro {
    protected PsiLanguageType Language { get; }
    protected string WorkflowKind { get; }
    protected string CommandName { get; }
    protected virtual PsiLanguageType get_Language();
    protected virtual string get_WorkflowKind();
    protected virtual string get_CommandName();
}
[MacroDefinitionAttribute("AspMvcAction")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspMvcActionMacroDef : SimpleMacroDefinition {
}
[MacroImplementationAttribute]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspMvcActionMacroImpl : SimpleMacroImplementation {
    public virtual HotspotItems GetLookupItems(IHotspotContext context);
}
[MacroDefinitionAttribute("AspMvcController")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspMvcControllerMacroDef : SimpleMacroDefinition {
}
[MacroImplementationAttribute]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.AspMvcControllerMacroImpl : SimpleMacroImplementation {
    public virtual HotspotItems GetLookupItems(IHotspotContext context);
}
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.InAspImpl : MacroImplementationScopeProviderBase {
}
[MacroDefinitionAttribute("runAtServer")]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.RunAtServerMacroDef : SimpleMacroDefinition {
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.RunAtServerMacroImpl : HtmlMacroImplBase`2<AspLanguage, IAspFile> {
    private ILookupItem[] myEmptyLookupItems;
    private ILookupItem[] myRunatServerLookupItems;
    protected virtual IList`1<ILookupItem> GetSuggestedNames(IAspFile file, IHotspotContext context);
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.SuggestTagNameMacroImpl : SuggestTagNameMacroBase {
    public virtual IList`1<ILookupItem> GetSuggestedNames(IFile file, IHotspotContext context);
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.Asp.Macros.SuggestVariableNameMacroImpl : SuggestVariableNameMacroImplBase {
    public SuggestVariableNameMacroImpl(MacroParameterValueCollection arguments);
    private static IList`1<string> SuggestNameForTypeOwner(IType type, IDeclaration declaration, string prefix, IField field, INamingPolicyProvider policyProvider);
    protected virtual IList`1<string> SuggestNamesForIdentifier(IIdentifier identifier);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.LiveTemplates.Asp.ZoneMarker : object {
}
[DefaultSettingsAttribute("JetBrains.ReSharper.Feature.Services.LiveTemplates.Settings.LiveTemplatesSettings", "16")]
public class JetBrains.ReSharper.LiveTemplates.Html.Defaults.DefaultFileTemplates : object {
    public string Name { get; }
    private static DefaultFileTemplates();
    public sealed virtual Stream GetDefaultSettingsStream(Lifetime lifetime);
    public sealed virtual string get_Name();
}
[DefaultSettingsAttribute("JetBrains.ReSharper.Feature.Services.LiveTemplates.Settings.LiveTemplatesSettings", "16")]
public class JetBrains.ReSharper.LiveTemplates.Html.Defaults.DefaultLiveTemplates : object {
    public string Name { get; }
    public sealed virtual Stream GetDefaultSettingsStream(Lifetime lifetime);
    public sealed virtual string get_Name();
}
[DefaultSettingsAttribute("JetBrains.ReSharper.Feature.Services.LiveTemplates.Settings.LiveTemplatesSettings", "16")]
public class JetBrains.ReSharper.LiveTemplates.Html.Defaults.DefaultSurroundTemplates : object {
    public string Name { get; }
    public sealed virtual Stream GetDefaultSettingsStream(Lifetime lifetime);
    public sealed virtual string get_Name();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.Html.HtmlLanguageCaseProvider : LanguageCaseProvider {
    public virtual bool IsCaseSensitive();
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Html.HtmlLikeScopeCategoryUIProvider : ScopeCategoryUIProvider {
    public string CategoryCaption { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Html.HtmlLikeScopeCategoryUIProvider/<BuildAllPoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    public virtual string get_CategoryCaption();
    public virtual string Present(ITemplateScopePoint point);
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Html.HtmlScopeCategoryUIProvider : ScopeCategoryUIProvider {
    public string CategoryCaption { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Html.HtmlScopeCategoryUIProvider/<BuildAllPoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    public virtual string get_CategoryCaption();
    public virtual string Present(ITemplateScopePoint point);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Html.HtmlScopeProvider : ScopeProvider {
    private Char[] myTagAllowedChars;
    private Char[] myHtmlAllowedChars;
    internal static bool IsInTag(TreeOffset treeOffset, IFile file);
    internal static bool IsInAttr(TreeOffset treeOffset, IFile file);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Html.HtmlScopeProvider/<ProvideScopePoints>d__3")]
public virtual IEnumerable`1<ITemplateScopePoint> ProvideScopePoints(TemplateAcceptanceContext context);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_0(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_1(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_2(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_3(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_4(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_5(string t);
}
public class JetBrains.ReSharper.LiveTemplates.Html.HtmlTemplateContext : TemplateContext {
    public HtmlTemplateContextType ContextType;
    public PsiLanguageType LimitToLanguage;
    public IEnumerable`1<ITemplateScopePoint> ScopePoints { get; }
    public HtmlTemplateContext(HtmlTemplateContextType contextType, PsiLanguageType language);
    public virtual IEnumerable`1<ITemplateScopePoint> get_ScopePoints();
    private IList`1<ITemplateScopePoint> CalcScopePoints();
}
public enum JetBrains.ReSharper.LiveTemplates.Html.HtmlTemplateContextType : Enum {
    public int value__;
    public static HtmlTemplateContextType EVERYWHERE;
    public static HtmlTemplateContextType TAG_EXPECTED;
    public static HtmlTemplateContextType ATTRIBUTE_EXPECTED;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.Html.HtmlTemplateFormatter : object {
    public bool SupportsShorteningQualifiedReferences { get; }
    public string EndMarker { get; }
    public sealed virtual bool get_SupportsShorteningQualifiedReferences();
    public sealed virtual string get_EndMarker();
    public sealed virtual void BeforeFormatting(DocumentRange documentRange, ISolution solution);
    public sealed virtual void ShortenQualifiedReferences(DocumentRange documentRange, ISolution solution);
}
[RegisterHighlighterAttribute("ReSharper Template Editor HTML Comment")]
[RegisterHighlighterAttribute("ReSharper Template Editor HTML Tag")]
[RegisterHighlighterAttribute("ReSharper Template Editor HTML Attribute")]
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.Html.HtmlTemplateHighlightingProvider : TemplateHighlightingProvider {
    public static string CommentAttribute;
    public static string TagAttribute;
    public static string AttrAttribute;
    protected IDictionary`2<TokenNodeType, string> HighlightingMap;
    public HtmlTemplateHighlightingProvider(IHtmlTokenNodeTypes tokenNodeTypes);
    public virtual string GetHighlightingAttributeId(TokenNodeType tokenType);
}
public class JetBrains.ReSharper.LiveTemplates.Html.InHtmlAttribute : InHtmlFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InHtmlAttribute(string prefix);
    private static InHtmlAttribute();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Html.InHtmlFile : InHtmlLikeFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public Guid QuickListUID { get; }
    public string QuickListTitle { get; }
    public InHtmlFile(string prefix);
    private static InHtmlFile();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Html.InHtmlFile/<GetExtensions>d__4")]
protected virtual IEnumerable`1<string> GetExtensions();
    public virtual string ToString();
    public sealed virtual Guid get_QuickListUID();
    public sealed virtual string get_QuickListTitle();
}
public class JetBrains.ReSharper.LiveTemplates.Html.InHtmlLikeAttribute : InHtmlLikeFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InHtmlLikeAttribute(string prefix);
    private static InHtmlLikeAttribute();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Html.InHtmlLikeFile : InAnyLanguageFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public PsiLanguageType RelatedLanguage { get; }
    public InHtmlLikeFile(string prefix);
    private static InHtmlLikeFile();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual PsiLanguageType get_RelatedLanguage();
    public virtual string CalcPrefix(DocumentOffset caretOffset);
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Html.InHtmlLikeTag : InHtmlLikeFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InHtmlLikeTag(string prefix);
    private static InHtmlLikeTag();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string CalcPrefix(DocumentOffset caretOffset);
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Html.InHtmlTag : InHtmlFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InHtmlTag(string prefix);
    private static InHtmlTag();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string CalcPrefix(DocumentOffset caretOffset);
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.HtmlImpl : MacroImplementationScopeProviderBase {
}
public abstract class JetBrains.ReSharper.LiveTemplates.Html.Macros.HtmlMacroImplBase`2 : SimpleMacroImplementation {
    public virtual HotspotItems GetLookupItems(IHotspotContext context);
    protected abstract virtual IList`1<ILookupItem> GetSuggestedNames(THtmlFile file, IHotspotContext context);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.HtmlMacroUtil : MacroUtilBase {
    public HtmlMacroUtil(HtmlLanguage language);
    protected virtual IExpression CreateExpression(IPsiModule module, string text);
    protected virtual IReadOnlyList`1<IType> GetExpectedConcreteTypes(ITreeNode element);
}
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.InHtmlLikeImpl : MacroImplementationScopeProviderBase {
}
[MacroDefinitionAttribute("suggestAttributeNameByTag")]
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.SuggestAttributeNameByTagMacroDef : SimpleMacroDefinition {
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.SuggestAttributeNameByTagMacroImpl : HtmlMacroImplBase`2<HtmlLanguage, IHtmlFile> {
    protected virtual IList`1<ILookupItem> GetSuggestedNames(IHtmlFile file, IHotspotContext context);
}
[MacroDefinitionAttribute("suggestAttributeValue")]
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.SuggestAttributeValueMacroDef : SimpleMacroDefinition {
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.SuggestAttributeValueMacroImpl : HtmlMacroImplBase`2<HtmlLanguage, IHtmlFile> {
    protected virtual IList`1<ILookupItem> GetSuggestedNames(IHtmlFile file, IHotspotContext context);
}
public abstract class JetBrains.ReSharper.LiveTemplates.Html.Macros.SuggestTagNameMacroBase : SimpleMacroImplementation {
    public virtual HotspotItems GetLookupItems(IHotspotContext context);
    public abstract virtual IList`1<ILookupItem> GetSuggestedNames(IFile file, IHotspotContext context);
}
[MacroDefinitionAttribute("suggestTagName")]
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.SuggestTagNameMacroDef : SimpleMacroDefinition {
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.Html.Macros.SuggestTagNameMacroImpl : SuggestTagNameMacroBase {
    public virtual IList`1<ILookupItem> GetSuggestedNames(IFile file, IHotspotContext context);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.LiveTemplates.Html.ZoneMarker : object {
}
[DefaultSettingsAttribute("JetBrains.ReSharper.Feature.Services.LiveTemplates.Settings.LiveTemplatesSettings", "16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.DefaultLiveTemplates : object {
    public string Name { get; }
    public sealed virtual Stream GetDefaultSettingsStream(Lifetime lifetime);
    public sealed virtual string get_Name();
}
[DefaultSettingsAttribute("JetBrains.ReSharper.Feature.Services.LiveTemplates.Settings.LiveTemplatesSettings", "16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.DefaultSurroundTemplates : object {
    public string Name { get; }
    private static DefaultSurroundTemplates();
    public sealed virtual Stream GetDefaultSettingsStream(Lifetime lifetime);
    public sealed virtual string get_Name();
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InJavaScriptExpression : InJavaScriptFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InJavaScriptExpression(JavaScriptLanguageLevel minJsLevel, JavaScriptLanguageLevel maxJsLevel, bool pullToTs, bool isTsLanguage);
    private static InJavaScriptExpression();
    public virtual Guid GetDefaultUID();
    public virtual string ToString();
    public virtual string get_PresentableShortName();
    public virtual InJavaScriptFile NewInstance(JavaScriptLanguageLevel minLevel, JavaScriptLanguageLevel maxLevel, bool pullToTs, bool isTsLanguage);
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InJavaScriptFile : InAnyLanguageFile {
    private static Guid DefaultUID;
    public static string MinimumJsLanguageVersionAttributeName;
    public static string MaximumJsLanguageVersionAttributeName;
    public static string AvailableInTypeScriptAttributeName;
    [CompilerGeneratedAttribute]
private JavaScriptLanguageLevel <MinimumJsLanguageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private JavaScriptLanguageLevel <MaximumJsLanguageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AvailableInTypeScript>k__BackingField;
    private bool myIsTsLanguage;
    public JavaScriptLanguageLevel MinimumJsLanguageVersion { get; }
    public JavaScriptLanguageLevel MaximumJsLanguageVersion { get; }
    public bool AvailableInTypeScript { get; }
    public string PresentableShortName { get; }
    public PsiLanguageType RelatedLanguage { get; }
    public Guid QuickListUID { get; }
    public string QuickListTitle { get; }
    public InJavaScriptFile(JavaScriptLanguageLevel minJsLevel, JavaScriptLanguageLevel maxJsLevel, bool pullToTs, bool isTsLanguage);
    private static InJavaScriptFile();
    [CompilerGeneratedAttribute]
public JavaScriptLanguageLevel get_MinimumJsLanguageVersion();
    [CompilerGeneratedAttribute]
public JavaScriptLanguageLevel get_MaximumJsLanguageVersion();
    [CompilerGeneratedAttribute]
public bool get_AvailableInTypeScript();
    public static string PresentConstraints(JavaScriptLanguageLevel minLevel, JavaScriptLanguageLevel maxLevel, bool pullToTs);
    public virtual Guid GetDefaultUID();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InJavaScriptFile/<EnumerateCustomProperties>d__17")]
public virtual IEnumerable`1<Pair`2<string, string>> EnumerateCustomProperties();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InJavaScriptFile/<GetExtensions>d__18")]
protected virtual IEnumerable`1<string> GetExtensions();
    protected string ConstraintsString();
    public virtual string get_PresentableShortName();
    public virtual PsiLanguageType get_RelatedLanguage();
    public virtual string ToString();
    public virtual Guid get_QuickListUID();
    public virtual string get_QuickListTitle();
    public virtual bool IsSubsetOf(ITemplateScopePoint other);
    public virtual InJavaScriptFile NewInstance(JavaScriptLanguageLevel minLevel, JavaScriptLanguageLevel maxLevel, bool pullToTs, bool isTsLanguage);
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InJavaScriptStatement : InJavaScriptExpression {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InJavaScriptStatement(JavaScriptLanguageLevel minJsLevel, JavaScriptLanguageLevel maxJsLevel, bool pullToTs, bool isTsLanguage);
    private static InJavaScriptStatement();
    public virtual Guid GetDefaultUID();
    public virtual string ToString();
    public virtual string get_PresentableShortName();
    public virtual InJavaScriptFile NewInstance(JavaScriptLanguageLevel minLevel, JavaScriptLanguageLevel maxLevel, bool pullToTs, bool isTsLanguage);
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InTypeScriptExpression : InTypeScriptFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    private static InTypeScriptExpression();
    public virtual Guid GetDefaultUID();
    public virtual string ToString();
    public virtual string get_PresentableShortName();
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InTypeScriptFile : InJavaScriptFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public PsiLanguageType RelatedLanguage { get; }
    public Guid QuickListUID { get; }
    public string QuickListTitle { get; }
    private static InTypeScriptFile();
    public virtual Guid GetDefaultUID();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InTypeScriptFile/<GetExtensions>d__2")]
protected virtual IEnumerable`1<string> GetExtensions();
    public virtual string get_PresentableShortName();
    public virtual PsiLanguageType get_RelatedLanguage();
    public virtual string ToString();
    public virtual Guid get_QuickListUID();
    public virtual string get_QuickListTitle();
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InTypeScriptModuleMember : InTypeScriptStatement {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    private static InTypeScriptModuleMember();
    public virtual Guid GetDefaultUID();
    public virtual string ToString();
    public virtual string get_PresentableShortName();
}
internal class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InTypeScriptProjectFile : InAnyProject {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public PsiLanguageType RelatedLanguage { get; }
    public string DefaultFileName { get; }
    public Guid QuickListUID { get; }
    public string QuickListTitle { get; }
    private static InTypeScriptProjectFile();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual PsiLanguageType get_RelatedLanguage();
    public virtual string get_DefaultFileName();
    public sealed virtual Guid get_QuickListUID();
    public sealed virtual string get_QuickListTitle();
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InTypeScriptStatement : InTypeScriptExpression {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    private static InTypeScriptStatement();
    public virtual Guid GetDefaultUID();
    public virtual string ToString();
    public virtual string get_PresentableShortName();
}
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.InTypeScriptTypeMember : InTypeScriptFile {
    private static Guid DefaultUID;
    [CompilerGeneratedAttribute]
private string <PresentableShortName>k__BackingField;
    public string PresentableShortName { get; }
    private static InTypeScriptTypeMember();
    public virtual Guid GetDefaultUID();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public virtual string get_PresentableShortName();
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.JavaScriptScopeCategoryUIProviderBase : ScopeCategoryUIProvider {
    public string CategoryCaption { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.JavaScriptScopeCategoryUIProviderBase/<BuildAllPoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    public virtual string get_CategoryCaption();
    public virtual string Present(ITemplateScopePoint point);
    public virtual IScopeOptionsUIBase CreateUI(ITemplateScopePoint point);
    public virtual bool HaveOptionsUIFor(ITemplateScopePoint point);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.JavaScriptScopeProvider : ScopeProvider {
    private Dictionary`2<string, Func`4<JavaScriptLanguageLevel, JavaScriptLanguageLevel, bool, ITemplateScopePoint>> myCreators;
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.JavaScriptScopeProvider/<ProvideScopePoints>d__2")]
public virtual IEnumerable`1<ITemplateScopePoint> ProvideScopePoints(TemplateAcceptanceContext context);
    public virtual ITemplateScopePoint CreateScope(Guid scopeGuid, string typeName, IEnumerable`1<Pair`2<string, string>> customProperties);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.JavaScriptTemplateFormatter : object {
    public bool SupportsShorteningQualifiedReferences { get; }
    public string EndMarker { get; }
    public sealed virtual bool get_SupportsShorteningQualifiedReferences();
    public sealed virtual string get_EndMarker();
    public sealed virtual void BeforeFormatting(DocumentRange documentRange, ISolution solution);
    public sealed virtual void ShortenQualifiedReferences(DocumentRange documentRange, ISolution solution);
}
[RegisterHighlighterAttribute("ReSharper Template Editor JavaScript Keyword")]
[RegisterHighlighterAttribute("ReSharper Template Editor JavaScript Comment")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.JavaScriptTemplateHighlightingProvider : TemplateHighlightingProvider {
    public static string CommentAttribute;
    public static string KeywordAttribute;
    public virtual string GetHighlightingAttributeId(TokenNodeType tokenType);
}
[FileTemplatesAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptFileTemplatesSupport : object {
    public string Name { get; }
    public IEnumerable`1<ITemplateScopePoint> ScopePoints { get; }
    public sealed virtual string get_Name();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptFileTemplatesSupport/<get_ScopePoints>d__3")]
public sealed virtual IEnumerable`1<ITemplateScopePoint> get_ScopePoints();
}
[FileTemplatesAttribute("16")]
internal class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptLiveTemplatesSupport : object {
    public string Name { get; }
    public IEnumerable`1<ITemplateScopePoint> ScopePoints { get; }
    public string get_Name();
    public bool Accepts(IProject project);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptLiveTemplatesSupport/<get_ScopePoints>d__4")]
public IEnumerable`1<ITemplateScopePoint> get_ScopePoints();
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptProjectScopeCategoryUIProvider : ScopeCategoryUIProvider {
    public string CategoryCaption { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptProjectScopeCategoryUIProvider/<BuildAllPoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    public virtual string get_CategoryCaption();
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptProjectScopeProvider : ScopeProvider {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptProjectScopeProvider/<ProvideScopePoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> ProvideScopePoints(TemplateAcceptanceContext context);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_0(string t);
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptScopeCategoryUIProvider : ScopeCategoryUIProvider {
    public string CategoryCaption { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptScopeCategoryUIProvider/<BuildAllPoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    public virtual string get_CategoryCaption();
    public virtual string Present(ITemplateScopePoint point);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptScopeProvider : ScopeProvider {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.JavaScript.LiveTemplates.TypeScriptScopeProvider/<ProvideScopePoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> ProvideScopePoints(TemplateAcceptanceContext context);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_0(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_1(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_2(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_3(string t);
    [CompilerGeneratedAttribute]
private ITemplateScopePoint <.ctor>b__0_4(string t);
}
internal class JetBrains.ReSharper.LiveTemplates.JavaScript.Macros.InJSImpl : MacroImplementationScopeProviderBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.Macros.JavaScriptMacroUtil : MacroUtilBase {
    public JavaScriptMacroUtil(JavaScriptLanguage language);
    public virtual ICollection`1<IType> GetElementTypes(IExpression collectionExpression);
    protected virtual IExpression CreateExpression(IPsiModule module, string text);
}
[MacroImplementationAttribute]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.Macros.SuggestVariableNameMacroImpl : SuggestVariableNameMacroImplBase {
    public SuggestVariableNameMacroImpl(MacroParameterValueCollection arguments);
    protected virtual IList`1<string> SuggestNamesForIdentifier(IIdentifier identifier);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.LiveTemplates.JavaScript.ZoneMarker : object {
}
public class JetBrains.ReSharper.LiveTemplates.Razor.InRazorAttribute : InRazorFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InRazorAttribute(RazorLanguage language, string prefix);
    private static InRazorAttribute();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
    public virtual InRazorFile NewInstance(RazorLanguage language);
}
public class JetBrains.ReSharper.LiveTemplates.Razor.InRazorFile : InHtmlLikeFile {
    private static Guid DefaultUID;
    [CompilerGeneratedAttribute]
private RazorLanguage <CodeBehindLanguage>k__BackingField;
    public static string AttrLanguage;
    public PsiLanguageType RelatedLanguage { get; }
    public string PresentableShortName { get; }
    protected string LangString { get; }
    [CanBeNullAttribute]
public RazorLanguage CodeBehindLanguage { get; }
    public Guid QuickListUID { get; }
    public string QuickListTitle { get; }
    public InRazorFile(RazorLanguage language, string prefix);
    private static InRazorFile();
    public virtual Guid GetDefaultUID();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Razor.InRazorFile/<GetExtensions>d__2")]
protected virtual IEnumerable`1<string> GetExtensions();
    public virtual PsiLanguageType get_RelatedLanguage();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
    protected string get_LangString();
    public virtual InRazorFile NewInstance(RazorLanguage language);
    [CompilerGeneratedAttribute]
public RazorLanguage get_CodeBehindLanguage();
    public virtual bool IsSubsetOf(ITemplateScopePoint other);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Razor.InRazorFile/<EnumerateCustomProperties>d__17")]
public virtual IEnumerable`1<Pair`2<string, string>> EnumerateCustomProperties();
    public sealed virtual Guid get_QuickListUID();
    public sealed virtual string get_QuickListTitle();
}
public class JetBrains.ReSharper.LiveTemplates.Razor.InRazorTag : InRazorFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    public InRazorTag(RazorLanguage language, string prefix);
    private static InRazorTag();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
    public virtual InRazorFile NewInstance(RazorLanguage language);
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Razor.RazorScopeCategoryUIProviderBase : ScopeCategoryUIProvider {
    [CompilerGeneratedAttribute]
private string <CategoryCaption>k__BackingField;
    public string CategoryCaption { get; }
    private static RazorScopeCategoryUIProviderBase();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Razor.RazorScopeCategoryUIProviderBase/<BuildAllPoints>d__2")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    [CompilerGeneratedAttribute]
public virtual string get_CategoryCaption();
    public virtual string Present(ITemplateScopePoint point);
    public virtual bool HaveOptionsUIFor(ITemplateScopePoint point);
    public virtual IScopeOptionsUIBase CreateUI(ITemplateScopePoint point);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Razor.RazorScopeProvider : object {
    private Dictionary`2<string, Func`2<RazorLanguage, ITemplateScopePoint>> myCreators;
    private Char[] myRazorAllowedChars;
    private Char[] myTagAllowedChars;
    private static bool IsInAttr(TreeOffset treeOffset, IFile file);
    private static bool IsInTag(TreeOffset treeOffset, IFile file);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Razor.RazorScopeProvider/<ProvideScopePoints>d__6")]
public sealed virtual IEnumerable`1<ITemplateScopePoint> ProvideScopePoints(TemplateAcceptanceContext context);
    public ITemplateScopePoint ReadFromXml(XmlElement scopeElement);
    public sealed virtual ITemplateScopePoint CreateScope(Guid scopeGuid, string typeName, IEnumerable`1<Pair`2<string, string>> customProperties);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
public class JetBrains.ReSharper.LiveTemplates.Razor.RazorTemplateHighlightingProvider : HtmlTemplateHighlightingProvider {
    public RazorTemplateHighlightingProvider(IRazorTokenNodeTypes tokenNodeTypes);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.LiveTemplates.Razor.ZoneMarker : object {
}
public class JetBrains.ReSharper.LiveTemplates.Resources.Html.LiveTemplatesHtmlThemedIcons : object {
}
public class JetBrains.ReSharper.LiveTemplates.Resources.JavaScript.LiveTemplatesJavaScriptsThemedIcons : object {
}
[ScopeCategoryUIProviderAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.Angular2CategoryUIProvider : ScopeCategoryUIProvider {
    [CompilerGeneratedAttribute]
private string <CategoryCaption>k__BackingField;
    public string CategoryCaption { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.Angular2CategoryUIProvider/<BuildAllPoints>d__1")]
public virtual IEnumerable`1<ITemplateScopePoint> BuildAllPoints();
    [CompilerGeneratedAttribute]
public virtual string get_CategoryCaption();
    public virtual string Present(ITemplateScopePoint point);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.Angular2ScopeProvider : object {
    private Dictionary`2<string, Func`2<PsiLanguageType, ITemplateScopePoint>> myCreators;
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.Angular2ScopeProvider/<ProvideScopePoints>d__2")]
public sealed virtual IEnumerable`1<ITemplateScopePoint> ProvideScopePoints(TemplateAcceptanceContext context);
    public sealed virtual ITemplateScopePoint CreateScope(Guid scopeGuid, string typeName, IEnumerable`1<Pair`2<string, string>> customProperties);
}
[DefaultSettingsAttribute("JetBrains.ReSharper.Feature.Services.LiveTemplates.Settings.LiveTemplatesSettings", "16")]
public class JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.Defaults.DefaultLiveTemplates : object {
    public string Name { get; }
    public sealed virtual Stream GetDefaultSettingsStream(Lifetime lifetime);
    public sealed virtual string get_Name();
}
public class JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.InAngularAttribute : InAngularHtmlFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    private static InAngularAttribute();
    public virtual Guid GetDefaultUID();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
}
public class JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.InAngularHtmlFile : InHtmlLikeFile {
    private static Guid DefaultUID;
    public static string AttrLanguage;
    public PsiLanguageType RelatedLanguage { get; }
    public string PresentableShortName { get; }
    public Guid QuickListUID { get; }
    public string QuickListTitle { get; }
    private static InAngularHtmlFile();
    public virtual Guid GetDefaultUID();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.InAngularHtmlFile/<GetExtensions>d__2")]
protected virtual IEnumerable`1<string> GetExtensions();
    public virtual PsiLanguageType get_RelatedLanguage();
    public virtual string get_PresentableShortName();
    public virtual string ToString();
    public sealed virtual Guid get_QuickListUID();
    public sealed virtual string get_QuickListTitle();
}
public class JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.InAngularTag : InAngularHtmlFile {
    private static Guid DefaultUID;
    public string PresentableShortName { get; }
    private static InAngularTag();
    public virtual Guid GetDefaultUID();
    public virtual string CalcPrefix(DocumentOffset caretOffset);
    public virtual string get_PresentableShortName();
    public virtual string ToString();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.LiveTemplates.Web.Angular2Html.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
