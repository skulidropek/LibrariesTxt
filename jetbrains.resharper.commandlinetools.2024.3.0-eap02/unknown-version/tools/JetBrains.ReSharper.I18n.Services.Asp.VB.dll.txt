internal class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.AspGeneratedCodeResourceReferenceProvider : ResourceManagerReferenceProvider {
    protected virtual ReferenceCollection CreateArgumentReferences(IExpressionArgument argument, IVBExpression argumentValue, IInvocationInfo invocation, ParameterCandidateCheckResult parameterCandidateCheckResult);
}
internal class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.AspGlobalResourceReferenceProvider : StringArgumentReferenceFactoryBase`2<IExpressionArgument, IVBExpression> {
    [LocalizableAttribute("False")]
private static String[] ourTypes;
    [LocalizableAttribute("False")]
private static String[] ourParameters;
    private static AspGlobalResourceReferenceProvider();
    protected virtual ReferenceCollection CreateArgumentReferences(IExpressionArgument argument, IVBExpression argumentValue, IInvocationInfo invocation, ParameterCandidateCheckResult parameterCandidateCheckResult);
    protected virtual bool OnTypeCandidate(string typeName);
    protected virtual bool OnMethodCandidate(string methodName);
    protected virtual ParameterCandidateCheckResult OnParameterCandidate(IInvocationInfo invocationInfo, IExpressionArgument argument);
}
internal class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.AspLocalResourceReferenceProvider4HttpContext : StringArgumentReferenceFactoryBase`2<IExpressionArgument, IVBLiteralExpression> {
    [LocalizableAttribute("False")]
private static String[] ourTypes;
    [LocalizableAttribute("False")]
private static String[] ourParameters;
    private static AspLocalResourceReferenceProvider4HttpContext();
    protected virtual ReferenceCollection CreateArgumentReferences(IExpressionArgument argument, IVBLiteralExpression argumentValue, IInvocationInfo invocation, ParameterCandidateCheckResult parameterCandidateCheckResult);
    protected virtual bool OnTypeCandidate(string typeName);
    protected virtual bool OnMethodCandidate(string methodName);
    protected virtual ParameterCandidateCheckResult OnParameterCandidate(IInvocationInfo invocationInfo, IExpressionArgument argument);
}
internal class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.AspLocalResourceReferenceProvider4TemplateControl : StringArgumentReferenceFactoryBase`2<IExpressionArgument, IVBLiteralExpression> {
    private static string Type;
    [LocalizableAttribute("False")]
private static String[] ourParameters;
    private static AspLocalResourceReferenceProvider4TemplateControl();
    protected virtual ReferenceCollection CreateArgumentReferences(IExpressionArgument argument, IVBLiteralExpression argumentValue, IInvocationInfo invocation, ParameterCandidateCheckResult parameterCandidateCheckResult);
    protected virtual bool OnTypeCandidate(string typeName);
    protected virtual bool OnMethodCandidate(string methodName);
    protected virtual ParameterCandidateCheckResult OnParameterCandidate(IInvocationInfo invocationInfo, IExpressionArgument argument);
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.AspVBFileReference : AspFileReferenceBase`2<IVBArgument, IVBLiteralExpression> {
    public bool CaseSensitive { get; }
    public AspVBFileReference(IVBArgument owner, IQualifier quilifier, IVBLiteralExpression token, TreeTextRange withinRange);
    public virtual bool get_CaseSensitive();
    protected virtual string GetElementText();
    public virtual TreeTextRange GetTreeTextRange();
    public virtual ISymbolTable GetSymbolTable(SymbolTableMode mode);
    public IPsiSourceFile GetResourceFile();
    protected virtual IReference SetNewValue(string newName, string tokenText);
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.AspVBFolderReference : AspFolderReferenceBase`2<IVBArgument, IVBLiteralExpression> {
    public AspVBFolderReference(IVBArgument owner, IQualifier quilifier, IVBLiteralExpression token, TreeTextRange withinRange);
    protected virtual string GetElementText();
    public virtual TreeTextRange GetTreeTextRange();
    protected virtual IReference SetNewValue(string newName, string tokenText);
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.AspVBResourceReference : VBResourceReference {
    public AspVBResourceReference(TreeTextRange withinRange, IExpressionArgument owner, IVBExpression token);
    protected virtual IReference BindToInternal(IDeclaredElement element, ISubstitution substitution);
}
[ReferenceProviderFactoryAttribute("16")]
internal class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.ResourceReferenceProviderFactory : object {
    private IShellLocks myShellLocks;
    [CompilerGeneratedAttribute]
private ISignal`1<IReferenceProviderFactory> <Changed>k__BackingField;
    public ISignal`1<IReferenceProviderFactory> Changed { get; }
    public ResourceReferenceProviderFactory(Lifetime lifetime, IShellLocks shellLocks);
    public sealed virtual IReferenceFactory CreateFactory(IPsiSourceFile sourceFile, IFile file, IWordIndex wordIndexForChecks);
    [CompilerGeneratedAttribute]
public sealed virtual ISignal`1<IReferenceProviderFactory> get_Changed();
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.VBGlobalResourceItemReference : GlobalResourceItemReference`2<IExpressionArgument, IVBExpression> {
    public VBGlobalResourceItemReference(IExpressionArgument owner, IVBExpression token, TreeTextRange range);
    public virtual TreeTextRange GetTreeTextRange();
    protected virtual string GetElementText();
    public virtual IQualifier GetQualifier();
    protected virtual IReference BindToInternal(IDeclaredElement element, ISubstitution substitution);
    [CompilerGeneratedAttribute]
private bool <GetQualifier>b__3_0(IVBArgument a);
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.VBGlobalResourceReference : GlobalResourceReference`2<IExpressionArgument, IVBExpression> {
    public bool CaseSensitive { get; }
    public VBGlobalResourceReference(IExpressionArgument owner, IVBExpression token, TreeTextRange withinRange);
    public virtual bool get_CaseSensitive();
    protected virtual string GetElementText();
    public virtual TreeTextRange GetTreeTextRange();
    protected virtual IReference BindToInternal(IDeclaredElement element, ISubstitution substitution);
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.VBLocalResourceReference : LocalResourceReference`2<IVBArgument, IVBExpression> {
    public VBLocalResourceReference(IVBArgument owner, IVBExpression token, TreeTextRange withinRange);
    protected virtual string GetElementText();
    public virtual TreeTextRange GetTreeTextRange();
    public virtual Staticness GetStaticness();
    public virtual ITypeElement GetQualifierTypeElement();
    protected virtual IReference BindToInternal(IDeclaredElement element, ISubstitution substitution);
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.VBLocalResourceReference4HttpContext : VBLocalResourceReference {
    public VBLocalResourceReference4HttpContext(IVBArgument owner, IVBExpression token, TreeTextRange withinRange);
    public virtual IQualifier GetQualifier();
    protected virtual IProjectFile GetAspFile();
    public virtual ResolveResultWithInfo Resolve(ISymbolTable symbolTable, IAccessContext context);
}
public class JetBrains.ReSharper.I18n.Services.Asp.VB.CustomReferences.VBPropertyReference : PropertyReference`2<IVBArgument, IVBExpression> {
    private int myArgumentObjTypeIndex;
    public VBPropertyReference(IVBArgument owner, IVBExpression token, TreeTextRange withinRange, int argumentObjTypeIndex);
    protected virtual IArgument FindArgument(ITreeNode element, string name);
}
[SolutionComponentAttribute("16")]
internal class JetBrains.ReSharper.I18n.Services.Asp.VB.Refactoring.ExpressionToGlobalWebSiteResourceExtractor : ExpressionToResourceExtractor {
    public byte Priority { get; }
    public ExpressionToGlobalWebSiteResourceExtractor(ResourceAccessorFinder resourceAccessorFinder, ExpressionToGlobalWebSiteResourceChecker expressionToGlobalWebSiteResourceChecker);
    public virtual byte get_Priority();
}
[SolutionComponentAttribute("16")]
internal class JetBrains.ReSharper.I18n.Services.Asp.VB.Refactoring.ExpressionToLocalResourceExtractor : ExpressionToResourceExtractor {
    public byte Priority { get; }
    public ExpressionToLocalResourceExtractor(ResourceAccessorFinder resourceAccessorFinder, ExpressionToLocalResourceChecker expressionToLocalResourceChecker);
    public virtual byte get_Priority();
    public virtual bool CanExtractTo(ISourceElement sourceElement, IPsiSourceFile resourceFile);
    public virtual bool Extract(ISourceElement sourceElement, IResourceItem resourceItem, IRefactoringDriver driver);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.I18n.Services.Asp.VB.Refactoring.ZoneMarker : object {
}
[ResourceAccessorsFinderAttribute("16")]
internal class JetBrains.ReSharper.I18n.Services.Asp.VB.Searching.VBWebSiteGlobalResourceAccessorFinder : WebSiteGlobalResourceAccessorFinder {
    public VBWebSiteGlobalResourceAccessorFinder(GeneratedFileFinder generatedFileFinder);
    protected virtual WebSiteGlobalResourceAccessor CreateGlobalResourceAccessor(IProperty property);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.I18n.Services.Asp.VB.Services.ExpressionToGlobalWebSiteResourceChecker : object {
    public sealed virtual bool CanUseResource(IPsiSourceFile resourceFile, IAccessContext context);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.I18n.Services.Asp.VB.Services.ExpressionToLocalResourceChecker : object {
    public sealed virtual bool CanUseResource(IPsiSourceFile resourceFile, IAccessContext context);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.I18n.Services.Asp.VB.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
