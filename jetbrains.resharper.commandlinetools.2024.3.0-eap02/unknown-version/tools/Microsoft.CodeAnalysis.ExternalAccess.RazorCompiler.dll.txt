[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExternalAccess.RazorCompiler.GeneratorExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void RegisterHostOutput(IncrementalGeneratorInitializationContext& this, IncrementalValuesProvider`1<TSource> source, Action`3<HostProductionContext, TSource, CancellationToken> action);
    [ExtensionAttribute]
public static ImmutableArray`1<ValueTuple`2<string, string>> GetHostOutputs(GeneratorRunResult runResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.ExternalAccess.RazorCompiler.HostOutputNode`1 : object {
    private IIncrementalGeneratorNode`1<TInput> _source;
    private Action`3<HostProductionContext, TInput, CancellationToken> _action;
    public IncrementalGeneratorOutputKind Kind { get; }
    public HostOutputNode`1(IIncrementalGeneratorNode`1<TInput> source, Action`3<HostProductionContext, TInput, CancellationToken> action);
    public sealed virtual IncrementalGeneratorOutputKind get_Kind();
    public sealed virtual NodeStateTable`1<ImmutableArray`1<ValueTuple`2<string, string>>> UpdateStateTable(Builder graphState, NodeStateTable`1<ImmutableArray`1<ValueTuple`2<string, string>>> previousTable, CancellationToken cancellationToken);
    public sealed virtual void AppendOutputs(IncrementalExecutionContext context, CancellationToken cancellationToken);
    private sealed virtual override IIncrementalGeneratorNode`1<ImmutableArray`1<ValueTuple`2<string, string>>> Microsoft.CodeAnalysis.IIncrementalGeneratorNode<System.Collections.Immutable.ImmutableArray<(System.String,System.String)>>.WithComparer(IEqualityComparer`1<ImmutableArray`1<ValueTuple`2<string, string>>> comparer);
    public sealed virtual IIncrementalGeneratorNode`1<ImmutableArray`1<ValueTuple`2<string, string>>> WithTrackingName(string name);
    private sealed virtual override void Microsoft.CodeAnalysis.IIncrementalGeneratorNode<System.Collections.Immutable.ImmutableArray<(System.String,System.String)>>.RegisterOutput(IIncrementalGeneratorOutputNode output);
}
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExternalAccess.RazorCompiler.HostProductionContext : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ArrayBuilder`1<ValueTuple`2<string, string>> Outputs;
    internal HostProductionContext(ArrayBuilder`1<ValueTuple`2<string, string>> outputs);
    [NullableContextAttribute("1")]
public void AddOutput(string name, string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
