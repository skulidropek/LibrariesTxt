[MarshallerAttribute("JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.TraitsCollection/Marshaller")]
public class JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.TraitsCollection : Dictionary`2<string, List`1<string>> {
    private TraitsCollection(Dictionary`2<string, List`1<string>> traits);
    private TraitsCollection(SerializationInfo info, StreamingContext context);
    public static TraitsCollection Create(Dictionary`2<string, List`1<string>> traits);
}
public class JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.XUnitTestAssemblyTask : TestContainer {
    [CompilerGeneratedAttribute]
private string <ConfigPath>k__BackingField;
    public string ConfigPath { get; public set; }
    public XUnitTestAssemblyTask(string location, ShadowCopy shadowCopy);
    [CompilerGeneratedAttribute]
public string get_ConfigPath();
    [CompilerGeneratedAttribute]
public void set_ConfigPath(string value);
}
public class JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.XUnitTestCaseTask : XUnitTestElementTask {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string DisplayName { get; }
    private XUnitTestCaseTask(string testId, bool runExplicitly);
    private XUnitTestCaseTask(string testId, string displayName, TraitsCollection traits);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    public static XUnitTestCaseTask ToClient(string testId, bool runExplicitly);
    public static XUnitTestCaseTask ToServer(string testId, string displayName, TraitsCollection traits);
}
public class JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.XUnitTestClassTask : XUnitTestElementTask {
    public string TypeName { get; }
    private XUnitTestClassTask(string testId, string parentId, bool runAllChildren, bool runExplicitly);
    public XUnitTestClassTask(string typeName, string parentId, TraitsCollection traits);
    public string get_TypeName();
    public static XUnitTestClassTask ToClient(string testId, string parentId, bool runAllChildren, bool runExplicitly);
    public static XUnitTestClassTask ToServer(string typeName, string parentId, TraitsCollection traits);
}
public abstract class JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.XUnitTestElementTask : RemoteTask {
    [CompilerGeneratedAttribute]
private string <TestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private TraitsCollection <Traits>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RunAllChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RunExplicitly>k__BackingField;
    public string TestId { get; }
    public string ParentId { get; }
    public TraitsCollection Traits { get; public set; }
    public bool RunAllChildren { get; }
    public bool RunExplicitly { get; }
    protected XUnitTestElementTask(string testId, string parentId, bool runAllChildren, bool runExplicitly);
    protected XUnitTestElementTask(string testId, string parentId);
    [CompilerGeneratedAttribute]
public string get_TestId();
    [CompilerGeneratedAttribute]
public string get_ParentId();
    [CompilerGeneratedAttribute]
public TraitsCollection get_Traits();
    [CompilerGeneratedAttribute]
public void set_Traits(TraitsCollection value);
    [CompilerGeneratedAttribute]
public bool get_RunAllChildren();
    [CompilerGeneratedAttribute]
public bool get_RunExplicitly();
    public virtual string ToString();
}
public class JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.XUnitTestMethodTask : XUnitTestElementTask {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string TypeName { get; }
    public string MethodName { get; }
    public string DisplayName { get; }
    private XUnitTestMethodTask(string testId, string parentId, bool runAllChildren, bool runExplicitly);
    private XUnitTestMethodTask(string parentId, string typeName, string methodName, string displayName, TraitsCollection traits);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    public static XUnitTestMethodTask ToClient(string testId, string parentId, bool runAllChildren, bool runExplicitly);
    public static XUnitTestMethodTask ToServer(string parentId, string typeName, string methodName, string displayName, TraitsCollection traits);
}
public class JetBrains.ReSharper.TestRunner.Adapters.XUnit.Tasks.XUnitTestTheoryTask : XUnitTestElementTask {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string DisplayName { get; }
    private XUnitTestTheoryTask(string testId, string parentId, bool runExplicitly);
    private XUnitTestTheoryTask(string parentId, string displayName, TraitsCollection traits);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    public static XUnitTestTheoryTask ToClient(string testId, string parentId, bool runExplicitly);
    public static XUnitTestTheoryTask ToServer(string parentId, string displayName, TraitsCollection traits);
}
