internal static class Microsoft.CodeAnalysis.Debugging.DkmExceptionUtilities : object {
    internal static int COR_E_BADIMAGEFORMAT;
    internal static int CORDBG_E_MISSING_METADATA;
    [NullableContextAttribute("1")]
internal static bool IsBadOrMissingMetadataException(Exception e);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal abstract class Microsoft.CodeAnalysis.ExpressionEvaluator.AbstractTypeParameterChecker : SymbolVisitor {
    private HashSet`1<ITypeParameterSymbol> _acceptableTypeParameters;
    protected AbstractTypeParameterChecker(ImmutableArray`1<ITypeParameterSymbol> acceptableTypeParameters);
    public abstract virtual IParameterSymbol GetThisParameter(IMethodSymbol method);
    public sealed virtual void VisitTypeParameter(ITypeParameterSymbol symbol);
    public sealed virtual void VisitAlias(IAliasSymbol symbol);
    public sealed virtual void VisitArrayType(IArrayTypeSymbol symbol);
    public sealed virtual void VisitPointerType(IPointerTypeSymbol symbol);
    public sealed virtual void VisitParameter(IParameterSymbol symbol);
    public sealed virtual void VisitLocal(ILocalSymbol symbol);
    public sealed virtual void VisitEvent(IEventSymbol symbol);
    public sealed virtual void VisitField(IFieldSymbol symbol);
    public sealed virtual void VisitMethod(IMethodSymbol symbol);
    public sealed virtual void VisitProperty(IPropertySymbol symbol);
    public sealed virtual void VisitNamedType(INamedTypeSymbol symbol);
    public sealed virtual void VisitDynamicType(IDynamicTypeSymbol symbol);
    public sealed virtual void VisitLabel(ILabelSymbol symbol);
    public sealed virtual void VisitNamespace(INamespaceSymbol symbol);
    public sealed virtual void VisitAssembly(IAssemblySymbol symbol);
    public sealed virtual void VisitModule(IModuleSymbol symbol);
    public sealed virtual void VisitRangeVariable(IRangeVariableSymbol symbol);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.Alias : ValueType {
    internal DkmClrAliasKind Kind;
    internal string Name;
    internal string FullName;
    internal string Type;
    internal Guid CustomTypeInfoId;
    internal ReadOnlyCollection`1<byte> CustomTypeInfo;
    internal Alias(DkmClrAliasKind kind, string name, string fullName, string type, Guid customTypeInfoId, ReadOnlyCollection`1<byte> customTypeInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.AssemblyReaders : ValueType {
    public MetadataReader MetadataReader;
    public object SymReader;
    public AssemblyReaders(MetadataReader metadataReader, object symReader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.AssemblyReference : object {
    private AssemblyIdentity _identity;
    private AssemblyIdentity Microsoft.Cci.IAssemblyReference.Identity { get; }
    [NullableAttribute("2")]
private Version Microsoft.Cci.IAssemblyReference.AssemblyVersionPattern { get; }
    private string Microsoft.Cci.INamedEntity.Name { get; }
    internal AssemblyReference(AssemblyIdentity identity);
    private sealed virtual override AssemblyIdentity Microsoft.Cci.IAssemblyReference.get_Identity();
    [NullableContextAttribute("2")]
private sealed virtual override Version Microsoft.Cci.IAssemblyReference.get_AssemblyVersionPattern();
    private sealed virtual override string Microsoft.Cci.INamedEntity.get_Name();
    private sealed virtual override IAssemblyReference Microsoft.Cci.IModuleReference.GetContainingAssembly(EmitContext context);
    [NullableContextAttribute("2")]
private sealed virtual override IDefinition Microsoft.Cci.IReference.AsDefinition(EmitContext context);
    private sealed virtual override void Microsoft.Cci.IReference.Dispatch(MetadataVisitor visitor);
    private sealed virtual override IEnumerable`1<ICustomAttribute> Microsoft.Cci.IReference.GetAttributes(EmitContext context);
    [NullableContextAttribute("2")]
private sealed virtual override ISymbolInternal Microsoft.Cci.IReference.GetInternalSymbol();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.ExpressionEvaluator.CompileResult : object {
    internal Byte[] Assembly;
    internal string TypeName;
    internal string MethodName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ReadOnlyCollection`1<string> FormatSpecifiers;
    internal CompileResult(Byte[] assembly, string typeName, string methodName, ReadOnlyCollection`1<string> formatSpecifiers);
    [NullableContextAttribute("2")]
public abstract virtual Guid GetCustomTypeInfo(ReadOnlyCollection`1& payload);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.CustomTypeInfo : object {
    internal static Guid PayloadTypeId;
    private static char NameSeparator;
    private static CustomTypeInfo();
    [NullableContextAttribute("2")]
internal static DkmClrCustomTypeInfo Create(ReadOnlyCollection`1<byte> dynamicFlags, ReadOnlyCollection`1<string> tupleElementNames);
    [ExtensionAttribute]
internal static DkmClrCustomTypeInfo WithNoTupleElementNames(DkmClrCustomTypeInfo typeInfo);
    internal static DkmClrCustomTypeInfo SkipOne(DkmClrCustomTypeInfo customInfo);
    internal static string GetTupleElementNameIfAny(ReadOnlyCollection`1<string> tupleElementNames, int index);
    [NullableContextAttribute("2")]
internal static ReadOnlyCollection`1<byte> Encode(ReadOnlyCollection`1<byte> dynamicFlags, ReadOnlyCollection`1<string> tupleElementNames);
    [NullableContextAttribute("2")]
internal static void Decode(Guid payloadTypeId, ReadOnlyCollection`1<byte> payload, ReadOnlyCollection`1& dynamicFlags, ReadOnlyCollection`1& tupleElementNames);
    private static ReadOnlyCollection`1<byte> EncodeNames(ReadOnlyCollection`1<string> names);
    private static ReadOnlyCollection`1<string> DecodeNames(ReadOnlyCollection`1<byte> bytes, int start);
    private static string JoinNames(ReadOnlyCollection`1<string> names);
    private static ReadOnlyCollection`1<string> SplitNames(string str);
    private static Byte[] CopyBytes(ReadOnlyCollection`1<byte> bytes, int start, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.DebuggerDiagnosticFormatter : DiagnosticFormatter {
    internal static DebuggerDiagnosticFormatter Instance;
    private static DebuggerDiagnosticFormatter();
    public virtual string Format(Diagnostic diagnostic, IFormatProvider formatter);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.DkmUtilities : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static ResultProperties GetResultProperties(TSymbol symbol, DkmClrCompilationResultFlags flags, bool isConstant);
    private static DkmEvaluationResultCategory GetResultCategory(SymbolKind kind);
    private static DkmEvaluationResultAccessType GetResultAccessType(Accessibility accessibility);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.DynamicFlagsCustomTypeInfo : object {
    internal static ReadOnlyCollection`1<byte> ToBytes(ArrayBuilder`1<bool> dynamicFlags, int startIndex);
    [NullableContextAttribute("2")]
internal static bool GetFlag(ReadOnlyCollection`1<byte> bytes, int index);
    internal static void CopyTo(ReadOnlyCollection`1<byte> bytes, ArrayBuilder`1<bool> builder);
    internal static ReadOnlyCollection`1<byte> SkipOne(ReadOnlyCollection`1<byte> bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.EEMetadataReferenceResolver : MetadataReferenceResolver {
    private AssemblyIdentityComparer _identityComparer;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, ImmutableArray`1<ValueTuple`2<AssemblyIdentity, MetadataReference>>> _referencesBySimpleName;
    public bool ResolveMissingAssemblies { get; }
    internal EEMetadataReferenceResolver(AssemblyIdentityComparer identityComparer, IReadOnlyDictionary`2<string, ImmutableArray`1<ValueTuple`2<AssemblyIdentity, MetadataReference>>> referencesBySimpleName);
    public virtual bool get_ResolveMissingAssemblies();
    public virtual PortableExecutableReference ResolveMissingAssembly(MetadataReference definition, AssemblyIdentity referenceIdentity);
    public virtual ImmutableArray`1<PortableExecutableReference> ResolveReference(string reference, string baseFilePath, MetadataReferenceProperties properties);
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    private ValueTuple`2<AssemblyIdentity, MetadataReference> GetBestMatch(ImmutableArray`1<ValueTuple`2<AssemblyIdentity, MetadataReference>> references, AssemblyIdentity referenceIdentity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.ExpressionEvaluator.EESymbolProvider`2 : object {
    [NullableContextAttribute("0")]
public abstract virtual TTypeSymbol DecodeLocalVariableType(ImmutableArray`1<byte> signature);
    public abstract virtual void DecodeLocalConstant(BlobReader& reader, TTypeSymbol& type, ConstantValue& value);
    public abstract virtual TTypeSymbol GetTypeSymbolForSerializedType(string typeName);
    [NullableContextAttribute("0")]
public abstract virtual TLocalSymbol GetLocalVariable(string name, int slotIndex, LocalInfo`1<TTypeSymbol> info, ImmutableArray`1<bool> dynamicFlagsOpt, ImmutableArray`1<string> tupleElementNamesOpt);
    public abstract virtual TLocalSymbol GetLocalConstant(string name, TTypeSymbol type, ConstantValue value, ImmutableArray`1<bool> dynamicFlagsOpt, ImmutableArray`1<string> tupleElementNamesOpt);
    public abstract virtual IAssemblySymbolInternal GetReferencedAssembly(AssemblyReferenceHandle handle);
    public abstract virtual TTypeSymbol GetType(EntityHandle handle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.ExpressionEvaluator.EvaluationContextBase : object {
    internal static AssemblyIdentity SystemIdentity;
    internal static AssemblyIdentity SystemCoreIdentity;
    internal static AssemblyIdentity SystemLinqIdentity;
    internal static AssemblyIdentity SystemXmlIdentity;
    internal static AssemblyIdentity SystemXmlLinqIdentity;
    internal static AssemblyIdentity MicrosoftVisualBasicIdentity;
    private static EvaluationContextBase();
    internal CompileResult CompileExpression(string expr, DkmEvaluationFlags compilationFlags, ImmutableArray`1<Alias> aliases, DiagnosticBag diagnostics, ResultProperties& resultProperties, CompilationTestData testData);
    internal abstract virtual CompileResult CompileExpression(string expr, DkmEvaluationFlags compilationFlags, ImmutableArray`1<Alias> aliases, ImmutableArray`1<string> additionalImports, DiagnosticBag diagnostics, ResultProperties& resultProperties, CompilationTestData testData);
    internal CompileResult CompileAssignment(string target, string expr, ImmutableArray`1<Alias> aliases, DiagnosticBag diagnostics, ResultProperties& resultProperties, CompilationTestData testData);
    internal abstract virtual CompileResult CompileAssignment(string target, string expr, ImmutableArray`1<Alias> aliases, ImmutableArray`1<string> additionalImports, DiagnosticBag diagnostics, ResultProperties& resultProperties, CompilationTestData testData);
    internal abstract virtual ReadOnlyCollection`1<byte> CompileGetLocals(ArrayBuilder`1<LocalAndMethod> locals, bool argumentsOnly, ImmutableArray`1<Alias> aliases, DiagnosticBag diagnostics, String& typeName, CompilationTestData testData);
    internal string GetErrorMessageAndMissingAssemblyIdentities(DiagnosticBag diagnostics, DiagnosticFormatter formatter, CultureInfo preferredUICulture, AssemblyIdentity linqLibrary, Boolean& useReferencedModulesOnly, ImmutableArray`1& missingAssemblyIdentities);
    internal static string GetErrorMessage(Diagnostic error, DiagnosticFormatter formatter, CultureInfo preferredUICulture);
    internal abstract virtual bool HasDuplicateTypesOrAssemblies(Diagnostic diagnostic);
    internal abstract virtual ImmutableArray`1<AssemblyIdentity> GetMissingAssemblyIdentities(Diagnostic diagnostic, AssemblyIdentity linqLibrary);
    internal static int NormalizeILOffset(UInt32 ilOffset);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.ExpressionCompilerConstants : object {
    internal static string TypeVariablesLocalName;
    internal static string TypeVariablesClassName;
    internal static string IntrinsicAssemblyNamespace;
    internal static string IntrinsicAssemblyTypeName;
    internal static string IntrinsicAssemblyTypeMetadataName;
    internal static string GetExceptionMethodName;
    internal static string GetStowedExceptionMethodName;
    internal static string GetObjectAtAddressMethodName;
    internal static string GetReturnValueMethodName;
    internal static string CreateVariableMethodName;
    internal static string GetVariableValueMethodName;
    internal static string GetVariableAddressMethodName;
}
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.ExpressionCompilerUtilities : object {
    [NullableContextAttribute("1")]
internal static string GenerateUniqueName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.ExpressionEvaluatorFatalError : object {
    private static string RegistryValue;
    internal static bool IsFailFastEnabled;
    private static ExpressionEvaluatorFatalError();
    internal static bool CrashIfFailFastEnabled(Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.ExternAliasRecord : ValueType {
    public string Alias;
    public object TargetAssembly;
    public ExternAliasRecord(string alias, IAssemblySymbolInternal targetAssembly);
    public ExternAliasRecord(string alias, AssemblyIdentity targetIdentity);
}
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.HoistedLocalScopeRecord : ValueType {
    public int StartOffset;
    public int Length;
    public HoistedLocalScopeRecord(int startOffset, int length);
}
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.ILSpan : ValueType {
    public static ILSpan MaxValue;
    public UInt32 StartOffset;
    public UInt32 EndOffsetExclusive;
    public ILSpan(UInt32 start, UInt32 end);
    private static ILSpan();
    public bool Contains(int offset);
    public sealed virtual bool Equals(ILSpan other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.ImmutableArrayExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static int IndexOf(ImmutableArray`1<TItem> array, Func`3<TItem, TArg, bool> predicate, TArg arg);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.ImportRecord : ValueType {
    public ImportTargetKind TargetKind;
    public string Alias;
    public ITypeSymbolInternal TargetType;
    public string TargetString;
    public IAssemblySymbolInternal TargetAssembly;
    public string TargetAssemblyAlias;
    public ImportRecord(ImportTargetKind targetKind, string alias, ITypeSymbolInternal targetType, string targetString, IAssemblySymbolInternal targetAssembly, string targetAssemblyAlias);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.ExpressionEvaluator.LocalAndMethod : object {
    public string LocalName;
    public string LocalDisplayName;
    public string MethodName;
    public DkmClrCompilationResultFlags Flags;
    public LocalAndMethod(string localName, string localDisplayName, string methodName, DkmClrCompilationResultFlags flags);
    [NullableContextAttribute("2")]
public abstract virtual Guid GetCustomTypeInfo(ReadOnlyCollection`1& payload);
}
internal enum Microsoft.CodeAnalysis.ExpressionEvaluator.MakeAssemblyReferencesKind : Enum {
    public int value__;
    public static MakeAssemblyReferencesKind AllAssemblies;
    public static MakeAssemblyReferencesKind AllReferences;
    public static MakeAssemblyReferencesKind DirectReferencesOnly;
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{GetDebuggerDisplay(), nq}")]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.MetadataBlock : ValueType {
    internal Guid ModuleVersionId;
    internal Guid GenerationId;
    internal IntPtr Pointer;
    internal int Size;
    internal MetadataBlock(Guid moduleVersionId, Guid generationId, IntPtr pointer, int size);
    public sealed virtual bool Equals(MetadataBlock other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
private string GetDebuggerDisplay();
}
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.MetadataContext`1 : ValueType {
    internal ImmutableArray`1<MetadataBlock> MetadataBlocks;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ImmutableDictionary`2<MetadataContextId, TAssemblyContext> AssemblyContexts;
    internal MetadataContext`1(ImmutableArray`1<MetadataBlock> metadataBlocks, ImmutableDictionary`2<MetadataContextId, TAssemblyContext> assemblyContexts);
    internal bool Matches(ImmutableArray`1<MetadataBlock> metadataBlocks);
}
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.MetadataContextId : ValueType {
    internal Guid ModuleVersionId;
    internal MetadataContextId(Guid moduleVersionId);
    public sealed virtual bool Equals(MetadataContextId other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    internal static MetadataContextId GetContextId(Guid moduleVersionId, MakeAssemblyReferencesKind kind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.MetadataUtilities : object {
    internal static UInt32 COR_E_BADIMAGEFORMAT;
    internal static UInt32 CORDBG_E_MISSING_METADATA;
    [NullableContextAttribute("0")]
[ExtensionAttribute]
internal static ImmutableArray`1<MetadataReference> MakeAssemblyReferences(ImmutableArray`1<MetadataBlock> metadataBlocks, Guid moduleVersionId, AssemblyIdentityComparer identityComparer, MakeAssemblyReferencesKind kind, IReadOnlyDictionary`2& referencesBySimpleName);
    private static void RemoveUnreferencedModules(ArrayBuilder`1<MetadataReference> modules, ArrayBuilder`1<AssemblyIdentity> identities, AssemblyIdentityComparer identityComparer, ArrayBuilder`1<AssemblyIdentity> referencedModules);
    private static PortableExecutableReference MakeAssemblyReference(ModuleMetadata metadata, Dictionary`2<string, ModuleMetadata> modulesByName);
    internal static string GetFileNameWithoutExtension(string fileName);
    private static Byte[] GetWindowsProxyBytes();
    private static PortableExecutableReference MakeCompileTimeWinMdAssemblyMetadata(ArrayBuilder`1<ModuleMetadata> runtimeModules);
    private static bool IsPrimaryModule(ModuleMetadata metadata);
    internal static bool IsWindowsComponent(MetadataReader reader, string moduleName);
    private static bool IsWindowsComponentName(string moduleName);
    internal static bool IsWindowsAssemblyName(string assemblyName);
    [ExtensionAttribute]
internal static bool IsWindowsAssemblyIdentity(AssemblyIdentity assemblyIdentity);
    [ExtensionAttribute]
internal static ImmutableArray`1<string> GetLocalNames(ArrayBuilder`1<ISymUnmanagedScope> scopes);
    internal static ImmutableArray`1<int> GetSynthesizedMethods(Byte[] assembly, string methodName);
    internal static bool IsBadOrMissingMetadataException(Exception e, string moduleName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.MethodContextReuseConstraints : ValueType {
    private Guid _moduleVersionId;
    private int _methodToken;
    private int _methodVersion;
    private ILSpan _span;
    internal MethodContextReuseConstraints(Guid moduleVersionId, int methodToken, int methodVersion, ILSpan span);
    public bool AreSatisfied(Guid moduleVersionId, int methodToken, int methodVersion, int ilOffset);
    public virtual string ToString();
    public static ILSpan CalculateReuseSpan(int ilOffset, ILSpan initialSpan, IEnumerable`1<ILSpan> scopes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.MethodDebugInfo`2 : object {
    public static MethodDebugInfo`2<TTypeSymbol, TLocalSymbol> None;
    [NullableAttribute("0")]
public ImmutableArray`1<HoistedLocalScopeRecord> HoistedLocalScopeRecords;
    [NullableAttribute("0")]
public ImmutableArray`1<ImmutableArray`1<ImportRecord>> ImportRecordGroups;
    [NullableAttribute("0")]
public ImmutableArray`1<ExternAliasRecord> ExternAliasRecords;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableDictionary`2<int, ImmutableArray`1<bool>> DynamicLocalMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableDictionary`2<int, ImmutableArray`1<string>> TupleLocalMap;
    public string DefaultNamespaceName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> LocalVariableNames;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<TLocalSymbol> LocalConstants;
    public ILSpan ReuseSpan;
    [NullableAttribute("2")]
public string ContainingDocumentName;
    public bool IsPrimaryConstructor;
    internal static int S_OK;
    internal static int E_FAIL;
    internal static int E_NOTIMPL;
    private static IntPtr s_ignoreIErrorInfo;
    [NullableContextAttribute("0")]
public MethodDebugInfo`2(ImmutableArray`1<HoistedLocalScopeRecord> hoistedLocalScopeRecords, ImmutableArray`1<ImmutableArray`1<ImportRecord>> importRecordGroups, ImmutableArray`1<ExternAliasRecord> externAliasRecords, ImmutableDictionary`2<int, ImmutableArray`1<bool>> dynamicLocalMap, ImmutableDictionary`2<int, ImmutableArray`1<string>> tupleLocalMap, string defaultNamespaceName, ImmutableArray`1<string> localVariableNames, ImmutableArray`1<TLocalSymbol> localConstants, ILSpan reuseSpan, string containingDocumentName, bool isPrimaryConstructor);
    private static MethodDebugInfo`2();
    public ImmutableSortedSet`1<int> GetInScopeHoistedLocalIndices(int ilOffset, ILSpan& methodContextReuseSpan);
    public static MethodDebugInfo`2<TTypeSymbol, TLocalSymbol> ReadMethodDebugInfo(ISymUnmanagedReader3 symReader, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, int methodToken, int methodVersion, int ilOffset, bool isVisualBasicMethod);
    private static void ThrowExceptionForHR(int hr);
    private static Byte[] GetCustomDebugInfoBytes(ISymUnmanagedReader3 reader, int methodToken, int methodVersion);
    private static ImmutableArray`1<string> GetImportStrings(ISymUnmanagedReader reader, int methodToken, int methodVersion);
    [NullableContextAttribute("0")]
private static void ReadCSharpNativeImportsInfo(ISymUnmanagedReader3 reader, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, int methodToken, int methodVersion, ImmutableArray`1& importRecordGroups, ImmutableArray`1& externAliasRecords);
    private static bool TryCreateImportRecordFromCSharpImportString(EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, string importString, ImportRecord& record);
    private static void GetCSharpDynamicLocalInfo(Byte[] customDebugInfo, IEnumerable`1<ISymUnmanagedScope> scopes, ImmutableDictionary`2& dynamicLocalMap, ImmutableDictionary`2& dynamicLocalConstantMap);
    private static void GetLocalKindByName(Dictionary`2<string, LocalKind<TTypeSymbol, TLocalSymbol>> localNames, IEnumerable`1<ISymUnmanagedScope> scopes);
    private static void GetTupleElementNamesLocalInfo(Byte[] customDebugInfo, ImmutableDictionary`2& tupleLocalMap, ImmutableDictionary`2& tupleLocalConstantMap);
    private static void ReadVisualBasicImportsDebugInfo(ISymUnmanagedReader reader, int methodToken, int methodVersion, ImmutableArray`1& importRecordGroups, String& defaultNamespaceName);
    private static bool TryCreateImportRecordFromVisualBasicImportString(string importString, ImportRecord& record, VBImportScopeKind& scope);
    private static ILSpan GetReuseSpan(ArrayBuilder`1<ISymUnmanagedScope> scopes, int ilOffset, bool isEndInclusive);
    private static void GetConstants(ArrayBuilder`1<TLocalSymbol> builder, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, ArrayBuilder`1<ISymUnmanagedScope> scopes, ImmutableDictionary`2<string, ImmutableArray`1<bool>> dynamicLocalConstantMap, ImmutableDictionary`2<LocalNameAndScope<TTypeSymbol, TLocalSymbol>, ImmutableArray`1<string>> tupleLocalConstantMap);
    public static void GetLocals(ArrayBuilder`1<TLocalSymbol> builder, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, ImmutableArray`1<string> names, ImmutableArray`1<LocalInfo`1<TTypeSymbol>> localInfo, ImmutableDictionary`2<int, ImmutableArray`1<bool>> dynamicLocalMap, ImmutableDictionary`2<int, ImmutableArray`1<string>> tupleLocalConstantMap);
    public static MethodDebugInfo`2<TTypeSymbol, TLocalSymbol> ReadFromPortable(MetadataReader reader, int methodToken, int ilOffset, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, bool isVisualBasicMethod);
    private static MethodDefinitionHandle GetDeltaRelativeMethodDefinitionHandle(MetadataReader reader, int methodToken);
    [NullableContextAttribute("0")]
private static void ReadLocalScopeInformation(MetadataReader reader, MethodDefinitionHandle methodHandle, int ilOffset, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, bool isVisualBasicMethod, ImmutableArray`1& importGroups, ImmutableArray`1& externAliases, ImmutableArray`1& localVariableNames, ImmutableDictionary`2& dynamicLocalMap, ImmutableDictionary`2& tupleLocalMap, ImmutableArray`1& localConstants, ILSpan& reuseSpan);
    private static string ReadUtf8String(MetadataReader reader, BlobHandle handle);
    private static string ReadUtf8String(BlobReader& reader);
    private static void PopulateImports(MetadataReader reader, ImportScopeHandle handle, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, bool isVisualBasicMethod, ArrayBuilder`1<ImmutableArray`1<ImportRecord>> importGroupsBuilder, ArrayBuilder`1<ExternAliasRecord> externAliasesBuilder);
    private static void PopulateImports(MetadataReader reader, ImportScope importScope, EESymbolProvider`2<TTypeSymbol, TLocalSymbol> symbolProvider, ArrayBuilder`1<ImportRecord> importGroupBuilder, ArrayBuilder`1<ExternAliasRecord> externAliasesBuilder);
    private static void ReadMethodCustomDebugInformation(MetadataReader reader, MethodDefinitionHandle methodHandle, ImmutableArray`1& hoistedLocalScopes, String& defaultNamespace, Boolean& isPrimaryConstructor);
    [NullableContextAttribute("0")]
private static ImmutableArray`1<bool> ReadDynamicCustomDebugInformation(MetadataReader reader, EntityHandle variableOrConstantHandle);
    private static ImmutableArray`1<string> ReadTupleCustomDebugInformation(MetadataReader reader, EntityHandle variableOrConstantHandle);
    private static bool TryGetCustomDebugInformation(MetadataReader reader, EntityHandle handle, Guid kind, CustomDebugInformation& customDebugInfo);
    [NullableContextAttribute("0")]
private static ImmutableArray`1<bool> DecodeDynamicFlags(BlobReader reader);
    private static ImmutableArray`1<string> DecodeTupleElementNames(BlobReader reader);
    [NullableContextAttribute("0")]
private static ImmutableArray`1<HoistedLocalScopeRecord> DecodeHoistedLocalScopes(BlobReader reader);
    private static string DecodeDefaultNamespace(BlobReader reader);
}
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.NotImplementedMetadataException : Exception {
    internal NotImplementedMetadataException(NotImplementedException inner);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.PdbHelpers : object {
    [ExtensionAttribute]
internal static void GetAllScopes(ISymUnmanagedMethod method, ArrayBuilder`1<ISymUnmanagedScope> builder);
    [ExtensionAttribute]
internal static void GetAllScopes(ISymUnmanagedMethod method, ArrayBuilder`1<ISymUnmanagedScope> allScopes, ArrayBuilder`1<ISymUnmanagedScope> containingScopes, int offset, bool isScopeEndInclusive);
    private static void GetAllScopes(ISymUnmanagedScope root, ArrayBuilder`1<ISymUnmanagedScope> allScopes, ArrayBuilder`1<ISymUnmanagedScope> containingScopes, int offset, bool isScopeEndInclusive);
    private static bool IsInScope(ISymUnmanagedScope scope, int offset, bool isEndInclusive);
    public static ConstantValue GetSymConstantValue(ITypeSymbolInternal type, object symValue);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.PseudoVariableUtilities : object {
    private static int ReturnValuePrefixLength;
    [NullableContextAttribute("1")]
internal static bool TryParseReturnValueIndex(string name, Int32& index);
    [ExtensionAttribute]
internal static DkmClrCompilationResultFlags GetLocalResultFlags(Alias alias);
    [ExtensionAttribute]
internal static bool IsReturnValueWithoutIndex(Alias alias);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.ExpressionEvaluator.RegistryHelpers : object {
    private static string RegistryKey;
    internal static object GetRegistryValue(string name);
    internal static bool GetBoolRegistryValue(string name);
}
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.ExpressionEvaluator.ResultProperties : ValueType {
    public DkmClrCompilationResultFlags Flags;
    public DkmEvaluationResultCategory Category;
    public DkmEvaluationResultAccessType AccessType;
    public DkmEvaluationResultStorageType StorageType;
    public DkmEvaluationResultTypeModifierFlags ModifierFlags;
    public ResultProperties(DkmClrCompilationResultFlags flags, DkmEvaluationResultCategory category, DkmEvaluationResultAccessType accessType, DkmEvaluationResultStorageType storageType, DkmEvaluationResultTypeModifierFlags modifierFlags);
    public ResultProperties(DkmClrCompilationResultFlags flags);
}
public class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame : object {
}
public enum Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind : Enum {
    public int value__;
    public static DkmClrAliasKind Exception;
    public static DkmClrAliasKind StowedException;
    public static DkmClrAliasKind ReturnValue;
    public static DkmClrAliasKind Variable;
    public static DkmClrAliasKind ObjectId;
}
public class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1 : MulticastDelegate {
    public DkmCompletionRoutine`1(object object, IntPtr method);
    public virtual void Invoke(TResult result);
    public virtual IAsyncResult BeginInvoke(TResult result, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public static class Microsoft.VisualStudio.Debugger.DkmComponentManager : object {
    public static bool ReportCurrentNonFatalException(Exception currentException, string implementationName);
}
public enum Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition : Enum {
    public int value__;
    public static DkmDataCreationDisposition CreateNew;
    public static DkmDataCreationDisposition CreateAlways;
}
[DebuggerDisplayAttribute("\{DkmException Code={Code,h}\}")]
public class Microsoft.VisualStudio.Debugger.DkmException : ApplicationException {
    private DkmExceptionCode _code;
    public DkmExceptionCode Code { get; }
    public DkmException(DkmExceptionCode code);
    protected DkmException(SerializationInfo info, StreamingContext context);
    public DkmExceptionCode get_Code();
}
public enum Microsoft.VisualStudio.Debugger.DkmExceptionCode : Enum {
    public int value__;
    public static DkmExceptionCode E_FAIL;
    public static DkmExceptionCode E_ATTACH_DEBUGGER_ALREADY_ATTACHED;
    public static DkmExceptionCode E_ATTACH_DEBUGGEE_PROCESS_SECURITY_VIOLATION;
    public static DkmExceptionCode E_ATTACH_CANNOT_ATTACH_TO_DESKTOP;
    public static DkmExceptionCode E_LAUNCH_NO_INTEROP;
    public static DkmExceptionCode E_LAUNCH_DEBUGGING_NOT_POSSIBLE;
    public static DkmExceptionCode E_LAUNCH_KERNEL_DEBUGGER_ENABLED;
    public static DkmExceptionCode E_LAUNCH_KERNEL_DEBUGGER_PRESENT;
    public static DkmExceptionCode E_INTEROP_NOT_SUPPORTED;
    public static DkmExceptionCode E_TOO_MANY_PROCESSES;
    public static DkmExceptionCode E_MSHTML_SCRIPT_DEBUGGING_DISABLED;
    public static DkmExceptionCode E_SCRIPT_PDM_NOT_REGISTERED;
    public static DkmExceptionCode E_DE_CLR_DBG_SERVICES_NOT_INSTALLED;
    public static DkmExceptionCode E_ATTACH_NO_CLR_PROGRAMS;
    public static DkmExceptionCode E_REMOTE_SERVER_CLOSED;
    public static DkmExceptionCode E_CLR_NOT_SUPPORTED;
    public static DkmExceptionCode E_64BIT_CLR_NOT_SUPPORTED;
    public static DkmExceptionCode E_CANNOT_MIX_MINDUMP_DEBUGGING;
    public static DkmExceptionCode E_DEBUG_ENGINE_NOT_REGISTERED;
    public static DkmExceptionCode E_LAUNCH_SXS_ERROR;
    public static DkmExceptionCode E_FAILED_TO_INITIALIZE_SCRIPT_PROXY;
    public static DkmExceptionCode E_REMOTE_SERVER_DOES_NOT_EXIST;
    public static DkmExceptionCode E_REMOTE_SERVER_ACCESS_DENIED;
    public static DkmExceptionCode E_REMOTE_SERVER_MACHINE_DOES_NOT_EXIST;
    public static DkmExceptionCode E_DEBUGGER_NOT_REGISTERED_PROPERLY;
    public static DkmExceptionCode E_FORCE_GUEST_MODE_ENABLED;
    public static DkmExceptionCode E_GET_IWAM_USER_FAILURE;
    public static DkmExceptionCode E_REMOTE_SERVER_INVALID_NAME;
    public static DkmExceptionCode E_AUTO_LAUNCH_EXEC_FAILURE;
    public static DkmExceptionCode E_REMOTE_COMPONENTS_NOT_REGISTERED;
    public static DkmExceptionCode E_DCOM_ACCESS_DENIED;
    public static DkmExceptionCode E_SHARE_LEVEL_ACCESS_CONTROL_ENABLED;
    public static DkmExceptionCode E_WORKGROUP_REMOTE_LOGON_FAILURE;
    public static DkmExceptionCode E_WINAUTH_CONNECT_NOT_SUPPORTED;
    public static DkmExceptionCode E_EVALUATE_BUSY_WITH_EVALUATION;
    public static DkmExceptionCode E_EVALUATE_TIMEOUT;
    public static DkmExceptionCode E_INTEROP_CLR_TOO_OLD;
    public static DkmExceptionCode E_CLR_INCOMPATIBLE_PROTOCOL;
    public static DkmExceptionCode E_CLR_CANNOT_DEBUG_FIBER_PROCESS;
    public static DkmExceptionCode E_PROCESS_OBJECT_ACCESS_DENIED;
    public static DkmExceptionCode E_PROCESS_TOKEN_ACCESS_DENIED;
    public static DkmExceptionCode E_PROCESS_TOKEN_ACCESS_DENIED_NO_TS;
    public static DkmExceptionCode E_OPERATION_REQUIRES_ELEVATION;
    public static DkmExceptionCode E_ATTACH_REQUIRES_ELEVATION;
    public static DkmExceptionCode E_MEMORY_NOTSUPPORTED;
    public static DkmExceptionCode E_DISASM_NOTSUPPORTED;
    public static DkmExceptionCode E_DISASM_BADADDRESS;
    public static DkmExceptionCode E_DISASM_NOTAVAILABLE;
    public static DkmExceptionCode E_BP_DELETED;
    public static DkmExceptionCode E_PROCESS_DESTROYED;
    public static DkmExceptionCode E_PROCESS_DEBUGGER_IS_DEBUGGEE;
    public static DkmExceptionCode E_TERMINATE_FORBIDDEN;
    public static DkmExceptionCode E_THREAD_DESTROYED;
    public static DkmExceptionCode E_PORTSUPPLIER_NO_PORT;
    public static DkmExceptionCode E_PORT_NO_REQUEST;
    public static DkmExceptionCode E_COMPARE_CANNOT_COMPARE;
    public static DkmExceptionCode E_JIT_INVALID_PID;
    public static DkmExceptionCode E_JIT_VSJITDEBUGGER_NOT_REGISTERED;
    public static DkmExceptionCode E_JIT_APPID_NOT_REGISTERED;
    public static DkmExceptionCode E_JIT_RUNTIME_VERSION_UNSUPPORTED;
    public static DkmExceptionCode E_SESSION_TERMINATE_DETACH_FAILED;
    public static DkmExceptionCode E_SESSION_TERMINATE_FAILED;
    public static DkmExceptionCode E_DETACH_NO_PROXY;
    public static DkmExceptionCode E_DETACH_TS_UNSUPPORTED;
    public static DkmExceptionCode E_DETACH_IMPERSONATE_FAILURE;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_ON_NONLEAF_FRAME;
    public static DkmExceptionCode E_TARGET_FILE_MISMATCH;
    public static DkmExceptionCode E_IMAGE_NOT_LOADED;
    public static DkmExceptionCode E_FIBER_NOT_SUPPORTED;
    public static DkmExceptionCode E_CANNOT_SETIP_TO_DIFFERENT_FUNCTION;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_ON_EXCEPTION;
    public static DkmExceptionCode E_ENC_SETIP_REQUIRES_CONTINUE;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_INTO_FINALLY;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_OUT_OF_FINALLY;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_INTO_CATCH;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_GENERAL;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_INTO_OR_OUT_OF_FILTER;
    public static DkmExceptionCode E_ASYNCBREAK_NO_PROGRAMS;
    public static DkmExceptionCode E_ASYNCBREAK_DEBUGGEE_NOT_INITIALIZED;
    public static DkmExceptionCode E_ASYNCBREAK_UNABLE_TO_PROCESS;
    public static DkmExceptionCode E_WEBDBG_DEBUG_VERB_BLOCKED;
    public static DkmExceptionCode E_ASP_USER_ACCESS_DENIED;
    public static DkmExceptionCode E_AUTO_ATTACH_NOT_REGISTERED;
    public static DkmExceptionCode E_AUTO_ATTACH_DCOM_ERROR;
    public static DkmExceptionCode E_AUTO_ATTACH_COCREATE_FAILURE;
    public static DkmExceptionCode E_AUTO_ATTACH_CLASSNOTREG;
    public static DkmExceptionCode E_CANNOT_CONTINUE_DURING_PENDING_EXPR_EVAL;
    public static DkmExceptionCode E_REMOTE_REDIRECTION_UNSUPPORTED;
    public static DkmExceptionCode E_INVALID_WORKING_DIRECTORY;
    public static DkmExceptionCode E_LAUNCH_FAILED_WITH_ELEVATION;
    public static DkmExceptionCode E_LAUNCH_ELEVATION_REQUIRED;
    public static DkmExceptionCode E_CANNOT_FIND_INTERNET_EXPLORER;
    public static DkmExceptionCode E_REMOTE_PROCESS_OBJECT_ACCESS_DENIED;
    public static DkmExceptionCode E_REMOTE_ATTACH_REQUIRES_ELEVATION;
    public static DkmExceptionCode E_REMOTE_LAUNCH_ELEVATION_REQUIRED;
    public static DkmExceptionCode E_EXCEPTION_CANNOT_BE_INTERCEPTED;
    public static DkmExceptionCode E_EXCEPTION_CANNOT_UNWIND_ABOVE_CALLBACK;
    public static DkmExceptionCode E_INTERCEPT_CURRENT_EXCEPTION_NOT_SUPPORTED;
    public static DkmExceptionCode E_INTERCEPT_CANNOT_UNWIND_LASTCHANCE_INTEROP;
    public static DkmExceptionCode E_JMC_CANNOT_SET_STATUS;
    public static DkmExceptionCode E_DESTROYED;
    public static DkmExceptionCode E_REMOTE_NOMSVCMON;
    public static DkmExceptionCode E_REMOTE_BADIPADDRESS;
    public static DkmExceptionCode E_REMOTE_MACHINEDOWN;
    public static DkmExceptionCode E_REMOTE_MACHINEUNSPECIFIED;
    public static DkmExceptionCode E_CRASHDUMP_ACTIVE;
    public static DkmExceptionCode E_ALL_THREADS_SUSPENDED;
    public static DkmExceptionCode E_LOAD_DLL_TL;
    public static DkmExceptionCode E_LOAD_DLL_SH;
    public static DkmExceptionCode E_LOAD_DLL_EM;
    public static DkmExceptionCode E_LOAD_DLL_EE;
    public static DkmExceptionCode E_LOAD_DLL_DM;
    public static DkmExceptionCode E_LOAD_DLL_MD;
    public static DkmExceptionCode E_IOREDIR_BADFILE;
    public static DkmExceptionCode E_IOREDIR_BADSYNTAX;
    public static DkmExceptionCode E_REMOTE_BADVERSION;
    public static DkmExceptionCode E_CRASHDUMP_UNSUPPORTED;
    public static DkmExceptionCode E_REMOTE_BAD_CLR_VERSION;
    public static DkmExceptionCode E_UNSUPPORTED_BINARY;
    public static DkmExceptionCode E_DEBUGGEE_BLOCKED;
    public static DkmExceptionCode E_REMOTE_NOUSERMSVCMON;
    public static DkmExceptionCode E_STEP_WIN9xSYSCODE;
    public static DkmExceptionCode E_INTEROP_ORPC_INIT;
    public static DkmExceptionCode E_CANNOT_DEBUG_WIN32;
    public static DkmExceptionCode E_CANNOT_DEBUG_WIN64;
    public static DkmExceptionCode E_MINIDUMP_READ_WIN9X;
    public static DkmExceptionCode E_CROSS_TSSESSION_ATTACH;
    public static DkmExceptionCode E_STEP_BP_SET_FAILED;
    public static DkmExceptionCode E_LOAD_DLL_TL_INCORRECT_VERSION;
    public static DkmExceptionCode E_LOAD_DLL_DM_INCORRECT_VERSION;
    public static DkmExceptionCode E_REMOTE_NOMSVCMON_PIPE;
    public static DkmExceptionCode E_LOAD_DLL_DIA;
    public static DkmExceptionCode E_DUMP_CORRUPTED;
    public static DkmExceptionCode E_INTEROP_X64;
    public static DkmExceptionCode E_CRASHDUMP_DEPRECATED;
    public static DkmExceptionCode E_LAUNCH_MANAGEDONLYMINIDUMP_UNSUPPORTED;
    public static DkmExceptionCode E_LAUNCH_64BIT_MANAGEDMINIDUMP_UNSUPPORTED;
    public static DkmExceptionCode E_DEVICEBITS_NOT_SIGNED;
    public static DkmExceptionCode E_ATTACH_NOT_ENABLED;
    public static DkmExceptionCode E_REMOTE_DISCONNECT;
    public static DkmExceptionCode E_BREAK_ALL_FAILED;
    public static DkmExceptionCode E_DEVICE_ACCESS_DENIED_SELECT_YES;
    public static DkmExceptionCode E_DEVICE_ACCESS_DENIED;
    public static DkmExceptionCode E_DEVICE_CONNRESET;
    public static DkmExceptionCode E_BAD_NETCF_VERSION;
    public static DkmExceptionCode E_REFERENCE_NOT_VALID;
    public static DkmExceptionCode E_PROPERTY_NOT_VALID;
    public static DkmExceptionCode E_SETVALUE_VALUE_CANNOT_BE_SET;
    public static DkmExceptionCode E_SETVALUE_VALUE_IS_READONLY;
    public static DkmExceptionCode E_SETVALUEASREFERENCE_NOTSUPPORTED;
    public static DkmExceptionCode E_CANNOT_GET_UNMANAGED_MEMORY_CONTEXT;
    public static DkmExceptionCode E_GETREFERENCE_NO_REFERENCE;
    public static DkmExceptionCode E_CODE_CONTEXT_OUT_OF_SCOPE;
    public static DkmExceptionCode E_INVALID_SESSIONID;
    public static DkmExceptionCode E_SERVER_UNAVAILABLE_ON_CALLBACK;
    public static DkmExceptionCode E_ACCESS_DENIED_ON_CALLBACK;
    public static DkmExceptionCode E_UNKNOWN_AUTHN_SERVICE_ON_CALLBACK;
    public static DkmExceptionCode E_NO_SESSION_AVAILABLE;
    public static DkmExceptionCode E_CLIENT_NOT_LOGGED_ON;
    public static DkmExceptionCode E_OTHER_USERS_SESSION;
    public static DkmExceptionCode E_USER_LEVEL_ACCESS_CONTROL_REQUIRED;
    public static DkmExceptionCode E_SCRIPT_CLR_EE_DISABLED;
    public static DkmExceptionCode E_HTTP_SERVERERROR;
    public static DkmExceptionCode E_HTTP_UNAUTHORIZED;
    public static DkmExceptionCode E_HTTP_SENDREQUEST_FAILED;
    public static DkmExceptionCode E_HTTP_FORBIDDEN;
    public static DkmExceptionCode E_HTTP_NOT_SUPPORTED;
    public static DkmExceptionCode E_HTTP_NO_CONTENT;
    public static DkmExceptionCode E_HTTP_NOT_FOUND;
    public static DkmExceptionCode E_HTTP_BAD_REQUEST;
    public static DkmExceptionCode E_HTTP_ACCESS_DENIED;
    public static DkmExceptionCode E_HTTP_CONNECT_FAILED;
    public static DkmExceptionCode E_HTTP_EXCEPTION;
    public static DkmExceptionCode E_HTTP_TIMEOUT;
    public static DkmExceptionCode E_HTTP_SITE_NOT_FOUND;
    public static DkmExceptionCode E_HTTP_APP_NOT_FOUND;
    public static DkmExceptionCode E_HTTP_MANAGEMENT_API_MISSING;
    public static DkmExceptionCode E_HTTP_NO_PROCESS;
    public static DkmExceptionCode E_64BIT_COMPONENTS_NOT_INSTALLED;
    public static DkmExceptionCode E_UNMARSHAL_SERVER_FAILED;
    public static DkmExceptionCode E_UNMARSHAL_CALLBACK_FAILED;
    public static DkmExceptionCode E_RPC_REQUIRES_AUTHENTICATION;
    public static DkmExceptionCode E_LOGON_FAILURE_ON_CALLBACK;
    public static DkmExceptionCode E_REMOTE_SERVER_UNAVAILABLE;
    public static DkmExceptionCode E_REMOTE_CONNECT_USER_CANCELED;
    public static DkmExceptionCode E_REMOTE_CREDENTIALS_PROHIBITED;
    public static DkmExceptionCode E_FIREWALL_NO_EXCEPTIONS;
    public static DkmExceptionCode E_FIREWALL_CANNOT_OPEN_APPLICATION;
    public static DkmExceptionCode E_FIREWALL_CANNOT_OPEN_PORT;
    public static DkmExceptionCode E_FIREWALL_CANNOT_OPEN_FILE_SHARING;
    public static DkmExceptionCode E_REMOTE_DEBUGGING_UNSUPPORTED;
    public static DkmExceptionCode E_REMOTE_BAD_MSDBG2;
    public static DkmExceptionCode E_ATTACH_USER_CANCELED;
    public static DkmExceptionCode E_REMOTE_PACKET_TOO_BIG;
    public static DkmExceptionCode E_UNSUPPORTED_FUTURE_CLR_VERSION;
    public static DkmExceptionCode E_UNSUPPORTED_CLR_V1;
    public static DkmExceptionCode E_INTEROP_IA64;
    public static DkmExceptionCode E_HTTP_GENERAL;
    public static DkmExceptionCode E_REMOTE_NO_CONNECTION;
    public static DkmExceptionCode E_REMOTE_INVALID_PROXY_SERVER_NAME;
    public static DkmExceptionCode E_REMOTE_WEAK_CONNECTION;
    public static DkmExceptionCode E_REMOTE_PROGRAM_PROVIDERS_UNSUPPORTED;
    public static DkmExceptionCode E_REMOTE_REJECTED_NO_AUTH_REQUEST;
    public static DkmExceptionCode E_REMOTE_REJECTED_WIN_AUTH_REQUEST;
    public static DkmExceptionCode E_PSEUDOREMOTE_NO_LOCALHOST_TCPIP_CONNECTION;
    public static DkmExceptionCode E_REMOTE_WWS_NOT_INSTALLED;
    public static DkmExceptionCode E_REMOTE_WWS_INSTALL_REQUIRES_ADMIN;
    public static DkmExceptionCode E_FUNCTION_NOT_JITTED;
    public static DkmExceptionCode E_NO_CODE_CONTEXT;
    public static DkmExceptionCode E_BAD_CLR_DIASYMREADER;
    public static DkmExceptionCode E_CLR_SHIM_ERROR;
    public static DkmExceptionCode E_AUTOATTACH_WEBSERVER_NOT_FOUND;
    public static DkmExceptionCode E_DBGEXTENSION_NOT_FOUND;
    public static DkmExceptionCode E_DBGEXTENSION_FUNCTION_NOT_FOUND;
    public static DkmExceptionCode E_DBGEXTENSION_FAULTED;
    public static DkmExceptionCode E_DBGEXTENSION_RESULT_INVALID;
    public static DkmExceptionCode E_PROGRAM_IN_RUNMODE;
    public static DkmExceptionCode E_CAUSALITY_NO_SERVER_RESPONSE;
    public static DkmExceptionCode E_CAUSALITY_REMOTE_NOT_REGISTERED;
    public static DkmExceptionCode E_CAUSALITY_BREAKPOINT_NOT_HIT;
    public static DkmExceptionCode E_CAUSALITY_BREAKPOINT_BIND_ERROR;
    public static DkmExceptionCode E_CAUSALITY_PROJECT_DISABLED;
    public static DkmExceptionCode E_NO_ATTACH_WHILE_DDD;
    public static DkmExceptionCode E_SQLLE_ACCESSDENIED;
    public static DkmExceptionCode E_SQL_SP_ENABLE_PERMISSION_DENIED;
    public static DkmExceptionCode E_SQL_DEBUGGING_NOT_ENABLED_ON_SERVER;
    public static DkmExceptionCode E_SQL_CANT_FIND_SSDEBUGPS_ON_CLIENT;
    public static DkmExceptionCode E_SQL_EXECUTED_BUT_NOT_DEBUGGED;
    public static DkmExceptionCode E_SQL_VDT_INIT_RETURNED_SQL_ERROR;
    public static DkmExceptionCode E_ATTACH_FAILED_ABORT_SILENTLY;
    public static DkmExceptionCode E_SQL_REGISTER_FAILED;
    public static DkmExceptionCode E_DE_NOT_SUPPORTED_PRE_8_0;
    public static DkmExceptionCode E_PROGRAM_DESTROY_PENDING;
    public static DkmExceptionCode E_MANAGED_FEATURE_NOTSUPPORTED;
    public static DkmExceptionCode E_OS_PERSONAL;
    public static DkmExceptionCode E_SOURCE_SERVER_DISABLE_PARTIAL_TRUST;
    public static DkmExceptionCode E_REMOTE_UNSUPPORTED_OPERATION_ON_PLATFORM;
    public static DkmExceptionCode E_LOAD_VSDEBUGENG_FAILED;
    public static DkmExceptionCode E_LOAD_VSDEBUGENG_IMPORTS_FAILED;
    public static DkmExceptionCode E_LOAD_VSDEBUGENG_CONFIG_ERROR;
    public static DkmExceptionCode E_CORRUPT_MINIDUMP;
    public static DkmExceptionCode E_LOAD_SCRIPT_AGENT_LOCAL_FAILURE;
    public static DkmExceptionCode E_LOAD_SCRIPT_AGENT_REMOTE_FAILURE;
    public static DkmExceptionCode E_APPX_REGISTRATION_NOT_FOUND;
    public static DkmExceptionCode E_VSDEBUGLAUNCHNOTIFY_NOT_INSTALLED;
    public static DkmExceptionCode E_WIN8_TOO_OLD;
    public static DkmExceptionCode E_THREAD_NOT_FOUND;
    public static DkmExceptionCode E_CANNOT_AUTOATTACH_TO_SQLSERVER;
    public static DkmExceptionCode E_OBJECT_OUT_OF_SYNC;
    public static DkmExceptionCode E_PROCESS_ALREADY_CONTINUED;
    public static DkmExceptionCode E_CANNOT_DEBUG_MULTI_GPU_PROCS;
    public static DkmExceptionCode E_GPU_ADAPTOR_NOT_FOUND;
    public static DkmExceptionCode E_WINDOWS_GRAPHICAL_SHELL_UNINSTALLED_ERROR;
    public static DkmExceptionCode E_GPU_DEBUG_NOT_SUPPORTED_PRE_DX_11_1;
    public static DkmExceptionCode E_GPU_DEBUG_CONFIG_ISSUE;
    public static DkmExceptionCode E_GPU_LOCAL_DEBUGGING_ERROR;
    public static DkmExceptionCode E_GPU_LOAD_VSD3D_FAILURE;
    public static DkmExceptionCode E_GPU_TDR_ENABLED_FAILURE;
    public static DkmExceptionCode E_CANNOT_REMOTE_DEBUG_MIXED;
    public static DkmExceptionCode E_BG_TASK_ACTIVATION_FAILED;
    public static DkmExceptionCode E_REMOTE_VERSION;
    public static DkmExceptionCode E_SYMBOL_LOCATOR_INSTALL_ERROR;
    public static DkmExceptionCode E_INVALID_PE_FORMAT;
    public static DkmExceptionCode E_DUMP_ALREADY_LAUNCHED;
    public static DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_IN_OPTIMIZED_CODE;
    public static DkmExceptionCode E_ARMDUMP_NOT_SUPPORTED_PRE_WIN8;
    public static DkmExceptionCode E_CANNOT_DETACH_WHILE_TERMINATE_IN_PROGRESS;
    public static DkmExceptionCode E_WLDP_NOT_FOUND;
    public static DkmExceptionCode E_DEBUGGING_BLOCKED_ON_TARGET;
    public static DkmExceptionCode E_DOTNETNATIVE_SDK_NOT_INSTALLED;
    public static DkmExceptionCode COR_E_OPERATIONCANCELED;
    public static DkmExceptionCode E_XAPI_COMPONENT_LOAD_FAILURE;
    public static DkmExceptionCode E_XAPI_NOT_INITIALIZED;
    public static DkmExceptionCode E_XAPI_ALREADY_INITIALIZED;
    public static DkmExceptionCode E_XAPI_THREAD_ABORTED;
    public static DkmExceptionCode E_XAPI_BAD_QUERY_INTERFACE;
    public static DkmExceptionCode E_XAPI_UNAVAILABLE_OBJECT;
    public static DkmExceptionCode E_XAPI_BAD_CONFIG;
    public static DkmExceptionCode E_XAPI_MANAGED_DISPATCHER_CONNECT_FAILURE;
    public static DkmExceptionCode E_XAPI_DURING_CREATE_EVENT_REQUIRED;
    public static DkmExceptionCode E_XAPI_CREATOR_REQUIRED;
    public static DkmExceptionCode E_XAPI_WORK_LIST_COMPLETE;
    public static DkmExceptionCode E_XAPI_WORKLIST_ALREADY_STARTED;
    public static DkmExceptionCode E_XAPI_COMPLETION_ROUTINE_RELEASED;
    public static DkmExceptionCode E_XAPI_WRONG_THREAD;
    public static DkmExceptionCode E_XAPI_COMPONENTID_NOT_FOUND;
    public static DkmExceptionCode E_XAPI_WRONG_CONNECTION_OBJECT;
    public static DkmExceptionCode E_XAPI_METHOD_NOT_REMOTED;
    public static DkmExceptionCode E_XAPI_REMOTE_DISCONNECTED;
    public static DkmExceptionCode E_XAPI_REMOTE_CLOSED;
    public static DkmExceptionCode E_XAPI_INCOMPATIBLE_PROTOCOL;
    public static DkmExceptionCode E_XAPI_MAX_PACKET_EXCEEDED;
    public static DkmExceptionCode E_XAPI_OBJECT_ALREADY_EXISTS;
    public static DkmExceptionCode E_XAPI_OBJECT_NOT_FOUND;
    public static DkmExceptionCode E_XAPI_DATA_ITEM_ALREADY_EXISTS;
    public static DkmExceptionCode E_XAPI_DATA_ITEM_NOT_FOUND;
    public static DkmExceptionCode E_XAPI_NULL_OUT_PARAM;
    public static DkmExceptionCode E_XAPI_MANAGED_DISPATCHER_SIGNATURE_ERROR;
    public static DkmExceptionCode E_XAPI_CLIENT_ONLY_METHOD;
    public static DkmExceptionCode E_XAPI_SERVER_ONLY_METHOD;
    public static DkmExceptionCode E_XAPI_COMPONENT_DLL_NOT_FOUND;
    public static DkmExceptionCode E_XAPI_REMOTE_NEW_VER_REQUIRED;
    public static DkmExceptionCode E_SYMBOLS_NOT_LOADED;
    public static DkmExceptionCode E_SYMBOLS_STRIPPED;
    public static DkmExceptionCode E_BP_INVALID_ADDRESS;
    public static DkmExceptionCode E_BP_IN_OPTIMIZED_CODE;
    public static DkmExceptionCode E_BP_CLR_ERROR;
    public static DkmExceptionCode E_BP_CLR_EXTERN_FUNCTION;
    public static DkmExceptionCode E_BP_MODULE_UNLOADED;
    public static DkmExceptionCode E_STOPPING_EVENT_REJECTED;
    public static DkmExceptionCode E_TARGET_ALREADY_STOPPED;
    public static DkmExceptionCode E_TARGET_NOT_STOPPED;
    public static DkmExceptionCode E_WRONG_THREAD;
    public static DkmExceptionCode E_WRONG_TIME;
    public static DkmExceptionCode E_WRONG_COMPONENT;
    public static DkmExceptionCode E_WRONG_METHOD_VERSION;
    public static DkmExceptionCode E_INVALID_MEMORY_ADDRESS;
    public static DkmExceptionCode E_INSTRUCTION_NO_SOURCE;
    public static DkmExceptionCode E_VSDEBUGENG_RESOURCE_LOAD_FAILURE;
    public static DkmExceptionCode E_UNMARSHALLABLE_VARIANT;
    public static DkmExceptionCode E_VSDEBUGENG_DEPLOYMENT_ERROR;
    public static DkmExceptionCode E_WEBSERVICES_LOAD_FAILURE;
    public static DkmExceptionCode E_GLOBAL_INTERFACE_POINTER_FAILURE;
    public static DkmExceptionCode E_REMOTE_AUTHENTICATION_ERROR;
    public static DkmExceptionCode E_CANNOT_FIND_REMOTE_RESOURCES;
    public static DkmExceptionCode E_INVALID_DATABP_SIZE;
    public static DkmExceptionCode E_INVALID_DATABP_ALLREGSUSED;
    public static DkmExceptionCode E_DUMPS_DO_NOT_SUPPORT_BREAKPOINTS;
    public static DkmExceptionCode E_DUMP_ARM_ARCHITECTURE;
    public static DkmExceptionCode E_DUMP_UNKNOWN_ARCHITECTURE;
    public static DkmExceptionCode E_NO_CHECKSUM;
    public static DkmExceptionCode E_CONTEXT_CONTROL_REQUIRED;
    public static DkmExceptionCode E_INVALID_REGISTER_SIZE;
    public static DkmExceptionCode E_REGISTER_NOT_FOUND;
    public static DkmExceptionCode E_REGISTER_READONLY;
    public static DkmExceptionCode E_REG_NOT_TOP_STACK;
    public static DkmExceptionCode E_STRING_TOO_LONG;
    public static DkmExceptionCode E_INVALID_MEMORY_PROTECT;
    public static DkmExceptionCode E_UNKNOWN_CPU_INSTRUCTION;
    public static DkmExceptionCode E_INVALID_RUNTIME;
    public static DkmExceptionCode E_VARIABLE_OPTIMIZED_AWAY;
    public static DkmExceptionCode E_TEXT_SPAN_NOT_LOADED;
    public static DkmExceptionCode E_SCRIPT_SPAN_MAPPING_FAILED;
    public static DkmExceptionCode E_DEPLOY_FILE_TOO_LARGE;
    public static DkmExceptionCode E_DEPLOY_FILE_PATH_INVALID;
    public static DkmExceptionCode E_SCRIPT_DEBUGGING_DISABLED_WWAHOST_ATTACH_FAILED;
    public static DkmExceptionCode E_DEPLOY_FILE_NOT_EXIST;
    public static DkmExceptionCode E_EXECUTE_COMMAND_IN_PROGRESS;
    public static DkmExceptionCode E_INVALID_FULL_PATH;
    public static DkmExceptionCode E_CANNOT_DEBUG_APP_PACKAGE_IN_RDBSERVICE;
    public static DkmExceptionCode E_CANNOT_LAUNCH_IN_RDBSERVICE;
    public static DkmExceptionCode E_CAUSALITY_BRIDGE_ALREADY_INITIALIZED;
    public static DkmExceptionCode E_DEPLOY_APPX_SHUTDOWN_WRONG_TIME;
    public static DkmExceptionCode E_WINDOWS_REG_ERROR;
    public static DkmExceptionCode E_APP_PACKAGE_NEVER_SUSPENDED;
    public static DkmExceptionCode E_SCRIPT_FILE_DIFFERENT_CONTENT;
    public static DkmExceptionCode E_NO_FRAME;
    public static DkmExceptionCode E_NOT_SUPPORTED_INTEROP;
    public static DkmExceptionCode E_GPU_BARRIER_BREAKPOINT_NOT_SUPPORTED;
    public static DkmExceptionCode E_DATABPS_NOTSUPPORTED;
    public static DkmExceptionCode E_DEBUG_PROCESS_REQUEST_FAILED;
    public static DkmExceptionCode E_INVALID_CLR_INSTRUCTION_NATIVE_OFFSET;
    public static DkmExceptionCode E_MANAGED_HEAP_NOT_ENUMERABLE;
    public static DkmExceptionCode E_OPERATION_UNAVAILABLE_SCRIPT_INTEROP;
    public static DkmExceptionCode E_OPERATION_UNAVAILABLE_CLR_NC;
    public static DkmExceptionCode E_BAD_SYMBOL_DATA;
    public static DkmExceptionCode E_ENABLE_SCRIPT_DEBUGGING_FAILED;
    public static DkmExceptionCode E_SCRIPT_ASYNC_FRAME_EE_UNAVAILABLE;
    public static DkmExceptionCode E_DUMP_NO_THREADS;
    public static DkmExceptionCode E_LOAD_COMPLETE_ALREADY_SENT;
    public static DkmExceptionCode E_LOAD_COMPLETE_DEFERRAL_NOT_FOUND;
    public static DkmExceptionCode E_MARSHALLING_SIZE_TOO_LARGE;
    public static DkmExceptionCode E_CANNOT_EMULATE_RESULTS_VIEW;
    public static DkmExceptionCode E_MANAGED_HEAP_ENUMERATION_TARGET_NOT_STOPPED;
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags : Enum {
    public int value__;
    public static DkmClrCompilationResultFlags BoolResult;
    public static DkmClrCompilationResultFlags None;
    public static DkmClrCompilationResultFlags PotentialSideEffect;
    public static DkmClrCompilationResultFlags ReadOnlyResult;
}
[DebuggerDisplayAttribute("{DebuggerDisplay, nq}")]
public class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo : object {
    public Guid PayloadTypeId;
    public ReadOnlyCollection`1<byte> Payload;
    private string DebuggerDisplay { get; }
    private DkmClrCustomTypeInfo(Guid payloadTypeId, ReadOnlyCollection`1<byte> payload);
    public static DkmClrCustomTypeInfo Create(Guid payloadTypeId, ReadOnlyCollection`1<byte> payload);
    private string get_DebuggerDisplay();
}
public class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery : object {
}
public class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress : object {
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags : Enum {
    public int value__;
    public static DkmEvaluationFlags None;
    public static DkmEvaluationFlags NoSideEffects;
    public static DkmEvaluationFlags ShowValueRaw;
    public static DkmEvaluationFlags HideNonPublicMembers;
    public static DkmEvaluationFlags NoToString;
    public static DkmEvaluationFlags NoFormatting;
    public static DkmEvaluationFlags NoRawView;
    public static DkmEvaluationFlags NoQuotes;
    public static DkmEvaluationFlags DynamicView;
    public static DkmEvaluationFlags ResultsOnly;
    public static DkmEvaluationFlags NoExpansion;
    public static DkmEvaluationFlags FilterToFavorites;
    public static DkmEvaluationFlags UseSimpleDisplayString;
    public static DkmEvaluationFlags IncreaseMaxStringSize;
    public static DkmEvaluationFlags TreatAsExpression;
    public static DkmEvaluationFlags TreatFunctionAsAddress;
}
public enum Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType : Enum {
    public int value__;
    public static DkmEvaluationResultAccessType None;
    public static DkmEvaluationResultAccessType Public;
    public static DkmEvaluationResultAccessType Private;
    public static DkmEvaluationResultAccessType Protected;
    public static DkmEvaluationResultAccessType Internal;
}
public enum Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory : Enum {
    public int value__;
    public static DkmEvaluationResultCategory Other;
    public static DkmEvaluationResultCategory Data;
    public static DkmEvaluationResultCategory Method;
    public static DkmEvaluationResultCategory Event;
    public static DkmEvaluationResultCategory Property;
    public static DkmEvaluationResultCategory Class;
    public static DkmEvaluationResultCategory Interface;
    public static DkmEvaluationResultCategory BaseClass;
    public static DkmEvaluationResultCategory InnerClass;
    public static DkmEvaluationResultCategory MostDerivedClass;
}
public enum Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType : Enum {
    public int value__;
    public static DkmEvaluationResultStorageType None;
    public static DkmEvaluationResultStorageType Static;
}
public enum Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags : Enum {
    public int value__;
    public static DkmEvaluationResultTypeModifierFlags Constant;
    public static DkmEvaluationResultTypeModifierFlags None;
    public static DkmEvaluationResultTypeModifierFlags Synchronized;
    public static DkmEvaluationResultTypeModifierFlags Virtual;
    public static DkmEvaluationResultTypeModifierFlags Volatile;
}
internal static class Roslyn.Utilities.DateTimeUtilities : object {
    private static long TicksMask;
    internal static DateTime ToDateTime(double raw);
}
[ExtensionAttribute]
internal static class System.Linq.LinqExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool All(string s, Func`2<char, bool> predicate);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
