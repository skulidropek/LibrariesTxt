internal static class FxResources.System.Composition.Runtime.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public abstract class System.Composition.CompositionContext : object {
    private static string ImportManyImportMetadataConstraintName;
    public abstract virtual bool TryGetExport(CompositionContract contract, Object& export);
    public TExport GetExport();
    public TExport GetExport(string contractName);
    public bool TryGetExport(Type exportType, Object& export);
    public bool TryGetExport(Type exportType, string contractName, Object& export);
    public bool TryGetExport(TExport& export);
    public bool TryGetExport(string contractName, TExport& export);
    public object GetExport(Type exportType);
    public object GetExport(Type exportType, string contractName);
    public object GetExport(CompositionContract contract);
    public IEnumerable`1<object> GetExports(Type exportType);
    public IEnumerable`1<object> GetExports(Type exportType, string contractName);
    public IEnumerable`1<TExport> GetExports();
    public IEnumerable`1<TExport> GetExports(string contractName);
}
public class System.Composition.Export`1 : object {
    private Action _disposeAction;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    public Export`1(T value, Action disposeAction);
    [CompilerGeneratedAttribute]
public T get_Value();
    public sealed virtual void Dispose();
}
public class System.Composition.ExportFactory`1 : object {
    private Func`1<Tuple`2<T, Action>> _exportLifetimeContextCreator;
    public ExportFactory`1(Func`1<Tuple`2<T, Action>> exportCreator);
    public Export`1<T> CreateExport();
}
public class System.Composition.ExportFactory`2 : ExportFactory`1<T> {
    [CompilerGeneratedAttribute]
private TMetadata <Metadata>k__BackingField;
    public TMetadata Metadata { get; }
    public ExportFactory`2(Func`1<Tuple`2<T, Action>> exportCreator, TMetadata metadata);
    [CompilerGeneratedAttribute]
public TMetadata get_Metadata();
}
public class System.Composition.Hosting.CompositionFailedException : Exception {
    public CompositionFailedException(string message);
    public CompositionFailedException(string message, Exception innerException);
}
public class System.Composition.Hosting.Core.CompositionContract : object {
    private Type _contractType;
    private string _contractName;
    private IDictionary`2<string, object> _metadataConstraints;
    public Type ContractType { get; }
    public string ContractName { get; }
    public IEnumerable`1<KeyValuePair`2<string, object>> MetadataConstraints { get; }
    public CompositionContract(Type contractType);
    public CompositionContract(Type contractType, string contractName);
    public CompositionContract(Type contractType, string contractName, IDictionary`2<string, object> metadataConstraints);
    public Type get_ContractType();
    public string get_ContractName();
    public IEnumerable`1<KeyValuePair`2<string, object>> get_MetadataConstraints();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public CompositionContract ChangeType(Type newContractType);
    public bool TryUnwrapMetadataConstraint(string constraintName, T& constraintValue, CompositionContract& remainingContract);
    internal static bool ConstraintEqual(IDictionary`2<string, object> first, IDictionary`2<string, object> second);
    private static int ConstraintHashCode(IDictionary`2<string, object> metadata);
}
internal static class System.Composition.Runtime.Util.Formatters : object {
    public static string Format(object value);
    public static string Format(Type type);
    private static string FormatClosedGeneric(Type closedGenericType);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    public LibraryImportAttribute(string libraryName);
    [CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string CompositionContext_NoExportFoundForContract { get; }
    internal static string CompositionFailedDefaultExceptionMessage { get; }
    internal static string Formatter_ListSeparatorWithSpace { get; }
    private static SR();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey);
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_CompositionContext_NoExportFoundForContract();
    internal static string get_CompositionFailedDefaultExceptionMessage();
    internal static string get_Formatter_ListSeparatorWithSpace();
}
