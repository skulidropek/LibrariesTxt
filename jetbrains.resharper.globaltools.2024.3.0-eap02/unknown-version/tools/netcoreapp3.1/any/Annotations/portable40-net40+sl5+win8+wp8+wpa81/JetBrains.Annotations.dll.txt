[AttributeUsageAttribute("4")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspAttributeRoutingAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <HttpVerb>k__BackingField;
    public string HttpVerb { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HttpVerb();
    [CompilerGeneratedAttribute]
public void set_HttpVerb(string value);
}
[AttributeUsageAttribute("4")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspChildControlTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <TagName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ControlType>k__BackingField;
    [NotNullAttribute]
public string TagName { get; }
    [NotNullAttribute]
public Type ControlType { get; }
    public AspChildControlTypeAttribute(string tagName, Type controlType);
    [CompilerGeneratedAttribute]
public string get_TagName();
    [CompilerGeneratedAttribute]
public Type get_ControlType();
}
[AttributeUsageAttribute("192")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspDataFieldAttribute : Attribute {
}
[AttributeUsageAttribute("192")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspDataFieldsAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspDefaultRouteValuesAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMethodPropertyAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMinimalApiDeclarationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <HttpVerb>k__BackingField;
    public string HttpVerb { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HttpVerb();
    [CompilerGeneratedAttribute]
public void set_HttpVerb(string value);
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMinimalApiGroupAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMinimalApiHandlerAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMinimalApiImplicitEndpointDeclarationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <HttpVerb>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RouteTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <BodyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryParameters>k__BackingField;
    public string HttpVerb { get; public set; }
    public string RouteTemplate { get; public set; }
    public Type BodyType { get; public set; }
    public string QueryParameters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HttpVerb();
    [CompilerGeneratedAttribute]
public void set_HttpVerb(string value);
    [CompilerGeneratedAttribute]
public string get_RouteTemplate();
    [CompilerGeneratedAttribute]
public void set_RouteTemplate(string value);
    [CompilerGeneratedAttribute]
public Type get_BodyType();
    [CompilerGeneratedAttribute]
public void set_BodyType(Type value);
    [CompilerGeneratedAttribute]
public string get_QueryParameters();
    [CompilerGeneratedAttribute]
public void set_QueryParameters(string value);
}
[AttributeUsageAttribute("2496")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcActionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <AnonymousProperty>k__BackingField;
    [CanBeNullAttribute]
public string AnonymousProperty { get; }
    public AspMvcActionAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
}
[AttributeUsageAttribute("2176")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcActionSelectorAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcAreaAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <AnonymousProperty>k__BackingField;
    [CanBeNullAttribute]
public string AnonymousProperty { get; }
    public AspMvcAreaAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcAreaMasterLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcAreaMasterLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcAreaPartialViewLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcAreaPartialViewLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcAreaViewComponentViewLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcAreaViewComponentViewLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcAreaViewLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcAreaViewLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("2496")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcControllerAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <AnonymousProperty>k__BackingField;
    [CanBeNullAttribute]
public string AnonymousProperty { get; }
    public AspMvcControllerAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcDisplayTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcEditorTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcMasterAttribute : Attribute {
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcMasterLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcMasterLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcModelTypeAttribute : Attribute {
}
[AttributeUsageAttribute("2496")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcPartialViewAttribute : Attribute {
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcPartialViewLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcPartialViewLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("68")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcSuppressViewErrorAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2496")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcViewAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcViewComponentAttribute : Attribute {
}
[AttributeUsageAttribute("2496")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcViewComponentViewAttribute : Attribute {
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcViewComponentViewLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcViewComponentViewLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("385")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspMvcViewLocationFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NotNullAttribute]
public string Format { get; }
    public AspMvcViewLocationFormatAttribute(string format);
    [CompilerGeneratedAttribute]
public string get_Format();
}
[AttributeUsageAttribute("4")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspRequiredAttributeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Attribute>k__BackingField;
    [NotNullAttribute]
public string Attribute { get; }
    public AspRequiredAttributeAttribute(string attribute);
    [CompilerGeneratedAttribute]
public string get_Attribute();
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspRouteConventionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PredefinedPattern>k__BackingField;
    [CanBeNullAttribute]
public string PredefinedPattern { get; }
    public AspRouteConventionAttribute(string predefinedPattern);
    [CompilerGeneratedAttribute]
public string get_PredefinedPattern();
}
[AttributeUsageAttribute("2176")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspRouteOrderAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspRouteValuesConstraintsAttribute : Attribute {
}
[AttributeUsageAttribute("2176")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspRouteVerbsAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AspTypePropertyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <CreateConstructorReferences>k__BackingField;
    public bool CreateConstructorReferences { get; }
    public AspTypePropertyAttribute(bool createConstructorReferences);
    [CompilerGeneratedAttribute]
public bool get_CreateConstructorReferences();
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AssertionConditionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private AssertionConditionType <ConditionType>k__BackingField;
    public AssertionConditionType ConditionType { get; }
    public AssertionConditionAttribute(AssertionConditionType conditionType);
    [CompilerGeneratedAttribute]
public AssertionConditionType get_ConditionType();
}
public enum JetBrains.Annotations.AssertionConditionType : Enum {
    public int value__;
    public static AssertionConditionType IS_TRUE;
    public static AssertionConditionType IS_FALSE;
    public static AssertionConditionType IS_NULL;
    public static AssertionConditionType IS_NOT_NULL;
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.AssertionMethodAttribute : Attribute {
}
[AttributeUsageAttribute("4")]
[BaseTypeRequiredAttribute("System.Attribute")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.BaseTypeRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BaseType>k__BackingField;
    [NotNullAttribute]
public Type BaseType { get; }
    public BaseTypeRequiredAttribute(Type baseType);
    [CompilerGeneratedAttribute]
public Type get_BaseType();
}
[AttributeUsageAttribute("24516")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.CanBeNullAttribute : Attribute {
}
[AttributeUsageAttribute("1036")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.CannotApplyEqualityOperatorAttribute : Attribute {
}
[AttributeUsageAttribute("2044")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.CodeTemplateAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <SearchTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReplaceTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReplaceMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FormatAfterReplace>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MatchSimilarConstructs>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShortenReferences>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuppressionKey>k__BackingField;
    public string SearchTemplate { get; }
    public string Message { get; public set; }
    public string ReplaceTemplate { get; public set; }
    public string ReplaceMessage { get; public set; }
    public bool FormatAfterReplace { get; public set; }
    public bool MatchSimilarConstructs { get; public set; }
    public bool ShortenReferences { get; public set; }
    public string SuppressionKey { get; public set; }
    public CodeTemplateAttribute(string searchTemplate);
    [CompilerGeneratedAttribute]
public string get_SearchTemplate();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_ReplaceTemplate();
    [CompilerGeneratedAttribute]
public void set_ReplaceTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_ReplaceMessage();
    [CompilerGeneratedAttribute]
public void set_ReplaceMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_FormatAfterReplace();
    [CompilerGeneratedAttribute]
public void set_FormatAfterReplace(bool value);
    [CompilerGeneratedAttribute]
public bool get_MatchSimilarConstructs();
    [CompilerGeneratedAttribute]
public void set_MatchSimilarConstructs(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShortenReferences();
    [CompilerGeneratedAttribute]
public void set_ShortenReferences(bool value);
    [CompilerGeneratedAttribute]
public string get_SuppressionKey();
    [CompilerGeneratedAttribute]
public void set_SuppressionKey(string value);
}
[AttributeUsageAttribute("8416")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.CollectionAccessAttribute : Attribute {
    [CompilerGeneratedAttribute]
private CollectionAccessType <CollectionAccessType>k__BackingField;
    public CollectionAccessType CollectionAccessType { get; }
    public CollectionAccessAttribute(CollectionAccessType collectionAccessType);
    [CompilerGeneratedAttribute]
public CollectionAccessType get_CollectionAccessType();
}
[FlagsAttribute]
public enum JetBrains.Annotations.CollectionAccessType : Enum {
    public int value__;
    public static CollectionAccessType None;
    public static CollectionAccessType Read;
    public static CollectionAccessType ModifyExistingContent;
    public static CollectionAccessType UpdatedContent;
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Contract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceFullStates>k__BackingField;
    [NotNullAttribute]
public string Contract { get; }
    public bool ForceFullStates { get; }
    public ContractAnnotationAttribute(string contract);
    public ContractAnnotationAttribute(string contract, bool forceFullStates);
    [CompilerGeneratedAttribute]
public string get_Contract();
    [CompilerGeneratedAttribute]
public bool get_ForceFullStates();
}
[AttributeUsageAttribute("26624")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.DefaultEqualityUsageAttribute : Attribute {
}
[AttributeUsageAttribute("2496")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.HandlesResourceDisposalAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.HtmlAttributeValueAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; }
    public HtmlAttributeValueAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.HtmlElementAttributesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CanBeNullAttribute]
public string Name { get; }
    public HtmlElementAttributesAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.IgnoreSpellingAndGrammarErrorsAttribute : Attribute {
}
[FlagsAttribute]
public enum JetBrains.Annotations.ImplicitUseKindFlags : Enum {
    public int value__;
    public static ImplicitUseKindFlags Default;
    public static ImplicitUseKindFlags Access;
    public static ImplicitUseKindFlags Assign;
    public static ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature;
    public static ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature;
}
[FlagsAttribute]
public enum JetBrains.Annotations.ImplicitUseTargetFlags : Enum {
    public int value__;
    public static ImplicitUseTargetFlags Default;
    public static ImplicitUseTargetFlags Itself;
    public static ImplicitUseTargetFlags Members;
    public static ImplicitUseTargetFlags WithInheritors;
    public static ImplicitUseTargetFlags WithMembers;
}
public enum JetBrains.Annotations.InjectedLanguage : Enum {
    public int value__;
    public static InjectedLanguage CSS;
    public static InjectedLanguage HTML;
    public static InjectedLanguage JAVASCRIPT;
    public static InjectedLanguage JSON;
    public static InjectedLanguage XML;
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.InstantHandleAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <RequireAwait>k__BackingField;
    public bool RequireAwait { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RequireAwait();
    [CompilerGeneratedAttribute]
public void set_RequireAwait(bool value);
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.InvokerParameterNameAttribute : Attribute {
}
[AttributeUsageAttribute("6592")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.ItemCanBeNullAttribute : Attribute {
}
[AttributeUsageAttribute("6592")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.ItemNotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.LanguageInjectionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private InjectedLanguage <InjectedLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InjectedLanguageName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Suffix>k__BackingField;
    public InjectedLanguage InjectedLanguage { get; }
    [CanBeNullAttribute]
public string InjectedLanguageName { get; }
    [CanBeNullAttribute]
public string Prefix { get; public set; }
    [CanBeNullAttribute]
public string Suffix { get; public set; }
    public LanguageInjectionAttribute(InjectedLanguage injectedLanguage);
    public LanguageInjectionAttribute(string injectedLanguage);
    [CompilerGeneratedAttribute]
public InjectedLanguage get_InjectedLanguage();
    [CompilerGeneratedAttribute]
public string get_InjectedLanguageName();
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Suffix();
    [CompilerGeneratedAttribute]
public void set_Suffix(string value);
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.LinqTunnelAttribute : Attribute {
}
[AttributeUsageAttribute("32767")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.LocalizationRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    public bool Required { get; }
    public LocalizationRequiredAttribute(bool required);
    [CompilerGeneratedAttribute]
public bool get_Required();
}
[AttributeUsageAttribute("2112")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.MacroAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Editable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CanBeNullAttribute]
public string Expression { get; public set; }
    public int Editable { get; public set; }
    [CanBeNullAttribute]
public string Target { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public int get_Editable();
    [CompilerGeneratedAttribute]
public void set_Editable(int value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
}
[AttributeUsageAttribute("18436")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.MeansImplicitUseAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    [UsedImplicitlyAttribute]
public ImplicitUseKindFlags UseKindFlags { get; }
    [UsedImplicitlyAttribute]
public ImplicitUseTargetFlags TargetFlags { get; }
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags);
    public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags);
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[AttributeUsageAttribute("16384")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.MeansTestSubjectAttribute : Attribute {
}
[AttributeUsageAttribute("2156")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.MustDisposeResourceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; }
    public MustDisposeResourceAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.MustUseReturnValueAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [CanBeNullAttribute]
public string Justification { get; }
    public MustUseReturnValueAttribute(string justification);
    [CompilerGeneratedAttribute]
public string get_Justification();
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.NoEnumerationAttribute : Attribute {
}
[AttributeUsageAttribute("6592")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.NonNegativeValueAttribute : Attribute {
}
[AttributeUsageAttribute("1052")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.NoReorderAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    [CanBeNullAttribute]
public string ParameterName { get; }
    public NotifyPropertyChangedInvocatorAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("24516")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.PathReferenceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <BasePath>k__BackingField;
    [CanBeNullAttribute]
public string BasePath { get; }
    public PathReferenceAttribute(string basePath);
    [CompilerGeneratedAttribute]
public string get_BasePath();
}
[AttributeUsageAttribute("19916")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.ProvidesContextAttribute : Attribute {
}
[MeansImplicitUseAttribute("3")]
[AttributeUsageAttribute("32767")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.PublicAPIAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CanBeNullAttribute]
public string Comment { get; }
    public PublicAPIAttribute(string comment);
    [CompilerGeneratedAttribute]
public string get_Comment();
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.PureAttribute : Attribute {
}
[AttributeUsageAttribute("1")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorDirectiveAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Directive>k__BackingField;
    [NotNullAttribute]
public string Directive { get; }
    public RazorDirectiveAttribute(string directive);
    [CompilerGeneratedAttribute]
public string get_Directive();
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorHelperCommonAttribute : Attribute {
}
[AttributeUsageAttribute("1")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorImportNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; }
    public RazorImportNamespaceAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[AttributeUsageAttribute("1")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorInjectionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [NotNullAttribute]
public string Type { get; }
    [NotNullAttribute]
public string FieldName { get; }
    public RazorInjectionAttribute(string type, string fieldName);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public string get_FieldName();
}
[AttributeUsageAttribute("128")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorLayoutAttribute : Attribute {
}
[AttributeUsageAttribute("1")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorPageBaseTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <BaseType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageName>k__BackingField;
    [NotNullAttribute]
public string BaseType { get; }
    [CanBeNullAttribute]
public string PageName { get; }
    public RazorPageBaseTypeAttribute(string baseType);
    public RazorPageBaseTypeAttribute(string baseType, string pageName);
    [CompilerGeneratedAttribute]
public string get_BaseType();
    [CompilerGeneratedAttribute]
public string get_PageName();
}
[AttributeUsageAttribute("2112")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorSectionAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorWriteLiteralMethodAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorWriteMethodAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RazorWriteMethodParameterAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RegexPatternAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RequireStaticDelegateAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <IsError>k__BackingField;
    public bool IsError { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsError();
    [CompilerGeneratedAttribute]
public void set_IsError(bool value);
}
[AttributeUsageAttribute("4")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RouteParameterConstraintAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ConstraintName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ProposedType>k__BackingField;
    [NotNullAttribute]
public string ConstraintName { get; }
    [CanBeNullAttribute]
public Type ProposedType { get; public set; }
    public RouteParameterConstraintAttribute(string constraintName);
    [CompilerGeneratedAttribute]
public string get_ConstraintName();
    [CompilerGeneratedAttribute]
public Type get_ProposedType();
    [CompilerGeneratedAttribute]
public void set_ProposedType(Type value);
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.RouteTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.SourceTemplateAttribute : Attribute {
    [CompilerGeneratedAttribute]
private SourceTemplateTargetExpression <Target>k__BackingField;
    public SourceTemplateTargetExpression Target { get; public set; }
    [CompilerGeneratedAttribute]
public SourceTemplateTargetExpression get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(SourceTemplateTargetExpression value);
}
public enum JetBrains.Annotations.SourceTemplateTargetExpression : Enum {
    public int value__;
    public static SourceTemplateTargetExpression Inner;
    public static SourceTemplateTargetExpression Outer;
}
[AttributeUsageAttribute("4320")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.StringFormatMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FormatParameterName>k__BackingField;
    [NotNullAttribute]
public string FormatParameterName { get; }
    public StringFormatMethodAttribute(string formatParameterName);
    [CompilerGeneratedAttribute]
public string get_FormatParameterName();
}
[AttributeUsageAttribute("2048")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.StructuredMessageTemplateAttribute : Attribute {
}
[ObsoleteAttribute("Use [ContractAnnotation('=> halt')] instead")]
[AttributeUsageAttribute("64")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.TerminatesProgramAttribute : Attribute {
}
[AttributeUsageAttribute("1220")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.TestSubjectAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <Subject>k__BackingField;
    [NotNullAttribute]
public Type Subject { get; }
    public TestSubjectAttribute(Type subject);
    [CompilerGeneratedAttribute]
public Type get_Subject();
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.UriStringAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <HttpVerb>k__BackingField;
    [CanBeNullAttribute]
public string HttpVerb { get; }
    public UriStringAttribute(string httpVerb);
    [CompilerGeneratedAttribute]
public string get_HttpVerb();
}
[AttributeUsageAttribute("32767")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.UsedImplicitlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public ImplicitUseKindFlags UseKindFlags { get; }
    public ImplicitUseTargetFlags TargetFlags { get; }
    public string Reason { get; public set; }
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags);
    public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags);
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
}
[AttributeUsageAttribute("2432")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.ValueProviderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; }
    public ValueProviderAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[AttributeUsageAttribute("6592")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.ValueRangeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private object <From>k__BackingField;
    [CompilerGeneratedAttribute]
private object <To>k__BackingField;
    public object From { get; }
    public object To { get; }
    public ValueRangeAttribute(long from, long to);
    public ValueRangeAttribute(ulong from, ulong to);
    public ValueRangeAttribute(long value);
    public ValueRangeAttribute(ulong value);
    [CompilerGeneratedAttribute]
public object get_From();
    [CompilerGeneratedAttribute]
public object get_To();
}
[AttributeUsageAttribute("128")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.XamlItemBindingOfItemsControlAttribute : Attribute {
}
[AttributeUsageAttribute("4")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.XamlItemsControlAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.XamlItemStyleOfItemsControlAttribute : Attribute {
}
[AttributeUsageAttribute("384")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.XamlOneWayBindingModeByDefaultAttribute : Attribute {
}
[AttributeUsageAttribute("384")]
[ConditionalAttribute("JETBRAINS_ANNOTATIONS")]
public class JetBrains.Annotations.XamlTwoWayBindingModeByDefaultAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
