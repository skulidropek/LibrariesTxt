public class JetBrains.CommandLine.Products.BuildScript.ConstantsReSharperAutomationTools : object {
    public static string ProductHostShortName;
    public static string ProductName;
    public static string ProductDetails;
    public static string ProductUrl;
    public static string ProductUrlEvaluate;
}
public class JetBrains.CommandLine.Products.BuildScript.CopyCommandLineProductsRuntimeConfig : object {
    [BuildStepAttribute]
public static void Run(ProductHomeDirArtifact homedir, SubplatformFileForPackagingFast[]& compileArtifacts, AllAssembliesOnEverything aas);
}
public class JetBrains.CommandLine.Products.BuildScript.GenerateConfigAndWrapperFiles : object {
    private static string UnixRuntimeConfigSuffix;
    private static string WindowsRuntimeConfigSuffix;
    [BuildStepAttribute]
public static void Do(ILogger logger, IReadOnlyCollection`1<PackageReferenceArtifact> references, AllAssembliesOnEverything assembliesOnEverything, AllAssembliesOnSources assembliesOnSources, InputPackage[] inputs, IList`1& copiedFiles, IList`1& generatedFiles, IList`1& depsJsonFiles);
    public static TPath GetRuntimeConfigPath(TPath path, JetPlatform platform);
}
public class JetBrains.CommandLine.Products.BuildScript.ReSharperAutomationToolsActivatorForBuild : object {
    public static string Icon;
    [IteratorStateMachineAttribute("JetBrains.CommandLine.Products.BuildScript.ReSharperAutomationToolsActivatorForBuild/<ProductMetaDependency>d__0")]
[BuildStepAttribute]
public static IEnumerable`1<SubplatformComponentForPackagingFast> ProductMetaDependency(AllAssembliesOnEverything allass, BuiltOn builton);
}
public class JetBrains.CommandLine.Products.BuildScript.ReSharperAutomationToolsLicense : object {
    [BuildStepAttribute]
public static void Run(ProductHomeDirArtifact homedir, SubplatformFileForPackagingFast[]& copyFileToOutputRequests, AllAssembliesOnEverything aas, ReSharperAutomationToolsLicenseAgreementArtifact licenseAgreementArtifact);
}
[BuildArtifactAttribute]
[MemberwiseSerializableAttribute]
public class JetBrains.CommandLine.Products.BuildScript.ReSharperAutomationToolsLicenseAgreementArtifact : LicenseAgreementArtifact {
    [BuildStepAttribute]
public static Tuple`2<ReSharperAutomationToolsLicenseAgreementArtifact, SubplatformComponentForPackagingFast[]> Load(AllAssembliesOnEverything allass, Optional`1<ProductHomeDirArtifact> homedir);
}
public class JetBrains.CommandLine.Products.CommandLineProductsProgram : object {
    public static int Main(String[] args);
    private static Assembly NetCoreAssemblyResolve(object sender, ResolveEventArgs args);
}
[BuildArtifactAttribute("1")]
public class JetBrains.CommandLine.Products.Installer.AutomationToolsArchiveFile : BuildOutputFileArtifact {
    [NotNullAttribute]
public ImmutableFileItem ArchiveFile { get; }
    public AutomationToolsArchiveFile(ImmutableFileItem file);
    public AutomationToolsArchiveFile(IStructuredStorage sstg);
    public ImmutableFileItem get_ArchiveFile();
    public virtual string ToString();
    [BuildStepAttribute]
public static Tuple`2<InstallersPortablesZipsDeployableFile[], PushToReSharperCdnArtifact[]> ToDeployable(BuildChainFlavor buildChainFlavor, DeployedFilesNamingScheme naming, IEnumerable`1<AutomationToolsArchiveFile> automationToolsArchives);
    [BuildStepAttribute]
public static ExtractForIntegrationTests ExtractForIntegrationTests(IntegrationTestsHomeDirArtifact homedir, IEnumerable`1<AutomationToolsArchiveFile> automationToolsZips, ILogger logger);
}
[BuildArtifactAttribute("1")]
public class JetBrains.CommandLine.Products.Installer.AutomationToolsNuget : BuildOutputPackageFileArtifact {
    public AutomationToolsNuget(IJetNugetPackage package);
    public AutomationToolsNuget(IStructuredStorage sstg);
    public virtual string ToString();
    [BuildStepAttribute]
public static InstallersPortablesZipsDeployableFile[] ToDeployable(BuildChainFlavor buildChainFlavor, ProductsToDeploy productsToDeploy, AutomationToolsNuget[] automationToolsNugets, PushToNugetGalleryArtifact[]& pushToNugetGalleryArtifacts, PushToListedPackageIdArtifact[]& pushToListedPackageIdArtifacts);
    [BuildStepAttribute]
public static LocalAutomationToolsArtifacts ToLocal(ProductBinariesDirArtifact productBinariesDirArtifact, IEnumerable`1<AutomationToolsArchiveFile> automationToolsArchives, IEnumerable`1<AutomationToolsNuget> automationToolsNugets);
}
public class JetBrains.CommandLine.Products.Installer.AutomationToolsPack : object {
    private static string TargetsFileExtension;
    private static RelativePath PsiTasksPrefix;
    private static AutomationToolsPack();
    [AsyncStateMachineAttribute("JetBrains.CommandLine.Products.Installer.AutomationToolsPack/<MakeAutomationToolsArchiveAsync>d__0")]
[BuildStepAttribute]
public static Task`1<Tuple`2<AutomationToolsArchiveFile[], AutomationToolsNuget[]>> MakeAutomationToolsArchiveAsync(Lifetime lifetime, BuildVersionSuffix buildVersionSuffix, BuildChainFlavor buildChainFlavor, ProductsToDeploy productsToDeploy, InputPackage[] inputPackages, DeployedFilesNamingScheme naming, AllAssembliesOnPackagesEx allassPkg, Optional`1<AutomationToolsWithExtraPackagesListing> maybeAdditionals, ITaskHost tasker, IAddFilesToDeploymentPackagings[] emitters, ILogger logger, ReSharperAutomationToolsLicenseAgreementArtifact licenseAgreementArtifact);
    public static AutomationToolsArchiveFile MakeAutomationToolsArchive(string commandLineToolsName, DeployedFilesNamingScheme naming, ILogger logger, JetPlatform targetPlatform, ICollection`1<ImmutableFileItem> extractedItems);
    private static AutomationToolsNuget PackageContent(string id, ProductInfo productInfo, PackageMetadata packageMetadata, JetSemanticVersion resultPackageVersion, ReSharperAutomationToolsLicenseAgreementArtifact licenseAgreementArtifact, IEnumerable`1<ImmutableFileItem> itemsToPack, Action`1<PackageBuilder> postProcessor);
    private static ImmutableFileItem RenderTargetsFile(string id, IList`1<ImmutableFileItem> itemsToPack);
    [CompilerGeneratedAttribute]
internal static RelativePath <MakeAutomationToolsArchiveAsync>g__ToolsPathConverter|0_4(RelativePath path);
}
[BuildArtifactAttribute]
[ValueSerializerAttribute("JetBrains.CommandLine.Products.Installer.AutomationToolsWithExtraPackagesListing/AutomationToolsWithExtraPackagesListingSerializer")]
public class JetBrains.CommandLine.Products.Installer.AutomationToolsWithExtraPackagesListing : object {
    public String[] PackageIds;
    private AutomationToolsWithExtraPackagesListing(String[] packageids);
    public virtual string ToString();
}
[BuildArtifactAttribute]
public class JetBrains.CommandLine.Products.Installer.ReSharperAutomationToolsZipsDeployableFile : BuildOutputFileArtifact {
    public ReSharperAutomationToolsZipsDeployableFile(ImmutableFileItem file);
    public ReSharperAutomationToolsZipsDeployableFile(IStructuredStorage sstg);
}
[ZoneMarkerAttribute]
public class JetBrains.CommandLine.Products.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
