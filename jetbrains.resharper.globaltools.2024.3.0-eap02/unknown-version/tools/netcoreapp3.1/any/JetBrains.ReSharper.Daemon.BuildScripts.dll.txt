[RegisterConfigurableSeverityAttribute("UnknownProperty", "", "CodeSmell", "Unknown property", "Highlights an unknown property", "0")]
[RegisterConfigurableSeverityAttribute("UnknownTarget", "", "CodeSmell", "Unknown target", "Highlights an unknown target", "3")]
[RegisterConfigurableSeverityAttribute("UnknownItemGroup", "", "CodeSmell", "Unknown item group", "Highlights an unknown item group", "3")]
[RegisterConfigurableSeverityAttribute("UnknownMetadata", "", "CodeSmell", "Unknown metadata", "Highlights an unknown metadata", "3")]
[RegisterConfigurableSeverityAttribute("UnknownTask", "", "CodeSmell", "Unknown task", "Highlights an unknown task", "4")]
[RegisterConfigurableSeverityAttribute("TasksNotLoaded", "", "CodeSmell", "Unknown tasks assembly", "Highlights tags where ReSharper failed to find tasks definitions", "4")]
[RegisterConfigurableSeverityAttribute("InvalidTaskElement", "", "CodeSmell", "Invalid task element", "Highlights an invalid task element", "0")]
[RegisterConfigurableSeverityAttribute("WrongMetadataUse", "", "CodeSmell", "Wrong metadata use", "Highlights wrong metadata use", "0")]
[RegisterConfigurableSeverityAttribute("MissingAttribute", "", "CodeSmell", "Missing required attribute", "Highlights a tag which has missing required attribute", "4")]
[RegisterConfigurableSeverityAttribute("UnknownOutputParameter", "", "CodeSmell", "Unknown output parameter", "Highlights an unknown output parameter of a task", "4")]
[RegisterConfigurableSeverityAttribute("OutputTagRequired", "", "CodeSmell", "Output tag required", "Highlights a task that requires an output tag", "4")]
[RegisterConfigurableSeverityAttribute("MultipleOutputTags", "", "CodeSmell", "Multiple output tags defined", "Highlights a task with multiple output tags", "4")]
[RegisterConfigurableSeverityAttribute("UnknownTaskAttribute", "", "CodeSmell", "Unknown task attribute", "Highlights an unknown task attribute", "3")]
[RegisterConfigurableSeverityAttribute("InvalidAttributeValue", "", "CodeSmell", "Invalid attribute value", "Highlights an attribute that has invalid value", "4")]
public class JetBrains.ReSharper.Daemon.BuildScripts.BuildScriptSeverityRegistrarComponent : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.BuildScripts.MSBuild.MSBuildLanguage", "16")]
[LanguageAttribute("JetBrains.ReSharper.Psi.BuildScripts.NAnt.NAntLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.BuildScriptDaemonBehavior : XmlDaemonBehavior {
    public bool CanShowErrorBox { get; }
    public bool RunInSolutionAnalysis { get; }
    public virtual ErrorStripeRequestWithDescription InitialErrorStripe(IPsiSourceFile sourceFile);
    public virtual bool get_CanShowErrorBox();
    public virtual bool get_RunInSolutionAnalysis();
}
public abstract class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.AttributeRequiredWarning : TaskHighlightingBase {
    public static string SeverityId;
    private XmlIdentifier myTreeNode;
    public ITreeNode TreeNode { get; }
    public string ToolTip { get; }
    public string AttributeName { get; }
    protected AttributeRequiredWarning(IProjectFile projectFile, string name, XmlIdentifier tokenNode, DocumentRange range);
    public ITreeNode get_TreeNode();
    public virtual string get_ToolTip();
    public string get_AttributeName();
}
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.BuildScriptReferenceHighlightingBase : ScriptHighlightingBase {
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    public IReference Reference { get; protected set; }
    public BuildScriptReferenceHighlightingBase(string name, IReference reference);
    [CompilerGeneratedAttribute]
public sealed virtual IReference get_Reference();
    [CompilerGeneratedAttribute]
protected void set_Reference(IReference value);
}
public static class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.BuildScriptStaticHighlightingsGroups : object {
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.BuildScriptStaticHighlightingsGroups/BuildScriptErrors")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.ErrorElementHighlighting : object {
    private string myErrorDescription;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ErrorElementHighlighting(ErrorElement element, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
internal interface JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.IReferenceHighlighting {
    public IReference Reference { get; }
    public abstract virtual IReference get_Reference();
}
[ConfigurableSeverityHighlightingAttribute("MissingAttribute", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.MissingMSBuildAttributeHighlighting : AttributeRequiredWarning {
    public MissingMSBuildAttributeHighlighting(IProjectFile projectFile, string name, XmlIdentifier tokenNode, DocumentRange range);
}
[ConfigurableSeverityHighlightingAttribute("MultipleOutputTags", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.MSBuildMultipleOutputTagsHighlighting : ScriptHighlightingBase {
    public static string SeverityId;
    public string ToolTip { get; }
    public MSBuildMultipleOutputTagsHighlighting(string name, DocumentRange range);
    public virtual string get_ToolTip();
}
[ConfigurableSeverityHighlightingAttribute("OutputTagRequired", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.MSBuildOutputTagRequiredHighlighting : object {
    public static string SeverityId;
    private string myAttributeName;
    private IBuildScriptTag myParent;
    private OutputAttributeType myType;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IBuildScriptTag Parent { get; }
    public OutputAttributeType Type { get; }
    public string AttributeName { get; }
    public MSBuildOutputTagRequiredHighlighting(string attributeName, IBuildScriptTag parent, OutputAttributeType type, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public IBuildScriptTag get_Parent();
    public OutputAttributeType get_Type();
    public string get_AttributeName();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("UnknownTaskAttribute", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.UnknownMSBuildAttributeHighlighting : UnknownAttributeHighlighting {
    public UnknownMSBuildAttributeHighlighting(string name, String[] validNames, string tagName, DocumentRange range);
}
[ConfigurableSeverityHighlightingAttribute("UnknownOutputParameter", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.UnknownMSBuildOutputParameterHighlighting : object {
    public static string SeverityId;
    private string myName;
    private DocumentRange myDocumentRange;
    private String[] myValidNames;
    private string myTagName;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownMSBuildOutputParameterHighlighting(string name, String[] validNames, string tagName, DocumentRange documentRange);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("UnknownItemGroup", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.UnresolvedMSBuildItemGroupHighlighting : BuildScriptReferenceHighlightingBase {
    public static string SeverityId;
    public string ToolTip { get; }
    public UnresolvedMSBuildItemGroupHighlighting(string name, IReference reference);
    public virtual string get_ToolTip();
}
[ConfigurableSeverityHighlightingAttribute("UnknownMetadata", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.UnresolvedMSBuildItemMetadataHighlighting : BuildScriptReferenceHighlightingBase {
    public static string SeverityId;
    public string ToolTip { get; }
    public UnresolvedMSBuildItemMetadataHighlighting(string name, IReference reference);
    public virtual string get_ToolTip();
}
[ConfigurableSeverityHighlightingAttribute("UnknownProperty", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.UnresolvedMSBuildPropertyHighlighting : UnresolvedPropertyHighlightingBase {
    public UnresolvedMSBuildPropertyHighlighting(string name, IReference reference);
}
[ConfigurableSeverityHighlightingAttribute("UnknownTarget", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.UnresolvedMSBuildTargetHighlighting : UnresolvedTargetHighlightingBase {
    public UnresolvedMSBuildTargetHighlighting(string name, IReference reference);
}
[ConfigurableSeverityHighlightingAttribute("UnknownTask", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.UnresolvedMSBuildTaskHighlighting : UnresolvedTaskHighlightingBase {
    [CompilerGeneratedAttribute]
private IBuildScriptTag <Tag>k__BackingField;
    public IBuildScriptTag Tag { get; }
    public string ToolTip { get; }
    public UnresolvedMSBuildTaskHighlighting(string name, IBuildScriptTag tag, DocumentRange range);
    [CompilerGeneratedAttribute]
public IBuildScriptTag get_Tag();
    public virtual string get_ToolTip();
}
[ConfigurableSeverityHighlightingAttribute("WrongMetadataUse", "MSBUILD_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.MSBuild.WrongMSBuildItemMetadataHighlighting : BuildScriptReferenceHighlightingBase {
    public static string SeverityId;
    private string myCurrentItemGroupName;
    private IEnumerable`1<string> myAvailableMetadataItems;
    public string ToolTip { get; }
    public WrongMSBuildItemMetadataHighlighting(string name, IReference reference, string currentItemGroupName, IEnumerable`1<string> availableMetadataItems);
    public virtual string get_ToolTip();
}
[ConfigurableSeverityHighlightingAttribute("InvalidAttributeValue", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.InvalidAttributeValueHighlighting : object {
    public static string SeverityId;
    private string myName;
    private DocumentRange myDocumentRange;
    private string myType;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InvalidAttributeValueHighlighting(string name, Validator validator, DocumentRange documentRange);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("MissingAttribute", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.MissingNAntAttributeHighlighting : AttributeRequiredWarning {
    public MissingNAntAttributeHighlighting(IProjectFile projectFile, string name, XmlIdentifier tokenNode, DocumentRange range);
}
[ConfigurableSeverityHighlightingAttribute("TasksNotLoaded", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.TasksNotLoadedHighlighting : object {
    public static string SeverityId;
    private NAntLoadTasksTag myLoadTasksTag;
    private DocumentRange myDocumentRange;
    public NAntLoadTasksTag LoadTasksTag { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    internal TasksNotLoadedHighlighting(NAntLoadTasksTag tag, DocumentRange documentRange);
    public NAntLoadTasksTag get_LoadTasksTag();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("UnknownTaskAttribute", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.UnknownNAntAttributeHighlighting : UnknownAttributeHighlighting {
    public UnknownNAntAttributeHighlighting(string name, String[] validNames, string tagName, DocumentRange range);
}
[ConfigurableSeverityHighlightingAttribute("InvalidTaskElement", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.UnknownTaskElementWarning : TaskHighlightingBase {
    public static string SeverityId;
    private List`1<string> myValidElements;
    private string myTagName;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownTaskElementWarning(IProjectFile projectFile, string name, List`1<string> validElements, string tagName, DocumentRange range);
    public virtual string get_ToolTip();
    public string get_ErrorStripeToolTip();
}
[ConfigurableSeverityHighlightingAttribute("UnknownProperty", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.UnresolvedNAntPropertyHighlighting : UnresolvedPropertyHighlightingBase {
    public UnresolvedNAntPropertyHighlighting(string name, IReference reference);
}
[ConfigurableSeverityHighlightingAttribute("UnknownTarget", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.UnresolvedNAntTargetHighlighting : UnresolvedTargetHighlightingBase {
    public UnresolvedNAntTargetHighlighting(string name, IReference reference);
}
[ConfigurableSeverityHighlightingAttribute("UnknownTask", "NANT_BUILD_SCRIPT")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.NAnt.UnresolvedNAntTaskHighlighting : UnresolvedTaskHighlightingBase {
    public UnresolvedNAntTaskHighlighting(IProjectFile projectFile, string name, DocumentRange range);
}
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.ScriptHighlightingBase : object {
    protected string myName;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public string Name { get; }
    public ScriptHighlightingBase(string name, DocumentRange range);
    public virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public string get_Name();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.TaskHighlightingBase : ScriptHighlightingBase {
    [CompilerGeneratedAttribute]
private IProjectFile <ProjectFile>k__BackingField;
    public IProjectFile ProjectFile { get; }
    public TaskHighlightingBase(IProjectFile projectFile, string name, DocumentRange range);
    [CompilerGeneratedAttribute]
public IProjectFile get_ProjectFile();
}
public abstract class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.UnknownAttributeHighlighting : object {
    public static string SeverityId;
    private string myName;
    private string myTagName;
    private DocumentRange myRange;
    private IList`1<string> myValidNames;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    protected UnknownAttributeHighlighting(string name, String[] validNames, string tagName, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.UnresolvedPropertyHighlightingBase : BuildScriptReferenceHighlightingBase {
    public static string SeverityId;
    public string ToolTip { get; }
    public UnresolvedPropertyHighlightingBase(string name, IReference reference);
    public virtual string get_ToolTip();
}
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.UnresolvedTargetHighlightingBase : BuildScriptReferenceHighlightingBase {
    public static string SeverityId;
    public string ToolTip { get; }
    public UnresolvedTargetHighlightingBase(string name, IReference reference);
    public virtual string get_ToolTip();
}
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.UnresolvedTaskHighlightingBase : TaskHighlightingBase {
    public static string SeverityId;
    public string ToolTip { get; }
    public UnresolvedTaskHighlightingBase(IProjectFile projectFile, string name, DocumentRange range);
    public virtual string get_ToolTip();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ConfigurableSeverityHighlightingAttribute("VulnerablePackage", "MSBUILD_BUILD_SCRIPT")]
[RegisterConfigurableSeverityAttribute("VulnerablePackage", "", "", "", "Security", "", "JetBrains.ReSharper.Daemon.BuildScripts.Resources.Strings", "NuGetPackageIsVulnerable_Text", "", "JetBrains.ReSharper.Daemon.BuildScripts.Resources.Strings", "ThePackageContainsVulnerabilitiesAccording_Text", "4")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.Highlightings.VulnerablePackageWarning : object {
    public static string SeverityId;
    [CompilerGeneratedAttribute]
private IXmlTag <XMLTag>k__BackingField;
    [NullableAttribute("2")]
private string myTitle;
    [CompilerGeneratedAttribute]
private VulnerabilityReport[] <VulnerabilityReports>k__BackingField;
    [CompilerGeneratedAttribute]
private INugetPackageName <NugetPackageName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private INugetPackageName <Owner>k__BackingField;
    public IXmlTag XMLTag { get; }
    public VulnerabilityReport[] VulnerabilityReports { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public INugetPackageName NugetPackageName { get; }
    [NullableAttribute("2")]
public INugetPackageName Owner { get; }
    public VulnerablePackageWarning(IXmlTag xmlTag, INugetPackageName nugetPackageName, VulnerabilityReport[] vulnerabilityReports, INugetPackageName owner);
    [CompilerGeneratedAttribute]
public IXmlTag get_XMLTag();
    [CompilerGeneratedAttribute]
public VulnerabilityReport[] get_VulnerabilityReports();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    [CompilerGeneratedAttribute]
public INugetPackageName get_NugetPackageName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public INugetPackageName get_Owner();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.MSBuildDaemonStageProcess : ScriptDaemonStageProcessBase`1<MSBuildLanguageService> {
    private MSBuildTaskValidator myMSBuildTaskValidator;
    private MSBuildTaskManager myMSBuildTaskManager;
    public MSBuildDaemonStageProcess(IDaemonProcess process, IContextBoundSettingsStore settingStore);
    protected virtual void ProcessAttribute(IBuildScriptAttribute attribute, MSBuildLanguageService languageService, IHighlightingConsumer consumer);
    protected virtual void ProcessTag(IBuildScriptTag tag, MSBuildLanguageService languageService, IHighlightingConsumer consumer);
    private void ProcessReferences(MSBuildLanguageService languageService, ITreeNode element, ReferenceCollection references, IHighlightingConsumer consumer);
    private static bool IsDefinedThroughOutputTag(IDeclaredElement element);
    private static MSBuildItemGroupDeclaredElement FindRelatedItemGroup(IXmlTag container);
    protected virtual void ProcessElement(BuildScriptTagBase element, MSBuildLanguageService languageService, IHighlightingConsumer consumer);
    private void ProcessElementResolved(IXmlTag tag, MSBuildLanguageService languageService, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.NAntDaemonStageProcess : ScriptDaemonStageProcessBase`1<NAntLanguageService> {
    private NAntTaskManager myManager;
    private NAntTaskValidator myTaskValidator;
    public NAntDaemonStageProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore);
    protected virtual void ProcessAttribute(IBuildScriptAttribute attribute, NAntLanguageService languageService, IHighlightingConsumer consumer);
    protected virtual void ProcessElement(BuildScriptTagBase element, NAntLanguageService languageService, IHighlightingConsumer consumer);
    private void ProcessElementResolved(IXmlTag tag, NAntLanguageService languageService, IHighlightingConsumer consumer);
    protected virtual void ProcessTag(IBuildScriptTag tag, NAntLanguageService languageService, IHighlightingConsumer consumer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DaemonStageAttribute("0")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.PackageChecker.PackageCheckerDaemonStage : object {
    private IVulnerablePackagesTracker myPackageTracker;
    private NuGetPackageReferenceTracker myNugetPackageReferenceTracker;
    private PackageCheckerProviderDaemon myPackageCheckerProvider;
    public PackageCheckerDaemonStage(IVulnerablePackagesTracker packageTracker, NuGetPackageReferenceTracker nugetPackageReferenceTracker, PackageCheckerProviderDaemon packageCheckerProvider);
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.PackageChecker.PackageCheckerDaemonStageProcess : ScriptDaemonStageProcessBase`1<MSBuildLanguageService> {
    private PackageCheckerProviderDaemon myPackageCheckerProviderDaemon;
    private NuGetPackageReferenceTracker myPackageReferenceTracker;
    private IVulnerablePackagesTracker myVulnerablePackagesTracker;
    private OneToListMap`2<INugetPackageName, IXmlTag> myPackageReferences;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Key`1<Boxed`1<ValueTuple`2<INugetPackageName, VulnerabilityReport[]>>> ourVulKey;
    public PackageCheckerDaemonStageProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, PackageCheckerProviderDaemon packageCheckerProviderDaemon, NuGetPackageReferenceTracker packageReferenceTracker, IVulnerablePackagesTracker vulnerablePackagesTracker);
    private static PackageCheckerDaemonStageProcess();
    protected virtual void ProcessFile(BuildScriptFileBase scriptFile, MSBuildLanguageService languageService, FilteringHighlightingConsumer consumer);
    protected virtual void ProcessTag(IBuildScriptTag tag, MSBuildLanguageService languageService, IHighlightingConsumer consumer);
    protected virtual void ProcessAttribute(IBuildScriptAttribute attribute, MSBuildLanguageService languageService, IHighlightingConsumer consumer);
    [CompilerGeneratedAttribute]
internal static Boxed`1<ValueTuple`2<INugetPackageName, VulnerabilityReport[]>> <ProcessFile>g__DFS|6_0(DirectedGraph`1<NuGetGraphNode> graph, NuGetGraphNode start, HashSet`1<NuGetGraphNode> processed, <>c__DisplayClass6_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.PackageChecker.PackageCheckerProviderDaemon : object {
    private ConcurrentDictionary`2<INugetPackageName, Unit> myPackages;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<ValueTuple`2<IProject, TargetFrameworkId>, DirectedGraph`1<NuGetGraphNode>> myNuGetDependenciesCache;
    [CompilerGeneratedAttribute]
private ISignal`1<Unit> <OnChanged>k__BackingField;
    public IEnumerable`1<INugetPackageName> Packages { get; }
    public ISignal`1<Unit> OnChanged { get; }
    public bool IsProjectPackages { get; }
    public PackageCheckerProviderDaemon(Lifetime lifetime, NuGetLockFileTracker nugetLockFileTracker);
    public sealed virtual IEnumerable`1<INugetPackageName> get_Packages();
    [CompilerGeneratedAttribute]
public sealed virtual ISignal`1<Unit> get_OnChanged();
    public sealed virtual bool get_IsProjectPackages();
    public DirectedGraph`1<NuGetGraphNode> GetDependenciesGraph(IProject project, TargetFrameworkId targetFramework);
    public void CheckPackages(IProject project, TargetFrameworkId targetFramework);
    public void CheckPackages(IEnumerable`1<INugetPackageName> nugetNames);
    [CompilerGeneratedAttribute]
private void <.ctor>b__9_0();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.PackageChecker.ZoneMarker : object {
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.ScriptDaemonStage : object {
    [CompilerGeneratedAttribute]
private SupportedProjectFileTypes <supportedProjectFileTypes>P;
    public ScriptDaemonStage(SupportedProjectFileTypes supportedProjectFileTypes);
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
public abstract class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.ScriptDaemonStageProcessBase`1 : object {
    protected IDaemonProcess myProcess;
    private IContextBoundSettingsStore mySettingStore;
    public IDaemonProcess DaemonProcess { get; }
    protected ScriptDaemonStageProcessBase`1(IDaemonProcess process, IContextBoundSettingsStore settingStore);
    public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    [CanBeNullAttribute]
private DaemonStageResult Execute();
    protected virtual void ProcessFile(BuildScriptFileBase scriptFile, TLanguageService languageService, FilteringHighlightingConsumer consumer);
    protected virtual void ProcessElement(BuildScriptTagBase element, TLanguageService languageService, IHighlightingConsumer consumer);
    protected abstract virtual void ProcessAttribute(IBuildScriptAttribute attribute, TLanguageService languageService, IHighlightingConsumer consumer);
    protected abstract virtual void ProcessTag(IBuildScriptTag tag, TLanguageService languageService, IHighlightingConsumer consumer);
    [CompilerGeneratedAttribute]
private bool <Execute>b__6_0();
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.ScriptErrorElementStage : object {
    [NotNullAttribute]
private SupportedProjectFileTypes mySupportedProjectFileTypes;
    public ScriptErrorElementStage(SupportedProjectFileTypes supportedProjectFileTypes);
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.BuildScripts.DaemonStage.ScriptErrorElementStageProcess : object {
    private IDaemonProcess myProcess;
    public IDaemonProcess DaemonProcess { get; }
    public ScriptErrorElementStageProcess(IDaemonProcess process);
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    public sealed virtual IDaemonProcess get_DaemonProcess();
    private DaemonStageResult Execute();
    private HighlightingInfo[] ProcessElement(ITreeNode node);
}
[ProjectFileTypeAttribute("JetBrains.ProjectModel.MSBuildProjectFileType", "16")]
public class JetBrains.ReSharper.Daemon.BuildScripts.MSBuildHighlightingSuppressor : object {
    public sealed virtual IProperty`1<bool> ShouldSuppress(Lifetime lifetime, IProjectFile projectFile, ITextControl textControl);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.BuildScripts.MSBuildTaskValidator : TaskValidator {
    public virtual void Validate(IProjectFile projectFile, IBuildScriptTag tag, ITask task, IHighlightingConsumer consumer);
    private static bool HasDuplicateOutputParameterDefinedThroughItemGroup(IBuildScriptTag outputTag, string name, ICollection`1<string> outputParametersDefinedThroughItemGroups);
    private static bool HasDuplicateOutputParameterDefinedThroughProperty(IBuildScriptTag outputTag, ICollection`1<string> outputParametersDefinedThroughProperties, string name);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.BuildScripts.NAntTaskValidator : TaskValidator {
    public virtual void Validate(IProjectFile projectFile, IBuildScriptTag tag, ITask task, IHighlightingConsumer consumer);
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public static class JetBrains.ReSharper.Daemon.BuildScripts.Resources.Strings : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string BuildScriptsErrors_Text { get; }
    public static string SomeOfTheTasksFromDesignatedAssemblies_Text { get; }
    public static string Item_CannotBeResolved_Text { get; }
    public static string UnknownAttribute__ShouldHaveNoAttributes_Text { get; }
    public static string UnknownAttribute__CanHaveFollowingAttributes_Text { get; }
    public static string Attribute_IsRequired_Text { get; }
    public static string MultipleOutputTagsForTaskParameter__Text { get; }
    public static string OutputAttribute_IsRequired_Text { get; }
    public static string UnknownItemGroup__Text { get; }
    public static string Metadata_IsNotDefined_Text { get; }
    public static string Metadata_IsNotDefinedOnItemGroup_Available_Text { get; }
    public static string NoItems_Text { get; }
    public static string InvalidValueForAttribute_ShouldBeA__Text { get; }
    public static string Property_IsNotDefined_Text { get; }
    public static string Target_IsNotDefined_Text { get; }
    public static string UnknownTask__Text { get; }
    public static string Task_IsNotDefined_Text { get; }
    public static string TransitiveDependency__ContainsVulnerabilities_Text { get; }
    public static string __ContainsVulnerabilitiesAccordingTo_Text { get; }
    public static string NuGetPackageIsVulnerable_Text { get; }
    public static string ThePackageContainsVulnerabilitiesAccording_Text { get; }
    public static string CurrentPackageIsVulnerable_Text { get; }
    private static Strings();
    public static JetResourceManager get_ResourceManager();
    public static string Choice(string format, Object[] args);
    public static string get_BuildScriptsErrors_Text();
    public static string get_SomeOfTheTasksFromDesignatedAssemblies_Text();
    public static string get_Item_CannotBeResolved_Text();
    public static string get_UnknownAttribute__ShouldHaveNoAttributes_Text();
    public static string get_UnknownAttribute__CanHaveFollowingAttributes_Text();
    public static string get_Attribute_IsRequired_Text();
    public static string get_MultipleOutputTagsForTaskParameter__Text();
    public static string get_OutputAttribute_IsRequired_Text();
    public static string get_UnknownItemGroup__Text();
    public static string get_Metadata_IsNotDefined_Text();
    public static string get_Metadata_IsNotDefinedOnItemGroup_Available_Text();
    public static string get_NoItems_Text();
    public static string get_InvalidValueForAttribute_ShouldBeA__Text();
    public static string get_Property_IsNotDefined_Text();
    public static string get_Target_IsNotDefined_Text();
    public static string get_UnknownTask__Text();
    public static string get_Task_IsNotDefined_Text();
    public static string get_TransitiveDependency__ContainsVulnerabilities_Text();
    public static string get___ContainsVulnerabilitiesAccordingTo_Text();
    public static string get_NuGetPackageIsVulnerable_Text();
    public static string get_ThePackageContainsVulnerabilitiesAccording_Text();
    public static string get_CurrentPackageIsVulnerable_Text();
}
public abstract class JetBrains.ReSharper.Daemon.BuildScripts.TaskValidator : object {
    public abstract virtual void Validate(IProjectFile projectFile, IBuildScriptTag tag, ITask task, IHighlightingConsumer highlightings);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.BuildScripts.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
