[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Asp.ContextHighlighters.AspMatchingBracesContextHighlighter : ContainingBracesContextHighlighterBase`1<AspLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void CollectHighlightings(IPsiDocumentRangeView psiDocumentRangeView, MatchingHighlightingsConsumer consumer);
    protected virtual void CollectHighlightings(IPsiView psiView, MatchingHighlightingsConsumer consumer);
}
[ConfigurableSeverityHighlightingAttribute("RedundantUsingDirective", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Highlightings.AspUnusedUsingDirectiveWarning : UnusedUsingDirectiveWarning {
    private IAspDirective myImportDirective;
    public AspUnusedUsingDirectiveWarning(IUsingDirective directive, IAspDirective importDirective);
    public sealed virtual bool IsValid();
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.AspAutoEventWireupStage : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    private Nullable`1<bool> IsAutoEventWireup(IProjectFile aspProjectFile, TargetFrameworkId targetFrameworkId);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.AspCSharpFileIncludingService : object {
    public sealed virtual bool TryGetFileIncluded(IPsiSourceFile sourceFile, Boolean& fileIncluded);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.AspCSharpImportDirectivesStage : AspImportDirectivesStageBase`3<CSharpLanguage, ICSharpFile, SmartResolverProcess> {
    protected virtual AspImportDirectivesProcessBase`2<ICSharpFile, SmartResolverProcess> CreateProcess(IDaemonProcess process, IAspFile aspFile, ICSharpFile codeBehindFile, SmartResolverProcess smartResolverProcess, IContextBoundSettingsStore settingsStore);
}
internal class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.AspFileStageProcess : object {
    private CollectUsagesStageProcess myTypeUsageProcess;
    [CompilerGeneratedAttribute]
private IFile <File>k__BackingField;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    public IFile File { get; }
    public IDaemonProcess DaemonProcess { get; }
    public AspFileStageProcess(CollectUsagesStageProcess typeUsageProcess, IDaemonProcess process, IFile file);
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_File();
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    private DaemonStageResult Execute();
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element, AspEventsDetector aspEventsDetector);
    public sealed virtual bool IsProcessingFinished(AspEventsDetector context);
    public sealed virtual void ProcessBeforeInterior(ITreeNode element, AspEventsDetector aspEventsDetector);
    public sealed virtual void ProcessAfterInterior(ITreeNode element, AspEventsDetector aspEventsDetector);
    private void ProcessMethod(IMethod method, ITreeNode context, AspEventsDetector aspEventsDetector);
    private void MarkEventBindingUsed(IMethod method, IEvent event, ITreeNode context);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.AspUnreferencedModuleDetector : UnreferencedModuleDetector {
    private IFile myAspFile;
    public AspUnreferencedModuleDetector(IPsiSourceFile sourceFile);
    protected virtual bool IsDLRSupportVisible(IExpression expression);
}
[SolutionComponentAttribute("16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.AspUnreferencedModuleDetectorFactory : UnreferencedModuleDetectorFactory {
    public virtual UnreferencedModuleDetector CreateDetectUnreferencedModule(IPsiSourceFile sourceFile);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.CSharpSymbolsFromNotCopiedLocalReferencesDaemonProcess : CSharpIncrementalDaemonStageProcessBase {
    private JetHashSet`1<IPsiModule> myNotCopiedLocalReferencedModules;
    [NotNullAttribute]
private IReferenceProvider myReferenceProvider;
    public CSharpSymbolsFromNotCopiedLocalReferencesDaemonProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICSharpFile file, JetHashSet`1<IPsiModule> notCopiedLocalReferencedModules);
    public virtual void VisitNode(ITreeNode element, IHighlightingConsumer context);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.CSharpSymbolsFromNotCopiedLocalReferencesDaemonStage : CSharpIncrementalDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICSharpFile file);
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.NetCore.ResxVirtualElementsCSharpDaemonStageBase : CSharpDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICSharpFile file);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.NetCore.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.Resolve.AspCSharpPathErrorHandler : PathErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.KnownLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.Stages.UsageChecking.AspMvcUsageAnalysisProcessor : object {
    public sealed virtual void ProcessElement(ITreeNode treeNode, IParameters parameters);
    public sealed virtual void ProcessMemberUsage(ITypeMember member, IReference reference, IParameters parameters);
    public sealed virtual void ProcessDeclaration(IDeclaration declaration, IDeclaredElement element, IParameters parameters);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Asp.CSharp.ZoneMarker : object {
}
[ConfigurableSeverityHighlightingAttribute("Asp.TagAttributeWithOptionalValue", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspAttributeWithOptionalValueWarningHighlighting : AspWarningHighlighting {
    internal static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private ITagAttribute <Attribute>k__BackingField;
    public ITagAttribute Attribute { get; }
    public AspAttributeWithOptionalValueWarningHighlighting(ITagAttribute attribute, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public ITagAttribute get_Attribute();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspErrors")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspCodeFileWithoutInheritsAttributeErrorHighlighting : HtmlHighlightingBase {
    public IAspMainDirective MainDirective;
    private DocumentRange myRange;
    public AspCodeFileWithoutInheritsAttributeErrorHighlighting(IAspMainDirective mainDirective, DocumentRange range);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("Asp.ContentPlaceholderNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspConfigurableContentPlaceholderNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IContentPlaceholderReference> {
    public static string SEVERITY_ID;
    public AspConfigurableContentPlaceholderNotResolvedErrorHighlighting(IContentPlaceholderReference reference);
    protected virtual string CreateTooltip(IContentPlaceholderReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Asp.InvalidControlType", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspConfigurableInvalidControlTypeErrorHighlighting : AspHighlightingWithReferenceBase`1<IReference> {
    public static string SEVERITY_ID;
    public AspConfigurableInvalidControlTypeErrorHighlighting(IReference reference);
}
internal static class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspConfigurableNotResolvedErrorHighlighting : object {
    internal static string SEVERITY_ID;
}
[ConfigurableSeverityHighlightingAttribute("Asp.NotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspConfigurableNotResolvedErrorHighlighting`1 : AspNotResolvedErrorHighlighting`1<T> {
    public AspConfigurableNotResolvedErrorHighlighting`1(T reference, string tooltip, Object[] args);
}
[ConfigurableSeverityHighlightingAttribute("Asp.SkinNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspConfigurableSkinNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<ISkinReference> {
    public static string SEVERITY_ID;
    public AspConfigurableSkinNotResolvedErrorHighlighting(ISkinReference reference);
    protected virtual string CreateTooltip(ISkinReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Asp.ThemeNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspConfigurableThemeNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IThemeReference> {
    public static string SEVERITY_ID;
    public AspConfigurableThemeNotResolvedErrorHighlighting(IThemeReference reference);
    protected virtual string CreateTooltip(IThemeReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Asp.CustomPageParserFilterType", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspCustomPageParserFilterTypeHighlighting : AspWarningHighlighting {
    public IAspMainDirective MainDirective;
    internal static string SEVERITY_ID;
    public AspCustomPageParserFilterTypeHighlighting(IAspMainDirective mainDirective, DocumentRange range);
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("Asp.DeadCode", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspDeadCodeHighlighting : HtmlDeadCodeHighlighting {
    internal static string SeverityID;
    public AspDeadCodeHighlighting(IHtmlTreeNode element, string tooltipTextFormat, DocumentRange documentRange, Object[] args);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspErrors")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspErrorHighlighting : HtmlErrorHighlighting {
    public AspErrorHighlighting(string tooltipTextFormat, DocumentRange range, Object[] args);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspHighlightingAttributeIdProvider : DefaultHighlightingAttributeIdProvider {
    public virtual string GetHighlightingAttributeId(IDeclaredElement declaredElement, bool isDeclaration);
}
[RegisterHighlighterAttribute("ReSharper ASP.NET RunAt attribute")]
[RegisterHighlighterAttribute("ReSharper HTML ID attribute")]
[RegisterConfigurableSeverityAttribute("Asp.DeadCode", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ASPNETDeadCode_Text", "", "", "", "4")]
[RegisterConfigurableSeverityAttribute("Asp.Warning", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ASPNETWarning_Text", "", "", "", "4")]
[RegisterConfigurableSeverityAttribute("Asp.ResolveWarning", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ASPNETResolveWarning_Text", "", "", "", "4")]
[RegisterConfigurableSeverityAttribute("Asp.Image", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongImageSize_Text", "", "", "", "4")]
[RegisterConfigurableSeverityAttribute("Asp.NotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownSymbol_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownSymbolInASPNETAndRelatedTechnologies_Text", "5")]
[RegisterConfigurableSeverityAttribute("Asp.TagAttributeWithOptionalValue", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AttributeWithOptionalValueProblem_Text", "", "", "", "4")]
[RegisterConfigurableSeverityAttribute("Asp.CustomPageParserFilterType", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnsupportedPageParserFilterType_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ReSharperDoesNotSupportPageParserFilterType_Text", "4")]
[RegisterConfigurableSeverityAttribute("AspUnusedRegisterDirectiveHighlighting", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnusedRegisterDirective_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RegisterDirectiveIsUnusedAndCanBeSafely_Text", "4")]
[RegisterConfigurableSeverityAttribute("AspOdsMethodReferenceResolveError", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ObjectDataSourceMethodResolveProblem_Text", "", "", "", "5")]
[RegisterConfigurableSeverityAttribute("Asp.ContentPlaceholderNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownContentPlaceholder_Text", "", "", "", "5")]
[RegisterConfigurableSeverityAttribute("Asp.ThemeNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownTheme_Text", "", "", "", "5")]
[RegisterConfigurableSeverityAttribute("Asp.SkinNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownSkin_Text", "", "", "", "5")]
[RegisterConfigurableSeverityAttribute("Asp.InvalidControlType", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvalidControlTypeConfigurableSeverityTitle", "", "", "", "5")]
public static class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspHighlightingRegistry : object {
    public static string RUN_AT_SERVER_ATTRIBUTE;
    public static string HTML_ID_ATTRIBUTE;
}
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspHighlightingWithReferenceBase`1 : HtmlHighlightingWithReferenceBase`1<T> {
    public AspHighlightingWithReferenceBase`1(T reference, string tooltip, Object[] args);
    protected virtual string CreateTooltip(T reference);
}
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.Asp.Highlightings.AspIdentifierTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
internal class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspIdentifierHighlighting : HtmlHighlightingBase {
    private DocumentRange myRange;
    [CompilerGeneratedAttribute]
private string <AttributeId>k__BackingField;
    public string AttributeId { get; }
    public AspIdentifierHighlighting(string attributeId, DocumentRange range);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AttributeId();
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
    public sealed virtual Nullable`1<int> GetStatisticsKey();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspIdentifierTooltipProvider : IdentifierTooltipProvider`1<AspLanguage> {
    public AspIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
    protected virtual PsiLanguageType SelectPresentationLanguage(IDeclaredElement declaredElement, IFile psiFile);
}
[ConfigurableSeverityHighlightingAttribute("Asp.Image", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspImageWarningHighlighting : AspWarningHighlighting {
    internal static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RealSize>k__BackingField;
    public DocumentRange Range { get; }
    public string RealSize { get; }
    public AspImageWarningHighlighting(DocumentRange range, string realSize, string tooltipTextFormat, Object[] args);
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public string get_RealSize();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspErrors")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspMissingAttributeHighlighting : AspErrorHighlighting {
    [CompilerGeneratedAttribute]
private IAspTag <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MissingAttributeName>k__BackingField;
    public IAspTag Tag { get; }
    public string MissingAttributeName { get; }
    public AspMissingAttributeHighlighting(IAspTag tag, string missingAttributeName, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public IAspTag get_Tag();
    [CompilerGeneratedAttribute]
public string get_MissingAttributeName();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspErrors")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspNotResolvedErrorHighlighting`1 : AspResolveErrorHighlighting`1<T> {
    public AspNotResolvedErrorHighlighting`1(T reference, string tooltip, Object[] args);
}
[ConfigurableSeverityHighlightingAttribute("AspOdsMethodReferenceResolveError", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspOdsMethodReferenceResolveErrorHighlighting : AspResolveErrorHighlighting`1<IOdsMethodReference> {
    public static string SEVERITY_ID;
    public AspOdsMethodReferenceResolveErrorHighlighting(IOdsMethodReference reference);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspErrors")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspResolveErrorHighlighting`1 : AspHighlightingWithReferenceBase`1<T> {
    public AspResolveErrorHighlighting`1(T reference, string tooltip, Object[] args);
}
internal static class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspResolveWarningHighlighting : object {
    public static string SeverityID;
}
[ConfigurableSeverityHighlightingAttribute("Asp.ResolveWarning", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspResolveWarningHighlighting`1 : AspHighlightingWithReferenceBase`1<T> {
    public AspResolveWarningHighlighting`1(T reference);
    public AspResolveWarningHighlighting`1(T reference, string tooltip);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspErrors")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspScriptLanguageErrorHighlighting : AspErrorHighlighting {
    [CompilerGeneratedAttribute]
private ITagAttribute <LanguageAttribute>k__BackingField;
    public ITagAttribute LanguageAttribute { get; }
    public AspScriptLanguageErrorHighlighting(ITagAttribute languageAttribute, string tooltipTextFormat, DocumentRange documentRange, Object[] args);
    [CompilerGeneratedAttribute]
public ITagAttribute get_LanguageAttribute();
    public virtual bool IsValid();
}
internal static class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups : object {
}
[ConfigurableSeverityHighlightingAttribute("AspUnusedRegisterDirectiveHighlighting", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspUnusedRegisterDirectiveHighlighting : AspWarningHighlighting {
    public static string SEVERITY_ID;
    public IAspRegisterDirective RegisterDirective;
    public AspUnusedRegisterDirectiveHighlighting(IAspRegisterDirective registerDirective, DocumentRange documentRange);
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("Asp.Warning", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.AspWarningHighlighting : HtmlWarningHighlighting {
    internal static string SEVERITY_ID;
    public AspWarningHighlighting(string tooltipTextFormat, DocumentRange range, Object[] args);
}
public interface JetBrains.ReSharper.Daemon.Asp.Highlightings.IAspHighlighting {
}
public interface JetBrains.ReSharper.Daemon.Asp.Highlightings.IAspResolveErrorHighlighting {
}
[RegisterHighlighterAttribute("ReSharper ASP.NET MVC Action")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspMvcInfo")]
[DaemonTooltipProviderAttribute("")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcActionHighlighting : MvcHighlightingBase {
    public static string HIGHLIGHTING_ID;
    public MvcActionHighlighting(IMvcReference reference);
}
[RegisterHighlighterAttribute("ReSharper ASP.NET MVC Area")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspMvcInfo")]
[DaemonTooltipProviderAttribute("")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcAreaHighlighting : MvcHighlightingBase {
    public static string HIGHLIGHTING_ID;
    public MvcAreaHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.ActionNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableActionNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableActionNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.AreaNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableAreaNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableAreaNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.ControllerNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableControllerNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableControllerNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.MasterpageNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableMasterpageNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableMasterpageNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.PartialViewNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurablePartialViewNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurablePartialViewNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.TemplateNotResolved", "ASPX")]
[RegisterConfigurableSeverityAttribute("Mvc.ControllerNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownController_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCController_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.ActionNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownAction_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCAction_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.ViewNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownView_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCView_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.PartialViewNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownPartialView_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCPartialView_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.AreaNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownArea_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCArea_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.TemplateNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownTemplate_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCTemplate_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.MasterpageNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownMasterpage_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCMasterpage_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.ViewComponentNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownViewComponent_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCViewComponent_Text", "5")]
[RegisterConfigurableSeverityAttribute("Mvc.ViewComponentViewNotResolved", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownViewComponentViewConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownASPNETMVCViewComponentViewConfigurableSeverityDescription", "5")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableTemplateNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableTemplateNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.ViewComponentNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableViewComponentNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableViewComponentNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.ViewComponentViewNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableViewComponentViewNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableViewComponentViewNotResolvedErrorHighlighting(IMvcReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Mvc.ViewNotResolved", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcConfigurableViewNotResolvedErrorHighlighting : AspConfigurableNotResolvedErrorHighlighting`1<IMvcReference> {
    public static string SEVERITY_ID;
    public MvcConfigurableViewNotResolvedErrorHighlighting(IMvcReference reference);
}
[RegisterHighlighterAttribute("ReSharper ASP.NET MVC Controller")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspMvcInfo")]
[DaemonTooltipProviderAttribute("")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcControllerHighlighting : MvcHighlightingBase {
    public static string HIGHLIGHTING_ID;
    public MvcControllerHighlighting(IMvcReference reference);
}
public abstract class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcHighlightingBase : object {
    private IMvcReference myReference;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    protected MvcHighlightingBase(IMvcReference reference);
    public virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterHighlighterAttribute("ReSharper ASP.NET MVC View Component")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspMvcInfo")]
[DaemonTooltipProviderAttribute("")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcViewComponentHighlighting : MvcHighlightingBase {
    public static string HIGHLIGHTING_ID;
    public MvcViewComponentHighlighting(IMvcReference reference);
}
[RegisterHighlighterAttribute("ReSharper ASP.NET MVC View")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Daemon.Asp.Highlightings.AspStaticHighlightingsGroups/AspMvcInfo")]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.MvcViewHighlighting : MvcHighlightingBase {
    private IMvcViewReference myReference;
    public static string HIGHLIGHTING_ID;
    public string ToolTip { get; }
    public MvcViewHighlighting(IMvcViewReference reference);
    public virtual string get_ToolTip();
    [CanBeNullAttribute]
private string TryGetPath();
    public sealed virtual RichTextBlock TryGetTooltip(HighlighterTooltipKind where);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Highlightings.Mvc.ZoneMarker : object {
}
public static class JetBrains.ReSharper.Daemon.Asp.ImageUtil : object {
    private static IList`1<Pair`2<Func`2<IAspDeclaredElementTypes, Func`2<IPsiModule, IDeclaredType>>, string>> ourImageTags;
    public static string WIDTH_ATTR;
    public static string HEIGHT_ATTR;
    private static Key`1<CachedProjectItemValue`2<IProjectItem, CachedImageSize>> ourImageSizeKey;
    private static ImageUtil();
    [CanBeNullAttribute]
private static ITagAttribute GetImageSrcAttr(ITreeNode element);
    public static CachedImageSize GetImageSize(ITreeNode element, ITagAttribute& src);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Mvc.ZoneMarker : object {
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspAttributesAnalysis : HtmlAnalysis`1<Tuple`3<IHighlightingConsumer, IAspDeclaredElementTypes, IHtmlFile>> {
    public AspAttributesAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`3<IHighlightingConsumer, IAspDeclaredElementTypes, IHtmlFile> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`3<IHighlightingConsumer, IAspDeclaredElementTypes, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspDirectiveAttributesAnalysis : HtmlAnalysis`1<Tuple`3<IHighlightingConsumer, IAspDeclaredElementsCache, IHtmlFile>> {
    public AspDirectiveAttributesAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`3<IHighlightingConsumer, IAspDeclaredElementsCache, IHtmlFile> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`3<IHighlightingConsumer, IAspDeclaredElementsCache, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspDirectivesAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    public AspDirectivesAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspDuplicateAnalysis : HtmlAnalysis`1<Tuple`3<IHighlightingConsumer, IDictionary`2<string, IDictionary`2<IHtmlTagContainer, OneToListMap`2<string, Pair`2<DocumentRange, bool>>>>, IDeclaredType[]>> {
    public AspDuplicateAnalysis(AspLanguage language);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`3<IHighlightingConsumer, IDictionary`2<string, IDictionary`2<IHtmlTagContainer, OneToListMap`2<string, Pair`2<DocumentRange, bool>>>>, IDeclaredType[]> context);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`3<IHighlightingConsumer, IDictionary`2<string, IDictionary`2<IHtmlTagContainer, OneToListMap`2<string, Pair`2<DocumentRange, bool>>>>, IDeclaredType[]> context);
    public virtual void Done(IHtmlFile file, Tuple`3<IHighlightingConsumer, IDictionary`2<string, IDictionary`2<IHtmlTagContainer, OneToListMap`2<string, Pair`2<DocumentRange, bool>>>>, IDeclaredType[]> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspExpressionAnalysis : HtmlAnalysis`1<Tuple`5<IHighlightingConsumer, IWebFileWithCodeBehind, IFile, ISecondaryRangeTranslator, IntentionLanguageSpecific>> {
    public AspExpressionAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`5<IHighlightingConsumer, IWebFileWithCodeBehind, IFile, ISecondaryRangeTranslator, IntentionLanguageSpecific> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`5<IHighlightingConsumer, IWebFileWithCodeBehind, IFile, ISecondaryRangeTranslator, IntentionLanguageSpecific> context);
    [ContractAnnotationAttribute("=>true,expression:notnull;=>false,expression:null")]
private bool CheckExpressionNode(ITreeNode node, TreeTextRange range, IExpression& expression);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspImageAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    public AspImageAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    private static void CheckAttr(IWebAttributeContainer`1<ITagAttribute> tag, string attrName, string attrValue, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspRequiredAttributesAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    private static IClrTypeName ourRequiredAttributeAttributeName;
    public AspRequiredAttributesAnalysis(AspLanguage language);
    private static AspRequiredAttributesAnalysis();
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspScriptAnaysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    public AspScriptAnaysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspScriptletAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    public AspScriptletAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspSemanticAnalysisProvider : HtmlSemanticAnalysisProvider {
    public AspSemanticAnalysisProvider(IEnumerable`1<IHtmlSemanticAnalysis> analyses);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspSyntaxAnalysis : HtmlAnalysis`1<Tuple`3<IHighlightingConsumer, IDictionary`2<Predicate`1<ITreeNode>, Func`2<ITreeNode, Tuple`2<DocumentRange, string>>>, IHtmlFile>> {
    public AspSyntaxAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`3<IHighlightingConsumer, IDictionary`2<Predicate`1<ITreeNode>, Func`2<ITreeNode, Tuple`2<DocumentRange, string>>>, IHtmlFile> context);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspSyntaxAnalysisProvider : HtmlSyntaxAnalysisProvider {
    public AspSyntaxAnalysisProvider(IEnumerable`1<IHtmlSyntaxAnalysis> analyses);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspSyntaxErrorsAnalysis : HtmlSyntaxErrorsAnalysis {
    private IHtmlTokenNodeTypes myTokenNodeTypes;
    public AspSyntaxErrorsAnalysis(AspLanguage language, IAspTokenNodeTypes tokenNodeTypes);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices> context);
    protected virtual bool DoSuppressHighlighting(ITreeNode node, Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspTagClosingAnalysis : HtmlTagClosingAnalysis {
    public AspTagClosingAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    protected virtual bool DoSuppressHighlighting(ITreeNode node, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual bool ShouldBeClosed(IHtmlTag tag, IHtmlTagDeclaredElement htmlTagDeclaredElement);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspTagPrefixesAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, TagPrefixAnalysisData>> {
    public AspTagPrefixesAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, TagPrefixAnalysisData> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, TagPrefixAnalysisData> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.AspVersionRestrictionAnalysis : HtmlAnalysis`1<Tuple`3<IHighlightingConsumer, AspNetVersion, IHtmlFile>> {
    public AspVersionRestrictionAnalysis(AspLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`3<IHighlightingConsumer, AspNetVersion, IHtmlFile> context);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`3<IHighlightingConsumer, AspNetVersion, IHtmlFile> context);
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.IAspSemanticAnalysis {
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.IAspSyntaxAnalysis {
}
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.MvcAppliedData : object {
    [CompilerGeneratedAttribute]
private bool <IsMvcApplied>k__BackingField;
    public bool IsMvcApplied { get; }
    public MvcAppliedData(bool isMvcApplied);
    [CompilerGeneratedAttribute]
public bool get_IsMvcApplied();
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.MvcModelTypeAnalyzer : object {
    private ILanguageManager myLanguageManager;
    private MvcReferencedAssembliesService myMvcReferencedAssembliesService;
    private Key`1<MvcAppliedData> MVC_APPLIED_DATA_KEY;
    public MvcModelTypeAnalyzer(Lifetime lifetime, ILanguageManager languageManager, MvcReferencedAssembliesService mvcReferencedAssembliesService);
    public sealed virtual void Run(ITreeNode element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    private bool IsMvcApplied(ElementProblemAnalyzerData data, IPsiSourceFile sourceFile);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Asp.SkinLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Analysis.SkinAttributesAnalysis : AspAttributesAnalysis {
    public SkinAttributesAnalysis(SkinLanguage language);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`3<IHighlightingConsumer, IAspDeclaredElementTypes, IHtmlFile> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`3<IHighlightingConsumer, IAspDeclaredElementTypes, IHtmlFile> context);
}
public abstract class JetBrains.ReSharper.Daemon.Asp.Stages.AspDaemonStageBase : HtmlDaemonStageBase`2<IAspFile, AspLanguage> {
}
public abstract class JetBrains.ReSharper.Daemon.Asp.Stages.AspImportDirectivesProcessBase`2 : object {
    private IDaemonProcess myDaemonProcess;
    private IAspFile myAspFile;
    private TFile myCodeBehindFile;
    private TSmartResolverProcess mySmartResolverProcess;
    private IContextBoundSettingsStore mySettingsStore;
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    public IDaemonProcess DaemonProcess { get; }
    protected AspImportDirectivesProcessBase`2(IDaemonProcess daemonProcess, IAspFile aspFile, TFile codeBehindFile, TSmartResolverProcess smartResolverProcess, IContextBoundSettingsStore settingsStore);
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    private DaemonStageResult Execute();
    protected abstract virtual void CheckUsingDirective(IAspDirective aspDirective, ITreeNode codeBehindElement, IHighlightingConsumer consumer, TSmartResolverProcess smartResolverProcess);
    [CompilerGeneratedAttribute]
private bool <Execute>b__11_0();
}
public abstract class JetBrains.ReSharper.Daemon.Asp.Stages.AspImportDirectivesStageBase`3 : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected abstract virtual AspImportDirectivesProcessBase`2<TFile, TSmartResolverProcess> CreateProcess(IDaemonProcess process, IAspFile aspFile, TFile codeBehindFile, TSmartResolverProcess smartResolverProcess, IContextBoundSettingsStore settingsStore);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.AspSmartResolverStage : AspDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcessInternal(IAspFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.GlobalErrorStageWithIdentifierHighlighting : AspDaemonStageBase {
    private HighlightingSettingsManager myHighlightingSettingsManager;
    private ResolveHighlighterRegistrar myResolveHighlighterRegistrar;
    private HashSet`1<IAspDirective> myUsedDirectives;
    public GlobalErrorStageWithIdentifierHighlighting(HighlightingSettingsManager highlightingSettingsManager, ResolveHighlighterRegistrar resolveHighlighterRegistrar);
    protected virtual IDaemonStageProcess CreateProcessInternal(IAspFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[DaemonStageAttribute("0")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Asp.Stages.MvcDaemonStage : object {
    private MvcReferencedAssembliesService myMvcReferencedAssembliesService;
    private MvcElementsCache myMvcElementsCache;
    public MvcDaemonStage(SearchDomainFactory searchDomainFactory, MvcReferencedAssembliesService mvcReferencedAssembliesService, MvcElementsCache mvcElementsCache);
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.MvcDaemonStageProcess : object {
    private static IDictionary`2<MvcResolveErrorType, Func`2<IMvcReference, IHighlighting>> ourErrorHighlightings;
    private CollectUsagesStageProcess myCollectUsagesStageProcess;
    private MvcElementsCache myMvcElementsCache;
    private IFile myPsiFile;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    public IDaemonProcess DaemonProcess { get; }
    public MvcDaemonStageProcess(IFile psiFile, IDaemonProcess daemonProcess, CollectUsagesStageProcess collectUsagesStageProcess, MvcElementsCache mvcElementsCache);
    private static MvcDaemonStageProcess();
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    private static DocumentRange GetMvcReferenceHighlightingRange(IMvcReference reference);
    [CanBeNullAttribute]
private static IHighlighting CheckResolved(IMvcReference reference, Func`2<IMvcReference, IHighlighting> highlighter);
}
[SolutionComponentAttribute("0")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Asp.Stages.MvcSpecificFileImageContributor : object {
    private MvcReferencedAssembliesService myMvcReferencedAssembliesService;
    private MvcCache myMvcCache;
    private IPsiFiles myPsiFiles;
    private static ConcurrentDictionary`2<KeyValuePair`2<string, MvcViewLocationType>, Key`1<CachedProjectItemValue`2<IProject, ICollection`1<KeyValuePair`2<Dependency, Hash>>>>> ourCachedViewNameKeys;
    private static ConcurrentDictionary`2<string, Regex> ourCachedLayoutRegex;
    private static String[] ourGroupNames;
    private static IDictionary`2<string, Key`1<string>> ourGroupNameKeys;
    private static MvcKind[] ourMvcControllerKinds;
    public static Dependency Dependency { get; }
    public MvcSpecificFileImageContributor(MvcReferencedAssembliesService mvcReferencedAssembliesService, MvcCache mvcCache, IPsiFiles psiFiles);
    private static MvcSpecificFileImageContributor();
    public static Dependency get_Dependency();
    public sealed virtual IEnumerable`1<KeyValuePair`2<Dependency, Hash>> SolutionDependencies(ISolution solution);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Asp.Stages.MvcSpecificFileImageContributor/<ModuleDependencies>d__8")]
public sealed virtual IEnumerable`1<KeyValuePair`2<Dependency, Hash>> ModuleDependencies(IPsiModule module);
    private static ICollection`1<KeyValuePair`2<Dependency, Hash>> CalcViewNameHashes(IProject project, MvcViewLocationType viewLocationType, VirtualFileSystemPath locationFormat);
    private static Hash CalcHash(IDeclaration declaration);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Asp.Stages.MvcSpecificFileImageContributor/<FileDependencies>d__15")]
public sealed virtual IEnumerable`1<KeyValuePair`2<Dependency, Hash>> FileDependencies(IPsiSourceFile psiSourceFile);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Resolve.AspControlResolveProblemHighlighter : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ResolveErrorType> <ErrorTypes>k__BackingField;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public sealed virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Resolve.AspIgnorableNotResolvedErrorHandler : object {
    private static ResolveErrorType[] ourSupportedErrorTypes;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    private static AspIgnorableNotResolvedErrorHandler();
    public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public sealed virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Resolve.AspNotResolvedErrorHandler : HtmlNotResolvedErrorHandler {
    private AspResolveProblemHighlighter myAspResolveProblemHighlighter;
    public AspNotResolvedErrorHandler(AspResolveProblemHighlighter aspResolveProblemHighlighter, IEnumerable`1<HtmlResolveProblemHighlighter> htmlResolveProblemHighlighters);
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Resolve.AspResolveProblemHighlighter : HtmlResolveProblemHighlighter {
    private static IList`1<Func`2<IReference, IHighlighting>> ourNotResolvedHighlighters;
    private static AspResolveProblemHighlighter();
    public virtual IHighlighting Run(IReference reference);
    private static Func`2<IReference, IHighlighting> CreateNotResolvedErrorHighlighting(Func`2<T, IHighlighting> highlighter);
    private static IHighlighting CreateNotResolvedOdsMethodParameterReferenceHighlighting(IOdsMethodParameterReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.Stages.Resolve.AspStaticErrorHandler : DelegatingToCodeBehindErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.KnownLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.Resolve.MvcErrorHandler : object {
    private static ResolveErrorType[] ourSupportedErrorTypes;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    private static MvcErrorHandler();
    public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public sealed virtual IHighlighting Run(IReference reference);
}
public class JetBrains.ReSharper.Daemon.Asp.Stages.UsageChecking.AspElementPropertiesCalculator : object {
    public sealed virtual bool IsPartialClass(IClass classType);
    public sealed virtual bool IsPartialMethod(IMethod method);
    public sealed virtual bool IsStaticClass(IClass classType);
    public sealed virtual bool CanConvertToConstant(IField field);
    public sealed virtual bool CanConvertToConstant(ILocalVariable local);
    public sealed virtual bool IsRedundantOverload(ITypeMember member);
    public sealed virtual bool IsPrimaryConstructor(IConstructor constructor);
    public sealed virtual bool HasPositionalParameters(ITypeElement typeElement);
    public sealed virtual bool MethodDeclarationHasBody(IDeclaration declaration);
    public sealed virtual bool IsInitializedInDeclaration(IDeclaration declaration);
    public sealed virtual bool IsMemberVirtualByConvention(ITypeElement typeElement, ITypeMember typeMember);
    public sealed virtual IDeclaration GetContainingTypeMember(IDeclaration declaration);
    public sealed virtual IEnumerable`1<ITypeMember> GetPositionalMembers(ITypeElement typeElement);
}
public class JetBrains.ReSharper.Daemon.Asp.Stages.UsageChecking.AspPresentationHelper : PresentationHelper {
    public virtual DocumentRange LowerAccessHighlightingRange(IDeclaration declaration);
}
[ConfigurableSeverityImplementedForLanguageAttribute("UnusedMember.Global", "ASPX")]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.UsageChecking.AspUsageAnalyzer : UsageAnalyzer {
    public AspUsageAnalyzer(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
    protected virtual void ProcessMemberUsage(ITypeMember member, IReference reference, IParameters parameters);
    protected virtual void ProcessDeclaration(IDeclaration declaration, IDeclaredElement element, IParameters parameters);
}
[ConfigurableSeverityImplementedForLanguageAttribute("UnusedMember.Global", "ASPX")]
[ConfigurableSeverityImplementedForLanguageAttribute("NotAccessedField.Global", "ASPX")]
[LanguageAttribute("JetBrains.ReSharper.Psi.Asp.AspLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Asp.Stages.UsageChecking.AspUsageCheckingServices : CLRUsageCheckingServices {
    private AspLanguage myLanguage;
    public AspUsageCheckingServices(AspLanguage language, FileDependency fileDependency, IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
    public virtual bool GetUnusedDeclarationsSupported();
    public virtual IDeclarationInfo CreateWrapperDeclarationInfo(IDeclaration declaration, IDeclaredElement declaredElement);
}
internal class JetBrains.ReSharper.Daemon.Asp.Stages.UsageChecking.AspWrapperDeclarationInfo : WrapperDeclarationInfoBase {
    public IEnumerable`1<IDeclarationInfo> MemberDeclarations { get; }
    public IEnumerable`1<IDeclarationInfo> AccessorDeclarations { get; }
    public IEnumerable`1<IDeclarationInfo> ParameterDeclarations { get; }
    private AspWrapperDeclarationInfo(IDeclaration declaration, WrapperElementInfoBase elementInfo);
    [CanBeNullAttribute]
public static AspWrapperDeclarationInfo Create(IDeclaration declaration, IDeclaredElement element, PsiLanguageType language);
    public virtual IEnumerable`1<IDeclarationInfo> get_MemberDeclarations();
    public virtual IEnumerable`1<IDeclarationInfo> get_AccessorDeclarations();
    public virtual IEnumerable`1<IDeclarationInfo> get_ParameterDeclarations();
}
[ConfigurableSeverityHighlightingAttribute("UnusedImportClause", "ASPX")]
public class JetBrains.ReSharper.Daemon.Asp.VB.Highlightings.AspUnusedImportClauseWarning : UnusedImportClauseWarning {
    private IAspDirective myAspDirective;
    public AspUnusedImportClauseWarning(IAspDirective aspDirective, IImportClause clause);
    public sealed virtual bool IsValid();
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Asp.VB.Stages.AspVBImportDirectivesStage : AspImportDirectivesStageBase`3<VBLanguage, IVBFile, VBSmartResolverProcess> {
    protected virtual AspImportDirectivesProcessBase`2<IVBFile, VBSmartResolverProcess> CreateProcess(IDaemonProcess process, IAspFile aspFile, IVBFile codeBehindFile, VBSmartResolverProcess smartResolverProcess, IContextBoundSettingsStore settingsStore);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.VB.VBLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.VB.Stages.Resolve.AspVBPathErrorHandler : PathErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asp.VB.Stages.VBSymbolsFromNotCopiedLocalReferencesDaemonProcess : VBIncrementalDaemonStageProcess {
    private JetHashSet`1<IPsiModule> myNotCopiedLocalReferencedModules;
    [NotNullAttribute]
private IReferenceProvider myReferenceProvider;
    public VBSymbolsFromNotCopiedLocalReferencesDaemonProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IVBFile file, JetHashSet`1<IPsiModule> notCopiedLocalReferencedModules);
    public virtual void VisitNode(ITreeNode element, IHighlightingConsumer context);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Asp.VB.Stages.VBSymbolsFromNotCopiedLocalReferencesDaemonStage : VBDaemonStageBase {
    public virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IVBFile file);
    protected virtual bool IsSupported(IPsiSourceFile sourceFile, IContextBoundSettingsStore settingsStore);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Asp.VB.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Asp.ZoneMarker : object {
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.MinimalApiDeclarationAnalyzerStageProcess : object {
    private IPsiSourceFile myPsiSourceFile;
    private MinimalApiDeclarationsProvider myMinimalApiDeclarationsProvider;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private IFile <File>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    [NotNullAttribute]
public IFile File { get; }
    public MinimalApiDeclarationAnalyzerStageProcess(IDaemonProcess daemonProcess, IFile file, MinimalApiDeclarationsProvider minimalApiDeclarationsProvider);
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    private void AnalyzeDeclaration(MinimalApiDeclaration declaration, FilteringHighlightingConsumer consumer);
    private void AnalyzeDuplicatedParameters(List`1<RouteSourceWithParameters> parameters, FilteringHighlightingConsumer consumer);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_File();
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ProblemAnalyzers.OptionalParameterProblemAnalyzer : ElementProblemAnalyzer`1<IRouteParameterTreeNode> {
    protected virtual void Run(IRouteParameterTreeNode element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ProblemAnalyzers.RouteTemplateFileHyperlinkHighlighter : ElementProblemAnalyzer`1<IRouteTemplateFile> {
    protected virtual void Run(IRouteTemplateFile element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ProblemAnalyzers.RouteTemplateParameterHighlighter : ElementProblemAnalyzer`1<IRouteParameterTreeNode> {
    protected virtual void Run(IRouteParameterTreeNode element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("0", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ProblemAnalyzers.RouteTemplateParameterMissingConstraintProblemAnalyzer : ElementProblemAnalyzer`1<IRouteParameterTreeNode> {
    private RouteConstraintsCache myRouteConstraintsCache;
    private AspNetHttpEndpointsProvider myEndpointsProvider;
    public RouteTemplateParameterMissingConstraintProblemAnalyzer(RouteConstraintsCache routeConstraintsCache, AspNetHttpEndpointsProvider endpointsProvider);
    protected virtual void Run(IRouteParameterTreeNode routeParameterTreeNode, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    private void AnalyzeMethodArguments(IRouteParameterTreeNode routeParameterTreeNode, IHighlightingConsumer consumer, IParametersOwner method);
    private void AnalyzeControllerArguments(IRouteParameterTreeNode routeParameterTreeNode, IHighlightingConsumer consumer, ITypeElement controller);
    [CanBeNullAttribute]
private IType GetUnliftedParameterType(IParametersOwner method, string parameterName);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ProblemAnalyzers.RouteTemplateParameterNotPassedToMethodProblemAnalyzer : ElementProblemAnalyzer`1<IRouteParameterTreeNode> {
    protected virtual void Run(IRouteParameterTreeNode element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ProblemAnalyzers.RouteTemplateSyntaxErrorProblemAnalyzer : ElementProblemAnalyzer`1<IRouteTemplateSyntaxErrorElementTreeNode> {
    protected virtual void Run(IRouteTemplateSyntaxErrorElementTreeNode element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    private DocumentRange GetDocumentRange(IRouteTemplateSyntaxErrorElementTreeNode treeNode);
    private DocumentRange GetRangeOfNodes(ITreeNode startNode);
    private DocumentRange GetShortestParentRange(ITreeNode treeNode);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ProblemAnalyzers.RouteValueSubstitutionHighlighter : ElementProblemAnalyzer`1<IRouteTokenTreeNode> {
    protected virtual void Run(IRouteTokenTreeNode element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
public abstract class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateDaemonStageBase : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IRouteTemplateFile file);
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateErrorStage : RouteTemplateDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IRouteTemplateFile file);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateErrorStageProcess : RouteTemplateHighlighter`1<IHighlightingConsumer> {
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    public RouteTemplateErrorStageProcess(IDaemonProcess daemonProcess, IRouteTemplateFile file);
    protected virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    private void ProcessReference(IReference reference, IHighlightingConsumer highlightingConsumer);
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    [ItemNotNullAttribute]
private ConstraintArgument[] GetConstructorArguments(IConstructor constructor, IRouteParameterConstraintTreeNode constraint, RouteParameterConstraintArgumentsHelper routeParameterConstraintArgumentsHelper);
    private int CountStartWhitespaces(string s);
    private int CountEndWhitespaces(string s);
}
[HighlightingSourceAttribute]
public static class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateHandlersAnalyzerUtil : object {
    public static Dictionary`2<string, RouteParameterWithPosition[]> GetParametersOccurrences(RouteSourceWithParameters[] routes);
    public static void TryHighlightParameters(IFile file, string parameter, RouteParameterWithPosition[] occurrences, FilteringHighlightingConsumer consumer);
    public static void AnalyzeParametersTypes(FilteringHighlightingConsumer consumer, IParametersOwner handler, OneToSetMap`2<string, RouteParameterConstraintInstance> parametersConstraints);
    private static ParameterTypeValidationResult Validate(IType parameterType, IType constraintType, PredefinedType predefinedType);
}
public abstract class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateHighlighter`1 : object {
    [CompilerGeneratedAttribute]
private IFile <File>k__BackingField;
    public IFile File { get; }
    protected RouteTemplateHighlighter`1(IRouteTemplateFile file);
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_File();
    public void HighlightInFile(T consumer);
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element, T context);
    public virtual bool IsProcessingFinished(T context);
    public virtual void ProcessBeforeInterior(ITreeNode element, T context);
    protected abstract virtual void VisitNode(ITreeNode node, T context);
    public virtual void ProcessAfterInterior(ITreeNode element, T context);
}
[DaemonStageAttribute("0")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateIdentifierHighlightingStage : RouteTemplateDaemonStageBase {
    private ElementProblemAnalyzerRegistrar myElementProblemAnalyzerRegistrar;
    public RouteTemplateIdentifierHighlightingStage(ElementProblemAnalyzerRegistrar elementProblemAnalyzerRegistrar);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IRouteTemplateFile file);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateIdentifierHighlightingStageProcess : RouteTemplateHighlighter`1<IHighlightingConsumer> {
    private IElementAnalyzerDispatcher myElementAnalyzerDispatcher;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    public RouteTemplateIdentifierHighlightingStageProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settings, IRouteTemplateFile file, ElementProblemAnalyzerRegistrar problemAnalyzerRegistrar);
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    protected virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateMatchingBracesContextHighlighter : MatchingBraceContextHighlighterBase`1<RouteTemplateLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    [CanBeNullAttribute]
private ITokenNode GetMatchingToTheLeft(ITreeNode node);
    [CanBeNullAttribute]
private ITokenNode GetMatchingToTheRight(ITreeNode node);
    [CanBeNullAttribute]
private ITokenNode GetRightBracketNodeThroughSplits(TTreeNode currentNode, Func`2<TTreeNode, ITokenNode> getRightBracket, Func`2<IRouteTemplateSegmentPartTreeNode, TTreeNode> nodeSelector);
    [CanBeNullAttribute]
private ITokenNode GetLeftBracketNodeThroughSplits(TTreeNode currentNode, Func`2<TTreeNode, ITokenNode> getLeftBracket, Func`2<IRouteTemplateSegmentPartTreeNode, TTreeNode> nodeSelector);
    [CanBeNullAttribute]
private ITokenNode GetMatchingBracketNodeThroughSplits(TTreeNode currentNode, Func`2<TTreeNode, ITokenNode> getBracket, Func`2<IEnumerable`1<IPartiallyKnownStringPart>, IEnumerable`1<IPartiallyKnownStringPart>> partsOrderer, Func`3<DocumentRange, DocumentRange, bool> rangeComparer, Func`2<TreeNodeCollection`1<IRouteTemplatePartTreeNode>, IRouteTemplatePartTreeNode> targetSegmentSelector, Func`2<TreeNodeCollection`1<IRouteTemplateSegmentPartTreeNode>, IRouteTemplateSegmentPartTreeNode> targetSegmentPartSelector, Func`2<IRouteTemplateSegmentPartTreeNode, TTreeNode> nodeSelector);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
}
[DaemonStageAttribute("0")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateMethodsAnalyzerStage : object {
    private AspNetHttpEndpointsProvider myEndpointsProvider;
    private AspNetRoutingTypeCache myAspNetRoutingTypeCache;
    private MvcElementsCache myMvcElementsCache;
    private RoutingAttributesProvider myRoutingAttributesProvider;
    private MinimalApiDeclarationsProvider myMinimalApiDeclarationsProvider;
    public RouteTemplateMethodsAnalyzerStage(AspNetHttpEndpointsProvider endpointsProvider, AspNetRoutingTypeCache aspNetRoutingTypeCache, MvcElementsCache mvcElementsCache, RoutingAttributesProvider routingAttributesProvider, MinimalApiDeclarationsProvider minimalApiDeclarationsProvider);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateMethodsAnalyzerStage/<CreateProcess>d__6")]
public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.RouteTemplateMethodsAnalyzerStageProcess : object {
    private IFile myFile;
    private AspNetHttpEndpointsProvider myEndpointsProvider;
    private MvcElementsCache myMvcElementsCache;
    private RoutingAttributesProvider myRoutingAttributesProvider;
    private IAspNetRoutingTypeCache myAspNetRoutingTypeCache;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    [NotNullAttribute]
public IFile File { get; }
    public RouteTemplateMethodsAnalyzerStageProcess(IDaemonProcess daemonProcess, IFile file, AspNetHttpEndpointsProvider endpointsProvider, MvcElementsCache mvcElementsCache, AspNetRoutingTypeCache aspNetRoutingTypeCache, RoutingAttributesProvider routingAttributesProvider);
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    private void AnalyzeMissingInTemplateParameters(FilteringHighlightingConsumer consumer, ICSharpParametersOwnerDeclaration parametersOwnerDeclaration, OneToSetMap`2<string, RouteParameterConstraintInstance> parametersConstraints);
    private void AnalyzeDuplicatedParameters(FilteringHighlightingConsumer consumer, List`1<RouteSourceWithParameters> controllerRoutesParameters, List`1<RouteSourceWithParameters> methodRoutesParameters);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual IFile get_File();
    private void AnalyzeCommonActionRoutesPrefixes(FilteringHighlightingConsumer consumer, IClassDeclaration controllerDeclaration, IClass controller);
    private static bool SegmentsEquals(IRouteSegmentTreeNode a, IRouteSegmentTreeNode b);
    private static bool PartsEquals(IRouteTemplateSegmentPartTreeNode partA, IRouteTemplateSegmentPartTreeNode partB);
    private void AnalyzeNotPassedParameters(FilteringHighlightingConsumer consumer, IClass controller, List`1<RouteSourceWithParameters> controllerRouteParameters);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Daemon.RouteTemplates.ZoneMarker : object {
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.ActionRoutePrefixCanBeExtractedToControllerRoute", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ActionsRoutePrefixCanBeExtractedToControllersRouteConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WhenAllControllersActionsRouteTemplatesHaveSamePrefixesItsPossibleToExtractTheirCommonPrefixToControllersRouteTemplateConfigurableSeverityDescription", "2")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.ActionRoutePrefixCanBeExtractedToControllerRoute", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.ActionRoutePrefixCanBeExtractedToControllerRouteHighlighting : object {
    [CompilerGeneratedAttribute]
private string <ExtractablePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExtractableSegmentsCount>k__BackingField;
    private DocumentRange myDocumentRange;
    [CompilerGeneratedAttribute]
private List`1<IEditableRouteTemplateProvider> <ControllerSources>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IEditableRouteTemplateProvider> <ActionSources>k__BackingField;
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IClassDeclaration <ControllerDeclaration>k__BackingField;
    public string ExtractablePrefix { get; }
    public int ExtractableSegmentsCount { get; }
    public List`1<IEditableRouteTemplateProvider> ControllerSources { get; }
    public List`1<IEditableRouteTemplateProvider> ActionSources { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IClassDeclaration ControllerDeclaration { get; }
    public ActionRoutePrefixCanBeExtractedToControllerRouteHighlighting(string extractablePrefix, int extractableSegmentsCount, DocumentRange documentRange, List`1<IEditableRouteTemplateProvider> controllerSources, List`1<IEditableRouteTemplateProvider> actionSources, IClassDeclaration controllerDeclaration);
    [CompilerGeneratedAttribute]
public string get_ExtractablePrefix();
    [CompilerGeneratedAttribute]
public int get_ExtractableSegmentsCount();
    [CompilerGeneratedAttribute]
public List`1<IEditableRouteTemplateProvider> get_ControllerSources();
    [CompilerGeneratedAttribute]
public List`1<IEditableRouteTemplateProvider> get_ActionSources();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    [CompilerGeneratedAttribute]
public IClassDeclaration get_ControllerDeclaration();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.AmbiguousMatchingConstraintConstructor", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MoreThanOneParameterConstraintsConstructorMatchedConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MoreThanOneParameterConstraintsConstructorMatchedConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.AmbiguousMatchingConstraintConstructor", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.AmbiguousMatchingConstraintConstructorErrorHighlighting : object {
    private ITypeElement myConstraintType;
    private IRouteParameterConstraintTreeNode myElement;
    private static string SEVERITY_ID;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AmbiguousMatchingConstraintConstructorErrorHighlighting(ITypeElement constraintType, IRouteParameterConstraintTreeNode element);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.ConstraintArgumentCannotBeConverted", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterConstraintArgumentCannotBeConvertedToTargetTypeConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterConstraintArgumentCannotBeConvertedToTargetTypeConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.ConstraintArgumentCannotBeConverted", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.ConstraintArgumentCannotBeConvertedHighlighting : object {
    public static string SEVERITY_ID;
    [CanBeNullAttribute]
private string myArgumentValue;
    private IParameter myParameter;
    private DocumentRange myDocumentRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ConstraintArgumentCannotBeConvertedHighlighting(string argumentValue, IParameter parameter, DocumentRange documentRange);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.ControllerRouteParameterIsNotPassedToMethods", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ControllersRouteParameterCanBePassedToMethodsConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ControllersRouteParameterCanBePassedToMethodsConfigurableSeverityDescription", "2")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.ControllerRouteParameterIsNotPassedToMethods", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.ControllerRouteParameterNotPassedToMethodHighlighting : object {
    [CompilerGeneratedAttribute]
private RouteParameterInstance <RouteParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private IPsiModule <PsiModule>k__BackingField;
    [CompilerGeneratedAttribute]
private IParametersOwner[] <TargetMethods>k__BackingField;
    private ITreeNode myHighlightedNode;
    public static string SEVERITY_ID;
    public RouteParameterInstance RouteParameter { get; }
    public IPsiModule PsiModule { get; }
    public IParametersOwner[] TargetMethods { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ControllerRouteParameterNotPassedToMethodHighlighting(IPsiModule psiModule, RouteParameterWithPosition routeParameterWithPosition, IParametersOwner[] targetMethods);
    [CompilerGeneratedAttribute]
public RouteParameterInstance get_RouteParameter();
    [CompilerGeneratedAttribute]
public IPsiModule get_PsiModule();
    [CompilerGeneratedAttribute]
public IParametersOwner[] get_TargetMethods();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.DuplicatedParameter", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterDeclaredInRouteMoreThanOnceConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterDeclaredInRouteMoreThanOnceConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.DuplicatedParameter", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.DuplicatedRouteParameterHighlighting : object {
    public static string SEVERITY_ID;
    private string myDuplicatedParameter;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicatedRouteParameterHighlighting(string duplicatedParameter, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    private string GetTooltip();
    public sealed virtual DocumentRange CalculateRange();
}
public interface JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.IRouteTemplateHighlighting {
}
public interface JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.IRouteTemplateSyntaxHighlighting {
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.MatchingConstraintConstructorNotResolved", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MatchingParameterConstraintsConstructorNotFoundConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MatchingParameterConstraintsConstructorNotFoundConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.MatchingConstraintConstructorNotResolved", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.MatchingConstraintConstructorNotFoundErrorHighlighting : object {
    private ITypeElement myConstraintType;
    private IRouteParameterConstraintTreeNode myElement;
    private static string SEVERITY_ID;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public MatchingConstraintConstructorNotFoundErrorHighlighting(ITypeElement constraintType, IRouteParameterConstraintTreeNode element);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.MethodMissingRouteParameters", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NotAllRouteParametersArePassedToMethodConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NotAllRouteParametersArePassedToMethodConfigurableSeverityDescription", "2")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.MethodMissingRouteParameters", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.MethodMissingRouteParametersHighlighting : object {
    private DocumentRange myHighlightingRange;
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IParametersOwner <ParametersOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private OneToSetMap`2<string, RouteParameterConstraintInstance> <ConstraintsByParameterNames>k__BackingField;
    public IParametersOwner ParametersOwner { get; }
    public OneToSetMap`2<string, RouteParameterConstraintInstance> ConstraintsByParameterNames { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public MethodMissingRouteParametersHighlighting(ICSharpParametersOwnerDeclaration parametersOwnerDeclaration, OneToSetMap`2<string, RouteParameterConstraintInstance> constraintsByParameterNames);
    [CompilerGeneratedAttribute]
public IParametersOwner get_ParametersOwner();
    [CompilerGeneratedAttribute]
public OneToSetMap`2<string, RouteParameterConstraintInstance> get_ConstraintsByParameterNames();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.OptionalParameterCanBePrecededOnlyBySinglePeriod", "", "CodeInfo", "Optional parameter can be preceded only by single period ('.') in the segment", "Optional parameter can be preceded only by single period ('.') in the segment", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.OptionalParameterCanBePrecededOnlyBySinglePeriod", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.OptionalParameterCanBePrecededOnlyBySinglePeriodHighlighting : object {
    private IRouteSegmentTreeNode mySegment;
    public static string SEVERITY_ID;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public OptionalParameterCanBePrecededOnlyBySinglePeriodHighlighting(IRouteSegmentTreeNode segment);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.OptionalParameterMustBeAtTheEndOfSegment", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OptionalParameterMustBeAtTheEndOfTheSegmentConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OptionalParameterMustBeAtTheEndOfTheSegmentConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.OptionalParameterMustBeAtTheEndOfSegment", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.OptionalParameterMustBeAtTheEndOfSegmentHighlighting : object {
    private IRouteSegmentTreeNode mySegment;
    public static string SEVERITY_ID;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public OptionalParameterMustBeAtTheEndOfSegmentHighlighting(IRouteSegmentTreeNode segment);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.ParameterConstraintCanBeSpecified", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterConstraintCanBeAddedDueToTypeOfMethodArgumentConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterConstraintCanBeAddedDueToTypeOfMethodArgumentConfigurableSeverityDescription", "2")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.ParameterConstraintCanBeSpecified", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.ParameterConstraintCanBeSpecifiedHighlighting : object {
    private IType myArgumentType;
    [CompilerGeneratedAttribute]
private IRouteParameterTreeNode <RouteParameterTreeNode>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteParameterConstraint <SuggestedConstraint>k__BackingField;
    public static string SEVERITY_ID;
    public IRouteParameterTreeNode RouteParameterTreeNode { get; }
    public RouteParameterConstraint SuggestedConstraint { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ParameterConstraintCanBeSpecifiedHighlighting(IRouteParameterTreeNode routeParameterTreeNode, RouteParameterConstraint suggestedConstraint, IType argumentType);
    [CompilerGeneratedAttribute]
public IRouteParameterTreeNode get_RouteParameterTreeNode();
    [CompilerGeneratedAttribute]
public RouteParameterConstraint get_SuggestedConstraint();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.ParameterTypeAndConstraintsMismatch", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeOfParameterDoesntSatisfyConstraintsDeclaredInRouteTemplateConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeOfParameterDoesntSatisfyConstraintsDeclaredInRouteTemplateConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.ParameterTypeAndConstraintsMismatch", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.ParameterTypeAndConstraintsMismatchHighlighting : object {
    private DocumentRange myHighlightingRange;
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IParameter <Parameter>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteParameterConstraint <Constraint>k__BackingField;
    [CompilerGeneratedAttribute]
private IType <ProposedType>k__BackingField;
    public IParameter Parameter { get; }
    public RouteParameterConstraint Constraint { get; }
    [CanBeNullAttribute]
public IType ProposedType { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ParameterTypeAndConstraintsMismatchHighlighting(IParameter parameter, DocumentRange highlightingRange, RouteParameterConstraint constraint, IType proposedType);
    [CompilerGeneratedAttribute]
public IParameter get_Parameter();
    [CompilerGeneratedAttribute]
public RouteParameterConstraint get_Constraint();
    [CompilerGeneratedAttribute]
public IType get_ProposedType();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.ParameterTypeCanBeMadeStricter", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParametersTypeCanBeMadeStricterDueToAppliedConstraintsConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParametersTypeCanBeMadeStricterDueToAppliedConstraintsConfigurableSeverityDescription", "3")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.ParameterTypeCanBeMadeStricter", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.ParameterTypeCanBeMoreStrictHighlighting : object {
    private DocumentRange myHighlightingRange;
    [CompilerGeneratedAttribute]
private IParameter <Parameter>k__BackingField;
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private RouteParameterConstraint <Constraint>k__BackingField;
    public IParameter Parameter { get; }
    public RouteParameterConstraint Constraint { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ParameterTypeCanBeMoreStrictHighlighting(IParameter parameter, DocumentRange highlightingRange, RouteParameterConstraint constraint);
    [CompilerGeneratedAttribute]
public IParameter get_Parameter();
    [CompilerGeneratedAttribute]
public RouteParameterConstraint get_Constraint();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.RouteParameterConstraintNotResolved", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterConstraintNotResolvedConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterConstraintNotResolvedConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.RouteParameterConstraintNotResolved", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteParameterConstraintNotResolvedErrorHighlighting : object {
    private IRouteParameterConstraintTreeNode myElement;
    private static string SEVERITY_ID;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RouteParameterConstraintNotResolvedErrorHighlighting(IRouteParameterConstraintTreeNode element);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.RouteParameterIsNotPassedToMethod", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterCanBePassedToMethodConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteParameterCanBePassedToMethodConfigurableSeverityDescription", "2")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.RouteParameterIsNotPassedToMethod", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteParameterNotPassedToMethodHighlighting : object {
    [CompilerGeneratedAttribute]
private IRouteParameterTreeNode <RouteParameterTreeNode>k__BackingField;
    public static string SEVERITY_ID;
    public IRouteParameterTreeNode RouteParameterTreeNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RouteParameterNotPassedToMethodHighlighting(IRouteParameterTreeNode routeParameterTreeNode);
    [CompilerGeneratedAttribute]
public IRouteParameterTreeNode get_RouteParameterTreeNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterStaticHighlightingsGroupAttribute("JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteTemplateErrors_Text", "True")]
public static class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteTemplateErrors : object {
}
[RegisterHighlighterAttribute("ReSharper ASP.NET Route Template Parameter")]
[RegisterHighlighterAttribute("ReSharper ASP.NET Route Template Token Substitution")]
[RegisterHighlighterAttribute("ReSharper ASP.NET Route Template")]
public static class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteTemplateHighlightingAttributeIds : object {
    public static string PARAMETER;
    public static string TOKEN_SUBSTITUTION;
    public static string HYPERLINK;
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.SymbolNotResolved", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SymbolNotResolvedConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SymbolNotResolvedConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.SymbolNotResolved", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteTemplateResolveWarning : SyntaxErrorBase {
    public static string SEVERITY_ID;
    public RouteTemplateResolveWarning(IReference reference);
    private static string GetTooltip(IReference reference);
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.SyntaxError", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SyntaxErrorConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SyntaxErrorConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.SyntaxError", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteTemplateSyntaxError : SyntaxErrorBase {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IRouteTemplateSyntaxErrorElementTreeNode <TreeNode>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteTemplateSyntaxErrorType <ErrorType>k__BackingField;
    public IRouteTemplateSyntaxErrorElementTreeNode TreeNode { get; }
    public RouteTemplateSyntaxErrorType ErrorType { get; }
    public RouteTemplateSyntaxError(IRouteTemplateSyntaxErrorElementTreeNode treeNode, string tooltip, DocumentRange range, RouteTemplateSyntaxErrorType errorType);
    [CompilerGeneratedAttribute]
public IRouteTemplateSyntaxErrorElementTreeNode get_TreeNode();
    [CompilerGeneratedAttribute]
public RouteTemplateSyntaxErrorType get_ErrorType();
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
[DaemonTooltipProviderAttribute("")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteTemplateSyntaxHighlighting : object {
    [CompilerGeneratedAttribute]
private DocumentRange <range>P;
    [CompilerGeneratedAttribute]
private string <AttributeId>k__BackingField;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public string AttributeId { get; }
    public RouteTemplateSyntaxHighlighting(string attributeId, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    [CompilerGeneratedAttribute]
public sealed virtual string get_AttributeId();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("RouteTemplates.RouteTokenNotResolved", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteTokenNotResolvedConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RouteTokenNotResolvedConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("RouteTemplates.RouteTokenNotResolved", "RouteTemplate")]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.RouteTokenNotResolvedError : object {
    private IRouteTokenKeyTreeNode myElement;
    private static string SEVERITY_ID;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RouteTokenNotResolvedError(IRouteTokenKeyTreeNode element);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.Highlightings.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.AspRouteTemplates.ZoneMarker : object {
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxStaticHighlightingsGroups/AsxxErrors")]
public class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxErrorHighlighting : AsxxHighlightingBase {
    public AsxxErrorHighlighting(string tooltipTextFmt, DocumentRange documentRange, Object[] args);
    public virtual bool IsValid();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
public class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxHighlightingAttributeIdProvider : DefaultHighlightingAttributeIdProvider {
    public virtual string GetHighlightingAttributeId(IDeclaredElement declaredElement, bool isDeclaration);
}
public abstract class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxHighlightingBase : object {
    private DocumentRange myDocumentRange;
    private string myTooltipText;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    protected AsxxHighlightingBase(DocumentRange documentRange);
    protected AsxxHighlightingBase(string tooltipTextFmt, DocumentRange documentRange, Object[] args);
    public virtual string get_ToolTip();
    public virtual string get_ErrorStripeToolTip();
    public abstract virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
public abstract class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxHighlightingWithReferenceBase`1 : AsxxHighlightingBase {
    private T myReference;
    private ResolveErrorType myErrorType;
    private string myTooltip;
    public T Reference { get; }
    public ResolveErrorType ErrorType { get; }
    public string ToolTip { get; }
    protected AsxxHighlightingWithReferenceBase`1(T reference, string tooltip, Object[] args);
    public T get_Reference();
    public ResolveErrorType get_ErrorType();
    public virtual string get_ToolTip();
    protected virtual string CreateTooltip(T reference);
    public virtual bool IsValid();
}
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxIdentifierTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
internal class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxIdentifierHighlighting : AsxxHighlightingBase {
    [CompilerGeneratedAttribute]
private string <AttributeId>k__BackingField;
    public string AttributeId { get; }
    public AsxxIdentifierHighlighting(string attributeId, DocumentRange range);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AttributeId();
    public virtual bool IsValid();
    public sealed virtual Nullable`1<int> GetStatisticsKey();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxIdentifierTooltipProvider : IdentifierTooltipProvider`1<AsxxLanguage> {
    public AsxxIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
    protected virtual PsiLanguageType SelectPresentationLanguage(IDeclaredElement declaredElement, IFile psiFile);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxStaticHighlightingsGroups/AsxxErrors")]
public class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxNotResolvedErrorHighlighting`1 : AsxxResolveErrorHighlighting`1<T> {
    public AsxxNotResolvedErrorHighlighting`1(T reference, string tooltip, Object[] args);
}
[RegisterConfigurableSeverityAttribute("Asxx.PathError", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathErrorConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathErrorConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Asxx.PathError", "ASXX")]
public class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxPathWarningHighlighting : AsxxHighlightingWithReferenceBase`1<IPathReference> {
    internal static string SEVERITY_ID;
    public AsxxPathWarningHighlighting(IPathReference pathReference);
    protected virtual string CreateTooltip(IPathReference reference);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxStaticHighlightingsGroups/AsxxErrors")]
public class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxResolveErrorHighlighting`1 : AsxxHighlightingWithReferenceBase`1<T> {
    public AsxxResolveErrorHighlighting`1(T reference, string tooltip, Object[] args);
}
internal static class JetBrains.ReSharper.Daemon.Asxx.Highlightings.AsxxStaticHighlightingsGroups : object {
}
public interface JetBrains.ReSharper.Daemon.Asxx.Highlightings.IAsxxHighlighting {
}
public interface JetBrains.ReSharper.Daemon.Asxx.Highlightings.IAsxxResolveProblemHighlighting {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Asxx.Stages.AsxxDaemonBehavior : LanguageSpecificDaemonBehavior {
    public virtual ErrorStripeRequestWithDescription InitialErrorStripe(IPsiSourceFile sourceFile);
}
public abstract class JetBrains.ReSharper.Daemon.Asxx.Stages.AsxxDaemonStageBase : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected abstract virtual IDaemonStageProcess CreateProcessInternal(IAsxxFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Asxx.Stages.AsxxSmartResolverStage : AsxxDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcessInternal(IAsxxFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Asxx.Stages.GlobalErrorStageWithIdentifierHighlighting : AsxxDaemonStageBase {
    private HighlightingSettingsManager myHighlightingSettingsManager;
    private ResolveHighlighterRegistrar myResolveHighlighterRegistrar;
    public GlobalErrorStageWithIdentifierHighlighting(HighlightingSettingsManager highlightingSettingsManager, ResolveHighlighterRegistrar resolveHighlighterRegistrar);
    protected virtual IDaemonStageProcess CreateProcessInternal(IAsxxFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asxx.Stages.Resolve.AsxxNotResolvedErrorHandler : object {
    private static ResolveErrorType[] ourSupportedErrorTypes;
    private static IList`1<Func`2<IReference, IHighlighting>> ourNotResolvedHighlighters;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    private static AsxxNotResolvedErrorHandler();
    public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public sealed virtual IHighlighting Run(IReference reference);
    private static Func`2<IReference, IHighlighting> CreateNotResolvedErrorHighlighting(Func`2<T, IHighlighting> highlighter);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Asxx.Stages.Resolve.AsxxPathErrorHandler : PathErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
public class JetBrains.ReSharper.Daemon.Asxx.Stages.UsageChecking.AsxxElementPropertiesCalculator : object {
    public sealed virtual bool IsPartialClass(IClass classType);
    public sealed virtual bool IsPartialMethod(IMethod method);
    public sealed virtual bool IsStaticClass(IClass classType);
    public sealed virtual bool CanConvertToConstant(IField field);
    public sealed virtual bool CanConvertToConstant(ILocalVariable local);
    public sealed virtual bool IsRedundantOverload(ITypeMember member);
    public sealed virtual bool IsPrimaryConstructor(IConstructor constructor);
    public sealed virtual bool HasPositionalParameters(ITypeElement typeElement);
    public sealed virtual bool MethodDeclarationHasBody(IDeclaration declaration);
    public sealed virtual bool IsInitializedInDeclaration(IDeclaration declaration);
    public sealed virtual bool IsMemberVirtualByConvention(ITypeElement typeElement, ITypeMember typeMember);
    public sealed virtual IDeclaration GetContainingTypeMember(IDeclaration declaration);
    public sealed virtual IEnumerable`1<ITypeMember> GetPositionalMembers(ITypeElement typeElement);
}
public class JetBrains.ReSharper.Daemon.Asxx.Stages.UsageChecking.AsxxPresentationHelper : PresentationHelper {
    public virtual string DeclaredElementName(IDeclaredElement declaredElement);
    public virtual string GetInternalTerm(IDeclaration declaration);
    public virtual string GetStaticTerm();
    public virtual string GetVirtualTerm(IDeclaration declaration);
    public virtual DocumentRange LowerAccessHighlightingRange(IDeclaration declaration);
}
[ConfigurableSeverityImplementedForLanguageAttribute("UnusedMember.Global", "ASXX")]
internal class JetBrains.ReSharper.Daemon.Asxx.Stages.UsageChecking.AsxxUsageAnalyzer : UsageAnalyzer {
    public AsxxUsageAnalyzer(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
    public virtual void ProcessElement(ITreeNode node, IParameters parameters);
}
[ConfigurableSeverityImplementedForLanguageAttribute("UnusedMember.Global", "ASXX")]
[ConfigurableSeverityImplementedForLanguageAttribute("NotAccessedField.Global", "ASXX")]
[LanguageAttribute("JetBrains.ReSharper.Psi.Asxx.AsxxLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Asxx.Stages.UsageChecking.AsxxUsageCheckingServices : UsageCheckingServices {
    public AsxxUsageCheckingServices(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
    public virtual bool GetUnusedDeclarationsSupported();
    public virtual IDeclarationInfo CreateWrapperDeclarationInfo(IDeclaration declaration, IDeclaredElement declaredElement);
}
internal class JetBrains.ReSharper.Daemon.Asxx.Stages.UsageChecking.AsxxWrapperDeclarationInfo : WrapperDeclarationInfoBase {
    public IEnumerable`1<IDeclarationInfo> MemberDeclarations { get; }
    public IEnumerable`1<IDeclarationInfo> AccessorDeclarations { get; }
    public IEnumerable`1<IDeclarationInfo> ParameterDeclarations { get; }
    private AsxxWrapperDeclarationInfo(IDeclaration declaration, WrapperElementInfoBase elementInfo);
    public static AsxxWrapperDeclarationInfo Create(IDeclaration declaration, IDeclaredElement element);
    public virtual IEnumerable`1<IDeclarationInfo> get_MemberDeclarations();
    public virtual IEnumerable`1<IDeclarationInfo> get_AccessorDeclarations();
    public virtual IEnumerable`1<IDeclarationInfo> get_ParameterDeclarations();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Asxx.ZoneMarker : object {
}
[RegisterConfigurableSeverityAttribute("SymbolFromNotCopiedLocallyReferenceUsedWarning", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SymbolFromModuleThatMightBeMissingAtRuntimeConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HighlightsSymbolsUsedFromAReferencedModuleThatIsNotCopiedLocallyConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("SymbolFromNotCopiedLocallyReferenceUsedWarning", "CSHARP,VBASIC")]
public class JetBrains.ReSharper.Daemon.CSharpAndVB.Highlightings.SymbolFromNotCopiedLocallyReferenceUsedWarning : object {
    public static string SeverityId;
    private IReference myReference;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SymbolFromNotCopiedLocallyReferenceUsedWarning(IReference reference, IPsiModule psiModule);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
public class JetBrains.ReSharper.Daemon.Css.Highlightings.CssCustomHighlighting : object {
    private string myAtributeId;
    private DocumentRange myRange;
    public string AttributeId { get; }
    public string ErrorStripeToolTip { get; }
    public string ToolTip { get; }
    public CssCustomHighlighting(string attributeId, DocumentRange range);
    public sealed virtual string get_AttributeId();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual string get_ToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.Css.Impl.CssIdentifierTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
public class JetBrains.ReSharper.Daemon.Css.Highlightings.CssCustomHighlightingWithToolTip : CssCustomHighlighting {
    public CssCustomHighlightingWithToolTip(string attributeId, DocumentRange documentRange);
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/GutterMarks")]
internal class JetBrains.ReSharper.Daemon.Css.Highlightings.CssInheritanceMark : object {
    private ICollection`1<Tuple`2<ISelector, ICssProperty>> myProperties;
    private InterruptibleLazy`1<String[]> myMessages;
    private DocumentRange myRange;
    public string AttributeId { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CssInheritanceMark(ICollection`1<Tuple`2<ISelector, ICssProperty>> properties, DocumentRange range);
    public sealed virtual string get_AttributeId();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Css.Highlightings.CssInheritanceMark/<GetBulbItems>d__12")]
public sealed virtual IEnumerable`1<BulbMenuItem> GetBulbItems();
}
[RegisterHighlighterGroupAttribute("CSS", "CSS", "4")]
internal class JetBrains.ReSharper.Daemon.Css.Highlightings.CssSettingsNamesProvider : PrefixBasedSettingsNamesProvider {
}
internal interface JetBrains.ReSharper.Daemon.Css.Highlightings.ICssValueHighlighting {
    public int Precedence { get; }
    public abstract virtual int get_Precedence();
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Impl.BrowserCompatibilityChecker : object {
    private BrowserCompatibilityInfo myBrowserCompatibility;
    private ICssDefinitionsStorage myStorage;
    private IList`1<string> myVendorPrefixes;
    public BrowserCompatibilityChecker(BrowserCompatibilityInfo browserCompatibility, ICssDefinitionsStorage storage);
    public void CheckBrowserCompatibility(IHighlightingConsumer consumer, IReference reference);
    public void CheckBrowserCompatibility(IHighlightingConsumer consumer, IReference reference, IList`1<ICssDefinitionDeclaredElement> elements);
    private void AddHighlightingsBasedOnDefinitionCompatibility(IHighlightingConsumer consumer, IReference reference, IEnumerable`1<ICssDefinitionDeclaredElement> elements);
    private IHighlighting GetBrowserCompatibilityHighlightingBasedOnDefinitionCompatibility(IReference reference, ICssDefinitionDeclaredElement element, BrowserCompatibilityInfo elementCompatibility);
    private static void FilterBrowsers(IList`1<BrowserInfo> browsers, ITreeNode node);
    public void CheckVendorPropertiesOrder(IHighlightingConsumer consumer, ICssPropertyBlock cssPropertyBlock);
    private string RemoveVendorPrefix(string propertyName);
    private static bool IsStandardProperty(ICssProperty property);
    private void AddHighlightingsBasedOnCaniuseData(IHighlightingConsumer consumer, IReference reference, IEnumerable`1<ICssDefinitionDeclaredElement> elements);
    private void AddHighlightingsBasedOnCaniuseData(IHighlightingConsumer consumer, IReference reference, ICssDefinitionDeclaredElement element, string caniuseId);
    [CompilerGeneratedAttribute]
private string <CheckVendorPropertiesOrder>b__9_2(ICssProperty x);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.KnownLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Impl.CssClassResolveProblemHighlighter : object {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Css.Impl.CssClassResolveProblemHighlighter/<get_ErrorTypes>d__1")]
public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Css.Impl.CssDaemonBehaviour : LanguageSpecificDaemonBehavior {
    public virtual ErrorStripeRequestWithDescription InitialErrorStripe(IPsiSourceFile sourceFile);
}
public abstract class JetBrains.ReSharper.Daemon.Css.Impl.CssDaemonStageBase : object {
    protected bool ShouldRunOnGenerated { get; }
    protected abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected virtual bool get_ShouldRunOnGenerated();
    protected static bool IsSupported(IPsiSourceFile sourceFile);
}
public abstract class JetBrains.ReSharper.Daemon.Css.Impl.CssDaemonStageProcessBase : TreeNodeVisitor`1<IHighlightingConsumer> {
    private IDaemonProcess myDaemonProcess;
    private IContextBoundSettingsStore mySettingsStore;
    private IDocument myDocument;
    private ICssFile myFile;
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    public IDaemonProcess DaemonProcess { get; }
    public IPsiSourceFile SourceFile { get; }
    public IDocument Document { get; }
    public IPsiModule PsiModule { get; }
    public ICssFile File { get; }
    protected CssDaemonStageProcessBase(IDaemonProcess process, IContextBoundSettingsStore settingsStore, ICssFile file);
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    public sealed virtual IDaemonProcess get_DaemonProcess();
    public IPsiSourceFile get_SourceFile();
    public IDocument get_Document();
    public IPsiModule get_PsiModule();
    public ICssFile get_File();
    public sealed virtual bool IsProcessingFinished(IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    protected void HighlightInFile(Action`2<ICssFile, IHighlightingConsumer> fileHighlighter, Action`1<DaemonStageResult> commiter);
    [CompilerGeneratedAttribute]
private void <Execute>b__18_0(ICssFile file, IHighlightingConsumer consumer);
}
public class JetBrains.ReSharper.Daemon.Css.Impl.CssFileStructure : FileStructureBase {
    public CssFileStructure(ICssFile file);
}
[FileStructureExplorerAttribute("16")]
public class JetBrains.ReSharper.Daemon.Css.Impl.CssFileStructureExplorer : object {
    public sealed virtual IFileStructure ExploreFile(IFile file, IContextBoundSettingsStore settingsStore, Predicate`1<DocumentRange> isRangeInvalidated);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.Css.Impl.CssIdentifierTooltipProvider : IdentifierTooltipProvider`1<CssLanguage> {
    private ISolution mySolution;
    public CssIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
    protected virtual RichTextBlock GetRichTooltip(IHighlighter highlighter, HighlighterTooltipKind where);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Impl.CssResolveProblemHighlighter : object {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Css.Impl.CssResolveProblemHighlighter/<get_ErrorTypes>d__1")]
public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.CssLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Impl.CssVariableResolveProblemHighlighter : object {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
internal class JetBrains.ReSharper.Daemon.Css.Impl.HighlightingAccumulator : object {
    private List`1<ICssValueHighlighting> myHighlightings;
    [CompilerGeneratedAttribute]
private int <HighestPrecedence>k__BackingField;
    public IEnumerable`1<IHighlighting> Highlightings { get; }
    public int HighlightingCount { get; }
    public int HighestPrecedence { get; private set; }
    public void AddHighlighting(ICssValueHighlighting highlighting);
    public IEnumerable`1<IHighlighting> get_Highlightings();
    public int get_HighlightingCount();
    [CompilerGeneratedAttribute]
public int get_HighestPrecedence();
    [CompilerGeneratedAttribute]
private void set_HighestPrecedence(int value);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Css.Impl.ResolveProblemHighlighter : object {
    private static DeclaredElementPresenterStyle ourPresenterStyle;
    private bool myIsInjectedCss;
    private ResolveHighlighterRegistrar myRegistrar;
    public ResolveProblemHighlighter(ICssFile file, ResolveHighlighterRegistrar resolveHighlighterRegistrar);
    private static ResolveProblemHighlighter();
    public void CheckForResolveProblems(IHighlightingConsumer consumer, ITreeNode element);
    private void CheckForResolveProblems(IHighlightingConsumer consumer, IReference reference);
    private void CheckForObsolete(IHighlightingConsumer consumer, IReference reference);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Impl.SingleOrDoubleColonInspector : object {
    private BrowserCompatibilityInfo myBrowserCompatibility;
    private ICssDefinitionsStorage myStorage;
    private IList`1<BrowserInfo> myTwoColonsPseudoElementSyntaxIncompatibleBrowsers;
    public SingleOrDoubleColonInspector(BrowserCompatibilityInfo browserCompatibility, ICssDefinitionsStorage storage);
    public void Inspect(IHighlightingConsumer consumer, IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.InjectedCssLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Injected.InjectedCssClassResolveProblemHighlighter : CssClassResolveProblemHighlighter {
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.InjectedCssLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Injected.InjectedCssResolveProblemHighlighter : CssResolveProblemHighlighter {
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Css.InjectedCssLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Injected.InjectedCssVariableResolveProblemHighlighter : CssVariableResolveProblemHighlighter {
    public virtual IHighlighting Run(IReference reference);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Css.MatchingBrace.CssMatchingBraceContextHighlighter : MatchingBraceContextHighlighterBase`1<CssLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
    private RichTextBlock GetHintText(ITextControl textControl, ITreeNode lBraceNode);
}
[OptionsPageAttribute("CssInspectionSettings", "Inspections", "JetBrains.ReSharper.Feature.Services.Resources.FeaturesEnvironmentOptionsThemedIcons/CodeInspections")]
public class JetBrains.ReSharper.Daemon.Css.Options.CssInspectionOptionsPage : CustomSimpleOptionsPage {
    public static string PID;
    public CssInspectionOptionsPage(Lifetime lifetime, OptionsSettingsSmartContext optionsSettingsSmartContext, CssDefinitions cssDefinitions, ProductSettingsLocation productSettingsLocation);
    private static BrowserCompatibilityInfo GetBrowserCompatibility(string browsersText, CssDefinitions cssDefinitions);
    private void PrintBrowsersCompatibility(IEnumerable`1<BrowserInfoViewModel> browserInfoViewModels);
}
public class JetBrains.ReSharper.Daemon.Css.Options.ViewModel.BrowserInfoViewModel : ObservableObject {
    private InterruptibleLazy`1<SmallBrowserInfo> myLazySmallBrowserInfo;
    public Action BrowserInfoChanged;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IconId <IconId>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperty`1<bool> <IsEnabledProperty>k__BackingField;
    public string Name { get; }
    public string Id { get; }
    public bool IsBrowserEnabled { get; public set; }
    public IconId IconId { get; }
    public int Version { get; public set; }
    public IProperty`1<bool> IsEnabledProperty { get; }
    public BrowserInfoViewModel(Lifetime lifetime, InterruptibleLazy`1<SmallBrowserInfo> lazySmallBrowserInfo, IconId iconId, string name, string id);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Id();
    public bool get_IsBrowserEnabled();
    public void set_IsBrowserEnabled(bool value);
    [CompilerGeneratedAttribute]
public IconId get_IconId();
    public int get_Version();
    public void set_Version(int value);
    private void FireBrowserInfoChanged();
    [CompilerGeneratedAttribute]
public sealed virtual IProperty`1<bool> get_IsEnabledProperty();
}
public class JetBrains.ReSharper.Daemon.Css.Options.ViewModel.SmallBrowserInfo : object {
    [CompilerGeneratedAttribute]
private bool <IsBrowserEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    public bool IsBrowserEnabled { get; public set; }
    public int Version { get; public set; }
    public SmallBrowserInfo(InterruptibleLazy`1<BrowserCompatibilityInfo> browserCompatibility, string id);
    [CompilerGeneratedAttribute]
public bool get_IsBrowserEnabled();
    [CompilerGeneratedAttribute]
public void set_IsBrowserEnabled(bool value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
}
[ConfigurableSeverityHighlightingAttribute("CssBrowserCompatibility", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssBrowserCompatibilityWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICollection`1<BrowserInfo> <Browsers>k__BackingField;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ICollection`1<BrowserInfo> Browsers { get; }
    public IReference Reference { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CssBrowserCompatibilityWarning(ICollection`1<BrowserInfo> browsers, IReference reference, IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
public ICollection`1<BrowserInfo> get_Browsers();
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssCaniuseFeatureRequiresPrefix", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssCaniuseFeatureRequiresPrefixWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICssCaniuseDefinition <CaniuseDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<BrowserInfo> <Browsers>k__BackingField;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ICssCaniuseDefinition CaniuseDefinition { get; }
    public ICollection`1<BrowserInfo> Browsers { get; }
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CssCaniuseFeatureRequiresPrefixWarning(ICssCaniuseDefinition caniuseDefinition, ICollection`1<BrowserInfo> browsers, IReference reference);
    [CompilerGeneratedAttribute]
public ICssCaniuseDefinition get_CaniuseDefinition();
    [CompilerGeneratedAttribute]
public ICollection`1<BrowserInfo> get_Browsers();
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssCaniuseUnsupportedFeature", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssCaniuseUnsupportedFeatureWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICssCaniuseDefinition <CaniuseDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<BrowserInfo> <Browsers>k__BackingField;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ICssCaniuseDefinition CaniuseDefinition { get; }
    public ICollection`1<BrowserInfo> Browsers { get; }
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CssCaniuseUnsupportedFeatureWarning(ICssCaniuseDefinition caniuseDefinition, ICollection`1<BrowserInfo> browsers, IReference reference);
    [CompilerGeneratedAttribute]
public ICssCaniuseDefinition get_CaniuseDefinition();
    [CompilerGeneratedAttribute]
public ICollection`1<BrowserInfo> get_Browsers();
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssColorValidatorStage : CssDaemonStageBase {
    private BrowserCompatibilitySettingProvider myBrowserCompatibilitySettingProvider;
    private CssDefinitions myCssDefinitions;
    public CssColorValidatorStage(BrowserCompatibilitySettingProvider browserCompatibilitySettingProvider, CssDefinitions cssDefinitions);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[RegisterStaticHighlightingsGroupAttribute("JetBrains.ReSharper.Daemon.Resources.Strings", "CssErrors_Text", "True")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssErrors : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssIdentifierHighlightingStage : CssDaemonStageBase {
    [CompilerGeneratedAttribute]
private ConfigurableIdentifierHighlightingStageService <identifierHighlightingStageService>P;
    protected bool ShouldRunOnGenerated { get; }
    public CssIdentifierHighlightingStage(ConfigurableIdentifierHighlightingStageService identifierHighlightingStageService);
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssNamingConsistencyStage : CssDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssNotResolvedError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CssNotResolvedError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssObsolete", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssObsoleteWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Text { get; }
    public DocumentRange DocumentRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public int Precedence { get; }
    public CssObsoleteWarning(string text, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
    public sealed virtual int get_Precedence();
}
[ConfigurableSeverityHighlightingAttribute("CssPropertyDoesNotOverrideVendorProperty", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssPropertyDoesNotOverrideVendorPropertyWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICssProperty <Property>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ICssProperty Property { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CssPropertyDoesNotOverrideVendorPropertyWarning(ICssProperty property);
    [CompilerGeneratedAttribute]
public ICssProperty get_Property();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Css.Stages.CssErrors")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssSyntaxError : object {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Text { get; }
    public DocumentRange DocumentRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CssSyntaxError(string text, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssSyntaxHighlightingProcess : CssDaemonStageProcessBase {
    private VisualElementHighlighter myVisualElementHighlighter;
    private bool myIsInjectedCss;
    public CssSyntaxHighlightingProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, ICssFile file);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public virtual void VisitAtrulesetValue(IAtrulesetValue atrulesetValueParam, IHighlightingConsumer context);
    public virtual void VisitCssPropertyValue(ICssPropertyValue cssPropertyValueParam, IHighlightingConsumer context);
    public virtual void VisitMediaFeature(IMediaFeature mediaFeatureParam, IHighlightingConsumer context);
    private void HighlightCssValue(ITreeNode treeNode, IHighlightingConsumer context);
    private static bool HaveAlienNodes(IErrorElement node);
    private static int FixOffset(int offset, TextRange range);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssSyntaxHighlightingStage : CssDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssUnusedVariableDeclarationProcess : CssDaemonStageProcessBase {
    private ISymbolTable mySymbolTable;
    public CssUnusedVariableDeclarationProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, ICssFile file);
    public virtual void VisitCssPropertyStatement(ICssPropertyStatement propertyStatement, IHighlightingConsumer context);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssUnusedVariableDeclarationStage : CssDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[ConfigurableSeverityHighlightingAttribute("CssBrowserCompatibility", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.CssValueBrowserCompatibilityWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICollection`1<BrowserInfo> <Browsers>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private IPsiSourceFile <SourceFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ICollection`1<BrowserInfo> Browsers { get; }
    public DocumentRange DocumentRange { get; }
    public IPsiSourceFile SourceFile { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public int Precedence { get; }
    public CssValueBrowserCompatibilityWarning(ICollection`1<BrowserInfo> browsers, DocumentRange documentRange, IPsiSourceFile sourceFile);
    [CompilerGeneratedAttribute]
public ICollection`1<BrowserInfo> get_Browsers();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public IPsiSourceFile get_SourceFile();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
    public sealed virtual int get_Precedence();
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssValueValidatorProcess : CssDaemonStageProcessBase {
    private static DeclaredElementPresenterStyle ourKindNamePresenter;
    private ISolution mySolution;
    private BrowserCompatibilityInfo myBrowserCompatibility;
    private BrowserCompatibilityChecker myBrowserCompatibilityChecker;
    private bool myIsTheOnlyPsiFileForTheSourceFile;
    public CssValueValidatorProcess(IDaemonProcess process, ISolution solution, IContextBoundSettingsStore settingsStore, ICssFile file, BrowserCompatibilityInfo browserCompatibility, ICssDefinitionsStorage storage);
    private static CssValueValidatorProcess();
    public virtual void VisitCssProperty(ICssProperty cssProperty, IHighlightingConsumer context);
    private void ValidateElements(IReference reference, Func`2<T, HighlightingAccumulator> validateDeclaredElement, IHighlightingConsumer context);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Css.Stages.CssValueValidatorProcess/<MergeIntersectingInvalidValueErrors>d__8")]
private static IEnumerable`1<IHighlighting> MergeIntersectingInvalidValueErrors(IEnumerable`1<IHighlighting> highlightings);
    private static string ChooseCssVersion(IEnumerable`1<CssLanguageVersion> versions);
    private HighlightingAccumulator ValidatePropertyValue(ICssProperty cssProperty, ICssPropertyDeclaredElement element);
    private void CheckImportant(TreeNodeCollection`1<IImportant> importants, IHighlightingConsumer context);
    public virtual void VisitMediaFeature(IMediaFeature mediaFeatureParam, IHighlightingConsumer context);
    private HighlightingAccumulator ValidateMediaFeatureValue(IMediaFeature mediaFeatureParam, ICssMediaFeatureDeclaredElement element);
    public virtual void VisitPseudoFunctionSelector(IPseudoFunctionSelector pseudoFunctionSelectorParam, IHighlightingConsumer context);
    public virtual void VisitPseudoClassSelector(IPseudoClassSelector pseudoClassSelectorParam, IHighlightingConsumer consumer);
    public virtual void VisitPseudoElementSelector(IPseudoElementSelector pseudoElementSelectorParam, IHighlightingConsumer consumer);
    public virtual void VisitCssInvocationExpression(ICssInvocationExpression cssInvocationExpressionParam, IHighlightingConsumer context);
    public virtual void VisitCssPropertyBlock(ICssPropertyBlock cssPropertyBlockParam, IHighlightingConsumer context);
    private void ValidateInvocation(IInvocationExpression invocationExpression, IHighlightingConsumer context);
    private HighlightingAccumulator ValidateInvocationValue(IInvocationExpression invocationExpression, ICssFunction element);
    private void ValidateValue(ICssDefinitionDeclaredElement element, ICssValueDefinition valueDefinition, LinkedList`1<ICssTreeNode> nodes, HighlightingAccumulator highlightingAccumulator);
    private void AddHighlighting(ICssDefinitionDeclaredElement element, HighlightingAccumulator highlightingAccumulator, ResultFactory factory);
    private static bool IsVendorValue(ITreeNode treeNode);
    private static string GetStringValue(ITreeNode treeNode);
    private static int CompareDescriptionKey(Pair`2<sbyte, DocumentRange> a, Pair`2<sbyte, DocumentRange> b);
    private static int CompareDocumentRange(DocumentRange a, DocumentRange b);
    private static DocumentRange GetErrorRange(IInvocationExpression invocationExpression);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssValueValidatorStage : CssDaemonStageBase {
    [CompilerGeneratedAttribute]
private BrowserCompatibilitySettingProvider <browserCompatibilitySettingProvider>P;
    [CompilerGeneratedAttribute]
private CssDefinitions <cssDefinitions>P;
    public CssValueValidatorStage(BrowserCompatibilitySettingProvider browserCompatibilitySettingProvider, CssDefinitions cssDefinitions);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssVariousProblemAnalyzerProcess : CssDaemonStageProcessBase {
    private ResolveProblemHighlighter myResolveProblemHighlighter;
    private SingleOrDoubleColonInspector mySingleOrDoubleColonInspector;
    public CssVariousProblemAnalyzerProcess(IDaemonProcess process, ResolveHighlighterRegistrar resolveHighlighterRegistrar, IContextBoundSettingsStore settingsStore, ICssFile file, BrowserCompatibilityInfo browserCompatibility, ICssDefinitionsStorage storage);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void VisitMedia(IMedia mediaParam, IHighlightingConsumer context);
    public virtual void VisitRuleset(IRuleset rulesetParam, IHighlightingConsumer context);
    public virtual void VisitKeyframes(IKeyframes keyframesParam, IHighlightingConsumer context);
    public virtual void VisitAtruleset(IAtruleset atrulesetParam, IHighlightingConsumer context);
    public virtual void VisitPage(IPage pageParam, IHighlightingConsumer context);
    public virtual void VisitCssLiteralExpression(ICssLiteralExpression cssLiteralExpressionParam, IHighlightingConsumer context);
    private static bool IsEmpty(ICssBlock block);
    private static bool IsHslArgument(ITreeNode node);
    public virtual void VisitPseudoClassSelector(IPseudoClassSelector pseudoClassSelectorParam, IHighlightingConsumer context);
    public virtual void VisitPseudoElementSelector(IPseudoElementSelector pseudoElementSelectorParam, IHighlightingConsumer context);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Css.Stages.CssVariousProblemAnalyzerStage : CssDaemonStageBase {
    [CompilerGeneratedAttribute]
private ResolveHighlighterRegistrar <resolveHighlighterRegistrar>P;
    [CompilerGeneratedAttribute]
private BrowserCompatibilitySettingProvider <browserCompatibilitySettingProvider>P;
    [CompilerGeneratedAttribute]
private CssDefinitions <cssDefinitions>P;
    public CssVariousProblemAnalyzerStage(ResolveHighlighterRegistrar resolveHighlighterRegistrar, BrowserCompatibilitySettingProvider browserCompatibilitySettingProvider, CssDefinitions cssDefinitions);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[ConfigurableSeverityHighlightingAttribute("DeclarationIsEmpty", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.DeclarationIsEmptyWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    public ITreeNode Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DeclarationIsEmptyWarning(ITreeNode node);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DoubleColonsExpected", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.DoubleColonsExpectedError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITokenNode <Node>k__BackingField;
    public ITokenNode Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DoubleColonsExpectedError(ITokenNode node);
    [CompilerGeneratedAttribute]
public ITokenNode get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DoubleColonsPreferred", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.DoubleColonsPreferredWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITokenNode <Node>k__BackingField;
    public ITokenNode Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DoubleColonsPreferredWarning(ITokenNode node);
    [CompilerGeneratedAttribute]
public ITokenNode get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvalidValue", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.EmptyCustomPropertyValueError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    public DocumentRange DocumentRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public EmptyCustomPropertyValueError(DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("HexColorValueWithAlpha", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.HexColorValueWithAlphaError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICssColorExpression <Node>k__BackingField;
    public ICssColorExpression Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public HexColorValueWithAlphaError(ICssColorExpression node);
    [CompilerGeneratedAttribute]
public ICssColorExpression get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Css.Stages.IdentifierHighlighterProcess : CssDaemonStageProcessBase {
    private bool myIsInjectedCss;
    public IdentifierHighlighterProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, ICssFile file, bool isInjected);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void VisitMediaFeature(IMediaFeature mediaFeatureParam, IHighlightingConsumer context);
    public virtual void VisitIdSelector(IIdSelector idSelectorParam, IHighlightingConsumer context);
    public virtual void VisitClassSelector(IClassSelector classSelectorParam, IHighlightingConsumer context);
    public virtual void VisitCssInvocationExpression(ICssInvocationExpression cssInvocationExpressionParam, IHighlightingConsumer context);
    public virtual void VisitPseudoFunctionSelector(IPseudoFunctionSelector pseudoFunctionSelectorParam, IHighlightingConsumer context);
    public virtual void VisitPseudoClassSelector(IPseudoClassSelector pseudoClassSelectorParam, IHighlightingConsumer context);
    public virtual void VisitPseudoElementSelector(IPseudoElementSelector pseudoElementSelectorParam, IHighlightingConsumer context);
    public virtual void VisitAttributeName(IAttributeName attributeNameParam, IHighlightingConsumer context);
    public virtual void VisitCssProperty(ICssProperty cssPropertyParam, IHighlightingConsumer context);
    public virtual void VisitCssVariableDeclarationName(ICssVariableDeclarationName cssVariableDeclarationNameParam, IHighlightingConsumer context);
    public virtual void VisitCssVariableExpression(ICssVariableExpression cssVariableExpressionParam, IHighlightingConsumer context);
}
[ConfigurableSeverityHighlightingAttribute("CssBrowserCompatibility", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.IncompatibleDoubleColonsWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICollection`1<BrowserInfo> <Browsers>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ICollection`1<BrowserInfo> Browsers { get; }
    public ITokenNode Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IncompatibleDoubleColonsWarning(ICollection`1<BrowserInfo> browsers, ITokenNode node);
    [CompilerGeneratedAttribute]
public ICollection`1<BrowserInfo> get_Browsers();
    [CompilerGeneratedAttribute]
public ITokenNode get_Node();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.Css.Stages.InheritanceMarksStage : CssDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, ICssFile file);
}
[ConfigurableSeverityHighlightingAttribute("InvalidValue", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.InvalidValueError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private CssLanguageVersion <CssVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Text { get; }
    public DocumentRange DocumentRange { get; }
    public CssLanguageVersion CssVersion { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public int Precedence { get; }
    public InvalidValueError(string text, DocumentRange documentRange, CssLanguageVersion cssVersion);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public CssLanguageVersion get_CssVersion();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
    public sealed virtual int get_Precedence();
}
[ConfigurableSeverityHighlightingAttribute("PathNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.PathNotResolvedError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IPathReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private FileResolveErrorType <ErrorType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IPathReference Reference { get; }
    public FileResolveErrorType ErrorType { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public PathNotResolvedError(IPathReference reference, FileResolveErrorType errorType);
    [CompilerGeneratedAttribute]
public IPathReference get_Reference();
    [CompilerGeneratedAttribute]
public FileResolveErrorType get_ErrorType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantCssHack", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.RedundantCssHackWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Node { get; }
    public string Text { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public int Precedence { get; }
    public RedundantCssHackWarning(ITreeNode node, string text);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
    public sealed virtual int get_Precedence();
}
[ConfigurableSeverityHighlightingAttribute("Redundant", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.RedundantWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Node { get; }
    public string Text { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantWarning(ITreeNode node, string text);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("CssNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownCSSSymbol", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveSymbolWithSpecifiedName", "5")]
[RegisterConfigurableSeverityAttribute("PathNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveFileSystemPath", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveFileSystemPath1", "5")]
[RegisterConfigurableSeverityAttribute("UnknownCssVendorExtension", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownVendorSpecificExtension", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveVendorSpecificExtension", "2")]
[RegisterConfigurableSeverityAttribute("UnknownCssClass", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownCSSClass", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveCSSClassWithSpecifiedName", "4")]
[RegisterConfigurableSeverityAttribute("UnknownCssVariable", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownCustomProperty", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveCustomPropertyWithSpecifiedName", "4")]
[RegisterConfigurableSeverityAttribute("InvalidValue", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvalidValue", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvalidCSSValue", "5")]
[RegisterConfigurableSeverityAttribute("ValueShouldHaveUnits", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ValueShouldHaveUnits", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSValueShouldHaveUnits", "5")]
[RegisterConfigurableSeverityAttribute("UnexpectedValue", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ValueIsUnexpected", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ThisValueWillBeIgnored", "5")]
[RegisterConfigurableSeverityAttribute("HexColorValueWithAlpha", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvalidHexadecimalValueOfColor", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HexadecimalValueOfColorWithAlphaComponentIsNotSupported", "5")]
[RegisterConfigurableSeverityAttribute("SyntaxIsNotAllowed", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SyntaxIsNotAllowedInSpecifiedCSSVersion", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SyntaxIsNotAllowedInSpecifiedCSSVersion2", "4")]
[RegisterConfigurableSeverityAttribute("CssObsolete", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSSymbolIsObsolete", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSSymbolIsConsideredObsoleteInSpecifiedLanguageVersion", "2")]
[RegisterConfigurableSeverityAttribute("CssBrowserCompatibility", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSSymbolSyntaxIsNotCompatibleWithASpecificBrowser", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSSymbolSyntaxIsNotCompatibleWithASpecificBrowser3", "4")]
[RegisterConfigurableSeverityAttribute("CssCaniuseUnsupportedFeature", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSFeatureIsNotSupportedByASpecificBrowser", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AccordingToTheCaniuseComDataCSSFeatureIsNotSupportedByASpecificBrowser", "2")]
[RegisterConfigurableSeverityAttribute("CssCaniuseFeatureRequiresPrefix", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSFeatureRequiresVendorPrefixForASpecificBrowser", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AccordingToTheCaniuseComDataCSSFeatureRequiresVendorPrefixForASpecificBrowser", "2")]
[RegisterConfigurableSeverityAttribute("CssPropertyDoesNotOverrideVendorProperty", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PropertyDoesNotOverrideVendorPrefixedProperty", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "StandardPropertyShouldBeSetAfterVendorPrefixedProperty", "4")]
[RegisterConfigurableSeverityAttribute("RequiresFallbackColor", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RequiresFallbackColor", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FallbackColorHexOrRGBShouldPrecedeColorWithNewFormatRgbaHslAndHsla", "4")]
[RegisterConfigurableSeverityAttribute("DoubleColonsExpected", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TwoColonsExpected", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OnlyTwoColonSyntaxMayBeUsedInTheContext", "5")]
[RegisterConfigurableSeverityAttribute("DoubleColonsPreferred", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TwoColonsPreferred", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NewerTwoColonSyntaxIsSupportedByAllSpecifiedBrowsers", "3")]
[RegisterConfigurableSeverityAttribute("Redundant", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantCode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CodeIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("RedundantUnits", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantMeasureUnit", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnitOfMeasureIsRedundantForZeroValue", "4")]
[RegisterConfigurableSeverityAttribute("RedundantCssHack", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantCSSHack", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CSSHackIsRedundantDueToCurrentBrowserCompatibilityConfiguration", "4")]
[RegisterConfigurableSeverityAttribute("DeclarationIsEmpty", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DeclarationIsEmpty", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DeclarationDoesntContainAnyProperties", "4")]
public class JetBrains.ReSharper.Daemon.Css.Stages.RegisterSeverityComponentAFFD9D5A4FED75A61D38C0B0B70CF5318BEE4C8183177F8D71F20C147D43B406 : object {
}
[ConfigurableSeverityHighlightingAttribute("RequiresFallbackColor", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.RequiresFallbackColorWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICssInvocationExpression <Node>k__BackingField;
    public ICssInvocationExpression Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RequiresFallbackColorWarning(ICssInvocationExpression node);
    [CompilerGeneratedAttribute]
public ICssInvocationExpression get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SyntaxIsNotAllowed", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.SyntaxIsNotAllowedError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private ICssVersionSpecific <Node>k__BackingField;
    public DocumentRange DocumentRange { get; }
    public ICssVersionSpecific Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SyntaxIsNotAllowedError(DocumentRange documentRange, ICssVersionSpecific node);
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public ICssVersionSpecific get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UndeclaredVariableError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UndeclaredVariableError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnknownCssVariable", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UndeclaredVariableWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UndeclaredVariableWarning(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnexpectedValue", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnexpectedValueError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeRange <TreeRange>k__BackingField;
    [CompilerGeneratedAttribute]
private ICssDefinitionDeclaredElement <DeclaredElement>k__BackingField;
    [CompilerGeneratedAttribute]
private IProject <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Text { get; }
    public ITreeRange TreeRange { get; }
    public ICssDefinitionDeclaredElement DeclaredElement { get; }
    public IProject Project { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public int Precedence { get; }
    public UnexpectedValueError(string text, ITreeRange treeRange, ICssDefinitionDeclaredElement declaredElement, IProject project);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public ITreeRange get_TreeRange();
    [CompilerGeneratedAttribute]
public ICssDefinitionDeclaredElement get_DeclaredElement();
    [CompilerGeneratedAttribute]
public IProject get_Project();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
    public sealed virtual int get_Precedence();
}
[ConfigurableSeverityHighlightingAttribute("RedundantUnits", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnitMeasureRedundantWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICssLiteralExpression <Expression>k__BackingField;
    public ICssLiteralExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnitMeasureRedundantWarning(ICssLiteralExpression expression);
    [CompilerGeneratedAttribute]
public ICssLiteralExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownAnimationError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownAnimationError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownColorProfileError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownColorProfileError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnknownCssClass", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownCssClassError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownCssClassError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownCssPropertyError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownCssPropertyError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnknownCssVendorExtension", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownCssVendorExtensionError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownCssVendorExtensionError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnknownCssVendorExtension", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownCssVendorValueExtensionError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public int Precedence { get; }
    public UnknownCssVendorValueExtensionError(ITreeNode node);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
    public sealed virtual int get_Precedence();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownFunctionError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownFunctionError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownMediaFeatureError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownMediaFeatureError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownPageError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownPageError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownPseudoClassError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownPseudoClassError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownPseudoElementError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownPseudoElementError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CssNotResolved", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnknownPseudoFunctionError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownPseudoFunctionError(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("Redundant", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.UnusedVariableWarning : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICssPropertyStatement <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ICssPropertyStatement Node { get; }
    public string Text { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedVariableWarning(ICssPropertyStatement node, string text);
    [CompilerGeneratedAttribute]
public ICssPropertyStatement get_Node();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ValueShouldHaveUnits", "CSS")]
public class JetBrains.ReSharper.Daemon.Css.Stages.ValueShouldHaveUnitsError : object {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ICssPrimitiveValueDefinition> <Definitions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Node { get; }
    public ICollection`1<ICssPrimitiveValueDefinition> Definitions { get; }
    public string Text { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public int Precedence { get; }
    public ValueShouldHaveUnitsError(ITreeNode node, ICollection`1<ICssPrimitiveValueDefinition> definitions, string text);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    [CompilerGeneratedAttribute]
public ICollection`1<ICssPrimitiveValueDefinition> get_Definitions();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual bool IsValid();
    public sealed virtual int get_Precedence();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Css.ZoneMarker : object {
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Angular2Html.Angular2HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Angular2.Angular2HtmlInJsStringsSyntaxHighlighterAnalysis : HtmlSyntaxHighlighterAnalysisBase {
    private IAngular2HtmlTokenNodeTypes myTokenNodeTypes;
    public Angular2HtmlInJsStringsSyntaxHighlighterAnalysis(Angular2HtmlLanguage language, IAngular2HtmlTokenNodeTypes tokenNodeTypes);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    protected virtual void HighlightAttributeValueElement(Tuple`2<IHighlightingConsumer, IHtmlFile> context, IHtmlAttributeValue attributeValueElement);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[RegisterConfigurableSeverityAttribute("AngularHtml.Banana", "", "CodeSmell", "'Banana in a box' [()] violation in Angular 2 binding", "Angular 2 requires parentheses inside brackets for two-direction bindings", "4")]
[ConfigurableSeverityHighlightingAttribute("AngularHtml.Banana", "Angular2HTML")]
public class JetBrains.ReSharper.Daemon.Html.Angular2.AngularBananaInABoxHighlighting : HtmlWarningHighlighting {
    private IHtmlAttributeName myAttributeName;
    internal static string SEVERITY_ID;
    public IHtmlAttributeName AttributeName { get; }
    public AngularBananaInABoxHighlighting(IHtmlAttributeName attributeName, Object[] args);
    public virtual bool IsValid();
    public IHtmlAttributeName get_AttributeName();
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Html.Angular2.IHtmlInJsStringsSyntaxAnalysis {
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Html.ContextHighlighters.HtmlMatchingAttrValueQuotesContextHighlighter : MatchingBraceContextHighlighterBase`1<HtmlLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    private static bool IsDoubleQuote(ITreeNode node);
    private static bool IsSingleQuote(ITreeNode node);
    private static bool IsAttributeValue(ITreeNode node);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Html.ContextHighlighters.HtmlMatchingBracesContextHighlighter : ContainingBracesContextHighlighterBase`1<HtmlLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void CollectHighlightings(IPsiView psiView, MatchingHighlightingsConsumer consumer);
    protected virtual void CollectHighlightings(IPsiDocumentRangeView psiDocumentRangeView, MatchingHighlightingsConsumer consumer);
    [PureAttribute]
private static bool IsStringLiteral(ITokenNode tokenNode);
    [CanBeNullAttribute]
private static RichTextBlock GetHintText(ITextControl textControl, ITreeNode lBraceNode);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Html.ContextHighlighters.HtmlMatchingCDataBracesContextHighlighter : MatchingBraceContextHighlighterBase`1<HtmlLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Html.ContextHighlighters.HtmlMatchingCommentBracesContextHighlighter : MatchingBraceContextHighlighterBase`1<HtmlLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Html.ContextHighlighters.HtmlMatchingConditionalCommentBracesContextHighlighter : MatchingBraceContextHighlighterBase`1<HtmlLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
}
[RegisterHighlighterAttribute("ReSharper HTML Synchronous Tag Editing")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlStaticHighlightingsGroups/HtmlInfo")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.ChangedTagNameHighlighting : object {
    public static string ChangedTagNameHighlightingName;
    private DocumentRange myRange;
    private TagMarkers myRangeMarkers;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ChangedTagNameHighlighting(TagMarkers rangeMarkers, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("Html.AttributeNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownAttributeConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownAttributeInHTMLAndRelatedTechnologiesConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.AttributeNotResolved", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlAttributeResolvedErrorHighlighting : HtmlHighlightingWithReferenceBase`1<IReference> {
    internal static string SEVERITY_ID;
    public HtmlAttributeResolvedErrorHighlighting(IReference reference);
}
[RegisterConfigurableSeverityAttribute("Html.AttributesQuotes", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongAttributeQuotesConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AttributeQuotesAreMissingOrDifferFromSettingsConfigurableSeverityDescription", "2")]
[ConfigurableSeverityHighlightingAttribute("Html.AttributesQuotes", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlAttributesQuotesWarning : HtmlHighlightingBase {
    private static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <AttributeValue>k__BackingField;
    [CompilerGeneratedAttribute]
private char <ExpectedQuote>k__BackingField;
    [CompilerGeneratedAttribute]
private char <UnExpectedQuote>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FormatQuotesIfQuoteInsideValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeleteQuotesInSpaceFreeText>k__BackingField;
    public ITreeNode AttributeValue { get; }
    public char ExpectedQuote { get; }
    public char UnExpectedQuote { get; }
    public bool FormatQuotesIfQuoteInsideValue { get; }
    public bool DeleteQuotesInSpaceFreeText { get; }
    public HtmlAttributesQuotesWarning(char expectedQuote, char unExpectedQuote, ITreeNode attributeValue, bool formatQuotesIfQuoteInsideValue, bool deleteQuotesInSpaceFreeText);
    [CompilerGeneratedAttribute]
public ITreeNode get_AttributeValue();
    [CompilerGeneratedAttribute]
public char get_ExpectedQuote();
    [CompilerGeneratedAttribute]
public char get_UnExpectedQuote();
    [CompilerGeneratedAttribute]
public bool get_FormatQuotesIfQuoteInsideValue();
    [CompilerGeneratedAttribute]
public bool get_DeleteQuotesInSpaceFreeText();
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("Html.AttributeValueNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownAttributeValueConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownAttributeValueInHTMLAndRelatedTechnologiesConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.AttributeValueNotResolved", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlAttributeValueResolvedErrorHighlighting : HtmlHighlightingWithReferenceBase`1<IReference> {
    internal static string SEVERITY_ID;
    public HtmlAttributeValueResolvedErrorHighlighting(IReference reference);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlStaticHighlightingsGroups/HtmlErrors")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlConditionalCommentErrorHighlighting : HtmlErrorHighlighting {
    [CompilerGeneratedAttribute]
private IHtmlConditionalComment <ConditionalComment>k__BackingField;
    public IHtmlConditionalComment ConditionalComment { get; }
    public HtmlConditionalCommentErrorHighlighting(IHtmlConditionalComment comment, DocumentRange documentRange, string tooltipTextFormat, Object[] args);
    [CompilerGeneratedAttribute]
public IHtmlConditionalComment get_ConditionalComment();
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("Html.DeadCode", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HTMLDeadCodeConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HTMLDeadCodeConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.DeadCode", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlDeadCodeHighlighting : HtmlHighlightingBase {
    private DocumentRange myRange;
    internal static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IHtmlTreeNode <Element>k__BackingField;
    public IHtmlTreeNode Element { get; }
    public HtmlDeadCodeHighlighting(IHtmlTreeNode element, string tooltipTextFormat, DocumentRange range, Object[] args);
    [CompilerGeneratedAttribute]
public IHtmlTreeNode get_Element();
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[RegisterHighlighterAttribute("ReSharper HTML Entity")]
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.Impl.SlowTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlStaticHighlightingsGroups/HtmlInfo")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlEntityHighlighting : object {
    public static string HTML_ENTITY_HIGHLIGHTING;
    private HtmlEntity myEntity;
    private DocumentRange myEntityRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public HtmlEntityHighlighting(HtmlEntity entity, DocumentRange entityRange);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlStaticHighlightingsGroups/HtmlErrors")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlErrorHighlighting : HtmlHighlightingBase {
    [CompilerGeneratedAttribute]
private DocumentRange <range>P;
    public HtmlErrorHighlighting(string tooltipTextFormat, DocumentRange range, Object[] args);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("Html.EventNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownEventConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownEventInHTMLAndRelatedTechnologiesConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.EventNotResolved", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlEventResolvedErrorHighlighting : HtmlHighlightingWithReferenceBase`1<IReference> {
    internal static string SEVERITY_ID;
    public HtmlEventResolvedErrorHighlighting(IReference reference);
}
public abstract class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlHighlightingBase : object {
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    protected HtmlHighlightingBase(string tooltipTextFormat, Object[] args);
    [CompilerGeneratedAttribute]
public virtual string get_ToolTip();
    public virtual string get_ErrorStripeToolTip();
    public abstract virtual bool IsValid();
    public abstract virtual DocumentRange CalculateRange();
}
public abstract class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlHighlightingWithReferenceBase`1 : HtmlHighlightingBase {
    private T myReference;
    private ResolveErrorType myErrorType;
    private string myTooltip;
    [NotNullAttribute]
public T Reference { get; }
    public ResolveErrorType ErrorType { get; }
    public string ToolTip { get; }
    protected HtmlHighlightingWithReferenceBase`1(T reference, string tooltip, Object[] args);
    public T get_Reference();
    public ResolveErrorType get_ErrorType();
    public virtual string get_ToolTip();
    public virtual DocumentRange CalculateRange();
    protected virtual string CreateTooltip(T reference);
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("Html.IdDuplication", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IdsDuplicationConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicationOfIdOnPageConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.IdDuplication", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlIdDuplicationWarning : HtmlHighlightingWithReferenceBase`1<IReference> {
    internal static string SEVERITY_ID;
    public HtmlIdDuplicationWarning(IReference reference);
}
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlIdentifierTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
internal class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlIdentifierHighlighting : HtmlHighlightingBase {
    private DocumentRange myRange;
    [CompilerGeneratedAttribute]
private string <AttributeId>k__BackingField;
    public string AttributeId { get; }
    public HtmlIdentifierHighlighting(string attributeId, DocumentRange range);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AttributeId();
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
    public sealed virtual Nullable`1<int> GetStatisticsKey();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlIdentifierTooltipProvider : IdentifierTooltipProvider`1<HtmlLanguage> {
    public HtmlIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
}
[RegisterConfigurableSeverityAttribute("Html.IdNotResolved", "", "CodeSmell", "Unknown ID", "Link to unknown anchor (no element with such ID or name)", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.IdNotResolved", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlIdNotResolvedErrorHighlighting : HtmlHighlightingWithReferenceBase`1<IReference> {
    internal static string SEVERITY_ID;
    public HtmlIdNotResolvedErrorHighlighting(IReference reference);
}
[ConfigurableSeverityHighlightingAttribute("Web.IgnoredPath", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlIgnoredPathHighlighting : HtmlHighlightingWithReferenceBase`1<IPathReference> {
    internal static string SEVERITY_ID;
    public HtmlIgnoredPathHighlighting(IPathReference pathReference);
}
[ConfigurableSeverityHighlightingAttribute("Web.MappedPath", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlMappedPathHighlighting : HtmlHighlightingWithReferenceBase`1<IPathReference> {
    internal static string SEVERITY_ID;
    public HtmlMappedPathHighlighting(IPathReference pathReference);
}
[RegisterConfigurableSeverityAttribute("Html.Obsolete", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ObsoleteOrNonstandardElementConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ObsoleteOrNonstandardElementConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.Obsolete", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlObsoleteHighlighting : HtmlHighlightingWithReferenceBase`1<IReference> {
    internal static string SEVERITY_ID;
    public HtmlObsoleteHighlighting(IReference reference);
}
[RegisterConfigurableSeverityAttribute("Html.PathError", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathErrorConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathErrorConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.PathError", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlPathWarningHighlighting : HtmlHighlightingWithReferenceBase`1<IPathReference> {
    public static string SEVERITY_ID;
    public HtmlPathWarningHighlighting(IPathReference pathReference);
}
internal class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlStaticHighlightingsGroups : object {
}
[RegisterConfigurableSeverityAttribute("Html.TagNotClosed", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnclosedTagConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnclosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription", "5")]
[ConfigurableSeverityHighlightingAttribute("Html.TagNotClosed", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlTagNotClosedHighlighting : HtmlErrorHighlighting {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IHtmlTag <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<IHtmlTag> <ParentOpenTags>k__BackingField;
    public IHtmlTag Tag { get; }
    public HashSet`1<IHtmlTag> ParentOpenTags { get; }
    public HtmlTagNotClosedHighlighting(IHtmlTag tag, DocumentRange documentRange, HashSet`1<IHtmlTag> parentOpenTags);
    [CompilerGeneratedAttribute]
public IHtmlTag get_Tag();
    [CompilerGeneratedAttribute]
public HashSet`1<IHtmlTag> get_ParentOpenTags();
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("Html.TagNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownTagConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.TagNotResolved", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlTagNotResolvedErrorHighlighting : HtmlHighlightingWithReferenceBase`1<IReference> {
    internal static string SEVERITY_ID;
    public HtmlTagNotResolvedErrorHighlighting(IReference reference);
}
[RegisterConfigurableSeverityAttribute("Html.TagShouldBeSelfClosed", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongClosedTagConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongClosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.TagShouldBeSelfClosed", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlTagShouldBeSelfClosedHighlighting : HtmlWarningHighlighting {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IHtmlTag <Tag>k__BackingField;
    public IHtmlTag Tag { get; }
    public HtmlTagShouldBeSelfClosedHighlighting(IHtmlTag tag, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public IHtmlTag get_Tag();
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("Html.TagShouldNotBeSelfClosed", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongSelfClosedTagConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongSelfClosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.TagShouldNotBeSelfClosed", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlTagShouldNotBeSelfClosedHighlighting : HtmlWarningHighlighting {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IHtmlTag <Tag>k__BackingField;
    public IHtmlTag Tag { get; }
    public HtmlTagShouldNotBeSelfClosedHighlighting(IHtmlTag tag, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public IHtmlTag get_Tag();
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("Html.Warning", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HTMLWarningConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HTMLWarningConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Html.Warning", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.HtmlWarningHighlighting : HtmlHighlightingBase {
    [CompilerGeneratedAttribute]
private DocumentRange <range>P;
    private static string SEVERITY_ID;
    public HtmlWarningHighlighting(string tooltipTextFormat, DocumentRange range, Object[] args);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
public interface JetBrains.ReSharper.Daemon.Html.Highlightings.IHtmlEntitiesHighlighting {
}
public interface JetBrains.ReSharper.Daemon.Html.Highlightings.IHtmlHighlighting {
}
[RegisterConfigurableSeverityAttribute("Asp.Entity", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownHTMLEntityConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownHTMLEntityConfigurableSeverityDescription", "4")]
[ConfigurableSeverityHighlightingAttribute("Asp.Entity", "HTML")]
public class JetBrains.ReSharper.Daemon.Html.Highlightings.UnknownHtmlEntityHighlighting : object {
    private HtmlEntity myEntity;
    private DocumentRange myRange;
    internal static string SEVERITY_ID;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnknownHtmlEntityHighlighting(HtmlEntity entity, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterConfigurableSeverityAttribute("Web.IgnoredPath", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IgnoredPath_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathIsIgnoredInProjectSettings_Text", "0")]
[RegisterConfigurableSeverityAttribute("Web.MappedPath", "", "", "", "CodeInfo", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MappedPathConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathIsMappedToADifferentPathInProjectSettingsConfigurableSeverityDescription", "2")]
public static class JetBrains.ReSharper.Daemon.Html.Highlightings.WebHighlightingConfigurableSeverity : object {
    public static string IgnoredPathSeverityId;
    public static string MappedPathSeverityId;
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Daemon.Html.HtmlDaemonBehavior : LanguageSpecificDaemonBehavior {
    public virtual ErrorStripeRequestWithDescription InitialErrorStripe(IPsiSourceFile sourceFile);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.InjectedHtmlLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Html.Injected.Css.InjectedHtmlCssClassResolveProblemHighlighter : CssClassResolveProblemHighlighter {
    public virtual IHighlighting Run(IReference reference);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Html.Injected.Css.ZoneMarker : object {
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Html.Injected.IHtmlInStringsSyntaxAnalysis {
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.InjectedHtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Injected.InjectedHtmlAttributeValueAnalysis : HtmlAttributeValueAnalysis {
    public InjectedHtmlAttributeValueAnalysis(Lifetime lifetime, HtmlLanguage language, ISettingsOptimization settingsOptimization, ISettingsStore settingsStore);
    protected virtual bool IsElementAccepted(HtmlAttributeValue htmlAttributeValue);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.InjectedHtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Injected.InjectedHtmlResolveProblemHighlighter : HtmlResolveProblemHighlighter {
    public virtual IHighlighting ProcessHtmlTagReference(IReference reference);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.InjectedHtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Injected.InjectedHtmlSyntaxHighlighterAnalysis : HtmlSyntaxHighlighterAnalysisBase {
    public InjectedHtmlSyntaxHighlighterAnalysis(InjectedHtmlLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.InjectedHtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Injected.InjectedHtmlTagClosingAnalysis : HtmlTagClosingAnalysis {
    public InjectedHtmlTagClosingAnalysis(InjectedHtmlLanguage language);
    protected virtual void HtmlTagShouldBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual void HtmlTagShouldNotBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual bool ShouldBeClosed(IHtmlTag tag, IHtmlTagDeclaredElement htmlTagDeclaredElement);
}
public static class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlAnalysis : object {
    public static DocumentRange FixHighlightingRange(DocumentRange highlightingRange);
}
[HighlightingSourceAttribute]
public abstract class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlAnalysis`1 : object {
    private HtmlLanguage myLanguage;
    protected bool IgnoreErrorInHtmlComment { get; }
    protected HtmlAnalysis`1(HtmlLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    protected virtual bool get_IgnoreErrorInHtmlComment();
    protected virtual bool DoSuppressHighlighting(ITreeNode node, TContext context);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, TContext context);
    public virtual bool IsProcessingFinished(TContext context);
    public virtual void ProcessBeforeInterior(ITreeNode element, TContext context);
    public virtual void ProcessAfterInterior(ITreeNode element, TContext context);
    public virtual void Done(IHtmlFile file, TContext context);
    [ConditionalAttribute("JET_MODE_ASSERT")]
private void AssertContextType(object context);
    public virtual bool IsProcessingFinished(object context);
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element, object context);
    public sealed virtual void ProcessBeforeInterior(ITreeNode element, object context);
    public sealed virtual void ProcessAfterInterior(ITreeNode element, object context);
    public sealed virtual void Done(IHtmlFile file, object context);
}
[AttributeUsageAttribute("4")]
[BaseTypeRequiredAttribute("JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysis")]
[MeansImplicitUseAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlAnalysisAttribute : LanguageAttribute {
    public HtmlAnalysisAttribute(Type Language, Instantiation instantiation);
}
public abstract class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlAnalysisProvider`2 : object {
    private IEnumerable`1<TAnalysis> myAnalyses;
    protected HtmlAnalysisProvider`2(IEnumerable`1<TAnalysis> analyses);
    private sealed virtual override IEnumerable`1<TAnalysis> JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysisProvider<TAnalysis,TContext>.GetAnalysis(IHtmlFile file, IDaemonProcess process);
    public virtual IEnumerable`1<IHtmlAnalysis> GetAnalysis(IHtmlFile file, IDaemonProcess process);
}
[AttributeUsageAttribute("4")]
[BaseTypeRequiredAttribute("JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysisProvider")]
[MeansImplicitUseAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlAnalysisProviderAttribute : LanguageAttribute {
    public HtmlAnalysisProviderAttribute(Type Language, Instantiation instantiation);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlAttributeValueAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    private ISettingsOptimization mySettingsOptimization;
    private List`1<string> myLocalDuplicateTags;
    private IContextBoundSettingsStoreLive mySettingsStoreLive;
    private QuoteStyle myQuoteStyle;
    private bool myFormatQuotesIfQuoteInsideValue;
    private bool myDeleteQuotesInSpaceFreeText;
    public HtmlAttributeValueAnalysis(Lifetime lifetime, HtmlLanguage language, ISettingsOptimization settingsOptimization, ISettingsStore settingsStore);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void Done(IHtmlFile file, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    protected virtual bool IsElementAccepted(HtmlAttributeValue htmlAttributeValue);
    private void AnalyseHtmlIdReferences(Tuple`2<IHighlightingConsumer, IHtmlFile> context, HtmlAttributeValue htmlAttributeValue);
    private void AnalyseQuotes(Tuple`2<IHighlightingConsumer, IHtmlFile> context, HtmlAttributeValue htmlAttributeValue);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlConditionalCommentAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    private IHtmlTokenNodeTypes myTokenTypes;
    public HtmlConditionalCommentAnalysis(HtmlLanguage htmlLanguage, IHtmlTokenNodeTypes htmlTokenNodeTypes);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    private static bool ConditionalCommentIsRedundant(IHtmlConditionalComment conditionalComment);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlEntitiesAnalysis : HtmlAnalysis`1<Tuple`3<HtmlEntitiesService, IHighlightingConsumer, IHtmlFile>> {
    private HtmlEntitiesWalker myHtmlEntitiesWalker;
    private HtmlEntitiesService myHtmlEntitiesService;
    public HtmlEntitiesAnalysis(HtmlLanguage language, HtmlEntitiesWalker htmlEntitiesWalker, HtmlEntitiesService htmlEntitiesService);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`3<HtmlEntitiesService, IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlEntitiesAnalysisProvider : HtmlAnalysisProvider`2<HtmlEntitiesAnalysis, object> {
    public HtmlEntitiesAnalysisProvider(IEnumerable`1<HtmlEntitiesAnalysis> analyses);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlIncludeAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    public HtmlIncludeAnalysis(HtmlLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlObsoleteAnalysis : HtmlAnalysis`1<ContextType> {
    public HtmlObsoleteAnalysis(HtmlLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual bool IsProcessingFinished(ContextType context);
    public virtual void ProcessBeforeInterior(ITreeNode element, ContextType context);
    protected virtual void ProcessReference(ContextType context, IReference reference);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlObsoleteAnalysisProvider : HtmlAnalysisProvider`2<HtmlObsoleteAnalysis, object> {
    public HtmlObsoleteAnalysisProvider(IEnumerable`1<HtmlObsoleteAnalysis> analyses);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlSemanticAnalysisProvider : HtmlAnalysisProvider`2<IHtmlSemanticAnalysis, object> {
    public HtmlSemanticAnalysisProvider(IEnumerable`1<IHtmlSemanticAnalysis> analyses);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlStringAnalysis : HtmlAnalysis`1<Tuple`5<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices, HtmlEntitiesService>> {
    private IHtmlTokenNodeTypes myTokenNodeTypes;
    private HtmlEntitiesService myHtmlEntitiesService;
    protected bool IgnoreErrorInHtmlComment { get; }
    public HtmlStringAnalysis(HtmlLanguage language, IHtmlTokenNodeTypes tokenNodeTypes, HtmlEntitiesService htmlEntitiesService);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    protected virtual bool get_IgnoreErrorInHtmlComment();
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`5<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices, HtmlEntitiesService> context);
    private void Highlight(Tuple`5<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices, HtmlEntitiesService> context, string valueText, DocumentRange valueRange, ITreeNode node);
    protected virtual void ConsumeInvalidHighlighting(IHighlightingConsumer consumer, IContextBoundSettingsStore settingsStore, DocumentRange highlightingRange, string tokenText);
    protected virtual void ConsumeEscapeHighlighting(IHighlightingConsumer consumer, IContextBoundSettingsStore settingsStore, DocumentRange highlightingRange, string highlightingAttributeId);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlSyntaxAnalysisProvider : HtmlAnalysisProvider`2<IHtmlSyntaxAnalysis, object> {
    public HtmlSyntaxAnalysisProvider(IEnumerable`1<IHtmlSyntaxAnalysis> analyses);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlSyntaxErrorsAnalysis : HtmlAnalysis`1<Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices>> {
    private IHtmlTokenNodeTypes myTokenNodeTypes;
    protected bool IgnoreErrorInHtmlComment { get; }
    public HtmlSyntaxErrorsAnalysis(HtmlLanguage language, IHtmlTokenNodeTypes tokenNodeTypes);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    protected virtual bool get_IgnoreErrorInHtmlComment();
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices> context);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlSyntaxHighlighterAnalysisBase : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    public HtmlSyntaxHighlighterAnalysisBase(HtmlLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
    protected virtual void HighlightAttributeValueElement(Tuple`2<IHighlightingConsumer, IHtmlFile> context, IHtmlAttributeValue attributeValueElement);
    private static void HighlightTagFooter(Tuple`2<IHighlightingConsumer, IHtmlFile> context, IHtmlTagFooter tagFooter);
    protected static bool IsOrdinaryAttributeQuote(string quote);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Analysis.HtmlTagClosingAnalysis : HtmlAnalysis`1<Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>>> {
    protected bool IgnoreErrorInHtmlComment { get; }
    public HtmlTagClosingAnalysis(HtmlLanguage language);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    protected virtual bool get_IgnoreErrorInHtmlComment();
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual void HtmlTagShouldBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual void HtmlTagShouldNotBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    private bool AddHighlighting(IHtmlTag tag, Func`2<IHtmlTag, IHighlighting> highlighting, Func`2<IHtmlTag, DocumentRange> range, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual bool ShouldBeClosed(IHtmlTag tag, IHtmlTagDeclaredElement htmlTagDeclaredElement);
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysis {
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysis`1 {
    public abstract virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public abstract virtual void Done(IHtmlFile file, TContext context);
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysisHighlightingContract {
}
public interface JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysisProvider {
}
public interface JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlAnalysisProvider`2 {
    public abstract virtual IEnumerable`1<TAnalysis> GetAnalysis(IHtmlFile file, IDaemonProcess process);
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlSemanticAnalysis {
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.Html.Stages.Analysis.IHtmlSyntaxAnalysis {
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Html.Stages.ChangedTagNameDaemonStage : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.ChangedTagNameDaemonStageProcess : object {
    private IDocument myDocument;
    private IDaemonProcess myProcess;
    public IDaemonProcess DaemonProcess { get; }
    public ChangedTagNameDaemonStageProcess(IDocument document, IDaemonProcess process);
    public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Html.Stages.GlobalErrorStage : HtmlDaemonStageBase`2<IHtmlFile, HtmlLanguage> {
    private ResolveHighlighterRegistrar myResolveHighlighterRegistrar;
    public GlobalErrorStage(ResolveHighlighterRegistrar resolveHighlighterRegistrar);
    protected virtual IDaemonStageProcess CreateProcessInternal(IHtmlFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Html.Stages.HtmlAnalysisProcess : object {
    private IHtmlFile myFile;
    private ICollection`1<IHtmlAnalysis> myAnalysises;
    private IDaemonProcess myProcess;
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    public IDaemonProcess DaemonProcess { get; }
    public HtmlAnalysisProcess(IHtmlFile htmlFile, IDaemonProcess process, ICollection`1<IHtmlAnalysis> analysises);
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element, ICollection`1<KeyValuePair`2<IHtmlAnalysis, object>> context);
    public sealed virtual bool IsProcessingFinished(ICollection`1<KeyValuePair`2<IHtmlAnalysis, object>> context);
    public sealed virtual void ProcessBeforeInterior(ITreeNode element, ICollection`1<KeyValuePair`2<IHtmlAnalysis, object>> context);
    public sealed virtual void ProcessAfterInterior(ITreeNode element, ICollection`1<KeyValuePair`2<IHtmlAnalysis, object>> context);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Html.Stages.HtmlAnalysisStage : HtmlDaemonStageBase`2<IHtmlFile, HtmlLanguage> {
    private ILanguageManager myLanguageManager;
    public HtmlAnalysisStage(ILanguageManager languageManager);
    protected virtual IDaemonStageProcess CreateProcessInternal(IHtmlFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[FileStructureExplorerAttribute("16")]
public class JetBrains.ReSharper.Daemon.Html.Stages.HtmlFileStructureExplorer : object {
    public sealed virtual IFileStructure ExploreFile(IFile file, IContextBoundSettingsStore settingsStore, Predicate`1<DocumentRange> isRangeInvalidated);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Resolve.HtmlErrorHandler : object {
    private static ResolveErrorType[] ourSupportedErrorTypes;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    private static HtmlErrorHandler();
    public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public sealed virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Resolve.HtmlNotResolvedErrorHandler : object {
    private IEnumerable`1<HtmlResolveProblemHighlighter> myHtmlResolveProblemHighlighters;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ResolveErrorType> <ErrorTypes>k__BackingField;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; protected set; }
    public HtmlNotResolvedErrorHandler(IEnumerable`1<HtmlResolveProblemHighlighter> htmlResolveProblemHighlighters);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    [CompilerGeneratedAttribute]
protected void set_ErrorTypes(IEnumerable`1<ResolveErrorType> value);
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Html.HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Resolve.HtmlPathErrorHandler : PathErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Resolve.HtmlPathHighlightingUtil : object {
    public static IHighlighting CreateHighlighting(IPathReference pathReference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.KnownLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.Stages.Resolve.HtmlResolveProblemHighlighter : object {
    private static HtmlResolveErrorType[] ourSupportedErrorTypes;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    private static HtmlResolveProblemHighlighter();
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
    public virtual IHighlighting ProcessHtmlTagReference(IReference reference);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlPredefinedCustomPatterns : object {
    private HtmlLanguage myHtmlLanguage;
    private IStructuralSearcherFactory myStructuralSearcherFactory;
    private ZoneUserPreferenceChecker myZoneUserPreferenceChecker;
    public static string TagRegex;
    public HtmlPredefinedCustomPatterns(ILanguageManagerServiceProvider`2<HtmlLanguage, IStructuralSearcherFactory> structuralSearcherFactoryProvider, ZoneUserPreferenceChecker zoneUserPreferenceChecker);
    private IPredefinedPattern CreatePattern(IStructuralSearcherFactory structuralSearcherFactory, string id, string compoundItemName, string groupName, Severity severity, string pattern, string comment, string replace, string replaceComment, bool matchSimilar, bool disableForInjects, IPlaceholder[] placeholders);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlPredefinedCustomPatterns/<GetPatterns>d__6")]
public sealed virtual IEnumerable`1<IPredefinedPattern> GetPatterns();
}
[ConfigurableSeverityHighlightingAttribute("", "HTML,ASPX")]
public class JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlPredefinedPatternHighlighting : StructuralSearchPatternHighlightingBase {
    private string myId;
    public string ConfigurableSeverityId { get; }
    public HtmlPredefinedPatternHighlighting(IPredefinedPattern pattern, IStructuralMatchResult result);
    public sealed virtual string get_ConfigurableSeverityId();
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlPredefinedPatternsStage : object {
    private PredefinedCustomPatternsManager myPatternsManager;
    public HtmlPredefinedPatternsStage(PredefinedCustomPatternsManager patternsManager);
    private static bool IsSupported(IPsiSourceFile sourceFile);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlPredefinedPatternsStage/<CreateProcess>d__3")]
public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlPredefinedPatternsStageProcess : HtmlStructuralSearchDaemonStageProcess {
    public HtmlPredefinedPatternsStageProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IEnumerable`1<KeyValuePair`2<ICustomPattern, IStructuralMatcher>> matchers, IHtmlFile psiFile);
    protected virtual IHighlighting CreateHighlighting(IStructuralMatchResult result, ICustomPattern pattern);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlStructuralSearchDaemonStage : HtmlDaemonStageBase`2<IHtmlFile, HtmlLanguage> {
    private CustomPatternMatcherManager myCustomPatternMatcherManager;
    public HtmlStructuralSearchDaemonStage(CustomPatternMatcherManager customPatternMatcherManager);
    protected virtual IDaemonStageProcess CreateProcessInternal(IHtmlFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Html.StructuralPatterns.HtmlStructuralSearchDaemonStageProcess : StructuralSearchDaemonStageProcessBase {
    private Dictionary`2<ICustomPattern, IStructuralMatcher> myContentSequenceMatchers;
    private Dictionary`2<ICustomPattern, IStructuralMatcher> myTagHeaderMatchers;
    private Dictionary`2<ICustomPattern, IStructuralMatcher> myTagMatchers;
    public HtmlStructuralSearchDaemonStageProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IEnumerable`1<KeyValuePair`2<ICustomPattern, IStructuralMatcher>> matchers, IHtmlFile psiFile);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IMatchingContext context);
    public virtual void ProcessBeforeInterior(ITreeNode element, IMatchingContext context);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Html.ZoneMarker : object {
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.BowerJsonTooltipExtenderProvider : TooltipExtenderWithRequestsBase {
    private IJsonSchemaManager mySchemaManager;
    public BowerJsonTooltipExtenderProvider(ISchemaDownloader requestHelper, IJsonSchemaManager schemaManager);
    public sealed virtual RichTextBlock GetAdditionalInfo(IJsonSchema schema, ITreeNode node, bool extendedInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CodeCleanupModuleAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.CodeCleanup.JavaScriptHighlightingCleanupModule : HighlightingCleanupModule {
    public static CodeCleanupOptionDescriptor`1<bool> STRING_LITERAL_QUOTES;
    public static CodeCleanupOptionDescriptor`1<bool> CORRECT_VARIABLE_KINDS;
    public static CodeCleanupOptionDescriptor`1<bool> VARIABLES_TO_INNER_SCOPES;
    public static CodeCleanupOptionDescriptor`1<bool> STRING_TO_TEMPLATES;
    private static CodeCleanupOptionDescriptor`1[] ALL_DESCRIPTORS;
    public string Name { get; }
    public ICollection`1<CodeCleanupOptionDescriptor> Descriptors { get; }
    public PsiLanguageType LanguageType { get; }
    private static JavaScriptHighlightingCleanupModule();
    public virtual string get_Name();
    public virtual ICollection`1<CodeCleanupOptionDescriptor> get_Descriptors();
    public virtual PsiLanguageType get_LanguageType();
    public virtual bool IsAvailable(CodeCleanupProfile profile);
    public virtual void SetDefaultSetting(CodeCleanupProfile profile, DefaultProfileType profileType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CodeCleanupModuleAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.CodeCleanup.TypeScriptHighlightingsCleanup : HighlightingCleanupModule {
    public static CodeCleanupOptionDescriptor`1<bool> TYPESCRIPT_REMOVE_REDUNDANT_QUALIFIER;
    public static CodeCleanupOptionDescriptor`1<bool> TYPESCRIPT_OPTIMIZE_IMPORTS;
    public static CodeCleanupOptionDescriptor`1<bool> TYPESCRIPT_OPTIMIZE_REFERENCE_COMMENTS;
    public static CodeCleanupOptionDescriptor`1<bool> PUBLIC_MODIFIER_STYLE;
    public static CodeCleanupOptionDescriptor`1<bool> USE_EXPLICIT_ANY;
    public static CodeCleanupOptionDescriptor`1<bool> USE_AS_INSTEAD_OF_CAST;
    public static CodeCleanupOptionDescriptor`1<bool> TYPE_ANNOTATION_STYLE;
    public static CodeCleanupOptionDescriptor`1<bool> RELATIVE_PATH_STYLE;
    [CompilerGeneratedAttribute]
private ICollection`1<CodeCleanupOptionDescriptor> <Descriptors>k__BackingField;
    public string Name { get; }
    public ICollection`1<CodeCleanupOptionDescriptor> Descriptors { get; }
    public PsiLanguageType LanguageType { get; }
    private static TypeScriptHighlightingsCleanup();
    public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual ICollection`1<CodeCleanupOptionDescriptor> get_Descriptors();
    public virtual PsiLanguageType get_LanguageType();
    public virtual bool IsAvailable(CodeCleanupProfile profile);
    public virtual void SetDefaultSetting(CodeCleanupProfile profile, DefaultProfileType profileType);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.ContextHighlighters.JavaScriptMatchingBraceContextHighlighter : MatchingBraceContextHighlighterBase`1<JavaScriptLikeBaseLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
    private RichTextBlock GetHintText(ITextControl textControl, ITreeNode lBraceNode);
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.ContextHighlighters.TypeScriptGenericsMatchingBraceContextHighlighter : ContainingBracesContextHighlighterBase`1<TypeScriptLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void CollectHighlightings(IPsiView psiView, MatchingHighlightingsConsumer consumer);
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Errors.DeclarationHidesGutterMark : object {
    private IDeclaration myDeclaration;
    private IDeclaredElement myHiddenElement;
    private string myMessage;
    public DocumentRange Range { get; }
    public string AttributeId { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DeclarationHidesGutterMark(IDeclaration declaration, IDeclaredElement hiddenElement);
    public DocumentRange get_Range();
    public sealed virtual string get_AttributeId();
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.Errors.DeclarationHidesGutterMark/<GetBulbItems>d__8")]
public sealed virtual IEnumerable`1<BulbMenuItem> GetBulbItems();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
    [CompilerGeneratedAttribute]
private void <GetBulbItems>b__8_0();
}
public class JetBrains.ReSharper.Daemon.JavaScript.Errors.JavaScriptCodeStyleRules : object {
    [NotNullAttribute]
private static Expression`1<Func`2<JavaScriptCodeFormattingSettingsKey, QuoteStyle>> QUOTE_STYLE_SETTING_ACCESSOR;
    public static CodeStyleRule`2<QuoteStyle, JavaScriptCodeFormattingSettingsKey> QuoteStyleCodeStyleRule;
    private static JavaScriptCodeStyleRules();
}
[RegisterStaticHighlightingsGroupAttribute("JetBrains.ReSharper.Daemon.Resources.Strings10", "JavaScriptErrors_Text", "True")]
public class JetBrains.ReSharper.Daemon.JavaScript.Errors.JScriptErrors : object {
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.JScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Errors.JSSyntaxError : SyntaxErrorBase {
    public JSSyntaxError(string toolTip, DocumentRange range);
}
public class JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptCodeStyleRules : object {
    private static Expression`1<Func`2<TypeScriptCodeStyleSettingsKey, bool>> PUBLIC_MODIFIER_SETTING_ACCESSOR;
    private static Expression`1<Func`2<TypeScriptCodeStyleSettingsKey, bool>> IMPLICIT_ANY_SETTING_ACCESSOR;
    private static Expression`1<Func`2<TypeScriptCodeStyleSettingsKey, FileReferenceStyle>> REQUIRE_PATH_STYLE_SETTING_ACCESSOR;
    private static Expression`1<Func`2<TypeScriptCodeStyleSettingsKey, TypeSpecificationKind>> TYPE_SPECIFICATION_STYLE_SETTING_ACCESSOR;
    public static CodeStyleRule`2<bool, TypeScriptCodeStyleSettingsKey> PublicModifierCodeStyleRule;
    public static CodeStyleRule`2<FileReferenceStyle, TypeScriptCodeStyleSettingsKey> RequirePathCodeStyleRule;
    public static CodeStyleRule`2<bool, TypeScriptCodeStyleSettingsKey> ImplicitAnyCodeStyleRule;
    public static CodeStyleRule`2<TypeSpecificationKind, TypeScriptCodeStyleSettingsKey> TypeSpecificationCodeStyleRule;
    private static TypeScriptCodeStyleRules();
}
[RegisterStaticHighlightingsGroupAttribute("JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeScriptCompilerErrors_Text", "True")]
public class JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors : object {
}
public static class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptBuilderOptions : object {
    public static string AccessRights;
    public static string ReadOnly;
    public static string AccessRightsPublic;
    public static String[] AccessRightsChoices;
    [NotNullAttribute]
public static String[] ReadOnlyChoices;
    private static TypeScriptBuilderOptions();
}
[GeneratorBuilderAttribute("Constructor", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptConstructorBuilder : GeneratorBuilderBase`1<TypeScriptGeneratorContext> {
    protected virtual void Process(TypeScriptGeneratorContext context, IProgressIndicator progress);
}
[GeneratorElementProviderAttribute("Constructor", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptConstructorProvider : GeneratorProviderBase`1<TypeScriptGeneratorContext> {
    public virtual void Populate(TypeScriptGeneratorContext context);
}
internal static class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptGenerateUtils : object {
    public static ITreeNode GetClassMemberAnchor(ITreeNode anchor);
    public static ITsObjectPropertyDeclaration GetPrecedingObjectMember(ITreeNode anchor);
    public static string CreateFieldName(IDeclaredElement declaredElement, IPsiSourceFile sourceFile);
    public static string CreatePropertyName(IDeclaredElement declaredElement, IPsiSourceFile sourceFile, SuggestionOptions suggestionOptions);
    public static string CreateParameterName(IDeclaredElement declaredElement, IPsiSourceFile sourceFile, SuggestionOptions suggestionOptions);
    private static string CreateName(IElementKind elementKind, IDeclaredElement declaredElement, IPsiSourceFile sourceFile, SuggestionOptions suggestionOptions);
    internal static void InsertImportsIfNeeded(TypeScriptGeneratorContext context, ITypeScriptTreeNode classDecl, ITsType paramTypLocal, ITsFile ownerFile);
    internal static void AddMemberAccessorDeclaration(TypeScriptGeneratorContext context, ITreeNode root, string format);
}
[GeneratorElementProviderAttribute("Implementations", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptMissingMembersProvider : GeneratorProviderBase`1<TypeScriptGeneratorContext> {
    public virtual void Populate(TypeScriptGeneratorContext context);
}
[GeneratorElementProviderAttribute("Overrides", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptOverridableMembersProvider : GeneratorProviderBase`1<TypeScriptGeneratorContext> {
    public virtual void Populate(TypeScriptGeneratorContext context);
}
[GeneratorBuilderAttribute("Implementations", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[GeneratorBuilderAttribute("Overrides", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptOverridingMembersBuilder : GeneratorBuilderBase`1<TypeScriptGeneratorContext> {
    protected virtual void BuildOptions(TypeScriptGeneratorContext context, ICollection`1<IGeneratorOption> options);
    protected virtual void Process(TypeScriptGeneratorContext context, IProgressIndicator progress);
    private static IJsResolvedType ComputeOverridingPropertyType(TypeScriptGeneratorContext context, IEnumerable`1<ITsType> types);
    private static bool ShouldSkipSpecializedSignature(IJsFunctionSignature s, JsResolveContext jsResolveContext);
    public static Tuple`2<string, string> GenerateOverloads(TypeScriptGeneratorContext context, IList`1<Tuple`3<IJsFunctionSignature, ITsSubstitution, bool>> sigs, string shortName, ITsSubstitution typeParamsInstantiation, ITreeNode classDecl, bool needsSignatureTypeAnnotation, bool allowRest, bool allowTypeParams, bool onlyLast, bool skipMainSignature);
}
[GeneratorBuilderAttribute("Properties", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[GeneratorBuilderAttribute("ReadProperties", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptPropertiesBuilder : GeneratorBuilderBase`1<TypeScriptGeneratorContext> {
    protected virtual void BuildOptions(TypeScriptGeneratorContext context, ICollection`1<IGeneratorOption> options);
    protected virtual void Process(TypeScriptGeneratorContext context, IProgressIndicator progress);
}
[GeneratorElementProviderAttribute("Properties", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[GeneratorElementProviderAttribute("ReadProperties", "JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Generate.TypeScript.TypeScriptPropertiesProvider : GeneratorProviderBase`1<TypeScriptGeneratorContext> {
    public virtual void Populate(TypeScriptGeneratorContext context);
}
public interface JetBrains.ReSharper.Daemon.JavaScript.Highlightings.IJavaScriptIdentifierHighlighting {
}
public interface JetBrains.ReSharper.Daemon.JavaScript.Highlightings.IJs2TsHighlighting {
    public ITransformer Transformer { get; }
    public ITransformerMatchResult MatchResult { get; }
    public ITransformerClassInfo TransformerInfo { get; }
    public abstract virtual ITransformer get_Transformer();
    public abstract virtual ITransformerMatchResult get_MatchResult();
    public abstract virtual ITransformerClassInfo get_TransformerInfo();
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
public class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JavaScriptDocCommentIdentifierHighlighting : object {
    private string myAtributeId;
    private string myTooltipText;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public string AttributeId { get; }
    public JavaScriptDocCommentIdentifierHighlighting(string attributeId, DocumentRange range, string tooltipText);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual string get_AttributeId();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[DaemonTooltipProviderAttribute("")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
public class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JavaScriptDocCommentTagHighlighting : JavaScriptHighlightingBase {
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public string AttributeId { get; }
    public JavaScriptDocCommentTagHighlighting(DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual string get_AttributeId();
    public virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[RegisterHighlighterGroupAttribute("JavaScript", "JavaScript", "4")]
[RegisterHighlighterAttribute("ReSharper JavaScript XML Documentation Comment")]
[RegisterHighlighterAttribute("ReSharper JavaScript Block-Local Constant Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Local Variable Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Block-Local Variable Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Parameter Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Function Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Local Function Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Property Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Unknown Property Identifier")]
[RegisterHighlighterAttribute("ReSharper JavaScript Template")]
[RegisterHighlighterAttribute("ReSharper JsDoc Keyword")]
[RegisterHighlighterAttribute("ReSharper JsDoc Parameter or Property Identifier")]
[RegisterHighlighterAttribute("ReSharper JsDoc Type Annotation")]
[RegisterHighlighterAttribute("ReSharper JsDoc Type Annotation Keyword")]
[RegisterHighlighterAttribute("ReSharper JsDoc Type Definition")]
[RegisterHighlighterAttribute("ReSharper JavaScript Regex Border")]
public static class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JavaScriptHighlightingAttributeIds : object {
    public static string KEYWORD;
    public static string STRING;
    public static string NUMBER;
    public static string COMMENT;
    public static string DOC_COMMENT;
    public static string PARAMETER;
    public static string LOCAL_VARIABLE;
    public static string CONSTANT;
    public static string BLOCK_LOCAL_VARIABLE;
    public static string FUNCTION;
    public static string LOCAL_FUNCTION;
    public static string PROPERTY;
    public static string UNKNOWN_PROPERTY;
    public static string TEMPLATE;
    public static string JSDOC_PARAMETER;
    public static string JSDOC_KEYWORD;
    public static string JSDOC_TYPE_ANNOTATION;
    public static string JSDOC_TYPE_DEFINITION;
    public static string JSDOC_TYPE_ANNOTATION_KEYWORD;
    public static string REGEX_BORDER;
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JavaScriptHighlightingBase : object {
    private string JetBrains.ReSharper.Feature.Services.Daemon.IHighlighting.ToolTip { get; }
    private string JetBrains.ReSharper.Feature.Services.Daemon.IHighlighting.ErrorStripeToolTip { get; }
    private sealed virtual override string JetBrains.ReSharper.Feature.Services.Daemon.IHighlighting.get_ToolTip();
    private sealed virtual override string JetBrains.ReSharper.Feature.Services.Daemon.IHighlighting.get_ErrorStripeToolTip();
    public abstract virtual bool IsValid();
    private sealed virtual override DocumentRange JetBrains.ReSharper.Feature.Services.Daemon.IHighlighting.CalculateRange();
}
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.JavaScript.JavaScriptIdentifierTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
public class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JavaScriptIdentifierHighlighting : object {
    private string myAtributeId;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public string AttributeId { get; }
    public JavaScriptIdentifierHighlighting(string attributeId, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual string get_AttributeId();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
internal class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JavaScriptSettingsNamesProvider : PrefixBasedSettingsNamesProvider {
    public static string JS_GROUP_PREFIX;
    public static string JSDOC_GROUP_PREFIX;
    private PrefixBasedSettingsNamesProvider myJsDocNamesProvider;
    public virtual string GetHighlighterTag(string attributeId);
    public virtual string GetPresentableName(string attributeId);
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JavaScriptStrictHighlightingBase : JavaScriptHighlightingBase {
}
[ConfigurableSeverityHighlightingAttribute("", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.Js2TsHighlighting : object {
    private ITransformerClassInfo myInfo;
    private ITransformerMatchResult myMatchResult;
    private ITransformer myTransformer;
    public string ConfigurableSeverityId { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public Severity Severity { get; }
    public ITransformerClassInfo TransformerInfo { get; }
    public ITransformer Transformer { get; }
    public ITransformerMatchResult MatchResult { get; }
    public Js2TsHighlighting(ITransformer transformer, ITransformerMatchResult matchResult, ITransformerClassInfo info);
    public sealed virtual string get_ConfigurableSeverityId();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual Severity get_Severity();
    public sealed virtual ITransformerClassInfo get_TransformerInfo();
    public sealed virtual ITransformer get_Transformer();
    public sealed virtual ITransformerMatchResult get_MatchResult();
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JsHintHighlightingBase : JavaScriptHighlightingBase {
}
[RegisterHighlighterGroupAttribute("JSON", "JSON", "6")]
[RegisterHighlighterAttribute("ReSharper Json Property")]
[RegisterHighlighterAttribute("ReSharper Json Property Identifier")]
public static class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JsonHighlightingAttributeIds : object {
    public static string PROPERTY;
    public static string PROPERTY_IDENTIFIER;
}
internal class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.JsonSettingsNamesProvider : PrefixBasedSettingsNamesProvider {
    public static string JSON_GROUP_PREFIX;
}
[RegisterHighlighterGroupAttribute("TypeScript", "TypeScript (Rider)", "4")]
[RegisterHighlighterAttribute("ReSharper TypeScript Class Identifier")]
[RegisterHighlighterAttribute("ReSharper TypeScript Enum Identifier")]
[RegisterHighlighterAttribute("ReSharper TypeScript Interface Identifier")]
[RegisterHighlighterAttribute("ReSharper TypeScript Module Identifier")]
[RegisterHighlighterAttribute("ReSharper TypeScript Alias Identifier")]
[RegisterHighlighterAttribute("ReSharper TypeScript Type Parameter Identifier")]
[RegisterHighlighterAttribute("ReSharper TypeScript Constrained Element Identifier")]
[RegisterHighlighterAttribute("ReSharper TypeScript Variable Declaration Identifier")]
public static class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.TypeScriptHighlightingAttributeIds : object {
    public static string INTERFACE;
    public static string CLASS;
    public static string ENUM;
    public static string MODULE;
    public static string ALIAS;
    public static string TYPE_PARAMETER;
    public static string CONSTRAINED_ELEMENT;
    public static string VARIABLE;
}
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.JavaScript.TypeScriptIdentifierTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
public class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.TypeScriptIdentifierHighlighting : object {
    private string myAttributeId;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public string AttributeId { get; }
    public TypeScriptIdentifierHighlighting(string attributeId, DocumentRange range);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual string get_AttributeId();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
internal class JetBrains.ReSharper.Daemon.JavaScript.Highlightings.TypeScriptSettingsNamesProvider : PrefixBasedSettingsNamesProvider {
    public static string TS_GROUP_PREFIX;
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Angular2Html.InjectedAngular2HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Angular2.Angular2HtmlAttributeValueInJsStringsAnalysis : HtmlAttributeValueAnalysis {
    public Angular2HtmlAttributeValueInJsStringsAnalysis(Lifetime lifetime, InjectedAngular2HtmlLanguage language, ISettingsOptimization settingsOptimization, ISettingsStore settingsStore);
    protected virtual bool IsElementAccepted(HtmlAttributeValue htmlAttributeValue);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Angular2Html.InjectedAngular2HtmlLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Angular2.Angular2HtmlInJsStringsTagClosingAnalysis : HtmlTagClosingAnalysis {
    public Angular2HtmlInJsStringsTagClosingAnalysis(InjectedAngular2HtmlLanguage language);
    protected virtual void HtmlTagShouldBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual void HtmlTagShouldNotBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual bool ShouldBeClosed(IHtmlTag tag, IHtmlTagDeclaredElement htmlTagDeclaredElement);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Angular2.ZoneMarker : object {
}
[ProjectFileTypeAttribute("JetBrains.ProjectModel.HtmlProjectFileType", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.JavaScriptDaemonInWeb.HtmlInspectionsProcessFactory : JavaScriptInspectionsProcessFactory {
    public virtual IDaemonStageProcess CreateInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.JavaScriptDaemonInWeb.JavaScriptInspectionsProcessInHtml : JavaScriptInspectionsProcess {
    public JavaScriptInspectionsProcessInHtml(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
    protected virtual void AddThisInGlobalContextWarning(IThisExpression thisExpression, IHighlightingConsumer consumer);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlInJsxInspectionsAnalysesProvider : HtmlAnalysisProvider`2<IHtmlInJsxInspectionsAnalysis, object> {
    public HtmlInJsxInspectionsAnalysesProvider(IEnumerable`1<IHtmlInJsxInspectionsAnalysis> analyses);
    public virtual IEnumerable`1<IHtmlAnalysis> GetAnalysis(IHtmlFile file, IDaemonProcess process);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlInJsxInspectionsAnalysis : HtmlAnalysis`1<Tuple`2<IHighlightingConsumer, IHtmlFile>> {
    public HtmlInJsxInspectionsAnalysis(HtmlInJsxLanguage language);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual void ProcessAfterInterior(ITreeNode element, Tuple`2<IHighlightingConsumer, IHtmlFile> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlInJsxObsoleteAnalysis : HtmlObsoleteAnalysis {
    public HtmlInJsxObsoleteAnalysis(HtmlLanguage language);
    protected virtual void ProcessReference(ContextType context, IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlInJsxResolveProblemHighlighter : HtmlResolveProblemHighlighter {
    public virtual IHighlighting ProcessHtmlTagReference(IReference reference);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlInJsxSyntaxHighlighterAnalysis : HtmlSyntaxHighlighterAnalysisBase {
    public HtmlInJsxSyntaxHighlighterAnalysis(HtmlInJsxLanguage language);
}
[HtmlAnalysisProviderAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlInJsxSyntaxHighlightingAnalysesProvider : HtmlAnalysisProvider`2<IHtmlInJsxSyntaxAnalysis, object> {
    public HtmlInJsxSyntaxHighlightingAnalysesProvider(IEnumerable`1<IHtmlInJsxSyntaxAnalysis> analyses);
    public virtual IEnumerable`1<IHtmlAnalysis> GetAnalysis(IHtmlFile file, IDaemonProcess process);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.HtmlInJsx.HtmlInJsxLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlInJsxTagClosingAnalysis : HtmlTagClosingAnalysis {
    public HtmlInJsxTagClosingAnalysis(HtmlLanguage language);
    protected virtual void HtmlTagShouldBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual void HtmlTagShouldNotBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
}
[ConfigurableSeverityHighlightingAttribute("Html.AttributeNotResolved", "HTML")]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.HtmlJsxWrongAttributeHighlighting : HtmlWarningHighlighting {
    private IHtmlAttributeName myAttributeName;
    internal static string SEVERITY_ID;
    public IHtmlAttributeName AttributeName { get; }
    public HtmlJsxWrongAttributeHighlighting(IHtmlAttributeName attributeName, Object[] args);
    public virtual bool IsValid();
    public IHtmlAttributeName get_AttributeName();
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.IHtmlInJsxInspectionsAnalysis {
}
[HighlightingSourceAttribute]
public interface JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.IHtmlInJsxSyntaxAnalysis {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Html.Jsx.ZoneMarker : object {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.InjectedJavaScriptDaemonBehaviour : JavaScriptDaemonBehaviourBase {
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.JavaScript.InjectedJavaScriptIdentifierTooltipProvider : IdentifierTooltipProvider`1<InjectedJavaScriptLanguage> {
    public InjectedJavaScriptIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
    protected virtual DeclaredElementPresenterStyle GetPresenterStyle(PsiLanguageType primaryLanguage, PsiLanguageType projectLanguage);
    protected virtual DeclaredElementInstance GetCustomElementInstance(ITreeNode element);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptDaemonBehaviour : JavaScriptDaemonBehaviourBase {
}
internal class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptDaemonBehaviourBase : LanguageSpecificDaemonBehavior {
    public virtual ErrorStripeRequestWithDescription InitialErrorStripe(IPsiSourceFile sourceFile);
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptDaemonStageBase : object {
    protected bool ShouldRunOnGenerated { get; }
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected virtual bool get_ShouldRunOnGenerated();
    [CanBeNullAttribute]
protected abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptDaemonStageProcessBase : JavaScriptDaemonStageProcessBase`1<IHighlightingConsumer> {
    protected JavaScriptDaemonStageProcessBase(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    protected void HighlightInFile(Action`2<IJavaScriptFile, IHighlightingConsumer> fileHighlighter, Action`1<DaemonStageResult> commiter);
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptDaemonStageProcessBase`1 : TreeNodeVisitor`1<TContext> {
    protected IDaemonProcess myDaemonProcess;
    protected IContextBoundSettingsStore mySettingsStore;
    private IJavaScriptFile myFile;
    [CompilerGeneratedAttribute]
private IPsiServices <PsiServices>k__BackingField;
    protected IPsiServices PsiServices { get; }
    public IDaemonProcess DaemonProcess { get; }
    protected IContextBoundSettingsStore SettingsStore { get; }
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    internal IPsiSourceFile SourceFile { get; }
    protected internal IJavaScriptFile File { get; }
    protected JavaScriptDaemonStageProcessBase`1(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    [CompilerGeneratedAttribute]
protected IPsiServices get_PsiServices();
    public sealed virtual IDaemonProcess get_DaemonProcess();
    protected IContextBoundSettingsStore get_SettingsStore();
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    internal IPsiSourceFile get_SourceFile();
    protected internal IJavaScriptFile get_File();
    public abstract virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, TContext context);
    public sealed virtual bool IsProcessingFinished(TContext context);
    public virtual void ProcessBeforeInterior(ITreeNode element, TContext consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, TContext consumer);
}
internal static class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptErrorUtil : object {
    public static DocumentRange TranslateRange(ITreeNode node, TreeTextRange range);
}
public class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptFileStructure : FileStructureBase {
    public JavaScriptFileStructure(IJavaScriptFile file);
}
[FileStructureExplorerAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptFileStructureExplorer : object {
    public sealed virtual IFileStructure ExploreFile(IFile file, IContextBoundSettingsStore settingsStore, Predicate`1<DocumentRange> isRangeInvalidated);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptIdentifierTooltipProvider : IdentifierTooltipProvider`1<JavaScriptLanguage> {
    public JavaScriptIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
    protected virtual DeclaredElementInstance GetCustomElementInstance(ITreeNode element);
    protected virtual DeclaredElementPresenterStyle GetPresenterStyle(PsiLanguageType primaryLanguage, PsiLanguageType projectLanguage);
}
[ProjectFileTypeAttribute("JetBrains.ProjectModel.JavaScriptProjectFileType", "0")]
public class JetBrains.ReSharper.Daemon.JavaScript.JavaScriptSyntaxHighlighting : SyntaxHighlighting {
    private NodeTypeSet KEYWORDS;
    private NodeTypeSet STRINGS;
    public JavaScriptSyntaxHighlighting(JavaScriptProjectFileType projectFileType, SolutionsManager solutionManager, ITextControlSchemeManager textControlSchemeManager);
    protected virtual bool IsBlockComment(TokenNodeType tokenType);
    protected virtual bool IsLineComment(TokenNodeType tokenType);
    protected virtual bool IsString(TokenNodeType tokenType);
    protected virtual bool IsKeyword(TokenNodeType tokenType);
    protected virtual bool IsNumber(TokenNodeType tokenType);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JSon.JsonLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.JsonDaemonBehaviour : LanguageSpecificDaemonBehavior {
    public virtual ErrorStripeRequestWithDescription InitialErrorStripe(IPsiSourceFile sourceFile);
}
[SolutionComponentAttribute("10")]
internal class JetBrains.ReSharper.Daemon.JavaScript.JsonIdentifierTooltipProvider : IdentifierTooltipProvider`1<JsonLanguage> {
    private IJsonSchemaManager myJsonSchemaManager;
    private ISolution mySolution;
    private IEnumerable`1<IJsonTooltipExtenderProvider> myTooltipExtenders;
    private DaemonBase myDaemon;
    private IPsiServices myPsiServices;
    private IShellLocks myLocks;
    public JsonIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, IJsonSchemaManager jsonSchemaManager, IEnumerable`1<IJsonTooltipExtenderProvider> jsonTooltipExtenders, DaemonBase daemon, IPsiServices psiServices, IShellLocks locks, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
    protected virtual DeclaredElementInstance GetCustomElementInstance(ITreeNode element);
    protected IHighlighting GetHighlighting(IHighlighter highlighter);
    protected virtual RichTextBlock GetRichTooltip(IHighlighter highlighter, HighlighterTooltipKind where);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_0();
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.NpmJsonTooltipExtenderProvider : TooltipExtenderWithRequestsBase {
    private static string NpmRegistry;
    private IJsonSchemaManager mySchemaManager;
    public NpmJsonTooltipExtenderProvider(ISchemaDownloader requestHelper, IJsonSchemaManager schemaManager);
    public sealed virtual RichTextBlock GetAdditionalInfo(IJsonSchema schema, ITreeNode node, bool extendedInfo);
    private static bool NightlyPackageVersionFilter(string it);
    [CanBeNullAttribute]
private string GetJsonForLatestPackageInfo(string text);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.NuGetJsonTooltipExtenderProvider : TooltipExtenderWithRequestsBase {
    private IJsonSchemaManager mySchemaManager;
    public NuGetJsonTooltipExtenderProvider(ISchemaDownloader requestHelper, IJsonSchemaManager schemaManager);
    public sealed virtual RichTextBlock GetAdditionalInfo(IJsonSchema schema, ITreeNode node, bool extendedInfo);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Prelude.TypeScript.TsDaemonBehaviour : JavaScriptDaemonBehaviour {
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Prelude.TypeScript.TsDaemonStageProcessBase : TsTreeNodeVisitor`1<IHighlightingConsumer> {
    protected IDaemonProcess myDaemonProcess;
    protected ITsFile myFile;
    protected IContextBoundSettingsStore mySettingsStore;
    [CompilerGeneratedAttribute]
private IPsiServices <PsiServices>k__BackingField;
    protected IPsiServices PsiServices { get; }
    protected IContextBoundSettingsStore SettingsStore { get; }
    internal IPsiSourceFile SourceFile { get; }
    protected internal ITsFile File { get; }
    public IDaemonProcess DaemonProcess { get; }
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    protected TsDaemonStageProcessBase(IDaemonProcess process, IContextBoundSettingsStore settingsStore, ITsFile file);
    [CompilerGeneratedAttribute]
protected IPsiServices get_PsiServices();
    protected IContextBoundSettingsStore get_SettingsStore();
    internal IPsiSourceFile get_SourceFile();
    protected internal ITsFile get_File();
    public sealed virtual IDaemonProcess get_DaemonProcess();
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    public abstract virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer context);
    [PureAttribute]
public sealed virtual bool IsProcessingFinished(IHighlightingConsumer context);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    protected void HighlightInFile(Action`2<IJavaScriptFile, IHighlightingConsumer> fileHighlighter, Action`1<DaemonStageResult> commiter);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.ProblemAnalyzers.BinaryExpressionProblemAnalyzer : ElementProblemAnalyzer`1<IBinaryExpression> {
    public static bool IsStringLiteral(IJavaScriptExpression expr);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.ProblemAnalyzers.BinaryExpressionProblemAnalyzer/<GetAllConcatArguments>d__1")]
public static IEnumerable`1<IJavaScriptExpression> GetAllConcatArguments(IBinaryExpression element);
    protected virtual void Run(IBinaryExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.ProblemAnalyzers.StringProblemAnalyzer : StringProblemAnalyzerBase`1<IJavaScriptLiteralExpression> {
    protected virtual IEnumerable`1<Pair`2<ITokenNode, IStringLexer>> ExtractElements(IJavaScriptLiteralExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    protected virtual void ConsumeInvalidHighlighting(IHighlightingConsumer consumer, DocumentRange highlightingRange, string tokenText, ElementProblemAnalyzerData data);
    protected virtual void ConsumeEscapeHighlighting(IHighlightingConsumer consumer, DocumentRange highlightingRange, IJavaScriptLiteralExpression expression, string highlightingAttributeId, ElementProblemAnalyzerData data);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.ProblemAnalyzers.TemplateAsStringProblemAnalyzer : StringProblemAnalyzerBase`1<ITemplateWithSubstitution> {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.ProblemAnalyzers.TemplateAsStringProblemAnalyzer/<ExtractElements>d__0")]
protected virtual IEnumerable`1<Pair`2<ITokenNode, IStringLexer>> ExtractElements(ITemplateWithSubstitution element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    protected virtual void ConsumeInvalidHighlighting(IHighlightingConsumer consumer, DocumentRange highlightingRange, string tokenText, ElementProblemAnalyzerData data);
    protected virtual void ConsumeEscapeHighlighting(IHighlightingConsumer consumer, DocumentRange highlightingRange, ITemplateWithSubstitution expression, string highlightingAttributeId, ElementProblemAnalyzerData data);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.ProblemAnalyzers.TemplatePartProblemAnalyzer : StringProblemAnalyzerBase`1<ITemplateWithSubstitution> {
    protected virtual IEnumerable`1<Pair`2<ITokenNode, IStringLexer>> ExtractElements(ITemplateWithSubstitution element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    protected virtual void ConsumeEscapeHighlighting(IHighlightingConsumer consumer, DocumentRange highlightingRange, ITemplateWithSubstitution element, string highlightingAttributeId, ElementProblemAnalyzerData data);
}
[ConfigurableSeverityHighlightingAttribute("AbstractClassConstructorCanBeMadeProtected", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AbstractClassConstructorCanBeMadeProtectedWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsConstructorDeclaration <CtorDeclaration>k__BackingField;
    public ITsConstructorDeclaration CtorDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AbstractClassConstructorCanBeMadeProtectedWarning(ITsConstructorDeclaration ctorDeclaration);
    [CompilerGeneratedAttribute]
public ITsConstructorDeclaration get_CtorDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AccessorIsNotAllowedInAmbientDeclaraionsError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsMemberAccessorDeclaration <Accessor>k__BackingField;
    public ITsMemberAccessorDeclaration Accessor { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AccessorIsNotAllowedInAmbientDeclaraionsError(ITsMemberAccessorDeclaration accessor);
    [CompilerGeneratedAttribute]
public ITsMemberAccessorDeclaration get_Accessor();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableCanBeMadeConst", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AllVariablesCanBeMadeConstWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IVariableDeclaration <VariableDeclaration>k__BackingField;
    public IVariableDeclaration VariableDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AllVariablesCanBeMadeConstWarning(IVariableDeclaration variableDeclaration);
    [CompilerGeneratedAttribute]
public IVariableDeclaration get_VariableDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableCanBeMadeLet", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AllVariablesCanBeMadeLetWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IVariableDeclaration <VariableDeclaration>k__BackingField;
    public IVariableDeclaration VariableDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AllVariablesCanBeMadeLetWarning(IVariableDeclaration variableDeclaration);
    [CompilerGeneratedAttribute]
public IVariableDeclaration get_VariableDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AmbientMemberHasBodyError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <LBraceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsClassMemberDeclaration <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode LBraceNode { get; }
    public ITsClassMemberDeclaration Signature { get; }
    public string MyName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AmbientMemberHasBodyError(ITreeNode lBraceNode, ITsClassMemberDeclaration signature, string myName);
    [CompilerGeneratedAttribute]
public ITreeNode get_LBraceNode();
    [CompilerGeneratedAttribute]
public ITsClassMemberDeclaration get_Signature();
    [CompilerGeneratedAttribute]
public string get_MyName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("WrongExpressionStatement", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AnonymousFunctionUsedAsExpressionsStatementWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IFunctionExpression <FunctionExpression>k__BackingField;
    public IFunctionExpression FunctionExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AnonymousFunctionUsedAsExpressionsStatementWarning(IFunctionExpression functionExpression);
    [CompilerGeneratedAttribute]
public IFunctionExpression get_FunctionExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ArgumentsInSignaturesMayNotHaveDefaultValuesError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ArgumentsInSignaturesMayNotHaveDefaultValuesError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AssignedValueIsNeverUsed", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AssignedValueIsNeverUsedWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Element>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeRange <TreeRange>k__BackingField;
    public ITreeNode Element { get; }
    public ITreeRange TreeRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AssignedValueIsNeverUsedWarning(ITreeNode element, ITreeRange treeRange);
    [CompilerGeneratedAttribute]
public ITreeNode get_Element();
    [CompilerGeneratedAttribute]
public ITreeRange get_TreeRange();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AssignedValueWontBeAssignedToCorrespondingField", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AssignedValueWontBeAssignedToCorrespondingFieldWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsAssignmentExpression <Assignment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsAssignmentExpression Assignment { get; }
    public string PropertyName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AssignedValueWontBeAssignedToCorrespondingFieldWarning(ITsAssignmentExpression assignment, string propertyName);
    [CompilerGeneratedAttribute]
public ITsAssignmentExpression get_Assignment();
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AssignmentInConditionExpression", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AssignmentInConditionExpressionWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IAssignmentExpression <AssignmentExpression>k__BackingField;
    public IAssignmentExpression AssignmentExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AssignmentInConditionExpressionWarning(IAssignmentExpression assignmentExpression);
    [CompilerGeneratedAttribute]
public IAssignmentExpression get_AssignmentExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AssignToConstant", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AssignToConstantWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string VariableName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AssignToConstantWarning(IReferenceExpression expression, string variableName);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AssignToImplicitGlobalInFunctionScope", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.AssignToImplicitGlobalInFunctionScopeWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string VariableName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public AssignToImplicitGlobalInFunctionScopeWarning(IReferenceExpression expression, string variableName);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("BlockScopeRedeclaration", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.BlockScopeRedeclarationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ISingleNameBinding <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ISingleNameBinding Declaration { get; }
    public string VariableName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public BlockScopeRedeclarationWarning(ISingleNameBinding declaration, string variableName);
    [CompilerGeneratedAttribute]
public ISingleNameBinding get_Declaration();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CallerCalleeUsingError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CallerCalleeUsingError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CallerCalleeUsingError(IReferenceExpression referenceExpression);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CallerCalleeUsing", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CallerCalleeUsingWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CallerCalleeUsingWarning(IReferenceExpression referenceExpression);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CanNotUseDefaultValueForParametersOfAmbientDeclarationsError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CanNotUseDefaultValueForParametersOfAmbientDeclarationsError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ClassCanOnlyExtendOneOtherClassError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <TypeUsageNode>k__BackingField;
    public ITreeNode TypeUsageNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ClassCanOnlyExtendOneOtherClassError(ITreeNode typeUsageNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_TypeUsageNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ClosureOnModifiedVariable", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ClosureOnModifiedVariableWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ClosureOnModifiedVariableWarning(IReferenceExpression expression);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CoercedEqualsUsing", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CoercedEqualsUsingWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITokenNode <SignNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITokenNode SignNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CoercedEqualsUsingWarning(ITokenNode signNode);
    [CompilerGeneratedAttribute]
public ITokenNode get_SignNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CoercedEqualsUsingWithNullUndefined", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CoercedEqualsUsingWithNullUndefinedWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITokenNode <SignNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActualLiteral>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OtherLiteral>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITokenNode SignNode { get; }
    public string ActualLiteral { get; }
    public string OtherLiteral { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CoercedEqualsUsingWithNullUndefinedWarning(ITokenNode signNode, string actualLiteral, string otherLiteral);
    [CompilerGeneratedAttribute]
public ITokenNode get_SignNode();
    [CompilerGeneratedAttribute]
public string get_ActualLiteral();
    [CompilerGeneratedAttribute]
public string get_OtherLiteral();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CommaNotValidHere", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CommaNotValidHereError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    public ITreeNode Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CommaNotValidHereError(ITreeNode node);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ConditionalTernaryEqualBranch", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ConditionalTernaryEqualBranchWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IConditionalTernaryExpression <Expression>k__BackingField;
    public IConditionalTernaryExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ConditionalTernaryEqualBranchWarning(IConditionalTernaryExpression expression);
    [CompilerGeneratedAttribute]
public IConditionalTernaryExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ConditionIsAlwaysConst", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ConditionIsAlwaysConstWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public bool Value { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ConditionIsAlwaysConstWarning(IJavaScriptExpression expression, bool value);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ConstructorCallNotUsed", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ConstructorCallNotUsedWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private INewExpression <NewExpression>k__BackingField;
    public INewExpression NewExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ConstructorCallNotUsedWarning(INewExpression newExpression);
    [CompilerGeneratedAttribute]
public INewExpression get_NewExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
public interface JetBrains.ReSharper.Daemon.JavaScript.Stages.ControlFlow.IJavaScriptControlFlowAnalysisExecutor {
    [CanBeNullAttribute]
public abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLikeBaseLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ControlFlow.JavaScriptControlFlowAnalysisExecutor : object {
    [NotNullAttribute]
public sealed virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ControlFlow.JavaScriptControlFlowAnalysisProcess : JavaScriptDaemonStageProcessBase {
    private JsSmartResolverProcess mySmartResolverProcess;
    private JavaScriptFileIndexProcess myFileIndex;
    private JavaScriptServices myServices;
    protected JsInitialResolveContext myContext;
    private JavaScriptLanguageLevel myLanguageLevel;
    private TypeScriptLanguageLevel myTsLanguageLevel;
    public JavaScriptControlFlowAnalysisProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    protected virtual IEnumerable`1<JsSmartResolverProcess> GetSmartResolverProcess(IDaemonProcess process);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void VisitJavaScriptFile(IJavaScriptFile javaScriptFileParam, IHighlightingConsumer context);
    public void VisitFunctionLike(IJsFunctionLike functionExpression, IHighlightingConsumer consumer);
    private void InspectAndHighlightResults(IControlFlowGraph graph, IHighlightingConsumer consumer);
    private void SuggestUseDestructuring(JsControlFlowGraphInspector inspector, IHighlightingConsumer consumer);
    private void CheckForDestructuring(TreeOffset readOffset, TreeOffset writeOffset, int index0, int index1, int index, JsControlFlowGraphInspector inspector, IHighlightingConsumer consumer, IReferenceExpression readNode, ITreeNode deletedNode);
    public static ITreeNode GetNodeToHighlight(ISingleNameBinding variableBinding);
    public static ITreeNode GetNodeToHighlight(IVariableDeclaration variableDeclaration);
    private bool CheckCanMakeVariableBlockScope(JsControlFlowGraphInspector inspector, IJavaScriptLocalElement element, int varIndex, Boolean& canBeConst, ISingleNameBinding& targetDeclaration);
    private bool CheckCanMakeLetVariableConst(JsControlFlowGraphInspector inspector, IJavaScriptLocalElement blockScopeItem, int varIndex, ISingleNameBinding& targetDeclaration);
    private void SuggestMoveToInnerBlock(JsControlFlowGraphInspector inspector, IHighlightingConsumer consumer);
    private static void CheckOutestBlock(IBlock& outestBlock, IBlock containingBlock);
    private bool FilterLoop(IBlock outestBlock, IVariableDeclaration decl, IEnumerable`1<ITreeNode> writeUsages, IBlock ownerBlock);
    private static bool FilterSingleLoop(IBlock outestBlock, IVariableDeclaration decl, IEnumerable`1<ITreeNode> writeUsages);
    private void SuggestConvertToLetOrConst(JsControlFlowGraphInspector inspector, IHighlightingConsumer consumer);
    private void SuggestJoinDeclarationAndInitializer(JsControlFlowGraphInspector inspector, IHighlightingConsumer consumer);
    protected virtual bool SkipFromNonFunctionByType(IJavaScriptExpression expression);
    protected virtual JsControlFlowGraphInspector CreateControlFlowInspector(ControlFlowGraph controlFlowGraph, JavaScriptServices javaScriptServices, JsInitialResolveContext context);
    private void HighlightValueAnalysisResult(IJsValueAnalysisResults results, IHighlightingConsumer consumer);
    public virtual void VisitAccessorBody(IAccessorBody accessorBodyParam, IHighlightingConsumer consumer);
    public virtual void VisitFunctionExpression(IFunctionExpression functionExpression, IHighlightingConsumer consumer);
    private void HighlightFunctionExitsProblems(IJsFunctionLike functionExpression, IJsControlFlowGraph graph, IHighlightingConsumer consumer);
    private static DocumentRange GetNotAllPathsReturnValueWarningRange(IJsFunctionLike functionExpression);
    private void HighlightReachingDefinitionsResult(IReachingDefinitionsResult result, ITreeNode sourceElement, IHighlightingConsumer consumer);
    private static bool ShouldHighlightAccessToUnassigned(IJavaScriptExpression referenceExpressionUsage);
    private bool ContainsResolveGuards(IEnumerable`1<IDeclaredElement> elements, IDeclaredElement element);
    private bool IsNullAssignment(ITreeNode usage);
    private void HighlightAssignedValueNeverUsed(IHighlightingConsumer consumer, IReachingDefinitionsResult inspector);
    private void HighlightUnusedSymbols(IHighlightingConsumer consumer);
    protected virtual bool SkipParameterFromUnused(IJavaScriptLocalElement javaScriptLocalElement);
    protected virtual bool SignatureIsPublic(IJavaScriptLocalScope signatureOwner);
    protected virtual bool ParameterOwnerIsInherited(IDeclaredElement parameterElement);
    private void HighlightUnusedElement(IHighlightingConsumer consumer, IDeclaredElement declaredElement);
    private static bool IsReactReference(IDeclaration declaration);
    private static ITreeRange GetTreeRangeOfReadUsage(ITreeNode readUsage);
    private static ITreeRange GetTreeRangeOfWriteUsage(ITreeNode writeUsage);
    private void HighlightStaticErrors(IJsControlFlowGraph graph, IHighlightingConsumer consumer);
    private void HighlightDeadCode(IControlFlowGraph graph, IHighlightingConsumer consumer);
    protected virtual bool SkipFromUnreachable(ITreeNode element);
    private static IEnumerable`1<ITreeRange> SortDeadCode(IEnumerable`1<ITreeNode> elements);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__6_0(JavaScriptFileIndexProcess p);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__6_1(JsSmartResolverProcess p);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ControlFlow.JavaScriptControlFlowAnalysisStage : JavaScriptDaemonStageBase {
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[ConfigurableSeverityHighlightingAttribute("CreateSpecializedOverload", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CreateSpecializedOverloadWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsLiteralExpression <HighlightedExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsType <SignaturesParent>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsFunctionSignature <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsInvocationLikeExpression <Invocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    public ITsLiteralExpression HighlightedExpression { get; }
    public ITsType SignaturesParent { get; }
    public IJsFunctionSignature Signature { get; }
    public ITsInvocationLikeExpression Invocation { get; }
    public string ParameterName { get; }
    public int Index { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CreateSpecializedOverloadWarning(ITsLiteralExpression highlightedExpression, ITsType signaturesParent, IJsFunctionSignature signature, ITsInvocationLikeExpression invocation, string parameterName, int index);
    [CompilerGeneratedAttribute]
public ITsLiteralExpression get_HighlightedExpression();
    [CompilerGeneratedAttribute]
public ITsType get_SignaturesParent();
    [CompilerGeneratedAttribute]
public IJsFunctionSignature get_Signature();
    [CompilerGeneratedAttribute]
public ITsInvocationLikeExpression get_Invocation();
    [CompilerGeneratedAttribute]
public string get_ParameterName();
    [CompilerGeneratedAttribute]
public int get_Index();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("CyclicReferenceComment", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.CyclicReferenceCommentWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CyclicFileName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ActualNode>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string FileName { get; }
    public string CyclicFileName { get; }
    public ITreeNode ActualNode { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public CyclicReferenceCommentWarning(ITreeNode modifierNode, string fileName, string cyclicFileName, ITreeNode actualNode, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public string get_CyclicFileName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ActualNode();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationHides", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DeclarationHidesWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <HiddenElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public IDeclaredElement HiddenElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DeclarationHidesWarning(IDeclaration declaration, IDeclaredElement hiddenElement);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_HiddenElement();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeletingNonQualifiedReference", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DeletingNonQualifiedReferenceError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IPrefixExpression <PrefixExpression>k__BackingField;
    public IPrefixExpression PrefixExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DeletingNonQualifiedReferenceError(IPrefixExpression prefixExpression);
    [CompilerGeneratedAttribute]
public IPrefixExpression get_PrefixExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("XmlDocCommentSyntaxProblem", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DocCommentXmlSyntaxWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IHighlighting <BaseHighlighting>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IHighlighting BaseHighlighting { get; }
    public DocumentRange DocumentRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DocCommentXmlSyntaxWarning(IHighlighting baseHighlighting, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public IHighlighting get_BaseHighlighting();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DoubleNegationOfBoolean", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DoubleNegationOfBooleanWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsPrefixExpression <OuterExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsPrefixExpression <InnerExpression>k__BackingField;
    public ITsPrefixExpression OuterExpression { get; }
    public ITsPrefixExpression InnerExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DoubleNegationOfBooleanWarning(ITsPrefixExpression outerExpression, ITsPrefixExpression innerExpression);
    [CompilerGeneratedAttribute]
public ITsPrefixExpression get_OuterExpression();
    [CompilerGeneratedAttribute]
public ITsPrefixExpression get_InnerExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicateAmbientDeclarationError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <Modifier>k__BackingField;
    public ITreeNode Modifier { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicateAmbientDeclarationError(ITreeNode modifier);
    [CompilerGeneratedAttribute]
public ITreeNode get_Modifier();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicateModifierError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicateModifierError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DuplicateReferenceComment", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicateReferenceCommentWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ActualNode>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string FileName { get; }
    public ITreeNode ActualNode { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicateReferenceCommentWarning(ITreeNode modifierNode, string fileName, ITreeNode actualNode, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ActualNode();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DuplicatingLocalDeclaration", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicatingLocalDeclarationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicatingLocalDeclarationWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DuplicatingParameterDeclarationError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicatingParameterDeclarationError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicatingParameterDeclarationError(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DuplicatingPropertyDeclarationError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicatingPropertyDeclarationError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private INamedObjectPropertyDeclaration <Declaration>k__BackingField;
    public INamedObjectPropertyDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicatingPropertyDeclarationError(INamedObjectPropertyDeclaration declaration);
    [CompilerGeneratedAttribute]
public INamedObjectPropertyDeclaration get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DuplicatingPropertyDeclaration", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicatingPropertyDeclarationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private INamedObjectPropertyDeclaration <Declaration>k__BackingField;
    public INamedObjectPropertyDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicatingPropertyDeclarationWarning(INamedObjectPropertyDeclaration declaration);
    [CompilerGeneratedAttribute]
public INamedObjectPropertyDeclaration get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DuplicatingSwitchLabel", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.DuplicatingSwitchLabelWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICaseCaseClause <CaseClause>k__BackingField;
    public ICaseCaseClause CaseClause { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public DuplicatingSwitchLabelWarning(ICaseCaseClause caseClause);
    [CompilerGeneratedAttribute]
public ICaseCaseClause get_CaseClause();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ElidedTrailingElement", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ElidedTrailingElementWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private IArrayLiteral <ArrayLiteral>k__BackingField;
    public DocumentRange DocumentRange { get; }
    public IArrayLiteral ArrayLiteral { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ElidedTrailingElementWarning(DocumentRange documentRange, IArrayLiteral arrayLiteral);
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public IArrayLiteral get_ArrayLiteral();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("EmptyObjectPropertyDeclaration", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.EmptyObjectPropertyDeclarationError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <FirstNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <LastNode>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    public ITreeNode FirstNode { get; }
    public ITreeNode LastNode { get; }
    public DocumentRange DocumentRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public EmptyObjectPropertyDeclarationError(ITreeNode firstNode, ITreeNode lastNode, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public ITreeNode get_FirstNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_LastNode();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("EmptyReturnValueForTypeAnnotatedFunction", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.EmptyReturnValueForTypeAnnotatedFunctionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReturnStatement <Node>k__BackingField;
    public IReturnStatement Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public EmptyReturnValueForTypeAnnotatedFunctionWarning(IReturnStatement node);
    [CompilerGeneratedAttribute]
public IReturnStatement get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ErrorInXmlDocReference", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ErrorInXmlDocReferenceWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptDocCommentBlock <DocComment>k__BackingField;
    [CompilerGeneratedAttribute]
private IPathReference <PathReference>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tooltip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptDocCommentBlock DocComment { get; }
    public IPathReference PathReference { get; }
    public DocumentRange DocumentRange { get; }
    public string Tooltip { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ErrorInXmlDocReferenceWarning(IJavaScriptDocCommentBlock docComment, IPathReference pathReference, DocumentRange documentRange, string tooltip);
    [CompilerGeneratedAttribute]
public IJavaScriptDocCommentBlock get_DocComment();
    [CompilerGeneratedAttribute]
public IPathReference get_PathReference();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    [CompilerGeneratedAttribute]
public string get_Tooltip();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("Es6Feature", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.Es6FeatureError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Node { get; }
    public string CurrentLevel { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public Es6FeatureError(ITreeNode node, string currentLevel);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    [CompilerGeneratedAttribute]
public string get_CurrentLevel();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.Es6TargetRequiredError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DescriptionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string DescriptionString { get; }
    public string CurrentLevel { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public Es6TargetRequiredError(ITreeNode modifierNode, string descriptionString, string currentLevel);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_DescriptionString();
    [CompilerGeneratedAttribute]
public string get_CurrentLevel();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.Es6UnsupportedFeatureError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DescriptionString>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPlural>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string DescriptionString { get; }
    public bool IsPlural { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public Es6UnsupportedFeatureError(ITreeNode modifierNode, string descriptionString, bool isPlural);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_DescriptionString();
    [CompilerGeneratedAttribute]
public bool get_IsPlural();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("Es7Feature", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.Es7FeatureError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Node { get; }
    public string CurrentLevel { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public Es7FeatureError(ITreeNode node, string currentLevel);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    [CompilerGeneratedAttribute]
public string get_CurrentLevel();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.Es7UnsupportedFeatureError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DescriptionString>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPlural>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string DescriptionString { get; }
    public bool IsPlural { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public Es7UnsupportedFeatureError(ITreeNode modifierNode, string descriptionString, bool isPlural);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_DescriptionString();
    [CompilerGeneratedAttribute]
public bool get_IsPlural();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("EvalArgumentsNameError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.EvalArgumentsInAssignmentError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Reference>k__BackingField;
    public ITreeNode Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public EvalArgumentsInAssignmentError(ITreeNode reference);
    [CompilerGeneratedAttribute]
public ITreeNode get_Reference();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("EvalArgumentsNameError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.EvalArgumentsInPrefixPostfixError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Reference>k__BackingField;
    public ITreeNode Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public EvalArgumentsInPrefixPostfixError(ITreeNode reference);
    [CompilerGeneratedAttribute]
public ITreeNode get_Reference();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("EvalArgumentsNameError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.EvalArgumentsNameError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public EvalArgumentsNameError(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("EvalArgumentsNameError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.EvalArgumentsNameInTsModuleError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsModuleQualifiedName <ModuleName>k__BackingField;
    public ITsModuleQualifiedName ModuleName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public EvalArgumentsNameInTsModuleError(ITsModuleQualifiedName moduleName);
    [CompilerGeneratedAttribute]
public ITsModuleQualifiedName get_ModuleName();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ExperimentalFeature", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ExperimentalFeatureError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Node { get; }
    public string CurrentLevel { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ExperimentalFeatureError(ITreeNode node, string currentLevel);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    [CompilerGeneratedAttribute]
public string get_CurrentLevel();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ExportAssignmentDotError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsExportAssignment <Parameter>k__BackingField;
    public ITsExportAssignment Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ExportAssignmentDotError(ITsExportAssignment parameter);
    [CompilerGeneratedAttribute]
public ITsExportAssignment get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ExpressionIsAlwaysConst", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ExpressionIsAlwaysConstWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private JsVariableStateExtended <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public JsVariableStateExtended Value { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ExpressionIsAlwaysConstWarning(IJavaScriptExpression expression, JsVariableStateExtended value);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    [CompilerGeneratedAttribute]
public JsVariableStateExtended get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.FileStructureState.JavaScriptFileIndexProcess : JavaScriptDaemonStageProcessBase {
    [CompilerGeneratedAttribute]
private List`1<IBlockScope> <Functions>k__BackingField;
    [CompilerGeneratedAttribute]
private OneToListMap`2<IBlockScope, IReturnStatement> <FunctionReturns>k__BackingField;
    [CompilerGeneratedAttribute]
private OneToListMap`2<IBlockScope, IThrowStatement> <FunctionThrows>k__BackingField;
    [CompilerGeneratedAttribute]
private OneToSetMap`2<IBlockScope, string> <FieldsDefinedInFunction>k__BackingField;
    [CompilerGeneratedAttribute]
private OneToSetMap`2<IBlockScope, string> <LabelsDefinedInFunction>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <FileScopeLabels>k__BackingField;
    [NotNullAttribute]
protected Stack`1<IBlockScope> Scopes;
    [NotNullAttribute]
public List`1<IBlockScope> Functions { get; }
    [NotNullAttribute]
public OneToListMap`2<IBlockScope, IReturnStatement> FunctionReturns { get; }
    [NotNullAttribute]
public OneToListMap`2<IBlockScope, IThrowStatement> FunctionThrows { get; }
    [NotNullAttribute]
public OneToSetMap`2<IBlockScope, string> FieldsDefinedInFunction { get; }
    [NotNullAttribute]
public OneToSetMap`2<IBlockScope, string> LabelsDefinedInFunction { get; }
    [NotNullAttribute]
public List`1<string> FileScopeLabels { get; }
    public JavaScriptFileIndexProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    [CompilerGeneratedAttribute]
public List`1<IBlockScope> get_Functions();
    [CompilerGeneratedAttribute]
public OneToListMap`2<IBlockScope, IReturnStatement> get_FunctionReturns();
    [CompilerGeneratedAttribute]
public OneToListMap`2<IBlockScope, IThrowStatement> get_FunctionThrows();
    [CompilerGeneratedAttribute]
public OneToSetMap`2<IBlockScope, string> get_FieldsDefinedInFunction();
    [CompilerGeneratedAttribute]
public OneToSetMap`2<IBlockScope, string> get_LabelsDefinedInFunction();
    [CompilerGeneratedAttribute]
public List`1<string> get_FileScopeLabels();
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void VisitThrowStatement(IThrowStatement throwStatementParam, IHighlightingConsumer context);
    public virtual void VisitReturnStatement(IReturnStatement returnStatementParam, IHighlightingConsumer context);
    public virtual void VisitLabelledStatement(ILabelledStatement labelledStatementParam, IHighlightingConsumer context);
    public virtual void VisitStructuredAssignmentExpression(IStructuredAssignmentExpression assignmentExpression, IHighlightingConsumer context);
    public virtual void VisitSimpleAssignmentExpression(ISimpleAssignmentExpression assignmentExpression, IHighlightingConsumer context);
    [CompilerGeneratedAttribute]
private void <Execute>b__20_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.FileStructureState.JavaScriptFileIndexStage : JavaScriptDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[ConfigurableSeverityHighlightingAttribute("FunctionParameterNamedArguments", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.FunctionParameterNamedArgumentsWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Parameter>k__BackingField;
    public IDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public FunctionParameterNamedArgumentsWarning(IDeclaration parameter);
    [CompilerGeneratedAttribute]
public IDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.FunctionStatementShouldDeclareNameError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <FunctionKeyword>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsFunctionStatementSignature <Signature>k__BackingField;
    public ITreeNode FunctionKeyword { get; }
    public ITsFunctionStatementSignature Signature { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public FunctionStatementShouldDeclareNameError(ITreeNode functionKeyword, ITsFunctionStatementSignature signature);
    [CompilerGeneratedAttribute]
public ITreeNode get_FunctionKeyword();
    [CompilerGeneratedAttribute]
public ITsFunctionStatementSignature get_Signature();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("FunctionsUsedBeforeDeclared", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.FunctionUsedBeforeDeclaredWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptDeclaration <Function>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public IJavaScriptDeclaration Function { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public FunctionUsedBeforeDeclaredWarning(IReferenceExpression referenceExpression, IJavaScriptDeclaration function);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    [CompilerGeneratedAttribute]
public IJavaScriptDeclaration get_Function();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("FunctionUsedOutOfScope", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.FunctionUsedOutOfBlockWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptDeclaration <Function>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public IJavaScriptDeclaration Function { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public FunctionUsedOutOfBlockWarning(IReferenceExpression referenceExpression, IJavaScriptDeclaration function);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    [CompilerGeneratedAttribute]
public IJavaScriptDeclaration get_Function();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.GetterCanNotHaveParametersError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsMemberAccessorDeclaration <Accessor>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsMemberAccessorDeclaration Accessor { get; }
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public GetterCanNotHaveParametersError(ITsMemberAccessorDeclaration accessor, ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsMemberAccessorDeclaration get_Accessor();
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("HeuristicallyUnreachableCode", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.HeuristicallyUnreachableCodeWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeRange <TreeRange>k__BackingField;
    public ITreeRange TreeRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public HeuristicallyUnreachableCodeWarning(ITreeRange treeRange);
    [CompilerGeneratedAttribute]
public ITreeRange get_TreeRange();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IdentifierHighlighterProcess : JavaScriptDaemonStageProcessBase {
    private JsInitialResolveContext myContext;
    private JsVsSupportedFeatureMarker myFeatureMarker;
    [CanBeNullAttribute]
private IJavaScriptIdentifierHighlighter myHighlighter;
    private bool myIdentifierHighlightingEnabled;
    private bool myIsInjected;
    private bool myJsSemanticFunctions;
    private DaemonProcessKind myProcessKind;
    private ResolveProblemHighlighter myResolveProblemHighlighter;
    private bool myTsSemanticGuards;
    private bool IdentifierHighlightingEnabled { get; }
    public IdentifierHighlighterProcess(ResolveHighlighterRegistrar resolveHighlighterRegistrar, IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, IJavaScriptFile file, DaemonProcessKind processKind, JsVsSupportedFeatureMarker featureMarker, ConfigurableIdentifierHighlightingStageService identifierHighlightingStageService);
    private bool get_IdentifierHighlightingEnabled();
    public virtual void VisitNode(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    [CompilerGeneratedAttribute]
private void <Execute>b__13_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ImplementsClauseIsUnexpectedError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsBaseTypeClause <ImplementsClause>k__BackingField;
    public ITsBaseTypeClause ImplementsClause { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ImplementsClauseIsUnexpectedError(ITsBaseTypeClause implementsClause);
    [CompilerGeneratedAttribute]
public ITsBaseTypeClause get_ImplementsClause();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImportKeywordNotWithInvocation", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ImportKeywordNotWithInvocationError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ImportKeywordNotWithInvocationError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InconsistentFunctionReturns", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InconsistentFunctionReturnsWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReturnStatement <ReturnStatement>k__BackingField;
    public IReturnStatement ReturnStatement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InconsistentFunctionReturnsWarning(IReturnStatement returnStatement);
    [CompilerGeneratedAttribute]
public IReturnStatement get_ReturnStatement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InconsistentOverloadStaticnesError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsMemberFunctionOverloadDeclaration <Overload>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsClassMemberDeclaration <Member>k__BackingField;
    public ITreeNode HighlightedNode { get; }
    public ITsMemberFunctionOverloadDeclaration Overload { get; }
    public ITsClassMemberDeclaration Member { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InconsistentOverloadStaticnesError(ITreeNode highlightedNode, ITsMemberFunctionOverloadDeclaration overload, ITsClassMemberDeclaration member);
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightedNode();
    [CompilerGeneratedAttribute]
public ITsMemberFunctionOverloadDeclaration get_Overload();
    [CompilerGeneratedAttribute]
public ITsClassMemberDeclaration get_Member();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InconsistentOverloadVisibilityError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsMemberFunctionOverloadDeclaration <Overload>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsClassMemberDeclaration <Member>k__BackingField;
    public ITreeNode HighlightedNode { get; }
    public ITsMemberFunctionOverloadDeclaration Overload { get; }
    public ITsClassMemberDeclaration Member { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InconsistentOverloadVisibilityError(ITreeNode highlightedNode, ITsMemberFunctionOverloadDeclaration overload, ITsClassMemberDeclaration member);
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightedNode();
    [CompilerGeneratedAttribute]
public ITsMemberFunctionOverloadDeclaration get_Overload();
    [CompilerGeneratedAttribute]
public ITsClassMemberDeclaration get_Member();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IncorrectBaseTypeError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <TypeUsageType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <TypeUsageNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string TypeUsageType { get; }
    public ITreeNode TypeUsageNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IncorrectBaseTypeError(string typeUsageType, ITreeNode typeUsageNode);
    [CompilerGeneratedAttribute]
public string get_TypeUsageType();
    [CompilerGeneratedAttribute]
public ITreeNode get_TypeUsageNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("IncorrectOperandInTypeOfComparison", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IncorrectOperandInTypeOfComparisonWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptLiteralExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptLiteralExpression Expression { get; }
    public string Value { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IncorrectOperandInTypeOfComparisonWarning(IJavaScriptLiteralExpression expression, string value);
    [CompilerGeneratedAttribute]
public IJavaScriptLiteralExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("IncorrectTripleSlashLocation", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IncorrectTripleSlashLocationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDocCommentNode <CommentNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanMove>k__BackingField;
    public IDocCommentNode CommentNode { get; }
    public bool CanMove { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IncorrectTripleSlashLocationWarning(IDocCommentNode commentNode, bool canMove);
    [CompilerGeneratedAttribute]
public IDocCommentNode get_CommentNode();
    [CompilerGeneratedAttribute]
public bool get_CanMove();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IndexSignatureParameterCanNotBeOptionalError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IndexSignatureParameterCanNotBeOptionalError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IndexSignatureParameterCanNotBeRestError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IndexSignatureParameterCanNotBeRestError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IndexSignatureParameterCanNotHaveDefaultValueError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IndexSignatureParameterCanNotHaveDefaultValueError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IndexSignatureShouldTakeOneParameterError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsIndexSignatureDeclaration <Signature>k__BackingField;
    public ITsIndexSignatureDeclaration Signature { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IndexSignatureShouldTakeOneParameterError(ITsIndexSignatureDeclaration signature);
    [CompilerGeneratedAttribute]
public ITsIndexSignatureDeclaration get_Signature();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.InitialStageProcess : JavaScriptDaemonStageProcessBase {
    private IElementAnalyzerDispatcher myElementAnalyzerDispatcher;
    private JsInitialResolveContext myJsResolveContext;
    private JavaScriptFileIndexProcess myFileIndex;
    public JavaScriptFileIndexProcess FileIndex { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public InitialStageProcess(IDaemonProcess process, DaemonProcessKind processKind, IContextBoundSettingsStore settingsStore, IJavaScriptFile file, ElementProblemAnalyzerRegistrar elementProblemAnalyzerRegistrar);
    public JavaScriptFileIndexProcess get_FileIndex();
    public JsInitialResolveContext get_ResolveContext();
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__3_0(JavaScriptFileIndexProcess p);
    [CompilerGeneratedAttribute]
private void <Execute>b__9_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
public interface JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.IJavaScriptInspectionsProcessExecutor {
    public abstract virtual IDaemonStageProcess CreateInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
public interface JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.IJavaScriptInspectionsProcessFactory {
    public abstract virtual IDaemonStageProcess CreateInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[SettingsKeyAttribute("JetBrains.ReSharper.Resources.Settings.CodeInspectionSettings", "JetBrains.ReSharper.Daemon.Resources.Strings10", "JavaScriptInspectionsSettingsSettingDescription")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.InspectionsSettingsKey : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IgnoreAssignmentInConditionWarningIfThereAreParenthesesAroundAssignmentExpressionSettingDescription")]
public bool IgnoreAssignmentInConditionOnParentheses;
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.JavaScriptInspectionsProcess : JavaScriptDaemonStageProcessBase {
    private IEmbeddedJsInfoProvider myEmbeddedJsInfoProvider;
    private Stack`1<IJsFunctionLike> myFunctions;
    private Stack`1<IJavaScriptVariableScope> myScopes;
    private JavaScriptFileIndexProcess myFileIndex;
    private bool myIsStandaloneScript;
    private INamingPolicyProvider myPolicyProvider;
    private XmlAnalysisManager myXmlAnalysisManager;
    private ISettingsOptimization mySettingsOptimizationComponent;
    private QuoteStyle myQuoteStyle;
    private TerminationStyle myTerminationStyle;
    private JsInitialResolveContext myResolveContext;
    private bool myAlwaysStrict;
    private IJavaScriptDirectiveOwner myCurrentStrictScope;
    private InspectionsSettingsKey myInspectionsSettingsKey;
    private OneToListMap`2<string, IJavaScriptVariableScope> myLocalDeclarationsToScopes;
    private Dictionary`2<IJavaScriptVariableScope, OneToListMap`2<string, IJavaScriptDeclaration>> myScopesToDeclarations;
    private Lazy`1<ICollection`1<VirtualFileSystemPath>> myDependentFiles;
    private JavaScriptLanguageLevel myLanguageLevel;
    public JavaScriptInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    private bool IsInStrictContext();
    public virtual void VisitThisExpression(IThisExpression thisExpression, IHighlightingConsumer consumer);
    protected virtual void AddThisInGlobalContextWarning(IThisExpression thisExpression, IHighlightingConsumer consumer);
    protected virtual bool ShouldHighlightReservedKeywordsUsing();
    public virtual void VisitObjectPropertyDeclaration(IObjectPropertyDeclaration declaration, IHighlightingConsumer consumer);
    private static bool IsReservedJavaScriptKeyword(string name, JavaScriptLanguageLevel level, bool isStrictMode);
    public static void HighlightReservedWordInObjectProperty(IJavaScriptFile javaScriptFile, IObjectPropertyDeclaration declaration, IHighlightingConsumer consumer, bool strictContext, JavaScriptLanguageLevel level);
    public virtual void VisitNode(ITreeNode element, IHighlightingConsumer consumer);
    protected virtual bool ShouldHighlightDuplicatingProperties();
    public virtual void VisitBlockLambdaExpression(IBlockLambdaExpression blockLambdaExpressionParam, IHighlightingConsumer context);
    private static void HighlightSuspiciousLambdaBlock(IHighlightingConsumer context, IBlock block);
    public virtual void VisitObjectLiteral(IObjectLiteral objectLiteral, IHighlightingConsumer consumer);
    public virtual void VisitArrayLiteral(IArrayLiteral arrayLiteral, IHighlightingConsumer consumer);
    public virtual void VisitPrefixExpression(IPrefixExpression prefixExpressionParam, IHighlightingConsumer context);
    public virtual void VisitPostfixExpression(IPostfixExpression postfixExpressionParam, IHighlightingConsumer context);
    public static void HighlightMissedItemsInObjectLiteralExpression(IJavaScriptFile javaScriptFile, IObjectLiteral objectLiteral, IHighlightingConsumer consumer);
    private static void MakeMissedItemsInObjectLiteralError(ITreeNode firstWrongComma, ITreeNode lastWrongComma, IHighlightingConsumer consumer, IJavaScriptFile javaScriptFile);
    public static void HighlightMissedTrailingElementInArrayLiteral(IJavaScriptFile javaScriptFile, IArrayLiteral arrayLiteral, IHighlightingConsumer consumer);
    public virtual void VisitBreakStatement(IBreakStatement breakStatementParam, IHighlightingConsumer context);
    public virtual void VisitNewExpression(INewExpression newExpression, IHighlightingConsumer consumer);
    public virtual void VisitContinueStatement(IContinueStatement continueStatementParam, IHighlightingConsumer context);
    public virtual void VisitDebugStatement(IDebugStatement debugStatementParam, IHighlightingConsumer context);
    public virtual void VisitReturnStatement(IReturnStatement returnStatement, IHighlightingConsumer context);
    public virtual void VisitThrowStatement(IThrowStatement throwStatementParam, IHighlightingConsumer context);
    public virtual void VisitLexicalDeclaration(ILexicalDeclaration lexicalDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitVariableStatement(IVariableStatement variableStatementParam, IHighlightingConsumer context);
    public virtual void VisitSwitchStatement(ISwitchStatement switchStatement, IHighlightingConsumer consumer);
    public virtual void VisitExpressionStatement(IExpressionStatement expressionStatement, IHighlightingConsumer consumer);
    public virtual void VisitBinaryExpression(IBinaryExpression binaryExpression, IHighlightingConsumer context);
    private void CheckForTypeOfComparison(IBinaryExpression binaryExpression, IHighlightingConsumer consumer);
    private void CheckForSimilarExpressionsComparison(IBinaryExpression binaryExpression, IHighlightingConsumer consumer);
    public virtual void VisitForeachStatement(IForeachStatement foreachStatementParam, IHighlightingConsumer context);
    private void CheckForHasOwnPropertyMiss(IForeachStatement foreachStatementParam, IHighlightingConsumer consumer);
    public virtual void VisitFunctionExpression(IFunctionExpression functionExpressionParam, IHighlightingConsumer context);
    public static void HighlightEvalArgumentsDeclaration(IDeclaration declaration, IHighlightingConsumer context, bool strictContext, IJavaScriptFile file);
    public virtual void VisitFunctionStatement(IFunctionStatement functionStatement, IHighlightingConsumer consumer);
    public virtual void VisitLabelledStatement(ILabelledStatement labelStatement, IHighlightingConsumer consumer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    protected virtual IEnumerable`1<IJavaScriptDeclaration> GetLocalDeclarationsInScope(IJavaScriptVariableScope scope, JsInitialResolveContext resolveContext);
    public virtual void VisitDocCommentBlockNode(IJavaScriptDocCommentBlock xmlDoc, IHighlightingConsumer context);
    private void CheckXmlSyntax(IDocCommentXmlPsi xmlNode, IDaemonProcess process, IHighlightingConsumer consumer);
    public virtual void VisitDoStatement(IDoStatement doStatementParam, IHighlightingConsumer context);
    public virtual void VisitForStatement(IForStatement forStatementParam, IHighlightingConsumer context);
    private void CheckForModifiedClosureAccessInsideLoop(IJavaScriptStatement loopStatement, IHighlightingConsumer consumer);
    public virtual void VisitWhileStatement(IWhileStatement whileStatementParam, IHighlightingConsumer context);
    public virtual void VisitSimpleAssignmentExpression(ISimpleAssignmentExpression simpleAssignmentExpressionParam, IHighlightingConsumer context);
    public virtual void VisitStructuredAssignmentExpression(IStructuredAssignmentExpression structuredAssignmentExpressionParam, IHighlightingConsumer context);
    public virtual void VisitForeachInitializer(IForeachInitializer foreachInitializerParam, IHighlightingConsumer context);
    public void VisitAssignmentLikeExpression(IAssignmentExpression assignmentExpression, IHighlightingConsumer consumer);
    private void ValidateAssignments(IEnumerable`1<IReferenceExpression> allRefs, IAssignmentExpression assignmentExpression, IHighlightingConsumer consumer);
    private bool IsImplicitProperty(IJavaScriptProperty property);
    public virtual void VisitReferenceExpression(IReferenceExpression referenceExpression, IHighlightingConsumer consumer);
    protected virtual IHighlighting GetWarningForUsedBeforeDeclared(IReferenceExpression referenceExpression, IVariableDeclaration variableDeclaration);
    protected virtual IHighlighting GetWarningForUsedInInnerScopeBeforeDeclared(IReferenceExpression referenceExpression, IVariableDeclaration variableDeclaration);
    private void CheckForLocalDeclarationsProblems(IReferenceExpression referenceExpression, IHighlightingConsumer consumer);
    private void CheckForCallerCalleeUsings(IReferenceExpression referenceExpression, IHighlightingConsumer consumer);
    private static bool IsShareThisPattern(IFunctionExpression ownerFunction, IJsFunctionLike ownerFunctionThatHasThisField);
    private static bool CheckXmlHighlighting(IHighlighting highlighting);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    protected virtual void AnalyseReturns(IReturnStatement returnStatement, IHighlightingConsumer context);
    public virtual void VisitJavaScriptParameterDeclaration(IJavaScriptParameterDeclaration parameterDeclaration, IHighlightingConsumer context);
    public static void HighlightArgumentsEvalInParameter(IJavaScriptParameterDeclarationBase parameterDeclaration, IHighlightingConsumer context, IJavaScriptFile file, bool isStrictContext);
    public virtual void VisitVariableDeclaration(IVariableDeclaration variableDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitIfStatement(IIfStatement tsIfStatementParam, IHighlightingConsumer context);
    private void CheckForAssignmentInsteadComparison(ICompoundExpression compoundExpression, IHighlightingConsumer consumer);
    private void CheckForAssignmentInsteadComparison(IJavaScriptExpression expression, IHighlightingConsumer consumer);
    public virtual void VisitConditionalTernaryExpression(IConditionalTernaryExpression conditionalTernaryExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTryStatement(ITryStatement tryStatementParam, IHighlightingConsumer context);
    private bool StringIsNotTerminated(string text);
    public virtual void VisitJavaScriptLiteralExpression(IJavaScriptLiteralExpression javaScriptLiteralExpressionParam, IHighlightingConsumer context);
    public virtual void VisitObjectPropertiesList(IObjectPropertiesList objectPropertiesListParam, IHighlightingConsumer context);
    public virtual void VisitWithStatement(IWithStatement withStatementParam, IHighlightingConsumer context);
    protected virtual bool ShouldHighlightWithStatement();
    [CompilerGeneratedAttribute]
private bool <.ctor>b__18_0(JavaScriptFileIndexProcess p);
    [CompilerGeneratedAttribute]
private void <Execute>b__19_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[ProjectFileTypeAttribute("JetBrains.ProjectModel.KnownProjectFileType", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.JavaScriptInspectionsProcessFactory : object {
    public virtual IDaemonStageProcess CreateInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.JavaScriptInspectionsStage : JavaScriptDaemonStageBase {
    [CompilerGeneratedAttribute]
private ProjectFileTypeServices <projectFileTypeServices>P;
    [CompilerGeneratedAttribute]
private LanguageManager <languageManager>P;
    public JavaScriptInspectionsStage(ProjectFileTypeServices projectFileTypeServices, LanguageManager languageManager);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.ProblemAnalyzers.CoercedEqualityUsingProblemAnalyzer : ElementProblemAnalyzer`1<IBinaryExpression> {
    private static bool IsNullLiteral(IJavaScriptExpression expression);
    private static bool IsUndefinedLiteral(IJavaScriptExpression expression);
    protected virtual void Run(IBinaryExpression binaryExpression, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.ProblemAnalyzers.NativeObjectsPrototypeProblemAnalyzer : ElementProblemAnalyzer`1<IReferenceExpression> {
    private HashSet`1<string> myStandardTypeNames;
    public NativeObjectsPrototypeProblemAnalyzer(IJavaScriptTypeCache typeCache);
    [CanBeNullAttribute]
private string GetNameOfNativeType(IReferenceExpression referenceExpression, JsResolveContext context);
    private bool IsNativeTypeName(string name);
    protected virtual void Run(IReferenceExpression referenceExpression, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("0", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.ProblemAnalyzers.RedundantBlockProblemAnalyzer : ElementProblemAnalyzer`1<IBlock> {
    private RedundantBlockTransformer myRedundantBlockTransformer;
    public RedundantBlockProblemAnalyzer(RedundantBlockTransformer redundantBlockTransformer);
    protected virtual void Run(IBlock element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.ProblemAnalyzers.SuggestDestructuringForObjectLiteralProblemAnalyzer : ElementProblemAnalyzer`1<IObjectLiteral> {
    protected virtual void Run(IObjectLiteral element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    private static void CheckObjectLiteralForDestructuring(IObjectLiteral element, IHighlightingConsumer consumer, IJavaScriptFile file, JsResolveContext context, IJsConstantValueService constantValueService);
    private static void CheckIndexerAndEmitHint(List`1& allPropertiesInScope, IHighlightingConsumer consumer, IJavaScriptFile file, IJsConstantValueService constantValueService);
    private static string SuggestName(IJavaScriptVariableScope ownerScope, string initialName);
    private static IJavaScriptExpression CheckValidIndexerExpressionInValue(IJavaScriptExpression value);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.ProblemAnalyzers.SuggestDestructuringForStatementsProblemAnalyzer : SuggestDestructuringForStatementsProblemAnalyzerBase {
    protected virtual IJavaScriptExpression EmitForExpressionInAssignment(IAssignmentSourceOwner exp, IJsConstantValueService constantValueService);
    protected virtual void AddIndex(List`1<double> indices, IAssignmentSourceOwner assignment, IJsConstantValueService constantValueService);
    protected virtual IHighlighting EmitHighlighting(ITreeNode highlightedNode, IList`1<IAssignmentSourceOwner> allExpressions, bool hasOnlyVarsOfSameKind);
}
internal abstract class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.ProblemAnalyzers.SuggestDestructuringForStatementsProblemAnalyzerBase : ElementProblemAnalyzer`1<IStatementsOwner> {
    protected abstract virtual IJavaScriptExpression EmitForExpressionInAssignment(IAssignmentSourceOwner exp, IJsConstantValueService constantValueService);
    protected virtual void Run(IStatementsOwner element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    protected abstract virtual void AddIndex(List`1<double> indices, IAssignmentSourceOwner expression, IJsConstantValueService constantValueService);
    private void CheckStatementsAndEmitHint(List`1& allIndexersInScope, IHighlightingConsumer context, IJsConstantValueService constantValueService);
    protected abstract virtual IHighlighting EmitHighlighting(ITreeNode highlightedNode, IList`1<IAssignmentSourceOwner> allExpressions, bool hasOnlyVarsOfSameKind);
    private static IEnumerable`1<ITreeNode> GetChildExpressionsOfConvertibleType(IJavaScriptStatement javaScriptStatement);
    private void CheckIndexerListForDestructuring(IStatementsOwner owner, IHighlightingConsumer context, IJavaScriptFile file, JsResolveContext jsResolveContext, IJsConstantValueService constantValueService);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.ProblemAnalyzers.SuggestObjectLiteralDestructuringAnalyzer : SuggestDestructuringForStatementsProblemAnalyzerBase {
    protected virtual IJavaScriptExpression EmitForExpressionInAssignment(IAssignmentSourceOwner exp, IJsConstantValueService constantValueService);
    protected virtual void AddIndex(List`1<double> indices, IAssignmentSourceOwner expression, IJsConstantValueService constantValueService);
    protected virtual IHighlighting EmitHighlighting(ITreeNode highlightedNode, IList`1<IAssignmentSourceOwner> allExpressions, bool hasOnlyVarsOfSameKind);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.InspectionsStage.XmlDocHighlighterVisitor : object {
    [NotNullAttribute]
private IHighlightingConsumer myConsumer;
    [NotNullAttribute]
private IJavaScriptFile myFile;
    public bool ProcessingIsFinished { get; }
    public XmlDocHighlighterVisitor(IHighlightingConsumer consumer, IJavaScriptFile file);
    public sealed virtual void ProcessBeforeInterior(ITreeNode element);
    private static bool ShouldHighlight(ITreeNode element);
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element);
    public sealed virtual bool get_ProcessingIsFinished();
    public sealed virtual void ProcessAfterInterior(ITreeNode element);
}
[ConfigurableSeverityHighlightingAttribute("IntroduceVariableToApplyGuard", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.IntroduceVariableToApplyGuardWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsExpression <Expression>k__BackingField;
    public ITsExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public IntroduceVariableToApplyGuardWarning(ITsExpression expression);
    [CompilerGeneratedAttribute]
public ITsExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvalidJsonSyntax", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InvalidJsonExpressionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <InvalidNode>k__BackingField;
    public ITreeNode InvalidNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InvalidJsonExpressionWarning(ITreeNode invalidNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_InvalidNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvalidJsonSyntax", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InvalidJsonPropertyNameWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IPropertyName <InvalidNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IPropertyName InvalidNode { get; }
    public string MessageText { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InvalidJsonPropertyNameWarning(IPropertyName invalidNode, string messageText);
    [CompilerGeneratedAttribute]
public IPropertyName get_InvalidNode();
    [CompilerGeneratedAttribute]
public string get_MessageText();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvalidJsonSyntax", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InvalidJsonSyntaxWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <InvalidNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode InvalidNode { get; }
    public string MessageText { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InvalidJsonSyntaxWarning(ITreeNode invalidNode, string messageText);
    [CompilerGeneratedAttribute]
public ITreeNode get_InvalidNode();
    [CompilerGeneratedAttribute]
public string get_MessageText();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvocationOfNonFunction", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InvocationOfNonFunctionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InvocationOfNonFunctionWarning(IJavaScriptExpression expression);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvokedExpressionMaybeNonFunction", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.InvokedExpressionMaybeNonFunctionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public InvokedExpressionMaybeNonFunctionWarning(IJavaScriptExpression expression);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JavaScriptIdentifierHighlightingStage : JavaScriptDaemonStageBase {
    private ResolveHighlighterRegistrar myResolveHighlighterRegistrar;
    private JsVsSupportedFeatureMarker myFeatureMarker;
    private ConfigurableIdentifierHighlightingStageService myIdentifierHighlightingStageService;
    protected bool ShouldRunOnGenerated { get; }
    public JavaScriptIdentifierHighlightingStage(ResolveHighlighterRegistrar resolveHighlighterRegistrar, JsVsSupportedFeatureMarker featureMarker, ConfigurableIdentifierHighlightingStageService identifierHighlightingStageService);
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[DaemonStageAttribute("0")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JavaScriptInitialStage : JavaScriptDaemonStageBase {
    private ElementProblemAnalyzerRegistrar myElementProblemAnalyzerRegistrar;
    public JavaScriptInitialStage(ElementProblemAnalyzerRegistrar elementProblemAnalyzerRegistrar);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JavaScriptSyntaxHighlightingStage : JavaScriptDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[ConfigurableSeverityHighlightingAttribute("JoinDeclarationAndInitializerJs", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JoinDeclarationAndInitializerWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IVariableDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private IAssignmentExpression <Assignment>k__BackingField;
    public IVariableDeclaration Declaration { get; }
    public IAssignmentExpression Assignment { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public JoinDeclarationAndInitializerWarning(IVariableDeclaration declaration, IAssignmentExpression assignment);
    [CompilerGeneratedAttribute]
public IVariableDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public IAssignmentExpression get_Assignment();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsDaemonProcessExtensions : object {
    [ExtensionAttribute]
public static InitialStageProcess GetInitialStage(IDaemonProcess process, IJavaScriptFile file);
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsDoc.JsDocDaemonProcessBase`1 : JsDocTreeNodeVisitor`1<TContext> {
    private IDaemonProcess myProcess;
    [CompilerGeneratedAttribute]
private IJsDocFile <JsDocFile>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptFile <ContainingFile>k__BackingField;
    [CompilerGeneratedAttribute]
private DaemonProcessKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private IContextBoundSettingsStore <SettingsStore>k__BackingField;
    protected IJsDocFile JsDocFile { get; }
    protected IJavaScriptFile ContainingFile { get; }
    protected DaemonProcessKind Kind { get; protected set; }
    protected IContextBoundSettingsStore SettingsStore { get; }
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    public IDaemonProcess DaemonProcess { get; }
    protected JsDocDaemonProcessBase`1(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJsDocFile jsDocFile, IJavaScriptFile containingFile, DaemonProcessKind kind);
    [CompilerGeneratedAttribute]
protected IJsDocFile get_JsDocFile();
    [CompilerGeneratedAttribute]
protected IJavaScriptFile get_ContainingFile();
    [CompilerGeneratedAttribute]
protected DaemonProcessKind get_Kind();
    [CompilerGeneratedAttribute]
protected void set_Kind(DaemonProcessKind value);
    [CompilerGeneratedAttribute]
protected IContextBoundSettingsStore get_SettingsStore();
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element, TContext context);
    public sealed virtual bool IsProcessingFinished(TContext context);
    public sealed virtual void ProcessBeforeInterior(ITreeNode element, TContext context);
    public sealed virtual void ProcessAfterInterior(ITreeNode element, TContext context);
    public abstract virtual void Execute(Action`1<DaemonStageResult> committer);
    public sealed virtual IDaemonProcess get_DaemonProcess();
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsDoc.JsDocDaemonStageBase : object {
    protected bool ShouldRunOnGenerated { get; }
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected virtual bool get_ShouldRunOnGenerated();
    protected abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJsDocFile file);
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsDoc.JsDocIdentifierHighlightingDaemonProcess : JsDocDaemonProcessBase`1<IHighlightingConsumer> {
    private bool myIdentifierHighlightingEnabled;
    public JsDocIdentifierHighlightingDaemonProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJsDocFile jsDocFile, IJavaScriptFile containingFile, DaemonProcessKind kind);
    public virtual void VisitJsDocTag(IJsDocTag jsDocTagParam, IHighlightingConsumer context);
    public virtual void VisitCallbackTag(ICallbackTag callbackTagParam, IHighlightingConsumer context);
    public virtual void VisitTemplateTag(ITemplateTag templateTagParam, IHighlightingConsumer context);
    public virtual void VisitTypedefTag(ITypedefTag typedefTagParam, IHighlightingConsumer context);
    public virtual void VisitPropertyTag(IPropertyTag propertyTagParam, IHighlightingConsumer context);
    public virtual void VisitJsDocTypeSpecification(IJsDocTypeSpecification jsDocTypeSpecificationParam, IHighlightingConsumer context);
    public virtual void VisitParameterTag(IParameterTag parameterTag, IHighlightingConsumer context);
    private static void HighlightQualifiedName(IHighlightingConsumer context, IQualifiedNameOwnerTag parameterTagParam, string firstDesc);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsDoc.JsDocIdentifierHighlightingStage : JsDocDaemonStageBase {
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJsDocFile file);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.IdentifierHighlightingStage : JsonDaemonStageBase {
    private ResolveHighlighterRegistrar myResolveHighlighterRegistrar;
    private JsVsSupportedFeatureMarker myFeatureMarker;
    private ConfigurableIdentifierHighlightingStageService myIdentifierHighlightingStageService;
    public IdentifierHighlightingStage(ResolveHighlighterRegistrar resolveHighlighterRegistrar, JsVsSupportedFeatureMarker featureMarker, ConfigurableIdentifierHighlightingStageService identifierHighlightingStageService);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.JsonDaemonStageBase : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
    protected static bool IsSupported(IPsiSourceFile sourceFile);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.JsonIdentifierHighlighterProcess : IdentifierHighlighterProcess {
    public JsonIdentifierHighlighterProcess(ResolveHighlighterRegistrar resolveHighlighterRegistrar, IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, IJavaScriptFile file, DaemonProcessKind processKind, JsVsSupportedFeatureMarker featureMarker, ConfigurableIdentifierHighlightingStageService identifierHighlightingStageService);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.JsonInspectionsProcess : JavaScriptDaemonStageProcessBase {
    private IJsonSchemaManager myJsonSchemaManager;
    private bool myIsInjected;
    private IElementAnalyzerDispatcher myElementAnalyzerDispatcher;
    private bool myAllowDollarPatterns;
    private bool myAllowBracketPatterns;
    private bool myIsProjectJson;
    private static int myTypeMismatchWeight;
    private static int myEnumWeight;
    public JsonInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJavaScriptFile file, IJsonSchemaManager jsonSchemaManager, DaemonProcessKind processKind, ElementProblemAnalyzerRegistrar elementProblemAnalyzerRegistrar);
    private static bool IsProjectJsonCaseInsensitiveComparisonHack(IJavaScriptTreeNode node);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.JsonInspectionsProcess/<ProcessCompoundChain>d__10")]
private static IEnumerable`1<ITreeNode> ProcessCompoundChain(AssertionResult result, int depth, StringBuilder text);
    private int CalculateErrorCountInDepth(AssertionResult result, bool root);
    private AssertionResult[] SelectWinnersForOneOf(AssertionResult[] results);
    private void HighlightResult(AssertionResult result, IHighlightingConsumer consumer);
    private void ValidateSchema(IJavaScriptFile file, IHighlightingConsumer consumer);
    private bool IsAllowedJsonExpressionKind(IExpressionOrSpread expression);
    public virtual void VisitObjectPropertyDeclaration(IObjectPropertyDeclaration declaration, IHighlightingConsumer consumer);
    public virtual void VisitArrayLiteral(IArrayLiteral arrayLiteral, IHighlightingConsumer consumer);
    public virtual void VisitObjectLiteral(IObjectLiteral objectLiteral, IHighlightingConsumer consumer);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__6_0(JavaScriptFileIndexProcess p);
    [CompilerGeneratedAttribute]
private void <Execute>b__9_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[DaemonStageAttribute("0")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.JsonInspectionsStage : JsonDaemonStageBase {
    private IJsonSchemaManager myJsonSchemaManager;
    private ElementProblemAnalyzerRegistrar myElementProblemAnalyzerRegistrar;
    public JsonInspectionsStage(IJsonSchemaManager jsonSchemaManager, ElementProblemAnalyzerRegistrar elementProblemAnalyzerRegistrar);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[DaemonTooltipProviderAttribute("JetBrains.ReSharper.Daemon.JavaScript.JsonIdentifierTooltipProvider")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.JsonPropertyHighlighting : object {
    private DocumentRange myRange;
    private string myTooltip;
    public string ErrorStripeToolTip { get; }
    public string ToolTip { get; }
    public string AttributeId { get; }
    public JsonPropertyHighlighting(DocumentRange range, string tooltip);
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_AttributeId();
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.JsonTooltipProviderProcess : JavaScriptDaemonStageProcessBase {
    private IJsonSchema mySchema;
    public JsonTooltipProviderProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, IJavaScriptFile file, IJsonSchemaManager jsonSchemaManager);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void VisitPropertyNameStringLiteral(IPropertyNameStringLiteral propertyNameStringLiteralParam, IHighlightingConsumer context);
    [CompilerGeneratedAttribute]
private void <Execute>b__2_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JSon.PropertyTooltipProviderStage : JsonDaemonStageBase {
    private IJsonSchemaManager myJsonSchemaManager;
    public PropertyTooltipProviderStage(IJsonSchemaManager jsonSchemaManager);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[ConfigurableSeverityHighlightingAttribute("InvalidJsonSyntax", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsonCommaExpectedWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <InvalidNode>k__BackingField;
    public ITreeNode InvalidNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public JsonCommaExpectedWarning(ITreeNode invalidNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_InvalidNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvalidJsonSyntax", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsonProhibitedArrayElementOmissionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <InvalidNode>k__BackingField;
    public ITreeNode InvalidNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public JsonProhibitedArrayElementOmissionWarning(ITreeNode invalidNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_InvalidNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("InvalidJsonSyntax", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsonTrailingCommaWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <InvalidNode>k__BackingField;
    public ITreeNode InvalidNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public JsonTrailingCommaWarning(ITreeNode invalidNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_InvalidNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("JsonValidationFailed", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsonValidationFailedWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Brace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageText>k__BackingField;
    [CompilerGeneratedAttribute]
private AssertionResult <AssertionResult>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Brace { get; }
    public string MessageText { get; }
    public AssertionResult AssertionResult { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public JsonValidationFailedWarning(ITreeNode brace, string messageText, AssertionResult assertionResult);
    [CompilerGeneratedAttribute]
public ITreeNode get_Brace();
    [CompilerGeneratedAttribute]
public string get_MessageText();
    [CompilerGeneratedAttribute]
public AssertionResult get_AssertionResult();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("JsPathNotFound", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.JsPathNotFoundError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IPathReference <PathReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IPathReference PathReference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public JsPathNotFoundError(IPathReference PathReference);
    [CompilerGeneratedAttribute]
public IPathReference get_PathReference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("LabelOrSemicolonExpected", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.LabelOrSemicolonExpectedError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ICompoundExpression <CompoundExpression>k__BackingField;
    public ICompoundExpression CompoundExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public LabelOrSemicolonExpectedError(ICompoundExpression compoundExpression);
    [CompilerGeneratedAttribute]
public ICompoundExpression get_CompoundExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("LessSpecificOverloadThanMainSignature", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.LessSpecificOverloadThanMainSignatureWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public LessSpecificOverloadThanMainSignatureWarning(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("LexicalDeclarationNeedsBlock", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.LexicalDeclarationNeedsBlockError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public LexicalDeclarationNeedsBlockError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("LocalFunctionRedefinedLater", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.LocalFunctionRedefinedLaterWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptDeclaration <Function>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptDeclaration Function { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public LocalFunctionRedefinedLaterWarning(IJavaScriptDeclaration function);
    [CompilerGeneratedAttribute]
public IJavaScriptDeclaration get_Function();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("LValueIsExpected", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.LValueIsExpectedError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptTreeNode <Expression>k__BackingField;
    public IJavaScriptTreeNode Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public LValueIsExpectedError(IJavaScriptTreeNode expression);
    [CompilerGeneratedAttribute]
public IJavaScriptTreeNode get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.MemberDoesntHaveBodyError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <Semicolon>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsClassMemberDeclaration <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Semicolon { get; }
    public ITsClassMemberDeclaration Signature { get; }
    public string MyName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public MemberDoesntHaveBodyError(ITreeNode semicolon, ITsClassMemberDeclaration signature, string myName);
    [CompilerGeneratedAttribute]
public ITreeNode get_Semicolon();
    [CompilerGeneratedAttribute]
public ITsClassMemberDeclaration get_Signature();
    [CompilerGeneratedAttribute]
public string get_MyName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("MissingHasOwnPropertyInForeach", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.MissingHasOwnPropertyInForeachWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IForeachStatement <ForeachStatement>k__BackingField;
    public IForeachStatement ForeachStatement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public MissingHasOwnPropertyInForeachWarning(IForeachStatement foreachStatement);
    [CompilerGeneratedAttribute]
public IForeachStatement get_ForeachStatement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("MisuseOfOwnerFunctionThis", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.MisuseOfOwnerFunctionThisWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsFunctionLike <FunctionExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public IJsFunctionLike FunctionExpression { get; }
    public string Name { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public MisuseOfOwnerFunctionThisWarning(IReferenceExpression referenceExpression, IJsFunctionLike functionExpression, string name);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    [CompilerGeneratedAttribute]
public IJsFunctionLike get_FunctionExpression();
    [CompilerGeneratedAttribute]
public string get_Name();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ModuleReferenceNameShouldBeStringLiteralError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsAmbientModuleReferenceName <ExpressionOwner>k__BackingField;
    public ITsExpression Expression { get; }
    public ITsAmbientModuleReferenceName ExpressionOwner { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ModuleReferenceNameShouldBeStringLiteralError(ITsExpression expression, ITsAmbientModuleReferenceName expressionOwner);
    [CompilerGeneratedAttribute]
public ITsExpression get_Expression();
    [CompilerGeneratedAttribute]
public ITsAmbientModuleReferenceName get_ExpressionOwner();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("MoreSpecificSignatureAfterLessSpecific", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.MoreSpecificSignatureAfterLessSpecificWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public MoreSpecificSignatureAfterLessSpecificWarning(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("MultipleDeclarationsInForeach", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.MultipleDeclarationsInForeachError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IForDeclarationInitializer <Initializer>k__BackingField;
    public IForDeclarationInitializer Initializer { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public MultipleDeclarationsInForeachError(IForDeclarationInitializer initializer);
    [CompilerGeneratedAttribute]
public IForDeclarationInitializer get_Initializer();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("NativeTypePrototypeExtending", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.NativeTypePrototypeExtendingWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModifiedObjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public string ModifiedObjectName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public NativeTypePrototypeExtendingWarning(IJavaScriptExpression expression, string modifiedObjectName);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_ModifiedObjectName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("NativeTypePrototypeOverwriting", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.NativeTypePrototypeOverwritingWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModifiedObjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public string ModifiedObjectName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public NativeTypePrototypeOverwritingWarning(IJavaScriptExpression expression, string modifiedObjectName);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_ModifiedObjectName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("NonAssignedConstant", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.NonAssignedConstantWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IBindingPattern <Expression>k__BackingField;
    public IBindingPattern Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public NonAssignedConstantWarning(IBindingPattern expression);
    [CompilerGeneratedAttribute]
public IBindingPattern get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.NonDeclaredVariableError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ModifierNode>k__BackingField;
    public IReferenceExpression ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public NonDeclaredVariableError(IReferenceExpression modifierNode);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.NoParameterForTypePredicateReferenceError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private IIdentifierExpression <ParameterReference>k__BackingField;
    public IIdentifierExpression ParameterReference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public NoParameterForTypePredicateReferenceError(IIdentifierExpression parameterReference);
    [CompilerGeneratedAttribute]
public IIdentifierExpression get_ParameterReference();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("NotAllPathsReturnValue", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.NotAllPathsReturnValueWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJsFunctionLike <FunctionLike>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <DocumentRange>k__BackingField;
    public IJsFunctionLike FunctionLike { get; }
    public DocumentRange DocumentRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public NotAllPathsReturnValueWarning(IJsFunctionLike functionLike, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public IJsFunctionLike get_FunctionLike();
    [CompilerGeneratedAttribute]
public DocumentRange get_DocumentRange();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("NotResolved", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.NotResolvedError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpressionReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpressionReference Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public NotResolvedError(IReferenceExpressionReference reference);
    [CompilerGeneratedAttribute]
public IReferenceExpressionReference get_Reference();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ObjectDestructuringWithoutParentheses", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ObjectDestructuringWithoutParenthesesWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Brace>k__BackingField;
    public ITreeNode Brace { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ObjectDestructuringWithoutParenthesesWarning(ITreeNode brace);
    [CompilerGeneratedAttribute]
public ITreeNode get_Brace();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ObjectLiteralsAreNotCommaFree", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ObjectLiteralsAreNotCommaFreeError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ObjectLiteralsAreNotCommaFreeError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("OctalLiteralsNotAllowedError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.OctalLiteralsNotAllowedError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Literal>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    public ITreeNode Literal { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public OctalLiteralsNotAllowedError(ITreeNode literal, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_Literal();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.OptionalSpecializedParameterError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public OptionalSpecializedParameterError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedInheritedParameter", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.OverriddenInheritedUnusedParameterWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public OverriddenInheritedUnusedParameterWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedLocals", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.OverriddenUnusedLocalFunctionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public OverriddenUnusedLocalFunctionWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedParameter", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.OverriddenUnusedParameterWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public OverriddenUnusedParameterWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ParameterDoesntMakeAnySense", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ParameterDoesntMakeAnySenseWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <ParameterNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowFix>k__BackingField;
    public ITsParameterDeclaration ParameterNode { get; }
    public bool AllowFix { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ParameterDoesntMakeAnySenseWarning(ITsParameterDeclaration parameterNode, bool allowFix);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_ParameterNode();
    [CompilerGeneratedAttribute]
public bool get_AllowFix();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ParameterValueIsNotUsed", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ParameterValueIsNotUsedWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptParameterDeclaration <Parameter>k__BackingField;
    public IJavaScriptParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ParameterValueIsNotUsedWarning(IJavaScriptParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public IJavaScriptParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("PossiblyIncorrectlyBrokenStatement", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.PossiblyIncorrectlyBrokenStatementWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Node>k__BackingField;
    public ITreeNode Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public PossiblyIncorrectlyBrokenStatementWarning(ITreeNode node);
    [CompilerGeneratedAttribute]
public ITreeNode get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("PossiblyUnassignedProperty", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.PossiblyUnassignedPropertyWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string VariableName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public PossiblyUnassignedPropertyWarning(IReferenceExpression expression, string variableName);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("PrivateVariableCanBeMadeReadonly", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.PrivateVariableCanBeMadeReadonlyWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsMemberVariableDeclaration <VariableDeclaration>k__BackingField;
    public ITsMemberVariableDeclaration VariableDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public PrivateVariableCanBeMadeReadonlyWarning(ITsMemberVariableDeclaration variableDeclaration);
    [CompilerGeneratedAttribute]
public ITsMemberVariableDeclaration get_VariableDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("PrivateVariableCanBeMadeReadonly", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.PrivateVariableDeclaredAsParameterCanBeMadeReadonlyWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <VariableDeclaration>k__BackingField;
    public ITsParameterDeclaration VariableDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public PrivateVariableDeclaredAsParameterCanBeMadeReadonlyWarning(ITsParameterDeclaration variableDeclaration);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_VariableDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("PropertyGetterCannotHaveParameters", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.PropertyGetterCannotHaveParametersError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IAccessorBody <Declaration>k__BackingField;
    public IAccessorBody Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public PropertyGetterCannotHaveParametersError(IAccessorBody declaration);
    [CompilerGeneratedAttribute]
public IAccessorBody get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("PropertySetterMustHaveSingleParameter", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.PropertySetterMustHaveSingleParameterError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IAccessorBody <Declaration>k__BackingField;
    public IAccessorBody Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public PropertySetterMustHaveSingleParameterError(IAccessorBody declaration);
    [CompilerGeneratedAttribute]
public IAccessorBody get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("QualifiedExpressionIsNull", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.QualifiedExpressionIsNullWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private JsNullReferenceValue <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public JsNullReferenceValue NullValue { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public QualifiedExpressionIsNullWarning(IJavaScriptExpression expression, JsNullReferenceValue nullValue);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    [CompilerGeneratedAttribute]
public JsNullReferenceValue get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("QualifiedExpressionMaybeNull", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.QualifiedExpressionMaybeNullWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private JsNullReferenceValue <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptExpression Expression { get; }
    public JsNullReferenceValue NullValue { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public QualifiedExpressionMaybeNullWarning(IJavaScriptExpression expression, JsNullReferenceValue nullValue);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_Expression();
    [CompilerGeneratedAttribute]
public JsNullReferenceValue get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantBlock", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantBlockWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITransformerMatchResult <MatchResult>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightedElement>k__BackingField;
    public ITransformerMatchResult MatchResult { get; }
    public ITreeNode HighlightedElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantBlockWarning(ITransformerMatchResult matchResult, ITreeNode highlightedElement);
    [CompilerGeneratedAttribute]
public ITransformerMatchResult get_MatchResult();
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightedElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantComparisonWithBoolean", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantComparisonWithBooleanWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IBinaryExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Left>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SideValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNegation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IBinaryExpression Expression { get; }
    public bool Left { get; }
    public bool SideValue { get; }
    public bool IsNegation { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantComparisonWithBooleanWarning(IBinaryExpression expression, bool left, bool sideValue, bool isNegation);
    [CompilerGeneratedAttribute]
public IBinaryExpression get_Expression();
    [CompilerGeneratedAttribute]
public bool get_Left();
    [CompilerGeneratedAttribute]
public bool get_SideValue();
    [CompilerGeneratedAttribute]
public bool get_IsNegation();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantElseBlock", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantElseBlockWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IIfStatement <IfStatement>k__BackingField;
    public IIfStatement IfStatement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantElseBlockWarning(IIfStatement ifStatement);
    [CompilerGeneratedAttribute]
public IIfStatement get_IfStatement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantEmptyConstructor", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantEmptyConstructorWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsConstructorDeclaration <CtorDeclaration>k__BackingField;
    public ITsConstructorDeclaration CtorDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantEmptyConstructorWarning(ITsConstructorDeclaration ctorDeclaration);
    [CompilerGeneratedAttribute]
public ITsConstructorDeclaration get_CtorDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantEmptyFinallyBlock", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantEmptyFinallyBlockWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IFinallyBlock <FinallyBlock>k__BackingField;
    public IFinallyBlock FinallyBlock { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantEmptyFinallyBlockWarning(IFinallyBlock finallyBlock);
    [CompilerGeneratedAttribute]
public IFinallyBlock get_FinallyBlock();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantIntermediateVariable", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantIntermediateVariableWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaredElement <TemporaryVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReadUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <DeletedNode>k__BackingField;
    public IDeclaredElement TemporaryVariable { get; }
    public IReferenceExpression ReadUsage { get; }
    public ITreeNode DeletedNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantIntermediateVariableWarning(IDeclaredElement temporaryVariable, IReferenceExpression readUsage, ITreeNode deletedNode);
    [CompilerGeneratedAttribute]
public IDeclaredElement get_TemporaryVariable();
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReadUsage();
    [CompilerGeneratedAttribute]
public ITreeNode get_DeletedNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantLocalClassName", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantLocalClassNameWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantLocalClassNameWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantLocalFunctionName", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantLocalFunctionNameWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantLocalFunctionNameWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantParentTypeDeclaration", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantParentTypeDeclarationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <RedundantDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlreadyPresentItem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsTypeUsage RedundantDeclaration { get; }
    public string AlreadyPresentItem { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantParentTypeDeclarationWarning(ITsTypeUsage redundantDeclaration, string alreadyPresentItem);
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_RedundantDeclaration();
    [CompilerGeneratedAttribute]
public string get_AlreadyPresentItem();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantQualifier", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantQualifierWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Qualifier>k__BackingField;
    [CompilerGeneratedAttribute]
private INodeWithNameNode <FullExpression>k__BackingField;
    public ITreeNode Qualifier { get; }
    public INodeWithNameNode FullExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantQualifierWarning(ITreeNode qualifier, INodeWithNameNode fullExpression);
    [CompilerGeneratedAttribute]
public ITreeNode get_Qualifier();
    [CompilerGeneratedAttribute]
public INodeWithNameNode get_FullExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantTypeCastStructural", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantTypeCastStructuralWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsCastExpression <CastExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <TypeUsage>k__BackingField;
    public ITsCastExpression CastExpression { get; }
    public ITsTypeUsage TypeUsage { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantTypeCastStructuralWarning(ITsCastExpression castExpression, ITsTypeUsage typeUsage);
    [CompilerGeneratedAttribute]
public ITsCastExpression get_CastExpression();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_TypeUsage();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantTypeCast", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantTypeCastWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsCastExpression <CastExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <TypeUsage>k__BackingField;
    public ITsCastExpression CastExpression { get; }
    public ITsTypeUsage TypeUsage { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantTypeCastWarning(ITsCastExpression castExpression, ITsTypeUsage typeUsage);
    [CompilerGeneratedAttribute]
public ITsCastExpression get_CastExpression();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_TypeUsage();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("RedundantVariableTypeSpecification", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RedundantVariableTypeSpecificationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <VariableDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Entity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode VariableDeclaration { get; }
    public string Entity { get; }
    public string EntityName { get; }
    public ITreeNode HighlightedNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RedundantVariableTypeSpecificationWarning(ITreeNode variableDeclaration, string entity, string entityName, ITreeNode highlightedNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_VariableDeclaration();
    [CompilerGeneratedAttribute]
public string get_Entity();
    [CompilerGeneratedAttribute]
public string get_EntityName();
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightedNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[RegisterConfigurableSeverityAttribute("CallerCalleeUsingError", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfargumentsCallerAndargumentsCalleeInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "argumentsCallerAndargumentsCalleeAreForbiddenInstrictMode", "5")]
[RegisterConfigurableSeverityAttribute("UndeclaredGlobalVariableUsing", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfUndeclaredGlobalVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingAVariablePropertyOrObjectWithoutDeclaringItIsNotAllowedInstrictMode", "4")]
[RegisterConfigurableSeverityAttribute("DeletingNonQualifiedReference", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CallingdeleteOnNonQualifiedIdentifierInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CallingdeleteOnNonQualifiedIdentifierIsNotAllowedInstrictMode", "5")]
[RegisterConfigurableSeverityAttribute("DuplicatingPropertyDeclarationError", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicatePropertyDeclarationInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicatePropertyDeclarationIsNotAllowedInstrictMode", "5")]
[RegisterConfigurableSeverityAttribute("DuplicatingParameterDeclarationError", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateParameterDeclarationInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateParameterDeclarationIsNotAllowedInstrictMode", "5")]
[RegisterConfigurableSeverityAttribute("OctalLiteralsNotAllowedError", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OctalLiteralsAndEscapeSequencesUsingInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OctalLiteralsAndEscapeSequencesAreNotAllowedInstrictMode", "5")]
[RegisterConfigurableSeverityAttribute("EvalArgumentsNameError", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfevalargumentsNameInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "evalOrargumentsCannotBeUsedAsADeclarationNameAsALeftSideOfAnAssignmentOrAsAnArgumentOfIncrementDecrementOperatorInstrictMode", "5")]
[RegisterConfigurableSeverityAttribute("UsingOfReservedWordError", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfFutureReservedKeywordsInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfFutureReservedKeywordsIsNotAllowedInstrictMode", "5")]
[RegisterConfigurableSeverityAttribute("WithStatementUsingError", "", "", "", "JsStrictModeErrors", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfwithStatementsInstrictMode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "withStatementIsNotAllowedInstrictMode", "5")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponent0B0AF5CD8E300AD3507C7A478BE5106276DB24609027185258CEBF3F6EFCFBA6 : object {
}
[RegisterConfigurableSeverityAttribute("ImplicitAnyError", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ImplicitAnyInspectionWhenNoImplicitAnyIsSet", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WhenNoImplicitAnyCompilerOptionIsSetEmitsErrorsForImplicitAny", "5")]
[RegisterConfigurableSeverityAttribute("DuplicateIdentifierError", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateIdentifier", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateIdentifierDetected", "5")]
[RegisterConfigurableSeverityAttribute("DeclarationVisibilityError", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExportedEntityUsesAPrivateEntity", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExportedModuleMemberUsesANonExportedEntity", "5")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponent4A091A0AD15E505A2B1EEB3A2D14E3C0806808F9521CD001649C265C098D5E61 : object {
}
[RegisterConfigurableSeverityAttribute("UseAsInsteadOfTypeCast", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseasOperatorInsteadOfTypeAssertion", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeAssertionInFormOfTypeexprCanBeConvertedToexprAsTypeForm", "2")]
[RegisterConfigurableSeverityAttribute("RedundantParentTypeDeclaration", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantParentTypeSpecificationInExtendsImplements", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfTypeItselfOrItsDescendantIsAlreadyPresentInExtendsOrImplementsListAnExtraSpecificationIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("RedundantComparisonWithBoolean", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ComparisonOfBooleanWithBooleanValueIsEquivalentToValueOrNegatedValue", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ComparisonsLikeaTrueAndaTrueWithBooleanaAreEquivalentToJustaAndA", "4")]
[RegisterConfigurableSeverityAttribute("TernaryCanBeReplacedByItsCondition", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TernaryOperatorMayBeReplacedByItsCondition", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SpecifyingTrueFalseWithBooleanConditionIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("DoubleNegationOfBoolean", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DoubleNegationOfBooleanIsRedundant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DoubleNegationOfBooleanIsIdenticalToItsValue", "4")]
[RegisterConfigurableSeverityAttribute("RedundantTypeCast", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeCastIsRedundantExpressionIsAlwaysOfProvidedType", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeCastAssertionIsRedundantAsProvidedValueAlwaysHasExactlyTheSameTypeAsTheTypeProvidedForTheCast", "4")]
[RegisterConfigurableSeverityAttribute("RedundantTypeCastStructural", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeCastIsRedundantExpressionIsOfAStructurallyCompatibleType", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeCastAssertionIsRedundantAsProvidedValueAlwaysHasTypeIdenticalToTypeProvidedForTheCast", "4")]
[RegisterConfigurableSeverityAttribute("DuplicateReferenceComment", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateReferenceCommentIsRedundant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfReferenceCommentToTheSameFileIsAlreadyProvidedDuplicateReferenceCommentIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("CyclicReferenceComment", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ReferenceCommentCreatesCyclicDependency", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfReferenceCommentDependenciesFinallyResolveToTheSameFileThereExistsADependencyCycle", "0")]
[RegisterConfigurableSeverityAttribute("SameImportsWithDifferentName", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SameItemIsImportedTwiceWithDifferentNames", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TwoImportDeclarationsAreResolvedToTheSameItem", "4")]
[RegisterConfigurableSeverityAttribute("RedundantEmptyConstructor", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantEmptyConstructorWithoutParameters", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "EmptyConstructorWithoutParametersIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("UnusedLocalImport", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnusedLocalImport", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NonExportedImportIsDeclaredButIsNeverUsed", "4")]
[RegisterConfigurableSeverityAttribute("ParameterDoesntMakeAnySense", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterDoesntParticipateInTheMainSignature", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OverloadParameterWhichDoesntParticipateInTheMainSignatureDoesntMakeAnySense", "4")]
[RegisterConfigurableSeverityAttribute("TypeGuardDoesntAffectAnything", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeGuardDoesntAffectVariablesTypeInAnyWay", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeGuardWhichDoesntReallyAffectTheVariablesTypeIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("TypeGuardProducesNeverType", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeGuardDefinitelyProducesneverTypeForTheVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeGuardWhichDefinitelyProducesneverForTheVariableTypeIsSuspicious", "4")]
[RegisterConfigurableSeverityAttribute("SuspiciousTypeofCheck", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SuspicioustypeofCheck", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExpressionCannotBeOfTypeForWhichItsCheckedAgainstUsingtypeof", "4")]
[RegisterConfigurableSeverityAttribute("SuspiciousInstanceofCheck", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SuspiciousinstanceofCheck", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExpressionCannotBeSubtypeOfTypeAgainstWhichItsCheckedUsinginstanceof", "4")]
[RegisterConfigurableSeverityAttribute("EmptyReturnValueForTypeAnnotatedFunction", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "EmptyReturnValueForTypeAnnotatedFunction", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FunctionIsProvidedWithTypeAnnotationButReturnValueIsEmpty", "4")]
[RegisterConfigurableSeverityAttribute("SuspiciousThisUsage", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SuspiciousthisUsageInContextOfLocalFunctionInsideClassMember", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InAContextOfLocalFunctionInsideClassMemberthisRefersToTheLocalFunctionItselfNotToTheContainingClass", "4")]
[RegisterConfigurableSeverityAttribute("AssignedValueWontBeAssignedToCorrespondingField", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterPropertyValueAssignedInsideConstructorWontBeAssignedToClassProperty", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfAParameterPropertyIsReferredToWithoutthisQualifierInAnAssignmentInsideTheConstructorTheAssignedValueWontBeSetForTheResultingPropertyButWillBeSetOnlyForTheLocalConstructorParameter", "4")]
[RegisterConfigurableSeverityAttribute("TypeParameterHidesTypeParamFromOuterScope", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeParameterHidesTypeParameterDeclaredInOuterScope", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeParameterWithTheSameNameExistsInSomeOuterScopeAndCurrentDeclarationHidesIt", "4")]
[RegisterConfigurableSeverityAttribute("UseOfPossiblyUnassignedProperty", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfPossiblyUnassignedPropertyInAStaticInitializer", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ReferencedPropertyIsDeclaredLaterOrItReferencesItselfInAStaticInitializer", "4")]
[RegisterConfigurableSeverityAttribute("MoreSpecificSignatureAfterLessSpecific", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MoreSpecificSignatureFollowsLessSpecific", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfMoreSpecificSignatureFollowsLessSpecificTypeScriptOverloadResolutionWillChooseLessSpecificNevertheless", "4")]
[RegisterConfigurableSeverityAttribute("LessSpecificOverloadThanMainSignature", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OverloadIsLessSpecificThanTheMainSignature", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfOverloadIsLessSpecificThanTheMainSignatureItMakesNoSenseAsTypeScriptOverloadResolutionWillUseLessSpecificOverloadSignatureForResolve", "4")]
[RegisterConfigurableSeverityAttribute("AmdDependencyPathProblem", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CheckamdDependencyTheSameWayAsRequireArgument", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ForSomeEnvironmentsAmdDependencyCorrespondenceWithActuallyExistingModulesIsCrucial", "0")]
[RegisterConfigurableSeverityAttribute("CreateSpecializedOverload", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "StringLiteralUsageAllowsCreatingSpecializedOverload", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfOneOfTheArgumentsIsAStringLiteralItsPossibleToCreateASpecializedOverloadForIt", "2")]
[RegisterConfigurableSeverityAttribute("IntroduceVariableToApplyGuard", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IntroducingVariableWillAllowToApplyTypeGuard", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeGuardsCannotBeAppliedToExpressionsButCanBeAppliedToLocalVariablesIntroducingVariableWillAllowTypeGuardToBeApplied", "2")]
[RegisterConfigurableSeverityAttribute("AbstractClassConstructorCanBeMadeProtected", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ConstructorOfAnAbstractClassCanBeMadeProtected", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ConstructorOfAnAbstractClassIsAlwaysCalledOnlyFromDerivedTypesAndCanBeMadeProtected", "2")]
[RegisterConfigurableSeverityAttribute("PrivateVariableCanBeMadeReadonly", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PrivateClassFieldCanBeMadeReadonly", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PrivateClassFieldIsInitializedOnlyInConstructorAndThusCanBeMadeReadonly", "2")]
[RegisterConfigurableSeverityAttribute("WrongPublicModifierSpecification", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NonCompliantpublicModifierOrItsAbsence", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PresenceOfpublicModifierDoesntAdhereToCodeStyleSetting", "2")]
[RegisterConfigurableSeverityAttribute("ImplicitAnyTypeWarning", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ElementHasImplicitanyType", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CorrespondsToErrorsReportedByCompilerWhenRunningWithNoImplicitAnyFlagCorrespondingCodeStyleSettingShouldBeSetForThisInspectionToBeEnabled", "4")]
[RegisterConfigurableSeverityAttribute("SpecifyVariableTypeExplicitly", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeOfVariableMayBeSpecifiedExplicitly", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfVariableTypeCouldBeDerivedFromContextItMayAlsoBeExplicitlySpecifiedIsAffectedByCodeStyleSettingSpecifyTypesExplicitly", "2")]
[RegisterConfigurableSeverityAttribute("RedundantVariableTypeSpecification", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TypeSpecificationIsRedundantBecauseVariableTypeIsContextuallyDeterminedFromTheTypeOfAssignedValue", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfVariableDeclarationHasAnInitializerTypeSpecificationIsRedundantIfItsTheSameTypeWithAssignedValueTypeIsAffectedByCodeStyleSettingSpecifyTypesExplicitly", "2")]
[RegisterConfigurableSeverityAttribute("WrongRequireRelativePath", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NonCompliantPathStyleInsiderequire", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathStyleInsiderequireDoesntAdhereToCodeStyleSetting", "2")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponent5837C59A18731FC9253D2F4067F3D83299571814F94C33E68308FF819147F2A9 : object {
}
[RegisterConfigurableSeverityAttribute("VariableUsedInInnerScopeBeforeDeclared", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsUsedInInnerScopeBeforeItIsDeclared", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsUsedInInnerScopeBeforeItIsDeclared", "4")]
[RegisterConfigurableSeverityAttribute("FunctionsUsedBeforeDeclared", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FunctionIsUsedBeforeItIsDeclared", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FunctionIsUsedBeforeItIsDeclared", "0")]
[RegisterConfigurableSeverityAttribute("VariableUsedOutOfScope", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsUsedOutsideOfScopeWhichItIsDeclared", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsUsedOutsideOfScopeWhichItIsDeclared", "4")]
[RegisterConfigurableSeverityAttribute("FunctionUsedOutOfScope", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FunctionIsUsedOutsideOfScopeWhichItIsDeclared", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FunctionIsUsedOutsideOfScopeWhichItIsDeclared", "4")]
[RegisterConfigurableSeverityAttribute("ConstructorCallNotUsed", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ConstructorCallIsNotUsedOrPossiblyUsedForSideEffects", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ObjectConstructedBynewExpressionIsNotUsedFunctionShouldBeCalledInGeneralMannerIfUsedForSideEffects", "4")]
[RegisterConfigurableSeverityAttribute("CallerCalleeUsing", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfargumentsCallerAndargumentsCallee", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AvoidUsingargumentsCallerOrargumentsCalleeByEitherGivingFunctionExpressionsANameOrUseAFunctionDeclaration", "4")]
[RegisterConfigurableSeverityAttribute("CoercedEqualsUsing", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfCoercedEquality", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfCoercedEqualityOperator", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AndBothTryToCoerceValuesBeforeComparingThemWhichCanLeadToSomeUnexpectedResultsUsingOfStrictOperatorsAndMakesCodeMorePredictable", "4")]
[RegisterConfigurableSeverityAttribute("CoercedEqualsUsingWithNullUndefined", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfCoercedEquality", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsingOfCoercedEqualityOperatorWithnullOrundefined", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AndWhenAppliedTonullOrundefinedPerformCheckWithBothOfTheseValues", "0")]
[RegisterConfigurableSeverityAttribute("NativeTypePrototypeExtending", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExtendingPrototypeOfNativeObject", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExtendingPrototypeOfNativeObjectMayCauseUnexpectedEffects", "4")]
[RegisterConfigurableSeverityAttribute("NativeTypePrototypeOverwriting", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OverwritingPrototypeOfNativeObject", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "OverwritingPrototypeOfNativeObjectHasNoEffect", "4")]
[RegisterConfigurableSeverityAttribute("VariableUsedBeforeDeclared", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsUsedBeforeItIsDeclared", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsUsedBeforeItIsDeclared", "4")]
[RegisterConfigurableSeverityAttribute("LocalFunctionRedefinedLater", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LocalFunctionIsRedefinedLater", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LocalFunctionIsRedefinedLater", "4")]
[RegisterConfigurableSeverityAttribute("SimilarExpressionsComparison", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SimilarExpressionsComparison", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ComparisonOfSimilarExpressionsLikeXX", "4")]
[RegisterConfigurableSeverityAttribute("AssignmentInConditionExpression", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentToAVariableInsideAConditionalStatement", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentToAVariableInsideAConditionalStatementIsLikelyToBeMistyped", "4")]
[RegisterConfigurableSeverityAttribute("IncorrectOperandInTypeOfComparison", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ComparisonOftypeofExpressionWithIncorrectValue", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ComparisonOftypeofExpressionWithIncorrectValue", "4")]
[RegisterConfigurableSeverityAttribute("ClosureOnModifiedVariable", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ClosureOnAVariableModifiedInLoopOfOuterScope", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ClosureOnAVariableModifiedInLoopOfOuterScope", "4")]
[RegisterConfigurableSeverityAttribute("MissingHasOwnPropertyInForeach", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ThereIsNoHasOwnPropertyCheckInABodyOfforInLoopThisWillCauseAnEnumerationOfPrototypeProperties", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ThereIsNoHasOwnPropertyCheckInABodyOfforInLoopThisWillCauseAnEnumerationOfPrototypeProperties", "4")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponent62D67CE47DB80DEECEA2D66202C6B6317745D29DC6A31380AF34FA0B23FC2CFA : object {
}
[RegisterConfigurableSeverityAttribute("JsUnreachableCode", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnreachableCode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CodeIsUnreachable", "4")]
[RegisterConfigurableSeverityAttribute("AssignedValueIsNeverUsed", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignedValueIsNeverUsed", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AVariableWasAssignedAValueButNeverUsed", "4")]
[RegisterConfigurableSeverityAttribute("JumpMustBeInLoop", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsebreakOrcontinueOutsideOfLoopBody", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "breakAndcontinueWithoutLabelShouldBeInALoopBody", "4")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponent76F17AA02A2763FA5ACD1AF74E96D786EAE0C7E41B25E5D6243B004C09D49FDB : object {
}
[RegisterConfigurableSeverityAttribute("TsNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfUndeclaredVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfUndeclaredVariable1", "5")]
[RegisterConfigurableSeverityAttribute("TsResolvedFromInaccessibleModule", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveProbablySymbolIsLocatedInInaccessibleModule", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SymbolIsPossiblyInInaccessibleModule", "5")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponent8EC800F04C66F585F5494F47DF4BB992B5E39522FE8E8A5030B604468323539B : object {
}
[RegisterConfigurableSeverityAttribute("LValueIsExpected", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LValueExpectedError", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfInappropriateValueToTheLeftOfAssignmentOperator", "5")]
[RegisterConfigurableSeverityAttribute("MultipleDeclarationsInForeach", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MultipleDeclarationsInforInError", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MultipleVariableDeclarationsAreNotAllowedInforInLoop", "5")]
[RegisterConfigurableSeverityAttribute("LabelOrSemicolonExpected", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfExpressionAfterBreakOrContinue", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "breakAndcontinueStatementsCanOnlyBeFollowedByLabelName", "5")]
[RegisterConfigurableSeverityAttribute("ThrowMustBeFollowedByExpression", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExpressionIsExpectedAfterthrowStatement", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "throwStatementShouldBeFollowedByExpression", "5")]
[RegisterConfigurableSeverityAttribute("PropertyGetterCannotHaveParameters", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PropertyGetterCannotHaveParameters", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PropertyGetterCannotHaveParameters", "5")]
[RegisterConfigurableSeverityAttribute("PropertySetterMustHaveSingleParameter", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PropertySetterMustHaveASingleParameter", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PropertySetterMustHaveASingleParameter", "5")]
[RegisterConfigurableSeverityAttribute("EmptyObjectPropertyDeclaration", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ObjectPropertyDeclarationIsExpected", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ObjectPropertyDeclarationIsExpected", "5")]
[RegisterConfigurableSeverityAttribute("NotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveSymbol", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveSymbol", "4")]
[RegisterConfigurableSeverityAttribute("Es6Feature", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ECMAScriptFeatureUsageWhenInESOrLower", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ECMAScriptFeatureIsUsedInECMAScriptOrLower", "5")]
[RegisterConfigurableSeverityAttribute("Es7Feature", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ECMAScriptFeatureUsageWhenInESOrLower2", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ECMAScriptFeatureIsUsedInECMAScriptOrLower3", "5")]
[RegisterConfigurableSeverityAttribute("ExperimentalFeature", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExperimentalFeatureUsageWhenLanguageLevelSetToStable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExperimentalFeatureUsedWhenTargetedToStableESLevel", "5")]
[RegisterConfigurableSeverityAttribute("JsPathNotFound", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathForReferenceCommentNotFound", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PathForFileReferencedByAReferenceCommentIsNotFound", "5")]
[RegisterConfigurableSeverityAttribute("IncorrectTripleSlashLocation", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TripleSlashDirectivesAreOnlyValidAtTheTopOfTheFile", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TripleSlashDirectivesAreOnlyValidAtTheTopOfTheFile", "4")]
[RegisterConfigurableSeverityAttribute("CommaNotValidHere", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CommaIsNotValidHere", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CommaIsNotValidInThisPlace", "5")]
[RegisterConfigurableSeverityAttribute("SuperCallProhibitsThis", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "superMustBeCalledBeforeAccessingthisInTheConstructorOfADerivedClass", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "superMustBeCalledBeforeAccessingthisInTheConstructorOfADerivedClass", "5")]
[RegisterConfigurableSeverityAttribute("LexicalDeclarationNeedsBlock", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LexicalDeclarationCanOnlyBeDeclaredInsideABlock", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LexicalDeclarationCanOnlyBeDeclaredInsideABlock", "5")]
[RegisterConfigurableSeverityAttribute("ImportKeywordNotWithInvocation", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "importKeywordIsNotAllowedHere", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "importKeywordIsAllowedOnlyInImportConstructs", "5")]
[RegisterConfigurableSeverityAttribute("ObjectLiteralsAreNotCommaFree", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CommaIsExpectedInObjectLiteral", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CommaIsRequiredBetweenObjectLiteralMembers", "5")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponentE4278B4833AA7C52399476E1E8C36DC3BC4C4A754AACB4711CF3D6AEDBF29ABB : object {
}
[RegisterConfigurableSeverityAttribute("UnusedParameter", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnusedParameter", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterOfFunctionIsDeclaredButNeverUsed", "4")]
[RegisterConfigurableSeverityAttribute("UnusedInheritedParameter", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnusedParameterOfInheritedMember", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterOfFunctionIsDeclaredButNeverUsedAndThatFunctionIsInherited", "2")]
[RegisterConfigurableSeverityAttribute("UnusedLocals", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnusedLocalVariableFunctionClass", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LocalVariableFunctionClassIsDeclaredButNeverUsed", "4")]
[RegisterConfigurableSeverityAttribute("UnusedProperty", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnusedPropertyOrFunction", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PropertyOrFunctionIsDeclaredButNeverUsed", "4")]
[RegisterConfigurableSeverityAttribute("RedundantLocalFunctionName", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantLocalFunctionName", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LocalFunctionNameIsRedundantBecauseItIsNeverCalledRecursively", "2")]
[RegisterConfigurableSeverityAttribute("RedundantLocalClassName", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantLocalClassName", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LocalClassNameIsRedundantBecauseItIsNeverUsedFromWithinItsOwnBlock", "2")]
[RegisterConfigurableSeverityAttribute("DuplicatingLocalDeclaration", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateLocalDeclaration", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateDeclarationOfALocalVariableFunctionOrParameter", "4")]
[RegisterConfigurableSeverityAttribute("SameVariableAssignment", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentOfALocalVariableToItselfIsRedundant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentsLikeaAAreRedundant", "4")]
[RegisterConfigurableSeverityAttribute("RedundantElseBlock", "", "", "", "DeclarationRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantelseBlock", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "elseBlockIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("RedundantBlock", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantBlock", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "BlockIsRedundant", "4")]
[RegisterConfigurableSeverityAttribute("UsingOfReservedWord", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfFutureReservedWord", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TheWordIsReservedForFutureVersionsOfECMAScript", "4")]
[RegisterConfigurableSeverityAttribute("StatementTermination", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "StatementTerminationDoesntMatchCodeStyle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "StatementTerminationDoesntMatchCodeStyle1", "4")]
[RegisterConfigurableSeverityAttribute("JoinDeclarationAndInitializerJs", "", "", "", "BestPractice", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "JoinLocalVariableDeclarationAndAssignment", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "JoinLocalVariableDeclarationAndAssignment", "3")]
[RegisterConfigurableSeverityAttribute("VariableCanBeMadeLet", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "varVariableCanBeMadeletVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FunctionScopeVariableDeclaredByvarKeywordCanSafelyBeTurnedIntoABlockScopeVariableDeclaredByconstKeyword", "2")]
[RegisterConfigurableSeverityAttribute("VariableCanBeMadeConst", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableCanBeMadeConstant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AVariableHadNoWriteUsagesThusItCanBeTurnedIntoAConstant", "2")]
[RegisterConfigurableSeverityAttribute("VariableCanBeMovedToInnerBlock", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LocalVariableCanBeSafelyMovedToInnerBlock", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AVariableHadNoUsagesInOuterBlockWhereItIsDeclaredSoItCanBeSafelyMovedToTheInnerBlock", "2")]
[RegisterConfigurableSeverityAttribute("StringConcatenationToTemplateString", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "StringConcatenationCanBeConvertedToATemplateString", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfAnExpressionRepresentsStringConcatenationsWithOtherExpressionsItCanBeConvertedToATemplateExpression", "2")]
[RegisterConfigurableSeverityAttribute("RedundantIntermediateVariable", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IntermediateLocalVariableIsRedundantAndCanBeSafelyInlined", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfALocalVariableIsAssignedToSomeAnotherLocalVariableAndThatLocalVariableDoesntHaveMoreThanOneReadUsageItCanBeSafelyInlined", "2")]
[RegisterConfigurableSeverityAttribute("ReplaceWithDestructuringSwap", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IntermediateLocalVariableIsRedundantBecauseItCanBeReplacedWithADestructuringSwapExpression", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ATemporaryLocalVariableUsedForSwappingValuesOfTwoOtherVariablesCanBeReplacedByADestructuringSwap", "2")]
[RegisterConfigurableSeverityAttribute("ReplaceIndicingWithArrayDestructuring", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SubsequentIndexersCanBeReplacedByADestructuringDeclarationOrAssignment", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfTheSameItemIsIndexedInRightHandSideOfTheSubsequentStatementsEGAEBEThatSequentialSeriesOfAssignmentsCanBeReplacedByADestructuringDeclarationOrAssignmentEGABE", "2")]
[RegisterConfigurableSeverityAttribute("ReplaceIndicingWithShortHandPropertiesAfterDestructuring", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SubsequentIndexersInObjectLiteralFieldsCanBeSimplifiedWithDestructuring", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfTheSameItemIsIndexedInValuesOfObjectPropertiesEGVarXaRBRThatPropertiesCanBePreliminaryAssignedUsingADestructuringAndThenUsedInAShorthandFormIfNoNameConflictsAreDetected", "2")]
[RegisterConfigurableSeverityAttribute("ReplaceUndefinedCheckingSeriesWithObjectDestructuring", "", "", "", "LanguageUsage", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ASeriesOfUndefinedChecksForPropertiesCanBeReplacedWithDestructuring", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfASequenceOfPropertiesForTheSameItemIsCheckedForundefinedEGVarWXAUndefinedDefXAVarSXBUndefinedDefXBThisSequenceCanBeReplacedWithAnObjectDestructuringPatternEGaWBSX", "2")]
[RegisterConfigurableSeverityAttribute("HeuristicallyUnreachableCode", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HeuristicallyUnreachableCode", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "HeuristicallyUnreachableCode2", "4")]
[RegisterConfigurableSeverityAttribute("ExpressionIsAlwaysConst", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExpressionIsAlwaysConstant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExpressionIsAlwaysConstant3", "4")]
[RegisterConfigurableSeverityAttribute("QualifiedExpressionMaybeNull", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "QualifierCanBenullOrundefined", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "QualifierCanBenullOrundefined4", "4")]
[RegisterConfigurableSeverityAttribute("QualifiedExpressionIsNull", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "QualifierIsnullOrundefined", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "QualifierIsnullOrundefined5", "4")]
[RegisterConfigurableSeverityAttribute("InvokedExpressionMaybeNonFunction", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvokedExpressionIsNotAFunctionValue", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvokedExpressionIsNotAFunctionValue6", "4")]
[RegisterConfigurableSeverityAttribute("InvocationOfNonFunction", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvocationOfNonFunctionExpression", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvocationOfNonFunctionExpression7", "4")]
[RegisterConfigurableSeverityAttribute("ConditionIsAlwaysConst", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ConditionIsAlwaysConstant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ConditionIsAlwaysConstant8", "4")]
[RegisterConfigurableSeverityAttribute("DuplicatingPropertyDeclaration", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicatePropertyDeclaration", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateDeclarationOfALiteralObjectProperty", "4")]
[RegisterConfigurableSeverityAttribute("DuplicatingSwitchLabel", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateSwitchLabel", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DuplicateSwitchLabel9", "4")]
[RegisterConfigurableSeverityAttribute("WrongExpressionStatement", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SuspiciousExpressionStatement", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ExpressionStatementIsNeitherAnAssignmentStatementNorAFunctionCall", "4")]
[RegisterConfigurableSeverityAttribute("ThisInGlobalContext", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfthisInGlobalContext", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfthisInGlobalContext10", "4")]
[RegisterConfigurableSeverityAttribute("XmlDocCommentSyntaxProblem", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IllegalSyntaxInXMLCodeComment", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IllegalSyntaxInXMLCodeComment11", "4")]
[RegisterConfigurableSeverityAttribute("AssignToImplicitGlobalInFunctionScope", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentToAnImplicitlyDeclaredGlobalVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentToAnImplicitlyDeclaredGlobalVariable12", "4")]
[RegisterConfigurableSeverityAttribute("AssignToConstant", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentToConstant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentToConstantMayLeadToARunTimeError", "5")]
[RegisterConfigurableSeverityAttribute("NonAssignedConstant", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NonAssignedConstant", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ConstantMustBeAssigned", "5")]
[RegisterConfigurableSeverityAttribute("BlockScopeRedeclaration", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedeclarationOfLetConst", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "BlockScopeVariablesCannotBeRedeclared", "5")]
[RegisterConfigurableSeverityAttribute("UseOfImplicitGlobalInFunctionScope", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfImplicitlyDeclaredGlobalVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfImplicitlyDeclaredGlobalVariable13", "4")]
[RegisterConfigurableSeverityAttribute("PossiblyUnassignedProperty", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfPossiblyUnassignedPropertyOrGlobalVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UseOfPossiblyUnassignedPropertyOrGlobalVariable14", "2")]
[RegisterConfigurableSeverityAttribute("InconsistentFunctionReturns", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InconsistentFunctionReturns", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "SomeOfFunctionExitsReturnValueButTheOthersDont", "4")]
[RegisterConfigurableSeverityAttribute("ReturnFromGlobalScopetWithValue", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ReturnStatementWithAValueInTheGlobalScope", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ReturnStatementWithAValueInTheGlobalScope15", "4")]
[RegisterConfigurableSeverityAttribute("NotAllPathsReturnValue", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NotAllCodePathsReturnAValue", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FunctionHasReturnStatementsWithSpecifiedValueButThereAreExecutionPathsThatDontContainAnyReturnStatement", "4")]
[RegisterConfigurableSeverityAttribute("UsageOfPossiblyUnassignedValue", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsageOfPossiblyUnassignedLocalVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsNotAssignedOnSomeExecutionPaths", "4")]
[RegisterConfigurableSeverityAttribute("FunctionParameterNamedArguments", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterNameargumentsClashesWithPreDefinedJSFunctionScopeVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterNameargumentsClashesWithPreDefinedJSFunctionScopeVariable", "4")]
[RegisterConfigurableSeverityAttribute("UsageOfDefinitelyUnassignedValue", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UsageOfUnassignedLocalVariable", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "VariableIsUsedButIsWasntAssignedAValue", "4")]
[RegisterConfigurableSeverityAttribute("ParameterValueIsNotUsed", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterValueIsNotUsed", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ParameterValueIsNotUsedBecauseItIsOverriddenInTheFunctionBody", "4")]
[RegisterConfigurableSeverityAttribute("MisuseOfOwnerFunctionThis", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MisuseOfthisQualifierInInnerFunction", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PropertyWithQualifierthisThatIsUsedInAnInnerFunctionMatchesByNameWithPropertyDefinedInTheOuterFunction", "4")]
[RegisterConfigurableSeverityAttribute("ElidedTrailingElement", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ATrailingElementOfAnArrayIsElided", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "IfAnElementIsElidedAtTheEndOfAnArrayThatElementDoesNotContributeToTheLengthOfTheArray", "4")]
[RegisterConfigurableSeverityAttribute("ErrorInXmlDocReference", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ErrorInXMLDocCommentReference", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ErrorInXMLDocCommentReference16", "5")]
[RegisterConfigurableSeverityAttribute("PossiblyIncorrectlyBrokenStatement", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "StatementIsPossiblyIncorrectlyBrokenByANewline", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NewlineCausesTextToBeTreatedAsTwoSeparateStatementsThoughMaybeItWasIntendedToBeASingleOne", "4")]
[RegisterConfigurableSeverityAttribute("UnsafeCommaInObjectPropertiesList", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TrailingRedundantCommaInObjectPropertiesListMayBeError", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TrailingRedundantCommaInObjectPropertiesLeadsToErrorsInSomeJSEnginesEGIEsEngine", "4")]
[RegisterConfigurableSeverityAttribute("DeclarationHides", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DeclarationHidesAnotherDeclarationFromAnOuterScope", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "DeclarationHidesAnotherDeclarationFromAnOuterScope", "2")]
[RegisterConfigurableSeverityAttribute("SuspiciousLambdaBlock", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "PossibleMistakeAmbiguousLambdaBlockAndObjectLiteral", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LambdaExpressionsInFormOfaBAreBlockLambdasWithAStatementbHavingALabela", "4")]
[RegisterConfigurableSeverityAttribute("ObjectDestructuringWithoutParentheses", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NonParenthesizedObjectDestructuringAssignmentCannotBeUsedInAnExpressionStatement", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AssignmentExpressionInFormOfaBaCannotBeUsedInAnExpressionStatementIfNotParenthesized", "5")]
[RegisterConfigurableSeverityAttribute("JsonValidationFailed", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "JSONValidationFailed", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "FailedToValidateJSONAgainstASchema", "5")]
[RegisterConfigurableSeverityAttribute("InvalidJsonSyntax", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "InvalidJSONSyntax", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CodeUsesNonStandardOrInvalidJSONSyntax", "5")]
[RegisterConfigurableSeverityAttribute("StringLiteralWrongQuotes", "", "", "", "CodeStyleIssues", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "NonCompliantQuotesAroundStringLiteral", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "QuotesAroundStringLiteralDifferFromCodeStyleSetting", "2")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RegisterSeverityComponentF0F149A8A7F6F8D50F219C47C913811D39F76CD1B1C92F4EDB4831DA6B1C220F : object {
}
[ConfigurableSeverityHighlightingAttribute("ReplaceIndicingWithArrayDestructuring", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ReplaceIndicingWithArrayDestructuringWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <FirstNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IAssignmentSourceOwner> <AllExpressions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasOnlyVarsOfSameKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode FirstNode { get; }
    public IList`1<IAssignmentSourceOwner> AllExpressions { get; }
    public bool HasOnlyVarsOfSameKind { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ReplaceIndicingWithArrayDestructuringWarning(ITreeNode firstNode, IList`1<IAssignmentSourceOwner> allExpressions, bool hasOnlyVarsOfSameKind);
    [CompilerGeneratedAttribute]
public ITreeNode get_FirstNode();
    [CompilerGeneratedAttribute]
public IList`1<IAssignmentSourceOwner> get_AllExpressions();
    [CompilerGeneratedAttribute]
public bool get_HasOnlyVarsOfSameKind();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ReplaceIndicingWithShortHandPropertiesAfterDestructuring", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ReplaceIndicingWithShortHandPropertiesAfterDestructuringWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <FirstNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IObjectPropertyInitializer> <AllProperties>k__BackingField;
    public ITreeNode FirstNode { get; }
    public IList`1<IObjectPropertyInitializer> AllProperties { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ReplaceIndicingWithShortHandPropertiesAfterDestructuringWarning(ITreeNode firstNode, IList`1<IObjectPropertyInitializer> allProperties);
    [CompilerGeneratedAttribute]
public ITreeNode get_FirstNode();
    [CompilerGeneratedAttribute]
public IList`1<IObjectPropertyInitializer> get_AllProperties();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ReplaceUndefinedCheckingSeriesWithObjectDestructuring", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ReplaceUndefinedCheckingSeriesWithObjectDestructuringWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <FirstNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IAssignmentSourceOwner> <AllExpressions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasOnlyVarsOfSameKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode FirstNode { get; }
    public IList`1<IAssignmentSourceOwner> AllExpressions { get; }
    public bool HasOnlyVarsOfSameKind { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ReplaceUndefinedCheckingSeriesWithObjectDestructuringWarning(ITreeNode firstNode, IList`1<IAssignmentSourceOwner> allExpressions, bool hasOnlyVarsOfSameKind);
    [CompilerGeneratedAttribute]
public ITreeNode get_FirstNode();
    [CompilerGeneratedAttribute]
public IList`1<IAssignmentSourceOwner> get_AllExpressions();
    [CompilerGeneratedAttribute]
public bool get_HasOnlyVarsOfSameKind();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ReplaceWithDestructuringSwap", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ReplaceWithDestructuringSwapWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaredElement <TemporaryVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReadUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <DeletedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ISimpleAssignmentExpression <InnerAssignment>k__BackingField;
    public IDeclaredElement TemporaryVariable { get; }
    public IReferenceExpression ReadUsage { get; }
    public ITreeNode DeletedNode { get; }
    public ISimpleAssignmentExpression InnerAssignment { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ReplaceWithDestructuringSwapWarning(IDeclaredElement temporaryVariable, IReferenceExpression readUsage, ITreeNode deletedNode, ISimpleAssignmentExpression innerAssignment);
    [CompilerGeneratedAttribute]
public IDeclaredElement get_TemporaryVariable();
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReadUsage();
    [CompilerGeneratedAttribute]
public ITreeNode get_DeletedNode();
    [CompilerGeneratedAttribute]
public ISimpleAssignmentExpression get_InnerAssignment();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.Injected.InjectedJavaScriptLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.Resolve.InjectedJavaScriptNotResolvedErrorHandler : NotResolvedErrorHandlerBase {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.Resolve.NotResolvedErrorHandler : NotResolvedErrorHandlerBase {
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.Resolve.NotResolvedErrorHandlerBase : object {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.Resolve.ResolveProblemHighlighter : object {
    private JsInitialResolveContext myContext;
    private IFile myFile;
    private IReferenceProvider myReferenceProvider;
    private ResolveHighlighterRegistrar myRegistrar;
    public ResolveProblemHighlighter(IFile file, ResolveHighlighterRegistrar resolveHighlighterRegistrar, JsInitialResolveContext context);
    public void CheckForResolveProblems(IHighlightingConsumer consumer, ITreeNode element);
    public void CheckForResolveProblems(IHighlightingConsumer consumer, IReference reference);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RestParameterCanNotHaveDefaultValueError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RestParameterCanNotHaveDefaultValueError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RestParameterCanNotHaveOptionalMarkError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RestParameterCanNotHaveOptionalMarkError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RestSpecializedParameterError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RestSpecializedParameterError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.RestTupleElementCanNotHaveOptionalMarkError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTupleTypeElement <Element>k__BackingField;
    public ITsTupleTypeElement Element { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public RestTupleElementCanNotHaveOptionalMarkError(ITsTupleTypeElement element);
    [CompilerGeneratedAttribute]
public ITsTupleTypeElement get_Element();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ReturnFromGlobalScopetWithValue", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ReturnFromGlobalScopetWithValueWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReturnStatement <ReturnStatement>k__BackingField;
    public IReturnStatement ReturnStatement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ReturnFromGlobalScopetWithValueWarning(IReturnStatement returnStatement);
    [CompilerGeneratedAttribute]
public IReturnStatement get_ReturnStatement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SameImportsWithDifferentName", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SameImportsWithDifferentNameWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsImportDeclaration <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsImportDeclaration <AnotherNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsImportDeclaration Node { get; }
    public ITsImportDeclaration AnotherNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SameImportsWithDifferentNameWarning(ITsImportDeclaration node, ITsImportDeclaration anotherNode);
    [CompilerGeneratedAttribute]
public ITsImportDeclaration get_Node();
    [CompilerGeneratedAttribute]
public ITsImportDeclaration get_AnotherNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SameVariableAssignment", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SameVariableAssignmentWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IAssignmentExpression <AssignmentExpression>k__BackingField;
    public IAssignmentExpression AssignmentExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SameVariableAssignmentWarning(IAssignmentExpression assignmentExpression);
    [CompilerGeneratedAttribute]
public IAssignmentExpression get_AssignmentExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SetterShouldHaveOneParameterError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsMemberAccessorDeclaration <Accessor>k__BackingField;
    public ITsMemberAccessorDeclaration Accessor { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SetterShouldHaveOneParameterError(ITsMemberAccessorDeclaration accessor);
    [CompilerGeneratedAttribute]
public ITsMemberAccessorDeclaration get_Accessor();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SimilarExpressionsComparison", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SimilarExpressionsComparisonWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IBinaryExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private JsVariableStateExtended <Value>k__BackingField;
    public IBinaryExpression Expression { get; }
    public JsVariableStateExtended Value { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SimilarExpressionsComparisonWarning(IBinaryExpression expression, JsVariableStateExtended value);
    [CompilerGeneratedAttribute]
public IBinaryExpression get_Expression();
    [CompilerGeneratedAttribute]
public JsVariableStateExtended get_Value();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[NullableContextAttribute("1")]
public interface JetBrains.ReSharper.Daemon.JavaScript.Stages.SmartResolver.IJavaScriptSmartResolverExecutor {
    public abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLikeBaseLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SmartResolver.JavaScriptSmartResolverExecutor : object {
    [NullableContextAttribute("1")]
public sealed virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SmartResolver.JavaScriptSmartResolverStage : JavaScriptDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool get_ShouldRunOnGenerated();
    [NullableContextAttribute("1")]
protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.SmartResolver.JsExtraResolverProcessor : JsExtraResolverProcessorBase {
    [CompilerGeneratedAttribute]
private IHighlightingConsumer <Consumer>k__BackingField;
    [CompilerGeneratedAttribute]
private JsSmartResolverProcess <SmartResolverProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptFile <File>k__BackingField;
    protected IHighlightingConsumer Consumer { get; }
    protected JsSmartResolverProcess SmartResolverProcess { get; }
    protected IJavaScriptFile File { get; }
    public JsExtraResolverProcessor(IJavaScriptFile file, IHighlightingConsumer consumer, JsSmartResolverProcess smartResolverProcess);
    [CompilerGeneratedAttribute]
protected IHighlightingConsumer get_Consumer();
    [CompilerGeneratedAttribute]
protected JsSmartResolverProcess get_SmartResolverProcess();
    [CompilerGeneratedAttribute]
protected IJavaScriptFile get_File();
    public virtual void VisitElement(ITreeNode element, JsResolveContext resolveContext, ISymbolTable symbolTable);
    public virtual void ProcessResolveResult(ResolveResultWithInfo ret);
    [CanBeNullAttribute]
protected virtual IJavaScriptExpression GetExpressionFromSignature(IJsSignatureNode signature);
    protected bool IsSelfPassedParameterPattern(IJavaScriptParameterDeclarationBase parameterDeclaration, IDeclaration outerDeclaration, JsResolveContext context);
    protected virtual bool ShouldHighlightDuplicateParametersError();
    private static bool DeclarationDuplicates(IDeclaredElement declaredElement, IDeclaredElement localConflictedElement, IDeclaration declaration, IDeclaration conflictedDeclaration, bool isFirst, Boolean& isError);
    protected virtual IHighlighting GetBlockScopeRedeclarationHighlighting(ISingleNameBinding declaration, IDeclaredElement declaredElement);
    protected virtual void VisitDeclaration(IDeclaration declaration, JsResolveContext resolveContext, ISymbolTable symbolTable);
    protected virtual bool ShouldCheckConflictsWithOuterScope(IDeclaredElement declaredElement);
    private List`1<IDeclaredElement> GetLocalConflictedElements(ITreeNode declaration, IDeclaredElement declaredElement, ISymbolTable symbolTable);
    private bool IsLocalDeclaration(IDeclaration element);
    protected virtual bool IsLocalElement(IDeclaredElement declaredElement);
    private static bool ConflictsByName(IDeclaredElement tableElement, IDeclaredElement declarationElement, IPsiSourceFile sourceFile);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SmartResolver.JsSmartResolverProcess : JavaScriptDaemonStageProcessBase {
    [CompilerGeneratedAttribute]
private Dictionary`2<IDeclaredElement, bool> <SymbolUsedProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IDeclaredElement> <UnusedSymbols>k__BackingField;
    public Dictionary`2<IDeclaredElement, bool> SymbolUsedProperty { get; }
    public IList`1<IDeclaredElement> UnusedSymbols { get; private set; }
    public JsSmartResolverProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    [CompilerGeneratedAttribute]
public Dictionary`2<IDeclaredElement, bool> get_SymbolUsedProperty();
    [CompilerGeneratedAttribute]
public IList`1<IDeclaredElement> get_UnusedSymbols();
    [CompilerGeneratedAttribute]
private void set_UnusedSymbols(IList`1<IDeclaredElement> value);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    [NotNullAttribute]
protected virtual JsNonQualifiedResolver GetNonQualifiedResolver(IHighlightingConsumer consumer);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SpecializedParameterInImplamentationSignatureError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SpecializedParameterInImplamentationSignatureError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SpecifyVariableTypeExplicitly", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SpecifyVariableTypeExplicitlyWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <VariableDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsType <CalculatedType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Entity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CalculatedTypeString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode VariableDeclaration { get; }
    public ITsType CalculatedType { get; }
    public string Entity { get; }
    public string CalculatedTypeString { get; }
    public string EntityName { get; }
    public ITreeNode HighlightedNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SpecifyVariableTypeExplicitlyWarning(ITreeNode variableDeclaration, ITsType calculatedType, string entity, string calculatedTypeString, string entityName, ITreeNode highlightedNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_VariableDeclaration();
    [CompilerGeneratedAttribute]
public ITsType get_CalculatedType();
    [CompilerGeneratedAttribute]
public string get_Entity();
    [CompilerGeneratedAttribute]
public string get_CalculatedTypeString();
    [CompilerGeneratedAttribute]
public string get_EntityName();
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightedNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("StatementTermination", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StatementTerminationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private TerminationStyle <TerminationStyle>k__BackingField;
    public ITreeNode Statement { get; }
    public DocumentRange Range { get; }
    public TerminationStyle TerminationStyle { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public StatementTerminationWarning(ITreeNode statement, DocumentRange range, TerminationStyle terminationStyle);
    [CompilerGeneratedAttribute]
public ITreeNode get_Statement();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public TerminationStyle get_TerminationStyle();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("StringConcatenationToTemplateString", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StringConcatenationToTemplateStringWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IBinaryExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <HighlightedExpression>k__BackingField;
    public IBinaryExpression Expression { get; }
    public IJavaScriptExpression HighlightedExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public StringConcatenationToTemplateStringWarning(IBinaryExpression expression, IJavaScriptExpression highlightedExpression);
    [CompilerGeneratedAttribute]
public IBinaryExpression get_Expression();
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_HighlightedExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.JScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StringInNotTerminatedError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private IJavaScriptLiteralExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private char <ExpectedQuote>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptLiteralExpression Expression { get; }
    public char ExpectedQuote { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public StringInNotTerminatedError(IJavaScriptLiteralExpression expression, char expectedQuote);
    [CompilerGeneratedAttribute]
public IJavaScriptLiteralExpression get_Expression();
    [CompilerGeneratedAttribute]
public char get_ExpectedQuote();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("StringLiteralWrongQuotes", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StringLiteralWrongQuotesWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptLiteralExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private char <ExpectedQuote>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IJavaScriptLiteralExpression Expression { get; }
    public char ExpectedQuote { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public StringLiteralWrongQuotesWarning(IJavaScriptLiteralExpression expression, char expectedQuote);
    [CompilerGeneratedAttribute]
public IJavaScriptLiteralExpression get_Expression();
    [CompilerGeneratedAttribute]
public char get_ExpectedQuote();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptPredefinedCustomPatterns : object {
    private JavaScriptLanguage myJsLanguage;
    private ILanguageManager myLanguageManager;
    public JavaScriptPredefinedCustomPatterns(ILanguageManager languageManager);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptPredefinedCustomPatterns/<GetPatterns>d__3")]
public sealed virtual IEnumerable`1<IPredefinedPattern> GetPatterns();
    private IPredefinedPattern CreatePattern(IStructuralSearcherFactory structuralSearcherFactory, string id, string compoundItemName, string groupName, Severity severity, string pattern, IStructuralSearchPatternBuilder builder, string comment, string replace, string replaceComment, bool matchSimilar, TreatBinaryExpressionsEquivalent binaryExpressions, IPlaceholder[] placeholders);
}
[ConfigurableSeverityHighlightingAttribute("", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptPredefinedPatternHighlighting : StructuralSearchPatternHighlightingBase {
    private string myId;
    public string ConfigurableSeverityId { get; }
    public JavaScriptPredefinedPatternHighlighting(IPredefinedPattern pattern, IStructuralMatchResult result);
    public sealed virtual string get_ConfigurableSeverityId();
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptPredefinedPatternsStage : object {
    private PredefinedCustomPatternsManager myPatternsManager;
    public JavaScriptPredefinedPatternsStage(PredefinedCustomPatternsManager patternsManager);
    private static bool IsSupported(IPsiSourceFile sourceFile);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptPredefinedPatternsStage/<CreateProcess>d__3")]
public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptPredefinedPatternsStageProcess : JavaScriptStructuralSearchDaemonStageProcess {
    public JavaScriptPredefinedPatternsStageProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IEnumerable`1<KeyValuePair`2<ICustomPattern, IStructuralMatcher>> matchers, IJavaScriptFile psiFile);
    protected virtual IHighlighting CreateHighlighting(IStructuralMatchResult result, ICustomPattern pattern);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptStructuralSearchDaemonStage : JavaScriptDaemonStageBase {
    private CustomPatternMatcherManager myCustomPatternMatcherManager;
    public JavaScriptStructuralSearchDaemonStage(CustomPatternMatcherManager customPatternMatcherManager);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.StructuralPatterns.JavaScriptStructuralSearchDaemonStageProcess : StructuralSearchDaemonStageProcessBase {
    private Dictionary`2<ICustomPattern, IStructuralMatcher> myExpressionMatchers;
    private Dictionary`2<ICustomPattern, IStructuralMatcher> myStatementMatchers;
    private Dictionary`2<ICustomPattern, IStructuralMatcher> myPropertyMatchers;
    private Dictionary`2<ICustomPattern, IStructuralMatcher> myPlaceholderMatchers;
    public JavaScriptStructuralSearchDaemonStageProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IEnumerable`1<KeyValuePair`2<ICustomPattern, IStructuralMatcher>> matchers, IJavaScriptFile psiFile);
    private void EnqueueElement(ITreeNode element);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IMatchingContext context);
    public virtual void ProcessBeforeInterior(ITreeNode element, IMatchingContext context);
}
[ConfigurableSeverityHighlightingAttribute("SuperCallProhibitsThis", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SuperCallProhibitsThisError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptStatement <SuperNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanMove>k__BackingField;
    public IJavaScriptStatement SuperNode { get; }
    public bool CanMove { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SuperCallProhibitsThisError(IJavaScriptStatement superNode, bool canMove);
    [CompilerGeneratedAttribute]
public IJavaScriptStatement get_SuperNode();
    [CompilerGeneratedAttribute]
public bool get_CanMove();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SuspiciousInstanceofCheck", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SuspiciousInstanceofCheckWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsExpression Expression { get; }
    public string Reason { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SuspiciousInstanceofCheckWarning(ITsExpression expression, string reason);
    [CompilerGeneratedAttribute]
public ITsExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SuspiciousLambdaBlock", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SuspiciousLambdaBlockWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Brace>k__BackingField;
    public ITreeNode Brace { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SuspiciousLambdaBlockWarning(ITreeNode brace);
    [CompilerGeneratedAttribute]
public ITreeNode get_Brace();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SuspiciousThisUsage", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SuspiciousThisUsageWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsThisExpression <Node>k__BackingField;
    public ITsThisExpression Node { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SuspiciousThisUsageWarning(ITsThisExpression node);
    [CompilerGeneratedAttribute]
public ITsThisExpression get_Node();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("SuspiciousTypeofCheck", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.SuspiciousTypeofCheckWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsExpression Expression { get; }
    public string Reason { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public SuspiciousTypeofCheckWarning(ITsExpression expression, string reason);
    [CompilerGeneratedAttribute]
public ITsExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[HighlightingSourceAttribute]
internal static class JetBrains.ReSharper.Daemon.JavaScript.Stages.SyntaxErrorHighlighter : object {
    public static void Run(IHighlightingConsumer consumer, ITreeNode element, IFile file);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.SyntaxHighlightingProcess : JavaScriptDaemonStageProcessBase {
    private JavaScriptLanguageLevel myLanguageLevel;
    private bool myIsTypeScript;
    private JavaScriptBasedLanguageService myLanguageService;
    public SyntaxHighlightingProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    public virtual void VisitMemberCallConstructor(IMemberCallConstructor memberCallConstructorParam, IHighlightingConsumer context);
    public virtual void VisitArrayLiteralComprehension(IArrayLiteralComprehension arrayLiteralComprehensionParam, IHighlightingConsumer context);
    public virtual void VisitMemberVariable(IMemberVariable memberVariableParam, IHighlightingConsumer context);
    public virtual void VisitObjectLiteralAssignmentPatternPropertyRestDeclaration(IObjectLiteralAssignmentPatternPropertyRestDeclaration objectLiteralAssignmentPatternPropertyRestDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitObjectLiteralBindingPropertyRestDeclaration(IObjectLiteralBindingPropertyRestDeclaration objectLiteralBindingPropertyRestDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitBinaryExpression(IBinaryExpression binaryExpressionParam, IHighlightingConsumer context);
    public virtual void VisitGeneratorComprehension(IGeneratorComprehension generatorComprehensionParam, IHighlightingConsumer context);
    public virtual void VisitMemberFunctionSignature(IMemberFunctionSignature memberFunctionSignatureParam, IHighlightingConsumer context);
    public virtual void VisitExpressionLambdaExpression(IExpressionLambdaExpression expressionLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitObjectPropertyRest(IObjectPropertyRest objectPropertyRestParam, IHighlightingConsumer context);
    public virtual void VisitBlockLambdaExpression(IBlockLambdaExpression blockLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitAwaitExpression(IAwaitExpression awaitExpressionParam, IHighlightingConsumer context);
    public virtual void VisitYieldExpression(IYieldExpression yieldExpressionParam, IHighlightingConsumer context);
    public virtual void VisitStructuredAssignmentExpression(IStructuredAssignmentExpression structuredAssignmentExpressionParam, IHighlightingConsumer context);
    public virtual void VisitClassDeclaration(IClassDeclaration classDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitPropertyNameComputed(IPropertyNameComputed propertyNameComputedParam, IHighlightingConsumer context);
    public virtual void VisitVariableStatement(IVariableStatement variableStatementParam, IHighlightingConsumer context);
    public virtual void VisitFunctionStatement(IFunctionStatement functionStatementParam, IHighlightingConsumer context);
    public virtual void VisitObjectLiteral(IObjectLiteral objectLiteralParam, IHighlightingConsumer context);
    public virtual void VisitLexicalDeclaration(ILexicalDeclaration lexicalDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitJavaScriptLiteralExpression(IJavaScriptLiteralExpression javaScriptLiteralExpressionParam, IHighlightingConsumer context);
    public virtual void VisitExportAllNamedSpecification(IExportAllNamedSpecification exportAllNamedSpecificationParam, IHighlightingConsumer context);
    public virtual void VisitExportDefaultAsNameSpecification(IExportDefaultAsNameSpecification exportDefaultAsNameSpecificationParam, IHighlightingConsumer context);
    public virtual void VisitJavaScriptParameterList(IJavaScriptParameterList javaScriptParameterListParam, IHighlightingConsumer context);
    private static void CheckCommasInArgOrParamList(IHighlightingConsumer context, TreeNodeEnumerable`1<ITokenNode> commas, ITokenNode& lastComma, Int32& commaCount);
    public virtual void VisitInvocationExpression(IInvocationExpression invocationExpression, IHighlightingConsumer consumer);
    public virtual void VisitPostfixExpression(IPostfixExpression postfixExpression, IHighlightingConsumer consumer);
    public virtual void VisitPrefixExpression(IPrefixExpression prefixExpression, IHighlightingConsumer consumer);
    public virtual void VisitSimpleAssignmentExpression(ISimpleAssignmentExpression assignmentExpression, IHighlightingConsumer consumer);
    public virtual void VisitImportDeclaration(IImportDeclaration importDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitExportDeclaration(IExportDeclaration exportDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitArrayLiteralBinding(IArrayLiteralBinding arrayLiteralBindingParam, IHighlightingConsumer context);
    public virtual void VisitObjectLiteralBinding(IObjectLiteralBinding objectLiteralBindingParam, IHighlightingConsumer context);
    public virtual void VisitForeachStatement(IForeachStatement foreachStatement, IHighlightingConsumer consumer);
    public virtual void VisitContinueStatement(IContinueStatement continueStatement, IHighlightingConsumer consumer);
    public virtual void VisitBreakStatement(IBreakStatement breakStatement, IHighlightingConsumer consumer);
    private void IdentifierIsExpected(IHighlightingConsumer consumer, ICompoundExpression compoundExpression);
    public virtual void VisitThrowStatement(IThrowStatement throwStatement, IHighlightingConsumer consumer);
    public virtual void VisitObjectPropertyAccessor(IObjectPropertyAccessor property, IHighlightingConsumer consumer);
    public virtual void VisitObjectPropertyFunction(IObjectPropertyFunction objectPropertyFunctionParam, IHighlightingConsumer context);
    public virtual void VisitFunctionExpressionSignature(IFunctionExpressionSignature functionExpressionSignatureParam, IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    [CompilerGeneratedAttribute]
private void <Execute>b__45_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[ConfigurableSeverityHighlightingAttribute("TernaryCanBeReplacedByItsCondition", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TernaryCanBeReplacedByItsConditionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsConditionalTernaryExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNegation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsConditionalTernaryExpression Expression { get; }
    public bool IsNegation { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TernaryCanBeReplacedByItsConditionWarning(ITsConditionalTernaryExpression expression, bool isNegation);
    [CompilerGeneratedAttribute]
public ITsConditionalTernaryExpression get_Expression();
    [CompilerGeneratedAttribute]
public bool get_IsNegation();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ThisInGlobalContext", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ThisInGlobalContextWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <JavaScriptExpression>k__BackingField;
    public IJavaScriptExpression JavaScriptExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ThisInGlobalContextWarning(IJavaScriptExpression javaScriptExpression);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_JavaScriptExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ThrowMustBeFollowedByExpression", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.ThrowMustBeFollowedByExpressionError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IThrowStatement <ThrowStatement>k__BackingField;
    public IThrowStatement ThrowStatement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public ThrowMustBeFollowedByExpressionError(IThrowStatement throwStatement);
    [CompilerGeneratedAttribute]
public IThrowStatement get_ThrowStatement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0994Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequiredLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string RequiredLevel { get; }
    public string CurrentLevel { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0994Error(ITreeNode modifierNode, string requiredLevel, string currentLevel);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_RequiredLevel();
    [CompilerGeneratedAttribute]
public string get_CurrentLevel();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0995Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <AmbientNameNode>k__BackingField;
    public ITreeNode AmbientNameNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0995Error(ITreeNode ambientNameNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_AmbientNameNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AmdDependencyPathProblem", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0996ConfigurableError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0996ConfigurableError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0996Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0996Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AmdDependencyPathProblem", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0997ConfigurableError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0997ConfigurableError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0997Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0997Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AmdDependencyPathProblem", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0998ConfigurableError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <AmbientNameNode>k__BackingField;
    public ITreeNode AmbientNameNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0998ConfigurableError(ITreeNode ambientNameNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_AmbientNameNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0998Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <AmbientNameNode>k__BackingField;
    public ITreeNode AmbientNameNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0998Error(ITreeNode ambientNameNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_AmbientNameNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS0999Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsDeclaredTypeUsage <ModifierNode>k__BackingField;
    public ITsDeclaredTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS0999Error(ITsDeclaredTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public ITsDeclaredTypeUsage get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1013Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeAnnotation <ModifierNode>k__BackingField;
    public ITsTypeAnnotation ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1013Error(ITsTypeAnnotation modifierNode);
    [CompilerGeneratedAttribute]
public ITsTypeAnnotation get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1015Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <ModifierNode>k__BackingField;
    public ITsParameterDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1015Error(ITsParameterDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1021Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsIndexSignatureDeclaration <IndexSignature>k__BackingField;
    public ITsIndexSignatureDeclaration IndexSignature { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1021Error(ITsIndexSignatureDeclaration indexSignature);
    [CompilerGeneratedAttribute]
public ITsIndexSignatureDeclaration get_IndexSignature();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1022Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <ModifierNode>k__BackingField;
    public ITsParameterDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1022Error(ITsParameterDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1023Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1023Error(ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1024Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsBaseTypeClause <ModifierNode>k__BackingField;
    public ITsBaseTypeClause ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1024Error(ITsBaseTypeClause modifierNode);
    [CompilerGeneratedAttribute]
public ITsBaseTypeClause get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1025Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsBaseTypeClause <ModifierNode>k__BackingField;
    public ITsBaseTypeClause ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1025Error(ITsBaseTypeClause modifierNode);
    [CompilerGeneratedAttribute]
public ITsBaseTypeClause get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1026Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1026Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1027Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsBaseTypeClause <ModifierNode>k__BackingField;
    public ITsBaseTypeClause ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1027Error(ITsBaseTypeClause modifierNode);
    [CompilerGeneratedAttribute]
public ITsBaseTypeClause get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1029Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <Modifier1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Modifier2>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenNode <ConflictingNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Modifier1 { get; }
    public string Modifier2 { get; }
    public ITokenNode ConflictingNode { get; }
    public ITokenNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1029Error(string modifier1, string modifier2, ITokenNode conflictingNode, ITokenNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_Modifier1();
    [CompilerGeneratedAttribute]
public string get_Modifier2();
    [CompilerGeneratedAttribute]
public ITokenNode get_ConflictingNode();
    [CompilerGeneratedAttribute]
public ITokenNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1034_1Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1034_1Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1034Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsInvocationExpression <ModifierNode>k__BackingField;
    public ITsInvocationExpression ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1034Error(ITsInvocationExpression modifierNode);
    [CompilerGeneratedAttribute]
public ITsInvocationExpression get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1035Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsModuleDeclarationName <ModifierNode>k__BackingField;
    public ITsModuleDeclarationName ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1035Error(ITsModuleDeclarationName modifierNode);
    [CompilerGeneratedAttribute]
public ITsModuleDeclarationName get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1036Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsStatement <Statement>k__BackingField;
    public ITsStatement Statement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1036Error(ITsStatement statement);
    [CompilerGeneratedAttribute]
public ITsStatement get_Statement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1037Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <LBraceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsFunctionStatementSignature <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsFunctionStatement <FunctionStatement>k__BackingField;
    public ITreeNode LBraceNode { get; }
    public ITsFunctionStatementSignature Signature { get; }
    public ITsFunctionStatement FunctionStatement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1037Error(ITreeNode lBraceNode, ITsFunctionStatementSignature signature, ITsFunctionStatement functionStatement);
    [CompilerGeneratedAttribute]
public ITreeNode get_LBraceNode();
    [CompilerGeneratedAttribute]
public ITsFunctionStatementSignature get_Signature();
    [CompilerGeneratedAttribute]
public ITsFunctionStatement get_FunctionStatement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1038Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1038Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1039Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <Eq>k__BackingField;
    public ITreeNode Declaration { get; }
    public ITreeNode Value { get; }
    public ITreeNode Eq { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1039Error(ITreeNode declaration, ITreeNode value, ITreeNode eq);
    [CompilerGeneratedAttribute]
public ITreeNode get_Declaration();
    [CompilerGeneratedAttribute]
public ITreeNode get_Value();
    [CompilerGeneratedAttribute]
public ITreeNode get_Eq();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1041Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <Semicolon>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsFunctionStatementSignature <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsFunctionStatement <FunctionStatement>k__BackingField;
    public ITreeNode Semicolon { get; }
    public ITsFunctionStatementSignature Signature { get; }
    public ITsFunctionStatement FunctionStatement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1041Error(ITreeNode semicolon, ITsFunctionStatementSignature signature, ITsFunctionStatement functionStatement);
    [CompilerGeneratedAttribute]
public ITreeNode get_Semicolon();
    [CompilerGeneratedAttribute]
public ITsFunctionStatementSignature get_Signature();
    [CompilerGeneratedAttribute]
public ITsFunctionStatement get_FunctionStatement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1043Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <ExpectedName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <OverloadNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ExpectedName { get; }
    public ITreeNode ModifierNode { get; }
    public ITreeNode OverloadNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1043Error(string expectedName, ITreeNode modifierNode, ITreeNode overloadNode);
    [CompilerGeneratedAttribute]
public string get_ExpectedName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_OverloadNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1046Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1046Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1051Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <ModifierNode>k__BackingField;
    public ITsParameterDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1051Error(ITsParameterDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1052Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <ModifierNode>k__BackingField;
    public ITsParameterDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1052Error(ITsParameterDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1053Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <ModifierNode>k__BackingField;
    public ITsParameterDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1053Error(ITsParameterDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1056Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1056Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1057890Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <EntityType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string EntityType { get; }
    public string ErrValue { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1057890Error(string entityType, string errValue, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_EntityType();
    [CompilerGeneratedAttribute]
public string get_ErrValue();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1061Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsEnumMemberDeclaration <MemberNode>k__BackingField;
    public ITsEnumMemberDeclaration MemberNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1061Error(ITsEnumMemberDeclaration memberNode);
    [CompilerGeneratedAttribute]
public ITsEnumMemberDeclaration get_MemberNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1063Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsExportAssignment <ModifierNode>k__BackingField;
    public ITsExportAssignment ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1063Error(ITsExportAssignment modifierNode);
    [CompilerGeneratedAttribute]
public ITsExportAssignment get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1064Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsExportAssignment <ModifierNode>k__BackingField;
    public ITsExportAssignment ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1064Error(ITsExportAssignment modifierNode);
    [CompilerGeneratedAttribute]
public ITsExportAssignment get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1065Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsExportAssignment <ModifierNode>k__BackingField;
    public ITsExportAssignment ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1065Error(ITsExportAssignment modifierNode);
    [CompilerGeneratedAttribute]
public ITsExportAssignment get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1066Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsExpression <ValueNode>k__BackingField;
    public ITsExpression ValueNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1066Error(ITsExpression valueNode);
    [CompilerGeneratedAttribute]
public ITsExpression get_ValueNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1085Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsLiteralExpression <LiteralExpression>k__BackingField;
    public ITsLiteralExpression LiteralExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1085Error(ITsLiteralExpression literalExpression);
    [CompilerGeneratedAttribute]
public ITsLiteralExpression get_LiteralExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1091Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1091Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1092Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1092Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1094Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1094Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1095Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1095Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1100_1Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1100_1Error(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1100_2Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <Reference>k__BackingField;
    public ITreeNode Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1100_2Error(ITreeNode reference);
    [CompilerGeneratedAttribute]
public ITreeNode get_Reference();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1100_3Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <Reference>k__BackingField;
    public ITreeNode Reference { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1100_3Error(ITreeNode reference);
    [CompilerGeneratedAttribute]
public ITreeNode get_Reference();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1100Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1100Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1102Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1102Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1108Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1108Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1113Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1113Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1117Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1117Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1121Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1121Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1142Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1142Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1155Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1155Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1156Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1156Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1157Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1157Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1159Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1159Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1163Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1163Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1164Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1164Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1165Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1165Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1166Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1166Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1168Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1168Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1169Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1169Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1182Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1182Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1183Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1183Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1186Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1186Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1187Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1187Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1189Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsVariableDeclaration <VariableDeclarationNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITsVariableDeclaration VariableDeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1189Error(ITreeNode modifierNode, ITsVariableDeclaration variableDeclarationNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITsVariableDeclaration get_VariableDeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1195Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1195Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1197Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsVariableDeclaration <VariableDeclarationNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITsVariableDeclaration VariableDeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1197Error(ITreeNode modifierNode, ITsVariableDeclaration variableDeclarationNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITsVariableDeclaration get_VariableDeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1200Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1200Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1201Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1201Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1202Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsImportDeclaration <ImportDeclaration>k__BackingField;
    public ITsImportDeclaration ImportDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1202Error(ITsImportDeclaration importDeclaration);
    [CompilerGeneratedAttribute]
public ITsImportDeclaration get_ImportDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1203Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsExportAssignment <ExportAssignment>k__BackingField;
    public ITsExportAssignment ExportAssignment { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1203Error(ITsExportAssignment exportAssignment);
    [CompilerGeneratedAttribute]
public ITsExportAssignment get_ExportAssignment();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1220Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1220Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1222Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1222Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1243Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITokenNode <TokenNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsClassMemberDeclaration <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private JsModifiers <ModifierToKeep>k__BackingField;
    [CompilerGeneratedAttribute]
private JsModifiers <ModifierToRemove>k__BackingField;
    [CompilerGeneratedAttribute]
private JsModifiers <ModifierToInsert>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITokenNode TokenNode { get; }
    public ITsClassMemberDeclaration ModifierNode { get; }
    public JsModifiers ModifierToKeep { get; }
    public JsModifiers ModifierToRemove { get; }
    public JsModifiers ModifierToInsert { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1243Error(ITokenNode tokenNode, ITsClassMemberDeclaration modifierNode, JsModifiers modifierToKeep, JsModifiers modifierToRemove, JsModifiers modifierToInsert);
    [CompilerGeneratedAttribute]
public ITokenNode get_TokenNode();
    [CompilerGeneratedAttribute]
public ITsClassMemberDeclaration get_ModifierNode();
    [CompilerGeneratedAttribute]
public JsModifiers get_ModifierToKeep();
    [CompilerGeneratedAttribute]
public JsModifiers get_ModifierToRemove();
    [CompilerGeneratedAttribute]
public JsModifiers get_ModifierToInsert();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1244Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsClassMemberDeclaration <MemberDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenNode <TokenNode>k__BackingField;
    public ITsClassMemberDeclaration MemberDeclaration { get; }
    public ITokenNode TokenNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1244Error(ITsClassMemberDeclaration memberDeclaration, ITokenNode tokenNode);
    [CompilerGeneratedAttribute]
public ITsClassMemberDeclaration get_MemberDeclaration();
    [CompilerGeneratedAttribute]
public ITokenNode get_TokenNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1256Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTupleTypeElement <TupleElement>k__BackingField;
    public ITsTupleTypeElement TupleElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1256Error(ITsTupleTypeElement tupleElement);
    [CompilerGeneratedAttribute]
public ITsTupleTypeElement get_TupleElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1257Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTupleTypeElement <TupleElement>k__BackingField;
    public ITsTupleTypeElement TupleElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1257Error(ITsTupleTypeElement tupleElement);
    [CompilerGeneratedAttribute]
public ITsTupleTypeElement get_TupleElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1313Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1313Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1316Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1316Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS1354Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS1354Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS17009Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsStatement <SuperNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanMove>k__BackingField;
    public ITsStatement SuperNode { get; }
    public bool CanMove { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS17009Error(ITsStatement superNode, bool canMove);
    [CompilerGeneratedAttribute]
public ITsStatement get_SuperNode();
    [CompilerGeneratedAttribute]
public bool get_CanMove();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS17009WarningError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsStatement <SuperNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanMove>k__BackingField;
    public ITsStatement SuperNode { get; }
    public bool CanMove { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS17009WarningError(ITsStatement superNode, bool canMove);
    [CompilerGeneratedAttribute]
public ITsStatement get_SuperNode();
    [CompilerGeneratedAttribute]
public bool get_CanMove();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2000_1Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <DeclarationName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <NameNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsClassDeclaration <DeclarationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsModuleDeclaration <ModuleDeclarationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string DeclarationName { get; }
    public ITreeNode NameNode { get; }
    public ITsClassDeclaration DeclarationNode { get; }
    public ITsModuleDeclaration ModuleDeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2000_1Error(string declarationName, ITreeNode nameNode, ITsClassDeclaration declarationNode, ITsModuleDeclaration moduleDeclarationNode);
    [CompilerGeneratedAttribute]
public string get_DeclarationName();
    [CompilerGeneratedAttribute]
public ITreeNode get_NameNode();
    [CompilerGeneratedAttribute]
public ITsClassDeclaration get_DeclarationNode();
    [CompilerGeneratedAttribute]
public ITsModuleDeclaration get_ModuleDeclarationNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2000_2Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <DeclarationName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <NameNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsFunctionStatement <DeclarationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsModuleDeclaration <ModuleDeclarationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string DeclarationName { get; }
    public ITreeNode NameNode { get; }
    public ITsFunctionStatement DeclarationNode { get; }
    public ITsModuleDeclaration ModuleDeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2000_2Error(string declarationName, ITreeNode nameNode, ITsFunctionStatement declarationNode, ITsModuleDeclaration moduleDeclarationNode);
    [CompilerGeneratedAttribute]
public string get_DeclarationName();
    [CompilerGeneratedAttribute]
public ITreeNode get_NameNode();
    [CompilerGeneratedAttribute]
public ITsFunctionStatement get_DeclarationNode();
    [CompilerGeneratedAttribute]
public ITsModuleDeclaration get_ModuleDeclarationNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DuplicateIdentifierError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2000Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ModifierName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ModifierName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2000Error(string modifierName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ModifierName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2003Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2003Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2004Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2004Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2006Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <EntityType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string EntityType { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2006Error(string entityType, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_EntityType();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2007Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <EntityType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string EntityType { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2007Error(string entityType, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_EntityType();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2008Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type1Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type2Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string Type1Name { get; }
    public string Type2Name { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2008Error(ITreeNode modifierNode, string type1Name, string type2Name);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_Type1Name();
    [CompilerGeneratedAttribute]
public string get_Type2Name();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2009Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <OpName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type1Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type2Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string OpName { get; }
    public string Type1Name { get; }
    public string Type2Name { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2009Error(string opName, string type1Name, string type2Name, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_OpName();
    [CompilerGeneratedAttribute]
public string get_Type1Name();
    [CompilerGeneratedAttribute]
public string get_Type2Name();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2010Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <OpName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type1Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type2Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string OpName { get; }
    public string Type1Name { get; }
    public string Type2Name { get; }
    public string ErrorMessages { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2010Error(string opName, string type1Name, string type2Name, string errorMessages, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_OpName();
    [CompilerGeneratedAttribute]
public string get_Type1Name();
    [CompilerGeneratedAttribute]
public string get_Type2Name();
    [CompilerGeneratedAttribute]
public string get_ErrorMessages();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2011BindingError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <Type1Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type2Name>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <SourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <TargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsReferenceExpression <LeftHandReference>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ProblemNode>k__BackingField;
    [CompilerGeneratedAttribute]
private JsInitialResolveContext <ResolveContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Type1Name { get; }
    public string Type2Name { get; }
    public JsTypeResolveResult SourceType { get; }
    public JsTypeResolveResult TargetType { get; }
    public ITsReferenceExpression LeftHandReference { get; }
    public ITreeNode ProblemNode { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2011BindingError(string type1Name, string type2Name, JsTypeResolveResult sourceType, JsTypeResolveResult targetType, ITsReferenceExpression leftHandReference, ITreeNode problemNode, JsInitialResolveContext resolveContext);
    [CompilerGeneratedAttribute]
public string get_Type1Name();
    [CompilerGeneratedAttribute]
public string get_Type2Name();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_SourceType();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_TargetType();
    [CompilerGeneratedAttribute]
public ITsReferenceExpression get_LeftHandReference();
    [CompilerGeneratedAttribute]
public ITreeNode get_ProblemNode();
    [CompilerGeneratedAttribute]
public JsInitialResolveContext get_ResolveContext();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2011Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <Type1Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type2Name>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <SourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <TargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsReferenceExpression <LeftHandReference>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <ProblemNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <OtherHighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private JsInitialResolveContext <ResolveContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Type1Name { get; }
    public string Type2Name { get; }
    public JsTypeResolveResult SourceType { get; }
    public JsTypeResolveResult TargetType { get; }
    public ITsReferenceExpression LeftHandReference { get; }
    public IJavaScriptExpression ProblemNode { get; }
    public ITreeNode OtherHighlightedNode { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2011Error(string type1Name, string type2Name, JsTypeResolveResult sourceType, JsTypeResolveResult targetType, ITsReferenceExpression leftHandReference, IJavaScriptExpression problemNode, ITreeNode otherHighlightedNode, JsInitialResolveContext resolveContext);
    [CompilerGeneratedAttribute]
public string get_Type1Name();
    [CompilerGeneratedAttribute]
public string get_Type2Name();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_SourceType();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_TargetType();
    [CompilerGeneratedAttribute]
public ITsReferenceExpression get_LeftHandReference();
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_ProblemNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_OtherHighlightedNode();
    [CompilerGeneratedAttribute]
public JsInitialResolveContext get_ResolveContext();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2012BindingError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <Type1Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type2Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Messages>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <SourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <TargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsReferenceExpression <LeftHandReference>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ProblemNode>k__BackingField;
    [CompilerGeneratedAttribute]
private JsInitialResolveContext <ResolveContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Type1Name { get; }
    public string Type2Name { get; }
    public string Messages { get; }
    public JsTypeResolveResult SourceType { get; }
    public JsTypeResolveResult TargetType { get; }
    public ITsReferenceExpression LeftHandReference { get; }
    public ITreeNode ProblemNode { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2012BindingError(string type1Name, string type2Name, string messages, JsTypeResolveResult sourceType, JsTypeResolveResult targetType, ITsReferenceExpression leftHandReference, ITreeNode problemNode, JsInitialResolveContext resolveContext);
    [CompilerGeneratedAttribute]
public string get_Type1Name();
    [CompilerGeneratedAttribute]
public string get_Type2Name();
    [CompilerGeneratedAttribute]
public string get_Messages();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_SourceType();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_TargetType();
    [CompilerGeneratedAttribute]
public ITsReferenceExpression get_LeftHandReference();
    [CompilerGeneratedAttribute]
public ITreeNode get_ProblemNode();
    [CompilerGeneratedAttribute]
public JsInitialResolveContext get_ResolveContext();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2012Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <Type1Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type2Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Messages>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <SourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private JsTypeResolveResult <TargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsReferenceExpression <LeftHandReference>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <ProblemNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <OtherHighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private JsInitialResolveContext <ResolveContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string Type1Name { get; }
    public string Type2Name { get; }
    public string Messages { get; }
    public JsTypeResolveResult SourceType { get; }
    public JsTypeResolveResult TargetType { get; }
    public ITsReferenceExpression LeftHandReference { get; }
    public IJavaScriptExpression ProblemNode { get; }
    public ITreeNode OtherHighlightedNode { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2012Error(string type1Name, string type2Name, string messages, JsTypeResolveResult sourceType, JsTypeResolveResult targetType, ITsReferenceExpression leftHandReference, IJavaScriptExpression problemNode, ITreeNode otherHighlightedNode, JsInitialResolveContext resolveContext);
    [CompilerGeneratedAttribute]
public string get_Type1Name();
    [CompilerGeneratedAttribute]
public string get_Type2Name();
    [CompilerGeneratedAttribute]
public string get_Messages();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_SourceType();
    [CompilerGeneratedAttribute]
public JsTypeResolveResult get_TargetType();
    [CompilerGeneratedAttribute]
public ITsReferenceExpression get_LeftHandReference();
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_ProblemNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_OtherHighlightedNode();
    [CompilerGeneratedAttribute]
public JsInitialResolveContext get_ResolveContext();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2015Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <GetterName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <First>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <Second>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string GetterName { get; }
    public ITreeNode HighlightNode { get; }
    public ITreeNode First { get; }
    public ITreeNode Second { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2015Error(string getterName, ITreeNode highlightNode, ITreeNode first, ITreeNode second);
    [CompilerGeneratedAttribute]
public string get_GetterName();
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_First();
    [CompilerGeneratedAttribute]
public ITreeNode get_Second();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2016Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <SetterName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <First>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <Second>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string SetterName { get; }
    public ITreeNode HighlightNode { get; }
    public ITreeNode First { get; }
    public ITreeNode Second { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2016Error(string setterName, ITreeNode highlightNode, ITreeNode first, ITreeNode second);
    [CompilerGeneratedAttribute]
public string get_SetterName();
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_First();
    [CompilerGeneratedAttribute]
public ITreeNode get_Second();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2018Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string FirstTypeName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2018Error(string firstTypeName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2019Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string FirstTypeName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2019Error(string firstTypeName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2020Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string FirstTypeName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2020Error(string firstTypeName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2021Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string FirstTypeName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2021Error(string firstTypeName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2022Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string FirstTypeName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2022Error(string firstTypeName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2023Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string FirstTypeName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2023Error(string firstTypeName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2024Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string PropertyName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2024Error(string propertyName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2025Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string PropertyName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2025Error(string propertyName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2026Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string PropertyName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2026Error(string propertyName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2027Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string VariableName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2027Error(string variableName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2028Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string PropertyName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2028Error(string propertyName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2029Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string PropertyName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2029Error(string propertyName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2030Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string PropertyName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2030Error(string propertyName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2031Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string VariableName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2031Error(string variableName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2032Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2032Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2033Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2033Error(string paramName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2034Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2034Error(string paramName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2035Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2035Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2036Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2036Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2037Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2037Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2038Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2038Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2039Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2039Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2040Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2040Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2041Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2041Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2042Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2042Error(string paramName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2043Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2043Error(string paramName, string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2044Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2044Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2045Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2045Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2046Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2046Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2047Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2047Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2048Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2048Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2049Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ParamName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2049Error(string paramName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2050Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2050Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2051Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2051Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2052Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2052Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2053Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2053Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2054Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2054Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2055Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2055Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2056Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2056Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2057Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2057Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2058Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2058Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2059Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2059Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2060Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2060Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2061Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2061Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2062Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2062Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2063Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2063Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2064Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2064Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2065Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2065Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2066Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2066Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("DeclarationVisibilityError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2067Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ResolvedTypeName { get; }
    public ITsTypeUsage ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2067Error(string resolvedTypeName, ITsTypeUsage modifierNode);
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2068Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ReplaceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsExpression <CountNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ReplaceNode { get; }
    public string TypeName { get; }
    public ITsExpression CountNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2068Error(ITreeNode replaceNode, string typeName, ITsExpression countNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ReplaceNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public ITsExpression get_CountNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2070Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2070Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2072Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2072Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2073Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2073Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2074Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2074Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2075Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2075Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2077Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2077Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2078Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2078Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2080Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <ConstraintNode>k__BackingField;
    public ITsTypeUsage ConstraintNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2080Error(ITsTypeUsage constraintNode);
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_ConstraintNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2081Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsInvocationLikeExpression <ExpressionNode>k__BackingField;
    public ITsInvocationLikeExpression ExpressionNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2081Error(ITsInvocationLikeExpression expressionNode);
    [CompilerGeneratedAttribute]
public ITsInvocationLikeExpression get_ExpressionNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2082Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsInvocationLikeExpression <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsResolveErrorDescription <ResolveError>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <OptionalHighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsInvocationLikeExpression ExpressionNode { get; }
    public string ErrorMessage { get; }
    public IJsResolveErrorDescription ResolveError { get; }
    public ITreeNode OptionalHighlightedNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2082Error(ITsInvocationLikeExpression expressionNode, string errorMessage, IJsResolveErrorDescription resolveError, ITreeNode optionalHighlightedNode);
    [CompilerGeneratedAttribute]
public ITsInvocationLikeExpression get_ExpressionNode();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public IJsResolveErrorDescription get_ResolveError();
    [CompilerGeneratedAttribute]
public ITreeNode get_OptionalHighlightedNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2083Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2083Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2084Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsInvocationLikeExpression <ExpressionNode>k__BackingField;
    public ITsInvocationLikeExpression ExpressionNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2084Error(ITsInvocationLikeExpression expressionNode);
    [CompilerGeneratedAttribute]
public ITsInvocationLikeExpression get_ExpressionNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2085Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsInvocationLikeExpression <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsResolveErrorDescription <ResolveError>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <OptionalHighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsInvocationLikeExpression ExpressionNode { get; }
    public string ErrorMessage { get; }
    public IJsResolveErrorDescription ResolveError { get; }
    public ITreeNode OptionalHighlightedNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2085Error(ITsInvocationLikeExpression expressionNode, string errorMessage, IJsResolveErrorDescription resolveError, ITreeNode optionalHighlightedNode);
    [CompilerGeneratedAttribute]
public ITsInvocationLikeExpression get_ExpressionNode();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public IJsResolveErrorDescription get_ResolveError();
    [CompilerGeneratedAttribute]
public ITreeNode get_OptionalHighlightedNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2086Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConstraintTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsResolveErrorDescription <ResolveError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode HighlightedNode { get; }
    public string TypeName { get; }
    public string ConstraintTypeName { get; }
    public string TypeParamName { get; }
    public IJsResolveErrorDescription ResolveError { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2086Error(ITreeNode highlightedNode, string typeName, string constraintTypeName, string typeParamName, IJsResolveErrorDescription resolveError);
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightedNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_ConstraintTypeName();
    [CompilerGeneratedAttribute]
public string get_TypeParamName();
    [CompilerGeneratedAttribute]
public IJsResolveErrorDescription get_ResolveError();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2087Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsInvocationLikeExpression <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsResolveErrorDescription <ResolveError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsInvocationLikeExpression ExpressionNode { get; }
    public string ErrorMessage { get; }
    public IJsResolveErrorDescription ResolveError { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2087Error(ITsInvocationLikeExpression expressionNode, string errorMessage, IJsResolveErrorDescription resolveError);
    [CompilerGeneratedAttribute]
public ITsInvocationLikeExpression get_ExpressionNode();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public IJsResolveErrorDescription get_ResolveError();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2088Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2088Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2089Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2089Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2090Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DesiredParamsCountString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActualParamsCountString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string TypeName { get; }
    public string DesiredParamsCountString { get; }
    public string ActualParamsCountString { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2090Error(ITreeNode modifierNode, string typeName, string desiredParamsCountString, string actualParamsCountString);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_DesiredParamsCountString();
    [CompilerGeneratedAttribute]
public string get_ActualParamsCountString();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2093Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2093Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2094Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2094Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2095Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2095Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2096_1Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsAccessorSignature <SignatureNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsObjectPropertyAccessor <DeclarationNode>k__BackingField;
    public ITsAccessorSignature SignatureNode { get; }
    public ITsObjectPropertyAccessor DeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2096_1Error(ITsAccessorSignature signatureNode, ITsObjectPropertyAccessor declarationNode);
    [CompilerGeneratedAttribute]
public ITsAccessorSignature get_SignatureNode();
    [CompilerGeneratedAttribute]
public ITsObjectPropertyAccessor get_DeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2096Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsMemberAccessorSignature <SignatureNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsMemberAccessorDeclaration <DeclarationNode>k__BackingField;
    public ITsMemberAccessorSignature SignatureNode { get; }
    public ITsMemberAccessorDeclaration DeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2096Error(ITsMemberAccessorSignature signatureNode, ITsMemberAccessorDeclaration declarationNode);
    [CompilerGeneratedAttribute]
public ITsMemberAccessorSignature get_SignatureNode();
    [CompilerGeneratedAttribute]
public ITsMemberAccessorDeclaration get_DeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2097Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2097Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2099Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <MemberNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITreeNode MemberNode { get; }
    public string ParameterName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2099Error(ITreeNode modifierNode, ITreeNode memberNode, string parameterName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_MemberNode();
    [CompilerGeneratedAttribute]
public string get_ParameterName();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2100Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ClassName { get; }
    public string RefName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2100Error(ITreeNode modifierNode, string className, string refName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public string get_RefName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2101_2Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InterfaceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string InterfaceName { get; }
    public string RefName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2101_2Error(ITreeNode modifierNode, string interfaceName, string refName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_InterfaceName();
    [CompilerGeneratedAttribute]
public string get_RefName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2101Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InterfaceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string InterfaceName { get; }
    public string RefName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2101Error(ITreeNode modifierNode, string interfaceName, string refName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_InterfaceName();
    [CompilerGeneratedAttribute]
public string get_RefName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2102Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2102Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2103Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2103Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2104Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsStatement <SuperNode>k__BackingField;
    public ITsStatement SuperNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2104Error(ITsStatement superNode);
    [CompilerGeneratedAttribute]
public ITsStatement get_SuperNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2105Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsConstructorDeclaration <CtorDeclarationNode>k__BackingField;
    public ITsConstructorDeclaration CtorDeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2105Error(ITsConstructorDeclaration ctorDeclarationNode);
    [CompilerGeneratedAttribute]
public ITsConstructorDeclaration get_CtorDeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2106Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2106Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2107Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeMember <TypeMemberElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ClassName { get; }
    public string MemberName { get; }
    public ITreeNode ModifierNode { get; }
    public ITsTypeMember TypeMemberElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2107Error(string className, string memberName, ITreeNode modifierNode, ITsTypeMember typeMemberElement);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public string get_MemberName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITsTypeMember get_TypeMemberElement();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2108Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2108Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2111Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2111Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2112Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2112Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2113Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2113Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2114Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2114Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2115Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <TypeAnnotationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsVariableDeclaration <VariableDeclarationNode>k__BackingField;
    public ITreeNode TypeAnnotationNode { get; }
    public ITsVariableDeclaration VariableDeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2115Error(ITreeNode typeAnnotationNode, ITsVariableDeclaration variableDeclarationNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_TypeAnnotationNode();
    [CompilerGeneratedAttribute]
public ITsVariableDeclaration get_VariableDeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2116Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2116Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2117Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2117Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2118Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2118Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2119Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2119Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2120Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2120Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2121Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2121Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2122Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private IReturnStatement <ReturnStatementNode>k__BackingField;
    public IReturnStatement ReturnStatementNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2122Error(IReturnStatement returnStatementNode);
    [CompilerGeneratedAttribute]
public IReturnStatement get_ReturnStatementNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2123Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2123Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2124Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2124Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2125Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeAnnotation <TypeAnnotationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsTypeAnnotation TypeAnnotationNode { get; }
    public string FunctionName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2125Error(ITsTypeAnnotation typeAnnotationNode, string functionName);
    [CompilerGeneratedAttribute]
public ITsTypeAnnotation get_TypeAnnotationNode();
    [CompilerGeneratedAttribute]
public string get_FunctionName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2126Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2126Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2127Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsPropertyName <PropertyNameNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsMemberAccessorDeclaration <DeclarationNode>k__BackingField;
    public ITsPropertyName PropertyNameNode { get; }
    public ITsMemberAccessorDeclaration DeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2127Error(ITsPropertyName propertyNameNode, ITsMemberAccessorDeclaration declarationNode);
    [CompilerGeneratedAttribute]
public ITsPropertyName get_PropertyNameNode();
    [CompilerGeneratedAttribute]
public ITsMemberAccessorDeclaration get_DeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2130Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2130Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2131Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeAnnotation <TypeAnnotationNode>k__BackingField;
    public ITsTypeAnnotation TypeAnnotationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2131Error(ITsTypeAnnotation typeAnnotationNode);
    [CompilerGeneratedAttribute]
public ITsTypeAnnotation get_TypeAnnotationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2132Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2132Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2133Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsCallSignatureDeclaration <DeclarationNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITsCallSignatureDeclaration DeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2133Error(ITreeNode modifierNode, ITsCallSignatureDeclaration declarationNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITsCallSignatureDeclaration get_DeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2134Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <HighlightedExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsSingleNameBinding <DeclarationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode HighlightedExpression { get; }
    public ITsSingleNameBinding DeclarationNode { get; }
    public string TypeNames { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2134Error(ITreeNode highlightedExpression, ITsSingleNameBinding declarationNode, string typeNames);
    [CompilerGeneratedAttribute]
public ITreeNode get_HighlightedExpression();
    [CompilerGeneratedAttribute]
public ITsSingleNameBinding get_DeclarationNode();
    [CompilerGeneratedAttribute]
public string get_TypeNames();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2135Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2135Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2136Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsImportDeclaration <ImportDeclarationNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITsImportDeclaration ImportDeclarationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2136Error(ITreeNode modifierNode, ITsImportDeclaration importDeclarationNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITsImportDeclaration get_ImportDeclarationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2137Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InterfaceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeLikeDeclaration <TypeDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMissingMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IComparisonResult> <ErrorData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ClassName { get; }
    public string InterfaceName { get; }
    public string ErrorMessage { get; }
    public ITsTypeLikeDeclaration TypeDeclaration { get; }
    public bool HasMissingMembers { get; }
    public IList`1<IComparisonResult> ErrorData { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2137Error(ITreeNode modifierNode, string className, string interfaceName, string errorMessage, ITsTypeLikeDeclaration typeDeclaration, bool hasMissingMembers, IList`1<IComparisonResult> errorData);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public string get_InterfaceName();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public ITsTypeLikeDeclaration get_TypeDeclaration();
    [CompilerGeneratedAttribute]
public bool get_HasMissingMembers();
    [CompilerGeneratedAttribute]
public IList`1<IComparisonResult> get_ErrorData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2138Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InterfaceClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeLikeDeclaration <TypeDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMissingMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IComparisonResult> <ErrorData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ClassName { get; }
    public string InterfaceClassName { get; }
    public string ErrorMessage { get; }
    public ITsTypeLikeDeclaration TypeDeclaration { get; }
    public bool HasMissingMembers { get; }
    public IList`1<IComparisonResult> ErrorData { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2138Error(ITreeNode modifierNode, string className, string interfaceClassName, string errorMessage, ITsTypeLikeDeclaration typeDeclaration, bool hasMissingMembers, IList`1<IComparisonResult> errorData);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public string get_InterfaceClassName();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public ITsTypeLikeDeclaration get_TypeDeclaration();
    [CompilerGeneratedAttribute]
public bool get_HasMissingMembers();
    [CompilerGeneratedAttribute]
public IList`1<IComparisonResult> get_ErrorData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2139Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2139Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2140_0Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <NameNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    public ITreeNode NameNode { get; }
    public IReferenceExpression ReferenceExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2140_0Error(ITreeNode nameNode, IReferenceExpression referenceExpression);
    [CompilerGeneratedAttribute]
public ITreeNode get_NameNode();
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2140Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2140Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2141Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName2>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMissingMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeLikeDeclaration <TypeDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IComparisonResult> <ErrorData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ClassName1 { get; }
    public string ClassName2 { get; }
    public string ErrorMessage { get; }
    public bool HasMissingMembers { get; }
    public ITsTypeLikeDeclaration TypeDeclaration { get; }
    public IList`1<IComparisonResult> ErrorData { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2141Error(ITreeNode modifierNode, string className1, string className2, string errorMessage, bool hasMissingMembers, ITsTypeLikeDeclaration typeDeclaration, IList`1<IComparisonResult> errorData);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ClassName1();
    [CompilerGeneratedAttribute]
public string get_ClassName2();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public bool get_HasMissingMembers();
    [CompilerGeneratedAttribute]
public ITsTypeLikeDeclaration get_TypeDeclaration();
    [CompilerGeneratedAttribute]
public IList`1<IComparisonResult> get_ErrorData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2142Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InterfaceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IComparisonResult> <ErrorData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ClassName { get; }
    public string InterfaceName { get; }
    public string ErrorMessage { get; }
    public IList`1<IComparisonResult> ErrorData { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2142Error(ITreeNode modifierNode, string className, string interfaceName, string errorMessage, IList`1<IComparisonResult> errorData);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public string get_InterfaceName();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public IList`1<IComparisonResult> get_ErrorData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2143Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InterfaceName1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InterfaceName2>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IComparisonResult> <ErrorData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string InterfaceName1 { get; }
    public string InterfaceName2 { get; }
    public string ErrorMessage { get; }
    public IList`1<IComparisonResult> ErrorData { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2143Error(ITreeNode modifierNode, string interfaceName1, string interfaceName2, string errorMessage, IList`1<IComparisonResult> errorData);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_InterfaceName1();
    [CompilerGeneratedAttribute]
public string get_InterfaceName2();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public IList`1<IComparisonResult> get_ErrorData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2144Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <ModifierName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string ModifierName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2144Error(string modifierName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_ModifierName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2145Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2145Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2146Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2146Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2147Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2147Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2148Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2148Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2149Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ErrorMessages { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2149Error(ITreeNode modifierNode, string errorMessages);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ErrorMessages();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2151Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsFunctionStatementSignature <OverloadNode>k__BackingField;
    public ITsFunctionStatementSignature OverloadNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2151Error(ITsFunctionStatementSignature overloadNode);
    [CompilerGeneratedAttribute]
public ITsFunctionStatementSignature get_OverloadNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2153Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2153Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2154Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2154Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2155Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2155Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2156Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <NameNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    public ITreeNode NameNode { get; }
    public IReferenceExpression ReferenceExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2156Error(ITreeNode nameNode, IReferenceExpression referenceExpression);
    [CompilerGeneratedAttribute]
public ITreeNode get_NameNode();
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2158Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeArgumentList <ArgumentList>k__BackingField;
    public ITsTypeArgumentList ArgumentList { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2158Error(ITsTypeArgumentList argumentList);
    [CompilerGeneratedAttribute]
public ITsTypeArgumentList get_ArgumentList();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2159Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeArgumentList <ArgumentList>k__BackingField;
    public ITsTypeArgumentList ArgumentList { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2159Error(ITsTypeArgumentList argumentList);
    [CompilerGeneratedAttribute]
public ITsTypeArgumentList get_ArgumentList();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2161Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <EntityType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsExpression <InvokedExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string EntityType { get; }
    public ITsExpression InvokedExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2161Error(string entityType, ITsExpression invokedExpression);
    [CompilerGeneratedAttribute]
public string get_EntityType();
    [CompilerGeneratedAttribute]
public ITsExpression get_InvokedExpression();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2162Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2162Error(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2164Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2164Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2165Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2165Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2166Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasProtected>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public bool HasProtected { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2166Error(ITreeNode modifierNode, bool hasProtected);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public bool get_HasProtected();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2167Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NumericIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string NumericIndexerType { get; }
    public string StringIndexerType { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2167Error(ITreeNode modifierNode, string numericIndexerType, string stringIndexerType);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_NumericIndexerType();
    [CompilerGeneratedAttribute]
public string get_StringIndexerType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2168Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NumericIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string NumericIndexerType { get; }
    public string StringIndexerType { get; }
    public string ErrorMessages { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2168Error(ITreeNode modifierNode, string numericIndexerType, string stringIndexerType, string errorMessages);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_NumericIndexerType();
    [CompilerGeneratedAttribute]
public string get_StringIndexerType();
    [CompilerGeneratedAttribute]
public string get_ErrorMessages();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2169Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NumericIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string PropertyType { get; }
    public string NumericIndexerType { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2169Error(ITreeNode modifierNode, string propertyType, string numericIndexerType);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_PropertyType();
    [CompilerGeneratedAttribute]
public string get_NumericIndexerType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2170Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NumericIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string PropertyType { get; }
    public string NumericIndexerType { get; }
    public string ErrorMessages { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2170Error(ITreeNode modifierNode, string propertyType, string numericIndexerType, string errorMessages);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_PropertyType();
    [CompilerGeneratedAttribute]
public string get_NumericIndexerType();
    [CompilerGeneratedAttribute]
public string get_ErrorMessages();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2171Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string PropertyType { get; }
    public string StringIndexerType { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2171Error(ITreeNode modifierNode, string propertyType, string stringIndexerType);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_PropertyType();
    [CompilerGeneratedAttribute]
public string get_StringIndexerType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2172Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringIndexerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string PropertyType { get; }
    public string StringIndexerType { get; }
    public string ErrorMessages { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2172Error(ITreeNode modifierNode, string propertyType, string stringIndexerType, string errorMessages);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_PropertyType();
    [CompilerGeneratedAttribute]
public string get_StringIndexerType();
    [CompilerGeneratedAttribute]
public string get_ErrorMessages();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2173Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2173Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2175Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2175Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2176Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeAnnotation <TypeAnnotationNode>k__BackingField;
    public ITsTypeAnnotation TypeAnnotationNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2176Error(ITsTypeAnnotation typeAnnotationNode);
    [CompilerGeneratedAttribute]
public ITsTypeAnnotation get_TypeAnnotationNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2177Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2177Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2178_1Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <SymbolName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ReferenceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsModuleMember <ModuleMember>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string SymbolName { get; }
    public string ModuleName { get; }
    public ITreeNode ReferenceNode { get; }
    public ITsModuleMember ModuleMember { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2178_1Error(string symbolName, string moduleName, ITreeNode referenceNode, ITsModuleMember moduleMember);
    [CompilerGeneratedAttribute]
public string get_SymbolName();
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ReferenceNode();
    [CompilerGeneratedAttribute]
public ITsModuleMember get_ModuleMember();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2178Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <SymbolName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ReferenceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <IdentifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string SymbolName { get; }
    public string ModuleName { get; }
    public ITreeNode ReferenceNode { get; }
    public ITreeNode IdentifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2178Error(string symbolName, string moduleName, ITreeNode referenceNode, ITreeNode identifierNode);
    [CompilerGeneratedAttribute]
public string get_SymbolName();
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ReferenceNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_IdentifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2179Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2179Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2180Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2180Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2181Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <DeclName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string DeclName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2181Error(string declName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_DeclName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2182Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <DeclName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolvedTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string DeclName { get; }
    public string ResolvedTypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2182Error(string declName, string resolvedTypeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_DeclName();
    [CompilerGeneratedAttribute]
public string get_ResolvedTypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2186Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string TypeName { get; }
    public string TargetName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2186Error(ITreeNode modifierNode, string typeName, string targetName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_TargetName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2187Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleReferenceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferencedModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ModuleReferenceName { get; }
    public string ReferencedModuleName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2187Error(ITreeNode modifierNode, string moduleReferenceName, string referencedModuleName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ModuleReferenceName();
    [CompilerGeneratedAttribute]
public string get_ReferencedModuleName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2188Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ModuleName { get; }
    public string FileName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2188Error(ITreeNode modifierNode, string moduleName, string fileName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2190Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WrongReferenceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ParameterName { get; }
    public string WrongReferenceName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2190Error(ITreeNode modifierNode, string parameterName, string wrongReferenceName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ParameterName();
    [CompilerGeneratedAttribute]
public string get_WrongReferenceName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2191Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2191Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2192Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeclarationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string DeclarationName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2192Error(ITreeNode modifierNode, string declarationName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_DeclarationName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2194Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2194Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2195Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsModuleDeclarationName <ModuleDeclarationName>k__BackingField;
    [CompilerGeneratedAttribute]
private JsInitialResolveContext <ResolveContext>k__BackingField;
    public ITsModuleDeclarationName ModuleDeclarationName { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2195Error(ITsModuleDeclarationName moduleDeclarationName, JsInitialResolveContext resolveContext);
    [CompilerGeneratedAttribute]
public ITsModuleDeclarationName get_ModuleDeclarationName();
    [CompilerGeneratedAttribute]
public JsInitialResolveContext get_ResolveContext();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2196Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2196Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("AmdDependencyPathProblem", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2197ConfigurableError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2197ConfigurableError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2197Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2197Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2198Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2198Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2199Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2199Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2200Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2200Error(ITreeNode modifierNode, IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2201Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2201Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2202Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2202Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2203Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2203Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2204Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2204Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2205Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2205Error(ITreeNode modifierNode, IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2206Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2206Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2207Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2207Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2220Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <TypeParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string TypeParameterName { get; }
    public string TypeName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2220Error(string typeParameterName, string typeName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_TypeParameterName();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2222Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <TypeParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string TypeParameterName { get; }
    public string ModuleName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2222Error(string typeParameterName, string moduleName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_TypeParameterName();
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2224Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2224Error(ITreeNode modifierNode, IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2225Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2225Error(ITreeNode modifierNode, IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2226Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommonTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string CommonTypeName { get; }
    public string FirstTypeName { get; }
    public string SecondTypeName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2226Error(ITreeNode modifierNode, string commonTypeName, string firstTypeName, string secondTypeName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_CommonTypeName();
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_SecondTypeName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2227Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommonTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FirstTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThirdTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string CommonTypeName { get; }
    public string FirstTypeName { get; }
    public string SecondTypeName { get; }
    public string ThirdTypeName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2227Error(ITreeNode modifierNode, string commonTypeName, string firstTypeName, string secondTypeName, string thirdTypeName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_CommonTypeName();
    [CompilerGeneratedAttribute]
public string get_FirstTypeName();
    [CompilerGeneratedAttribute]
public string get_SecondTypeName();
    [CompilerGeneratedAttribute]
public string get_ThirdTypeName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2228Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentifierName>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string IdentifierName { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2228Error(ITreeNode modifierNode, string identifierName, IDeclaredElement declaredElement);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_IdentifierName();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2229Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2229Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2230Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberVariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentifierName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string MemberVariableName { get; }
    public string IdentifierName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2230Error(ITreeNode modifierNode, string memberVariableName, string identifierName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_MemberVariableName();
    [CompilerGeneratedAttribute]
public string get_IdentifierName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2231Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ParameterName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2231Error(ITreeNode modifierNode, string parameterName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ParameterName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2232Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2232Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2233Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2233Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2234Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string Details { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2234Error(ITreeNode modifierNode, string details);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2235Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2235Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2303Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AliasName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string AliasName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2303Error(ITreeNode modifierNode, string aliasName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_AliasName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2315Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeArgumentList <ArgumentList>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsTypeArgumentList ArgumentList { get; }
    public string TypeName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2315Error(ITsTypeArgumentList argumentList, string typeName);
    [CompilerGeneratedAttribute]
public ITsTypeArgumentList get_ArgumentList();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2395Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private string <DeclaredName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public string DeclaredName { get; }
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2395Error(string declaredName, ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public string get_DeclaredName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2448Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableDeclaration <VariableDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public IVariableDeclaration VariableDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2448Error(IReferenceExpression referenceExpression, IVariableDeclaration variableDeclaration);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    [CompilerGeneratedAttribute]
public IVariableDeclaration get_VariableDeclaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2449_1Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2449_1Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2449Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2449Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2450_1Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2450_1Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2450Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2450Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2451Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsSingleNameBinding <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsSingleNameBinding ModifierNode { get; }
    public string VarName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2451Error(ITsSingleNameBinding modifierNode, string varName);
    [CompilerGeneratedAttribute]
public ITsSingleNameBinding get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2452Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2452Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2453Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsInvocationLikeExpression <Invocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsResolveErrorDescription <ResolveError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsInvocationLikeExpression Invocation { get; }
    public string TypeParameterName { get; }
    public IJsResolveErrorDescription ResolveError { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2453Error(ITsInvocationLikeExpression invocation, string typeParameterName, IJsResolveErrorDescription resolveError);
    [CompilerGeneratedAttribute]
public ITsInvocationLikeExpression get_Invocation();
    [CompilerGeneratedAttribute]
public string get_TypeParameterName();
    [CompilerGeneratedAttribute]
public IJsResolveErrorDescription get_ResolveError();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2456Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AliasName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string AliasName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2456Error(ITreeNode modifierNode, string aliasName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_AliasName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2459Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string TypeName { get; }
    public string PropertyName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2459Error(ITreeNode modifierNode, string typeName, string propertyName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2460Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string TypeName { get; }
    public string PropertyName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2460Error(ITreeNode modifierNode, string typeName, string propertyName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2461Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string TypeName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2461Error(ITreeNode modifierNode, string typeName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2462Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2462Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2463Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2463Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2464_ES6Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2464_ES6Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2464Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2464Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2465Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2465Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2466Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2466Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2467Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2467Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2468Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2468Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2488Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2488Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2507Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string TypeName { get; }
    public string ExtTypeName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2507Error(ITreeNode modifierNode, string typeName, string extTypeName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_ExtTypeName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2514Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsClassDeclaration <ModifierNode>k__BackingField;
    public ITsClassDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2514Error(ITsClassDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsClassDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2533Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2533Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2574Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTupleTypeElement <TupleElement>k__BackingField;
    public ITsTupleTypeElement TupleElement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2574Error(ITsTupleTypeElement tupleElement);
    [CompilerGeneratedAttribute]
public ITsTupleTypeElement get_TupleElement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS2706Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS2706Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4022Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ContainerName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4022Error(ITreeNode modifierNode, string containerName);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_ContainerName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4023Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4023Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4024Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4024Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4083Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4083Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4084Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4084Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4085Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4085Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4086Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4086Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4087Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4087Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS4089Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS4089Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS5004Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string FileName { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS5004Error(ITreeNode modifierNode, string fileName, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS5006Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS5006Error(ITreeNode modifierNode, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS5007Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string FileName { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS5007Error(ITreeNode modifierNode, string fileName, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS6054Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string FileName { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS6054Error(ITreeNode modifierNode, string fileName, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7005Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <VariableNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string VarName { get; }
    public ITreeNode VariableNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7005Error(ITreeNode modifierNode, string varName, ITreeNode variableNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public ITreeNode get_VariableNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7005Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <VariableNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string VarName { get; }
    public ITreeNode VariableNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7005Warning(ITreeNode modifierNode, string varName, ITreeNode variableNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public ITreeNode get_VariableNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7007Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ParameterNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string VarName { get; }
    public ITreeNode ParameterNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7007Error(ITreeNode modifierNode, string varName, ITreeNode parameterNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ParameterNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7007Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ParameterNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string VarName { get; }
    public ITreeNode ParameterNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7007Warning(ITreeNode modifierNode, string varName, ITreeNode parameterNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public ITreeNode get_ParameterNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7008Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsPropertySignatureDeclaration <MemberNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string MemberName { get; }
    public ITsPropertySignatureDeclaration MemberNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7008Error(ITreeNode modifierNode, string memberName, ITsPropertySignatureDeclaration memberNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_MemberName();
    [CompilerGeneratedAttribute]
public ITsPropertySignatureDeclaration get_MemberNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7008Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsPropertySignatureDeclaration <MemberNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string MemberName { get; }
    public ITsPropertySignatureDeclaration MemberNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7008Warning(ITreeNode modifierNode, string memberName, ITsPropertySignatureDeclaration memberNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_MemberName();
    [CompilerGeneratedAttribute]
public ITsPropertySignatureDeclaration get_MemberNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7009Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7009Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7009Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7009Warning(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7010Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <SignatureNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string EntityName { get; }
    public ITreeNode SignatureNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7010Error(ITreeNode modifierNode, string entityName, ITreeNode signatureNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_EntityName();
    [CompilerGeneratedAttribute]
public ITreeNode get_SignatureNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7010Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <SignatureNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string EntityName { get; }
    public ITreeNode SignatureNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7010Warning(ITreeNode modifierNode, string entityName, ITreeNode signatureNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_EntityName();
    [CompilerGeneratedAttribute]
public ITreeNode get_SignatureNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7011Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITreeNode ExpressionNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7011Error(ITreeNode modifierNode, ITreeNode expressionNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_ExpressionNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7011Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITreeNode ExpressionNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7011Warning(ITreeNode modifierNode, ITreeNode expressionNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_ExpressionNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7013Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsCallSignatureDeclaration <ModifierNode>k__BackingField;
    public ITsCallSignatureDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7013Error(ITsCallSignatureDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsCallSignatureDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7013Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsCallSignatureDeclaration <ModifierNode>k__BackingField;
    public ITsCallSignatureDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7013Warning(ITsCallSignatureDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsCallSignatureDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7016Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessorName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <SetterNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string AccessorName { get; }
    public ITreeNode SetterNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7016Error(ITreeNode modifierNode, string accessorName, ITreeNode setterNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_AccessorName();
    [CompilerGeneratedAttribute]
public ITreeNode get_SetterNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7016Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessorName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <SetterNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string AccessorName { get; }
    public ITreeNode SetterNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7016Warning(ITreeNode modifierNode, string accessorName, ITreeNode setterNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_AccessorName();
    [CompilerGeneratedAttribute]
public ITreeNode get_SetterNode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7017Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7017Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7017Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7017Warning(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7018Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsObjectPropertyInitializer <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsObjectPropertyInitializer ModifierNode { get; }
    public string PropertyName { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7018Error(ITsObjectPropertyInitializer modifierNode, string propertyName, string typeDescription);
    [CompilerGeneratedAttribute]
public ITsObjectPropertyInitializer get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7018Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsObjectPropertyInitializer <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsObjectPropertyInitializer ModifierNode { get; }
    public string PropertyName { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7018Warning(ITsObjectPropertyInitializer modifierNode, string propertyName, string typeDescription);
    [CompilerGeneratedAttribute]
public ITsObjectPropertyInitializer get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7020Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsCallSignatureDeclaration <ModifierNode>k__BackingField;
    public ITsCallSignatureDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7020Error(ITsCallSignatureDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsCallSignatureDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7020Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsCallSignatureDeclaration <ModifierNode>k__BackingField;
    public ITsCallSignatureDeclaration ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7020Warning(ITsCallSignatureDeclaration modifierNode);
    [CompilerGeneratedAttribute]
public ITsCallSignatureDeclaration get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7025Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <SignatureNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string EntityName { get; }
    public ITreeNode SignatureNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7025Error(ITreeNode modifierNode, string entityName, ITreeNode signatureNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_EntityName();
    [CompilerGeneratedAttribute]
public ITreeNode get_SignatureNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7025Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <SignatureNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string EntityName { get; }
    public ITreeNode SignatureNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7025Warning(ITreeNode modifierNode, string entityName, ITreeNode signatureNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public string get_EntityName();
    [CompilerGeneratedAttribute]
public ITreeNode get_SignatureNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyError", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7026Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITreeNode ExpressionNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7026Error(ITreeNode modifierNode, ITreeNode expressionNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_ExpressionNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("ImplicitAnyTypeWarning", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS7026Warning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public ITreeNode ExpressionNode { get; }
    public string TypeDescription { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS7026Warning(ITreeNode modifierNode, ITreeNode expressionNode, string typeDescription);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    [CompilerGeneratedAttribute]
public ITreeNode get_ExpressionNode();
    [CompilerGeneratedAttribute]
public string get_TypeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS9002Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS9002Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS9998Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS9998Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TS9999Error : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TS9999Error(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("TsNotResolved", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TsImproperlyResolvedAsDynamicError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string VariableName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TsImproperlyResolvedAsDynamicError(IReferenceExpression expression, string variableName);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("TsNotResolved", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TsNotResolvedError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <IdentifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanSurroundWithTypeGuard>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsUnionType <QualifierType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string VariableName { get; }
    public ITreeNode IdentifierNode { get; }
    public bool CanSurroundWithTypeGuard { get; }
    public ITsUnionType QualifierType { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TsNotResolvedError(IReferenceExpression expression, string variableName, ITreeNode identifierNode, bool canSurroundWithTypeGuard, ITsUnionType qualifierType);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public ITreeNode get_IdentifierNode();
    [CompilerGeneratedAttribute]
public bool get_CanSurroundWithTypeGuard();
    [CompilerGeneratedAttribute]
public ITsUnionType get_QualifierType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("TsNotResolved", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TsNotResolvedInModuleError : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IExternalNameReferenceOwner <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IExternalNameReferenceOwner Expression { get; }
    public string VariableName { get; }
    public string ModuleName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TsNotResolvedInModuleError(IExternalNameReferenceOwner expression, string variableName, string moduleName);
    [CompilerGeneratedAttribute]
public IExternalNameReferenceOwner get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("TsResolvedFromInaccessibleModule", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TsResolvedFromInaccessibleModuleWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITreeNode <IdentifierNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanSurroundWithTypeGuard>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsUnionType <QualifierType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string VariableName { get; }
    public ITreeNode IdentifierNode { get; }
    public bool CanSurroundWithTypeGuard { get; }
    public ITsUnionType QualifierType { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TsResolvedFromInaccessibleModuleWarning(IReferenceExpression expression, string variableName, ITreeNode identifierNode, bool canSurroundWithTypeGuard, ITsUnionType qualifierType);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public ITreeNode get_IdentifierNode();
    [CompilerGeneratedAttribute]
public bool get_CanSurroundWithTypeGuard();
    [CompilerGeneratedAttribute]
public ITsUnionType get_QualifierType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("TypeGuardDoesntAffectAnything", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeGuardDoesntAffectAnythingWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsExpression Expression { get; }
    public string Reason { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TypeGuardDoesntAffectAnythingWarning(ITsExpression expression, string reason);
    [CompilerGeneratedAttribute]
public ITsExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("TypeGuardProducesNeverType", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeGuardProducesNeverTypeWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsExpression Expression { get; }
    public string Reason { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TypeGuardProducesNeverTypeWarning(ITsExpression expression, string reason);
    [CompilerGeneratedAttribute]
public ITsExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeParameterConstraintShouldBeDeclaredTypeError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsTypeParameterDeclaration <TypeParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsTypeUsage <TypeUsage>k__BackingField;
    public ITsTypeParameterDeclaration TypeParameter { get; }
    public ITsTypeUsage TypeUsage { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TypeParameterConstraintShouldBeDeclaredTypeError(ITsTypeParameterDeclaration typeParameter, ITsTypeUsage typeUsage);
    [CompilerGeneratedAttribute]
public ITsTypeParameterDeclaration get_TypeParameter();
    [CompilerGeneratedAttribute]
public ITsTypeUsage get_TypeUsage();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("TypeParameterHidesTypeParamFromOuterScope", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeParameterHidesTypeParamFromOuterScopeWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsTypeParameterDeclaration <TypeParamDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsTypeParameterDeclaration TypeParamDeclaration { get; }
    public string TypeParameterName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TypeParameterHidesTypeParamFromOuterScopeWarning(ITsTypeParameterDeclaration typeParamDeclaration, string typeParameterName);
    [CompilerGeneratedAttribute]
public ITsTypeParameterDeclaration get_TypeParamDeclaration();
    [CompilerGeneratedAttribute]
public string get_TypeParameterName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypePredicateIsNotAllowedHereError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <Predicate>k__BackingField;
    public ITreeNode Predicate { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TypePredicateIsNotAllowedHereError(ITreeNode predicate);
    [CompilerGeneratedAttribute]
public ITreeNode get_Predicate();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.ControlFlow.TsControlFlowAnalysisExecutor : object {
    [NotNullAttribute]
public sealed virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.ControlFlow.TsControlFlowAnalysisProcess : JavaScriptControlFlowAnalysisProcess {
    public TsControlFlowAnalysisProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    protected virtual IEnumerable`1<JsSmartResolverProcess> GetSmartResolverProcess(IDaemonProcess process);
    protected virtual JsControlFlowGraphInspector CreateControlFlowInspector(ControlFlowGraph controlFlowGraph, JavaScriptServices javaScriptServices, JsInitialResolveContext context);
    protected virtual bool ParameterOwnerIsInherited(IDeclaredElement parameterElement);
    protected virtual bool SkipParameterFromUnused(IJavaScriptLocalElement parameter);
    protected virtual bool SignatureIsPublic(IJavaScriptLocalScope signatureOwner);
    protected virtual bool SkipFromUnreachable(ITreeNode element);
    protected virtual bool SkipFromNonFunctionByType(IJavaScriptExpression expression);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.ArrayBracketProblemAnalyzer : ElementProblemAnalyzer`1<ITsNewExpression> {
    protected virtual void Run(ITsNewExpression newExpression, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.BaseTypeClauseProblemAnalyzer : ElementProblemAnalyzer`1<ITsBaseTypeClause> {
    protected virtual void Run(ITsBaseTypeClause tsBaseTypeClauseParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    private static bool CheckAliasIsForElementType(IDeclaredElement de, JsResolveContext jsResolveContext, IJsResolvedType typ, TypeScriptDeclaredElementType[] elementTypes);
    private void CheckCanImplementType(IDeclaredElement selfDeclEl, ITsTypeLikeDeclaration decl, ITsTypeUsage typ, JsInitialResolveContext jsResolveContext, IHighlightingConsumer context, IFile file, Nullable`1& extTyp, IDeclaredElement& extDeclEl);
    private void CheckCanExtendType(IDeclaredElement selfDeclEl, ITsTypeLikeDeclaration decl, ITsTypeUsage typ, JsInitialResolveContext jsResolveContext, IHighlightingConsumer context, IFile file, Nullable`1& extTyp, IDeclaredElement& extDeclEl);
    private void CheckCanExtendType(IDeclaredElement selfDeclEl, ITsTypeLikeDeclaration decl, IJsUnresolvedType typ, IDeclaredElement elementForType, ITreeNode node, JsInitialResolveContext jsResolveContext, IHighlightingConsumer context, IFile file, Nullable`1& extTyp, IDeclaredElement& extDeclEl);
    private void CheckBaseTypeClauseArgument(ITsBaseTypeClause tsBaseTypeClauseParam, IHighlightingConsumer context, Func`3<IDeclaredElement, IJsResolvedType, bool> acceptCondition, Func`2<ITsTypeUsage, IHighlighting> hl, ITsTypeLikeDeclaration decl, IFile file, JsInitialResolveContext jsResolveContext, Dictionary`2<ITsTypeUsage, Tuple`2<ITsType, IDeclaredElement>> allTypes);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.BinaryExpressionProblemAnalyzer : ElementProblemAnalyzer`1<ITsExpression> {
    protected virtual void Run(ITsExpression expression, ElementProblemAnalyzerData data, IHighlightingConsumer context);
    private static JsTypeResolveResult GetResolvedType(IJavaScriptExpression operand, JsInitialResolveContext jsResolveContext, TsBinaryExpressionKind expressionKind, bool leftInAssignment);
    private static bool ContainsStringLikeType(IJsResolvedType type, JsResolveContext context);
    private static bool ContainsNumberOrEnumType(IJsResolvedType type, JsResolveContext context);
    private static bool ContainsBigintType(IJsResolvedType type, JsResolveContext context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.BindingPatternProblemAnalyzer : StructuredPatternProblemAnalyzerBase`4<ITsBindingPattern, ISingleNameBinding, IArrayLiteralBindingArgument, IObjectLiteralBindingPropertyDeclaration> {
    protected virtual void Run(ITsBindingPattern element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.CustomKeyHelper : object {
    private static Key`1<JsInitialResolveContext> ResolveContextKey;
    private static Key`1<JavaScriptServices> JavaScriptServicesKey;
    private static Key`1<IFile> AnalyzedFileKey;
    private static Key`1<JavaScriptFileIndexProcess> JsFileIndexProcessKey;
    private static Key`1<IJsConstantValueService> JsConstantValueServiceKey;
    private static CustomKeyHelper();
    [ExtensionAttribute]
public static JsInitialResolveContext GetJavaScriptResolveContext(ElementProblemAnalyzerData data);
    [ExtensionAttribute]
public static void SetJavaScriptResolveContext(ElementProblemAnalyzerData data, JsInitialResolveContext ctx);
    [ExtensionAttribute]
public static void SetJavaScriptServices(ElementProblemAnalyzerData data, JavaScriptServices services);
    [ExtensionAttribute]
public static JavaScriptServices GetJavaScriptServices(ElementProblemAnalyzerData data);
    [ExtensionAttribute]
public static IFile GetFile(ElementProblemAnalyzerData data);
    [ExtensionAttribute]
public static void SetFile(ElementProblemAnalyzerData data, IFile ctx);
    [ExtensionAttribute]
public static JavaScriptFileIndexProcess GetJsFileIndexProcess(ElementProblemAnalyzerData data);
    [ExtensionAttribute]
public static void SetJsFileIndexProcess(ElementProblemAnalyzerData data, JavaScriptFileIndexProcess proc);
    [ExtensionAttribute]
public static IJsConstantValueService GetJsConstantValueService(ElementProblemAnalyzerData data);
    [ExtensionAttribute]
public static void SetJsConstantValueService(ElementProblemAnalyzerData data, IJsConstantValueService proc);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.CyclicReferenceCommentsProblemAnalyzer : ElementProblemAnalyzer`1<ITsFileSection> {
    protected virtual void Run(ITsFileSection tsFileSectionParam, ElementProblemAnalyzerData data, IHighlightingConsumer context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.DecoratorProblemAnalyzer : ElementProblemAnalyzer`1<ITsDecorator> {
    protected virtual void Run(ITsDecorator element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    private static bool ProcessFunctionDecorator(ITsDecorator element, IHighlightingConsumer consumer, JsInitialResolveContext jsResolveContext, IJavaScriptFile file);
    private static bool ProcessParameterDecorator(ITsDecorator element, IHighlightingConsumer consumer, JsInitialResolveContext jsResolveContext, IJavaScriptFile file);
    private static bool ProcessMethodDecorator(ITsDecorator element, IHighlightingConsumer consumer, JsInitialResolveContext jsResolveContext, IJavaScriptFile file);
    private static bool ProcessAccessorDecorator(ITsDecorator element, IHighlightingConsumer consumer, JsInitialResolveContext jsResolveContext, IJavaScriptFile file);
    private static bool ProcessPropertyDecorator(ITsDecorator element, IHighlightingConsumer consumer, JsInitialResolveContext jsResolveContext, IJavaScriptFile file);
    private static bool ProcessClassDecorator(ITsDecorator element, IHighlightingConsumer consumer, JsInitialResolveContext jsResolveContext, IJavaScriptFile file);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.DocCommentsLocationProblemAnalyzer : ElementProblemAnalyzer`1<IDocCommentNode> {
    protected virtual void Run(IDocCommentNode element, ElementProblemAnalyzerData data, IHighlightingConsumer context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.ForeachStatementProblemAnalyzer : StructuredPatternProblemAnalyzerBase`4<ITsForeachStatement, ISingleNameAssignmentPattern, IArrayLiteralAssignmentPatternArgument, IObjectLiteralAssignmentPatternPropertyDeclaration> {
    protected virtual void Run(ITsForeachStatement tsForeachStatementParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.FromClauseProblemAnalyzer : ElementProblemAnalyzer`1<ITsFromClause> {
    protected virtual void Run(ITsFromClause fromClause, ElementProblemAnalyzerData data, IHighlightingConsumer context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.ImportDeclarationProblemAnalyzer : ElementProblemAnalyzer`1<ITsImportDeclaration> {
    protected virtual void Run(ITsImportDeclaration tsImportDeclarationParam, ElementProblemAnalyzerData data, IHighlightingConsumer context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.InconsistentAbstractProblemAnalyzer : ElementProblemAnalyzer`1<ITsClassDeclaration> {
    protected virtual void Run(ITsClassDeclaration clazz, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.IndexSignatureProblemAnalyzer : ElementProblemAnalyzer`1<ITsIndexSignatureDeclaration> {
    protected virtual void Run(ITsIndexSignatureDeclaration tsIndexSignatureDeclarationParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.JsSuperCallProblemAnalyzer : SuperCallProblemAnalyzer`1<IMemberFunction> {
    protected virtual void Run(IMemberFunction element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    protected virtual ISuperExpression GetSuperCall(IJavaScriptStatement statement);
    protected virtual void ConsumeError(IJavaScriptStatement statement, IHighlightingConsumer consumer, bool canMove);
    protected virtual void ConsumeWarning(IJavaScriptStatement statement, IHighlightingConsumer consumer, bool canMove);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.LexicalDeclarationProblemAnalyzer : ElementProblemAnalyzer`1<ILexicalDeclaration> {
    protected virtual void Run(ILexicalDeclaration element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.MemberAccessorProblemAnalyzer : ElementProblemAnalyzer`1<ITsMemberAccessorDeclaration> {
    protected virtual void Run(ITsMemberAccessorDeclaration tsMemberAccessorDeclarationParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.ModifiersOwnerProblemAnalyzer : ElementProblemAnalyzer`1<ITypeScriptModifiersOwner> {
    protected virtual void Run(ITypeScriptModifiersOwner element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.ModifiersProblemAnalyzer : ElementProblemAnalyzer`1<ITsClassMemberDeclaration> {
    protected virtual void Run(ITsClassMemberDeclaration element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.ObjectPropertyAccessorProblemAnalyzer : ElementProblemAnalyzer`1<ITsObjectPropertyAccessor> {
    protected virtual void Run(ITsObjectPropertyAccessor element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.ReferenceCommentsProblemAnalyzer : ElementProblemAnalyzer`1<ITsFileSection> {
    protected virtual void Run(ITsFileSection tsFileSectionParam, ElementProblemAnalyzerData data, IHighlightingConsumer context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.StructuredAssignmentProblemAnalyzer : StructuredPatternProblemAnalyzerBase`4<ITsStructuredAssignmentExpression, ISingleNameAssignmentPattern, IArrayLiteralAssignmentPatternArgument, IObjectLiteralAssignmentPatternPropertyDeclaration> {
    protected virtual void Run(ITsStructuredAssignmentExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
public abstract class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.StructuredPatternProblemAnalyzerBase`4 : ElementProblemAnalyzer`1<TExpression> {
    public static string DefaultValueString;
    private static string GetTypeDescription(JsTypeResolveResult type, string pathDesc, JsResolveContext jsResolveContext);
    protected void CheckAssignability(IDestructuringPattern pattern, JsTypeResolveResult sourceType, JsInitialResolveContext jsResolveContext, IHighlightingConsumer consumer, IJavaScriptFile file, string desc, IJavaScriptExpression expression, IDestructuringPattern fullPattern);
    private void CheckObjectBindingPattern(JsTypeResolveResult sourceType, JsInitialResolveContext jsResolveContext, IHighlightingConsumer consumer, IJavaScriptFile file, string desc, IObjectLikePattern`1<TObjectPatternProperty> objDest, IJavaScriptExpression expression, IDestructuringPattern fullPattern);
    private static bool IsOptional(IDeclaredElement element);
    private void CheckArrayBindingPattern(JsTypeResolveResult sourceType, JsInitialResolveContext jsResolveContext, IHighlightingConsumer consumer, IJavaScriptFile file, string desc, IArrayLikePattern`1<TArrayPatternArgument> arrayDest, IJavaScriptExpression expression, IDestructuringPattern fullPattern);
    protected static void CheckSingleAssignment(JsTypeResolveResult sourceType, JsTypeResolveResult destinationType, JsInitialResolveContext jsResolveContext, IHighlightingConsumer consumer, IJavaScriptFile file, string currentDesc, ITreeNode nameNode, IJavaScriptExpression sourceNode);
    private static void CheckSingleAssignmentPattern(JsTypeResolveResult sourceType, JsInitialResolveContext jsResolveContext, IHighlightingConsumer consumer, IJavaScriptFile file, string desc, ISingleItemPattern singleDest, IJavaScriptExpression expression, IDestructuringPattern fullPattern);
}
internal abstract class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.SuperCallProblemAnalyzer`1 : ElementProblemAnalyzer`1<T> {
    protected abstract virtual ISuperExpression GetSuperCall(IJavaScriptStatement statement);
    protected abstract virtual void ConsumeError(IJavaScriptStatement statement, IHighlightingConsumer consumer, bool canMove);
    protected abstract virtual void ConsumeWarning(IJavaScriptStatement statement, IHighlightingConsumer consumer, bool canMove);
    protected State<T> CheckBlock(IBlock block, IHighlightingConsumer consumer, State<T> state, bool asWarning);
    protected State<T> CheckCaseClause(ICaseClause caseClause, IHighlightingConsumer consumer, State<T> state, bool asWarning);
    private State<T> CheckStatements(TreeNodeCollection`1<IJavaScriptStatement> statements, IHighlightingConsumer consumer, State<T> state, bool asWarning);
    private State<T> CheckStatement(IJavaScriptStatement statement, IHighlightingConsumer consumer, State<T> state, bool currentHadThisUsage, bool asWarning);
    private State<T> CheckNonBlockStatement(IJavaScriptStatement statement, IHighlightingConsumer consumer, State<T> state, bool currentHadThisUsage, bool asWarning);
    private static bool StatementHasThisUsage(IJavaScriptStatement statement);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.TsInvocationExpressionProblemAnalyzer : ElementProblemAnalyzer`1<ITsInvocationLikeExpression> {
    protected virtual void Run(ITsInvocationLikeExpression tsInvocationExpressionParam, ElementProblemAnalyzerData data, IHighlightingConsumer context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.TsSuperCallProblemAnalyzer : SuperCallProblemAnalyzer`1<ITsConstructorDeclaration> {
    protected virtual void Run(ITsConstructorDeclaration element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    protected virtual ISuperExpression GetSuperCall(IJavaScriptStatement statement);
    protected virtual void ConsumeError(IJavaScriptStatement statement, IHighlightingConsumer consumer, bool canMove);
    protected virtual void ConsumeWarning(IJavaScriptStatement statement, IHighlightingConsumer consumer, bool canMove);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.TsSuperExpressionProblemAnalyzer : ElementProblemAnalyzer`1<ITsSuperExpression> {
    protected virtual void Run(ITsSuperExpression tsSuperExpressionParam, ElementProblemAnalyzerData data, IHighlightingConsumer context);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.TypeAliasProblemAnalyzer : ElementProblemAnalyzer`1<ITsTypeAliasDeclaration> {
    protected virtual void Run(ITsTypeAliasDeclaration element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.TypeArgumentProblemAnalyzer : ElementProblemAnalyzer`1<ITsTypeArgumentList> {
    protected virtual void Run(ITsTypeArgumentList tsTypeArgumentListParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    public static void CheckTypeArgumentUsage(ITsNamedType type, ITsTypeArgumentList tsTypeArgumentListParam, IHighlightingConsumer context, IList`1<ITsTypeParameterType> formalParams, ITreeNode hlExp, IJavaScriptFile file, JsInitialResolveContext jsResolveContext);
    private static bool HasVoidOrNullOrUndefinedType(IJsResolvedType type, JsResolveContext ctx);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.TypeParameterListProblemAnalyzer : ElementProblemAnalyzer`1<ITsTypeParameters> {
    protected virtual void Run(ITsTypeParameters element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.ProblemAnalyzers.TypeParameterProblemAnalyzer : ElementProblemAnalyzer`1<ITsTypeParameterDeclaration> {
    protected virtual void Run(ITsTypeParameterDeclaration element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsDuplicatesHighlightingProcess : TsDaemonStageProcessBase {
    private SyntaxHighlightingProcess myJavaScriptProcess;
    private JsInitialResolveContext myJsResolveContext;
    private TsLocalNameConflicts myLocalNameConflicts;
    private TsMemberNameConflicts myMemberNameConflicts;
    private TsModuleScopeNameConflicts myModuleScopeNameConflicts;
    private Stack`1<ITypeScriptModuleScope> myModuleScopeStack;
    private Stack`1<IIncrementalScope> myScopeStack;
    public IIncrementalScope CurrentScope { get; }
    public ITypeScriptModuleScope CurrentModuleScope { get; }
    public JsInitialResolveContext ResolveContext { get; }
    public TsLocalNameConflicts LocalNameConflicts { get; }
    public TsDuplicatesHighlightingProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, ITsFile file);
    private sealed virtual override bool JetBrains.ReSharper.Psi.IRecursiveElementProcessor<JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsDuplicatesHighlightingProcessContext>.InteriorShouldBeProcessed(ITreeNode element, TsDuplicatesHighlightingProcessContext context);
    private sealed virtual override bool JetBrains.ReSharper.Psi.IRecursiveElementProcessor<JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsDuplicatesHighlightingProcessContext>.IsProcessingFinished(TsDuplicatesHighlightingProcessContext context);
    private sealed virtual override void JetBrains.ReSharper.Psi.IRecursiveElementProcessor<JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsDuplicatesHighlightingProcessContext>.ProcessBeforeInterior(ITreeNode element, TsDuplicatesHighlightingProcessContext context);
    private sealed virtual override void JetBrains.ReSharper.Psi.IRecursiveElementProcessor<JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsDuplicatesHighlightingProcessContext>.ProcessAfterInterior(ITreeNode element, TsDuplicatesHighlightingProcessContext context);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    protected void HighlightInFile(Action`2<IJavaScriptFile, TsDuplicatesHighlightingProcessContext> fileHighlighter, Action`1<DaemonStageResult> commiter);
    public virtual void VisitTsLambdaExpression(ITsLambdaExpression tsLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatement(ITsFunctionStatement tsFunctionStatementParam, IHighlightingConsumer context);
    public IIncrementalScope get_CurrentScope();
    public ITypeScriptModuleScope get_CurrentModuleScope();
    public JsInitialResolveContext get_ResolveContext();
    public TsLocalNameConflicts get_LocalNameConflicts();
    public virtual void VisitTsIndexSignatureDeclaration(ITsIndexSignatureDeclaration tsIndexSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsConstructorDeclaration(ITsConstructorDeclaration tsConstructorDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberFunctionOverloadDeclaration(ITsMemberFunctionOverloadDeclaration tsMemberFunctionOverloadDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberFunctionDeclaration(ITsMemberFunctionDeclaration tsMemberFunctionDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsPropertySignatureDeclaration(ITsPropertySignatureDeclaration tsPropertySignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsCallSignatureDeclaration(ITsCallSignatureDeclaration tsCallSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionSignatureDeclaration(ITsFunctionSignatureDeclaration tsFunctionSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberAccessorDeclaration(ITsMemberAccessorDeclaration tsMemberAccessorDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsEnumMemberDeclaration(ITsEnumMemberDeclaration tsEnumMemberDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberVariableDeclaration(ITsMemberVariableDeclaration tsMemberVariableDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsNamedObjectPropertyDeclaration(ITsNamedObjectPropertyDeclaration tsObjectPropertyDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsImportDeclaration(ITsImportDeclaration tsImportDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsModuleDeclaration(ITsModuleDeclaration tsModuleDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsEnumDeclaration(ITsEnumDeclaration tsEnumDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsInterfaceDeclaration(ITsInterfaceDeclaration tsInterfaceDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsClassDeclaration(ITsClassDeclaration tsClassDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsVariableDeclarationStatement(ITsVariableDeclarationStatement tsVariableDeclarationStatementParam, IHighlightingConsumer context);
    [CompilerGeneratedAttribute]
private void <Execute>b__15_0(IJavaScriptFile file, TsDuplicatesHighlightingProcessContext consumer);
}
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsDuplicatesHighlightingProcessContext : object {
    private IHighlightingConsumer myConsumer;
    private TsDaemonStageProcessBase myProcess;
    public TsDaemonStageProcessBase Process { get; }
    public IHighlightingConsumer Consumer { get; }
    public TsDuplicatesHighlightingProcessContext(TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    public TsDaemonStageProcessBase get_Process();
    public IHighlightingConsumer get_Consumer();
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsErrorHighlightingProcess : TsDaemonStageProcessBase {
    private SyntaxHighlightingProcess myJavaScriptProcess;
    private HashMap`2<ITsConstructorDeclaration, ITsStatement> myCtorStatements;
    private OneToListMap`2<ITsClassLikeDeclaration, ITsSuperExpression> myPotentialProblematicSuper;
    private List`1<ITsClassLikeDeclaration> myClassesWithInitializedProps;
    private List`1<ITsClassLikeDeclaration> myClassesWithSuper;
    private List`1<IJsThisParameterOwner> myOwnersWithThisInLambda;
    private OneToListMap`2<IJsThisParameterOwner, ITsSingleNameBinding> myOwnersWithUnderscoreThisVariable;
    private HashMap`2<ITsClassLikeDeclaration, ITsConstructorDeclaration> myClassesWithInheritanceAndCtor;
    private JsInitialResolveContext myJsResolveContext;
    private JavaScriptFileIndexProcess myFileIndex;
    private bool myIsNoImplicitAny;
    private bool myHighlightImplicitAny;
    private bool mySuppressImplicitAnyForIndexers;
    private TypeScriptLanguageLevel myLanguageLevel;
    private JavaScriptLanguageLevel myJsLanguageLevel;
    private IJavaScriptDirectiveOwner myCurrentStrictScope;
    private bool myAlwaysStrict;
    private bool myIsStrictNullChecks;
    private IJsConstantValueService myConstantValueService;
    public JsInitialResolveContext ResolveContext { get; }
    public TsErrorHighlightingProcess(IDaemonProcess process, IContextBoundSettingsStore settings, ITsFile file);
    public JsInitialResolveContext get_ResolveContext();
    private bool IsInStrictContext();
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void VisitTsTypePredicate(ITsTypePredicate tsTypePredicateParam, IHighlightingConsumer context);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public void VisitTsGlobalDeclaration(IDeclaration decl, IHighlightingConsumer context);
    public virtual void VisitTsModuleDeclaration(ITsModuleDeclaration tsModuleDeclarationParam, IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void VisitTsConstructorDeclaration(ITsConstructorDeclaration tsConstructorDeclarationParam, IHighlightingConsumer context);
    private void DoFinishAnalysis(IJavaScriptFile file, IHighlightingConsumer context);
    public virtual void VisitTsMemberVariableDeclaration(ITsMemberVariableDeclaration tsMemberVariableDeclarationParam, IHighlightingConsumer context);
    [ObsoleteAttribute("There are Nodes in PSI [tsClassDeclaration, tsInterfaceDeclaration, tsTypeAliasDeclaration] that directly implements tsStatement and other interfaces, so this visitor member will not be invoked for these nodes")]
public virtual void VisitTsStatement(ITsStatement tsStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsPostfixExpression(ITsPostfixExpression tsPostfixExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsPrefixExpression(ITsPrefixExpression tsPrefixExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsVariableDeclaration(ITsVariableDeclaration tsVariableDeclarationParam, IHighlightingConsumer context);
    private void VisitVariableDeclaration(ITsVariableDeclaration tsVariableDeclarationParam, ITsSingleNameBinding binding, IHighlightingConsumer context);
    public virtual void VisitTsReadonlyPrimaryTypeUsage(ITsReadonlyPrimaryTypeUsage tsReadonlyPrimaryTypeUsageParam, IHighlightingConsumer context);
    public virtual void VisitTsDeclaredTypeUsage(ITsDeclaredTypeUsage tsDeclaredTypeUsageParam, IHighlightingConsumer context);
    public virtual void VisitTsWithStatement(ITsWithStatement tsWithStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsThisExpression(ITsThisExpression tsThisExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsAssignmentExpression(ITsAssignmentExpression tsAssignmentExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsParameterDeclaration(ITsParameterDeclaration tsParameterDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionExpression(ITsFunctionExpression tsFunctionExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsYieldExpression(ITsYieldExpression tsYieldExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatement(ITsFunctionStatement tsFunctionStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberFunctionDeclaration(ITsMemberFunctionDeclaration tsMemberFunctionDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsObjectPropertyFunctionBody(ITsObjectPropertyFunctionBody tsObjectPropertyFunctionBodyParam, IHighlightingConsumer context);
    public virtual void VisitTsCallSignatureDeclaration(ITsCallSignatureDeclaration tsCallSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsNewExpression(ITsNewExpression tsNewExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsTypeUsage(ITsTypeUsage tsTypeUsageParam, IHighlightingConsumer context);
    public virtual void VisitTsPropertySignatureDeclaration(ITsPropertySignatureDeclaration tsPropertySignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionSignatureDeclaration(ITsFunctionSignatureDeclaration tsFunctionSignatureDeclarationParam, IHighlightingConsumer context);
    private void CheckPropertyDeclarationAgainstIndexers(ITreeNode tsPropertySignatureDeclarationParam, IHighlightingConsumer context, ITsTypeMember memElt, IJsResolvedType typElt, ITsPropertyName pnameNum);
    public virtual void VisitTsEnumDeclaration(ITsEnumDeclaration tsEnumDeclarationParam, IHighlightingConsumer context);
    private bool IsValidTypeForIndexer(IJsResolvedType type);
    public virtual void VisitTsIndexExpression(ITsIndexExpression tsIndexExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsLambdaExpressionFullSignature(ITsLambdaExpressionFullSignature tsLambdaExpressionFullSignatureParam, IHighlightingConsumer context);
    public virtual void VisitTsLambdaExpressionSimpleSignature(ITsLambdaExpressionSimpleSignature tsLambdaExpressionSimpleSignatureParam, IHighlightingConsumer context);
    public virtual void VisitTsPropertyNameComputed(ITsPropertyNameComputed tsPropertyNameComputedParam, IHighlightingConsumer context);
    public virtual void VisitTsBlockLambdaExpression(ITsBlockLambdaExpression tsBlockLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsExpressionLambdaExpression(ITsExpressionLambdaExpression tsExpressionLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsCastExpression(ITsCastExpression tsCastExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsAsExpression(ITsAsExpression tsAsExpressionParam, IHighlightingConsumer context);
    private void CheckCastExpressionTypes(IHighlightingConsumer context, ITsExpression castedExpression, ITsTypeUsage tsTypeUsage);
    private bool CompareTypesForCastExpression(JsTypeResolveResult typ1, JsTypeResolveResult typ2);
    public virtual void VisitTsEnumMemberDeclaration(ITsEnumMemberDeclaration tsEnumMemberDeclarationParam, IHighlightingConsumer context);
    private bool HasNonConstParts(ITsExpression expression, IDeclaredElement declaredElement);
    public virtual void VisitTsContinueStatement(ITsContinueStatement tsContinueStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsReturnStatement(ITsReturnStatement tsReturnStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsBreakStatement(ITsBreakStatement tsBreakStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsObjectPropertyInitializer(ITsObjectPropertyInitializer tsObjectPropertyInitializerParam, IHighlightingConsumer context);
    public virtual void VisitTsLiteralExpression(ITsLiteralExpression tsLiteralExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsObjectLiteral(ITsObjectLiteral tsObjectLiteralParam, IHighlightingConsumer context);
    public virtual void VisitTsSwitchStatement(ITsSwitchStatement tsSwitchStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsIfStatement(ITsIfStatement tsIfStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsArrayLiteralBindingArgument(ITsArrayLiteralBindingArgument tsArrayLiteralBindingArgumentParam, IHighlightingConsumer context);
    public virtual void VisitTsUmdExportDeclaration(ITsUmdExportDeclaration tsUmdExportDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsInterfaceDeclaration(ITsInterfaceDeclaration tsInterfaceDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsTupleTypeList(ITsTupleTypeList tsTupleTypeListParam, IHighlightingConsumer context);
    public virtual void VisitTsTupleTypeElement(ITsTupleTypeElement tsTupleTypeElementParam, IHighlightingConsumer context);
    private bool CheckIfaceDeclarationsForGenerics(ITsInterfaceDeclaration tsInterfaceDeclarationParam, IHighlightingConsumer context, IEnumerable`1<ITsInterfaceDeclaration> fileDecls, TreeNodeCollection`1<ITsTypeParameterDeclaration> typeParams);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__22_1(JavaScriptFileIndexProcess p);
    [CompilerGeneratedAttribute]
private void <Execute>b__29_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsLocalNameConflicts : object {
    private TsDuplicatesHighlightingProcess myStage;
    private JsInitialResolveContext myJsResolveContext;
    public TsLocalNameConflicts(TsDuplicatesHighlightingProcess tsDuplicatesHighlightingProcess);
    public void ProcessDeclaration(ITreeNode decl, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsMemberNameConflicts : object {
    private TsDuplicatesHighlightingProcess myStage;
    private JsInitialResolveContext myJsResolveContext;
    private Dictionary`2<ITsTypeElement, OneToListMap`2<string, ITsTypeMember>> myMemberMapByTypeDeclaration;
    private Dictionary`2<ITsTypeElement, OneToListMap`2<string, ITsEnumMemberElement>> myEnumMemberMapByDeclaration;
    private Dictionary`2<ITsObjectTypeUsage, OneToListMap`2<string, IDeclaredElement>> myMemberDeclMapByObjectTypeUsageDeclaration;
    private OneToListMap`2<IDeclaredElement, IDeclaration> myDeclarationMapByElement;
    private Dictionary`2<ITreeNode, IList`1<IJsFunctionSignature>> mySignaturesCache;
    private Dictionary`2<ITsTypeElement, OneToListMap`2<string, ITsModuleMember>> myMergedMemberMapByTypeDeclaration;
    public TsMemberNameConflicts(TsDuplicatesHighlightingProcess tsDuplicatesHighlightingProcess);
    private OneToListMap`2<string, ITsModuleMember> GetMergedMembersTable(ITsTypeElement typeElement);
    private OneToListMap`2<string, IDeclaredElement> GetMembersDeclarationsTable(ITsObjectTypeUsage objectTypeDeclaration);
    public IEnumerable`1<IDeclaration> GetSymbolDeclarations(IDeclaredElement element, int limit);
    private OneToListMap`2<string, ITsEnumMemberElement> GetMembersTable(ITsEnumDeclaration enumDeclaration);
    private OneToListMap`2<string, ITsTypeMember> GetMembersTable(ITsTypeDeclaration typeDeclaration, ITsTypeElement& typeDeclarationDeclaredElement);
    public void ProcessDeclaration(ITreeNode decl, IHighlightingConsumer consumer);
    public void ProcessEnumMember(ITsEnumMemberDeclaration decl, IHighlightingConsumer consumer);
    public void ProcessConstructorDeclaration(ITsConstructorDeclaration decl, IHighlightingConsumer consumer);
    public void ProcessMemberFunctionOverload(ITsMemberFunctionOverloadDeclaration decl, IHighlightingConsumer consumer);
    public void ProcessMemberFunctionDeclaration(ITsMemberFunctionDeclaration decl, IHighlightingConsumer consumer);
    public void ProcessFunctionSignatureDeclaration(ITsFunctionSignatureDeclaration decl, IHighlightingConsumer consumer);
    public void ProcessMemberAccessorDeclaration(ITsMemberAccessorDeclaration decl, IHighlightingConsumer consumer);
    public void ProcessIndexSignatureDeclaration(ITsIndexSignatureDeclaration decl, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TsModuleScopeNameConflicts : object {
    private TsDuplicatesHighlightingProcess myStage;
    private JsInitialResolveContext myJsResolveContext;
    private Dictionary`2<ITypeScriptModuleScope, OneToListMap`2<string, IDeclaredElement>> myAllMembersMap;
    private OneToListMap`2<IDeclaredElement, ITreeNode> myTreeNodeMapByElement;
    private OneToListMap`2<IDeclaredElement, ITsModuleDeclaration> myModuleMapByElement;
    public TsModuleScopeNameConflicts(TsDuplicatesHighlightingProcess stage);
    public void ProcessModuleDeclaration(ITsModuleDeclaration decl, TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    public void ProcessVariableDeclarationStatement(ITsVariableDeclarationStatement decl, TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    public void ProcessClassDeclaration(ITsClassDeclaration decl, TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    public void ProcessEnumDeclaration(ITsEnumDeclaration decl, TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    public void ProcessImportDeclaration(ITsImportDeclaration decl, TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    public void ProcessInterfaceDeclaration(ITsInterfaceDeclaration decl, TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    public void ProcessFunctionStatementDeclaration(ITsFunctionStatement decl, TsDaemonStageProcessBase process, IHighlightingConsumer consumer);
    private static ITsModuleDeclaration GetContainingExactlyModuleDeclaration(ITreeNode node);
    public IEnumerable`1<ITsModuleDeclaration> GetModuleDeclarations(IDeclaredElement element);
    public IEnumerable`1<ITreeNode> GetTreeNodes(IDeclaredElement element);
    public OneToListMap`2<string, IDeclaredElement> GetAllMembersMap(ITypeScriptModuleScope myScope);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TypeScriptDuplicatesHighlightingStage : JavaScriptDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Error.TypeScriptErrorHighlightingStage : JavaScriptDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/GutterMarks")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Hierarchy.TsInheritedMembersGutterMark : InheritanceMarkOnGutterBase`1<ITsTypeMember> {
    private static DeclaredElementPresenterStyle LOCATION_PRESENTER;
    public TsInheritedMembersGutterMark(IDeclaration inheritorDeclaration);
    private static TsInheritedMembersGutterMark();
    protected virtual RichText FromName(ITsTypeMember declaredElement, bool shortName);
    protected virtual RichText FormatLocation(ITsTypeMember member);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Hierarchy.TsInheritedMembersGutterMarkProcess : ElementProblemAnalyzer`1<ITsOverridableMemberDeclaration> {
    protected virtual void Run(ITsOverridableMemberDeclaration classMember, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Hierarchy.TsInheritedTypesGutterMarkProcess : ElementProblemAnalyzer`1<ITsTypeLikeDeclaration> {
    protected virtual void Run(ITsTypeLikeDeclaration typeDeclaration, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/GutterMarks")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Hierarchy.TsTypeHasSupersMarkOnGutter : TypeHasSupersMarkOnGutterBase {
    private IReadOnlyList`1<JsElementInstance`1<ITsExtendableTypeElement>> myBaseElements;
    public TsTypeHasSupersMarkOnGutter(ITsTypeLikeDeclaration typeDeclaration, DocumentRange nameDocumentRange, IReadOnlyList`1<JsElementInstance`1<ITsExtendableTypeElement>> baseElements);
    protected virtual SearchRequest CreateBaseSearchRequest(IDeclaredElement declaredElement);
    protected virtual SuperTypesSet InspectSuperTypes();
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/GutterMarks")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Hierarchy.TsTypeInheritedGutterMark : TypeIsInheritedMarkOnGutterBase {
    public string AttributeId { get; }
    public TsTypeInheritedGutterMark(ITsTypeLikeDeclaration typeDeclaration, DocumentRange nameDocumentRange);
    public virtual string get_AttributeId();
    protected virtual SearchRequest CreateInheritorsSearchRequest(IDeclaredElement typeElement, ISearchDomain domain);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Hierarchy.ZoneMarker : object {
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Inspections.ProblemAnalyzers.CastExpressionProblemAnalyzer : ElementProblemAnalyzer`1<ITsCastExpression> {
    protected virtual void Run(ITsCastExpression tsPrefixExpressionParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Inspections.ProblemAnalyzers.InstanceOfTypeGuardProblemAnalyzer : ElementProblemAnalyzer`1<ITsBinaryExpression> {
    protected virtual void Run(ITsBinaryExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Inspections.ProblemAnalyzers.ReferenceExpressionProblemAnalyzer : ElementProblemAnalyzer`1<ITsReferenceExpression> {
    protected virtual void Run(ITsReferenceExpression tsReferenceExpressionParam, ElementProblemAnalyzerData data, IHighlightingConsumer context);
    public static void CheckForRedundantQualifier(INodeWithNameNode fullReference, IHighlightingConsumer context, JsTypeResolveResult typ, ITreeNode highlightedNode, JsResolveContext jsResolveContext, IFile file);
    private static bool CheckNoInnerScopeConflictsForType(ITsType type, ITreeNode contextNode, JsResolveContext jsResolveContext);
    private static bool CheckHasMemberWithNameOtherThan(ITsModuleElement element, string name, ITsModuleMember otherThanMe, ITsType myType, JsResolveContext jsResolveContext);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Inspections.ProblemAnalyzers.TypeOfTypeGuardProblemAnalyzer : ElementProblemAnalyzer`1<ITsPrefixExpression> {
    protected virtual void Run(ITsPrefixExpression tsPrefixExpressionParam, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
    public static bool ShouldSuggestIntroducingVariableForGuard(ITsReferenceExpression leftAsReferenceExpression, JsInitialResolveContext jsResolveContext);
    public static bool HasWriteUsages(ITsReferenceExpression leftAsReferenceExpression, JsInitialResolveContext jsResolveContext);
    private static void Check(IHighlightingConsumer consumer, string stringValue, string expectedValue, IJsResolvedType[] typeset, ITsExpression leftArgument, IJavaScriptFile file, JsInitialResolveContext jsResolveContext, Func`2<IJsResolvedType, bool> checkFunc);
    public static string GetTypeSetDesc(IJsResolvedType[] typeset, ITreeNode contextNode, JsInitialResolveContext jsResolveContext);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Inspections.TsInspectionsProcessExecutor : object {
    [CanBeNullAttribute]
public sealed virtual IDaemonStageProcess CreateInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Inspections.TsOwnInspectionsStage : JavaScriptDaemonStageBase {
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
public interface JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Js2Ts.ITransformerClassInfo {
    public TransformerPassKind Id { get; }
    public string ConfigurableSeverityId { get; }
    public string CompoundItemName { get; }
    public string Title { get; }
    public string Description { get; }
    public string GroupName { get; }
    public Severity Severity { get; }
    public string HighlightingMessage { get; }
    public string QuickFixMessage { get; }
    public abstract virtual TransformerPassKind get_Id();
    public abstract virtual string get_ConfigurableSeverityId();
    public abstract virtual string get_CompoundItemName();
    public abstract virtual string get_Title();
    public abstract virtual string get_Description();
    public abstract virtual string get_GroupName();
    public abstract virtual Severity get_Severity();
    public abstract virtual string get_HighlightingMessage();
    public abstract virtual string get_QuickFixMessage();
}
[DaemonStageAttribute("0")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Js2Ts.Js2TsDaemonStage : JavaScriptDaemonStageBase {
    private TransformerClassInfosManager myInfosManager;
    private TransformerManager myTransformerManager;
    public Js2TsDaemonStage(TransformerManager transformerManager, TransformerClassInfosManager infosManager);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Js2Ts.Js2TsDaemonStageProcess : object {
    private IHighlightingConsumer myConsumer;
    private IDaemonProcess myDaemonProcess;
    private ITsFile myFile;
    private TransformerClassInfosManager myInfosManager;
    private TransformerManager myTransformerManager;
    private IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.File { get; }
    public IDaemonProcess DaemonProcess { get; }
    public Js2TsDaemonStageProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, TransformerManager transformerManager, ITsFile file, TransformerClassInfosManager infosManager);
    private sealed virtual override IFile JetBrains.ReSharper.Feature.Services.Daemon.IDaemonStageProcessWithPsiFile.get_File();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual bool InteriorShouldBeProcessed(ITreeNode element, TransformerMatchContext context);
    public sealed virtual bool IsProcessingFinished(TransformerMatchContext context);
    public sealed virtual void ProcessBeforeInterior(ITreeNode element, TransformerMatchContext context);
    public sealed virtual void ProcessAfterInterior(ITreeNode element, TransformerMatchContext context);
    private IHighlighting CreateHighlighting(ITransformer transformer, ITransformerMatchResult matchResult);
}
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Js2Ts.TransformerClassInfo : object {
    [CompilerGeneratedAttribute]
private string <CompoundItemName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private Severity <Severity>k__BackingField;
    [CompilerGeneratedAttribute]
private TransformerPassKind <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurableSeverityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HighlightingMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QuickFixMessage>k__BackingField;
    public string CompoundItemName { get; public set; }
    public string Title { get; public set; }
    public string Description { get; public set; }
    public string GroupName { get; public set; }
    public Severity Severity { get; public set; }
    public TransformerPassKind Id { get; public set; }
    public string ConfigurableSeverityId { get; public set; }
    public string HighlightingMessage { get; public set; }
    public string QuickFixMessage { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_CompoundItemName();
    [CompilerGeneratedAttribute]
public void set_CompoundItemName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_GroupName();
    [CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Severity get_Severity();
    [CompilerGeneratedAttribute]
public void set_Severity(Severity value);
    [CompilerGeneratedAttribute]
public sealed virtual TransformerPassKind get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(TransformerPassKind value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConfigurableSeverityId();
    [CompilerGeneratedAttribute]
public void set_ConfigurableSeverityId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_HighlightingMessage();
    [CompilerGeneratedAttribute]
public void set_HighlightingMessage(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QuickFixMessage();
    [CompilerGeneratedAttribute]
public void set_QuickFixMessage(string value);
    protected bool Equals(TransformerClassInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Js2Ts.TransformerClassInfos : object {
    private static Severity DefaultSeverity;
    private static string DefaultGroupName;
    private static string DefaultConfigurableSeverityDescription;
    private static ITransformerClassInfo CreateInfo(TransformerPassKind passId, string severityId, string message, string qfMessage, Severity severity);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Js2Ts.TransformerClassInfos/<GetInfos>d__4")]
public IEnumerable`1<ITransformerClassInfo> GetInfos();
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Js2Ts.TransformerClassInfosManager : object {
    private TransformerClassInfos myTransformerClassInfos;
    private List`1<ITransformerClassInfo> myClassInfos;
    private Dictionary`2<int, ITransformerClassInfo> myIdToInfos;
    public IEnumerable`1<Tuple`2<PsiLanguageType, ConfigurableSeverityItem>> ConfigurableSeverityItems { get; }
    public TransformerClassInfosManager(TransformerClassInfos transformerClassInfos);
    public ITransformerClassInfo GetInfoBy(TransformerPassKind id);
    private void InitMappingIdToInfo();
    private void InitInfos();
    public sealed virtual IEnumerable`1<Tuple`2<PsiLanguageType, ConfigurableSeverityItem>> get_ConfigurableSeverityItems();
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Naming.TsNamingDaemonProcess : TsDaemonStageProcessBase {
    private IPsiServices myPsiServices;
    private INamingPolicyProvider myPolicyProvider;
    private SyntaxHighlightingProcess myJavaScriptProcess;
    private JsInitialResolveContext myJsResolveContext;
    private bool mySmartInterfaceFields;
    public TsNamingDaemonProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, ITsFile file);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    [CanBeNullAttribute]
private IDeclaredElement GetDeclaredElementOptimized(ITreeNode node);
    public virtual void VisitTsVariableDeclaration(ITsVariableDeclaration tsVariableDeclarationParam, IHighlightingConsumer context);
    private static bool IsNotJsOnlyLocalElement(IDeclaredElement declaredElement);
    public virtual void VisitTsTypeParameterDeclaration(ITsTypeParameterDeclaration tsTypeParameterDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsClassDeclaration(ITsClassDeclaration tsClassDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsEnumDeclaration(ITsEnumDeclaration tsEnumDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsEnumMemberDeclaration(ITsEnumMemberDeclaration tsEnumMemberDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsTypeAliasDeclaration(ITsTypeAliasDeclaration tsTypeAliasDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsModuleDeclaration(ITsModuleDeclaration tsModuleDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatement(ITsFunctionStatement tsFunctionStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsInterfaceDeclaration(ITsInterfaceDeclaration tsInterfaceDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionSignatureDeclaration(ITsFunctionSignatureDeclaration tsFunctionSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsPropertySignatureDeclaration(ITsPropertySignatureDeclaration tsPropertySignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsParameterDeclaration(ITsParameterDeclaration tsParameterDeclarationParam, IHighlightingConsumer context);
    private bool ShouldCheckNameForDerivedProperty(string name, IDeclaredElement ownerType);
    public virtual void VisitTsMemberFunctionDeclaration(ITsMemberFunctionDeclaration tsMemberFunctionDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberVariableDeclaration(ITsMemberVariableDeclaration tsMemberVariableDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberAccessorDeclaration(ITsMemberAccessorDeclaration tsMemberAccessorDeclarationParam, IHighlightingConsumer context);
    private void CheckName(ITreeNode usageElement, string name, DocumentRange documentRange, IDeclaredElement element, IHighlightingConsumer context, ITreeNode optionalDeclarationNode);
    [CompilerGeneratedAttribute]
private void <Execute>b__7_1(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Naming.TsNamingDaemonStage : JavaScriptDaemonStageBase {
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Resolve.TsNotResolvedErrorHandler : NotResolvedErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
    private static string GetModuleName(string nameForNamedType);
    private static IHighlighting HighlightUnresolvedExternalNameReference(IExternalNameReference importedNameReference, JsInitialResolveContext jsResolveContext);
    private static IHighlighting HighlightUnresolvedImportedNameReference(ITsImportReference importedNameReference, JsInitialResolveContext jsResolveContext);
    private static IHighlighting HighlightReferenceExpressionReference(IReferenceExpressionReference referenceExpressionReference, JsInitialResolveContext jsResolveContext);
    private static bool CanSurroundWithGuard(JsInitialResolveContext jsResolveContext, IReferenceExpression referenceExpression, ITsUnionType& qualifierType);
    private static IHighlighting HighlightUnresolvedModuleReference(IModuleNameReference moduleNameReference, JsInitialResolveContext jsResolveContext);
    public static IHighlighting TryGetErrorFromBinaryExpression(ITsNewExpression element, ITsBinaryExpression topBinaryExpression);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.SmartResolver.TsExtraResolverProcessor : JsExtraResolverProcessor {
    private List`1<JsPrimitive> myPossibleParents;
    private Stack`1<int> myPossibleParentsCounter;
    public TsExtraResolverProcessor(IJavaScriptFile file, IHighlightingConsumer consumer, JsSmartResolverProcess smartResolverProcess);
    public virtual void ProcessBeforeInterior(ITreeNode element, JsResolveContext resolveContext);
    public virtual void ProcessAfterInterior(ITreeNode element, JsResolveContext resolveContext);
    protected virtual bool ShouldCheckConflictsWithOuterScope(IDeclaredElement declaredElement);
    protected virtual IHighlighting GetBlockScopeRedeclarationHighlighting(ISingleNameBinding declaration, IDeclaredElement declaredElement);
    private static bool ScopeHasBody(IJavaScriptLocalScope scope);
    protected virtual IJavaScriptExpression GetExpressionFromSignature(IJsSignatureNode signature);
    protected virtual bool ShouldHighlightDuplicateParametersError();
    protected virtual void VisitDeclaration(IDeclaration declaration, JsResolveContext resolveContext, ISymbolTable symbolTable);
    protected virtual bool IsLocalElement(IDeclaredElement declaredElement);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.TypeScript.TypeScriptLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.SmartResolver.TsSmartResolverExecutor : object {
    public sealed virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.SmartResolver.TsSmartResolverProcess : JsSmartResolverProcess {
    public TsSmartResolverProcess(IDaemonProcess daemonProcess, IContextBoundSettingsStore settingsStore, IJavaScriptFile file);
    protected virtual JsNonQualifiedResolver GetNonQualifiedResolver(IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Syntax.TsSyntaxHighlightingProcess : TsDaemonStageProcessBase {
    private SyntaxHighlightingProcess myJavaScriptProcess;
    private bool mySeenGlobalExport;
    private JsInitialResolveContext myJsResolveContext;
    private List`1<ITypeScriptModuleScope> myModulesWithExportAssignments;
    private TypeScriptLanguageLevel myLanguageLevel;
    private JavaScriptLanguageLevel myJavaScriptLanguageLevel;
    private bool myHasUmdExport;
    private IJsConstantValueService myConstantValueService;
    public TsSyntaxHighlightingProcess(IDaemonProcess process, IContextBoundSettingsStore settingsStore, ITsFile file);
    public virtual void VisitTsInvocationExpression(ITsInvocationExpression tsInvocationExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsArrayLiteralComprehension(ITsArrayLiteralComprehension tsArrayLiteralComprehensionParam, IHighlightingConsumer context);
    public virtual void VisitTsGeneratorComprehension(ITsGeneratorComprehension tsGeneratorComprehensionParam, IHighlightingConsumer context);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void VisitTsObjectPropertyRest(ITsObjectPropertyRest tsObjectPropertyRestParam, IHighlightingConsumer context);
    public virtual void VisitTsObjectLiteralAssignmentPatternPropertyRestDeclaration(ITsObjectLiteralAssignmentPatternPropertyRestDeclaration tsObjectLiteralAssignmentPatternPropertyRestDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsObjectLiteralBindingPropertyRestDeclaration(ITsObjectLiteralBindingPropertyRestDeclaration tsObjectLiteralBindingPropertyRestDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsLiteralTypeUsage(ITsLiteralTypeUsage tsLiteralTypeUsage, IHighlightingConsumer context);
    public virtual void VisitTsThisTypeUsage(ITsThisTypeUsage tsThisTypeUsageParam, IHighlightingConsumer context);
    public virtual void VisitTsThisTypePredicate(ITsThisTypePredicate tsThisTypePredicateParam, IHighlightingConsumer context);
    public virtual void VisitTsUnionTypeUsage(ITsUnionTypeUsage tsUnionTypeUsageParam, IHighlightingConsumer context);
    public virtual void VisitTsDeclaredTypeUsage(ITsDeclaredTypeUsage tsDeclaredTypeUsageParam, IHighlightingConsumer context);
    public virtual void VisitTsBinaryExpression(ITsBinaryExpression tsBinaryExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsSimpleAssignmentExpression(ITsSimpleAssignmentExpression tsSimpleAssignmentExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsUmdExportDeclaration(ITsUmdExportDeclaration tsUmdExportDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsPostfixExpression(ITsPostfixExpression tsPostfixExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsExportAssignment(ITsExportAssignment exportAssignment, IHighlightingConsumer context);
    public virtual void VisitTsTaggedTemplateExpression(ITsTaggedTemplateExpression tsTaggedTemplateExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsExternalModuleReferenceName(ITsExternalModuleReferenceName tsExternalModuleReferenceName, IHighlightingConsumer context);
    public virtual void VisitTsAwaitExpression(ITsAwaitExpression tsAwaitExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsLexicalDeclaration(ITsLexicalDeclaration tsLexicalDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsTypePredicate(ITsTypePredicate tsTypePredicateParam, IHighlightingConsumer context);
    public virtual void VisitTsVariableDeclarationStatement(ITsVariableDeclarationStatement typeScriptVariableStatement, IHighlightingConsumer context);
    private void VisitVariableLikeStatement(ITypeScriptModifiersOwner typeScriptVariableStatement, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatementSignature(ITsFunctionStatementSignature tsFunctionStatementSignatureParam, IHighlightingConsumer context);
    public virtual void VisitTsTypeParameters(ITsTypeParameters tsTypeParametersParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatement(ITsFunctionStatement tsFunctionStatement, IHighlightingConsumer context);
    public virtual void VisitTsBaseTypeClause(ITsBaseTypeClause tsBaseTypeClauseParam, IHighlightingConsumer context);
    public virtual void VisitTsClassDeclaration(ITsClassDeclaration tsClassDeclaration, IHighlightingConsumer context);
    [ObsoleteAttribute("There are Nodes in PSI [tsClassDeclaration, tsInterfaceDeclaration, tsTypeAliasDeclaration] that directly implements tsStatement and other interfaces, so this visitor member will not be invoked for these nodes")]
public virtual void VisitTsStatement(ITsStatement tsStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsGlobalScopeBlock(ITsGlobalScopeBlock tsGlobalScopeBlockParam, IHighlightingConsumer context);
    public virtual void VisitTsModuleDeclaration(ITsModuleDeclaration tsModuleDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsInterfaceDeclaration(ITsInterfaceDeclaration tsInterfaceDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsArrayTypeUsage(ITsArrayTypeUsage arrayTypeParam, IHighlightingConsumer context);
    public virtual void VisitTsDecorator(ITsDecorator tsDecoratorParam, IHighlightingConsumer context);
    public virtual void VisitTsImportDeclaration2(ITsImportDeclaration2 tsImportDeclaration2Param, IHighlightingConsumer context);
    public virtual void VisitTsExportDeclaration(ITsExportDeclaration tsExportDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsObjectPropertyFunction(ITsObjectPropertyFunction tsObjectPropertyFunctionParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionExpressionSignature(ITsFunctionExpressionSignature tsFunctionExpressionSignatureParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionSignatureDeclaration(ITsFunctionSignatureDeclaration tsFunctionSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsCallSignatureDeclaration(ITsCallSignatureDeclaration tsCallSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsPropertySignatureDeclaration(ITsPropertySignatureDeclaration tsPropertySignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsSingleNameBinding(ITsSingleNameBinding tsSingleNameBindingParam, IHighlightingConsumer context);
    public virtual void VisitTsAsExpression(ITsAsExpression tsAsExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsSpreadExpression(ITsSpreadExpression tsSpreadExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsClassExpression(ITsClassExpression tsClassExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsYieldExpression(ITsYieldExpression tsYieldExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsForeachPatternInitializer(ITsForeachPatternInitializer tsForeachPatternInitializerParam, IHighlightingConsumer context);
    public virtual void VisitTsStructuredAssignmentExpression(ITsStructuredAssignmentExpression tsStructuredAssignmentExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsForeachStatement(ITsForeachStatement tsForeachStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsParameterDeclaration(ITsParameterDeclaration tsParameterDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsArrayLiteralBindingArgument(ITsArrayLiteralBindingArgument tsArrayLiteralBindingArgumentParam, IHighlightingConsumer context);
    public virtual void VisitTsVariableDeclaration(ITsVariableDeclaration variableDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsMemberVariableDeclaration(ITsMemberVariableDeclaration tsMemberVariableDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsExportAmbientSpecification(ITsExportAmbientSpecification tsExportAmbientSpecificationParam, IHighlightingConsumer context);
    public virtual void VisitTsLambdaExpression(ITsLambdaExpression tsLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsCatchBlock(ITsCatchBlock tsCatchBlockParam, IHighlightingConsumer context);
    public virtual void VisitTsAccessorSignature(ITsAccessorSignature tsAccessorSignatureParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberAccessorDeclaration(ITsMemberAccessorDeclaration memberAccessorDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsIndexSignatureDeclaration(ITsIndexSignatureDeclaration indexSignature, IHighlightingConsumer context);
    public virtual void VisitTsIntersectionTypeUsage(ITsIntersectionTypeUsage tsIntersectionTypeUsageParam, IHighlightingConsumer context);
    public virtual void VisitTsTypeAliasDeclaration(ITsTypeAliasDeclaration tsTypeAliasDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberFunctionDeclaration(ITsMemberFunctionDeclaration memberFunctionDeclaration, IHighlightingConsumer context);
    private void CheckStaticAndReadonlyKeywordOrder(IHighlightingConsumer context, TreeNodeEnumerable`1<ITokenNode> keywords);
    public virtual void VisitTsConstructorDeclaration(ITsConstructorDeclaration tsConstructorDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsIndexSignatureForClass(ITsIndexSignatureForClass tsIndexSignatureForClassParam, IHighlightingConsumer context);
    public virtual void VisitTsConstructorOverloadDeclaration(ITsConstructorOverloadDeclaration constructorOverloadDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsBlockLambdaExpression(ITsBlockLambdaExpression tsBlockLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsExpressionLambdaExpression(ITsExpressionLambdaExpression tsExpressionLambdaExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberFunctionOverloadDeclaration(ITsMemberFunctionOverloadDeclaration tsMemberFunctionOverloadDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsEnumDeclaration(ITsEnumDeclaration tsEnumDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsImportDeclaration(ITsImportDeclaration tsImportDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsExportAllNamedSpecification(ITsExportAllNamedSpecification tsExportAllNamedSpecificationParam, IHighlightingConsumer context);
    public virtual void VisitTsExportDefaultAsNameSpecification(ITsExportDefaultAsNameSpecification tsExportDefaultAsNameSpecificationParam, IHighlightingConsumer context);
    public virtual void VisitTsParametersList(ITsParametersList tsParametersList, IHighlightingConsumer context);
    public virtual void VisitTsSuperExpression(ITsSuperExpression tsSuperExpressionParam, IHighlightingConsumer context);
    private static bool IsStringLiteral(IJavaScriptExpression expression);
    public virtual void VisitTsPropertyNameComputed(ITsPropertyNameComputed tsPropertyNameComputedParam, IHighlightingConsumer context);
    public virtual void VisitTsLiteralExpression(ITsLiteralExpression tsLiteralExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsMappedTypePropertyDeclaration(ITsMappedTypePropertyDeclaration tsMappedTypePropertyDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsTypeArgumentList(ITsTypeArgumentList tsTypeArgumentListParam, IHighlightingConsumer context);
    [CompilerGeneratedAttribute]
private void <Execute>b__13_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Syntax.TypeScriptDerivedInspectionsProcess : JavaScriptInspectionsProcess {
    public TypeScriptDerivedInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, IJavaScriptFile file);
    protected virtual void AddThisInGlobalContextWarning(IThisExpression thisExpression, IHighlightingConsumer consumer);
    protected virtual bool ShouldHighlightReservedKeywordsUsing();
    protected virtual bool ShouldHighlightDuplicatingProperties();
    protected virtual IEnumerable`1<IJavaScriptDeclaration> GetLocalDeclarationsInScope(IJavaScriptVariableScope scope, JsInitialResolveContext resolveContext);
    protected virtual void AnalyseReturns(IReturnStatement returnStatement, IHighlightingConsumer context);
    protected virtual bool ShouldHighlightWithStatement();
    protected virtual IHighlighting GetWarningForUsedBeforeDeclared(IReferenceExpression referenceExpression, IVariableDeclaration variableDeclaration);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Syntax.TypeScriptOwnInspectionsProcess : TsDaemonStageProcessBase {
    private SyntaxHighlightingProcess myJavaScriptProcess;
    private JsInitialResolveContext myJsResolveContext;
    private TsSmartResolverProcess mySmartResolver;
    private TypeSpecificationKind myTypeSpecKind;
    private IJavaScriptDirectiveOwner myCurrentStrictScope;
    private IList`1<string> amdDependencies;
    private FileReferenceStyle myFileRefStyle;
    private JavaScriptFileIndexProcess myFileIndex;
    private TsScopedProjectOptions myLocalTsOptions;
    private TerminationStyle myTerminationStyle;
    public TypeScriptOwnInspectionsProcess(IDaemonProcess process, IContextBoundSettingsStore settings, ITsFile file);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    private bool IsInStrictContext();
    private bool MostOuterStrictContextIs(IJavaScriptDirectiveOwner nodeToCheck);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void VisitTsParameterDeclaration(ITsParameterDeclaration tsParameterDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsMemberVariableDeclaration(ITsMemberVariableDeclaration tsMemberVariableDeclarationParam, IHighlightingConsumer context);
    private bool HasArgumentsReferenceUsage(ITreeNode node);
    public virtual void VisitTsConstructorOverloadDeclaration(ITsConstructorOverloadDeclaration overload, IHighlightingConsumer context);
    public virtual void VisitTsMemberFunctionOverloadDeclaration(ITsMemberFunctionOverloadDeclaration overload, IHighlightingConsumer context);
    public virtual void VisitTsPropertySignatureDeclaration(ITsPropertySignatureDeclaration tsPropertySignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionSignatureDeclaration(ITsFunctionSignatureDeclaration tsFunctionSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatementSignature(ITsFunctionStatementSignature tsFunctionStatementSignatureParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatement(ITsFunctionStatement tsFunctionStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsModuleDeclaration(ITsModuleDeclaration tsModuleDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsClassDeclaration(ITsClassDeclaration tsClassDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsEnumDeclaration(ITsEnumDeclaration tsEnumDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsCallSignatureDeclaration(ITsCallSignatureDeclaration tsCallSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsIndexSignatureDeclaration(ITsIndexSignatureDeclaration tsIndexSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsIndexSignatureForClass(ITsIndexSignatureForClass tsIndexSignatureForClassParam, IHighlightingConsumer context);
    public virtual void VisitTsThisExpression(ITsThisExpression tsThisExpressionParam, IHighlightingConsumer context);
    private static bool HasThisParameter(TreeNodeEnumerable`1<ITsParameterDeclaration> parameters);
    public virtual void VisitTsAssignmentExpression(ITsAssignmentExpression tsAssignmentExpression, IHighlightingConsumer context);
    public virtual void VisitTsTypeParameterDeclaration(ITsTypeParameterDeclaration tsTypeParameterDeclarationParam, IHighlightingConsumer context);
    private static void CheckTypeAnnotationIsRequired(TypeSpecificationKind kind, ITsTypeAnnotation typeAnnotation, ITsExpression initializerExpression, ITreeNode contextNode, IDeclaredElement declaredElement, ITreeNode highlightedNode, JsResolveContext resolveContext, string entityKind, IHighlightingConsumer consumer, IJavaScriptFile file);
    public virtual void VisitTsVariableDeclaration(ITsVariableDeclaration variableDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsCastExpression(ITsCastExpression tsCastExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsConstructorDeclaration(ITsConstructorDeclaration tsConstructorDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsConditionalTernaryExpression(ITsConditionalTernaryExpression tsConditionalTernaryExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsImportedName(ITsImportedName tsImportedNameParam, IHighlightingConsumer context);
    public virtual void VisitTsReferenceName(ITsReferenceName tsReferenceNameParam, IHighlightingConsumer context);
    public virtual void VisitTsFromClause(ITsFromClause tsFromClauseParam, IHighlightingConsumer context);
    public virtual void VisitTsImportSpecifierName(ITsImportSpecifierName tsImportSpecifierNameParam, IHighlightingConsumer context);
    public virtual void VisitTsNamespaceImportClause(ITsNamespaceImportClause tsNamespaceImportClauseParam, IHighlightingConsumer context);
    public virtual void VisitTsDefaultImportClause(ITsDefaultImportClause tsDefaultImportClauseParam, IHighlightingConsumer context);
    public virtual void VisitTsImportDeclaration(ITsImportDeclaration tsImportDeclarationParam, IHighlightingConsumer context);
    private void CheckCodeStyleForExternalModuleReference(IHighlightingConsumer context, ITsAmbientModuleReferenceName ambientModuleReferenceName);
    private void CheckForUnusedImport(ITsAmbientModuleReferenceName referenceName, ITreeNode tsImportDeclarationParam, IHighlightingConsumer context, IDeclaredElement de);
    private bool IsReactReference(string name);
    public virtual void VisitTsLambdaExpressionSimpleSignature(ITsLambdaExpressionSimpleSignature tsLambdaExpressionSimpleSignatureParam, IHighlightingConsumer context);
    [CompilerGeneratedAttribute]
private void <Execute>b__10_0(IJavaScriptFile file, IHighlightingConsumer consumer);
    [CompilerGeneratedAttribute]
private IJsFunctionSignature <VisitTsConstructorOverloadDeclaration>b__20_0(ITsConstructorOverloadDeclaration o);
    [CompilerGeneratedAttribute]
private IJsFunctionSignature <VisitTsMemberFunctionOverloadDeclaration>b__21_0(ITsMemberFunctionOverloadDeclaration o);
    [CompilerGeneratedAttribute]
private IJsFunctionSignature <VisitTsFunctionStatementSignature>b__24_0(ITsFunctionStatementSignature o);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Syntax.TypeScriptSyntaxErrorHighlightingStage : JavaScriptDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Util.InspectionProcessUtil : object {
    [ExtensionAttribute]
internal static bool IsEvalOrArgumentsName(string name);
}
[HighlightingSourceAttribute]
public static class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Util.TsErrorHighlighter : object {
    public static void CheckImportedModulePath(IHighlightingConsumer context, string moduleName, ITreeNode ambientModuleName, bool isAmbientContext, IJavaScriptFile file, bool userConfigurable);
    public static void HighlightBooleanValueInAssignment(IJavaScriptExpression expression, bool value, IHighlightingConsumer consumer, IJavaScriptFile file);
    public static bool CheckAssignmentTypeCompatibility(IHighlightingConsumer context, JsInitialResolveContext jsResolveContext, JsTypeResolveResult destinationType, JsTypeResolveResult sourceType, IJavaScriptExpression leftOperand, IJavaScriptExpression rightOperand, ITreeNode otherHighlightedNode, IJavaScriptFile file, string extraDesc);
    public static IHighlighting CheckOverloadSignatureIsCompatibleWithDeclaration(IJsFunctionSignature sourceSignature, IJsFunctionSignature targetSignature, IJsSignatureNode overload, JsInitialResolveContext jsResolveContext);
    private static JsTypeResolveResult GetResultTypeInstantiatedByAny(IJsFunctionSignature functionSignature, JsInitialResolveContext context);
    public static void CheckReturns(IJsFunctionLike func, bool isGenerator, bool isAsync, ITsTypeAnnotation annotation, IHighlightingConsumer context, JsInitialResolveContext resolveContext, JavaScriptFileIndexProcess fileIndex, IFile file, bool hasName, bool isExpression);
    public static void CheckDeclareModifierIsFirst(TreeNodeEnumerable`1<ITokenNode> modifiers, IHighlightingConsumer context, IFile file);
    public static void AssertNoExportOutsideModule(ITreeNode statement, ITsStatement ownerStatement, IHighlightingConsumer context, IFile file);
    public static void AssertExportNoAssignment(ITreeNode statement, ITsStatement ownerStatement, bool seenExportAssignmentInModule, IHighlightingConsumer context, IFile file);
    public static JsModifiers CheckModifiersList(ITypeScriptModifiersOwner node, IHighlightingConsumer context, JsModifiers allowedModifiers, IFile file, TypeScriptLanguageLevel level);
    public static bool TypeParametersAreIdentical(IJsFunctionSignature sig1, IJsFunctionSignature sig2, JsResolveContext ctx);
    public static void DoInFileProcessingOrder(IList`1<IJavaScriptSymbol> decls, IPsiSourceFile myFile, Action`1<IJavaScriptSymbol> onNextFileFound, Action`1<IJavaScriptSymbol> onInSameFileFound);
    public static IHighlighting CheckSignatureAndMemberDuplicates(IDeclaredElement declEl, IDeclaration funcSig, IJsFunctionSignature signature, string name, JsInitialResolveContext ctx, bool oneDeclIsOkay, IList`1<IJsFunctionSignature> signatureCache);
    public static void CheckOverloadsSpecifity(JsResolveContext ctx, IJsFunctionSignature currentSignature, ITreeNode signatureNode, IEnumerable`1<IJsFunctionSignature> previousSignatures, IJsFunctionSignature mainSignature, IHighlightingConsumer consumer, IFile file);
    public static bool IsOverloadOrAmbientOrAbstractSignature(ITreeNode node);
    public static TS2000Error DuplicateIdentifierHighlighting(string conflictName, ITreeNode node);
    public static void CheckFunctionOverloadChain(IHighlightingConsumer context, IEnumerable`1<T> signatures, Func`2<T, string> getName, Func`2<T, ITreeNode> getHlNode, IFile file);
    public static void AddItem(ITreeNode statement, List`1<string> elements, Func`2<T, ITsIdentifierExpression> getIdentifier);
    public static void CheckForDuplicateIdentifierCrossEntity(IHighlightingConsumer context, ITreeNode statement, List`1<string> importedElements, Func`2<ITreeNode, ITsIdentifierExpression> getIdentifier, IFile file, Func`2<ITreeNode, bool> accept);
    public static void CheckForDuplicateIdentifierCrossEntity(IHighlightingConsumer context, ITreeNode statement, List`1<string> importedElements, Func`2<T, ITsIdentifierExpression> getIdentifier, IFile file, Func`2<T, bool> accept);
    public static void CheckForDuplicateIdentifierSameEntity(IHighlightingConsumer context, ITreeNode statement, List`1<string> importedElements, Func`2<ITreeNode, ITsIdentifierExpression> getIdentifier, IFile file, Func`2<ITreeNode, bool> accept);
    public static void CheckForDuplicateIdentifierSameEntity(IHighlightingConsumer context, ITreeNode statement, List`1<string> importedElements, Func`2<T, ITsIdentifierExpression> getIdentifier, IFile file, Func`2<T, bool> accept);
    public static void CheckTypeParamsForDuplicates(IHighlightingConsumer context, TreeNodeEnumerable`1<ITsTypeParameterDeclaration> typeParameterDeclarationsEnumerable, IFile file);
    public static void CheckForReservedName(string entityName, ITsIdentifierExpression identifier, IHighlightingConsumer context, IFile file);
    public static void CheckTypeModifiers(ITsStatement classDeclaration, IHighlightingConsumer context, IFile file, bool parentHasExportAssignment, JsModifiers allowedList, TypeScriptLanguageLevel level);
    public static bool VerifyProperTypeScriptLValue(ITreeNode node, JsResolveContext context);
    public static bool IsRelativeModulePath(string pathNoQuotes);
    public static bool ReportRecursiveReferenceError(IHighlightingConsumer context, IDeclaredElement extendableTypeElement, IDeclaredElement declaredElement, IDeclaredElement via, ITreeNode highlightedNode, IFile file);
    public static DocumentRange GetRangeNextToNodeOrFallback(ITreeNode node);
    public static DocumentRange GetDeclarationKeywordRange(ITreeNode node);
    public static void CheckGeneratorReturnType(IHighlightingConsumer context, IJsUnresolvedType unresolvedReturnType, JsTypeResolveResult resolvedReturnType, ITreeNode highlightedNode, JsInitialResolveContext resolveContext, IJavaScriptFile file, bool async);
    private static bool IsMemberElementInOwnConstructor(ITsExpression expression, ITsMemberElement element);
    public static bool CheckLValue(IHighlightingConsumer consumer, ITsExpression operand, JsResolveContext resolveContext, IJavaScriptFile file, bool isAssignment);
}
[ExtensionAttribute]
public static class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Util.TsResolveDaemonUtil : object {
    private static string DeclarationsCountIdentType;
    public static bool ContainsStringLikeType(IJsResolvedType type, JsResolveContext ctx, bool allowIntersections);
    [ExtensionAttribute]
public static bool ContainsPrimitiveType(IJsResolvedType type, JsResolveContext ctx, bool allowIntersections);
    public static bool BothTypesSupportAssignabilityAnalyse(IJsResolvedType leftType, IJsResolvedType rightType, JsResolveContext context);
    public static bool BothTypesAreStringLike(IJsResolvedType leftType, IJsResolvedType rightType, JsResolveContext context);
    [NotNullAttribute]
public static OneToListMap`2<string, T> GetStaticMembersTable(ITsTypeElement typeElement, JsResolveContext context);
    [NotNullAttribute]
public static OneToListMap`2<string, T> GetMembersTable(ITsTypeElement typeElement, JsResolveContext context);
    [NotNullAttribute]
public static OneToListMap`2<string, IDeclaredElement> GetMembersTable(ITsTypeElement typeElement, Func`2<IDeclaredElement, bool> filter, JsResolveContext context);
    [CanBeNullAttribute]
public static IEnumerable`1<IDeclaredElement> GetDeclaredElementsInScope(ITypeScriptModuleScope scope, JsResolveContext ctx);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Util.TsResolveDaemonUtil/<GetTreeNodes>d__8`1")]
public static IEnumerable`1<ITreeNode> GetTreeNodes(IJsCachedElement element, IJsResolveContext ctx);
    public static IDeclaredElement GetFirstOuterNonVisibleScopeDeclaredElement(IDeclaration decl, IJsDocumentOffsetProvider ctx);
    public static IDeclaredElement GetModuleParentDeclaredElement(ITsModuleDeclaration module, IJsDocumentOffsetProvider ctx);
    public static string GetModuleShortName(ITypeScriptModuleScope modScope, IJsDocumentOffsetProvider ctx);
    [ExtensionAttribute]
public static IEnumerable`1<IJavaScriptSymbol> GetJavaScriptSymbols(IDeclaredElement element, JsResolveContext context, bool filterVisibility);
    private static IEnumerable`1<IJavaScriptSymbol> FilterSymbolsByVisibility(IEnumerable`1<IJavaScriptSymbol> symbols, IJavaScriptSourceFilesVisibilityFilter filter);
    [ExtensionAttribute]
public static int GetDeclarationsCount(IDeclaredElement element, JsResolveContext context);
    [ExtensionAttribute]
public static int GetNonDeclarationSymbolsCount(IDeclaredElement element, JsResolveContext context);
    [ExtensionAttribute]
public static int GetDeclarationsCountExcept(IDeclaredElement element, IDeclaration declarationExcept, JsResolveContext context);
    public static List`1<IDeclaration> GetDeclarationsForElement(IDeclaredElement element, int limit, JsResolveContext jsResolveContext);
    public static string GetFullPresentableName(JsTypeResolveResult typ, JsResolveContext ctx);
    public static string GetFullPresentableName(IJsResolvedType typ, JsResolveContext ctx);
    public static JsTypeResolveResult CalculateAccessorType(ITsObjectPropertyAccessor mad, JsResolveContext jsResolveContext);
    public static ITsType CalculateAccessorType(ITsMemberElement accessor, JsResolveContext jsResolveContext);
    public static JsTypeResolveResult CalculateAccessorType(ITsMemberAccessorDeclaration mad, JsResolveContext jsResolveContext);
    [ExtensionAttribute]
[ContractAnnotationAttribute("null => false")]
public static bool IsOkayForTypeChecks(JsTypeResolveResult type);
    public static ITsModuleDeclaration GetModuleDeclarationForSymbol(IJavaScriptSymbol s, JsResolveContext jsResolveContext, int depth);
    public static ITsModuleElement TryGetModuleElement(ITsImportDeclaration importDecl, JsResolveContext jsResolveContext, string moduleName);
    public static ITsModuleElement TryGetAmbientModuleElement(JsResolveContext jsResolveContext, string moduleName, ITsExternalModuleReferenceName extRefName);
    public static bool HasSignatureDuplicates(IJsFunctionSignature jsSig, IEnumerable`1<IJsFunctionSignature> allSigs, JsResolveContext context, bool skipReturnsCheck);
    public static bool IsPure(ITreeNode node, Func`2<IJavaScriptExpression, bool> customCheck);
    public static bool HasNullOrUndefined(IJsResolvedType leftTypeResolvedType, IJsResolvedType rightTypeResolvedType, JsInitialResolveContext jsResolveContext);
}
[HighlightingSourceAttribute]
public static class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Util.TsStaticnessErrorsHighlighter : object {
    public static IHighlighting HighlightStaticnessErrors(IDeclaredElement declEl, IReferenceExpressionReference rer, JsResolveContext jsResolveContext);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Visibility.TsVisibilityProblemHighlightingProcess : TsDaemonStageProcessBase {
    private SyntaxHighlightingProcess myJavaScriptProcess;
    private JsInitialResolveContext myJsResolveContext;
    private Stack`1<ITypeScriptModuleScope> myScopeStack;
    private IDeclaredElement myExportAssignmentElement;
    private TypeScriptLanguageLevel myLanguageLevel;
    public TsVisibilityProblemHighlightingProcess(IDaemonProcess process, IContextBoundSettingsStore settings, ITsFile file);
    public virtual void VisitNode(ITreeNode node, IHighlightingConsumer context);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void Execute(Action`1<DaemonStageResult> committer);
    public bool IsExportedUpTo(ITsTypeDeclaration decl, ITypeScriptModuleScope stopScope);
    private void CheckAccessibility(ITypeScriptTreeNode anchor, IJsCachedElement declaredElement, Func`2<string, IHighlighting> onPrivateError, Func`2<string, IHighlighting> onModuleError, IHighlightingConsumer consumer);
    private void CheckReferenceName(ITypeScriptTreeNode anchor, ITsImportedName refname, Func`2<string, IHighlighting> onPrivateError, Func`2<string, IHighlighting> onModuleError, IHighlightingConsumer consumer);
    private void CheckReferenceName(ITypeScriptTreeNode anchor, ITsReferenceName refname, Func`2<string, IHighlighting> onPrivateError, Func`2<string, IHighlighting> onModuleError, IHighlightingConsumer consumer);
    private void CheckTypeUsage(ITypeScriptTreeNode anchor, ITsTypeUsage baseType, Func`3<string, ITsTypeUsage, IHighlighting> onPrivateError, Func`3<string, ITsTypeUsage, IHighlighting> onModuleError, IHighlightingConsumer consumer);
    private void CheckTypeAnnotation(ITypeScriptTreeNode anchor, ITsTypeAnnotation annotation, Func`3<string, ITsTypeUsage, IHighlighting> onPrivateError, Func`3<string, ITsTypeUsage, IHighlighting> onModuleError, IHighlightingConsumer consumer);
    private void CheckGenericParameters(ITypeScriptTreeNode anchor, Func`3<string, ITsTypeUsage, IHighlighting> onPrivateError, Func`3<string, ITsTypeUsage, IHighlighting> onModuleError, ITsDeclaredTypeUsage declTypeUsage, IHighlightingConsumer consumer);
    private void CheckParameters(ITypeScriptTreeNode anchor, IEnumerable`1<ITsParameterDeclarationBase> paramms, IHighlightingConsumer consumer, Func`4<string, string, ITreeNode, IHighlighting> onPrivateError, Func`4<string, string, ITreeNode, IHighlighting> onModuleError);
    private bool IsContainingInterfaceExported(ITsTypeMemberDeclaration decl, ITsInterfaceDeclaration& iface);
    private bool IsContainingClassExported(ITsClassMemberDeclaration ctorDecl, ITsClassDeclaration& clas);
    private bool IsContainingClassExported(ITsClassMemberDeclaration ctorDecl);
    private void CheckReferenceForAccessibility(ITsReferenceExpression tsReferenceExpressionParam, IHighlightingConsumer context);
    private void CheckRerForAccessibility(IReferenceExpressionReference rer, IHighlightingConsumer context);
    private bool CheckUpperLevelItems(ITsClassLikeDeclaration parentRer, ITsTypeElement typeElementToCheckAgainst);
    public virtual void VisitTsReferenceExpression(ITsReferenceExpression tsReferenceExpressionParam, IHighlightingConsumer context);
    public virtual void VisitTsBaseTypeClause(ITsBaseTypeClause clause, IHighlightingConsumer context);
    private bool IsExported(ITypeScriptModifiersOwner owner);
    private void VisitBaseTypeClause(ITsBaseTypeClause clause, IHighlightingConsumer context);
    public virtual void VisitTsMemberVariableDeclaration(ITsMemberVariableDeclaration memberVarDecl, IHighlightingConsumer context);
    private void VisitMemberVariableDeclaration(ITsMemberVariableDeclaration memberVarDecl, IHighlightingConsumer context);
    public virtual void VisitTsVariableDeclaration(ITsVariableDeclaration tsVariableDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsPropertySignatureDeclaration(ITsPropertySignatureDeclaration propSigDecl, IHighlightingConsumer context);
    public virtual void VisitTsConstructorDeclaration(ITsConstructorDeclaration ctorDecl, IHighlightingConsumer context);
    public virtual void VisitTsMemberAccessorDeclaration(ITsMemberAccessorDeclaration memAccDecl, IHighlightingConsumer context);
    public virtual void VisitTsCallSignatureDeclaration(ITsCallSignatureDeclaration tsCallSignatureDeclaration, IHighlightingConsumer context);
    public virtual void VisitTsFunctionSignatureDeclaration(ITsFunctionSignatureDeclaration tsFunctionSignatureDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsIndexSignatureDeclaration(ITsIndexSignatureDeclaration indexDecl, IHighlightingConsumer context);
    public virtual void VisitTsMemberFunctionDeclaration(ITsMemberFunctionDeclaration tsMemberFunctionDeclarationParam, IHighlightingConsumer context);
    private void VisitMemberFuncDeclaration(ITsMemberFunctionDeclaration tsMemberFunctionDeclarationParam, IHighlightingConsumer context);
    public virtual void VisitTsFunctionStatement(ITsFunctionStatement tsFunctionStatementParam, IHighlightingConsumer context);
    public virtual void VisitTsTypeParameterDeclaration(ITsTypeParameterDeclaration tsTypeParameterDeclarationParam, IHighlightingConsumer context);
    [CompilerGeneratedAttribute]
private void <Execute>b__9_0(IJavaScriptFile file, IHighlightingConsumer consumer);
}
[DaemonStageAttribute("16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.Stages.TypeScript.Visibility.TypeScriptVisibilityProblemHighlightingStage : JavaScriptDaemonStageBase {
    protected bool ShouldRunOnGenerated { get; }
    protected virtual bool IsSupported(IPsiSourceFile sourceFile);
    protected virtual bool get_ShouldRunOnGenerated();
    protected virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IJavaScriptFile file);
}
[ConfigurableSeverityHighlightingAttribute("UndeclaredGlobalVariableUsing", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UndeclaredGlobalVariableUsingError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UndeclaredGlobalVariableUsingError(IReferenceExpression referenceExpression);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnexpectedAmbientDeclarationError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnexpectedAmbientDeclarationError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnexpectedDeclarationInNonModuleContextError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <TypeUsageNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode TypeUsageNode { get; }
    public string Name { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnexpectedDeclarationInNonModuleContextError(ITreeNode typeUsageNode, string name);
    [CompilerGeneratedAttribute]
public ITreeNode get_TypeUsageNode();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnexpectedExportDeclarationError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnexpectedExportDeclarationError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnexpectedModifierError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITreeNode <ModifierNode>k__BackingField;
    public ITreeNode ModifierNode { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnexpectedModifierError(ITreeNode modifierNode);
    [CompilerGeneratedAttribute]
public ITreeNode get_ModifierNode();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnexpectedRequiredParameterAfterOptionalError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnexpectedRequiredParameterAfterOptionalError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.JavaScript.Errors.TypeScriptErrors")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnexpectedRequiredParameterAfterRestError : JavaScriptHighlightingBase {
    private string MESSAGE;
    [CompilerGeneratedAttribute]
private ITsParameterDeclaration <Parameter>k__BackingField;
    public ITsParameterDeclaration Parameter { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnexpectedRequiredParameterAfterRestError(ITsParameterDeclaration parameter);
    [CompilerGeneratedAttribute]
public ITsParameterDeclaration get_Parameter();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("JsUnreachableCode", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnreachableCodeWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeRange <TreeRange>k__BackingField;
    public ITreeRange TreeRange { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnreachableCodeWarning(ITreeRange treeRange);
    [CompilerGeneratedAttribute]
public ITreeRange get_TreeRange();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("JumpMustBeInLoop", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnresolvedJumpBreakMustBeInLoopWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptStatement <Statement>k__BackingField;
    public IJavaScriptStatement Statement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnresolvedJumpBreakMustBeInLoopWarning(IJavaScriptStatement statement);
    [CompilerGeneratedAttribute]
public IJavaScriptStatement get_Statement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("JumpMustBeInLoop", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnresolvedJumpContinueMustBeInLoopWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptStatement <Statement>k__BackingField;
    public IJavaScriptStatement Statement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnresolvedJumpContinueMustBeInLoopWarning(IJavaScriptStatement statement);
    [CompilerGeneratedAttribute]
public IJavaScriptStatement get_Statement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnsafeCommaInObjectPropertiesList", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnsafeCommaInObjectPropertiesListWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Comma>k__BackingField;
    public ITreeNode Comma { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnsafeCommaInObjectPropertiesListWarning(ITreeNode comma);
    [CompilerGeneratedAttribute]
public ITreeNode get_Comma();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedInheritedParameter", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnusedInheritedParameterWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedInheritedParameterWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedLocals", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnusedLocalClassWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedLocalClassWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedLocals", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnusedLocalFunctionWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedLocalFunctionWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedLocalImport", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnusedLocalImportWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITreeNode Declaration { get; }
    public string ShortName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedLocalImportWarning(ITreeNode declaration, string shortName);
    [CompilerGeneratedAttribute]
public ITreeNode get_Declaration();
    [CompilerGeneratedAttribute]
public string get_ShortName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedLocals", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnusedLocalVariableWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedLocalVariableWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedParameter", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnusedParameterWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedParameterWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UnusedProperty", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UnusedPropertyWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UnusedPropertyWarning(IDeclaration declaration);
    [CompilerGeneratedAttribute]
public IDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UsageOfDefinitelyUnassignedValue", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UsageOfDefinitelyUnassignedValueWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UsageOfDefinitelyUnassignedValueWarning(IReferenceExpression expression);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UsageOfPossiblyUnassignedValue", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UsageOfPossiblyUnassignedValueWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UsageOfPossiblyUnassignedValueWarning(IReferenceExpression expression);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UseAsInsteadOfTypeCast", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UseAsInsteadOfTypeCastWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsCastExpression <Expression>k__BackingField;
    public ITsCastExpression Expression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UseAsInsteadOfTypeCastWarning(ITsCastExpression expression);
    [CompilerGeneratedAttribute]
public ITsCastExpression get_Expression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UseOfImplicitGlobalInFunctionScope", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UseOfImplicitGlobalInFunctionScopeWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression Expression { get; }
    public string VariableName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UseOfImplicitGlobalInFunctionScopeWarning(IReferenceExpression expression, string variableName);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_Expression();
    [CompilerGeneratedAttribute]
public string get_VariableName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UseOfPossiblyUnassignedProperty", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UseOfPossiblyUnassignedPropertyWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <PropertyNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsMemberVariableDeclaration <OwnerDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITsMemberVariableDeclaration <OtherDeclaration>k__BackingField;
    public ITreeNode PropertyNode { get; }
    public ITsMemberVariableDeclaration OwnerDeclaration { get; }
    public ITsMemberVariableDeclaration OtherDeclaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UseOfPossiblyUnassignedPropertyWarning(ITreeNode propertyNode, ITsMemberVariableDeclaration ownerDeclaration, ITsMemberVariableDeclaration otherDeclaration);
    [CompilerGeneratedAttribute]
public ITreeNode get_PropertyNode();
    [CompilerGeneratedAttribute]
public ITsMemberVariableDeclaration get_OwnerDeclaration();
    [CompilerGeneratedAttribute]
public ITsMemberVariableDeclaration get_OtherDeclaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UsingOfReservedWordError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UsingOfReservedWordError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    public ITreeNode Declaration { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UsingOfReservedWordError(ITreeNode declaration, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNode get_Declaration();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("UsingOfReservedWord", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.UsingOfReservedWordWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITreeNode <Declaration>k__BackingField;
    public ITreeNode Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public UsingOfReservedWordWarning(ITreeNode declaration);
    [CompilerGeneratedAttribute]
public ITreeNode get_Declaration();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableCanBeMadeConst", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.VariableCanBeMadeConstWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ISingleNameBinding <VariableDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ISingleNameBinding VariableDeclaration { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string VarName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public VariableCanBeMadeConstWarning(ISingleNameBinding variableDeclaration, IDeclaredElement declaredElement, string varName);
    [CompilerGeneratedAttribute]
public ISingleNameBinding get_VariableDeclaration();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableCanBeMadeLet", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.VariableCanBeMadeLetWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ISingleNameBinding <VariableDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredElement <DeclaredElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ISingleNameBinding VariableDeclaration { get; }
    public IDeclaredElement DeclaredElement { get; }
    public string VarName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public VariableCanBeMadeLetWarning(ISingleNameBinding variableDeclaration, IDeclaredElement declaredElement, string varName);
    [CompilerGeneratedAttribute]
public ISingleNameBinding get_VariableDeclaration();
    [CompilerGeneratedAttribute]
public IDeclaredElement get_DeclaredElement();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableCanBeMovedToInnerBlock", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.VariableCanBeMovedToInnerBlockWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ISingleNameBinding <VariableDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private IBlock <TargetBlock>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ISingleNameBinding VariableDeclaration { get; }
    public IBlock TargetBlock { get; }
    public string VarName { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public VariableCanBeMovedToInnerBlockWarning(ISingleNameBinding variableDeclaration, IBlock targetBlock, string varName);
    [CompilerGeneratedAttribute]
public ISingleNameBinding get_VariableDeclaration();
    [CompilerGeneratedAttribute]
public IBlock get_TargetBlock();
    [CompilerGeneratedAttribute]
public string get_VarName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableUsedBeforeDeclared", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.VariableUsedBeforeDeclaredWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public IVariableDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public VariableUsedBeforeDeclaredWarning(IReferenceExpression referenceExpression, IVariableDeclaration declaration);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    [CompilerGeneratedAttribute]
public IVariableDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableUsedInInnerScopeBeforeDeclared", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.VariableUsedInInnerScopeBeforeDeclaredWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public IVariableDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public VariableUsedInInnerScopeBeforeDeclaredWarning(IReferenceExpression referenceExpression, IVariableDeclaration declaration);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    [CompilerGeneratedAttribute]
public IVariableDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("VariableUsedOutOfScope", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.VariableUsedOutOfBlockWarning : JsHintHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IReferenceExpression <ReferenceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableDeclaration <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public IReferenceExpression ReferenceExpression { get; }
    public IVariableDeclaration Declaration { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public VariableUsedOutOfBlockWarning(IReferenceExpression referenceExpression, IVariableDeclaration declaration);
    [CompilerGeneratedAttribute]
public IReferenceExpression get_ReferenceExpression();
    [CompilerGeneratedAttribute]
public IVariableDeclaration get_Declaration();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("WithStatementUsingError", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.WithStatementUsingError : JavaScriptStrictHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IWithStatement <Statement>k__BackingField;
    public IWithStatement Statement { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public WithStatementUsingError(IWithStatement statement);
    [CompilerGeneratedAttribute]
public IWithStatement get_Statement();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("WrongExpressionStatement", "JAVA_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.WrongExpressionStatementWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private IJavaScriptExpression <JavaScriptExpression>k__BackingField;
    public IJavaScriptExpression JavaScriptExpression { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public WrongExpressionStatementWarning(IJavaScriptExpression javaScriptExpression);
    [CompilerGeneratedAttribute]
public IJavaScriptExpression get_JavaScriptExpression();
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[ConfigurableSeverityHighlightingAttribute("WrongPublicModifierSpecification", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.WrongPublicModifierSpecificationWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITypeScriptModifiersOwner <ModifiersOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PresenceOrAbsense>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITypeScriptModifiersOwner ModifiersOwner { get; }
    public string PresenceOrAbsense { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public WrongPublicModifierSpecificationWarning(ITypeScriptModifiersOwner modifiersOwner, string presenceOrAbsense, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITypeScriptModifiersOwner get_ModifiersOwner();
    [CompilerGeneratedAttribute]
public string get_PresenceOrAbsense();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
[ConfigurableSeverityHighlightingAttribute("WrongRequireRelativePath", "TYPE_SCRIPT")]
public class JetBrains.ReSharper.Daemon.JavaScript.Stages.WrongRequireRelativePathWarning : JavaScriptHighlightingBase {
    private string MESSAGE;
    public static string HIGHLIGHTING_ID;
    [CompilerGeneratedAttribute]
private ITsExpression <Literal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PresenceOrAbsense>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    public ITsExpression Literal { get; }
    public string PresenceOrAbsense { get; }
    public DocumentRange Range { get; }
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public WrongRequireRelativePathWarning(ITsExpression literal, string presenceOrAbsense, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITsExpression get_Literal();
    [CompilerGeneratedAttribute]
public string get_PresenceOrAbsense();
    [CompilerGeneratedAttribute]
public DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
    public sealed virtual ICodeStyleRule GetRelatedCodeStyleRule();
}
public class JetBrains.ReSharper.Daemon.JavaScript.TooltipExtenderWithRequestsBase : object {
    private ISchemaDownloader myRequestHelper;
    public TooltipExtenderWithRequestsBase(ISchemaDownloader requestHelper);
    protected string ReadData(string url);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.JavaScript.TypeScriptIdentifierTooltipProvider : IdentifierTooltipProvider`1<TypeScriptLanguage> {
    public TypeScriptIdentifierTooltipProvider(ISolution solution, IDeclaredElementDescriptionPresenter presenter, Lifetime lifetime, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor);
    protected virtual DeclaredElementPresenterStyle GetPresenterStyle(PsiLanguageType primaryLanguage, PsiLanguageType projectLanguage);
    protected virtual DeclaredElementInstance GetCustomElementInstance(ITreeNode element);
    protected virtual RichTextBlock GetPresentationIncludingDocumentation(IDeclaredElement declaredElement, ISubstitution substitution, IFile psiFile, DocumentRange documentRange, DeclaredElementPresenterStyle presenterStyle);
    private void AddTypeAliasInformation(IDeclaredElement declaredElement, IFile psiFile, DocumentRange documentRange, RichTextBlock presentation, DeclaredElementPresenterStyle presenterStyle);
}
internal class JetBrains.ReSharper.Daemon.JavaScript.UsageChecking.JavaScriptPresentationHelper : PresentationHelper {
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.JavaScript.UsageChecking.JavaScriptUnusedDeclarationAnalyzer : object {
    private IUsageChecker myUsageChecker;
    private IHighlightingConsumer myConsumer;
    private DeclarationInfoCache myDeclarationInfoCache;
    public JavaScriptUnusedDeclarationAnalyzer(IUsageChecker usageChecker, IHighlightingConsumer consumer, DeclarationInfoCache declarationInfoCache);
    public sealed virtual void ProcessDeclaration(IDeclarationInfo info);
}
internal class JetBrains.ReSharper.Daemon.JavaScript.UsageChecking.JavaScriptUsageAnalyzer : UsageAnalyzer {
    public JavaScriptUsageAnalyzer(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
}
[ConfigurableSeverityImplementedForLanguageAttribute("UnusedMember.Global", "JAVA_SCRIPT")]
[ConfigurableSeverityImplementedForLanguageAttribute("UnusedType.Global", "JAVA_SCRIPT")]
[LanguageAttribute("JetBrains.ReSharper.Psi.JavaScript.LanguageImpl.JavaScriptLikeBaseLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.JavaScript.UsageChecking.JavaScriptUsageCheckingServices : UsageCheckingServices {
    private static DeclaredElementType[] ourDeclaredElementTypes;
    public IList`1<DeclaredElementType> SupportedElementTypes { get; }
    public JavaScriptUsageCheckingServices(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
    private static JavaScriptUsageCheckingServices();
    public virtual IList`1<DeclaredElementType> get_SupportedElementTypes();
    public virtual bool GetUnusedDeclarationsSupported();
    public virtual IEnumerable`1<IDeclaration> TopLevelDeclarations(IFile file);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.JavaScript.UsageChecking.JavaScriptUsageCheckingServices/<TopLevelDeclarations>d__6")]
private static IEnumerable`1<IDeclaration> TopLevelDeclarations(ITreeNode node, bool isOnTopLevel);
    public virtual IUnusedDeclarationAnalyzer CreateUnusedDeclarationAnalyzer(IUsageChecker usageChecker, PsiLanguageType language, IHighlightingConsumer consumer, DeclarationInfoCache declarationInfoCache, UsageCheckingServiceManager usageCheckingServiceManager, IContextBoundSettingsStore settingsStore, IPsiSourceFile sourceFile);
    public virtual Nullable`1<ElementId> GetElementId(IDeclaredElement element, bool forceCreateForPrivateMembers);
    public virtual IDeclarationInfo CreateWrapperDeclarationInfo(IDeclaration declaration, IDeclaredElement declaredElement);
    public virtual IElementInfo CreateWrapperElementInfo(IDeclaredElement declaredElement, PsiLanguageType language);
}
internal class JetBrains.ReSharper.Daemon.JavaScript.UsageChecking.JavaScriptWrapperDeclarationInfo : WrapperDeclarationInfoBase {
    public IEnumerable`1<IDeclarationInfo> MemberDeclarations { get; }
    public IEnumerable`1<IDeclarationInfo> AccessorDeclarations { get; }
    public IEnumerable`1<IDeclarationInfo> ParameterDeclarations { get; }
    public JavaScriptWrapperDeclarationInfo(IDeclaration declaration, JavaScriptWrapperMemberInfo elementInfo);
    public virtual IEnumerable`1<IDeclarationInfo> get_MemberDeclarations();
    public virtual IEnumerable`1<IDeclarationInfo> get_AccessorDeclarations();
    public virtual IEnumerable`1<IDeclarationInfo> get_ParameterDeclarations();
}
internal class JetBrains.ReSharper.Daemon.JavaScript.UsageChecking.JavaScriptWrapperMemberInfo : WrapperElementInfoBase {
    public IMemberInfo Owner { get; }
    public IMembersOwnerInfo MembersOwner { get; }
    public JavaScriptWrapperMemberInfo(IJavaScriptProperty property, PsiLanguageType language);
    public virtual IMemberInfo get_Owner();
    public sealed virtual IMembersOwnerInfo get_MembersOwner();
    public virtual int GetFlags(int mask);
}
public class JetBrains.ReSharper.Daemon.JavaScript.Util.HighlighterOptions : ValueType {
    public bool SemanticFunctionColors;
    public bool SemanticTypeGuardColors;
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.JavaScript.Util.JavaScriptIdentifierHighlighter : object {
    private LanguageManager myLanguageManager;
    public JavaScriptIdentifierHighlighter(LanguageManager languageManager);
    [CanBeNullAttribute]
public IJavaScriptIdentifierHighlighter CreateHighlighter(PsiLanguageType language);
}
[ExtensionAttribute]
[HighlightingSourceAttribute]
public static class JetBrains.ReSharper.Daemon.JavaScript.Util.SyntaxCheckerUtil : object {
    public static bool CanBeNewArgument(IJavaScriptExpression expression);
    public static bool CanBeInvoked(IJavaScriptExpression invokedExpression);
    public static bool IsIdentifierExpression(ICompoundExpression value);
    public static bool CheckSingleInASection(IJavaScriptStatement statement);
    public static bool CheckSingleInTsElement(ITreeNode statement);
    public static bool CheckIsNonTerminatableOverload(ITreeNode statement);
    public static void AddMissingSemicolonHighlighting(ITerminationSemicolonOwner statement, IHighlightingConsumer context, IJavaScriptFile file, TerminationStyle terminationStyle);
    public static void DropSemicolonHighlighting(ITreeNode statement, IHighlightingConsumer context, IJavaScriptFile file, TerminationStyle terminationStyle);
    [ExtensionAttribute]
public static bool HasLineBreakBeforeNextMeaningfulToken(ITreeNode node);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.JavaScript.ZoneMarker : object {
}
[ContainsContextConsumerAttribute]
public class JetBrains.ReSharper.Daemon.Razor.ContextHighlighters.RazorMatchingBracesContextHighlighter : MatchingBraceContextHighlighterBase`1<RazorLanguage> {
    [CanBeNullAttribute]
[AsyncContextConsumerAttribute]
public static Action ProcessDataContext(Lifetime lifetime, IPsiDocumentRangeView psiDocumentRangeView, InvisibleBraceHintManager invisibleBraceHintManager, MatchingBraceSuggester matchingBraceSuggester, MatchingBraceConsumerFactory consumerFactory, HighlightingProlongedLifetime prolongedLifetime);
    protected virtual void TryHighlightToLeft(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    protected virtual void TryHighlightToRight(MatchingHighlightingsConsumer consumer, ITokenNode selectedToken, TreeOffset treeOffset);
    [CanBeNullAttribute]
private RichTextBlock GetHintText(ITextControl textControl, ITreeNode lBraceNode);
    protected virtual bool IsLeftBracket(TokenNodeType tokenType);
    protected virtual bool IsRightBracket(TokenNodeType tokenType);
    protected virtual bool Match(TokenNodeType token1, TokenNodeType token2);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.CodeCleanup.RazorCSharpOptimizeUsingsLanguageHelper : object {
    public sealed virtual bool IsAvailable(IPsiSourceFile sourceFile);
    public sealed virtual void PostProcess(IPsiSourceFile sourceFile, IRangeMarker rangeMarker);
}
[CodeCleanupModuleAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.CodeCleanup.RazorParenthesisInImplicitExpressionsCleanup : object {
    public string Name { get; }
    public PsiLanguageType LanguageType { get; }
    public ICollection`1<CodeCleanupOptionDescriptor> Descriptors { get; }
    public bool IsAvailableOnSelection { get; }
    public sealed virtual string get_Name();
    public sealed virtual PsiLanguageType get_LanguageType();
    public sealed virtual ICollection`1<CodeCleanupOptionDescriptor> get_Descriptors();
    public sealed virtual bool get_IsAvailableOnSelection();
    public sealed virtual void SetDefaultSetting(CodeCleanupProfile profile, DefaultProfileType profileType);
    public sealed virtual bool IsAvailable(IPsiSourceFile sourceFile);
    public sealed virtual bool IsAvailable(CodeCleanupProfile profile);
    public sealed virtual void Process(IPsiSourceFile sourceFile, IRangeMarker rangeMarker, CodeCleanupProfile profile, IProgressIndicator progressIndicator, IUserDataHolder cache);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Highlightings.BlazorDuplicatedRenderModeDirectiveHighlighting : RazorErrorHighlighting {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IRazorRenderModeDirective <RenderModeDirective>k__BackingField;
    public IRazorRenderModeDirective RenderModeDirective { get; private set; }
    public BlazorDuplicatedRenderModeDirectiveHighlighting(IRazorRenderModeDirective renderModeDirective, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public IRazorRenderModeDirective get_RenderModeDirective();
    [CompilerGeneratedAttribute]
private void set_RenderModeDirective(IRazorRenderModeDirective value);
}
[RegisterConfigurableSeverityAttribute("Blazor.EditorRequired", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MissedValueForRequiredAttribute_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MissedValueForRequiredAttribute_Text", "4")]
[ConfigurableSeverityHighlightingAttribute("Blazor.EditorRequired", "Blazor")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Highlightings.BlazorEditorRequiredHighlighting : RazorErrorHighlighting {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private RazorTag <RazorTag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRenderFragment>k__BackingField;
    public RazorTag RazorTag { get; private set; }
    public string ParameterName { get; private set; }
    public bool IsRenderFragment { get; private set; }
    public BlazorEditorRequiredHighlighting(RazorTag razorTag, string parameterName, bool isRenderFragment, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public RazorTag get_RazorTag();
    [CompilerGeneratedAttribute]
private void set_RazorTag(RazorTag value);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
    [CompilerGeneratedAttribute]
private void set_ParameterName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsRenderFragment();
    [CompilerGeneratedAttribute]
private void set_IsRenderFragment(bool value);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Highlightings.RazorNotEnclosedBlockStatementInCodeHighlighting : RazorErrorHighlighting {
    [CompilerGeneratedAttribute]
private NestedStatementsOwner <NestedBlock>k__BackingField;
    public NestedStatementsOwner NestedBlock { get; }
    public RazorNotEnclosedBlockStatementInCodeHighlighting(NestedStatementsOwner nestedBlock, DocumentRange documentRange);
    [CompilerGeneratedAttribute]
public NestedStatementsOwner get_NestedBlock();
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.AsyncProblemAnalyzer : ElementProblemAnalyzer`1<IManagedExpression> {
    [CompilerGeneratedAttribute]
private IProjectFileTypeServices <projectFileTypeServices>P;
    public AsyncProblemAnalyzer(IProjectFileTypeServices projectFileTypeServices);
    protected virtual void Run(IManagedExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ProjectFileTypeAttribute("JetBrains.ProjectModel.RazorComponentProjectFileType", "16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.BlazorAsyncMethodProblemAnalyzerUtil : RazorCSharpAsyncMethodProblemAnalyzerUtil {
    private Lazy`1<IRazorPsiServices> myRazorPsiServices;
    public BlazorAsyncMethodProblemAnalyzerUtil(Lazy`1<IRazorPsiServices> razorPsiServices);
    public virtual bool IsAwaitForeachAllowed(IForeachStatement statement);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.BlazorLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.BlazorObsoleteAnalysis : HtmlObsoleteAnalysis {
    public BlazorObsoleteAnalysis(HtmlLanguage language);
    public virtual void ProcessBeforeInterior(ITreeNode element, ContextType context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.NullableExpressionsProblemAnalyzer : ElementProblemAnalyzer`1<IInvocationExpression> {
    [CompilerGeneratedAttribute]
private RazorReferencedAssembliesService <razorReferencedAssembliesService>P;
    [CompilerGeneratedAttribute]
private IProjectFileTypeServices <projectFileTypeServices>P;
    private static Key`1<ProjectFileType> ourIsApplicableKey;
    public NullableExpressionsProblemAnalyzer(RazorReferencedAssembliesService razorReferencedAssembliesService, IProjectFileTypeServices projectFileTypeServices);
    private static NullableExpressionsProblemAnalyzer();
    protected virtual void Run(IInvocationExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.RazorArgumentProblemAnalyzer : ElementProblemAnalyzer`1<IReferenceExpression> {
    [CompilerGeneratedAttribute]
private ILanguageManager <languageManager>P;
    public RazorArgumentProblemAnalyzer(ILanguageManager languageManager);
    protected virtual void Run(IReferenceExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.RazorComponentNotEnclosedBlockStatementInCodeProblemAnalyzer : RazorNotEnclosedBlockStatementInCodeProblemAnalyzer {
    public RazorComponentNotEnclosedBlockStatementInCodeProblemAnalyzer(IProjectFileTypeServices projectFileTypeServices);
    protected virtual void Run(ICSharpStatement statement, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[ProjectFileTypeAttribute("JetBrains.ProjectModel.RazorProjectFileType", "16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.RazorCSharpAsyncMethodProblemAnalyzerUtil : CSharpAsyncMethodProblemAnalyzerUtil {
    [CompilerGeneratedAttribute]
private Lazy`1<IRazorPsiServices> <razorPsiServices>P;
    public RazorCSharpAsyncMethodProblemAnalyzerUtil(Lazy`1<IRazorPsiServices> razorPsiServices);
    public virtual bool ContainsAwait(ITreeNode body);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.RazorNotEnclosedBlockStatementInCodeProblemAnalyzer : ElementProblemAnalyzer`1<ICSharpStatement> {
    [CompilerGeneratedAttribute]
private IProjectFileTypeServices <projectFileTypeServices>P;
    public RazorNotEnclosedBlockStatementInCodeProblemAnalyzer(IProjectFileTypeServices projectFileTypeServices);
    protected virtual void Run(ICSharpStatement statement, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
[PsiComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Analysis.RazorStringVerbatimityInspectionsSuppressor : object {
    public sealed virtual bool ShouldSuppressChange(IStringLiteralOwner stringLiteralOwner, StringVerbatimity from, StringVerbatimity to, ElementProblemAnalyzerData data);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.BlazorComponentAttributeProcess : object {
    private IClrTypeName myEditorRequiredAttributeName;
    private IClrTypeName myParameterAttributeName;
    private string myRenderFragmentName;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private IFile <File>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    public IFile File { get; }
    public BlazorComponentAttributeProcess(IDaemonProcess process, IFile psiFile);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_File();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.BlazorDaemonStage : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.BlazorRenderModeDirectiveProcess : object {
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private IFile <File>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    public IFile File { get; }
    public BlazorRenderModeDirectiveProcess(IDaemonProcess process, IFile psiFile);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_File();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[PsiComponentAttribute("0")]
internal class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.GlobalUsings.RazorImportsGlobalUsingInfoProvider : object {
    private RazorNamespaceImportsWithIncludesCache myIncludesCache;
    public RazorImportsGlobalUsingInfoProvider(RazorNamespaceImportsWithIncludesCache includesCache);
    public sealed virtual bool IsAvailable(ICSharpFile file);
    public sealed virtual void Collect(ICSharpFile file, Dictionary`2<IPsiSourceFile, GlobalUsingInfo[]> usingsPerFile);
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.RazorCSharpDaemonStage : RazorDaemonStage {
    protected virtual RazorDaemonStageProcess CreateRazorDaemonStageProcess(IDaemonProcess process, CollectUsagesStageProcess collectUsagesStageProcess);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.RazorCSharpDaemonStageProcess : RazorDaemonStageProcess {
    private ResolveProblemHighlighter myResolveProblemHighlighter;
    public RazorCSharpDaemonStageProcess(IDaemonProcess process, CollectUsagesStageProcess collectUsagesStageProcess);
    protected virtual void ProcessReference(IHighlightingConsumer consumer, IReference reference, UsageState additionalState);
}
[SolutionComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.RazorCSharpFileIncludingService : object {
    public sealed virtual bool TryGetFileIncluded(IPsiSourceFile sourceFile, Boolean& fileIncluded);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.RazorCSharpIdentifierTooltipProvider : IdentifierTooltipProvider`1<RazorCSharpLanguage> {
    public RazorCSharpIdentifierTooltipProvider(Lifetime lifetime, ISolution solution, IDeclaredElementDescriptionPresenter presenter, DeclaredElementPresenterTextStylesService textStylesService, IIdentifierTooltipSuppressor identifierTooltipSuppressor, DeclaredElementPresenterTextStyles textStyles);
    protected virtual PsiLanguageType SelectPresentationLanguage(IDeclaredElement declaredElement, IFile psiFile);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.RazorCSharpLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Resolve.RazorCSharpAccessRightsErrorHandler : AccessRightsErrorHandler {
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Resolve.RazorCSharpErrorHandler : RazorLayoutAndSectionErrorHandler {
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.Resolve.RazorCSharpPathErrorHandler : PathErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.CSharp.CSharpLanguage", "16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.UsageChecking.RazorCSharpCodeBehindUsageProcessor : object {
    private static UsageState UsageMask;
    public sealed virtual void ProcessElement(ITreeNode treeNode, IParameters parameters);
    public sealed virtual void ProcessMemberUsage(ITypeMember member, IReference reference, IParameters parameters);
    public sealed virtual void ProcessDeclaration(IDeclaration declaration, IDeclaredElement element, IParameters parameters);
}
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.UsageChecking.RazorCSharpUsageAnalyzer : UsageAnalyzer {
    public RazorCSharpUsageAnalyzer(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
    public virtual void ProcessElement(ITreeNode node, IParameters parameters);
    private static void ApplyImplicitUseType(IParameters parameters, IType declaredType, bool withMemberTypes, IAccessContext accessContext);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.RazorCSharpLanguage", "16")]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.Stages.UsageChecking.RazorUsageCheckingServices : UsageCheckingServices {
    public RazorUsageCheckingServices(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Razor.CSharp.ZoneMarker : object {
}
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorAddImportNamespaceQuickFix : ImportQuickFixBase {
    [ItemNotNullAttribute]
[NotNullAttribute]
private String[] myNamespaces;
    public RazorAddImportNamespaceQuickFix(IReference reference, String[] namespaces);
    public virtual IEnumerable`1<IBulbAction> CreateBulbActions();
    public virtual bool IsAvailable(IUserDataHolder cache);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorClosingBraceErrorHighlighting : RazorErrorHighlighting {
    public RazorClosingBraceErrorHighlighting(DocumentRange documentRange, Object[] args);
}
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorCreateComponentQuickBulbAction : object {
    [NotNullAttribute]
private IReference myReference;
    public string Text { get; }
    public RazorCreateComponentQuickBulbAction(IReference reference);
    public sealed virtual string get_Text();
    public sealed virtual void Execute(ISolution solution, ITextControl textControl);
}
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorCreateComponentQuickFix : object {
    public static Guid BLAZOR_COMPONENT_TEMPLATE_ID;
    [NotNullAttribute]
private IReference myReference;
    public string Text { get; }
    public RazorCreateComponentQuickFix(IReference reference);
    private static RazorCreateComponentQuickFix();
    public string get_Text();
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    private IEnumerable`1<IBulbAction> CreateBulbActions();
}
internal static class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorCreateComponentUtils : object {
    public static String[] GetHtmlTagAttributes(IHtmlTagReference reference);
    private static bool CanGenerateParameterByAttributeName(string attributeName);
    public static ISet`1<string> GetImportedNamespaces(IRazorFile razorFile);
    private static bool TryGetNewComponentFolder(IProject project, string probeFolderName, string componentFileName, IProjectFolder& projectFolder);
    public static IProjectFolder GetNewComponentFolder(IProject project, string componentFileName, IProjectFolder currentFolder);
    public static string GetAttributesText(IEnumerable`1<string> attributes);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorErrorHighlighting : HtmlErrorHighlighting {
    public RazorErrorHighlighting(string tooltipTextFormat, DocumentRange documentRange, Object[] args);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorIdentifierExpectedErrorHighlighting : RazorErrorHighlighting {
    public RazorIdentifierExpectedErrorHighlighting(string tooltipTextFormat, DocumentRange documentRange, Object[] args);
}
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorImportUsingBulbItem : object {
    [NotNullAttribute]
private string myNamespaceName;
    public string Text { get; }
    public RazorImportUsingBulbItem(string namespaceName);
    public sealed virtual string get_Text();
    public sealed virtual void Execute(ISolution solution, ITextControl textControl);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorNotEnclosedBlockStatementHighlighting : RazorErrorHighlighting {
    [CompilerGeneratedAttribute]
private ITreeRange <TreeRange>k__BackingField;
    public ITreeRange TreeRange { get; }
    public RazorNotEnclosedBlockStatementHighlighting(ITreeRange treeRange);
    [CompilerGeneratedAttribute]
public ITreeRange get_TreeRange();
}
[RegisterConfigurableSeverityAttribute("Razor.AssemblyNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownRazorAssembly_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownRazorAssembly_Text", "5")]
[ConfigurableSeverityHighlightingAttribute("Razor.AssemblyNotResolved", "Razor")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorNotResolvedAssemblyHighlighting : RazorErrorHighlighting {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    public IReference Reference { get; }
    public RazorNotResolvedAssemblyHighlighting(IReference reference);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("Razor.LayoutNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownRazorLayout_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownRazorLayout_Text", "5")]
[ConfigurableSeverityHighlightingAttribute("Razor.LayoutNotResolved", "Razor,CSHARP")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorNotResolvedLayoutHighlighting : RazorErrorHighlighting {
    private static string SEVERITY_ID;
    private IReference myReference;
    public RazorNotResolvedLayoutHighlighting(IReference reference);
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("Razor.SectionNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownRazorSection_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "UnknownRazorSection_Text", "5")]
[ConfigurableSeverityHighlightingAttribute("Razor.SectionNotResolved", "Razor,CSHARP")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorNotResolvedSectionHighlighting : RazorErrorHighlighting {
    private static string SEVERITY_ID;
    private IReference myReference;
    public RazorNotResolvedSectionHighlighting(IReference reference);
    public virtual bool IsValid();
}
[RegisterConfigurableSeverityAttribute("RazorNullConditionalOperatorHighlighting", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Feature.Services.Web.Resources.Strings", "RazorNullConditionalOperatorHighlighting_Settings_TooltipTextFormat", "", "JetBrains.ReSharper.Feature.Services.Web.Resources.Strings", "RazorUnresolvedComponentWarningHighlighting_Settings_TooltipTextFormat", "4")]
[ConfigurableSeverityHighlightingAttribute("RazorNullConditionalOperatorHighlighting", "Razor")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorNullConditionalOperatorHighlighting : RazorWarningHighlighting {
    private static string SEVERITY_ID;
    public RazorNullConditionalOperatorHighlighting(DocumentRange range);
}
[ShellComponentAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorQuickFixRegistrar : object {
    public IEnumerable`1<Type> Dependencies { get; }
    public sealed virtual IEnumerable`1<Type> get_Dependencies();
    public sealed virtual void Register(IQuickFixesRegistrar table);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorReservedKeywordErrorHighlighting : RazorErrorHighlighting {
    [CompilerGeneratedAttribute]
private IHtmlErrorElement <Error>k__BackingField;
    [NotNullAttribute]
public IHtmlErrorElement Error { get; }
    public RazorReservedKeywordErrorHighlighting(IHtmlErrorElement error);
    [CompilerGeneratedAttribute]
public IHtmlErrorElement get_Error();
    public virtual bool IsValid();
}
public static class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups : object {
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorTransitionInsideCodeHighlighting : RazorErrorHighlighting {
    [CompilerGeneratedAttribute]
private ITreeRange <TreeRange>k__BackingField;
    public ITreeRange TreeRange { get; }
    public RazorTransitionInsideCodeHighlighting(ITreeRange treeRange);
    [CompilerGeneratedAttribute]
public ITreeRange get_TreeRange();
}
[RegisterConfigurableSeverityAttribute("Razor.UnresolvedComponent", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Feature.Services.Web.Resources.Strings", "RazorUnresolvedComponentWarningHighlighting_Settings_TooltipTextFormat", "", "JetBrains.ReSharper.Feature.Services.Web.Resources.Strings", "RazorUnresolvedComponentWarningHighlighting_Settings_TooltipTextFormat", "4")]
[ConfigurableSeverityHighlightingAttribute("Razor.UnresolvedComponent", "Razor")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorUnresolvedComponentWarningHighlighting : RazorWarningHighlighting {
    private static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private String[] <Candidates>k__BackingField;
    [CompilerGeneratedAttribute]
private IReference <Reference>k__BackingField;
    public String[] Candidates { get; private set; }
    public IReference Reference { get; }
    public RazorUnresolvedComponentWarningHighlighting(IHtmlTagReference reference, String[] candidates);
    [CompilerGeneratedAttribute]
public String[] get_Candidates();
    [CompilerGeneratedAttribute]
private void set_Candidates(String[] value);
    [CompilerGeneratedAttribute]
public IReference get_Reference();
    private static DocumentRange GetTagHeaderDocumentRange(IHtmlTagReference reference);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorErrors")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorVoidWriteCallErrorHighlighting : RazorErrorHighlighting {
    private ITreeNodePointer`1<IManagedExpression> myMethodPointer;
    private ITreeNodePointer`1<IExpression> myArgumentPointer;
    [CanBeNullAttribute]
public IManagedExpression Method { get; }
    [CanBeNullAttribute]
public IExpression Argument { get; }
    public RazorVoidWriteCallErrorHighlighting(IManagedExpression writeMethod, IExpression writeArgument);
    public IManagedExpression get_Method();
    public IExpression get_Argument();
    public virtual DocumentRange CalculateRange();
    public virtual bool IsValid();
}
[StaticSeverityHighlightingAttribute("4", "JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorStaticHighlightingsGroups/RazorWarnings")]
public class JetBrains.ReSharper.Daemon.Razor.Highlightings.RazorWarningHighlighting : HtmlWarningHighlighting {
    public RazorWarningHighlighting(string tooltipTextFormat, DocumentRange range, Object[] args);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.Razor.Stages.Analysis.RazorAttributeValueAnalysis : HtmlAttributeValueAnalysis {
    public RazorAttributeValueAnalysis(Lifetime lifetime, HtmlLanguage language, ISettingsOptimization settingsOptimization, ISettingsStore settingsStore);
    protected virtual bool IsElementAccepted(HtmlAttributeValue htmlAttributeValue);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Razor.CSharp.Mvc.RazorCSharpMvc6Language", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Analysis.RazorMvc6SyntaxErrorsAnalysis : RazorSyntaxErrorsAnalysis {
    public RazorMvc6SyntaxErrorsAnalysis(RazorLanguage language, IRazorTokenNodeTypes tokenNodeTypes, IRazorSharedServices razorSharedServices);
    protected virtual void ProcessRazorTransitionInsideCode(ITreeNode element, Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Analysis.RazorSyntaxErrorsAnalysis : HtmlSyntaxErrorsAnalysis {
    [CompilerGeneratedAttribute]
private IRazorTokenNodeTypes <tokenNodeTypes>P;
    [CompilerGeneratedAttribute]
private IRazorSharedServices <razorSharedServices>P;
    public RazorSyntaxErrorsAnalysis(RazorLanguage language, IRazorTokenNodeTypes tokenNodeTypes, IRazorSharedServices razorSharedServices);
    public virtual object Init(IHtmlFile file, IHighlightingConsumer consumer, IContextBoundSettingsStore settings);
    public virtual void ProcessBeforeInterior(ITreeNode element, Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices> context);
    private DocumentRange GetHighlightingRange(ITreeNode elementToHighlight);
    private Func`2<ITreeNode, TreeNodeActionType> NonZeroLengthTokenPredicate();
    private static bool IsCrlfOrSurrogatePair(IBuffer buffer, int offset);
    protected virtual void ProcessRazorTransitionInsideCode(ITreeNode element, Tuple`4<IHighlightingConsumer, IHtmlDeclaredElementsCache, IHtmlFile, IPsiServices> context);
}
[HtmlAnalysisAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Analysis.RazorTagClosingAnalysis : HtmlTagClosingAnalysis {
    public RazorTagClosingAnalysis(RazorLanguage language);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual bool DoSuppressHighlighting(ITreeNode node, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    protected virtual void HtmlTagShouldBeSelfClosed(IHtmlTag tag, Tuple`4<IHtmlFile, IHighlightingConsumer, IHtmlDeclaredElementTypesBase, HashSet`1<IHtmlTag>> context);
    private static bool IsTagHelper(ITreeNode element);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Analysis.WriteCallProblemAnalyzer : ElementProblemAnalyzer`1<IManagedExpression> {
    [CompilerGeneratedAttribute]
private IProjectFileTypeServices <projectFileTypeServices>P;
    public WriteCallProblemAnalyzer(IProjectFileTypeServices projectFileTypeServices);
    protected virtual void Run(IManagedExpression element, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
public abstract class JetBrains.ReSharper.Daemon.Razor.Stages.RazorDaemonStage : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    protected abstract virtual RazorDaemonStageProcess CreateRazorDaemonStageProcess(IDaemonProcess process, CollectUsagesStageProcess collectUsagesStageProcess);
}
public class JetBrains.ReSharper.Daemon.Razor.Stages.RazorDaemonStageProcess : object {
    [CompilerGeneratedAttribute]
private CollectUsagesStageProcess <collectUsagesStageProcess>P;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private IFile <File>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    public IFile File { get; }
    public RazorDaemonStageProcess(IDaemonProcess process, CollectUsagesStageProcess collectUsagesStageProcess);
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_File();
    protected virtual void ProcessReference(IHighlightingConsumer consumer, IReference reference, UsageState additionalState);
}
[FileStructureExplorerAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.Stages.RazorFileStructureExplorer : object {
    public sealed virtual IFileStructure ExploreFile(IFile file, IContextBoundSettingsStore settingsStore, Predicate`1<DocumentRange> isRangeInvalidated);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.RazorGutterMarkDaemonProcess : object {
    [CompilerGeneratedAttribute]
private IFile <CodeBehindFile>k__BackingField;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private IFile <File>k__BackingField;
    public IFile CodeBehindFile { get; }
    public IDaemonProcess DaemonProcess { get; }
    [NotNullAttribute]
public IFile File { get; }
    public RazorGutterMarkDaemonProcess(IDaemonProcess process, IFile psiFile, IFile codeBehindFile);
    [CompilerGeneratedAttribute]
public IFile get_CodeBehindFile();
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    private IReadOnlyList`1<HighlightingInfo> CreateGutterMarks();
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_File();
}
[DaemonStageAttribute("16")]
public class JetBrains.ReSharper.Daemon.Razor.Stages.RazorGutterMarkDaemonStage : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
}
[SolutionComponentAttribute("0")]
public class JetBrains.ReSharper.Daemon.Razor.Stages.RazorSpecificFileImageContributor : object {
    [CompilerGeneratedAttribute]
private IPsiFiles <psiFiles>P;
    [CompilerGeneratedAttribute]
private RazorTagHelperCache <razorTagHelperCache>P;
    public RazorSpecificFileImageContributor(IPsiFiles psiFiles, RazorTagHelperCache razorTagHelperCache);
    public sealed virtual IEnumerable`1<KeyValuePair`2<Dependency, Hash>> SolutionDependencies(ISolution solution);
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Daemon.Razor.Stages.RazorSpecificFileImageContributor/<ModuleDependencies>d__4")]
public sealed virtual IEnumerable`1<KeyValuePair`2<Dependency, Hash>> ModuleDependencies(IPsiModule module);
    public sealed virtual IEnumerable`1<KeyValuePair`2<Dependency, Hash>> FileDependencies(IPsiSourceFile psiSourceFile);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Resolve.RazorCodeBehindErrorHandler : DelegatingToCodeBehindErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public RazorCodeBehindErrorHandler(RazorErrorHandler razorErrorHandler);
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Resolve.RazorErrorHandler : RazorLayoutAndSectionErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Razor.RazorLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Resolve.RazorHtmlResolveProblemHighlighter : HtmlResolveProblemHighlighter {
    public virtual IHighlighting Run(IReference reference);
}
[ExtensionAttribute]
internal static class JetBrains.ReSharper.Daemon.Razor.Stages.Resolve.RazorHtmlUnresolvedReferencesExtensions : object {
    [ExtensionAttribute]
public static bool SeemsToBeRazorComponent(IHtmlTagReference reference, String[]& namespaceCandidates);
    private static bool IsNotComponentName(string referenceName);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Razor.Stages.Resolve.RazorLayoutAndSectionErrorHandler : object {
    private static ResolveErrorType[] ourSupportedErrorTypes;
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    private static RazorLayoutAndSectionErrorHandler();
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Razor.ZoneMarker : object {
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public static class JetBrains.ReSharper.Daemon.Resources.Strings : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string CodeCleanupTask_FormatAttributeQuoteDescriptor { get; }
    public static string CodeCleanupTask_JSStringLiteralQuotesDescriptor { get; }
    public static string CodeCleanupTask_CorrectVariableKindsDescriptor { get; }
    public static string CodeCleanupTask_VariablesToInnerScopesDescriptor { get; }
    public static string CodeCleanupTask_StringToTemplatesDescriptor { get; }
    public static string CodeCleanupTask_RemoveRedundantQualifiersTs { get; }
    public static string CodeCleanupTask_OptimizeImportsTs { get; }
    public static string CodeCleanupTask_OptimizeReferenceCommentsTs { get; }
    public static string CodeCleanupTask_PublicModifierStyleTs { get; }
    public static string CodeCleanupTask_TypeAnnotationStyleTs { get; }
    public static string CodeCleanupTask_ExplicitAnyTs { get; }
    public static string CodeCleanupTask_RelativePathStyleTs { get; }
    public static string CodeCleanupTask_AsInsteadOfCastTs { get; }
    public static string HtmlHighlightingCleanupModule_GetModuleActionName_Processing_HTML { get; }
    public static string JavaScriptHighlightingCleanupModule_GetModuleActionName_Processing_JavaScript { get; }
    public static string RazorParenthesisInImplicitExpressionsCleanup_Name_Fix_parenthesis_in_Razor_expressions { get; }
    public static string TypeScriptHighlightingsCleanup_GetModuleActionName_Processing_TypeScript_code { get; }
    public static string CheckBrowserCompatibility_BoolOption_Text { get; }
    public static string BuildCSSStyleHierarchy_BoolOption_Text { get; }
    private static Strings();
    public static JetResourceManager get_ResourceManager();
    public static string get_CodeCleanupTask_FormatAttributeQuoteDescriptor();
    public static string get_CodeCleanupTask_JSStringLiteralQuotesDescriptor();
    public static string get_CodeCleanupTask_CorrectVariableKindsDescriptor();
    public static string get_CodeCleanupTask_VariablesToInnerScopesDescriptor();
    public static string get_CodeCleanupTask_StringToTemplatesDescriptor();
    public static string get_CodeCleanupTask_RemoveRedundantQualifiersTs();
    public static string get_CodeCleanupTask_OptimizeImportsTs();
    public static string get_CodeCleanupTask_OptimizeReferenceCommentsTs();
    public static string get_CodeCleanupTask_PublicModifierStyleTs();
    public static string get_CodeCleanupTask_TypeAnnotationStyleTs();
    public static string get_CodeCleanupTask_ExplicitAnyTs();
    public static string get_CodeCleanupTask_RelativePathStyleTs();
    public static string get_CodeCleanupTask_AsInsteadOfCastTs();
    public static string get_HtmlHighlightingCleanupModule_GetModuleActionName_Processing_HTML();
    public static string get_JavaScriptHighlightingCleanupModule_GetModuleActionName_Processing_JavaScript();
    public static string get_RazorParenthesisInImplicitExpressionsCleanup_Name_Fix_parenthesis_in_Razor_expressions();
    public static string get_TypeScriptHighlightingsCleanup_GetModuleActionName_Processing_TypeScript_code();
    public static string get_CheckBrowserCompatibility_BoolOption_Text();
    public static string get_BuildCSSStyleHierarchy_BoolOption_Text();
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public static class JetBrains.ReSharper.Daemon.Resources.Strings10 : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string ASPErrors_Text { get; }
    public static string ASPMVCInfo_Text { get; }
    public static string AsxxErrors_Text { get; }
    public static string CssErrors_Text { get; }
    public static string HTMLErrors_Text { get; }
    public static string HTMLInfo_Text { get; }
    public static string JavaScriptErrors_Text { get; }
    public static string RazorErrors_Text { get; }
    public static string RazorInfo_Text { get; }
    public static string RazorWarnings_Text { get; }
    public static string RouteTemplateErrors_Text { get; }
    public static string TypeScriptCompilerErrors_Text { get; }
    public static string WebConfigErrors_Text { get; }
    public static string _IsNotUsedDueToConfigSourceAttribute_Text { get; }
    public static string _IsObsoleteInCSS__Text { get; }
    public static string _IsServerSideLanguage_ToolTip { get; }
    public static string _Missing_ToolTip { get; }
    public static string _MustBePublic_ToolTip { get; }
    public static string _MustBeSubtypeOf__ToolTip { get; }
    public static string _MustHaveName_ToolTip { get; }
    public static string _NotResolved_Text { get; }
    public static string ABindingPatternParameterCannotBeOptionalInAnImplementationSignatureMessage { get; }
    public static string AbstractMembersCanOnlyAppearWithinAnAbstractClassMessage { get; }
    public static string AccessorsAreOnlyAvailableWhenTargetingECMAScriptAndHigherMessage { get; }
    public static string AccordingToTheCaniuseComDataCSSFeatureIsNotSupportedByASpecificBrowser { get; }
    public static string AccordingToTheCaniuseComDataCSSFeatureRequiresVendorPrefixForASpecificBrowser { get; }
    public static string AClassCanExtendOnlyASingleClassOrExpressionMessage { get; }
    public static string AClassMayOnlyExtendAnotherClassMessage { get; }
    public static string AClassMayOnlyImplementAnotherClassOrInterfaceMessage { get; }
    public static string AComputedPropertyNameCannotReferenceATypeParameterFromItsContainingTypeMessage { get; }
    public static string AComputedPropertyNameInAClassPropertyDeclarationMustDirectlyReferToABuiltInSymbolMessage { get; }
    public static string AComputedPropertyNameInAMethodOverloadMustDirectlyReferToABuiltInSymbolMessage { get; }
    public static string AComputedPropertyNameInAnAmbientContextMustDirectlyReferToABuiltInSymbolMessage { get; }
    public static string AComputedPropertyNameInAnInterfaceOrATypeLiteralMustDirectlyReferToABuiltInSymbolMessage { get; }
    public static string AComputedPropertyNameMustBeOfTypestringnumberOranyMessage { get; }
    public static string AComputedPropertyNameMustBeOfTypestringnumbersymbolOranyMessage { get; }
    public static string ActionsRoutePrefixCanBeExtractedToControllersRouteConfigurableSeverityTitle { get; }
    public static string AddAddTagIsFurtherRemoved_ToolTip { get; }
    public static string AddAmbientDeclaration_Text { get; }
    public static string AdefaultClauseCannotAppearMoreThanOnceInAswitchStatementMessage { get; }
    public static string ADestructuringDeclarationMustHaveAnInitializerMessage { get; }
    public static string AEnumMemberCannotHaveANumericNameMessage { get; }
    public static string AFileCannotHaveAReferenceToItselfMessage { get; }
    public static string AllDeclarationsOfAnInterfaceMustHaveIdenticalTypeParametersMessage { get; }
    public static string AllDeclarationsOfMergedDeclarationMustBeExportedOrNotExportedMessage { get; }
    public static string AllowImplicitAnyTypeSpecifications_Caption { get; }
    public static string AllSpecifiedBrowsersSupportTheNewerSyntaxHereMessage { get; }
    public static string AllVariablesFromThisListCanBeMadeBlockLocalMessage { get; }
    public static string AllVariablesFromThisListCanBeMadeConstantMessage { get; }
    public static string AlwaysSpecifyPublicModifierExplicitly_Caption { get; }
    public static string AmbientCannotHaveABodyMessage { get; }
    public static string AmbientDeclarationMayBeGeneratedFor_Text { get; }
    public static string AmbientDeclarationsAreOnlyAllowedAtTheTopLevelOrModuleScopesMessage { get; }
    public static string AmbientEnumElementsCanOnlyHaveIntegerConstantExpressionInitializersMessage { get; }
    public static string AmbientExternalModuleDeclarationCannotBeReopenedMessage { get; }
    public static string AmbientExternalModuleDeclarationCannotSpecifyRelativeModuleNameMessage { get; }
    public static string AmbientExternalModuleDeclarationMustBeDefinedInGlobalContextMessage { get; }
    public static string AmbiguousReference_Text { get; }
    public static string AMDModuleMayBeConvertedToExternalModule_Text { get; }
    public static string AnAccessorCannotHaveTypeParametersMessage { get; }
    public static string AndBothTryToCoerceValuesBeforeComparingThemWhichCanLeadToSomeUnexpectedResultsUsingOfStrictOperatorsAndMakesCodeMorePredictable { get; }
    public static string AndWhenAppliedTonullOrundefinedPerformCheckWithBothOfTheseValues { get; }
    public static string AnExportAssignmentShouldReferenceOnlyTopLevelModuleElementsMessage { get; }
    public static string AnIndexSignatureMayTakeOneAndOnlyOneParameterMessage { get; }
    public static string AnInterfaceMayOnlyExtendAnotherClassOrInterfaceMessage { get; }
    public static string AnObjectLiteralCannotHaveMultiplePropertiesWithTheSameNameInStrictModeMessage { get; }
    public static string AnonymousFunctionIsUsedAsDeclarationMessage { get; }
    public static string AnOptionalParameterCannotBeSpecializedMessage { get; }
    public static string AnOverloadOrAnAmbientSignatureCannotBeDeclaredAsAGeneratorMessage { get; }
    public static string AParameterOfAnIndexSignatureCannotHaveADefaultValueMessage { get; }
    public static string AParameterOfAnIndexSignatureMayNotBeArestParameterMessage { get; }
    public static string AParameterOfAnIndexSignatureMayNotBeOptionalMessage { get; }
    public static string AParameterPropertyMayNotBeABindingPatternMessage { get; }
    public static string App_CodeSubdirectory_IsAddedMoreThan_ToolTip { get; }
    public static string APropertyGetterCannotHaveParametersMessage { get; }
    public static string APropertySetterShouldHaveExactlyOneParameterMessage { get; }
    public static string ARequiredElementCannotFollowAnOptionalElementMessage { get; }
    public static string ARestElementCannotHaveAnInitializerMessage { get; }
    public static string ArestElementCannotHaveTheOptionalMarkMessage { get; }
    public static string ARestElementMustBeLastInAnArrayDestructuringPatternMessage { get; }
    public static string ARestElementMustBeLastInATupleTypeMessage { get; }
    public static string ARestElementTypeMustBeAnArrayTypeMessage { get; }
    public static string ArestParameterCannotBeSpecializedMessage { get; }
    public static string ArestParameterCannotHaveADefaultValueMessage { get; }
    public static string ArestParameterCannotHaveTheOptionalMarkMessage { get; }
    public static string ArestParameterShouldBeTheLastInAParameterListMessage { get; }
    public static string AreturnStatementCanOnlyBeUsedWithinAFunctionBodyMessage { get; }
    public static string Argument_CanTBeConvertedToType__Text { get; }
    public static string argumentsCallerAndargumentsCalleeAreForbiddenInstrictMode { get; }
    public static string argumentsCallerAndargumentsCalleeAreForbiddenInstrictModeMessage { get; }
    public static string ArgumentType_IsNotAssignableToModel_ToolTip { get; }
    public static string ArgumentType_IsNotAssignableToParameter_ToolTip { get; }
    public static string ASectionUsingConfigSourceMayContain_ToolTip { get; }
    public static string ASeriesOfUndefinedChecksForPropertiesCanBeReplacedWithDestructuring { get; }
    public static string AsetAccessorCannotHaveAReturnTypeAnnotationMessage { get; }
    public static string ASpecializedParameterCanBeUsedInAnOverloadSignatureOnlyMessage { get; }
    public static string ASPNETConstructionOfHigherVersion_ToolTip { get; }
    public static string AssignedValueIsNeverUsed { get; }
    public static string AssignmentExpressionInFormOfaBaCannotBeUsedInAnExpressionStatementIfNotParenthesized { get; }
    public static string AssignmentOfALocalVariableToItselfIsRedundant { get; }
    public static string AssignmentOfALocalVariableToItselfIsRedundantMessage { get; }
    public static string AssignmentsLikeaAAreRedundant { get; }
    public static string AssignmentToAnImplicitlyDeclaredGlobalVariable { get; }
    public static string AssignmentToAnImplicitlyDeclaredGlobalVariable12 { get; }
    public static string AssignmentToAnImplicitlyDeclaredGlobalVariableMessage { get; }
    public static string AssignmentToAVariableInsideAConditionalStatement { get; }
    public static string AssignmentToAVariableInsideAConditionalStatementIsLikelyToBeMistyped { get; }
    public static string AssignmentToAVariableInsideAConditionalStatementMessage { get; }
    public static string AssignmentToConstant { get; }
    public static string AssignmentToConstantMayLeadToARunTimeError { get; }
    public static string AssignmentToConstantMessage { get; }
    public static string AsuperCallMustBeTheFirstStatementInTheConstructorWhenAClassContainsInitializedPropertiesOrHasParameterPropertiesMessage { get; }
    public static string ATemporaryLocalVariableUsedForSwappingValuesOfTwoOtherVariablesCanBeReplacedByADestructuringSwap { get; }
    public static string ATrailingElementOfAnArrayIsElided { get; }
    public static string Attribute_IsMissingInTag__ToolTip { get; }
    public static string AttributeQuotesAreMissingOrDifferFromSettingsConfigurableSeverityDescription { get; }
    public static string AttributeValueCannotBeEmpty_ToolTip { get; }
    public static string AttributeValueIncorrectExpected___ToolTip { get; }
    public static string AttributeValueShouldBeSurroundedWith_ToolTip { get; }
    public static string ATypeAnnotationOnAnExportStatementIsOnlyAllowedInAnAmbientExternalModuleDeclarationMessage { get; }
    public static string ATypePredicateNameCanReferenceOnlyANonDestructuringParameterOfOwnerSignatureMessage { get; }
    public static string AVariableHadNoUsagesInOuterBlockWhereItIsDeclaredSoItCanBeSafelyMovedToTheInnerBlock { get; }
    public static string AVariableHadNoWriteUsagesThusItCanBeTurnedIntoAConstant { get; }
    public static string AVariableWasAssignedAValueButNeverUsed { get; }
    public static string AvoidUsingargumentsCallerOrargumentsCalleeByEitherGivingFunctionExpressionsANameOrUseAFunctionDeclaration { get; }
    public static string AvoidUsingargumentsCallerOrargumentsCalleeByEitherGivingFunctionExpressionsANameOrUseAFunctionDeclarationMessage { get; }
    public static string AyieldExpressionIsOnlyAllowedInAGeneratorBodyMessage { get; }
    public static string BaseTypeCannotBeMessage { get; }
    public static string BlockIsRedundant { get; }
    public static string BlockIsRedundantMessage { get; }
    public static string BlockScopedVariableUsedBeforeItsDeclarationMessage { get; }
    public static string BlockScopeVariablesCannotBeRedeclared { get; }
    public static string BlockStatementsMustBeEnclosedInAndYou_ToolTip { get; }
    public static string boolTypeIsDeprecatedUsebooleanMessage { get; }
    public static string breakAndcontinueStatementsCanOnlyBeFollowedByLabelName { get; }
    public static string breakAndcontinueWithoutLabelShouldBeInALoopBody { get; }
    public static string breakMustBeInLoopOrSwitchStatementMessage { get; }
    public static string breakStatementCanOnlyBeUsedWithinAnEnclosingIterationOrSwitchStatementMessage { get; }
    public static string BuildCSSStyleHierarchy_BoolOption_Text { get; }
    public static string CalculatingItems_Text { get; }
    public static string CallingdeleteOnNonQualifiedIdentifierInstrictMode { get; }
    public static string CallingdeleteOnNonQualifiedIdentifierIsNotAllowedInstrictMode { get; }
    public static string CallingdeleteOnNonQualifiedIdentifierIsNotAllowedInstrictModeMessage { get; }
    public static string CallSignaturesUsedInAnewExpressionMustHaveAvoidReturnTypeMessage { get; }
    public static string CallSignatureWhichLacksReturnTypeAnnotationImplicitlyHasAnanyReturnTypeMessage { get; }
    public static string CallsTosuperAreOnlyValidInsideAClassMessage { get; }
    public static string CannotAccess___Here_Text { get; }
    public static string CannotAccess_Here_Text { get; }
    public static string CannotConvertSourceMemberToBindingDefinedTargetMemberMessage { get; }
    public static string CannotConvertSourceMemberToBindingDefinedTargetMemberMessage4 { get; }
    public static string CannotConvertTypeToTypeMessage { get; }
    public static string CannotConvertTypeToTypeMessage3 { get; }
    public static string CannotFindContentPlaceHolder__Text { get; }
    public static string CannotFindContentPlaceHolder_InTheMaster_Text { get; }
    public static string CannotFindExternalModuleFileBySpecifiedPathMessage { get; }
    public static string CannotFindSkin__Text { get; }
    public static string CannotFindSkin_InTheTheme__Text { get; }
    public static string CannotFindTheme__Text { get; }
    public static string CannotInvokeAnExpressionWhoseTypeLacksACallSignatureMessage { get; }
    public static string CannotRedeclareBlockScopedVariableMessage { get; }
    public static string CannotResolveAttribute__ToolTip { get; }
    public static string CannotResolveAttributeValue__ToolTip { get; }
    public static string CannotResolvecolorProfileWithNameMessage { get; }
    public static string CannotResolveCSSClassWithSpecifiedName { get; }
    public static string CannotResolveCustomPropertyWithSpecifiedName { get; }
    public static string CannotResolveEvent__ToolTip { get; }
    public static string CannotResolveFileSystemPath { get; }
    public static string CannotResolveFileSystemPath1 { get; }
    public static string CannotResolveId__ToolTip { get; }
    public static string CannotResolvekeyframesWithNameMessage { get; }
    public static string CannotResolveLayout__ToolTip { get; }
    public static string CannotResolvepageWithNameMessage { get; }
    public static string CannotResolveProbablySymbolIsLocatedInInaccessibleModule { get; }
    public static string CannotResolveReferencedFileMessage { get; }
    public static string CannotResolveReturnTypeReferenceMessage { get; }
    public static string CannotResolveSection__ToolTip { get; }
    public static string CannotResolveAssembly__ToolTip { get; }
    public static string CannotResolveSymbol { get; }
    public static string CannotResolveSymbol__Text { get; }
    public static string CannotResolveSymbolInMessage { get; }
    public static string CannotResolveSymbolMessage { get; }
    public static string CannotResolveSymbolWithSpecifiedName { get; }
    public static string CannotResolveTag__ToolTip { get; }
    public static string CannotResolveVendorSpecificExtension { get; }
    public static string CatchClauseParameterCannotHaveATypeAnnotationMessage { get; }
    public static string CatchClauseVariableCannotHaveAnInitializerMessage { get; }
    public static string CatchClauseVariableNameMustBeAnIdentifierMessage { get; }
    public static string CheckamdDependencyTheSameWayAsRequireArgument { get; }
    public static string CheckBrowserCompatibility_BoolOption_Text { get; }
    public static string ClassAndForAttributesAreDisallowedIn_ToolTip { get; }
    public static string ClassCannotExtendClassMessage { get; }
    public static string ClassDeclarationMustBeLocatedPriorToModuleDeclarationInTheSameSourceFileToBeMergedProperlyMessage { get; }
    public static string ClassDeclaresClassAsAnInterfaceButDoesNotImplementItMessage { get; }
    public static string ClassDeclaresInterfaceButDoesNotImplementItMessage { get; }
    public static string ClassEmulationMayBeConvertedToClass_Text { get; }
    public static string ClassesCanOnlyExtendASingleClassMessage { get; }
    public static string ClassesContainingAbstractMethodsMustBeMarkedAbstractMessage { get; }
    public static string ClassIsRecursivelyReferencedAsABaseTypeOfItselfViaTypeMessage { get; }
    public static string ClosingBraceExpected_ToolTip { get; }
    public static string ClosureOnAVariableModifiedInLoopOfOuterScope { get; }
    public static string ClosureOnAVariableModifiedInLoopOfOuterScopeMessage { get; }
    public static string CodeCleanupTask_AsInsteadOfCastTs { get; }
    public static string CodeCleanupTask_CorrectVariableKindsDescriptor { get; }
    public static string CodeCleanupTask_ExplicitAnyTs { get; }
    public static string CodeCleanupTask_FormatAttributeQuoteDescriptor { get; }
    public static string CodeCleanupTask_JSStringLiteralQuotesDescriptor { get; }
    public static string CodeCleanupTask_OptimizeImportsTs { get; }
    public static string CodeCleanupTask_OptimizeReferenceCommentsTs { get; }
    public static string CodeCleanupTask_PublicModifierStyleTs { get; }
    public static string CodeCleanupTask_RelativePathStyleTs { get; }
    public static string CodeCleanupTask_RemoveRedundantQualifiersTs { get; }
    public static string CodeCleanupTask_StringToTemplatesDescriptor { get; }
    public static string CodeCleanupTask_TypeAnnotationStyleTs { get; }
    public static string CodeCleanupTask_VariablesToInnerScopesDescriptor { get; }
    public static string CodeFileAttributeIsInvalidWithoutInherits_ToolTip { get; }
    public static string CodeFileBaseClassAttributeIsInvalid_ToolTip { get; }
    public static string CodeFileBaseClassAttributeIsInvalidWithoutInherits_ToolTip { get; }
    public static string CodeIsHeuristicallyUnreachableMessage { get; }
    public static string CodeIsRedundant { get; }
    public static string CodeIsUnreachable { get; }
    public static string CodeIsUnreachableMessage { get; }
    public static string CodeUsesNonStandardOrInvalidJSONSyntax { get; }
    public static string CommaExpectedMessage { get; }
    public static string CommaIsExpectedInObjectLiteral { get; }
    public static string CommaIsNotValidHere { get; }
    public static string CommaIsNotValidHereMessage { get; }
    public static string CommaIsNotValidInThisPlace { get; }
    public static string CommaIsRequiredBetweenObjectLiteralMembers { get; }
    public static string CommentIsNotClosed_ToolTip { get; }
    public static string CommonJsModuleMayBeConvertedToExternal_Text { get; }
    public static string ComparisonOfBooleanValueWithIsEquivalentToMessage { get; }
    public static string ComparisonOfBooleanWithBooleanValueIsEquivalentToValueOrNegatedValue { get; }
    public static string ComparisonOfSimilarExpressionsLikeXX { get; }
    public static string ComparisonOftypeofExpressionWithIncorrectValue { get; }
    public static string ComparisonsLikeaTrueAndaTrueWithBooleanaAreEquivalentToJustaAndA { get; }
    public static string ComparisonWithPerformsComparisonWithAsWellMessage { get; }
    public static string Component_ExpectsAValueForTheParameter_ToolTip { get; }
    public static string ComputedPropertyNamesAreNotAllowedInEnumsMessage { get; }
    public static string ConcatenationCanBeConvertedToATemplateMessage { get; }
    public static string ConditionalBrowserCommentIsEmpty_ToolTip { get; }
    public static string ConditionalBrowserCommentStartEndMismatch_ToolTip { get; }
    public static string ConditionExpected_Text { get; }
    public static string ConditionIsAlwaysConstant { get; }
    public static string ConditionIsAlwaysConstant8 { get; }
    public static string ConditionIsAlwaysMessage { get; }
    public static string ConstantMustBeAssigned { get; }
    public static string ConstantMustBeInitializedMessage { get; }
    public static string constDeclarationsCanOnlyBeDeclaredInsideABlockMessage { get; }
    public static string constDeclarationsMustBeInitializedMessage { get; }
    public static string constEnumMemberInitializerWasEvaluatedToANonFiniteValueMessage { get; }
    public static string constEnumMemberInitializerWasEvaluatedToDisallowedValueNaNMessage { get; }
    public static string constEnumsCanOnlyBeUsedInPropertyOrIndexAccessExpressionsOrTheRightHandSideOfAnImportDeclarationOrExportAssignmentMessage { get; }
    public static string ConstraintOfATypeParameterCannotReferenceAnyTypeParameterFromTheSameTypeParameterListMessage { get; }
    public static string ConstructorCallIsNotUsedOrPossiblyUsedForSideEffects { get; }
    public static string ConstructorCallIsNotUsedOrPossiblyUsedForSideEffectsMessage { get; }
    public static string ConstructorOfAnAbstractClassCanBeMadeProtected { get; }
    public static string ConstructorOfAnAbstractClassCanBeMadeProtectedMessage { get; }
    public static string ConstructorOfAnAbstractClassIsAlwaysCalledOnlyFromDerivedTypesAndCanBeMadeProtected { get; }
    public static string ConstructorsCannotHaveAReturnTypeOfvoidMessage { get; }
    public static string ConstructorsForDerivedClassesMustContainAsuperCallOnAllExecutionPathsMessage { get; }
    public static string ConstructorSignatureWhichLacksReturnTypeAnnotationImplicitlyHasAnanyReturnTypeMessage { get; }
    public static string continueMustBeInLoopMessage { get; }
    public static string continueStatementCanOnlyBeUsedWithinAnEnclosingIterationStatementMessage { get; }
    public static string ControllersRouteParameterCanBePassedToMethodsConfigurableSeverityDescription { get; }
    public static string ControllersRouteParameterCanBePassedToMethodsConfigurableSeverityTitle { get; }
    public static string ConvertToClass_Text { get; }
    public static string ConvertToExternalModule_Text { get; }
    public static string ConvertToFunctionMember_Text { get; }
    public static string ConvertToInternalModule_Text { get; }
    public static string ConvertToLambdaExpression_Text { get; }
    public static string ConvertToSuperCall_Text { get; }
    public static string CorrespondsToErrorsReportedByCompilerWhenRunningWithNoImplicitAnyFlagCorrespondingCodeStyleSettingShouldBeSetForThisInspectionToBeEnabled { get; }
    public static string CouldNotAccessPrivateSymbolInModuleMessage { get; }
    public static string CouldNotFindEnclosingSymbolForDottedNameMessage { get; }
    public static string CouldNotFindFileMessage { get; }
    public static string CouldNotFindModuleInModuleMessage { get; }
    public static string CouldNotFindSymbolInMessage { get; }
    public static string CouldNotFindSymbolMessage { get; }
    public static string CouldNotFindTheBestCommonTypeOfTypesOfAllReturnStatementExpressionsMessage { get; }
    public static string CouldNotSelectOverloadForcallExpressionMessage { get; }
    public static string CouldNotSelectOverloadFornewExpressionMessage { get; }
    public static string CSSFeatureIsNotSupportedByASpecificBrowser { get; }
    public static string CSSFeatureRequiresVendorPrefixForASpecificBrowser { get; }
    public static string CSSHackIsRedundantDueToCurrentBrowserCompatibilityConfiguration { get; }
    public static string CSSSymbolIsConsideredObsoleteInSpecifiedLanguageVersion { get; }
    public static string CSSSymbolIsObsolete { get; }
    public static string CSSSymbolSyntaxIsNotCompatibleWithASpecificBrowser { get; }
    public static string CSSSymbolSyntaxIsNotCompatibleWithASpecificBrowser3 { get; }
    public static string CSSValueShouldHaveUnits { get; }
    public static string CustomPropertyIsNotUsedMessage { get; }
    public static string CustomPropertyValueCannotBeEmptyItMustRepresentAtLeastOneTokenEGWhiteSpaceMessage { get; }
    public static string DeclarationDoesntContainAnyProperties { get; }
    public static string DeclarationHides_FromOuterScope_Text { get; }
    public static string DeclarationHidesAnotherDeclarationFromAnOuterScope { get; }
    public static string DeclarationHidesFromOuterScopeMessage { get; }
    public static string DeclarationIsEmpty { get; }
    public static string DeclarationIsEmptyMessage { get; }
    public static string declareModifierNotAllowedForCodeAlreadyInAnAmbientContextMessage { get; }
    public static string declareModifierRequiredForTopLevelElementMessage { get; }
    public static string DecoratorsAreAllowedOnlyOnClassesMemberVariablesMemberAccessorsAndImplementationMemberFunctionSignaturesMessage { get; }
    public static string DecoratorsOnFunctionStatementsAreNotAllowedMessage { get; }
    public static string deleteCannotBeCalledOnAnIdentifierInStrictModeMessage { get; }
    public static string DestructuringDeclarationsAreNotAllowedInAmbientContextsMessage { get; }
    public static string DocumentsDefinedCallbackName_ToolTip { get; }
    public static string DocumentsDefinedTemplateName_ToolTip { get; }
    public static string DocumentsDefinedTypeName_ToolTip { get; }
    public static string DocumentsEntityType_ToolTip { get; }
    public static string DoubleNegationOfABooleanExpressionIsRedundantMessage { get; }
    public static string DoubleNegationOfBooleanIsIdenticalToItsValue { get; }
    public static string DoubleNegationOfBooleanIsRedundant { get; }
    public static string Duplicate__Text { get; }
    public static string DuplicateConstructorOverloadSignatureMessage { get; }
    public static string DuplicateDeclarationMessage { get; }
    public static string DuplicateDeclarationOfALiteralObjectProperty { get; }
    public static string DuplicateDeclarationOfALocalVariableFunctionOrParameter { get; }
    public static string DuplicateIdentifier { get; }
    public static string DuplicateIdentifierargumentsCompilerUsesargumentsToInitializeRestParametersMessage { get; }
    public static string DuplicateIdentifierCompilerReservesNameInTopLevelScopeOfAnExternalModuleMessage { get; }
    public static string DuplicateIdentifierDetected { get; }
    public static string DuplicateIdentifierICompilerUsesIToInitializeRestParameterMessage { get; }
    public static string DuplicateIdentifierMessage { get; }
    public static string DuplicateIdentifierSuperCompilerUsesSuperToCaptureBaseClassReferenceMessage { get; }
    public static string DuplicateIdentifierThisCompilerUsesVariableDeclarationThisToCapturethisReferenceMessage { get; }
    public static string DuplicateLocalDeclaration { get; }
    public static string DuplicateModifierMessage { get; }
    public static string DuplicateNumberIndexSignatureMessage { get; }
    public static string DuplicateOverloadCallSignatureMessage { get; }
    public static string DuplicateOverloadConstructSignatureMessage { get; }
    public static string DuplicateOverloadSignatureForMessage { get; }
    public static string DuplicateParameterDeclarationInstrictMode { get; }
    public static string DuplicateParameterDeclarationIsNotAllowedInstrictMode { get; }
    public static string DuplicateParameterDeclarationIsNotAllowedInstrictModeMessage { get; }
    public static string DuplicatePropertyDeclaration { get; }
    public static string DuplicatePropertyDeclarationInstrictMode { get; }
    public static string DuplicatePropertyDeclarationIsNotAllowedInstrictMode { get; }
    public static string DuplicatePropertyDeclarationIsNotAllowedInstrictModeMessage { get; }
    public static string DuplicatePropertyDeclarationMessage { get; }
    public static string DuplicateReferenceCommentIsRedundant { get; }
    public static string DuplicateStringIndexSignatureMessage { get; }
    public static string DuplicateSwitchLabel { get; }
    public static string DuplicateSwitchLabel9 { get; }
    public static string DuplicateSwitchLabelMessage { get; }
    public static string DuplicationOfId_OnThisPage_ToolTip { get; }
    public static string DuplicationOfIdOnPageConfigurableSeverityDescription { get; }
    public static string DuplicationOfRenderModeDirective_ToolTip { get; }
    public static string ECMAScriptFeatureIsUsedInECMAScriptOrLower { get; }
    public static string ECMAScriptFeatureIsUsedInECMAScriptOrLower3 { get; }
    public static string ECMAScriptFeatureUsageWhenInESOrLower { get; }
    public static string ECMAScriptFeatureUsageWhenInESOrLower2 { get; }
    public static string ECMAScriptFeatureYourCurrentLanguageLevelIsMessage { get; }
    public static string ECMAScriptFeatureYourCurrentLanguageLevelIsMessage1 { get; }
    public static string ECMAScriptNotCurrentlySupportedInTypeScriptMessage { get; }
    public static string ECMAScriptNotCurrentlySupportedInTypeScriptMessage1 { get; }
    public static string Element_IsAVoidElementAndCannotHave_ToolTip { get; }
    public static string Element_IsObsoleteOrNonstandard_ToolTip { get; }
    public static string Element_RequiresAClosingTag_ToolTip { get; }
    public static string Element_Text { get; }
    public static string ElementHasImplicitanyType { get; }
    public static string elseBlockIsRedundant { get; }
    public static string EmptyConstructorWithoutParametersIsRedundant { get; }
    public static string EmptyfinallyBlockIsRedundantMessage { get; }
    public static string EmptyReturnValueForTypeAnnotatedFunction { get; }
    public static string EndIfMissing_ToolTip { get; }
    public static string EnumMemberMustHaveInitializerMessage { get; }
    public static string ErrorInXMLDocCommentReference { get; }
    public static string ErrorInXMLDocCommentReference16 { get; }
    public static string evalOrargumentsCannotBeUsedAsADeclarationNameAsALeftSideOfAnAssignmentOrAsAnArgumentOfIncrementDecrementOperatorInstrictMode { get; }
    public static string evalOrargumentsCannotBeUsedAsALeftSideOfAnAssignmentInstrictModeMessage { get; }
    public static string evalOrargumentsCannotBeUsedAsAnArgumentOfIncrementOrDecrementOperatorInstrictModeMessage { get; }
    public static string evalOrargumentsCannotBeUsedAsAnIncrementOrDecrementOperatorArgumentInstrictModeMessage { get; }
    public static string evalOrargumentsCannotBeUsedAsDeclarationNameInstrictModeMessage { get; }
    public static string ExpectedMessage { get; }
    public static string ExperimentalFeatureUsageWhenLanguageLevelSetToStable { get; }
    public static string ExperimentalFeatureUsedWhenTargetedToStableESLevel { get; }
    public static string ExperimentalLevelFeatureYourCurrentLanguageLevelIsMessage { get; }
    public static string ExplicitAnyRequirement_Text { get; }
    public static string ExportAssignmentCannotBeUsedInInternalModuleMessage { get; }
    public static string ExportAssignmentCannotBeUsedWhenTargetingECMAScriptOrHigherMessage { get; }
    public static string ExportAssignmentNotAllowedInModuleWithExportedElementsMessage { get; }
    public static string ExportAssignmentsMayOnlyBeMadeWithVariablesFunctionsClassesInterfacesEnumsAndInternalModulesMessage { get; }
    public static string ExportAssignmentsMayOnlyBeUsedAtTheTopLevelOfExternalModulesMessage { get; }
    public static string ExportDeclarationsAreOnlyAllowedAtTheTopLevelOrModuleScopesMessage { get; }
    public static string ExportedClassExtendsClassFromInaccessibleModuleMessage { get; }
    public static string ExportedClassExtendsPrivateClassMessage { get; }
    public static string ExportedClassImplementsInterfaceFromInaccessibleModuleMessage { get; }
    public static string ExportedClassImplementsPrivateInterfaceMessage { get; }
    public static string ExportedEntityUsesAPrivateEntity { get; }
    public static string ExportedImportDeclarationIsAssignedValueWithTypeThatHasOrIsUsingPrivateTypeMessage { get; }
    public static string ExportedImportDeclarationIsAssignedValueWithTypeThatIsUsingInaccessibleModuleMessage { get; }
    public static string ExportedInterfaceExtendsInterfaceFromInaccessibleModuleMessage { get; }
    public static string ExportedInterfaceExtendsPrivateInterfaceMessage { get; }
    public static string ExportedModuleMemberUsesANonExportedEntity { get; }
    public static string ExportedVariableHasOrIsUsingPrivateTypeMessage { get; }
    public static string ExportedVariableIsUsingInaccessibleModuleMessage { get; }
    public static string ExpressionCannotBeOfTypeForWhichItsCheckedAgainstUsingtypeof { get; }
    public static string ExpressionCannotBeSubtypeOfTypeAgainstWhichItsCheckedUsinginstanceof { get; }
    public static string ExpressionExpected_ToolTip { get; }
    public static string ExpressionHasIdenticalTrueAndFalseBranchesMessage { get; }
    public static string ExpressionIsAlwaysConstant { get; }
    public static string ExpressionIsAlwaysConstant3 { get; }
    public static string ExpressionIsExpectedAfterthrowStatement { get; }
    public static string ExpressionMustReturnAValueToRender_ToolTip { get; }
    public static string ExpressionResolvesToSuperThatCompilerUsesToCaptureBaseClassReferenceMessage { get; }
    public static string ExpressionResolvesToVariableDeclarationIThatCompilerUsesToInitializeRestParameterMessage { get; }
    public static string ExpressionResolvesToVariableDeclarationThisThatCompilerUsesToCapturethisReferenceMessage { get; }
    public static string ExpressionsIsAlwaysMessage { get; }
    public static string ExpressionStatementIsNeitherAnAssignmentStatementNorAFunctionCall { get; }
    public static string ExpressionStatementIsNotAssignmentOrCallMessage { get; }
    public static string ExtendingPrototypeOfNativeObject { get; }
    public static string ExtendingPrototypeOfNativeObjectMayCauseUnexpectedEffects { get; }
    public static string ExtendingPrototypeOfNativeObjectMayCauseUnexpectedEffectsMessage { get; }
    public static string extendsClauseAlreadySeenMessage { get; }
    public static string extendsClauseMustPrecedeimplementsClauseMessage { get; }
    public static string FailedToValidateJSONAgainstASchema { get; }
    public static string FallbackColorHexOrRGBShouldPrecedeColorWithNewFormatRgbaHslAndHsla { get; }
    public static string FeatureIsNotSupportedByMessage { get; }
    public static string FeatureRequiresVendorSpecificPrefixForMessage { get; }
    public static string FileBySpecifiedPathDoesntContainExternalModuleDeclarationMessage { get; }
    public static string FileIsAlreadyReferencedMessage { get; }
    public static string FileIsNotAnImage_ToolTip { get; }
    public static string FileMustHaveExtensionTsOrDTsMessage { get; }
    public static string ForSomeEnvironmentsAmdDependencyCorrespondenceWithActuallyExistingModulesIsCrucial { get; }
    public static string FunctionDeclarationShouldHaveAnImplementationMessage { get; }
    public static string FunctionDeclaredANonVoidReturnTypeButHasNoReturnExpressionMessage { get; }
    public static string FunctionDeclaredANonVoidReturnTypeButHasNoReturnExpressionMessage6 { get; }
    public static string FunctionDoesntExistInCSSMessage { get; }
    public static string FunctionExpressionDeclaredANonVoidReturnTypeButHasNoReturnExpressionMessage { get; }
    public static string FunctionExpressionMayBeConvertedToLambda_Text { get; }
    public static string FunctionExpressionWhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage { get; }
    public static string FunctionHasReturnStatementsWithSpecifiedValueButThereAreExecutionPathsThatDontContainAnyReturnStatement { get; }
    public static string FunctionIsNeverUsedBecauseItIsOverriddenInTheOwnerFunctionBodyMessage { get; }
    public static string FunctionIsProvidedWithTypeAnnotationButReturnStatementValueIsEmptyMessage { get; }
    public static string FunctionIsProvidedWithTypeAnnotationButReturnValueIsEmpty { get; }
    public static string FunctionIsRedefinedLaterMessage { get; }
    public static string FunctionIsUsedBeforeItIsDeclared { get; }
    public static string FunctionIsUsedBeforeItIsDeclaredMessage { get; }
    public static string FunctionIsUsedOutsideOfBlockWhichItIsDeclaredMessage { get; }
    public static string FunctionIsUsedOutsideOfScopeWhichItIsDeclared { get; }
    public static string FunctionOverloadNameMustBeMessage { get; }
    public static string FunctionScopeVariableDeclaredByvarKeywordCanSafelyBeTurnedIntoABlockScopeVariableDeclaredByconstKeyword { get; }
    public static string FunctionStatementMustBeLocatedPriorToModuleDeclarationInTheSameSourceFileToBeMergedProperlyMessage { get; }
    public static string FunctionStatementShouldHaveANameMessage { get; }
    public static string GeneratingConstructor_Text { get; }
    public static string GeneratingFieldsAndAccessors_Text { get; }
    public static string GeneratingIndexers_Text { get; }
    public static string GeneratingMethods_Text { get; }
    public static string GeneratorExpressionWhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage { get; }
    public static string GeneratorsAreOnlyAvailableWhenTargetingECMAScriptOrHigherMessage { get; }
    public static string GeneratorWhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage { get; }
    public static string GenericTypeReferencesMustIncludeAllTypeArgumentsMessage { get; }
    public static string GenericTypeRequiresTypeArgumentSButGotMessage { get; }
    public static string getAndsetAccessorMustHaveTheSameTypeMessage { get; }
    public static string GetterAlreadyDeclaredMessage { get; }
    public static string GetterAndSetterAccessorsDoNotAgreeInVisibilityMessage { get; }
    public static string GettersMustReturnAValueMessage { get; }
    public static string GlobalModuleExportsMayOnlyAppearAtTopLevelMessage { get; }
    public static string Group_Text { get; }
    public static string HelperNameExpected_ToolTip { get; }
    public static string HelperSignatureExpected_Text { get; }
    public static string HeuristicallyUnreachableCode { get; }
    public static string HeuristicallyUnreachableCode2 { get; }
    public static string HexadecimalValueOfColorWithAlphaComponentIsNotSupported { get; }
    public static string HighlightsSymbolsUsedFromAReferencedModuleThatIsNotCopiedLocallyConfigurableSeverityDescription { get; }
    public static string HTMLDeadCodeConfigurableSeverityDescription { get; }
    public static string HTMLDeadCodeConfigurableSeverityTitle { get; }
    public static string HtmlHighlightingCleanupModule_GetModuleActionName_Processing_HTML { get; }
    public static string HTMLWarningConfigurableSeverityDescription { get; }
    public static string HTMLWarningConfigurableSeverityTitle { get; }
    public static string IdAttributeIsInvalidForTagsThatAreNot_ToolTip { get; }
    public static string IdentifierExpected_ToolTip { get; }
    public static string IdsDuplicationConfigurableSeverityTitle { get; }
    public static string IfALocalVariableIsAssignedToSomeAnotherLocalVariableAndThatLocalVariableDoesntHaveMoreThanOneReadUsageItCanBeSafelyInlined { get; }
    public static string IfAnElementIsElidedAtTheEndOfAnArrayThatElementDoesNotContributeToTheLengthOfTheArray { get; }
    public static string IfAnExpressionRepresentsStringConcatenationsWithOtherExpressionsItCanBeConvertedToATemplateExpression { get; }
    public static string IfAParameterPropertyIsReferredToWithoutthisQualifierInAnAssignmentInsideTheConstructorTheAssignedValueWontBeSetForTheResultingPropertyButWillBeSetOnlyForTheLocalConstructorParameter { get; }
    public static string IfASequenceOfPropertiesForTheSameItemIsCheckedForundefinedEGVarWXAUndefinedDefXAVarSXBUndefinedDefXBThisSequenceCanBeReplacedWithAnObjectDestructuringPatternEGaWBSX { get; }
    public static string IfMoreSpecificSignatureFollowsLessSpecificTypeScriptOverloadResolutionWillChooseLessSpecificNevertheless { get; }
    public static string IfOneOfTheArgumentsIsAStringLiteralItsPossibleToCreateASpecializedOverloadForIt { get; }
    public static string IfOverloadIsLessSpecificThanTheMainSignatureItMakesNoSenseAsTypeScriptOverloadResolutionWillUseLessSpecificOverloadSignatureForResolve { get; }
    public static string IfReferenceCommentDependenciesFinallyResolveToTheSameFileThereExistsADependencyCycle { get; }
    public static string IfReferenceCommentToTheSameFileIsAlreadyProvidedDuplicateReferenceCommentIsRedundant { get; }
    public static string IfTheSameItemIsIndexedInRightHandSideOfTheSubsequentStatementsEGAEBEThatSequentialSeriesOfAssignmentsCanBeReplacedByADestructuringDeclarationOrAssignmentEGABE { get; }
    public static string IfTheSameItemIsIndexedInValuesOfObjectPropertiesEGVarXaRBRThatPropertiesCanBePreliminaryAssignedUsingADestructuringAndThenUsedInAShorthandFormIfNoNameConflictsAreDetected { get; }
    public static string IfTypeItselfOrItsDescendantIsAlreadyPresentInExtendsOrImplementsListAnExtraSpecificationIsRedundant { get; }
    public static string IfVariableDeclarationHasAnInitializerTypeSpecificationIsRedundantIfItsTheSameTypeWithAssignedValueTypeIsAffectedByCodeStyleSettingSpecifyTypesExplicitly { get; }
    public static string IfVariableTypeCouldBeDerivedFromContextItMayAlsoBeExplicitlySpecifiedIsAffectedByCodeStyleSettingSpecifyTypesExplicitly { get; }
    public static string IgnoreAssignmentInConditionWarningIfThereAreParenthesesAroundAssignmentExpressionSettingDescription { get; }
    public static string IllegalSyntaxInXMLCodeComment { get; }
    public static string IllegalSyntaxInXMLCodeComment11 { get; }
    public static string ImmediatelyInvokedFunctionExpression_Text { get; }
    public static string ImplementationsAreNotAllowedInAmbientContextsMessage { get; }
    public static string implementsClauseAlreadySeenMessage { get; }
    public static string implementsClauseIsUnexpectedForAnInterfaceDeclarationUseextendsInsteadMessage { get; }
    public static string ImplicitAny_Text { get; }
    public static string ImplicitAnyInspectionWhenNoImplicitAnyIsSet { get; }
    public static string ImplicitPublicModifierNeverSpecifyExplicitly_Caption { get; }
    public static string ImportDeclarationCannotReferToExternalModuleReferenceWhenNoResolveOptionIsSetMessage { get; }
    public static string ImportDeclarationInAnAmbientExternalModuleDeclarationCannotReferenceExternalModuleThroughRelativeExternalModuleNameMessage { get; }
    public static string ImportDeclarationReferencingIdentifierFromInternalModuleCanOnlyBeMadeWithVariablesFunctionsClassesInterfacesEnumsAndInternalModulesMessage { get; }
    public static string ImportDeclarationsInAnInternalModuleCannotReferenceAnExternalModuleMessage { get; }
    public static string ImportedEntityCircularlyReferencesImportAliasMessage { get; }
    public static string ImportIsNeverUsedMessage { get; }
    public static string importKeywordIsAllowedOnlyInImportConstructs { get; }
    public static string importKeywordIsNotAllowedHere { get; }
    public static string importKeywordIsNotAllowedHereMessage { get; }
    public static string ImportWithrequireCannotBeUsedWhenTargetingECMAScriptOrHigherMessage { get; }
    public static string InAContextOfLocalFunctionInsideClassMemberthisRefersToTheLocalFunctionItselfNotToTheContainingClass { get; }
    public static string InconsistentFunctionReturns { get; }
    public static string InconstEnumDeclarationsMemberInitializerMustBeConstantExpressionOrConstEnumMemberMessage { get; }
    public static string IncorrectExternalModuleReferenceNameStringLiteralIsExpectedMessage { get; }
    public static string IncorrectNumberOfParameters_Text { get; }
    public static string IncorrectParameterType_Text { get; }
    public static string IncorrectParenthesesBracketsNesting_ToolTip { get; }
    public static string IncorrectTypeArgument_Text { get; }
    public static string IncorrecttypeofValueMessage { get; }
    public static string IndexExpressionArgumentOfconstEnumMustBeAStringLiteralMessage { get; }
    public static string IndexSignatureMustHaveATypeAnnotationMessage { get; }
    public static string IndexSignatureOfObjectTypeImplicitlyHasAnanyTypeMessage { get; }
    public static string IndexSignatureParameterMustHaveATypeAnnotationMessage { get; }
    public static string IndexSignatureParameterTypeMustBestringOrnumberMessage { get; }
    public static string IndividualDeclarationsInMergedDeclarationMustBeAllExportedOrAllLocalMessage { get; }
    public static string InEnumsWithMultipleDeclarationsOnlyOneDeclarationCanOmitAnInitializerForTheFirstEnumElementMessage { get; }
    public static string InferPossibleOverloadSignatures_Text { get; }
    public static string InitializerOfInstanceMemberVariableCannotReferenceIdentifierDeclaredInTheConstructorMessage { get; }
    public static string InitializerOfParameterCannotReferenceIdentifierDeclaredAfterItMessage { get; }
    public static string InitializersAreNotAllowedInAmbientContextsMessage { get; }
    public static string InlineMarkupBlocksPContentPCannotBe_ToolTip { get; }
    public static string InspectionsOptionPageTitle { get; }
    public static string InterfaceCannotExtendClassMessage { get; }
    public static string InterfaceCannotExtendInterfaceMessage { get; }
    public static string InterfaceIsRecursivelyReferencedAsABaseTypeOfItselfViaTypeMessage { get; }
    public static string IntermediateLocalVariableIsRedundantAndCanBeSafelyInlined { get; }
    public static string IntermediateLocalVariableIsRedundantBecauseItCanBeReplacedWithADestructuringSwapExpression { get; }
    public static string IntermediateVariableCanBeSafelyInlinedMessage { get; }
    public static string IntermediateVariableCanBeSafelyReplacedWithADestructuringSwapMessage { get; }
    public static string InternalModuleReferenceInImportDeclarationDoesntReferenceModuleInstanceForMessage { get; }
    public static string IntroduceVariableToApplyTypeGuardMessage { get; }
    public static string IntroducingVariableWillAllowToApplyTypeGuard { get; }
    public static string InvalidControlTypeConfigurableSeverityTitle { get; }
    public static string InvalidCSSValue { get; }
    public static string InvalidExpressionTypesNotKnownToSupportTheAdditionOperatorMessage { get; }
    public static string InvalidExternalModuleSpecificationItShouldBeValidFilePathWithoutFileExtensionMessage { get; }
    public static string InvalidHexadecimalValueOfColor { get; }
    public static string InvalidJSONExpressionExpectedOneOfObjectArrayNumberStringTrueFalseNullMessage { get; }
    public static string InvalidJSONSyntax { get; }
    public static string InvalidLeftHandSideOfAssignmentExpressionMessage { get; }
    public static string InvalidnewExpressionMessage { get; }
    public static string InvalidServerControlId_ToolTip { get; }
    public static string InvalidUseOfInStrictModeMessage { get; }
    public static string InvalidValue { get; }
    public static string InvocationOfNonFunctionExpression { get; }
    public static string InvocationOfNonFunctionExpression7 { get; }
    public static string InvocationOfParentClassMayBeConverted_Text { get; }
    public static string InvokedExpressionIsNotAFunctionValue { get; }
    public static string InvokedExpressionIsNotAFunctionValue6 { get; }
    public static string InvokedExpressionsCanBeNonFunctionMessage { get; }
    public static string InvokedExpressionsIsNotAFunctionMessage { get; }
    public static string IsInaccessibleMessage { get; }
    public static string IsNeverUsedMessage { get; }
    public static string IsNotAllowedInThisContextMessage { get; }
    public static string IsNotAValidJSONSyntaxMessage { get; }
    public static string IsRedundantDueToCurrentBrowserCompatibilityConfigurationMessage { get; }
    public static string IsRedundantMessage { get; }
    public static string JavaScriptHighlightingCleanupModule_GetModuleActionName_Processing_JavaScript { get; }
    public static string JavaScriptInspectionsSettingsSettingDescription { get; }
    public static string JoinDeclarationAndAssignmentMessage { get; }
    public static string JoinLocalVariableDeclarationAndAssignment { get; }
    public static string JSONPropertyNamesShouldBeStringsAreNotAllowedInJSONMessage { get; }
    public static string JSONValidationFailed { get; }
    public static string JSONValidationFailedMessage { get; }
    public static string JumpTargetCannotCrossFunctionBoundaryMessage { get; }
    public static string JumpTargetNotFoundMessage { get; }
    public static string LabelNameOrExpectedMessage { get; }
    public static string LambdaExpressionsInFormOfaBAreBlockLambdasWithAStatementbHavingALabela { get; }
    public static string LanguageOfCodeBehindDoesNotMatchToThe_ToolTip { get; }
    public static string LeftHandSideOfAssignmentExpressionCannotBeAConstantMessage { get; }
    public static string LeftHandSideOfAssignmentExpressionCannotBeReadOnlyMessage { get; }
    public static string letDeclarationsCanOnlyBeDeclaredInsideABlockMessage { get; }
    public static string letIsNotAllowedToBeUsedAsANameInletOrconstDeclarationsMessage { get; }
    public static string LexicalDeclarationCanOnlyBeDeclaredInsideABlock { get; }
    public static string LexicalDeclarationCanOnlyBeDeclaredInsideABlockMessage { get; }
    public static string LineBreakNotPermittedHereMessage { get; }
    public static string LineTerminatorNotPermittedBeforeArrowMessage { get; }
    public static string LocalClassIsNeverUsedMessage { get; }
    public static string LocalClassNameIsNeverUsedWithinItsOwnBlockSoItIsRedundantMessage { get; }
    public static string LocalClassNameIsRedundantBecauseItIsNeverUsedFromWithinItsOwnBlock { get; }
    public static string LocalFunctionIsNeverCalledRecursivelySoItsNameIsRedundantMessage { get; }
    public static string LocalFunctionIsNeverUsedMessage { get; }
    public static string LocalFunctionIsRedefinedLater { get; }
    public static string LocalFunctionNameIsRedundantBecauseItIsNeverCalledRecursively { get; }
    public static string LocalVariableCanBeSafelyMovedToInnerBlock { get; }
    public static string LocalVariableFunctionClassIsDeclaredButNeverUsed { get; }
    public static string LocalVariableIsNeverUsedMessage { get; }
    public static string LocationElementIsUnused__ToolTip { get; }
    public static string LValueExpectedError { get; }
    public static string LValueIsExpectedMessage { get; }
    public static string MappedPathConfigurableSeverityTitle { get; }
    public static string MappedTagTypeNotFound_ToolTip { get; }
    public static string MappedTagTypeShouldBeSpecified_ToolTip { get; }
    public static string MatchingConstructorOfType_NotFoundFor_Text { get; }
    public static string MatchingParameterConstraintsConstructorNotFoundConfigurableSeverityDescription { get; }
    public static string MatchingParameterConstraintsConstructorNotFoundConfigurableSeverityTitle { get; }
    public static string MediaFeatureDoesntExistInCSSMessage { get; }
    public static string MemberAssignedByAFunctionMayBeConverted_Text { get; }
    public static string MemberOfObjectTypeImplicitlyHasAnTypeMessage { get; }
    public static string Message { get; }
    public static string MismatchASPNETMVCModelTypeConfigurableSeverityDescription { get; }
    public static string MismatchModelTypeConfigurableSeverityTitle { get; }
    public static string MisplacedAddTag_ToolTip { get; }
    public static string MisplacedClearTag_ToolTip { get; }
    public static string MisplacedRemoveTag_ToolTip { get; }
    public static string MisuseOfthisQualifierInInnerFunction { get; }
    public static string ModifierCannotBeUsedWithModifierMessage { get; }
    public static string ModifierMustPrecedeModifierMessage { get; }
    public static string ModifiersStyle_Text { get; }
    public static string ModuleCannotBeAliasedToANonModuleTypeMessage { get; }
    public static string ModuleCannotHaveMultipleExportAssignmentsMessage { get; }
    public static string ModuleCannotMergeWithDeclarationOfInADifferentFileMessage { get; }
    public static string ModuleQualificationRequired_ToolTip { get; }
    public static string MoreSpecificSignatureFollowsLessSpecific { get; }
    public static string MoreSpecificSignatureFollowsLessSpecificPotentialErrorMessage { get; }
    public static string MoreThanOneConstructorOfType_FoundFor_Text { get; }
    public static string MoreThanOneParameterConstraintsConstructorMatchedConfigurableSeverityDescription { get; }
    public static string MoreThanOneParameterConstraintsConstructorMatchedConfigurableSeverityTitle { get; }
    public static string MultipleConstructorImplementationsAreNotAllowedMessage { get; }
    public static string MultipleDeclarationsInforInError { get; }
    public static string MultipleVariableDeclarationsAreNotAllowedInforInLoop { get; }
    public static string MVCConfigurableSeverityCompoundItemName { get; }
    public static string NameCannotBeAsItIsAReservedWordMessage { get; }
    public static string NameCannotBeEmpty_ToolTip { get; }
    public static string NamedPropertyTypeMustBeAssignableToStringIndexerTypeMessage { get; }
    public static string NamedPropertyTypeMustBeAssignableToStringIndexerTypeMessage10 { get; }
    public static string Namespace_IsAlreadyAdded_ToolTip { get; }
    public static string Namespace_IsAlreadyBoundToTagPrefix_ToolTip { get; }
    public static string NamespaceCannotBeBoundToPairOfTagPrefix_ToolTip { get; }
    public static string NamespaceMustBeSpecified_ToolTip { get; }
    public static string newCannotBeUsedToCreateAnArrayUsenewArrayInsteadMessage { get; }
    public static string NewerTwoColonSyntaxIsSupportedByAllSpecifiedBrowsers { get; }
    public static string NewExpressionWhichLacksAConstructorSignatureImplicitlyHasAnanyTypeMessage { get; }
    public static string NewlineCausesTextToBeTreatedAsTwoSeparateStatementsThoughMaybeItWasIntendedToBeASingleOne { get; }
    public static string NewLinesAreNotAllowedInInheritsAttribute_ToolTip { get; }
    public static string NoContentFound_Text { get; }
    public static string NonAssignedConstant { get; }
    public static string NonCompliantPathStyleInsiderequire { get; }
    public static string NonCompliantpublicModifierOrItsAbsence { get; }
    public static string NonCompliantQuotesAroundStringLiteral { get; }
    public static string NonExportedImportIsDeclaredButIsNeverUsed { get; }
    public static string NonGenericFunctionsMayNotAcceptTypeArgumentsMessage { get; }
    public static string NonParenthesizedObjectDestructuringAssignmentCannotBeUsedInAnExpressionStatement { get; }
    public static string NonParenthesizedObjectDestructuringAssignmentCannotBeUsedInExpressionStatementMessage { get; }
    public static string NonStaticUsageInAStaticContextMessage { get; }
    public static string NoProjectItemFoundAt__Text { get; }
    public static string NotAllCodePathsReturnAValue { get; }
    public static string NotAllCodePathsReturnAValueMessage { get; }
    public static string NotAllRouteParametersArePassedToMethod_Text { get; }
    public static string NotAllRouteParametersArePassedToMethodConfigurableSeverityDescription { get; }
    public static string NotAllRouteParametersArePassedToMethodConfigurableSeverityTitle { get; }
    public static string NumericallyNamedPropertyTypeMustBeAssignableToNumericIndexerTypeMessage { get; }
    public static string NumericallyNamedPropertyTypeMustBeAssignableToNumericIndexerTypeMessage9 { get; }
    public static string NumericIndexerTypeMustBeAssignableToStringIndexerTypeMessage { get; }
    public static string NumericIndexerTypeMustBeAssignableToStringIndexerTypeMessage8 { get; }
    public static string ObjectConstructedBynewExpressionIsNotUsedFunctionShouldBeCalledInGeneralMannerIfUsedForSideEffects { get; }
    public static string ObjectIsPossiblynullOrundefinedMessage { get; }
    public static string ObjectLiteralsPropertyImplicitlyHasAnTypeMessage { get; }
    public static string ObjectPropertyDeclarationIsExpected { get; }
    public static string ObjectPropertyDeclarationIsExpectedMessage { get; }
    public static string ObsoleteOrNonstandardElementConfigurableSeverityDescription { get; }
    public static string ObsoleteOrNonstandardElementConfigurableSeverityTitle { get; }
    public static string OctalLiteralsAndEscapeSequencesAreNotAllowedInstrictMode { get; }
    public static string OctalLiteralsAndEscapeSequencesAreNotAllowedInstrictModeMessage { get; }
    public static string OctalLiteralsAndEscapeSequencesUsingInstrictMode { get; }
    public static string OctalLiteralsAreNotAllowedInStrictModeMessage { get; }
    public static string OctalLiteralsAreNotAvailableWhenTargetingECMAScriptAndHigherMessage { get; }
    public static string OmittingElementsIsProhibitedForJSONArraysMessage { get; }
    public static string OnlyAmbientModulesCanUseQuotedNamesMessage { get; }
    public static string OnlyOneVariableCanBeDeclaredInForHeaderMessage { get; }
    public static string OnlyPublicMethodsOfTheBaseClassAreAccessibleViaThesuperKeywordMessage { get; }
    public static string OnlyTwoColonSyntaxMayBeUsedInTheContext { get; }
    public static string OperatorCannotBeAppliedToTypesAndMessage { get; }
    public static string OperatorCannotBeAppliedToTypesAndMessage2 { get; }
    public static string OptionalParameterCanBePrecededOnlyBy_Text { get; }
    public static string OptionalParameterMustBeAtTheEndOfThe_Text { get; }
    public static string OptionalParameterMustBeAtTheEndOfTheSegmentConfigurableSeverityDescription { get; }
    public static string OptionalParameterMustBeAtTheEndOfTheSegmentConfigurableSeverityTitle { get; }
    public static string OptionalParametersMayOnlyBeFollowedByOtherOptionalParametersMessage { get; }
    public static string OverloadIsLessSpecificThanTheMainSignature { get; }
    public static string OverloadIsLessSpecificThanTheMainSignaturePotentialErrorMessage { get; }
    public static string OverloadParameterWhichDoesntParticipateInTheMainSignatureDoesntMakeAnySense { get; }
    public static string OverloadsCannotDifferOnlyByReturnTypeMessage { get; }
    public static string OverloadSignatureIsNotCompatibleWithFunctionDefinitionMessage { get; }
    public static string OverloadSignatureIsNotCompatibleWithFunctionDefinitionMessage7 { get; }
    public static string OverloadSignaturesMustAllBeExportedOrLocalMessage { get; }
    public static string OverloadSignaturesMustAllBeOptionalOrRequiredMessage { get; }
    public static string Overrides___ClickToNavigate_Text { get; }
    public static string Overrides__Text { get; }
    public static string OverwritingPrototypeOfNativeObject { get; }
    public static string OverwritingPrototypeOfNativeObjectHasNoEffect { get; }
    public static string OverwritingPrototypeOfNativeObjectHasNoEffectMessage { get; }
    public static string Parameter__Text { get; }
    public static string Parameter_DeclaredInRouteMoreThanOnce_Text { get; }
    public static string Parameter_IsNotUsedInMethodCall_ToolTip { get; }
    public static string ParameterCannotBeReferencedInItsInitializerMessage { get; }
    public static string ParameterCannotHaveQuestionMarkAndInitializerMessage { get; }
    public static string ParameterDeclaredInRouteMoreThanOnceConfigurableSeverityDescription { get; }
    public static string ParameterDeclaredInRouteMoreThanOnceConfigurableSeverityTitle { get; }
    public static string ParameterDoesntParticipateInTheMainSignature { get; }
    public static string ParameterDoesntParticipateInTheMainSignatureMessage { get; }
    public static string ParameterIsNeverUsedMessage { get; }
    public static string ParameterNameargumentsClashesWithPreDefinedJSFunctionScopeVariable { get; }
    public static string ParameterNameargumentsClashesWithPreDefinedJSFunctionScopeVariableMessage { get; }
    public static string ParameterOfCallSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfCallSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfConstructorFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfConstructorFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfConstructorSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfConstructorSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfExportedFunctionHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfExportedFunctionIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfFunctionIsDeclaredButNeverUsed { get; }
    public static string ParameterOfFunctionIsDeclaredButNeverUsedAndThatFunctionIsInherited { get; }
    public static string ParameterOfFunctionTypeImplicitlyHasAnTypeMessage { get; }
    public static string ParameterOfMethodFromExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfMethodFromExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfPublicMethodFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfPublicMethodFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfPublicPropertySetterFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfPublicPropertySetterFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfPublicStaticMethodFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfPublicStaticMethodFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterOfPublicStaticPropertySetterFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ParameterOfPublicStaticPropertySetterFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ParameterPropertyValueAssignedInsideConstructorWontBeAssignedToClassProperty { get; }
    public static string ParameterPropertyValueAssignedInsideTheConstructorWontBeAssignedToAClassPropertyDidYouWantToUsethisMessage { get; }
    public static string ParametersDoNotMatchToTheMethodSignature_Text { get; }
    public static string ParametersInSignaturesMayNotHaveDefaultValuesUseToSpecifyOptionalParametersMessage { get; }
    public static string ParametersTypeCanBeMadeStricterDueToAppliedConstraintsConfigurableSeverityDescription { get; }
    public static string ParametersTypeCanBeMadeStricterDueToAppliedConstraintsConfigurableSeverityTitle { get; }
    public static string ParameterValueIsNotUsed { get; }
    public static string ParameterValueIsNotUsedBecauseItIsOverriddenInMethodBodyMessage { get; }
    public static string ParameterValueIsNotUsedBecauseItIsOverriddenInTheFunctionBody { get; }
    public static string PartialName_IsAlreadyBound_ToolTip { get; }
    public static string PartialNameAttributeIsMissing_ToolTip { get; }
    public static string PartialNameCannotBeEmpty_ToolTip { get; }
    public static string PathErrorConfigurableSeverityDescription { get; }
    public static string PathErrorConfigurableSeverityTitle { get; }
    public static string PathForFileReferencedByAReferenceCommentIsNotFound { get; }
    public static string PathForReferenceCommentNotFound { get; }
    public static string PathIsEmpty_Text { get; }
    public static string PathIsMappedToADifferentPathInProjectSettingsConfigurableSeverityDescription { get; }
    public static string PathStyle_Text { get; }
    public static string PathStyleInsiderequireDoesntAdhereToCodeStyleSetting { get; }
    public static string PossibleMistakeAmbiguousLambdaBlockAndObjectLiteral { get; }
    public static string PossibleOverloadsMayBeInferredByFunction_Text { get; }
    public static string PreferExplicitAnyTypeSpecifications_Caption { get; }
    public static string PreferExplicitlySpecifyingAnyOrNot_Text { get; }
    public static string PreferredQuotesKind_Text { get; }
    public static string PreferredQuotesKindForJavaScriptAnd_Caption { get; }
    public static string PresenceOfpublicModifierDoesntAdhereToCodeStyleSetting { get; }
    public static string PrivateClassFieldCanBeMadeReadonly { get; }
    public static string PrivateClassFieldCanBeMadeReadonlyMessage { get; }
    public static string PrivateClassFieldIsInitializedOnlyInConstructorAndThusCanBeMadeReadonly { get; }
    public static string ProfilesAreAllowedInMainWebConfigOnly_ToolTip { get; }
    public static string Property__Text { get; }
    public static string Property_IsAlreadyDefinedInClass__ToolTip { get; }
    public static string Property_Text { get; }
    public static string PropertyAccessorMayNotBeDeclaredInAmbientClassesMessage { get; }
    public static string PropertyDoesNotOverrideVendorPrefixedProperty { get; }
    public static string PropertyDoesntExistInCSSMessage { get; }
    public static string PropertyGetterCannotHaveParameters { get; }
    public static string PropertyGetterCannotHaveParametersMessage { get; }
    public static string PropertyOfExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string PropertyOfExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string PropertyOrFunctionIsDeclaredButNeverUsed { get; }
    public static string PropertyOrGlobalVariableIsPossiblyNeverAssignedMessage { get; }
    public static string PropertySetterMustHaveASingleParameter { get; }
    public static string PropertySetterMustHaveASingleParameterMessage { get; }
    public static string PropertyShouldComeAfterVendorSpecificPropertiesMessage { get; }
    public static string PropertyWithQualifierthisThatIsUsedInAnInnerFunctionMatchesByNameWithPropertyDefinedInTheOuterFunction { get; }
    public static string PseudoClassDoesntExistInCSSMessage { get; }
    public static string PseudoElementDoesntExistInCSSMessage { get; }
    public static string PseudoFunctionDoesntExistInCSSMessage { get; }
    public static string PublicModifierIsOptionalInTypeScript_Text { get; }
    public static string PublicPropertyOfExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string PublicPropertyOfExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string PublicStaticPropertyOfExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string PublicStaticPropertyOfExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string QualifierCanBeMessage { get; }
    public static string QualifierCanBenullOrundefined { get; }
    public static string QualifierCanBenullOrundefined4 { get; }
    public static string QualifierIsMessage { get; }
    public static string QualifierIsnullOrundefined { get; }
    public static string QualifierIsnullOrundefined5 { get; }
    public static string QualifierIsRedundantMessage { get; }
    public static string QuotesAroundStringLiteralDifferFromCodeStyleSetting { get; }
    public static string RazorParenthesisInImplicitExpressionsCleanup_Name_Fix_parenthesis_in_Razor_expressions { get; }
    public static string readonlyTypeModifierIsOnlyPermittedOnArrayAndTupleLiteralTypesMessage { get; }
    public static string RedeclarationOfBlockScopeVariableMessage { get; }
    public static string RedeclarationOfLetConst { get; }
    public static string RedundantBlock { get; }
    public static string RedundantCode { get; }
    public static string RedundantCSSHack { get; }
    public static string RedundantelseBlock { get; }
    public static string RedundantelseBlockMessage { get; }
    public static string RedundantEmptyConstructorWithoutParameters { get; }
    public static string RedundantEmptyConstructorWithoutParametersMessage { get; }
    public static string RedundantLocalClassName { get; }
    public static string RedundantLocalFunctionName { get; }
    public static string RedundantMeasureUnit { get; }
    public static string RedundantParentTypeSpecificationInExtendsImplements { get; }
    public static string ReferenceCommentCreatesCyclicDependency { get; }
    public static string ReferencedPropertyIsDeclaredLaterOrItReferencesItselfInAStaticInitializer { get; }
    public static string ReferenceToFileCreatesCyclicDependencyViaMessage { get; }
    public static string ReferenceTypeExpected_Text { get; }
    public static string RegisterDirectiveIsUnusedAndCanBeSafely_ToolTip { get; }
    public static string RelativePathsAreNotAllowedInWebConfig_ToolTip { get; }
    public static string RelativeReferencesInImportsExportsCan_Text { get; }
    public static string RepeatedAmbientModifierInThisContextIsTheEnclosingModuleOrClassAlreadyAmbientMessage { get; }
    public static string RequiredTypeParametersMayNotFollowOptionalTypeParametersMessage { get; }
    public static string RequireECMAScriptCompilerTargetCurrentTargetIsMessage { get; }
    public static string RequiresFallbackColor { get; }
    public static string RequiresFallbackColorMessage { get; }
    public static string ReSharperDoesNotSupportPageParserFilterType_ToolTip { get; }
    public static string RestParametersMustBeArrayTypesMessage { get; }
    public static string ReturnFromGlobalScopeShouldntHaveValueMessage { get; }
    public static string ReturnStatementShouldHaveValueMessage { get; }
    public static string ReturnStatementWithAValueInTheGlobalScope { get; }
    public static string ReturnStatementWithAValueInTheGlobalScope15 { get; }
    public static string ReturnTypeOfCallSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfCallSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfConstructorSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfConstructorSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfConstructorSignatureMustBeAssignableToTheInstanceTypeOfTheClassMessage { get; }
    public static string ReturnTypeOfExportedFunctionHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfExportedFunctionIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfIndexSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfIndexSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfMethodFromExportedInterfaceHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfMethodFromExportedInterfaceIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfPublicMethodFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfPublicMethodFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfPublicPropertyGetterFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfPublicPropertyGetterFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfPublicStaticMethodFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfPublicStaticMethodFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string ReturnTypeOfPublicStaticPropertyGetterFromExportedClassHasOrIsUsingPrivateTypeMessage { get; }
    public static string ReturnTypeOfPublicStaticPropertyGetterFromExportedClassIsUsingInaccessibleModuleMessage { get; }
    public static string RouteParameter_IsNotPassedToMethod_Text { get; }
    public static string RouteParameter_IsNotPassedToSomeOfController_Text { get; }
    public static string RouteParameterCanBePassedToMethodConfigurableSeverityDescription { get; }
    public static string RouteParameterCanBePassedToMethodConfigurableSeverityTitle { get; }
    public static string RouteParameterConstraint_CanBeAdded_Text { get; }
    public static string RouteParameterConstraint_NotResolved_Text { get; }
    public static string RouteParameterConstraintArgumentCannotBeConvertedToTargetTypeConfigurableSeverityDescription { get; }
    public static string RouteParameterConstraintArgumentCannotBeConvertedToTargetTypeConfigurableSeverityTitle { get; }
    public static string RouteParameterConstraintCanBeAddedDueToTypeOfMethodArgumentConfigurableSeverityDescription { get; }
    public static string RouteParameterConstraintCanBeAddedDueToTypeOfMethodArgumentConfigurableSeverityTitle { get; }
    public static string RouteParameterConstraintNotResolvedConfigurableSeverityDescription { get; }
    public static string RouteParameterConstraintNotResolvedConfigurableSeverityTitle { get; }
    public static string RoutePrefix_CanBeExtractedToControllerTemplate_Text { get; }
    public static string RoutePrefix_CanBeExtractedToControllerTemplates_Text { get; }
    public static string RouteToken_NotResolved_Text { get; }
    public static string RouteTokenNotResolvedConfigurableSeverityDescription { get; }
    public static string RouteTokenNotResolvedConfigurableSeverityTitle { get; }
    public static string RunatAttributeIsNeglectableForTagsThat_ToolTip { get; }
    public static string SameItemIsImportedTwiceWithDifferentNames { get; }
    public static string ScriptTagIsEmpty_ToolTip { get; }
    public static string SectionBodyExpected_ToolTip { get; }
    public static string FunctionsBodyExpected_ToolTip { get; }
    public static string SectionNameExpected_ToolTip { get; }
    public static string SequentialIndexingCanBeReplacedByAMessage { get; }
    public static string SequentialIndexingInPropertiesCanBeReplacedByShortHandPropertiesAfterADestructuringAssignmentMessage { get; }
    public static string SequentialUndefinedCheckingCanBeReplacedWithAMessage { get; }
    public static string ServerTagsCannotContainConstructs_ToolTip { get; }
    public static string setAccessorCannotHaveRestParameterMessage { get; }
    public static string setAccessorParameterCannotBeOptionalMessage { get; }
    public static string setAccessorParameterCannotHaveAnInitializerMessage { get; }
    public static string SetterAlreadyDeclaredMessage { get; }
    public static string SettersCannotReturnAValueMessage { get; }
    public static string ShouldHaveAnImplementationMessage { get; }
    public static string SimilarExpressionsComparison { get; }
    public static string SimilarExpressionsComparisonMessage { get; }
    public static string SingleOrDoubleQuotesForJavaScriptTypeScript_Text { get; }
    public static string SomeOfFunctionExitsReturnValueButTheOthersDont { get; }
    public static string SpecializedOverloadSignatureIsNotAssignableToAnyNonSpecializedSignatureMessage { get; }
    public static string SpecifiedFileIsNotAPartOfSolutionMessage { get; }
    public static string SpecifyingThisParentTypeIsRedundantBecauseIsAlreadyPresentInTheListMessage { get; }
    public static string SpecifyingTrueFalseWithBooleanConditionIsRedundant { get; }
    public static string SpreadOperatorInnewExpressionsIsOnlyAvailableWhenTargetingECMAScriptAndHigherMessage { get; }
    public static string SrcControlCannotBeBoundToTagPrefixSpecify_ToolTip { get; }
    public static string SrcControlMustBeSpecified_ToolTip { get; }
    public static string StandardPropertyShouldBeSetAfterVendorPrefixedProperty { get; }
    public static string StatementIsPossiblyIncorrectlyBrokenByANewline { get; }
    public static string StatementIsPossiblyIncorrectlyBrokenByANewlineMessage { get; }
    public static string StatementsAreNotAllowedInAmbientContextsMessage { get; }
    public static string StatementTerminationDoesntMatchCodeStyle { get; }
    public static string StatementTerminationDoesntMatchCodeStyle1 { get; }
    public static string StatementTerminationDoesntMatchCodeStyleMessage { get; }
    public static string StaticMemberCannotBeAccessedOffAnInstanceVariableMessage { get; }
    public static string StaticMembersCannotReferenceClassTypeParametersMessage { get; }
    public static string StaticnessOfTheOverloadDoesNotAgreeWithTheDefinitionMessage { get; }
    public static string StringConcatenationCanBeConvertedToATemplateString { get; }
    public static string StringLiteralUsageAllowsCreatingASpecializedOverloadMessage { get; }
    public static string StringLiteralUsageAllowsCreatingSpecializedOverload { get; }
    public static string StyleOfRelativeFileReferencesInImports_Caption { get; }
    public static string SubsequentIndexersCanBeReplacedByADestructuringDeclarationOrAssignment { get; }
    public static string SubsequentIndexersInObjectLiteralFieldsCanBeSimplifiedWithDestructuring { get; }
    public static string SubsequentVariableDeclarationsMustHaveTheSameTypeButTheyDeclareSeveralIncompatibleTypesMessage { get; }
    public static string SuperCallsAreNotPermittedOutsideConstructorsOrInLocalFunctionsInsideConstructorsMessage { get; }
    public static string superCannotBeReferencedInAComputedPropertyNameMessage { get; }
    public static string superCannotBeReferencedInNonDerivedClassesMessage { get; }
    public static string superCanOnlyBeUsedInsideAClassMethodMessage { get; }
    public static string superInvocationCannotHaveTypeArgumentsMessage { get; }
    public static string superMustBeCalledBeforeAccessingthisInTheConstructorOfADerivedClass { get; }
    public static string superMustBeCalledBeforeAccessingthisInTheConstructorOfADerivedClassMessage { get; }
    public static string superMustBeFollowedByAnArgumentListOrMemberAccessMessage { get; }
    public static string superPropertyAccessIsPermittedOnlyInAConstructorMemberFunctionOrMemberAccessorOfADerivedClassMessage { get; }
    public static string superShouldBeCalledBeforeAccessingthisInTheConstructorOfADerivedClassThisIsCurrentlyNotReportedByTheTypeScriptCompilerMessage { get; }
    public static string SuppliedParametersDoNotMatchAnySignatureOfCallTargetMessage { get; }
    public static string SuppliedParametersDoNotMatchAnySignatureOfCallTargetMessage5 { get; }
    public static string SuspiciousExpressionStatement { get; }
    public static string SuspiciousinstanceofCheck { get; }
    public static string SuspiciousinstanceofCheckMessage { get; }
    public static string SuspiciousSyntaxThisIsABlockDidYouWantToHaveAnObjectLiteralHereMessage { get; }
    public static string SuspiciousthisUsageInContextOfLocalFunctionInsideClassMember { get; }
    public static string SuspiciousthisUsageInCurrentContextthisRefersToALocalFunctionNotToAContainingClassMessage { get; }
    public static string SuspicioustypeofCheck { get; }
    public static string SuspicioustypeofCheckMessage { get; }
    public static string SuspiciousUseOfthisQualifierFromInnerFunctionMessage { get; }
    public static string Symbol_IsUsedFromModule_WhichIsNotCopied_Text { get; }
    public static string SymbolCannotBeProperlyResolvedOnlyPossibleDynamicOptionIsProvidedMessage { get; }
    public static string SymbolCannotBeProperlyResolvedProbablyItIsLocatedInInaccessibleModuleMessage { get; }
    public static string SymbolDoesntExistInCSSMessage { get; }
    public static string SymbolFromModuleThatMightBeMissingAtRuntimeConfigurableSeverityTitle { get; }
    public static string SymbolIsPossiblyInInaccessibleModule { get; }
    public static string SymbolNotResolvedConfigurableSeverityDescription { get; }
    public static string SymbolNotResolvedConfigurableSeverityTitle { get; }
    public static string SyntaxError_ToolTip { get; }
    public static string SyntaxErrorConfigurableSeverityDescription { get; }
    public static string SyntaxErrorConfigurableSeverityTitle { get; }
    public static string SyntaxIsNotAllowedInCSSMessage { get; }
    public static string SyntaxIsNotAllowedInSpecifiedCSSVersion { get; }
    public static string SyntaxIsNotAllowedInSpecifiedCSSVersion2 { get; }
    public static string Tag_NotClosed_ToolTip { get; }
    public static string TaggedTemplatesAreOnlyAvailableWhenTargetingECMAScriptAndHigherMessage { get; }
    public static string TagMappingForType_IsDefinedMoreThan_ToolTip { get; }
    public static string TagNameCannotBeEmpty_ToolTip { get; }
    public static string TagPrefixCannotBeEmpty_ToolTip { get; }
    public static string TagPrefixMustBeSpecified_ToolTip { get; }
    public static string TagTypeNotFound_ToolTip { get; }
    public static string TagTypeShouldBeSpecified_ToolTip { get; }
    public static string TernaryExpressionCanBeReplacedWithItsconditionMessage { get; }
    public static string TernaryOperatorMayBeReplacedByItsCondition { get; }
    public static string TheargumentsObjectCannotBeReferencedInAnArrowFunctionConsiderUsingAStandardFunctionExpressionMessage { get; }
    public static string TheBodyOfAnifStatementCannotBeTheEmptyStatementMessage { get; }
    public static string TheEntry_HasAlreadyBeenAdded_ToolTip { get; }
    public static string TheExpressionInAOrBlockCannotBeAnEmpty_ToolTip { get; }
    public static string TheFileDoesnTExist_ToolTip { get; }
    public static string TheIncludedFileCanBeInTheSameDirectory_ToolTip { get; }
    public static string TheRenderModeDirectiveExpectsAnIdentifier_ToolTip { get; }
    public static string TheInjectDirectiveExpectsAnIdentifier_ToolTip { get; }
    public static string TheInjectDirectiveExpectsATypeName_ToolTip { get; }
    public static string TheImplementsDirectiveExpectsATypeName_ToolTip { get; }
    public static string TheInheritsDirectiveExpectsATypeName_ToolTip { get; }
    public static string TheModelDirectiveExpectsATypeName_ToolTip { get; }
    public static string TheLayoutDirectiveExpectsATypeName_ToolTip { get; }
    public static string TypeExpected_ToolTip { get; }
    public static string TheIsNotCompatibleWithMessage { get; }
    public static string TheLeftHandSideOfAnArithmeticOperationMustBeOfTypeanynumberOrAnEnumTypeMessage { get; }
    public static string TheLeftHandSideOfAnAssignmentExpressionMustBeAVariablePropertyOrIndexerMessage { get; }
    public static string TheLeftHandSideOfAninExpressionMustBeOfTypesstringnumberOranyMessage { get; }
    public static string TheLeftHandSideOfAninstanceofExpressionMustBeOfTypeanyAnObjectTypeOrATypeParameterMessage { get; }
    public static string TheNewerSyntaxIsNotCompatibleWithMessage { get; }
    public static string TheOperandOfAnIncrementOrDecrementOperatorCannotBeAConstantMessage { get; }
    public static string TheOperandOfAnIncrementOrDecrementOperatorCannotBeReadOnlyMessage { get; }
    public static string TheOperandOfAnIncrementOrDecrementOperatorMustBeAVariablePropertyOrIndexerMessage { get; }
    public static string ThePropertyDoesNotExistOnValueOfTypeMessage { get; }
    public static string ThePseudoElementMustStartWithMessage { get; }
    public static string ThereIsNoHasOwnPropertyCheckInABodyOfforInLoopThisWillCauseAnEnumerationOfPrototypeProperties { get; }
    public static string ThereIsNoHasOwnPropertyCheckInABodyOfforInLoopThisWillCauseAnEnumerationOfPrototypePropertiesMessage { get; }
    public static string TheRequiredAttribute_IsNotFoundOn_Control_ToolTip { get; }
    public static string TheRightHandSideOfAforInStatementMustBeOfTypeanyAnObjectTypeOrATypeParameterMessage { get; }
    public static string TheRightHandSideOfAnArithmeticOperationMustBeOfTypeanynumberOrAnEnumTypeMessage { get; }
    public static string TheRightHandSideOfAninExpressionMustBeOfTypeanyAnObjectTypeOrATypeParameterMessage { get; }
    public static string TheRightHandSideOfAninstanceofExpressionMustBeOfTypeanyOrASubtypeOfTheFunctionInterfaceTypeMessage { get; }
    public static string TheTypeArgumentForTypeParameterCannotBeInferredFromTheUsageConsiderSpecifyingTheTypeArgumentsExplicitlyMessage { get; }
    public static string TheTypeOfAUnaryArithmeticOperationOperandMustBeOfTypeanynumberOrAnEnumTypeMessage { get; }
    public static string TheTypeParameterConstraintShouldBeAValidTypeMessage { get; }
    public static string TheVariableDeclarationOfAforInOrAforOfStatementCannotHaveAnInitializerMessage { get; }
    public static string TheWordIsReservedForFutureVersionsOfECMAScript { get; }
    public static string thisCannotBeReferencedInAComputedPropertyNameMessage { get; }
    public static string thisCannotBeReferencedInConstructorArgumentsMessage { get; }
    public static string thisCannotBeReferencedInCurrentLocationMessage { get; }
    public static string thisCannotBeReferencedInStaticInitializersInAClassBodyMessage { get; }
    public static string thisCannotBeReferencedWithinModuleBodiesMessage { get; }
    public static string ThisIsNotScriptletWillBeOutputAsPlain_ToolTip { get; }
    public static string thisShouldntBeUsedInGlobalContextMessage { get; }
    public static string ThisValueWillBeIgnored { get; }
    public static string ThrowMustBeFollowedByAnExpressionMessage { get; }
    public static string throwStatementShouldBeFollowedByExpression { get; }
    public static string TrailingCommaInObjectPropertiesListMayLeadToErrorInSomeJSEnginesMessage { get; }
    public static string TrailingRedundantCommaInObjectPropertiesLeadsToErrorsInSomeJSEnginesEGIEsEngine { get; }
    public static string TrailingRedundantCommaInObjectPropertiesListMayBeError { get; }
    public static string TriedToQueryTypeOfUninitializedModuleMessage { get; }
    public static string TriedToSetVariableTypeToUninitializedModuleTypeMessage { get; }
    public static string TriesToCoerceValuesBeforeComparingThemWhichCanLeadToSomeUnexpectedResultsMessage { get; }
    public static string TripleSlashDirectivesAreOnlyValidAtTheTopOfTheFile { get; }
    public static string TripleSlashDirectivesAreOnlyValidAtTheTopOfTheFileMessage { get; }
    public static string TwoColonsExpected { get; }
    public static string TwoColonsPreferred { get; }
    public static string TwoDifferentImportDeclarationsAndForTheSameImportedItemMessage { get; }
    public static string TwoImportDeclarationsAreResolvedToTheSameItem { get; }
    public static string Type_DoesNotSatisfyConstraint__Text { get; }
    public static string Type_HasNoDefaultConstructor_Text { get; }
    public static string Type_HasOnly_Type__ToolTip { get; }
    public static string TypeAliasCircularlyReferencesItselfMessage { get; }
    public static string TypeAnnotationCannotAppearOnAConstructorDeclarationMessage { get; }
    public static string TypeArgumentsCountMismatch_Text { get; }
    public static string TypeAssertionCanBeReplacedWithasOperatorMessage { get; }
    public static string TypeAssertionInFormOfTypeexprCanBeConvertedToexprAsTypeForm { get; }
    public static string TypeCannotExtendWhichIsNotAConstructorFunctionTypeMessage { get; }
    public static string TypeCastAssertionIsRedundantAsProvidedValueAlwaysHasExactlyTheSameTypeAsTheTypeProvidedForTheCast { get; }
    public static string TypeCastAssertionIsRedundantAsProvidedValueAlwaysHasTypeIdenticalToTypeProvidedForTheCast { get; }
    public static string TypeCastIsRedundantExpressionIsAlwaysOfProvidedType { get; }
    public static string TypeCastIsRedundantExpressionIsAlwaysOfSpecifiedTypeMessage { get; }
    public static string TypeCastIsRedundantExpressionIsOfAStructurallyCompatibleType { get; }
    public static string TypeCastIsRedundantExpressionIsOfATypeStructurallyIdenticalToSpecifiedTypeMessage { get; }
    public static string TypeDoesNotSatisfyTheConstraintextendsForTypeParameterMessage { get; }
    public static string TypeGuardAlwaysProducesneverTypeMessage { get; }
    public static string TypeGuardDefinitelyProducesneverTypeForTheVariable { get; }
    public static string TypeGuardDoesntAffectTheTypeMessage { get; }
    public static string TypeGuardDoesntAffectVariablesTypeInAnyWay { get; }
    public static string TypeGuardsCannotBeAppliedToExpressionsButCanBeAppliedToLocalVariablesIntroducingVariableWillAllowTypeGuardToBeApplied { get; }
    public static string TypeGuardWhichDefinitelyProducesneverForTheVariableTypeIsSuspicious { get; }
    public static string TypeGuardWhichDoesntReallyAffectTheVariablesTypeIsRedundant { get; }
    public static string TypeHasNoPropertyAndNoStringIndexSignatureMessage { get; }
    public static string TypeHasNoPropertyMessage { get; }
    public static string TypeIsNotAnArrayTypeMessage { get; }
    public static string TypeIsNotGenericMessage { get; }
    public static string TypeMustHaveASymbolIteratorMethodThatReturnsAnIteratorMessage { get; }
    public static string TypeNameInExtendsClauseDoesntReferenceConstructorFunctionForMessage { get; }
    public static string TypeOfCanBeSpecifiedExplicitlyMessage { get; }
    public static string TypeOfConditionalMustBeIdenticalToOrMessage { get; }
    public static string TypeOfConditionalMustBeIdenticalToOrMessage11 { get; }
    public static string TypeOfParameter_CanBeMade_DueToApplied_Text { get; }
    public static string TypeOfParameter_DoesnTSatisfyRouteConstraints_Text { get; }
    public static string TypeOfParameterDoesntSatisfyConstraintsDeclaredInRouteTemplateConfigurableSeverityDescription { get; }
    public static string TypeOfParameterDoesntSatisfyConstraintsDeclaredInRouteTemplateConfigurableSeverityTitle { get; }
    public static string TypeOfVariableMayBeSpecifiedExplicitly { get; }
    public static string TypeParameterConstraintCannotBeAPrimitiveTypeMessage { get; }
    public static string TypeParameterHidesTypeParameterDeclaredInOuterScope { get; }
    public static string TypeParameterHidesTypeParameterDeclaredInOuterScopeMessage { get; }
    public static string TypeParameterIsRecursivelyReferencedAsAConstraintForItselfViaTypeParameterMessage { get; }
    public static string TypeParameterOfExportedElementHasOrIsUsingPrivateTypeMessage { get; }
    public static string TypeParameterOfExportedElementIsUsingInaccessibleModuleMessage { get; }
    public static string TypeParametersCannotAppearOnAConstructorDeclarationMessage { get; }
    public static string TypeParameterWithTheSameNameExistsInSomeOuterScopeAndCurrentDeclarationHidesIt { get; }
    public static string TypePredicatesAreAllowedOnlyForCallableSignaturesWithParametersMessage { get; }
    public static string TypeReferenceCannotReferToContainerMessage { get; }
    public static string TypeReferenceMustReferToTypeMessage { get; }
    public static string TypeScriptFeatureCurrentLanguageLevelIsMessage { get; }
    public static string TypeScriptHighlightingsCleanup_GetModuleActionName_Processing_TypeScript_code { get; }
    public static string TypeSpecificationForIsRedundantSpecifiedTypeIsTheSameWithContextualTypeMessage { get; }
    public static string TypeSpecificationIsRedundantBecauseVariableTypeIsContextuallyDeterminedFromTheTypeOfAssignedValue { get; }
    public static string TypeSpecificationPreferImplicitOrExplicit_Caption { get; }
    public static string TypeSpecificationStyle_Text { get; }
    public static string UnableToResolveModuleReferenceMessage { get; }
    public static string UnableToResolveTypeMessage { get; }
    public static string UnableToResolveTypeOfMessage { get; }
    public static string UnclosedTagConfigurableSeverityTitle { get; }
    public static string UnclosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription { get; }
    public static string UndeclaredVariableMessage { get; }
    public static string Unexpected_KeywordAfterCharacterOnce_ToolTip { get; }
    public static string UnexpectedCommaAfterTheLastElementMessage { get; }
    public static string UnexpectedModifierMessage { get; }
    public static string UnexpectedToken_ToolTip { get; }
    public static string UnitOfMeasureIsRedundantForZeroValue { get; }
    public static string UnitOfMeasureIsRedundantMessage { get; }
    public static string UnknownASPNETMVCViewComponentViewConfigurableSeverityDescription { get; }
    public static string UnknownAttributeConfigurableSeverityTitle { get; }
    public static string UnknownAttributeInHTMLAndRelatedTechnologiesConfigurableSeverityDescription { get; }
    public static string UnknownAttributeValueConfigurableSeverityTitle { get; }
    public static string UnknownAttributeValueInHTMLAndRelatedTechnologiesConfigurableSeverityDescription { get; }
    public static string UnknownCSSClass { get; }
    public static string UnknownCSSClassMessage { get; }
    public static string UnknownCSSSymbol { get; }
    public static string UnknownCustomProperty { get; }
    public static string UnknownEventConfigurableSeverityTitle { get; }
    public static string UnknownEventInHTMLAndRelatedTechnologiesConfigurableSeverityDescription { get; }
    public static string UnknownHTMLEntity__Text { get; }
    public static string UnknownHTMLEntityConfigurableSeverityDescription { get; }
    public static string UnknownHTMLEntityConfigurableSeverityTitle { get; }
    public static string UnknownTagConfigurableSeverityTitle { get; }
    public static string UnknownTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription { get; }
    public static string UnknownVendorSpecificExtension { get; }
    public static string UnknownVendorSpecificExtensionMessage { get; }
    public static string UnknownVendorSpecificValueMessage { get; }
    public static string UnknownViewComponentViewConfigurableSeverityTitle { get; }
    public static string UnmanagedTypeExpected_Text { get; }
    public static string UnreachableCode { get; }
    public static string UnrecognizedEscapeSequence_ToolTip { get; }
    public static string UntypedFunctionCallsMayNotAcceptTypeArgumentsMessage { get; }
    public static string Unused_Tag_ToolTip { get; }
    public static string UnusedLocalImport { get; }
    public static string UnusedLocalVariableFunctionClass { get; }
    public static string UnusedParameter { get; }
    public static string UnusedParameterOfInheritedMember { get; }
    public static string UnusedPropertyOrFunction { get; }
    public static string UsageOfPossiblyUnassignedLocalVariable { get; }
    public static string UsageOfPossiblyUnassignedValueMessage { get; }
    public static string UsageOfUnassignedLocalVariable { get; }
    public static string UsageOfUnassignedValueMessage { get; }
    public static string UseasOperatorInsteadOfTypeAssertion { get; }
    public static string UsebreakOrcontinueOutsideOfLoopBody { get; }
    public static string UseExplicitOrImplicitPublicModifier_Text { get; }
    public static string UseOfAnImplicitlyDeclaredGlobalVariableMessage { get; }
    public static string UseOfExpressionAfterBreakOrContinue { get; }
    public static string UseOfFutureReservedWord { get; }
    public static string UseOfFutureReservedWordMessage { get; }
    public static string UseOfImplicitlyDeclaredGlobalVariable { get; }
    public static string UseOfImplicitlyDeclaredGlobalVariable13 { get; }
    public static string UseOfInappropriateValueToTheLeftOfAssignmentOperator { get; }
    public static string UseOfPossiblyUnassignedPropertyInAStaticInitializer { get; }
    public static string UseOfPossiblyUnassignedPropertyInAStaticInitializerMessage { get; }
    public static string UseOfPossiblyUnassignedPropertyOrGlobalVariable { get; }
    public static string UseOfPossiblyUnassignedPropertyOrGlobalVariable14 { get; }
    public static string UseOfThewithStatementIsAnErrorInTypeScriptAllSymbolsWithinAWithBlockWillBeResolvedToanyMessage { get; }
    public static string UseOfthisInGlobalContext { get; }
    public static string UseOfthisInGlobalContext10 { get; }
    public static string UseOfUndeclaredVariable { get; }
    public static string UseOfUndeclaredVariable1 { get; }
    public static string UsingAVariablePropertyOrObjectWithoutDeclaringItIsNotAllowedInstrictMode { get; }
    public static string UsingAVariablePropertyOrObjectWithoutDeclaringItIsNotAllowedInstrictModeMessage { get; }
    public static string UsingOfargumentsCallerAndargumentsCallee { get; }
    public static string UsingOfargumentsCallerAndargumentsCalleeInstrictMode { get; }
    public static string UsingOfCoercedEquality { get; }
    public static string UsingOfCoercedEqualityOperator { get; }
    public static string UsingOfCoercedEqualityOperatorWithnullOrundefined { get; }
    public static string UsingOfevalargumentsNameInstrictMode { get; }
    public static string UsingOfFutureReservedKeywordsInstrictMode { get; }
    public static string UsingOfFutureReservedKeywordsIsNotAllowedInstrictMode { get; }
    public static string UsingOfFutureReservedKeywordsIsNotAllowedInstrictModeMessage { get; }
    public static string UsingOfUndeclaredGlobalVariable { get; }
    public static string UsingOfwithStatementsInstrictMode { get; }
    public static string ValueAssignedIsNotUsedInAnyExecutionPathMessage { get; }
    public static string ValueDoesnTMatchRealSizeOfImage_ToolTip { get; }
    public static string ValueIsNotCompatibleWithMessage { get; }
    public static string ValueIsUnexpected { get; }
    public static string ValueOfColorWithAlphaComponentIsNotSupportedMessage { get; }
    public static string ValueOfParameterIsNeverUsedBecauseItIsOverriddenInTheFunctionBodyMessage { get; }
    public static string ValueOfTypeIsNotCallableDidYouMeanToIncludenewMessage { get; }
    public static string ValueOfTypeIsNotCallableMessage { get; }
    public static string ValueOfTypeIsNotIndexableByTypeMessage { get; }
    public static string ValueOfTypeIsNotNewableMessage { get; }
    public static string ValueShouldHaveUnits { get; }
    public static string ValueTypeExpected_Text { get; }
    public static string VariableCanBeMadeBlockLocalMessage { get; }
    public static string VariableCanBeMadeConstant { get; }
    public static string VariableCanBeMadeConstantMessage { get; }
    public static string VariableDeclarationCanBeMovedToInnerBlockMessage { get; }
    public static string VariableDeclarationsOfAforInOrAforOfStatementCannotUseATypeAnnotationMessage { get; }
    public static string VariableDeclarationsOfAforStatementMustBeOfTypesstringOranyMessage { get; }
    public static string VariableImplicitlyHasAnTypeMessage { get; }
    public static string VariableIsNotAssignedOnSomeExecutionPaths { get; }
    public static string VariableIsUsedBeforeItIsDeclared { get; }
    public static string VariableIsUsedBeforeItIsDeclaredMessage { get; }
    public static string VariableIsUsedButIsWasntAssignedAValue { get; }
    public static string VariableIsUsedInInnerScopeBeforeItIsDeclared { get; }
    public static string VariableIsUsedInInnerScopeBeforeItIsDeclaredMessage { get; }
    public static string VariableIsUsedOutsideOfBlockWhichItIsDeclaredMessage { get; }
    public static string VariableIsUsedOutsideOfScopeWhichItIsDeclared { get; }
    public static string VariableShouldBeDeclaredEitherInCodeOrAsAmbientBydeclaredKeywordMessage { get; }
    public static string varVariableCanBeMadeletVariable { get; }
    public static string VisibilityOfTheOverloadDoesNotAgreeWithTheDefinitionMessage { get; }
    public static string WhenAllControllersActionsRouteTemplatesHaveSamePrefixesItsPossibleToExtractTheirCommonPrefixToControllersRouteTemplateConfigurableSeverityDescription { get; }
    public static string WhenElementIsElidedAtTheEndOfAnArrayThatElementDoesNotContributeToTheLengthOfTheArrayMessage { get; }
    public static string WhenNoImplicitAnyCompilerOptionIsSetEmitsErrorsForImplicitAny { get; }
    public static string WhichKindOfTypeSpecificationToPrefer_Text { get; }
    public static string WhichLacksgetAccessorAndParameterTypeAnnotationOnsetAccessorImplicitlyHasAnanyTypeMessage { get; }
    public static string WhichLacksReturnTypeAnnotationImplicitlyHasAnanyReturnTypeMessage { get; }
    public static string WhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage { get; }
    public static string withStatementIsNotAllowedInstrictMode { get; }
    public static string withStatementIsNotAllowedInstrictModeMessage { get; }
    public static string WrongAttributeQuotesConfigurableSeverityTitle { get; }
    public static string WrongClosedTagConfigurableSeverityTitle { get; }
    public static string WrongClosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription { get; }
    public static string WrongModuleConfigurableSeverityDescription { get; }
    public static string WrongModuleConfigurableSeverityTitle { get; }
    public static string WrongNameCase_Text { get; }
    public static string WrongSelfClosedTagConfigurableSeverityTitle { get; }
    public static string WrongSelfClosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription { get; }
    public static string YourCodeStyleRequiresLiteralExpressionToBeSurroundedWithQuotesMessage { get; }
    public static string YourCodeStyleRequiresOfpublicModifierMessage { get; }
    public static string YourCodeStyleRequiresRelativeModulePathsTostartWithMessage { get; }
    public static string ASPNETDeadCode_Text { get; }
    public static string ASPNETWarning_Text { get; }
    public static string ASPNETResolveWarning_Text { get; }
    public static string WrongImageSize_Text { get; }
    public static string UnknownSymbol_Text { get; }
    public static string UnknownSymbolInASPNETAndRelatedTechnologies_Text { get; }
    public static string AttributeWithOptionalValueProblem_Text { get; }
    public static string UnsupportedPageParserFilterType_Text { get; }
    public static string ReSharperDoesNotSupportPageParserFilterType_Text { get; }
    public static string UnusedRegisterDirective_Text { get; }
    public static string RegisterDirectiveIsUnusedAndCanBeSafely_Text { get; }
    public static string ObjectDataSourceMethodResolveProblem_Text { get; }
    public static string UnknownContentPlaceholder_Text { get; }
    public static string UnknownTheme_Text { get; }
    public static string UnknownSkin_Text { get; }
    public static string MissedValueForRequiredAttribute_Text { get; }
    public static string IgnoredPath_Text { get; }
    public static string PathIsIgnoredInProjectSettings_Text { get; }
    public static string UnknownController_Text { get; }
    public static string UnknownASPNETMVCController_Text { get; }
    public static string UnknownAction_Text { get; }
    public static string UnknownASPNETMVCAction_Text { get; }
    public static string UnknownView_Text { get; }
    public static string UnknownASPNETMVCView_Text { get; }
    public static string UnknownPartialView_Text { get; }
    public static string UnknownASPNETMVCPartialView_Text { get; }
    public static string UnknownArea_Text { get; }
    public static string UnknownASPNETMVCArea_Text { get; }
    public static string UnknownTemplate_Text { get; }
    public static string UnknownASPNETMVCTemplate_Text { get; }
    public static string UnknownMasterpage_Text { get; }
    public static string UnknownASPNETMVCMasterpage_Text { get; }
    public static string UnknownViewComponent_Text { get; }
    public static string UnknownASPNETMVCViewComponent_Text { get; }
    public static string UnknownRazorLayout_Text { get; }
    public static string UnknownRazorSection_Text { get; }
    public static string UnknownRazorAssembly_Text { get; }
    public static string RedundantLocationElement_Text { get; }
    public static string LocationElementDoesNotCorrespondToAny_Text { get; }
    public static string RedundantTagPrefixDeclaration_Text { get; }
    public static string TagPrefixDoesNotDeclareAnyNewAliasAnd_Text { get; }
    public static string ModuleQualificationRequired_Text { get; }
    public static string ModuleQualificationRequiredForTypeResolution_Text { get; }
    public static string RedundantAddNamespaceElement_Text { get; }
    public static string AddNamespaceElementIsRedundantBecause_Text { get; }
    public static string RedundantAddElement_Text { get; }
    public static string AddElementIsRedundantBecauseItIsCleared_Text { get; }
    public static string RedundantElementOrAttributeBecauseOf_Text { get; }
    public static string ElementOrAttributeIsNotAppliedBecause_Text { get; }
    public static string RedundantRemoveOrClearElement_Text { get; }
    public static string ElementDoesNotClearAnythingAndCanBe_Text { get; }
    public static string ReferencedPathCannotBeFoundInTheWebsite_Text { get; }
    public static string CannotResolveSymbol_Text { get; }
    public static string CannotResolveModule_Text { get; }
    public static string RunAtAttribute_Highlighter_Display_Name { get; }
    public static string ReSharperASPNETRouteTemplateParameter_Text { get; }
    public static string ReSharperASPNETRouteTemplateTokenSubstitution_Text { get; }
    public static string ReSharperASPNETRouteTemplate_Text { get; }
    public static string GenerateOption_GenerateMembersAbstractWhenPossible_Text { get; }
    public static string GenerateOption_ReadOnly_Text { get; }
    public static string GenerateOption_AccessRights_Text { get; }
    public static string GenerateOption_Automatic_Text { get; }
    public static string GenerateOption_Yes_Text { get; }
    public static string GenerateOption_No_Text { get; }
    public static string TheDirectiveExpectsValue { get; }
    public static string ABooleanLiteral { get; }
    private static Strings10();
    public static JetResourceManager get_ResourceManager();
    public static string Choice(string format, Object[] args);
    public static string get_ASPErrors_Text();
    public static string get_ASPMVCInfo_Text();
    public static string get_AsxxErrors_Text();
    public static string get_CssErrors_Text();
    public static string get_HTMLErrors_Text();
    public static string get_HTMLInfo_Text();
    public static string get_JavaScriptErrors_Text();
    public static string get_RazorErrors_Text();
    public static string get_RazorInfo_Text();
    public static string get_RazorWarnings_Text();
    public static string get_RouteTemplateErrors_Text();
    public static string get_TypeScriptCompilerErrors_Text();
    public static string get_WebConfigErrors_Text();
    public static string get__IsNotUsedDueToConfigSourceAttribute_Text();
    public static string get__IsObsoleteInCSS__Text();
    public static string get__IsServerSideLanguage_ToolTip();
    public static string get__Missing_ToolTip();
    public static string get__MustBePublic_ToolTip();
    public static string get__MustBeSubtypeOf__ToolTip();
    public static string get__MustHaveName_ToolTip();
    public static string get__NotResolved_Text();
    public static string get_ABindingPatternParameterCannotBeOptionalInAnImplementationSignatureMessage();
    public static string get_AbstractMembersCanOnlyAppearWithinAnAbstractClassMessage();
    public static string get_AccessorsAreOnlyAvailableWhenTargetingECMAScriptAndHigherMessage();
    public static string get_AccordingToTheCaniuseComDataCSSFeatureIsNotSupportedByASpecificBrowser();
    public static string get_AccordingToTheCaniuseComDataCSSFeatureRequiresVendorPrefixForASpecificBrowser();
    public static string get_AClassCanExtendOnlyASingleClassOrExpressionMessage();
    public static string get_AClassMayOnlyExtendAnotherClassMessage();
    public static string get_AClassMayOnlyImplementAnotherClassOrInterfaceMessage();
    public static string get_AComputedPropertyNameCannotReferenceATypeParameterFromItsContainingTypeMessage();
    public static string get_AComputedPropertyNameInAClassPropertyDeclarationMustDirectlyReferToABuiltInSymbolMessage();
    public static string get_AComputedPropertyNameInAMethodOverloadMustDirectlyReferToABuiltInSymbolMessage();
    public static string get_AComputedPropertyNameInAnAmbientContextMustDirectlyReferToABuiltInSymbolMessage();
    public static string get_AComputedPropertyNameInAnInterfaceOrATypeLiteralMustDirectlyReferToABuiltInSymbolMessage();
    public static string get_AComputedPropertyNameMustBeOfTypestringnumberOranyMessage();
    public static string get_AComputedPropertyNameMustBeOfTypestringnumbersymbolOranyMessage();
    public static string get_ActionsRoutePrefixCanBeExtractedToControllersRouteConfigurableSeverityTitle();
    public static string get_AddAddTagIsFurtherRemoved_ToolTip();
    public static string get_AddAmbientDeclaration_Text();
    public static string get_AdefaultClauseCannotAppearMoreThanOnceInAswitchStatementMessage();
    public static string get_ADestructuringDeclarationMustHaveAnInitializerMessage();
    public static string get_AEnumMemberCannotHaveANumericNameMessage();
    public static string get_AFileCannotHaveAReferenceToItselfMessage();
    public static string get_AllDeclarationsOfAnInterfaceMustHaveIdenticalTypeParametersMessage();
    public static string get_AllDeclarationsOfMergedDeclarationMustBeExportedOrNotExportedMessage();
    public static string get_AllowImplicitAnyTypeSpecifications_Caption();
    public static string get_AllSpecifiedBrowsersSupportTheNewerSyntaxHereMessage();
    public static string get_AllVariablesFromThisListCanBeMadeBlockLocalMessage();
    public static string get_AllVariablesFromThisListCanBeMadeConstantMessage();
    public static string get_AlwaysSpecifyPublicModifierExplicitly_Caption();
    public static string get_AmbientCannotHaveABodyMessage();
    public static string get_AmbientDeclarationMayBeGeneratedFor_Text();
    public static string get_AmbientDeclarationsAreOnlyAllowedAtTheTopLevelOrModuleScopesMessage();
    public static string get_AmbientEnumElementsCanOnlyHaveIntegerConstantExpressionInitializersMessage();
    public static string get_AmbientExternalModuleDeclarationCannotBeReopenedMessage();
    public static string get_AmbientExternalModuleDeclarationCannotSpecifyRelativeModuleNameMessage();
    public static string get_AmbientExternalModuleDeclarationMustBeDefinedInGlobalContextMessage();
    public static string get_AmbiguousReference_Text();
    public static string get_AMDModuleMayBeConvertedToExternalModule_Text();
    public static string get_AnAccessorCannotHaveTypeParametersMessage();
    public static string get_AndBothTryToCoerceValuesBeforeComparingThemWhichCanLeadToSomeUnexpectedResultsUsingOfStrictOperatorsAndMakesCodeMorePredictable();
    public static string get_AndWhenAppliedTonullOrundefinedPerformCheckWithBothOfTheseValues();
    public static string get_AnExportAssignmentShouldReferenceOnlyTopLevelModuleElementsMessage();
    public static string get_AnIndexSignatureMayTakeOneAndOnlyOneParameterMessage();
    public static string get_AnInterfaceMayOnlyExtendAnotherClassOrInterfaceMessage();
    public static string get_AnObjectLiteralCannotHaveMultiplePropertiesWithTheSameNameInStrictModeMessage();
    public static string get_AnonymousFunctionIsUsedAsDeclarationMessage();
    public static string get_AnOptionalParameterCannotBeSpecializedMessage();
    public static string get_AnOverloadOrAnAmbientSignatureCannotBeDeclaredAsAGeneratorMessage();
    public static string get_AParameterOfAnIndexSignatureCannotHaveADefaultValueMessage();
    public static string get_AParameterOfAnIndexSignatureMayNotBeArestParameterMessage();
    public static string get_AParameterOfAnIndexSignatureMayNotBeOptionalMessage();
    public static string get_AParameterPropertyMayNotBeABindingPatternMessage();
    public static string get_App_CodeSubdirectory_IsAddedMoreThan_ToolTip();
    public static string get_APropertyGetterCannotHaveParametersMessage();
    public static string get_APropertySetterShouldHaveExactlyOneParameterMessage();
    public static string get_ARequiredElementCannotFollowAnOptionalElementMessage();
    public static string get_ARestElementCannotHaveAnInitializerMessage();
    public static string get_ArestElementCannotHaveTheOptionalMarkMessage();
    public static string get_ARestElementMustBeLastInAnArrayDestructuringPatternMessage();
    public static string get_ARestElementMustBeLastInATupleTypeMessage();
    public static string get_ARestElementTypeMustBeAnArrayTypeMessage();
    public static string get_ArestParameterCannotBeSpecializedMessage();
    public static string get_ArestParameterCannotHaveADefaultValueMessage();
    public static string get_ArestParameterCannotHaveTheOptionalMarkMessage();
    public static string get_ArestParameterShouldBeTheLastInAParameterListMessage();
    public static string get_AreturnStatementCanOnlyBeUsedWithinAFunctionBodyMessage();
    public static string get_Argument_CanTBeConvertedToType__Text();
    public static string get_argumentsCallerAndargumentsCalleeAreForbiddenInstrictMode();
    public static string get_argumentsCallerAndargumentsCalleeAreForbiddenInstrictModeMessage();
    public static string get_ArgumentType_IsNotAssignableToModel_ToolTip();
    public static string get_ArgumentType_IsNotAssignableToParameter_ToolTip();
    public static string get_ASectionUsingConfigSourceMayContain_ToolTip();
    public static string get_ASeriesOfUndefinedChecksForPropertiesCanBeReplacedWithDestructuring();
    public static string get_AsetAccessorCannotHaveAReturnTypeAnnotationMessage();
    public static string get_ASpecializedParameterCanBeUsedInAnOverloadSignatureOnlyMessage();
    public static string get_ASPNETConstructionOfHigherVersion_ToolTip();
    public static string get_AssignedValueIsNeverUsed();
    public static string get_AssignmentExpressionInFormOfaBaCannotBeUsedInAnExpressionStatementIfNotParenthesized();
    public static string get_AssignmentOfALocalVariableToItselfIsRedundant();
    public static string get_AssignmentOfALocalVariableToItselfIsRedundantMessage();
    public static string get_AssignmentsLikeaAAreRedundant();
    public static string get_AssignmentToAnImplicitlyDeclaredGlobalVariable();
    public static string get_AssignmentToAnImplicitlyDeclaredGlobalVariable12();
    public static string get_AssignmentToAnImplicitlyDeclaredGlobalVariableMessage();
    public static string get_AssignmentToAVariableInsideAConditionalStatement();
    public static string get_AssignmentToAVariableInsideAConditionalStatementIsLikelyToBeMistyped();
    public static string get_AssignmentToAVariableInsideAConditionalStatementMessage();
    public static string get_AssignmentToConstant();
    public static string get_AssignmentToConstantMayLeadToARunTimeError();
    public static string get_AssignmentToConstantMessage();
    public static string get_AsuperCallMustBeTheFirstStatementInTheConstructorWhenAClassContainsInitializedPropertiesOrHasParameterPropertiesMessage();
    public static string get_ATemporaryLocalVariableUsedForSwappingValuesOfTwoOtherVariablesCanBeReplacedByADestructuringSwap();
    public static string get_ATrailingElementOfAnArrayIsElided();
    public static string get_Attribute_IsMissingInTag__ToolTip();
    public static string get_AttributeQuotesAreMissingOrDifferFromSettingsConfigurableSeverityDescription();
    public static string get_AttributeValueCannotBeEmpty_ToolTip();
    public static string get_AttributeValueIncorrectExpected___ToolTip();
    public static string get_AttributeValueShouldBeSurroundedWith_ToolTip();
    public static string get_ATypeAnnotationOnAnExportStatementIsOnlyAllowedInAnAmbientExternalModuleDeclarationMessage();
    public static string get_ATypePredicateNameCanReferenceOnlyANonDestructuringParameterOfOwnerSignatureMessage();
    public static string get_AVariableHadNoUsagesInOuterBlockWhereItIsDeclaredSoItCanBeSafelyMovedToTheInnerBlock();
    public static string get_AVariableHadNoWriteUsagesThusItCanBeTurnedIntoAConstant();
    public static string get_AVariableWasAssignedAValueButNeverUsed();
    public static string get_AvoidUsingargumentsCallerOrargumentsCalleeByEitherGivingFunctionExpressionsANameOrUseAFunctionDeclaration();
    public static string get_AvoidUsingargumentsCallerOrargumentsCalleeByEitherGivingFunctionExpressionsANameOrUseAFunctionDeclarationMessage();
    public static string get_AyieldExpressionIsOnlyAllowedInAGeneratorBodyMessage();
    public static string get_BaseTypeCannotBeMessage();
    public static string get_BlockIsRedundant();
    public static string get_BlockIsRedundantMessage();
    public static string get_BlockScopedVariableUsedBeforeItsDeclarationMessage();
    public static string get_BlockScopeVariablesCannotBeRedeclared();
    public static string get_BlockStatementsMustBeEnclosedInAndYou_ToolTip();
    public static string get_boolTypeIsDeprecatedUsebooleanMessage();
    public static string get_breakAndcontinueStatementsCanOnlyBeFollowedByLabelName();
    public static string get_breakAndcontinueWithoutLabelShouldBeInALoopBody();
    public static string get_breakMustBeInLoopOrSwitchStatementMessage();
    public static string get_breakStatementCanOnlyBeUsedWithinAnEnclosingIterationOrSwitchStatementMessage();
    public static string get_BuildCSSStyleHierarchy_BoolOption_Text();
    public static string get_CalculatingItems_Text();
    public static string get_CallingdeleteOnNonQualifiedIdentifierInstrictMode();
    public static string get_CallingdeleteOnNonQualifiedIdentifierIsNotAllowedInstrictMode();
    public static string get_CallingdeleteOnNonQualifiedIdentifierIsNotAllowedInstrictModeMessage();
    public static string get_CallSignaturesUsedInAnewExpressionMustHaveAvoidReturnTypeMessage();
    public static string get_CallSignatureWhichLacksReturnTypeAnnotationImplicitlyHasAnanyReturnTypeMessage();
    public static string get_CallsTosuperAreOnlyValidInsideAClassMessage();
    public static string get_CannotAccess___Here_Text();
    public static string get_CannotAccess_Here_Text();
    public static string get_CannotConvertSourceMemberToBindingDefinedTargetMemberMessage();
    public static string get_CannotConvertSourceMemberToBindingDefinedTargetMemberMessage4();
    public static string get_CannotConvertTypeToTypeMessage();
    public static string get_CannotConvertTypeToTypeMessage3();
    public static string get_CannotFindContentPlaceHolder__Text();
    public static string get_CannotFindContentPlaceHolder_InTheMaster_Text();
    public static string get_CannotFindExternalModuleFileBySpecifiedPathMessage();
    public static string get_CannotFindSkin__Text();
    public static string get_CannotFindSkin_InTheTheme__Text();
    public static string get_CannotFindTheme__Text();
    public static string get_CannotInvokeAnExpressionWhoseTypeLacksACallSignatureMessage();
    public static string get_CannotRedeclareBlockScopedVariableMessage();
    public static string get_CannotResolveAttribute__ToolTip();
    public static string get_CannotResolveAttributeValue__ToolTip();
    public static string get_CannotResolvecolorProfileWithNameMessage();
    public static string get_CannotResolveCSSClassWithSpecifiedName();
    public static string get_CannotResolveCustomPropertyWithSpecifiedName();
    public static string get_CannotResolveEvent__ToolTip();
    public static string get_CannotResolveFileSystemPath();
    public static string get_CannotResolveFileSystemPath1();
    public static string get_CannotResolveId__ToolTip();
    public static string get_CannotResolvekeyframesWithNameMessage();
    public static string get_CannotResolveLayout__ToolTip();
    public static string get_CannotResolvepageWithNameMessage();
    public static string get_CannotResolveProbablySymbolIsLocatedInInaccessibleModule();
    public static string get_CannotResolveReferencedFileMessage();
    public static string get_CannotResolveReturnTypeReferenceMessage();
    public static string get_CannotResolveSection__ToolTip();
    public static string get_CannotResolveAssembly__ToolTip();
    public static string get_CannotResolveSymbol();
    public static string get_CannotResolveSymbol__Text();
    public static string get_CannotResolveSymbolInMessage();
    public static string get_CannotResolveSymbolMessage();
    public static string get_CannotResolveSymbolWithSpecifiedName();
    public static string get_CannotResolveTag__ToolTip();
    public static string get_CannotResolveVendorSpecificExtension();
    public static string get_CatchClauseParameterCannotHaveATypeAnnotationMessage();
    public static string get_CatchClauseVariableCannotHaveAnInitializerMessage();
    public static string get_CatchClauseVariableNameMustBeAnIdentifierMessage();
    public static string get_CheckamdDependencyTheSameWayAsRequireArgument();
    public static string get_CheckBrowserCompatibility_BoolOption_Text();
    public static string get_ClassAndForAttributesAreDisallowedIn_ToolTip();
    public static string get_ClassCannotExtendClassMessage();
    public static string get_ClassDeclarationMustBeLocatedPriorToModuleDeclarationInTheSameSourceFileToBeMergedProperlyMessage();
    public static string get_ClassDeclaresClassAsAnInterfaceButDoesNotImplementItMessage();
    public static string get_ClassDeclaresInterfaceButDoesNotImplementItMessage();
    public static string get_ClassEmulationMayBeConvertedToClass_Text();
    public static string get_ClassesCanOnlyExtendASingleClassMessage();
    public static string get_ClassesContainingAbstractMethodsMustBeMarkedAbstractMessage();
    public static string get_ClassIsRecursivelyReferencedAsABaseTypeOfItselfViaTypeMessage();
    public static string get_ClosingBraceExpected_ToolTip();
    public static string get_ClosureOnAVariableModifiedInLoopOfOuterScope();
    public static string get_ClosureOnAVariableModifiedInLoopOfOuterScopeMessage();
    public static string get_CodeCleanupTask_AsInsteadOfCastTs();
    public static string get_CodeCleanupTask_CorrectVariableKindsDescriptor();
    public static string get_CodeCleanupTask_ExplicitAnyTs();
    public static string get_CodeCleanupTask_FormatAttributeQuoteDescriptor();
    public static string get_CodeCleanupTask_JSStringLiteralQuotesDescriptor();
    public static string get_CodeCleanupTask_OptimizeImportsTs();
    public static string get_CodeCleanupTask_OptimizeReferenceCommentsTs();
    public static string get_CodeCleanupTask_PublicModifierStyleTs();
    public static string get_CodeCleanupTask_RelativePathStyleTs();
    public static string get_CodeCleanupTask_RemoveRedundantQualifiersTs();
    public static string get_CodeCleanupTask_StringToTemplatesDescriptor();
    public static string get_CodeCleanupTask_TypeAnnotationStyleTs();
    public static string get_CodeCleanupTask_VariablesToInnerScopesDescriptor();
    public static string get_CodeFileAttributeIsInvalidWithoutInherits_ToolTip();
    public static string get_CodeFileBaseClassAttributeIsInvalid_ToolTip();
    public static string get_CodeFileBaseClassAttributeIsInvalidWithoutInherits_ToolTip();
    public static string get_CodeIsHeuristicallyUnreachableMessage();
    public static string get_CodeIsRedundant();
    public static string get_CodeIsUnreachable();
    public static string get_CodeIsUnreachableMessage();
    public static string get_CodeUsesNonStandardOrInvalidJSONSyntax();
    public static string get_CommaExpectedMessage();
    public static string get_CommaIsExpectedInObjectLiteral();
    public static string get_CommaIsNotValidHere();
    public static string get_CommaIsNotValidHereMessage();
    public static string get_CommaIsNotValidInThisPlace();
    public static string get_CommaIsRequiredBetweenObjectLiteralMembers();
    public static string get_CommentIsNotClosed_ToolTip();
    public static string get_CommonJsModuleMayBeConvertedToExternal_Text();
    public static string get_ComparisonOfBooleanValueWithIsEquivalentToMessage();
    public static string get_ComparisonOfBooleanWithBooleanValueIsEquivalentToValueOrNegatedValue();
    public static string get_ComparisonOfSimilarExpressionsLikeXX();
    public static string get_ComparisonOftypeofExpressionWithIncorrectValue();
    public static string get_ComparisonsLikeaTrueAndaTrueWithBooleanaAreEquivalentToJustaAndA();
    public static string get_ComparisonWithPerformsComparisonWithAsWellMessage();
    public static string get_Component_ExpectsAValueForTheParameter_ToolTip();
    public static string get_ComputedPropertyNamesAreNotAllowedInEnumsMessage();
    public static string get_ConcatenationCanBeConvertedToATemplateMessage();
    public static string get_ConditionalBrowserCommentIsEmpty_ToolTip();
    public static string get_ConditionalBrowserCommentStartEndMismatch_ToolTip();
    public static string get_ConditionExpected_Text();
    public static string get_ConditionIsAlwaysConstant();
    public static string get_ConditionIsAlwaysConstant8();
    public static string get_ConditionIsAlwaysMessage();
    public static string get_ConstantMustBeAssigned();
    public static string get_ConstantMustBeInitializedMessage();
    public static string get_constDeclarationsCanOnlyBeDeclaredInsideABlockMessage();
    public static string get_constDeclarationsMustBeInitializedMessage();
    public static string get_constEnumMemberInitializerWasEvaluatedToANonFiniteValueMessage();
    public static string get_constEnumMemberInitializerWasEvaluatedToDisallowedValueNaNMessage();
    public static string get_constEnumsCanOnlyBeUsedInPropertyOrIndexAccessExpressionsOrTheRightHandSideOfAnImportDeclarationOrExportAssignmentMessage();
    public static string get_ConstraintOfATypeParameterCannotReferenceAnyTypeParameterFromTheSameTypeParameterListMessage();
    public static string get_ConstructorCallIsNotUsedOrPossiblyUsedForSideEffects();
    public static string get_ConstructorCallIsNotUsedOrPossiblyUsedForSideEffectsMessage();
    public static string get_ConstructorOfAnAbstractClassCanBeMadeProtected();
    public static string get_ConstructorOfAnAbstractClassCanBeMadeProtectedMessage();
    public static string get_ConstructorOfAnAbstractClassIsAlwaysCalledOnlyFromDerivedTypesAndCanBeMadeProtected();
    public static string get_ConstructorsCannotHaveAReturnTypeOfvoidMessage();
    public static string get_ConstructorsForDerivedClassesMustContainAsuperCallOnAllExecutionPathsMessage();
    public static string get_ConstructorSignatureWhichLacksReturnTypeAnnotationImplicitlyHasAnanyReturnTypeMessage();
    public static string get_continueMustBeInLoopMessage();
    public static string get_continueStatementCanOnlyBeUsedWithinAnEnclosingIterationStatementMessage();
    public static string get_ControllersRouteParameterCanBePassedToMethodsConfigurableSeverityDescription();
    public static string get_ControllersRouteParameterCanBePassedToMethodsConfigurableSeverityTitle();
    public static string get_ConvertToClass_Text();
    public static string get_ConvertToExternalModule_Text();
    public static string get_ConvertToFunctionMember_Text();
    public static string get_ConvertToInternalModule_Text();
    public static string get_ConvertToLambdaExpression_Text();
    public static string get_ConvertToSuperCall_Text();
    public static string get_CorrespondsToErrorsReportedByCompilerWhenRunningWithNoImplicitAnyFlagCorrespondingCodeStyleSettingShouldBeSetForThisInspectionToBeEnabled();
    public static string get_CouldNotAccessPrivateSymbolInModuleMessage();
    public static string get_CouldNotFindEnclosingSymbolForDottedNameMessage();
    public static string get_CouldNotFindFileMessage();
    public static string get_CouldNotFindModuleInModuleMessage();
    public static string get_CouldNotFindSymbolInMessage();
    public static string get_CouldNotFindSymbolMessage();
    public static string get_CouldNotFindTheBestCommonTypeOfTypesOfAllReturnStatementExpressionsMessage();
    public static string get_CouldNotSelectOverloadForcallExpressionMessage();
    public static string get_CouldNotSelectOverloadFornewExpressionMessage();
    public static string get_CSSFeatureIsNotSupportedByASpecificBrowser();
    public static string get_CSSFeatureRequiresVendorPrefixForASpecificBrowser();
    public static string get_CSSHackIsRedundantDueToCurrentBrowserCompatibilityConfiguration();
    public static string get_CSSSymbolIsConsideredObsoleteInSpecifiedLanguageVersion();
    public static string get_CSSSymbolIsObsolete();
    public static string get_CSSSymbolSyntaxIsNotCompatibleWithASpecificBrowser();
    public static string get_CSSSymbolSyntaxIsNotCompatibleWithASpecificBrowser3();
    public static string get_CSSValueShouldHaveUnits();
    public static string get_CustomPropertyIsNotUsedMessage();
    public static string get_CustomPropertyValueCannotBeEmptyItMustRepresentAtLeastOneTokenEGWhiteSpaceMessage();
    public static string get_DeclarationDoesntContainAnyProperties();
    public static string get_DeclarationHides_FromOuterScope_Text();
    public static string get_DeclarationHidesAnotherDeclarationFromAnOuterScope();
    public static string get_DeclarationHidesFromOuterScopeMessage();
    public static string get_DeclarationIsEmpty();
    public static string get_DeclarationIsEmptyMessage();
    public static string get_declareModifierNotAllowedForCodeAlreadyInAnAmbientContextMessage();
    public static string get_declareModifierRequiredForTopLevelElementMessage();
    public static string get_DecoratorsAreAllowedOnlyOnClassesMemberVariablesMemberAccessorsAndImplementationMemberFunctionSignaturesMessage();
    public static string get_DecoratorsOnFunctionStatementsAreNotAllowedMessage();
    public static string get_deleteCannotBeCalledOnAnIdentifierInStrictModeMessage();
    public static string get_DestructuringDeclarationsAreNotAllowedInAmbientContextsMessage();
    public static string get_DocumentsDefinedCallbackName_ToolTip();
    public static string get_DocumentsDefinedTemplateName_ToolTip();
    public static string get_DocumentsDefinedTypeName_ToolTip();
    public static string get_DocumentsEntityType_ToolTip();
    public static string get_DoubleNegationOfABooleanExpressionIsRedundantMessage();
    public static string get_DoubleNegationOfBooleanIsIdenticalToItsValue();
    public static string get_DoubleNegationOfBooleanIsRedundant();
    public static string get_Duplicate__Text();
    public static string get_DuplicateConstructorOverloadSignatureMessage();
    public static string get_DuplicateDeclarationMessage();
    public static string get_DuplicateDeclarationOfALiteralObjectProperty();
    public static string get_DuplicateDeclarationOfALocalVariableFunctionOrParameter();
    public static string get_DuplicateIdentifier();
    public static string get_DuplicateIdentifierargumentsCompilerUsesargumentsToInitializeRestParametersMessage();
    public static string get_DuplicateIdentifierCompilerReservesNameInTopLevelScopeOfAnExternalModuleMessage();
    public static string get_DuplicateIdentifierDetected();
    public static string get_DuplicateIdentifierICompilerUsesIToInitializeRestParameterMessage();
    public static string get_DuplicateIdentifierMessage();
    public static string get_DuplicateIdentifierSuperCompilerUsesSuperToCaptureBaseClassReferenceMessage();
    public static string get_DuplicateIdentifierThisCompilerUsesVariableDeclarationThisToCapturethisReferenceMessage();
    public static string get_DuplicateLocalDeclaration();
    public static string get_DuplicateModifierMessage();
    public static string get_DuplicateNumberIndexSignatureMessage();
    public static string get_DuplicateOverloadCallSignatureMessage();
    public static string get_DuplicateOverloadConstructSignatureMessage();
    public static string get_DuplicateOverloadSignatureForMessage();
    public static string get_DuplicateParameterDeclarationInstrictMode();
    public static string get_DuplicateParameterDeclarationIsNotAllowedInstrictMode();
    public static string get_DuplicateParameterDeclarationIsNotAllowedInstrictModeMessage();
    public static string get_DuplicatePropertyDeclaration();
    public static string get_DuplicatePropertyDeclarationInstrictMode();
    public static string get_DuplicatePropertyDeclarationIsNotAllowedInstrictMode();
    public static string get_DuplicatePropertyDeclarationIsNotAllowedInstrictModeMessage();
    public static string get_DuplicatePropertyDeclarationMessage();
    public static string get_DuplicateReferenceCommentIsRedundant();
    public static string get_DuplicateStringIndexSignatureMessage();
    public static string get_DuplicateSwitchLabel();
    public static string get_DuplicateSwitchLabel9();
    public static string get_DuplicateSwitchLabelMessage();
    public static string get_DuplicationOfId_OnThisPage_ToolTip();
    public static string get_DuplicationOfIdOnPageConfigurableSeverityDescription();
    public static string get_DuplicationOfRenderModeDirective_ToolTip();
    public static string get_ECMAScriptFeatureIsUsedInECMAScriptOrLower();
    public static string get_ECMAScriptFeatureIsUsedInECMAScriptOrLower3();
    public static string get_ECMAScriptFeatureUsageWhenInESOrLower();
    public static string get_ECMAScriptFeatureUsageWhenInESOrLower2();
    public static string get_ECMAScriptFeatureYourCurrentLanguageLevelIsMessage();
    public static string get_ECMAScriptFeatureYourCurrentLanguageLevelIsMessage1();
    public static string get_ECMAScriptNotCurrentlySupportedInTypeScriptMessage();
    public static string get_ECMAScriptNotCurrentlySupportedInTypeScriptMessage1();
    public static string get_Element_IsAVoidElementAndCannotHave_ToolTip();
    public static string get_Element_IsObsoleteOrNonstandard_ToolTip();
    public static string get_Element_RequiresAClosingTag_ToolTip();
    public static string get_Element_Text();
    public static string get_ElementHasImplicitanyType();
    public static string get_elseBlockIsRedundant();
    public static string get_EmptyConstructorWithoutParametersIsRedundant();
    public static string get_EmptyfinallyBlockIsRedundantMessage();
    public static string get_EmptyReturnValueForTypeAnnotatedFunction();
    public static string get_EndIfMissing_ToolTip();
    public static string get_EnumMemberMustHaveInitializerMessage();
    public static string get_ErrorInXMLDocCommentReference();
    public static string get_ErrorInXMLDocCommentReference16();
    public static string get_evalOrargumentsCannotBeUsedAsADeclarationNameAsALeftSideOfAnAssignmentOrAsAnArgumentOfIncrementDecrementOperatorInstrictMode();
    public static string get_evalOrargumentsCannotBeUsedAsALeftSideOfAnAssignmentInstrictModeMessage();
    public static string get_evalOrargumentsCannotBeUsedAsAnArgumentOfIncrementOrDecrementOperatorInstrictModeMessage();
    public static string get_evalOrargumentsCannotBeUsedAsAnIncrementOrDecrementOperatorArgumentInstrictModeMessage();
    public static string get_evalOrargumentsCannotBeUsedAsDeclarationNameInstrictModeMessage();
    public static string get_ExpectedMessage();
    public static string get_ExperimentalFeatureUsageWhenLanguageLevelSetToStable();
    public static string get_ExperimentalFeatureUsedWhenTargetedToStableESLevel();
    public static string get_ExperimentalLevelFeatureYourCurrentLanguageLevelIsMessage();
    public static string get_ExplicitAnyRequirement_Text();
    public static string get_ExportAssignmentCannotBeUsedInInternalModuleMessage();
    public static string get_ExportAssignmentCannotBeUsedWhenTargetingECMAScriptOrHigherMessage();
    public static string get_ExportAssignmentNotAllowedInModuleWithExportedElementsMessage();
    public static string get_ExportAssignmentsMayOnlyBeMadeWithVariablesFunctionsClassesInterfacesEnumsAndInternalModulesMessage();
    public static string get_ExportAssignmentsMayOnlyBeUsedAtTheTopLevelOfExternalModulesMessage();
    public static string get_ExportDeclarationsAreOnlyAllowedAtTheTopLevelOrModuleScopesMessage();
    public static string get_ExportedClassExtendsClassFromInaccessibleModuleMessage();
    public static string get_ExportedClassExtendsPrivateClassMessage();
    public static string get_ExportedClassImplementsInterfaceFromInaccessibleModuleMessage();
    public static string get_ExportedClassImplementsPrivateInterfaceMessage();
    public static string get_ExportedEntityUsesAPrivateEntity();
    public static string get_ExportedImportDeclarationIsAssignedValueWithTypeThatHasOrIsUsingPrivateTypeMessage();
    public static string get_ExportedImportDeclarationIsAssignedValueWithTypeThatIsUsingInaccessibleModuleMessage();
    public static string get_ExportedInterfaceExtendsInterfaceFromInaccessibleModuleMessage();
    public static string get_ExportedInterfaceExtendsPrivateInterfaceMessage();
    public static string get_ExportedModuleMemberUsesANonExportedEntity();
    public static string get_ExportedVariableHasOrIsUsingPrivateTypeMessage();
    public static string get_ExportedVariableIsUsingInaccessibleModuleMessage();
    public static string get_ExpressionCannotBeOfTypeForWhichItsCheckedAgainstUsingtypeof();
    public static string get_ExpressionCannotBeSubtypeOfTypeAgainstWhichItsCheckedUsinginstanceof();
    public static string get_ExpressionExpected_ToolTip();
    public static string get_ExpressionHasIdenticalTrueAndFalseBranchesMessage();
    public static string get_ExpressionIsAlwaysConstant();
    public static string get_ExpressionIsAlwaysConstant3();
    public static string get_ExpressionIsExpectedAfterthrowStatement();
    public static string get_ExpressionMustReturnAValueToRender_ToolTip();
    public static string get_ExpressionResolvesToSuperThatCompilerUsesToCaptureBaseClassReferenceMessage();
    public static string get_ExpressionResolvesToVariableDeclarationIThatCompilerUsesToInitializeRestParameterMessage();
    public static string get_ExpressionResolvesToVariableDeclarationThisThatCompilerUsesToCapturethisReferenceMessage();
    public static string get_ExpressionsIsAlwaysMessage();
    public static string get_ExpressionStatementIsNeitherAnAssignmentStatementNorAFunctionCall();
    public static string get_ExpressionStatementIsNotAssignmentOrCallMessage();
    public static string get_ExtendingPrototypeOfNativeObject();
    public static string get_ExtendingPrototypeOfNativeObjectMayCauseUnexpectedEffects();
    public static string get_ExtendingPrototypeOfNativeObjectMayCauseUnexpectedEffectsMessage();
    public static string get_extendsClauseAlreadySeenMessage();
    public static string get_extendsClauseMustPrecedeimplementsClauseMessage();
    public static string get_FailedToValidateJSONAgainstASchema();
    public static string get_FallbackColorHexOrRGBShouldPrecedeColorWithNewFormatRgbaHslAndHsla();
    public static string get_FeatureIsNotSupportedByMessage();
    public static string get_FeatureRequiresVendorSpecificPrefixForMessage();
    public static string get_FileBySpecifiedPathDoesntContainExternalModuleDeclarationMessage();
    public static string get_FileIsAlreadyReferencedMessage();
    public static string get_FileIsNotAnImage_ToolTip();
    public static string get_FileMustHaveExtensionTsOrDTsMessage();
    public static string get_ForSomeEnvironmentsAmdDependencyCorrespondenceWithActuallyExistingModulesIsCrucial();
    public static string get_FunctionDeclarationShouldHaveAnImplementationMessage();
    public static string get_FunctionDeclaredANonVoidReturnTypeButHasNoReturnExpressionMessage();
    public static string get_FunctionDeclaredANonVoidReturnTypeButHasNoReturnExpressionMessage6();
    public static string get_FunctionDoesntExistInCSSMessage();
    public static string get_FunctionExpressionDeclaredANonVoidReturnTypeButHasNoReturnExpressionMessage();
    public static string get_FunctionExpressionMayBeConvertedToLambda_Text();
    public static string get_FunctionExpressionWhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage();
    public static string get_FunctionHasReturnStatementsWithSpecifiedValueButThereAreExecutionPathsThatDontContainAnyReturnStatement();
    public static string get_FunctionIsNeverUsedBecauseItIsOverriddenInTheOwnerFunctionBodyMessage();
    public static string get_FunctionIsProvidedWithTypeAnnotationButReturnStatementValueIsEmptyMessage();
    public static string get_FunctionIsProvidedWithTypeAnnotationButReturnValueIsEmpty();
    public static string get_FunctionIsRedefinedLaterMessage();
    public static string get_FunctionIsUsedBeforeItIsDeclared();
    public static string get_FunctionIsUsedBeforeItIsDeclaredMessage();
    public static string get_FunctionIsUsedOutsideOfBlockWhichItIsDeclaredMessage();
    public static string get_FunctionIsUsedOutsideOfScopeWhichItIsDeclared();
    public static string get_FunctionOverloadNameMustBeMessage();
    public static string get_FunctionScopeVariableDeclaredByvarKeywordCanSafelyBeTurnedIntoABlockScopeVariableDeclaredByconstKeyword();
    public static string get_FunctionStatementMustBeLocatedPriorToModuleDeclarationInTheSameSourceFileToBeMergedProperlyMessage();
    public static string get_FunctionStatementShouldHaveANameMessage();
    public static string get_GeneratingConstructor_Text();
    public static string get_GeneratingFieldsAndAccessors_Text();
    public static string get_GeneratingIndexers_Text();
    public static string get_GeneratingMethods_Text();
    public static string get_GeneratorExpressionWhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage();
    public static string get_GeneratorsAreOnlyAvailableWhenTargetingECMAScriptOrHigherMessage();
    public static string get_GeneratorWhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage();
    public static string get_GenericTypeReferencesMustIncludeAllTypeArgumentsMessage();
    public static string get_GenericTypeRequiresTypeArgumentSButGotMessage();
    public static string get_getAndsetAccessorMustHaveTheSameTypeMessage();
    public static string get_GetterAlreadyDeclaredMessage();
    public static string get_GetterAndSetterAccessorsDoNotAgreeInVisibilityMessage();
    public static string get_GettersMustReturnAValueMessage();
    public static string get_GlobalModuleExportsMayOnlyAppearAtTopLevelMessage();
    public static string get_Group_Text();
    public static string get_HelperNameExpected_ToolTip();
    public static string get_HelperSignatureExpected_Text();
    public static string get_HeuristicallyUnreachableCode();
    public static string get_HeuristicallyUnreachableCode2();
    public static string get_HexadecimalValueOfColorWithAlphaComponentIsNotSupported();
    public static string get_HighlightsSymbolsUsedFromAReferencedModuleThatIsNotCopiedLocallyConfigurableSeverityDescription();
    public static string get_HTMLDeadCodeConfigurableSeverityDescription();
    public static string get_HTMLDeadCodeConfigurableSeverityTitle();
    public static string get_HtmlHighlightingCleanupModule_GetModuleActionName_Processing_HTML();
    public static string get_HTMLWarningConfigurableSeverityDescription();
    public static string get_HTMLWarningConfigurableSeverityTitle();
    public static string get_IdAttributeIsInvalidForTagsThatAreNot_ToolTip();
    public static string get_IdentifierExpected_ToolTip();
    public static string get_IdsDuplicationConfigurableSeverityTitle();
    public static string get_IfALocalVariableIsAssignedToSomeAnotherLocalVariableAndThatLocalVariableDoesntHaveMoreThanOneReadUsageItCanBeSafelyInlined();
    public static string get_IfAnElementIsElidedAtTheEndOfAnArrayThatElementDoesNotContributeToTheLengthOfTheArray();
    public static string get_IfAnExpressionRepresentsStringConcatenationsWithOtherExpressionsItCanBeConvertedToATemplateExpression();
    public static string get_IfAParameterPropertyIsReferredToWithoutthisQualifierInAnAssignmentInsideTheConstructorTheAssignedValueWontBeSetForTheResultingPropertyButWillBeSetOnlyForTheLocalConstructorParameter();
    public static string get_IfASequenceOfPropertiesForTheSameItemIsCheckedForundefinedEGVarWXAUndefinedDefXAVarSXBUndefinedDefXBThisSequenceCanBeReplacedWithAnObjectDestructuringPatternEGaWBSX();
    public static string get_IfMoreSpecificSignatureFollowsLessSpecificTypeScriptOverloadResolutionWillChooseLessSpecificNevertheless();
    public static string get_IfOneOfTheArgumentsIsAStringLiteralItsPossibleToCreateASpecializedOverloadForIt();
    public static string get_IfOverloadIsLessSpecificThanTheMainSignatureItMakesNoSenseAsTypeScriptOverloadResolutionWillUseLessSpecificOverloadSignatureForResolve();
    public static string get_IfReferenceCommentDependenciesFinallyResolveToTheSameFileThereExistsADependencyCycle();
    public static string get_IfReferenceCommentToTheSameFileIsAlreadyProvidedDuplicateReferenceCommentIsRedundant();
    public static string get_IfTheSameItemIsIndexedInRightHandSideOfTheSubsequentStatementsEGAEBEThatSequentialSeriesOfAssignmentsCanBeReplacedByADestructuringDeclarationOrAssignmentEGABE();
    public static string get_IfTheSameItemIsIndexedInValuesOfObjectPropertiesEGVarXaRBRThatPropertiesCanBePreliminaryAssignedUsingADestructuringAndThenUsedInAShorthandFormIfNoNameConflictsAreDetected();
    public static string get_IfTypeItselfOrItsDescendantIsAlreadyPresentInExtendsOrImplementsListAnExtraSpecificationIsRedundant();
    public static string get_IfVariableDeclarationHasAnInitializerTypeSpecificationIsRedundantIfItsTheSameTypeWithAssignedValueTypeIsAffectedByCodeStyleSettingSpecifyTypesExplicitly();
    public static string get_IfVariableTypeCouldBeDerivedFromContextItMayAlsoBeExplicitlySpecifiedIsAffectedByCodeStyleSettingSpecifyTypesExplicitly();
    public static string get_IgnoreAssignmentInConditionWarningIfThereAreParenthesesAroundAssignmentExpressionSettingDescription();
    public static string get_IllegalSyntaxInXMLCodeComment();
    public static string get_IllegalSyntaxInXMLCodeComment11();
    public static string get_ImmediatelyInvokedFunctionExpression_Text();
    public static string get_ImplementationsAreNotAllowedInAmbientContextsMessage();
    public static string get_implementsClauseAlreadySeenMessage();
    public static string get_implementsClauseIsUnexpectedForAnInterfaceDeclarationUseextendsInsteadMessage();
    public static string get_ImplicitAny_Text();
    public static string get_ImplicitAnyInspectionWhenNoImplicitAnyIsSet();
    public static string get_ImplicitPublicModifierNeverSpecifyExplicitly_Caption();
    public static string get_ImportDeclarationCannotReferToExternalModuleReferenceWhenNoResolveOptionIsSetMessage();
    public static string get_ImportDeclarationInAnAmbientExternalModuleDeclarationCannotReferenceExternalModuleThroughRelativeExternalModuleNameMessage();
    public static string get_ImportDeclarationReferencingIdentifierFromInternalModuleCanOnlyBeMadeWithVariablesFunctionsClassesInterfacesEnumsAndInternalModulesMessage();
    public static string get_ImportDeclarationsInAnInternalModuleCannotReferenceAnExternalModuleMessage();
    public static string get_ImportedEntityCircularlyReferencesImportAliasMessage();
    public static string get_ImportIsNeverUsedMessage();
    public static string get_importKeywordIsAllowedOnlyInImportConstructs();
    public static string get_importKeywordIsNotAllowedHere();
    public static string get_importKeywordIsNotAllowedHereMessage();
    public static string get_ImportWithrequireCannotBeUsedWhenTargetingECMAScriptOrHigherMessage();
    public static string get_InAContextOfLocalFunctionInsideClassMemberthisRefersToTheLocalFunctionItselfNotToTheContainingClass();
    public static string get_InconsistentFunctionReturns();
    public static string get_InconstEnumDeclarationsMemberInitializerMustBeConstantExpressionOrConstEnumMemberMessage();
    public static string get_IncorrectExternalModuleReferenceNameStringLiteralIsExpectedMessage();
    public static string get_IncorrectNumberOfParameters_Text();
    public static string get_IncorrectParameterType_Text();
    public static string get_IncorrectParenthesesBracketsNesting_ToolTip();
    public static string get_IncorrectTypeArgument_Text();
    public static string get_IncorrecttypeofValueMessage();
    public static string get_IndexExpressionArgumentOfconstEnumMustBeAStringLiteralMessage();
    public static string get_IndexSignatureMustHaveATypeAnnotationMessage();
    public static string get_IndexSignatureOfObjectTypeImplicitlyHasAnanyTypeMessage();
    public static string get_IndexSignatureParameterMustHaveATypeAnnotationMessage();
    public static string get_IndexSignatureParameterTypeMustBestringOrnumberMessage();
    public static string get_IndividualDeclarationsInMergedDeclarationMustBeAllExportedOrAllLocalMessage();
    public static string get_InEnumsWithMultipleDeclarationsOnlyOneDeclarationCanOmitAnInitializerForTheFirstEnumElementMessage();
    public static string get_InferPossibleOverloadSignatures_Text();
    public static string get_InitializerOfInstanceMemberVariableCannotReferenceIdentifierDeclaredInTheConstructorMessage();
    public static string get_InitializerOfParameterCannotReferenceIdentifierDeclaredAfterItMessage();
    public static string get_InitializersAreNotAllowedInAmbientContextsMessage();
    public static string get_InlineMarkupBlocksPContentPCannotBe_ToolTip();
    public static string get_InspectionsOptionPageTitle();
    public static string get_InterfaceCannotExtendClassMessage();
    public static string get_InterfaceCannotExtendInterfaceMessage();
    public static string get_InterfaceIsRecursivelyReferencedAsABaseTypeOfItselfViaTypeMessage();
    public static string get_IntermediateLocalVariableIsRedundantAndCanBeSafelyInlined();
    public static string get_IntermediateLocalVariableIsRedundantBecauseItCanBeReplacedWithADestructuringSwapExpression();
    public static string get_IntermediateVariableCanBeSafelyInlinedMessage();
    public static string get_IntermediateVariableCanBeSafelyReplacedWithADestructuringSwapMessage();
    public static string get_InternalModuleReferenceInImportDeclarationDoesntReferenceModuleInstanceForMessage();
    public static string get_IntroduceVariableToApplyTypeGuardMessage();
    public static string get_IntroducingVariableWillAllowToApplyTypeGuard();
    public static string get_InvalidControlTypeConfigurableSeverityTitle();
    public static string get_InvalidCSSValue();
    public static string get_InvalidExpressionTypesNotKnownToSupportTheAdditionOperatorMessage();
    public static string get_InvalidExternalModuleSpecificationItShouldBeValidFilePathWithoutFileExtensionMessage();
    public static string get_InvalidHexadecimalValueOfColor();
    public static string get_InvalidJSONExpressionExpectedOneOfObjectArrayNumberStringTrueFalseNullMessage();
    public static string get_InvalidJSONSyntax();
    public static string get_InvalidLeftHandSideOfAssignmentExpressionMessage();
    public static string get_InvalidnewExpressionMessage();
    public static string get_InvalidServerControlId_ToolTip();
    public static string get_InvalidUseOfInStrictModeMessage();
    public static string get_InvalidValue();
    public static string get_InvocationOfNonFunctionExpression();
    public static string get_InvocationOfNonFunctionExpression7();
    public static string get_InvocationOfParentClassMayBeConverted_Text();
    public static string get_InvokedExpressionIsNotAFunctionValue();
    public static string get_InvokedExpressionIsNotAFunctionValue6();
    public static string get_InvokedExpressionsCanBeNonFunctionMessage();
    public static string get_InvokedExpressionsIsNotAFunctionMessage();
    public static string get_IsInaccessibleMessage();
    public static string get_IsNeverUsedMessage();
    public static string get_IsNotAllowedInThisContextMessage();
    public static string get_IsNotAValidJSONSyntaxMessage();
    public static string get_IsRedundantDueToCurrentBrowserCompatibilityConfigurationMessage();
    public static string get_IsRedundantMessage();
    public static string get_JavaScriptHighlightingCleanupModule_GetModuleActionName_Processing_JavaScript();
    public static string get_JavaScriptInspectionsSettingsSettingDescription();
    public static string get_JoinDeclarationAndAssignmentMessage();
    public static string get_JoinLocalVariableDeclarationAndAssignment();
    public static string get_JSONPropertyNamesShouldBeStringsAreNotAllowedInJSONMessage();
    public static string get_JSONValidationFailed();
    public static string get_JSONValidationFailedMessage();
    public static string get_JumpTargetCannotCrossFunctionBoundaryMessage();
    public static string get_JumpTargetNotFoundMessage();
    public static string get_LabelNameOrExpectedMessage();
    public static string get_LambdaExpressionsInFormOfaBAreBlockLambdasWithAStatementbHavingALabela();
    public static string get_LanguageOfCodeBehindDoesNotMatchToThe_ToolTip();
    public static string get_LeftHandSideOfAssignmentExpressionCannotBeAConstantMessage();
    public static string get_LeftHandSideOfAssignmentExpressionCannotBeReadOnlyMessage();
    public static string get_letDeclarationsCanOnlyBeDeclaredInsideABlockMessage();
    public static string get_letIsNotAllowedToBeUsedAsANameInletOrconstDeclarationsMessage();
    public static string get_LexicalDeclarationCanOnlyBeDeclaredInsideABlock();
    public static string get_LexicalDeclarationCanOnlyBeDeclaredInsideABlockMessage();
    public static string get_LineBreakNotPermittedHereMessage();
    public static string get_LineTerminatorNotPermittedBeforeArrowMessage();
    public static string get_LocalClassIsNeverUsedMessage();
    public static string get_LocalClassNameIsNeverUsedWithinItsOwnBlockSoItIsRedundantMessage();
    public static string get_LocalClassNameIsRedundantBecauseItIsNeverUsedFromWithinItsOwnBlock();
    public static string get_LocalFunctionIsNeverCalledRecursivelySoItsNameIsRedundantMessage();
    public static string get_LocalFunctionIsNeverUsedMessage();
    public static string get_LocalFunctionIsRedefinedLater();
    public static string get_LocalFunctionNameIsRedundantBecauseItIsNeverCalledRecursively();
    public static string get_LocalVariableCanBeSafelyMovedToInnerBlock();
    public static string get_LocalVariableFunctionClassIsDeclaredButNeverUsed();
    public static string get_LocalVariableIsNeverUsedMessage();
    public static string get_LocationElementIsUnused__ToolTip();
    public static string get_LValueExpectedError();
    public static string get_LValueIsExpectedMessage();
    public static string get_MappedPathConfigurableSeverityTitle();
    public static string get_MappedTagTypeNotFound_ToolTip();
    public static string get_MappedTagTypeShouldBeSpecified_ToolTip();
    public static string get_MatchingConstructorOfType_NotFoundFor_Text();
    public static string get_MatchingParameterConstraintsConstructorNotFoundConfigurableSeverityDescription();
    public static string get_MatchingParameterConstraintsConstructorNotFoundConfigurableSeverityTitle();
    public static string get_MediaFeatureDoesntExistInCSSMessage();
    public static string get_MemberAssignedByAFunctionMayBeConverted_Text();
    public static string get_MemberOfObjectTypeImplicitlyHasAnTypeMessage();
    public static string get_Message();
    public static string get_MismatchASPNETMVCModelTypeConfigurableSeverityDescription();
    public static string get_MismatchModelTypeConfigurableSeverityTitle();
    public static string get_MisplacedAddTag_ToolTip();
    public static string get_MisplacedClearTag_ToolTip();
    public static string get_MisplacedRemoveTag_ToolTip();
    public static string get_MisuseOfthisQualifierInInnerFunction();
    public static string get_ModifierCannotBeUsedWithModifierMessage();
    public static string get_ModifierMustPrecedeModifierMessage();
    public static string get_ModifiersStyle_Text();
    public static string get_ModuleCannotBeAliasedToANonModuleTypeMessage();
    public static string get_ModuleCannotHaveMultipleExportAssignmentsMessage();
    public static string get_ModuleCannotMergeWithDeclarationOfInADifferentFileMessage();
    public static string get_ModuleQualificationRequired_ToolTip();
    public static string get_MoreSpecificSignatureFollowsLessSpecific();
    public static string get_MoreSpecificSignatureFollowsLessSpecificPotentialErrorMessage();
    public static string get_MoreThanOneConstructorOfType_FoundFor_Text();
    public static string get_MoreThanOneParameterConstraintsConstructorMatchedConfigurableSeverityDescription();
    public static string get_MoreThanOneParameterConstraintsConstructorMatchedConfigurableSeverityTitle();
    public static string get_MultipleConstructorImplementationsAreNotAllowedMessage();
    public static string get_MultipleDeclarationsInforInError();
    public static string get_MultipleVariableDeclarationsAreNotAllowedInforInLoop();
    public static string get_MVCConfigurableSeverityCompoundItemName();
    public static string get_NameCannotBeAsItIsAReservedWordMessage();
    public static string get_NameCannotBeEmpty_ToolTip();
    public static string get_NamedPropertyTypeMustBeAssignableToStringIndexerTypeMessage();
    public static string get_NamedPropertyTypeMustBeAssignableToStringIndexerTypeMessage10();
    public static string get_Namespace_IsAlreadyAdded_ToolTip();
    public static string get_Namespace_IsAlreadyBoundToTagPrefix_ToolTip();
    public static string get_NamespaceCannotBeBoundToPairOfTagPrefix_ToolTip();
    public static string get_NamespaceMustBeSpecified_ToolTip();
    public static string get_newCannotBeUsedToCreateAnArrayUsenewArrayInsteadMessage();
    public static string get_NewerTwoColonSyntaxIsSupportedByAllSpecifiedBrowsers();
    public static string get_NewExpressionWhichLacksAConstructorSignatureImplicitlyHasAnanyTypeMessage();
    public static string get_NewlineCausesTextToBeTreatedAsTwoSeparateStatementsThoughMaybeItWasIntendedToBeASingleOne();
    public static string get_NewLinesAreNotAllowedInInheritsAttribute_ToolTip();
    public static string get_NoContentFound_Text();
    public static string get_NonAssignedConstant();
    public static string get_NonCompliantPathStyleInsiderequire();
    public static string get_NonCompliantpublicModifierOrItsAbsence();
    public static string get_NonCompliantQuotesAroundStringLiteral();
    public static string get_NonExportedImportIsDeclaredButIsNeverUsed();
    public static string get_NonGenericFunctionsMayNotAcceptTypeArgumentsMessage();
    public static string get_NonParenthesizedObjectDestructuringAssignmentCannotBeUsedInAnExpressionStatement();
    public static string get_NonParenthesizedObjectDestructuringAssignmentCannotBeUsedInExpressionStatementMessage();
    public static string get_NonStaticUsageInAStaticContextMessage();
    public static string get_NoProjectItemFoundAt__Text();
    public static string get_NotAllCodePathsReturnAValue();
    public static string get_NotAllCodePathsReturnAValueMessage();
    public static string get_NotAllRouteParametersArePassedToMethod_Text();
    public static string get_NotAllRouteParametersArePassedToMethodConfigurableSeverityDescription();
    public static string get_NotAllRouteParametersArePassedToMethodConfigurableSeverityTitle();
    public static string get_NumericallyNamedPropertyTypeMustBeAssignableToNumericIndexerTypeMessage();
    public static string get_NumericallyNamedPropertyTypeMustBeAssignableToNumericIndexerTypeMessage9();
    public static string get_NumericIndexerTypeMustBeAssignableToStringIndexerTypeMessage();
    public static string get_NumericIndexerTypeMustBeAssignableToStringIndexerTypeMessage8();
    public static string get_ObjectConstructedBynewExpressionIsNotUsedFunctionShouldBeCalledInGeneralMannerIfUsedForSideEffects();
    public static string get_ObjectIsPossiblynullOrundefinedMessage();
    public static string get_ObjectLiteralsPropertyImplicitlyHasAnTypeMessage();
    public static string get_ObjectPropertyDeclarationIsExpected();
    public static string get_ObjectPropertyDeclarationIsExpectedMessage();
    public static string get_ObsoleteOrNonstandardElementConfigurableSeverityDescription();
    public static string get_ObsoleteOrNonstandardElementConfigurableSeverityTitle();
    public static string get_OctalLiteralsAndEscapeSequencesAreNotAllowedInstrictMode();
    public static string get_OctalLiteralsAndEscapeSequencesAreNotAllowedInstrictModeMessage();
    public static string get_OctalLiteralsAndEscapeSequencesUsingInstrictMode();
    public static string get_OctalLiteralsAreNotAllowedInStrictModeMessage();
    public static string get_OctalLiteralsAreNotAvailableWhenTargetingECMAScriptAndHigherMessage();
    public static string get_OmittingElementsIsProhibitedForJSONArraysMessage();
    public static string get_OnlyAmbientModulesCanUseQuotedNamesMessage();
    public static string get_OnlyOneVariableCanBeDeclaredInForHeaderMessage();
    public static string get_OnlyPublicMethodsOfTheBaseClassAreAccessibleViaThesuperKeywordMessage();
    public static string get_OnlyTwoColonSyntaxMayBeUsedInTheContext();
    public static string get_OperatorCannotBeAppliedToTypesAndMessage();
    public static string get_OperatorCannotBeAppliedToTypesAndMessage2();
    public static string get_OptionalParameterCanBePrecededOnlyBy_Text();
    public static string get_OptionalParameterMustBeAtTheEndOfThe_Text();
    public static string get_OptionalParameterMustBeAtTheEndOfTheSegmentConfigurableSeverityDescription();
    public static string get_OptionalParameterMustBeAtTheEndOfTheSegmentConfigurableSeverityTitle();
    public static string get_OptionalParametersMayOnlyBeFollowedByOtherOptionalParametersMessage();
    public static string get_OverloadIsLessSpecificThanTheMainSignature();
    public static string get_OverloadIsLessSpecificThanTheMainSignaturePotentialErrorMessage();
    public static string get_OverloadParameterWhichDoesntParticipateInTheMainSignatureDoesntMakeAnySense();
    public static string get_OverloadsCannotDifferOnlyByReturnTypeMessage();
    public static string get_OverloadSignatureIsNotCompatibleWithFunctionDefinitionMessage();
    public static string get_OverloadSignatureIsNotCompatibleWithFunctionDefinitionMessage7();
    public static string get_OverloadSignaturesMustAllBeExportedOrLocalMessage();
    public static string get_OverloadSignaturesMustAllBeOptionalOrRequiredMessage();
    public static string get_Overrides___ClickToNavigate_Text();
    public static string get_Overrides__Text();
    public static string get_OverwritingPrototypeOfNativeObject();
    public static string get_OverwritingPrototypeOfNativeObjectHasNoEffect();
    public static string get_OverwritingPrototypeOfNativeObjectHasNoEffectMessage();
    public static string get_Parameter__Text();
    public static string get_Parameter_DeclaredInRouteMoreThanOnce_Text();
    public static string get_Parameter_IsNotUsedInMethodCall_ToolTip();
    public static string get_ParameterCannotBeReferencedInItsInitializerMessage();
    public static string get_ParameterCannotHaveQuestionMarkAndInitializerMessage();
    public static string get_ParameterDeclaredInRouteMoreThanOnceConfigurableSeverityDescription();
    public static string get_ParameterDeclaredInRouteMoreThanOnceConfigurableSeverityTitle();
    public static string get_ParameterDoesntParticipateInTheMainSignature();
    public static string get_ParameterDoesntParticipateInTheMainSignatureMessage();
    public static string get_ParameterIsNeverUsedMessage();
    public static string get_ParameterNameargumentsClashesWithPreDefinedJSFunctionScopeVariable();
    public static string get_ParameterNameargumentsClashesWithPreDefinedJSFunctionScopeVariableMessage();
    public static string get_ParameterOfCallSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfCallSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfConstructorFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfConstructorFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfConstructorSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfConstructorSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfExportedFunctionHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfExportedFunctionIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfFunctionIsDeclaredButNeverUsed();
    public static string get_ParameterOfFunctionIsDeclaredButNeverUsedAndThatFunctionIsInherited();
    public static string get_ParameterOfFunctionTypeImplicitlyHasAnTypeMessage();
    public static string get_ParameterOfMethodFromExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfMethodFromExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfPublicMethodFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfPublicMethodFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfPublicPropertySetterFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfPublicPropertySetterFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfPublicStaticMethodFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfPublicStaticMethodFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ParameterOfPublicStaticPropertySetterFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ParameterOfPublicStaticPropertySetterFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ParameterPropertyValueAssignedInsideConstructorWontBeAssignedToClassProperty();
    public static string get_ParameterPropertyValueAssignedInsideTheConstructorWontBeAssignedToAClassPropertyDidYouWantToUsethisMessage();
    public static string get_ParametersDoNotMatchToTheMethodSignature_Text();
    public static string get_ParametersInSignaturesMayNotHaveDefaultValuesUseToSpecifyOptionalParametersMessage();
    public static string get_ParametersTypeCanBeMadeStricterDueToAppliedConstraintsConfigurableSeverityDescription();
    public static string get_ParametersTypeCanBeMadeStricterDueToAppliedConstraintsConfigurableSeverityTitle();
    public static string get_ParameterValueIsNotUsed();
    public static string get_ParameterValueIsNotUsedBecauseItIsOverriddenInMethodBodyMessage();
    public static string get_ParameterValueIsNotUsedBecauseItIsOverriddenInTheFunctionBody();
    public static string get_PartialName_IsAlreadyBound_ToolTip();
    public static string get_PartialNameAttributeIsMissing_ToolTip();
    public static string get_PartialNameCannotBeEmpty_ToolTip();
    public static string get_PathErrorConfigurableSeverityDescription();
    public static string get_PathErrorConfigurableSeverityTitle();
    public static string get_PathForFileReferencedByAReferenceCommentIsNotFound();
    public static string get_PathForReferenceCommentNotFound();
    public static string get_PathIsEmpty_Text();
    public static string get_PathIsMappedToADifferentPathInProjectSettingsConfigurableSeverityDescription();
    public static string get_PathStyle_Text();
    public static string get_PathStyleInsiderequireDoesntAdhereToCodeStyleSetting();
    public static string get_PossibleMistakeAmbiguousLambdaBlockAndObjectLiteral();
    public static string get_PossibleOverloadsMayBeInferredByFunction_Text();
    public static string get_PreferExplicitAnyTypeSpecifications_Caption();
    public static string get_PreferExplicitlySpecifyingAnyOrNot_Text();
    public static string get_PreferredQuotesKind_Text();
    public static string get_PreferredQuotesKindForJavaScriptAnd_Caption();
    public static string get_PresenceOfpublicModifierDoesntAdhereToCodeStyleSetting();
    public static string get_PrivateClassFieldCanBeMadeReadonly();
    public static string get_PrivateClassFieldCanBeMadeReadonlyMessage();
    public static string get_PrivateClassFieldIsInitializedOnlyInConstructorAndThusCanBeMadeReadonly();
    public static string get_ProfilesAreAllowedInMainWebConfigOnly_ToolTip();
    public static string get_Property__Text();
    public static string get_Property_IsAlreadyDefinedInClass__ToolTip();
    public static string get_Property_Text();
    public static string get_PropertyAccessorMayNotBeDeclaredInAmbientClassesMessage();
    public static string get_PropertyDoesNotOverrideVendorPrefixedProperty();
    public static string get_PropertyDoesntExistInCSSMessage();
    public static string get_PropertyGetterCannotHaveParameters();
    public static string get_PropertyGetterCannotHaveParametersMessage();
    public static string get_PropertyOfExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_PropertyOfExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_PropertyOrFunctionIsDeclaredButNeverUsed();
    public static string get_PropertyOrGlobalVariableIsPossiblyNeverAssignedMessage();
    public static string get_PropertySetterMustHaveASingleParameter();
    public static string get_PropertySetterMustHaveASingleParameterMessage();
    public static string get_PropertyShouldComeAfterVendorSpecificPropertiesMessage();
    public static string get_PropertyWithQualifierthisThatIsUsedInAnInnerFunctionMatchesByNameWithPropertyDefinedInTheOuterFunction();
    public static string get_PseudoClassDoesntExistInCSSMessage();
    public static string get_PseudoElementDoesntExistInCSSMessage();
    public static string get_PseudoFunctionDoesntExistInCSSMessage();
    public static string get_PublicModifierIsOptionalInTypeScript_Text();
    public static string get_PublicPropertyOfExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_PublicPropertyOfExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_PublicStaticPropertyOfExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_PublicStaticPropertyOfExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_QualifierCanBeMessage();
    public static string get_QualifierCanBenullOrundefined();
    public static string get_QualifierCanBenullOrundefined4();
    public static string get_QualifierIsMessage();
    public static string get_QualifierIsnullOrundefined();
    public static string get_QualifierIsnullOrundefined5();
    public static string get_QualifierIsRedundantMessage();
    public static string get_QuotesAroundStringLiteralDifferFromCodeStyleSetting();
    public static string get_RazorParenthesisInImplicitExpressionsCleanup_Name_Fix_parenthesis_in_Razor_expressions();
    public static string get_readonlyTypeModifierIsOnlyPermittedOnArrayAndTupleLiteralTypesMessage();
    public static string get_RedeclarationOfBlockScopeVariableMessage();
    public static string get_RedeclarationOfLetConst();
    public static string get_RedundantBlock();
    public static string get_RedundantCode();
    public static string get_RedundantCSSHack();
    public static string get_RedundantelseBlock();
    public static string get_RedundantelseBlockMessage();
    public static string get_RedundantEmptyConstructorWithoutParameters();
    public static string get_RedundantEmptyConstructorWithoutParametersMessage();
    public static string get_RedundantLocalClassName();
    public static string get_RedundantLocalFunctionName();
    public static string get_RedundantMeasureUnit();
    public static string get_RedundantParentTypeSpecificationInExtendsImplements();
    public static string get_ReferenceCommentCreatesCyclicDependency();
    public static string get_ReferencedPropertyIsDeclaredLaterOrItReferencesItselfInAStaticInitializer();
    public static string get_ReferenceToFileCreatesCyclicDependencyViaMessage();
    public static string get_ReferenceTypeExpected_Text();
    public static string get_RegisterDirectiveIsUnusedAndCanBeSafely_ToolTip();
    public static string get_RelativePathsAreNotAllowedInWebConfig_ToolTip();
    public static string get_RelativeReferencesInImportsExportsCan_Text();
    public static string get_RepeatedAmbientModifierInThisContextIsTheEnclosingModuleOrClassAlreadyAmbientMessage();
    public static string get_RequiredTypeParametersMayNotFollowOptionalTypeParametersMessage();
    public static string get_RequireECMAScriptCompilerTargetCurrentTargetIsMessage();
    public static string get_RequiresFallbackColor();
    public static string get_RequiresFallbackColorMessage();
    public static string get_ReSharperDoesNotSupportPageParserFilterType_ToolTip();
    public static string get_RestParametersMustBeArrayTypesMessage();
    public static string get_ReturnFromGlobalScopeShouldntHaveValueMessage();
    public static string get_ReturnStatementShouldHaveValueMessage();
    public static string get_ReturnStatementWithAValueInTheGlobalScope();
    public static string get_ReturnStatementWithAValueInTheGlobalScope15();
    public static string get_ReturnTypeOfCallSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfCallSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfConstructorSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfConstructorSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfConstructorSignatureMustBeAssignableToTheInstanceTypeOfTheClassMessage();
    public static string get_ReturnTypeOfExportedFunctionHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfExportedFunctionIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfIndexSignatureFromExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfIndexSignatureFromExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfMethodFromExportedInterfaceHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfMethodFromExportedInterfaceIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfPublicMethodFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfPublicMethodFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfPublicPropertyGetterFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfPublicPropertyGetterFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfPublicStaticMethodFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfPublicStaticMethodFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_ReturnTypeOfPublicStaticPropertyGetterFromExportedClassHasOrIsUsingPrivateTypeMessage();
    public static string get_ReturnTypeOfPublicStaticPropertyGetterFromExportedClassIsUsingInaccessibleModuleMessage();
    public static string get_RouteParameter_IsNotPassedToMethod_Text();
    public static string get_RouteParameter_IsNotPassedToSomeOfController_Text();
    public static string get_RouteParameterCanBePassedToMethodConfigurableSeverityDescription();
    public static string get_RouteParameterCanBePassedToMethodConfigurableSeverityTitle();
    public static string get_RouteParameterConstraint_CanBeAdded_Text();
    public static string get_RouteParameterConstraint_NotResolved_Text();
    public static string get_RouteParameterConstraintArgumentCannotBeConvertedToTargetTypeConfigurableSeverityDescription();
    public static string get_RouteParameterConstraintArgumentCannotBeConvertedToTargetTypeConfigurableSeverityTitle();
    public static string get_RouteParameterConstraintCanBeAddedDueToTypeOfMethodArgumentConfigurableSeverityDescription();
    public static string get_RouteParameterConstraintCanBeAddedDueToTypeOfMethodArgumentConfigurableSeverityTitle();
    public static string get_RouteParameterConstraintNotResolvedConfigurableSeverityDescription();
    public static string get_RouteParameterConstraintNotResolvedConfigurableSeverityTitle();
    public static string get_RoutePrefix_CanBeExtractedToControllerTemplate_Text();
    public static string get_RoutePrefix_CanBeExtractedToControllerTemplates_Text();
    public static string get_RouteToken_NotResolved_Text();
    public static string get_RouteTokenNotResolvedConfigurableSeverityDescription();
    public static string get_RouteTokenNotResolvedConfigurableSeverityTitle();
    public static string get_RunatAttributeIsNeglectableForTagsThat_ToolTip();
    public static string get_SameItemIsImportedTwiceWithDifferentNames();
    public static string get_ScriptTagIsEmpty_ToolTip();
    public static string get_SectionBodyExpected_ToolTip();
    public static string get_FunctionsBodyExpected_ToolTip();
    public static string get_SectionNameExpected_ToolTip();
    public static string get_SequentialIndexingCanBeReplacedByAMessage();
    public static string get_SequentialIndexingInPropertiesCanBeReplacedByShortHandPropertiesAfterADestructuringAssignmentMessage();
    public static string get_SequentialUndefinedCheckingCanBeReplacedWithAMessage();
    public static string get_ServerTagsCannotContainConstructs_ToolTip();
    public static string get_setAccessorCannotHaveRestParameterMessage();
    public static string get_setAccessorParameterCannotBeOptionalMessage();
    public static string get_setAccessorParameterCannotHaveAnInitializerMessage();
    public static string get_SetterAlreadyDeclaredMessage();
    public static string get_SettersCannotReturnAValueMessage();
    public static string get_ShouldHaveAnImplementationMessage();
    public static string get_SimilarExpressionsComparison();
    public static string get_SimilarExpressionsComparisonMessage();
    public static string get_SingleOrDoubleQuotesForJavaScriptTypeScript_Text();
    public static string get_SomeOfFunctionExitsReturnValueButTheOthersDont();
    public static string get_SpecializedOverloadSignatureIsNotAssignableToAnyNonSpecializedSignatureMessage();
    public static string get_SpecifiedFileIsNotAPartOfSolutionMessage();
    public static string get_SpecifyingThisParentTypeIsRedundantBecauseIsAlreadyPresentInTheListMessage();
    public static string get_SpecifyingTrueFalseWithBooleanConditionIsRedundant();
    public static string get_SpreadOperatorInnewExpressionsIsOnlyAvailableWhenTargetingECMAScriptAndHigherMessage();
    public static string get_SrcControlCannotBeBoundToTagPrefixSpecify_ToolTip();
    public static string get_SrcControlMustBeSpecified_ToolTip();
    public static string get_StandardPropertyShouldBeSetAfterVendorPrefixedProperty();
    public static string get_StatementIsPossiblyIncorrectlyBrokenByANewline();
    public static string get_StatementIsPossiblyIncorrectlyBrokenByANewlineMessage();
    public static string get_StatementsAreNotAllowedInAmbientContextsMessage();
    public static string get_StatementTerminationDoesntMatchCodeStyle();
    public static string get_StatementTerminationDoesntMatchCodeStyle1();
    public static string get_StatementTerminationDoesntMatchCodeStyleMessage();
    public static string get_StaticMemberCannotBeAccessedOffAnInstanceVariableMessage();
    public static string get_StaticMembersCannotReferenceClassTypeParametersMessage();
    public static string get_StaticnessOfTheOverloadDoesNotAgreeWithTheDefinitionMessage();
    public static string get_StringConcatenationCanBeConvertedToATemplateString();
    public static string get_StringLiteralUsageAllowsCreatingASpecializedOverloadMessage();
    public static string get_StringLiteralUsageAllowsCreatingSpecializedOverload();
    public static string get_StyleOfRelativeFileReferencesInImports_Caption();
    public static string get_SubsequentIndexersCanBeReplacedByADestructuringDeclarationOrAssignment();
    public static string get_SubsequentIndexersInObjectLiteralFieldsCanBeSimplifiedWithDestructuring();
    public static string get_SubsequentVariableDeclarationsMustHaveTheSameTypeButTheyDeclareSeveralIncompatibleTypesMessage();
    public static string get_SuperCallsAreNotPermittedOutsideConstructorsOrInLocalFunctionsInsideConstructorsMessage();
    public static string get_superCannotBeReferencedInAComputedPropertyNameMessage();
    public static string get_superCannotBeReferencedInNonDerivedClassesMessage();
    public static string get_superCanOnlyBeUsedInsideAClassMethodMessage();
    public static string get_superInvocationCannotHaveTypeArgumentsMessage();
    public static string get_superMustBeCalledBeforeAccessingthisInTheConstructorOfADerivedClass();
    public static string get_superMustBeCalledBeforeAccessingthisInTheConstructorOfADerivedClassMessage();
    public static string get_superMustBeFollowedByAnArgumentListOrMemberAccessMessage();
    public static string get_superPropertyAccessIsPermittedOnlyInAConstructorMemberFunctionOrMemberAccessorOfADerivedClassMessage();
    public static string get_superShouldBeCalledBeforeAccessingthisInTheConstructorOfADerivedClassThisIsCurrentlyNotReportedByTheTypeScriptCompilerMessage();
    public static string get_SuppliedParametersDoNotMatchAnySignatureOfCallTargetMessage();
    public static string get_SuppliedParametersDoNotMatchAnySignatureOfCallTargetMessage5();
    public static string get_SuspiciousExpressionStatement();
    public static string get_SuspiciousinstanceofCheck();
    public static string get_SuspiciousinstanceofCheckMessage();
    public static string get_SuspiciousSyntaxThisIsABlockDidYouWantToHaveAnObjectLiteralHereMessage();
    public static string get_SuspiciousthisUsageInContextOfLocalFunctionInsideClassMember();
    public static string get_SuspiciousthisUsageInCurrentContextthisRefersToALocalFunctionNotToAContainingClassMessage();
    public static string get_SuspicioustypeofCheck();
    public static string get_SuspicioustypeofCheckMessage();
    public static string get_SuspiciousUseOfthisQualifierFromInnerFunctionMessage();
    public static string get_Symbol_IsUsedFromModule_WhichIsNotCopied_Text();
    public static string get_SymbolCannotBeProperlyResolvedOnlyPossibleDynamicOptionIsProvidedMessage();
    public static string get_SymbolCannotBeProperlyResolvedProbablyItIsLocatedInInaccessibleModuleMessage();
    public static string get_SymbolDoesntExistInCSSMessage();
    public static string get_SymbolFromModuleThatMightBeMissingAtRuntimeConfigurableSeverityTitle();
    public static string get_SymbolIsPossiblyInInaccessibleModule();
    public static string get_SymbolNotResolvedConfigurableSeverityDescription();
    public static string get_SymbolNotResolvedConfigurableSeverityTitle();
    public static string get_SyntaxError_ToolTip();
    public static string get_SyntaxErrorConfigurableSeverityDescription();
    public static string get_SyntaxErrorConfigurableSeverityTitle();
    public static string get_SyntaxIsNotAllowedInCSSMessage();
    public static string get_SyntaxIsNotAllowedInSpecifiedCSSVersion();
    public static string get_SyntaxIsNotAllowedInSpecifiedCSSVersion2();
    public static string get_Tag_NotClosed_ToolTip();
    public static string get_TaggedTemplatesAreOnlyAvailableWhenTargetingECMAScriptAndHigherMessage();
    public static string get_TagMappingForType_IsDefinedMoreThan_ToolTip();
    public static string get_TagNameCannotBeEmpty_ToolTip();
    public static string get_TagPrefixCannotBeEmpty_ToolTip();
    public static string get_TagPrefixMustBeSpecified_ToolTip();
    public static string get_TagTypeNotFound_ToolTip();
    public static string get_TagTypeShouldBeSpecified_ToolTip();
    public static string get_TernaryExpressionCanBeReplacedWithItsconditionMessage();
    public static string get_TernaryOperatorMayBeReplacedByItsCondition();
    public static string get_TheargumentsObjectCannotBeReferencedInAnArrowFunctionConsiderUsingAStandardFunctionExpressionMessage();
    public static string get_TheBodyOfAnifStatementCannotBeTheEmptyStatementMessage();
    public static string get_TheEntry_HasAlreadyBeenAdded_ToolTip();
    public static string get_TheExpressionInAOrBlockCannotBeAnEmpty_ToolTip();
    public static string get_TheFileDoesnTExist_ToolTip();
    public static string get_TheIncludedFileCanBeInTheSameDirectory_ToolTip();
    public static string get_TheRenderModeDirectiveExpectsAnIdentifier_ToolTip();
    public static string get_TheInjectDirectiveExpectsAnIdentifier_ToolTip();
    public static string get_TheInjectDirectiveExpectsATypeName_ToolTip();
    public static string get_TheImplementsDirectiveExpectsATypeName_ToolTip();
    public static string get_TheInheritsDirectiveExpectsATypeName_ToolTip();
    public static string get_TheModelDirectiveExpectsATypeName_ToolTip();
    public static string get_TheLayoutDirectiveExpectsATypeName_ToolTip();
    public static string get_TypeExpected_ToolTip();
    public static string get_TheIsNotCompatibleWithMessage();
    public static string get_TheLeftHandSideOfAnArithmeticOperationMustBeOfTypeanynumberOrAnEnumTypeMessage();
    public static string get_TheLeftHandSideOfAnAssignmentExpressionMustBeAVariablePropertyOrIndexerMessage();
    public static string get_TheLeftHandSideOfAninExpressionMustBeOfTypesstringnumberOranyMessage();
    public static string get_TheLeftHandSideOfAninstanceofExpressionMustBeOfTypeanyAnObjectTypeOrATypeParameterMessage();
    public static string get_TheNewerSyntaxIsNotCompatibleWithMessage();
    public static string get_TheOperandOfAnIncrementOrDecrementOperatorCannotBeAConstantMessage();
    public static string get_TheOperandOfAnIncrementOrDecrementOperatorCannotBeReadOnlyMessage();
    public static string get_TheOperandOfAnIncrementOrDecrementOperatorMustBeAVariablePropertyOrIndexerMessage();
    public static string get_ThePropertyDoesNotExistOnValueOfTypeMessage();
    public static string get_ThePseudoElementMustStartWithMessage();
    public static string get_ThereIsNoHasOwnPropertyCheckInABodyOfforInLoopThisWillCauseAnEnumerationOfPrototypeProperties();
    public static string get_ThereIsNoHasOwnPropertyCheckInABodyOfforInLoopThisWillCauseAnEnumerationOfPrototypePropertiesMessage();
    public static string get_TheRequiredAttribute_IsNotFoundOn_Control_ToolTip();
    public static string get_TheRightHandSideOfAforInStatementMustBeOfTypeanyAnObjectTypeOrATypeParameterMessage();
    public static string get_TheRightHandSideOfAnArithmeticOperationMustBeOfTypeanynumberOrAnEnumTypeMessage();
    public static string get_TheRightHandSideOfAninExpressionMustBeOfTypeanyAnObjectTypeOrATypeParameterMessage();
    public static string get_TheRightHandSideOfAninstanceofExpressionMustBeOfTypeanyOrASubtypeOfTheFunctionInterfaceTypeMessage();
    public static string get_TheTypeArgumentForTypeParameterCannotBeInferredFromTheUsageConsiderSpecifyingTheTypeArgumentsExplicitlyMessage();
    public static string get_TheTypeOfAUnaryArithmeticOperationOperandMustBeOfTypeanynumberOrAnEnumTypeMessage();
    public static string get_TheTypeParameterConstraintShouldBeAValidTypeMessage();
    public static string get_TheVariableDeclarationOfAforInOrAforOfStatementCannotHaveAnInitializerMessage();
    public static string get_TheWordIsReservedForFutureVersionsOfECMAScript();
    public static string get_thisCannotBeReferencedInAComputedPropertyNameMessage();
    public static string get_thisCannotBeReferencedInConstructorArgumentsMessage();
    public static string get_thisCannotBeReferencedInCurrentLocationMessage();
    public static string get_thisCannotBeReferencedInStaticInitializersInAClassBodyMessage();
    public static string get_thisCannotBeReferencedWithinModuleBodiesMessage();
    public static string get_ThisIsNotScriptletWillBeOutputAsPlain_ToolTip();
    public static string get_thisShouldntBeUsedInGlobalContextMessage();
    public static string get_ThisValueWillBeIgnored();
    public static string get_ThrowMustBeFollowedByAnExpressionMessage();
    public static string get_throwStatementShouldBeFollowedByExpression();
    public static string get_TrailingCommaInObjectPropertiesListMayLeadToErrorInSomeJSEnginesMessage();
    public static string get_TrailingRedundantCommaInObjectPropertiesLeadsToErrorsInSomeJSEnginesEGIEsEngine();
    public static string get_TrailingRedundantCommaInObjectPropertiesListMayBeError();
    public static string get_TriedToQueryTypeOfUninitializedModuleMessage();
    public static string get_TriedToSetVariableTypeToUninitializedModuleTypeMessage();
    public static string get_TriesToCoerceValuesBeforeComparingThemWhichCanLeadToSomeUnexpectedResultsMessage();
    public static string get_TripleSlashDirectivesAreOnlyValidAtTheTopOfTheFile();
    public static string get_TripleSlashDirectivesAreOnlyValidAtTheTopOfTheFileMessage();
    public static string get_TwoColonsExpected();
    public static string get_TwoColonsPreferred();
    public static string get_TwoDifferentImportDeclarationsAndForTheSameImportedItemMessage();
    public static string get_TwoImportDeclarationsAreResolvedToTheSameItem();
    public static string get_Type_DoesNotSatisfyConstraint__Text();
    public static string get_Type_HasNoDefaultConstructor_Text();
    public static string get_Type_HasOnly_Type__ToolTip();
    public static string get_TypeAliasCircularlyReferencesItselfMessage();
    public static string get_TypeAnnotationCannotAppearOnAConstructorDeclarationMessage();
    public static string get_TypeArgumentsCountMismatch_Text();
    public static string get_TypeAssertionCanBeReplacedWithasOperatorMessage();
    public static string get_TypeAssertionInFormOfTypeexprCanBeConvertedToexprAsTypeForm();
    public static string get_TypeCannotExtendWhichIsNotAConstructorFunctionTypeMessage();
    public static string get_TypeCastAssertionIsRedundantAsProvidedValueAlwaysHasExactlyTheSameTypeAsTheTypeProvidedForTheCast();
    public static string get_TypeCastAssertionIsRedundantAsProvidedValueAlwaysHasTypeIdenticalToTypeProvidedForTheCast();
    public static string get_TypeCastIsRedundantExpressionIsAlwaysOfProvidedType();
    public static string get_TypeCastIsRedundantExpressionIsAlwaysOfSpecifiedTypeMessage();
    public static string get_TypeCastIsRedundantExpressionIsOfAStructurallyCompatibleType();
    public static string get_TypeCastIsRedundantExpressionIsOfATypeStructurallyIdenticalToSpecifiedTypeMessage();
    public static string get_TypeDoesNotSatisfyTheConstraintextendsForTypeParameterMessage();
    public static string get_TypeGuardAlwaysProducesneverTypeMessage();
    public static string get_TypeGuardDefinitelyProducesneverTypeForTheVariable();
    public static string get_TypeGuardDoesntAffectTheTypeMessage();
    public static string get_TypeGuardDoesntAffectVariablesTypeInAnyWay();
    public static string get_TypeGuardsCannotBeAppliedToExpressionsButCanBeAppliedToLocalVariablesIntroducingVariableWillAllowTypeGuardToBeApplied();
    public static string get_TypeGuardWhichDefinitelyProducesneverForTheVariableTypeIsSuspicious();
    public static string get_TypeGuardWhichDoesntReallyAffectTheVariablesTypeIsRedundant();
    public static string get_TypeHasNoPropertyAndNoStringIndexSignatureMessage();
    public static string get_TypeHasNoPropertyMessage();
    public static string get_TypeIsNotAnArrayTypeMessage();
    public static string get_TypeIsNotGenericMessage();
    public static string get_TypeMustHaveASymbolIteratorMethodThatReturnsAnIteratorMessage();
    public static string get_TypeNameInExtendsClauseDoesntReferenceConstructorFunctionForMessage();
    public static string get_TypeOfCanBeSpecifiedExplicitlyMessage();
    public static string get_TypeOfConditionalMustBeIdenticalToOrMessage();
    public static string get_TypeOfConditionalMustBeIdenticalToOrMessage11();
    public static string get_TypeOfParameter_CanBeMade_DueToApplied_Text();
    public static string get_TypeOfParameter_DoesnTSatisfyRouteConstraints_Text();
    public static string get_TypeOfParameterDoesntSatisfyConstraintsDeclaredInRouteTemplateConfigurableSeverityDescription();
    public static string get_TypeOfParameterDoesntSatisfyConstraintsDeclaredInRouteTemplateConfigurableSeverityTitle();
    public static string get_TypeOfVariableMayBeSpecifiedExplicitly();
    public static string get_TypeParameterConstraintCannotBeAPrimitiveTypeMessage();
    public static string get_TypeParameterHidesTypeParameterDeclaredInOuterScope();
    public static string get_TypeParameterHidesTypeParameterDeclaredInOuterScopeMessage();
    public static string get_TypeParameterIsRecursivelyReferencedAsAConstraintForItselfViaTypeParameterMessage();
    public static string get_TypeParameterOfExportedElementHasOrIsUsingPrivateTypeMessage();
    public static string get_TypeParameterOfExportedElementIsUsingInaccessibleModuleMessage();
    public static string get_TypeParametersCannotAppearOnAConstructorDeclarationMessage();
    public static string get_TypeParameterWithTheSameNameExistsInSomeOuterScopeAndCurrentDeclarationHidesIt();
    public static string get_TypePredicatesAreAllowedOnlyForCallableSignaturesWithParametersMessage();
    public static string get_TypeReferenceCannotReferToContainerMessage();
    public static string get_TypeReferenceMustReferToTypeMessage();
    public static string get_TypeScriptFeatureCurrentLanguageLevelIsMessage();
    public static string get_TypeScriptHighlightingsCleanup_GetModuleActionName_Processing_TypeScript_code();
    public static string get_TypeSpecificationForIsRedundantSpecifiedTypeIsTheSameWithContextualTypeMessage();
    public static string get_TypeSpecificationIsRedundantBecauseVariableTypeIsContextuallyDeterminedFromTheTypeOfAssignedValue();
    public static string get_TypeSpecificationPreferImplicitOrExplicit_Caption();
    public static string get_TypeSpecificationStyle_Text();
    public static string get_UnableToResolveModuleReferenceMessage();
    public static string get_UnableToResolveTypeMessage();
    public static string get_UnableToResolveTypeOfMessage();
    public static string get_UnclosedTagConfigurableSeverityTitle();
    public static string get_UnclosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription();
    public static string get_UndeclaredVariableMessage();
    public static string get_Unexpected_KeywordAfterCharacterOnce_ToolTip();
    public static string get_UnexpectedCommaAfterTheLastElementMessage();
    public static string get_UnexpectedModifierMessage();
    public static string get_UnexpectedToken_ToolTip();
    public static string get_UnitOfMeasureIsRedundantForZeroValue();
    public static string get_UnitOfMeasureIsRedundantMessage();
    public static string get_UnknownASPNETMVCViewComponentViewConfigurableSeverityDescription();
    public static string get_UnknownAttributeConfigurableSeverityTitle();
    public static string get_UnknownAttributeInHTMLAndRelatedTechnologiesConfigurableSeverityDescription();
    public static string get_UnknownAttributeValueConfigurableSeverityTitle();
    public static string get_UnknownAttributeValueInHTMLAndRelatedTechnologiesConfigurableSeverityDescription();
    public static string get_UnknownCSSClass();
    public static string get_UnknownCSSClassMessage();
    public static string get_UnknownCSSSymbol();
    public static string get_UnknownCustomProperty();
    public static string get_UnknownEventConfigurableSeverityTitle();
    public static string get_UnknownEventInHTMLAndRelatedTechnologiesConfigurableSeverityDescription();
    public static string get_UnknownHTMLEntity__Text();
    public static string get_UnknownHTMLEntityConfigurableSeverityDescription();
    public static string get_UnknownHTMLEntityConfigurableSeverityTitle();
    public static string get_UnknownTagConfigurableSeverityTitle();
    public static string get_UnknownTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription();
    public static string get_UnknownVendorSpecificExtension();
    public static string get_UnknownVendorSpecificExtensionMessage();
    public static string get_UnknownVendorSpecificValueMessage();
    public static string get_UnknownViewComponentViewConfigurableSeverityTitle();
    public static string get_UnmanagedTypeExpected_Text();
    public static string get_UnreachableCode();
    public static string get_UnrecognizedEscapeSequence_ToolTip();
    public static string get_UntypedFunctionCallsMayNotAcceptTypeArgumentsMessage();
    public static string get_Unused_Tag_ToolTip();
    public static string get_UnusedLocalImport();
    public static string get_UnusedLocalVariableFunctionClass();
    public static string get_UnusedParameter();
    public static string get_UnusedParameterOfInheritedMember();
    public static string get_UnusedPropertyOrFunction();
    public static string get_UsageOfPossiblyUnassignedLocalVariable();
    public static string get_UsageOfPossiblyUnassignedValueMessage();
    public static string get_UsageOfUnassignedLocalVariable();
    public static string get_UsageOfUnassignedValueMessage();
    public static string get_UseasOperatorInsteadOfTypeAssertion();
    public static string get_UsebreakOrcontinueOutsideOfLoopBody();
    public static string get_UseExplicitOrImplicitPublicModifier_Text();
    public static string get_UseOfAnImplicitlyDeclaredGlobalVariableMessage();
    public static string get_UseOfExpressionAfterBreakOrContinue();
    public static string get_UseOfFutureReservedWord();
    public static string get_UseOfFutureReservedWordMessage();
    public static string get_UseOfImplicitlyDeclaredGlobalVariable();
    public static string get_UseOfImplicitlyDeclaredGlobalVariable13();
    public static string get_UseOfInappropriateValueToTheLeftOfAssignmentOperator();
    public static string get_UseOfPossiblyUnassignedPropertyInAStaticInitializer();
    public static string get_UseOfPossiblyUnassignedPropertyInAStaticInitializerMessage();
    public static string get_UseOfPossiblyUnassignedPropertyOrGlobalVariable();
    public static string get_UseOfPossiblyUnassignedPropertyOrGlobalVariable14();
    public static string get_UseOfThewithStatementIsAnErrorInTypeScriptAllSymbolsWithinAWithBlockWillBeResolvedToanyMessage();
    public static string get_UseOfthisInGlobalContext();
    public static string get_UseOfthisInGlobalContext10();
    public static string get_UseOfUndeclaredVariable();
    public static string get_UseOfUndeclaredVariable1();
    public static string get_UsingAVariablePropertyOrObjectWithoutDeclaringItIsNotAllowedInstrictMode();
    public static string get_UsingAVariablePropertyOrObjectWithoutDeclaringItIsNotAllowedInstrictModeMessage();
    public static string get_UsingOfargumentsCallerAndargumentsCallee();
    public static string get_UsingOfargumentsCallerAndargumentsCalleeInstrictMode();
    public static string get_UsingOfCoercedEquality();
    public static string get_UsingOfCoercedEqualityOperator();
    public static string get_UsingOfCoercedEqualityOperatorWithnullOrundefined();
    public static string get_UsingOfevalargumentsNameInstrictMode();
    public static string get_UsingOfFutureReservedKeywordsInstrictMode();
    public static string get_UsingOfFutureReservedKeywordsIsNotAllowedInstrictMode();
    public static string get_UsingOfFutureReservedKeywordsIsNotAllowedInstrictModeMessage();
    public static string get_UsingOfUndeclaredGlobalVariable();
    public static string get_UsingOfwithStatementsInstrictMode();
    public static string get_ValueAssignedIsNotUsedInAnyExecutionPathMessage();
    public static string get_ValueDoesnTMatchRealSizeOfImage_ToolTip();
    public static string get_ValueIsNotCompatibleWithMessage();
    public static string get_ValueIsUnexpected();
    public static string get_ValueOfColorWithAlphaComponentIsNotSupportedMessage();
    public static string get_ValueOfParameterIsNeverUsedBecauseItIsOverriddenInTheFunctionBodyMessage();
    public static string get_ValueOfTypeIsNotCallableDidYouMeanToIncludenewMessage();
    public static string get_ValueOfTypeIsNotCallableMessage();
    public static string get_ValueOfTypeIsNotIndexableByTypeMessage();
    public static string get_ValueOfTypeIsNotNewableMessage();
    public static string get_ValueShouldHaveUnits();
    public static string get_ValueTypeExpected_Text();
    public static string get_VariableCanBeMadeBlockLocalMessage();
    public static string get_VariableCanBeMadeConstant();
    public static string get_VariableCanBeMadeConstantMessage();
    public static string get_VariableDeclarationCanBeMovedToInnerBlockMessage();
    public static string get_VariableDeclarationsOfAforInOrAforOfStatementCannotUseATypeAnnotationMessage();
    public static string get_VariableDeclarationsOfAforStatementMustBeOfTypesstringOranyMessage();
    public static string get_VariableImplicitlyHasAnTypeMessage();
    public static string get_VariableIsNotAssignedOnSomeExecutionPaths();
    public static string get_VariableIsUsedBeforeItIsDeclared();
    public static string get_VariableIsUsedBeforeItIsDeclaredMessage();
    public static string get_VariableIsUsedButIsWasntAssignedAValue();
    public static string get_VariableIsUsedInInnerScopeBeforeItIsDeclared();
    public static string get_VariableIsUsedInInnerScopeBeforeItIsDeclaredMessage();
    public static string get_VariableIsUsedOutsideOfBlockWhichItIsDeclaredMessage();
    public static string get_VariableIsUsedOutsideOfScopeWhichItIsDeclared();
    public static string get_VariableShouldBeDeclaredEitherInCodeOrAsAmbientBydeclaredKeywordMessage();
    public static string get_varVariableCanBeMadeletVariable();
    public static string get_VisibilityOfTheOverloadDoesNotAgreeWithTheDefinitionMessage();
    public static string get_WhenAllControllersActionsRouteTemplatesHaveSamePrefixesItsPossibleToExtractTheirCommonPrefixToControllersRouteTemplateConfigurableSeverityDescription();
    public static string get_WhenElementIsElidedAtTheEndOfAnArrayThatElementDoesNotContributeToTheLengthOfTheArrayMessage();
    public static string get_WhenNoImplicitAnyCompilerOptionIsSetEmitsErrorsForImplicitAny();
    public static string get_WhichKindOfTypeSpecificationToPrefer_Text();
    public static string get_WhichLacksgetAccessorAndParameterTypeAnnotationOnsetAccessorImplicitlyHasAnanyTypeMessage();
    public static string get_WhichLacksReturnTypeAnnotationImplicitlyHasAnanyReturnTypeMessage();
    public static string get_WhichLacksReturnTypeAnnotationImplicitlyHasAnReturnTypeMessage();
    public static string get_withStatementIsNotAllowedInstrictMode();
    public static string get_withStatementIsNotAllowedInstrictModeMessage();
    public static string get_WrongAttributeQuotesConfigurableSeverityTitle();
    public static string get_WrongClosedTagConfigurableSeverityTitle();
    public static string get_WrongClosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription();
    public static string get_WrongModuleConfigurableSeverityDescription();
    public static string get_WrongModuleConfigurableSeverityTitle();
    public static string get_WrongNameCase_Text();
    public static string get_WrongSelfClosedTagConfigurableSeverityTitle();
    public static string get_WrongSelfClosedTagInHTMLAndRelatedTechnologiesConfigurableSeverityDescription();
    public static string get_YourCodeStyleRequiresLiteralExpressionToBeSurroundedWithQuotesMessage();
    public static string get_YourCodeStyleRequiresOfpublicModifierMessage();
    public static string get_YourCodeStyleRequiresRelativeModulePathsTostartWithMessage();
    public static string get_ASPNETDeadCode_Text();
    public static string get_ASPNETWarning_Text();
    public static string get_ASPNETResolveWarning_Text();
    public static string get_WrongImageSize_Text();
    public static string get_UnknownSymbol_Text();
    public static string get_UnknownSymbolInASPNETAndRelatedTechnologies_Text();
    public static string get_AttributeWithOptionalValueProblem_Text();
    public static string get_UnsupportedPageParserFilterType_Text();
    public static string get_ReSharperDoesNotSupportPageParserFilterType_Text();
    public static string get_UnusedRegisterDirective_Text();
    public static string get_RegisterDirectiveIsUnusedAndCanBeSafely_Text();
    public static string get_ObjectDataSourceMethodResolveProblem_Text();
    public static string get_UnknownContentPlaceholder_Text();
    public static string get_UnknownTheme_Text();
    public static string get_UnknownSkin_Text();
    public static string get_MissedValueForRequiredAttribute_Text();
    public static string get_IgnoredPath_Text();
    public static string get_PathIsIgnoredInProjectSettings_Text();
    public static string get_UnknownController_Text();
    public static string get_UnknownASPNETMVCController_Text();
    public static string get_UnknownAction_Text();
    public static string get_UnknownASPNETMVCAction_Text();
    public static string get_UnknownView_Text();
    public static string get_UnknownASPNETMVCView_Text();
    public static string get_UnknownPartialView_Text();
    public static string get_UnknownASPNETMVCPartialView_Text();
    public static string get_UnknownArea_Text();
    public static string get_UnknownASPNETMVCArea_Text();
    public static string get_UnknownTemplate_Text();
    public static string get_UnknownASPNETMVCTemplate_Text();
    public static string get_UnknownMasterpage_Text();
    public static string get_UnknownASPNETMVCMasterpage_Text();
    public static string get_UnknownViewComponent_Text();
    public static string get_UnknownASPNETMVCViewComponent_Text();
    public static string get_UnknownRazorLayout_Text();
    public static string get_UnknownRazorSection_Text();
    public static string get_UnknownRazorAssembly_Text();
    public static string get_RedundantLocationElement_Text();
    public static string get_LocationElementDoesNotCorrespondToAny_Text();
    public static string get_RedundantTagPrefixDeclaration_Text();
    public static string get_TagPrefixDoesNotDeclareAnyNewAliasAnd_Text();
    public static string get_ModuleQualificationRequired_Text();
    public static string get_ModuleQualificationRequiredForTypeResolution_Text();
    public static string get_RedundantAddNamespaceElement_Text();
    public static string get_AddNamespaceElementIsRedundantBecause_Text();
    public static string get_RedundantAddElement_Text();
    public static string get_AddElementIsRedundantBecauseItIsCleared_Text();
    public static string get_RedundantElementOrAttributeBecauseOf_Text();
    public static string get_ElementOrAttributeIsNotAppliedBecause_Text();
    public static string get_RedundantRemoveOrClearElement_Text();
    public static string get_ElementDoesNotClearAnythingAndCanBe_Text();
    public static string get_ReferencedPathCannotBeFoundInTheWebsite_Text();
    public static string get_CannotResolveSymbol_Text();
    public static string get_CannotResolveModule_Text();
    public static string get_RunAtAttribute_Highlighter_Display_Name();
    public static string get_ReSharperASPNETRouteTemplateParameter_Text();
    public static string get_ReSharperASPNETRouteTemplateTokenSubstitution_Text();
    public static string get_ReSharperASPNETRouteTemplate_Text();
    public static string get_GenerateOption_GenerateMembersAbstractWhenPossible_Text();
    public static string get_GenerateOption_ReadOnly_Text();
    public static string get_GenerateOption_AccessRights_Text();
    public static string get_GenerateOption_Automatic_Text();
    public static string get_GenerateOption_Yes_Text();
    public static string get_GenerateOption_No_Text();
    public static string get_TheDirectiveExpectsValue();
    public static string get_ABooleanLiteral();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CodeCleanupModuleAttribute]
public class JetBrains.ReSharper.Daemon.Src.Html.CodeCleanup.HtmlHighlightingCleanupModule : HighlightingCleanupModule {
    public static CodeCleanupOptionDescriptor`1<bool> FormatAttributeQuote;
    [CompilerGeneratedAttribute]
private ICollection`1<CodeCleanupOptionDescriptor> <Descriptors>k__BackingField;
    public string Name { get; }
    public ICollection`1<CodeCleanupOptionDescriptor> Descriptors { get; }
    public PsiLanguageType LanguageType { get; }
    private static HtmlHighlightingCleanupModule();
    public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual ICollection`1<CodeCleanupOptionDescriptor> get_Descriptors();
    public virtual PsiLanguageType get_LanguageType();
    public virtual bool IsAvailable(CodeCleanupProfile profile);
    public virtual void SetDefaultSetting(CodeCleanupProfile profile, DefaultProfileType profileType);
}
[ElementProblemAnalyzerAttribute("16", "Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Daemon.UrlStrings.Daemon.UrlStringsSyntaxHighlighter : ElementProblemAnalyzer`1<ICSharpArgument> {
    protected virtual void Run(ICSharpArgument argument, ElementProblemAnalyzerData data, IHighlightingConsumer consumer);
}
public interface JetBrains.ReSharper.Daemon.UrlStrings.Highlightings.IUrlStringHighlighting {
}
[RegisterHighlighterAttribute("ReSharper URL Segment")]
public static class JetBrains.ReSharper.Daemon.UrlStrings.Highlightings.UrlStringsHighlightingAttributeIds : object {
    public static string HYPERLINK;
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/IdentifierHighlightings")]
[DaemonTooltipProviderAttribute("")]
public class JetBrains.ReSharper.Daemon.UrlStrings.Highlightings.UrlStringSyntaxHighlighting : object {
    private DocumentRange myDocumentRange;
    [CompilerGeneratedAttribute]
private string <AttributeId>k__BackingField;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public string AttributeId { get; }
    public UrlStringSyntaxHighlighting(string attributeId, DocumentRange documentRange);
    public sealed virtual string get_ToolTip();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
    [CompilerGeneratedAttribute]
public sealed virtual string get_AttributeId();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.UrlStrings.ZoneMarker : object {
}
[RegisterConfigurableSeverityAttribute("Mvc.InvalidModelType", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MVCConfigurableSeverityCompoundItemName", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MismatchModelTypeConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "MismatchASPNETMVCModelTypeConfigurableSeverityDescription", "5")]
[ConfigurableSeverityHighlightingAttribute("Mvc.InvalidModelType", "ASPX")]
public class JetBrains.ReSharper.Daemon.Web.Highlightings.Mvc.MvcConfigurableInvalidModelType : HtmlErrorHighlighting {
    public static string SEVERITY_ID;
    [CompilerGeneratedAttribute]
private ITreeNodePointer`1<IWebFileWithCodeBehind> <ViewFilePointer>k__BackingField;
    [CompilerGeneratedAttribute]
private IExpression <ArgumentExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredType <SuperType>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeclaredType <BaseType>k__BackingField;
    [CompilerGeneratedAttribute]
private IType <ModelType>k__BackingField;
    public ITreeNodePointer`1<IWebFileWithCodeBehind> ViewFilePointer { get; }
    public IExpression ArgumentExpression { get; }
    public IDeclaredType SuperType { get; }
    public IDeclaredType BaseType { get; }
    public IType ModelType { get; }
    public MvcConfigurableInvalidModelType(IWebFileWithCodeBehind viewFile, IExpression argumentExpression, IDeclaredType superType, IType modelType, IDeclaredType baseType, PsiLanguageType presentationLanguage, DocumentRange range);
    [CompilerGeneratedAttribute]
public ITreeNodePointer`1<IWebFileWithCodeBehind> get_ViewFilePointer();
    [CompilerGeneratedAttribute]
public IExpression get_ArgumentExpression();
    [CompilerGeneratedAttribute]
public IDeclaredType get_SuperType();
    [CompilerGeneratedAttribute]
public IDeclaredType get_BaseType();
    [CompilerGeneratedAttribute]
public IType get_ModelType();
    public virtual bool IsValid();
}
[SolutionComponentAttribute("2")]
public class JetBrains.ReSharper.Daemon.Web.SolutionAnalysis.TagHelpersSolutionAnalysisInvalidator : object {
    private ISolution mySolution;
    private SolutionAnalysisService mySolutionAnalysisService;
    public TagHelpersSolutionAnalysisInvalidator(Lifetime lifetime, ISolution solution, RazorTagHelperCache razorTagHelperCache, SolutionAnalysisService solutionAnalysisService);
    private void InvalidateProjectModules();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Web.SolutionAnalysis.ZoneMarker : object {
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.Web.Stages.Resolve.DelegatingToCodeBehindErrorHandler : object {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.Web.ZoneMarker : object {
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.ConfigSourceErrorHighlighting : XmlErrorHighlighting {
    public IConfigSourceAttribute ConfigSourceAttribute;
    public ConfigSourceErrorHighlighting(IConfigSourceAttribute configSourceAttribute, DocumentRange getDocumentRange);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.DuplicatedAddCodeSubdirectoryHighlighting : XmlErrorHighlighting {
    public IAddCodeSubDirectoryTag AddTag;
    public DuplicatedAddCodeSubdirectoryHighlighting(IAddCodeSubDirectoryTag addTag, DocumentRange documentRange);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.DuplicatedTagMappingHighlighting : XmlErrorHighlighting {
    public IAddTagMappingTag AddTag;
    public DuplicatedTagMappingHighlighting(IAddTagMappingTag addTag, DocumentRange documentRange);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.DuplicatedTypeMemberHighlighting : XmlErrorHighlighting {
    public ITypeMemberDeclaration Declaration;
    public DuplicatedTypeMemberHighlighting(ITypeMemberDeclaration declaration, DocumentRange range);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.EmptyAttributeValueHighlighting : XmlErrorHighlighting {
    public IXmlAttribute Attribute;
    public EmptyAttributeValueHighlighting(IXmlAttribute attribute, DocumentRange documentRange);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.EmptyNameHighlighting : XmlErrorHighlighting {
    public IDeclaration Declaration;
    public EmptyNameHighlighting(IDeclaration declaration, DocumentRange documentRange);
}
public interface JetBrains.ReSharper.Daemon.WebConfig.Highlightings.IWebConfigTypeResolveErrorHighlighting {
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.MissingAttributeHighlighting : XmlErrorHighlighting {
    public IWebConfigTag Tag;
    public string AttributeName;
    public MissingAttributeHighlighting(IWebConfigTag tag, string attributeName, DocumentRange documentRange);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.ModuleQualificationMissingError : XmlErrorHighlighting {
    public IWebConfigTypeAttribute Attribute;
    public ModuleQualificationMissingError(IWebConfigTypeAttribute attribute, DocumentRange documentRange);
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.ModuleQualificationResolve", "Web.Config")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.ModuleQualificationResolveWarning : XmlResolveErrorHighlighting`1<ModuleQualificationReference> {
    public static string SEVERITY_ID;
    public ModuleQualificationResolveWarning(ModuleQualificationReference reference);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.PathIsRelativeErrorHighlighting : XmlHighlighting {
    private IXmlPathAttribute myAttribute;
    private DocumentRange myRange;
    public IXmlPathAttribute Attribute { get; }
    public PathIsRelativeErrorHighlighting(IXmlPathAttribute attribute, DocumentRange range);
    public IXmlPathAttribute get_Attribute();
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.RedundantAddNamespaceTag", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.RedundantAddNamespaceTagHighlighting : XmlHighlighting {
    public static string SEVERITY_ID;
    public IAddNamespaceTag AddTag;
    private DocumentRange myRange;
    public RedundantAddNamespaceTagHighlighting(IAddNamespaceTag tag, DocumentRange range);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.RedundantLocationTag", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.RedundantLocationTagHighlighting : XmlHighlighting {
    public static string SEVERITY_ID;
    public ILocationTag LocationTag;
    private DocumentRange myRange;
    public RedundantLocationTagHighlighting(ILocationTag tag, string text, DocumentRange range);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.TagPrefixRedundand", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.RedundantTagPrefixHighlighting : TagPrefixHighlightingBase {
    public static string SEVERITY_ID;
    public RedundantTagPrefixHighlighting(ITagPrefixHolder holder, string tooltip, DocumentRange documentRange);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.TagPrefixErrorHighlighting : TagPrefixHighlightingBase {
    public TagPrefixErrorHighlighting(ITagPrefixHolder holder, string tooltip, DocumentRange documentRange);
}
[StaticSeverityHighlightingAttribute("1", "JetBrains.ReSharper.Feature.Services.Daemon.HighlightingGroupIds/GutterMarks")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.TagPrefixHidesHighlighting : ClrInheritanceMarkOnGutterBase`1<ITagName> {
    public TagPrefixHidesHighlighting(ITagNameDeclaration inheritor);
    protected virtual RichText FormatLocation(ITagName member);
}
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.TagPrefixHighlightingBase : object {
    public ITagPrefixHolder Holder;
    private string myTooltip;
    private DocumentRange myRange;
    public string ToolTip { get; }
    public string ErrorStripeToolTip { get; }
    public TagPrefixHighlightingBase(ITagPrefixHolder holder, string tooltip, DocumentRange range);
    public virtual string get_ToolTip();
    public virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.TypeMustBePublicErrorHighlighting : XmlResolveErrorHighlighting`1<IWebTypeReference> {
    public TypeMustBePublicErrorHighlighting(IWebTypeReference reference);
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.UnusedAddTag", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.UnusedAddTagHighlighting : XmlHighlighting {
    public static string SEVERITY_ID;
    public IWebConfigTag AddTag;
    public IWebConfigTag RemoveOrClearTag;
    private DocumentRange myRange;
    public UnusedAddTagHighlighting(IWebConfigTag addTag, IWebConfigTag removeTag, DocumentRange range);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.UnusedElementDueToConfigSourceAttribute", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.UnusedElementDueToConfigSourceAttributeHighlighting : XmlHighlighting {
    public static string SEVERITY_ID;
    public ITreeNode UnusedNode;
    private DocumentRange myRange;
    public UnusedElementDueToConfigSourceAttributeHighlighting(ITreeNode unusedNode, DocumentRange range);
    private static string CreateTooltip(ITreeNode unusedNode);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.UnusedRemoveOrClearTag", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.UnusedRemoveOrClearTagHighlighting : XmlHighlighting {
    public static string SEVERITY_ID;
    public IWebConfigTag RemoveTag;
    private DocumentRange myRange;
    public UnusedRemoveOrClearTagHighlighting(IWebConfigTag tag, DocumentRange range);
    public virtual bool IsValid();
    public virtual DocumentRange CalculateRange();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigHighlightingAttributeIdProvider : XmlHighlightingAttributeIdProvider {
    public virtual string GetHighlightingAttributeId(IDeclaredElement declaredElement, bool isDeclaration);
}
[ConfigurableSeverityHighlightingAttribute("Web.IgnoredPath", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigIgnoredPathHighlighting : WebConfigPathErrorHighlighting {
    public static string SEVERITY_ID;
    public WebConfigIgnoredPathHighlighting(WebConfigPathReferenceBase reference);
}
[ConfigurableSeverityHighlightingAttribute("Web.MappedPath", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigMappedPathHighlighting : WebConfigPathErrorHighlighting {
    public static string SEVERITY_ID;
    public WebConfigMappedPathHighlighting(WebConfigPathReferenceBase reference);
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.ModuleNotResolved", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigModuleQualificationResolveError : XmlResolveErrorHighlighting`1<ModuleQualificationReference> {
    public static string SEVERITY_ID;
    public WebConfigModuleQualificationResolveError(ModuleQualificationReference reference);
}
[StaticSeverityHighlightingAttribute("5", "JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups/WebConfigErrors")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigPathErrorHighlighting : XmlResolveErrorHighlighting`1<WebConfigPathReferenceBase> {
    public WebConfigPathErrorHighlighting(WebConfigPathReferenceBase reference);
    protected static string CreateTooltip(WebConfigPathReferenceBase reference);
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.WebConfigPathWarning", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigPathWarningHighlighting : WebConfigPathErrorHighlighting {
    public static string SEVERITY_ID;
    public WebConfigPathWarningHighlighting(WebConfigPathReferenceBase reference);
}
[RegisterConfigurableSeverityAttribute("WebConfig.RedundantLocationTag", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantLocationElement_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "LocationElementDoesNotCorrespondToAny_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.TagPrefixRedundand", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantTagPrefixDeclaration_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "TagPrefixDoesNotDeclareAnyNewAliasAnd_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.ModuleQualificationResolve", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ModuleQualificationRequired_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ModuleQualificationRequiredForTypeResolution_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.RedundantAddNamespaceTag", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantAddNamespaceElement_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AddNamespaceElementIsRedundantBecause_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.UnusedAddTag", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantAddElement_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "AddElementIsRedundantBecauseItIsCleared_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.UnusedElementDueToConfigSourceAttribute", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantElementOrAttributeBecauseOf_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ElementOrAttributeIsNotAppliedBecause_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.UnusedRemoveOrClearTag", "", "", "", "CodeRedundancy", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "RedundantRemoveOrClearElement_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ElementDoesNotClearAnythingAndCanBe_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.WebConfigPathWarning", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ReferencedPathCannotBeFoundInTheWebsite_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "ReferencedPathCannotBeFoundInTheWebsite_Text", "4")]
[RegisterConfigurableSeverityAttribute("WebConfig.TypeNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveSymbol_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveSymbol_Text", "5")]
[RegisterConfigurableSeverityAttribute("WebConfig.ModuleNotResolved", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveModule_Text", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "CannotResolveModule_Text", "5")]
[RegisterConfigurableSeverityAttribute("WebConfig.WrongModule", "", "", "", "CodeSmell", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongModuleConfigurableSeverityTitle", "", "JetBrains.ReSharper.Daemon.Resources.Strings10", "WrongModuleConfigurableSeverityDescription", "5")]
public static class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigStaticHighlightingsGroups : object {
}
public static class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigTypeResolveErrorHighlighting : object {
    public static string SEVERITY_ID;
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.TypeNotResolved", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigTypeResolveErrorHighlighting`1 : XmlResolveErrorHighlighting`1<T> {
    public WebConfigTypeResolveErrorHighlighting`1(T reference);
    public WebConfigTypeResolveErrorHighlighting`1(T reference, string tooltip);
}
[ConfigurableSeverityHighlightingAttribute("WebConfig.WrongModule", "Web.Config")]
public class JetBrains.ReSharper.Daemon.WebConfig.Highlightings.WebConfigWrongModuleErrorHighlighting : XmlResolveErrorHighlighting`1<WebConfigTypeReference> {
    public static string SEVERITY_ID;
    public WebConfigWrongModuleErrorHighlighting(WebConfigTypeReference reference);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.ConfigSourceAnalysis : WebConfigAnalysis {
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.LocationAnalysis : WebConfigAnalysis {
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.NamespacesAnalysis : WebConfigAnalysis {
    private Dictionary`2<VirtualFileSystemPath, Entry> myEntries;
    private Stack`1<VirtualFileSystemPath> myCurrentPath;
    private IWebConfigCompoundData myCompoundData;
    private IProject myProject;
    private IProjectFile myProjectFile;
    private Entry GetEntry(VirtualFileSystemPath path);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void Init(IXmlFile file);
    public virtual void Done(IXmlFile file, IHighlightingConsumer consumer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer highlightings);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.PathReferenceAnalysis : WebConfigAnalysis {
    private OneToListMap`2<string, IAddCodeSubDirectoryTag> myCodeSubDirsTags;
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer highlightings);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.ProfileAnalysis : WebConfigAnalysis {
    private static string PROFILE_NAME;
    private Dictionary`2<string, OneToListMap`2<string, ITypeMemberDeclaration>> myMembers;
    private Stack`1<string> myTypeNames;
    private static ProfileAnalysis();
    private OneToListMap`2<string, ITypeMemberDeclaration> GetMembers(string typeName);
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer consumer);
    private void Clear();
    public virtual void Init(IXmlFile file);
    public virtual void Done(IXmlFile file, IHighlightingConsumer consumer);
    private void ProcessTypeMember(string typeName, ITypeMemberDeclaration declaration, IHighlightingConsumer highlightings);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer highlightings);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.WebConfig.Stages.Resolve.WebConfigNotResolvedErrorHandler : XmlNotResolvedErrorHandler {
    protected virtual IHighlighting CreateNotResolvedErrorHighlighting(IReference reference);
    private static IHighlighting CheckTypeReference(IReference reference);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.WebConfig.Stages.Resolve.WebConfigPathErrorHandler : PathErrorHandler {
    public IEnumerable`1<ResolveErrorType> ErrorTypes { get; }
    public virtual IEnumerable`1<ResolveErrorType> get_ErrorTypes();
    public virtual IHighlighting Run(IReference reference);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.RuntimeAnalysis : WebConfigAnalysis {
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
public class JetBrains.ReSharper.Daemon.WebConfig.Stages.TagChecker : object {
    public static void CheckAttribute(IWebConfigTag tag, IHighlightingConsumer highlightings, string attributeName);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.TagMappingAnalysis : WebConfigAnalysis {
    private TypeKeywordsManager myTypeKeywordsManager;
    private Stack`1<TagMappingData> myTagMappingData;
    public TagMappingAnalysis(TypeKeywordsManager typeKeywordsManager);
    private static bool IsTagMappingTag(ITreeNode element);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer highlightings);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.TagPrefixAnalysis : WebConfigAnalysis {
    private TagPrefixAnalysisData myData;
    public virtual bool InteriorShouldBeProcessed(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void ProcessBeforeInterior(ITreeNode element, IHighlightingConsumer consumer);
    public virtual void Init(IXmlFile file);
    public virtual void Done(IXmlFile file, IHighlightingConsumer consumer);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.TypeAttributeAnalysis : WebConfigAnalysis {
    private TypeKeywordsManager myTypeKeywordsManager;
    public TypeAttributeAnalysis(TypeKeywordsManager typeKeywordsManager);
    public virtual void ProcessAfterInterior(ITreeNode element, IHighlightingConsumer highlightings);
    private void ValidateTypeArguments(IWebConfigTypeAttribute attribute, ParsedTypeInfo typeInfo, IHighlightingConsumer highlightings);
}
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.UsageChecking.WebConfigUsageAnalyzer : UsageAnalyzer {
    public WebConfigUsageAnalyzer(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
    public virtual void ProcessElement(ITreeNode node, IParameters parameters);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.UsageChecking.WebConfigUsageCheckingServices : UsageCheckingServices {
    public WebConfigUsageCheckingServices(IEnumerable`1<IUsageInspectionsSuppressor> suppressors, IEnumerable`1<ICustomUsageAnalysisProcessor> customProcessors);
}
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.WebConfigAnalysis : XmlAnalysis {
    protected IXmlFile myPsiFile;
    public virtual void Init(IXmlFile file);
    public virtual void Done(IXmlFile file, IHighlightingConsumer consumer);
}
[XmlAnalysisProviderAttribute("16")]
[HighlightingSourceAttribute]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.WebConfigAnalysisProvider : object {
    private TypeKeywordsManager myTypeKeywordsManager;
    public bool OnlyPrimary { get; }
    public WebConfigAnalysisProvider(TypeKeywordsManager typeKeywordsManager);
    public sealed virtual IEnumerable`1<IXmlAnalysis> GetAnalyses(IXmlFile file, IDaemonProcess process, IContextBoundSettingsStore settingsStore);
    public sealed virtual bool get_OnlyPrimary();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.Web.WebConfig.WebConfigLanguage", "16")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.WebConfigDaemonBehavior : XmlDaemonBehavior {
    public bool CanShowErrorBox { get; }
    public bool RunInSolutionAnalysis { get; }
    public virtual ErrorStripeRequestWithDescription InitialErrorStripe(IPsiSourceFile sourceFile);
    public virtual bool get_CanShowErrorBox();
    public virtual bool get_RunInSolutionAnalysis();
}
[DaemonStageAttribute("0")]
internal class JetBrains.ReSharper.Daemon.WebConfig.Stages.WebConfigDaemonStage : WebConfigDaemonStageBase {
    [NotNullAttribute]
private ResolveHighlighterRegistrar myResolveHighlighterRegistrar;
    [NotNullAttribute]
private ElementProblemAnalyzerRegistrar myElementProblemAnalyzerRegistrar;
    public WebConfigDaemonStage(ResolveHighlighterRegistrar resolveHighlighterRegistrar, ElementProblemAnalyzerRegistrar elementProblemAnalyzerRegistrar);
    public virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IWebConfigFile file);
}
internal abstract class JetBrains.ReSharper.Daemon.WebConfig.Stages.WebConfigDaemonStageBase : object {
    public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    public abstract virtual IDaemonStageProcess CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, IWebConfigFile file);
}
public class JetBrains.ReSharper.Daemon.WebConfig.Util.TagPrefixAnalysisData : object {
    private Dictionary`2<VirtualFileSystemPath, Entry> myEntries;
    public Entry GetEntry(VirtualFileSystemPath path);
}
[HighlightingSourceAttribute]
public static class JetBrains.ReSharper.Daemon.WebConfig.Util.TagPrefixAnalysisUtil : object {
    public static TagPrefixAnalysisData Init(IFile file);
    private static void UpdateData(ITagPrefixHolder holder, TagPrefixAnalysisData data, IFile file, IHighlightingConsumer highlightings);
    public static void ProcessHolder(ITagPrefixHolder holder, TagPrefixAnalysisData data, IHighlightingConsumer highlightings);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.WebConfig.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Daemon.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
