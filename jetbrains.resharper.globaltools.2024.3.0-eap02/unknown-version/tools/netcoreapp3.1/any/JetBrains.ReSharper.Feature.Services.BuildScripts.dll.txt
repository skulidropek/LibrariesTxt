internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.BuildScriptAttributeAspect`1 : XmlTagAspects`1<TXmlTag> {
    [CanBeNullAttribute]
private BuildScriptAttributeBase myAttribute;
    [CompilerGeneratedAttribute]
private RichText <Text>k__BackingField;
    [CanBeNullAttribute]
public RichText Text { get; public set; }
    public BuildScriptAttributeAspect`1(TXmlTag tag, IconId image, BuildScriptAttributeBase attribute);
    [CompilerGeneratedAttribute]
public RichText get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(RichText value);
    public virtual DocumentRange[] GetNavigationRanges();
    public virtual RichText GetXmlTagPresentationText(TXmlTag tag, IXmlAttribute keyAttribute);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.BuildScriptDeclarationElement`1 : XmlDeclarationTagCodeStructureElement`1<T> {
    public BuildScriptDeclarationElement`1(CodeStructureElement parent, T tag);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.BuildScriptElement`1 : XmlCodeStructureElement`1<T> {
    public BuildScriptElement`1(CodeStructureElement parent, T tag, IconId imageName, bool showFirstAttributeAsKey);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.BuildScriptRootElement : XmlCodeStructureRootElement {
    public BuildScriptRootElement(IXmlFile file);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.BuildScriptTextAspect`1 : XmlTagAspects`1<TXmlTag> {
    [CanBeNullAttribute]
private RichText myText;
    public BuildScriptTextAspect`1(TXmlTag tag, IconId image, RichText text);
    public virtual RichText GetXmlTagPresentationText(TXmlTag tag, IXmlAttribute keyAttribute);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildAttributedItemGroupCodeStructureElement : BuildScriptElement`1<MSBuildOutputTag> {
    private MSBuildAttribute myAttribute;
    private BuildScriptAttributeAspect`1<MSBuildOutputTag> myAspect;
    public MSBuildAttributedItemGroupCodeStructureElement(CodeStructureElement parent, MSBuildOutputTag outputTag);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildAttributedPropertyCodeStructureElement : BuildScriptElement`1<MSBuildOutputTag> {
    private MSBuildAttribute myAttribute;
    private BuildScriptAttributeAspect`1<MSBuildOutputTag> myAspect;
    public MSBuildAttributedPropertyCodeStructureElement(CodeStructureElement parent, MSBuildOutputTag outputTag);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.BuildScripts.MSBuild.MSBuildLanguage", "16")]
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildCodeStructureProvider : XmlCodeStructureProvider {
    protected virtual CodeStructureRootElement CreateRootElement(IXmlFile file);
    protected virtual void CreateElement(CodeStructureElement parent, IXmlTag xmlTag);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildItemGroupCodeStructureElement : BuildScriptElement`1<MSBuildItemGroupDeclaration> {
    public MSBuildItemGroupCodeStructureElement(CodeStructureElement parent, MSBuildItemGroupDeclaration itemGroup);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildItemGroupsCodeStructureElement : BuildScriptElement`1<MSBuildItemGroupTag> {
    private BuildScriptTextAspect`1<MSBuildItemGroupTag> myAspect;
    public MSBuildItemGroupsCodeStructureElement(CodeStructureElement parent, MSBuildItemGroupTag itemGroup);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildProjectCodeStructureElement : BuildScriptElement`1<MSBuildProjectTag> {
    private BuildScriptTextAspect`1<MSBuildProjectTag> myAspect;
    public MSBuildProjectCodeStructureElement(CodeStructureElement parent, MSBuildProjectTag project);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildPropertyCodeStructureElement : BuildScriptElement`1<MSBuildPropertyDeclaration> {
    public MSBuildPropertyCodeStructureElement(CodeStructureElement parent, MSBuildPropertyDeclaration tag);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildPropertyGroupCodeStructureElement : BuildScriptElement`1<MSBuildPropertyGroupTag> {
    private BuildScriptTextAspect`1<MSBuildPropertyGroupTag> myAspect;
    public MSBuildPropertyGroupCodeStructureElement(CodeStructureElement parent, MSBuildPropertyGroupTag propertyGroupTag);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildTargetCodeStructureElement : BuildScriptElement`1<MSBuildTargetTag> {
    private BuildScriptTextAspect`1<MSBuildTargetTag> myAspect;
    public MSBuildTargetCodeStructureElement(CodeStructureElement parent, MSBuildTargetTag tag);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildTaskCodeStructureElement : BuildScriptElement`1<MSBuildTaskTag> {
    public MSBuildTaskCodeStructureElement(CodeStructureElement parent, MSBuildTaskTag tag);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.MSBuild.MSBuildUsingTaskCodeStructureElement : BuildScriptElement`1<MSBuildUsingTaskTag> {
    private BuildScriptTextAspect`1<MSBuildUsingTaskTag> myAspect;
    public MSBuildUsingTaskCodeStructureElement(CodeStructureElement parent, MSBuildUsingTaskTag usingTask);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.BuildScripts.NAnt.NAntLanguage", "16")]
public class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.NAnt.NAntCodeStructureProvider : XmlCodeStructureProvider {
    protected virtual CodeStructureRootElement CreateRootElement(IXmlFile file);
    protected virtual void CreateElement(CodeStructureElement parent, IXmlTag xmlTag);
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.NAnt.NAntProjectCodeStructureElement : BuildScriptElement`1<NAntProjectTag> {
    private NAntAttribute myAttribute;
    private BuildScriptAttributeAspect`1<NAntProjectTag> myAspect;
    public NAntProjectCodeStructureElement(CodeStructureElement parent, NAntProjectTag projectTag);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.NAnt.NAntPropertyCodeStructureElement : BuildScriptElement`1<NAntPropertyTag> {
    private CodeStructureDeclarationAspects myAspect;
    private BuildScriptTextAspect`1<NAntPropertyTag> myBuildAspect;
    public NAntPropertyCodeStructureElement(CodeStructureElement parent, NAntPropertyTag property);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.CodeStructure.NAnt.NAntTargetCodeStructureElement : BuildScriptElement`1<NAntTargetTag> {
    private CodeStructureDeclarationAspects myAspect;
    private BuildScriptTextAspect`1<NAntTargetTag> myBuildAspect;
    public NAntTargetCodeStructureElement(CodeStructureElement parent, NAntTargetTag target);
    public virtual IFileStructureAspect GetFileStructureAspect();
    public virtual IGotoFileMemberAspect GetGotoMemberAspect();
    public virtual IMemberNavigationAspect GetMemberNavigationAspect();
}
internal class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.BuildScriptDotSelection : XmlDotSelection {
    private BuildScriptEmbracingConstructProvider myProvider;
    public BuildScriptDotSelection(BuildScriptEmbracingConstructProvider provider, IXmlFile node, TreeOffset offset, bool selectBetterToken, bool useCamelHumps, bool appendInjectedPsi);
    protected virtual ISelectedRange CreateTokenPartSelection(ITokenNode tokenNode, TreeTextRange treeTextRange);
}
public abstract class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.BuildScriptEmbracingConstructProvider : XmlSelectEmbracingConstructProvider {
    protected BuildScriptEmbracingConstructProvider(ISettingsStore settingsStore);
    public abstract virtual ISelectedRange TryExtendToEntityUsage(IXmlFile fileNode, ITreeNode token, int offsetInToken, string tokenText, bool fromDotSelection);
}
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.BuildScriptTokenPartSelection : XmlTokenPartSelection {
    private BuildScriptEmbracingConstructProvider myProvider;
    public ISelectedRange Parent { get; }
    public BuildScriptTokenPartSelection(BuildScriptEmbracingConstructProvider provider, IXmlFile node, TreeTextRange range, ITokenNode tokenNode);
    public virtual ISelectedRange get_Parent();
}
[LanguageAttribute("JetBrains.ReSharper.Psi.BuildScripts.MSBuild.MSBuildLanguage", "16")]
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.MSBuildScriptEmbracingConstructProvider : BuildScriptEmbracingConstructProvider {
    public MSBuildScriptEmbracingConstructProvider(ISettingsStore settingsStore);
    public virtual bool IsAvailable(IPsiSourceFile file);
    public virtual ISelectedRange GetSelectedRange(IPsiSourceFile sourceFile, DocumentRange documentRange);
    public virtual ISelectedRange TryExtendToEntityUsage(IXmlFile fileNode, ITreeNode token, int offsetInToken, string tokenText, bool fromDotSelection);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.BuildScripts.NAnt.NAntLanguage", "16")]
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.NAntScriptEmbracingConstructProvider : BuildScriptEmbracingConstructProvider {
    public NAntScriptEmbracingConstructProvider(ISettingsStore settingsStore);
    public virtual bool IsAvailable(IPsiSourceFile sourceFile);
    public virtual ISelectedRange GetSelectedRange(IPsiSourceFile sourceFile, DocumentRange documentRange);
    public virtual ISelectedRange TryExtendToEntityUsage(IXmlFile fileNode, ITreeNode token, int offsetInToken, string tokenText, bool fromDotSelection);
}
public abstract class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.SelectionBase : object {
    [CompilerGeneratedAttribute]
private DocumentRange <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private IXmlFile <FileNode>k__BackingField;
    public DocumentRange Range { get; }
    public IXmlFile FileNode { get; }
    public ISelectedRange Parent { get; }
    public ExtendToTheWholeLinePolicy ExtendToWholeLine { get; }
    protected SelectionBase(IXmlFile node, DocumentRange range);
    [CompilerGeneratedAttribute]
public sealed virtual DocumentRange get_Range();
    [CompilerGeneratedAttribute]
public IXmlFile get_FileNode();
    public abstract virtual ISelectedRange get_Parent();
    public sealed virtual ExtendToTheWholeLinePolicy get_ExtendToWholeLine();
    public abstract virtual ITreeRange TryGetTreeRange();
}
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.TokenComparer : object {
    public sealed virtual int Compare(IXmlToken x, IXmlToken y);
}
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.TokenSelection : SelectionBase {
    private IXmlToken mySelectedToken;
    public ISelectedRange Parent { get; }
    public TokenSelection(IXmlFile node, TreeTextRange range, IXmlToken token);
    public virtual ISelectedRange get_Parent();
    public virtual ITreeRange TryGetTreeRange();
}
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.TokenSequenceSelection : SelectionBase {
    private IXmlToken[] myTokens;
    public ISelectedRange Parent { get; }
    public TokenSequenceSelection(IXmlFile node, TreeTextRange range, IXmlToken[] tokens);
    public virtual ISelectedRange get_Parent();
    public virtual ITreeRange TryGetTreeRange();
}
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.TreeNodeSelection : SelectionBase {
    private CompositeElement mySelectedElement;
    public ISelectedRange Parent { get; }
    public TreeNodeSelection(IXmlFile node, TreeTextRange range, CompositeElement selectedElement);
    public virtual ISelectedRange get_Parent();
    public virtual ITreeRange TryGetTreeRange();
    public static ISelectedRange GetTreeNodeSequenceRange(ITreeNode selectedElement, IXmlFile fileNode);
}
public class JetBrains.ReSharper.Feature.Services.BuildScripts.SelectEmbracingConstruct.TreeNodeSequenceSelection : SelectionBase {
    private CompositeElement[] mySiblings;
    public ISelectedRange Parent { get; }
    public TreeNodeSequenceSelection(IXmlFile node, TreeTextRange range, CompositeElement[] siblings);
    public virtual ISelectedRange get_Parent();
    public virtual ITreeRange TryGetTreeRange();
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Feature.Services.BuildScripts.TypingAssistance.MSBuildTypingAssist : TypingAssistLanguageBase`1<XmlLanguage> {
    public MSBuildTypingAssist(Lifetime lifetime, TypingAssistDependencies dependencies);
    public sealed virtual bool QuickCheckAvailability(ITextControl textControl, IPsiSourceFile projectFile);
    protected virtual bool IsSupported(ITextControl textControl);
    private bool HandleClosingParenthTyping(ITypingContext typingContext);
    private bool HandleOpenParenthTyping(ITypingContext typingContext);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Feature.Services.BuildScripts.TypingAssistance.ZoneMarker : object {
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Feature.Services.BuildScripts.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
