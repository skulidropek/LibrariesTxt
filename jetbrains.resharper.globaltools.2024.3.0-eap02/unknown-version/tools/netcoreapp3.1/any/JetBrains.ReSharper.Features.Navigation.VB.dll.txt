[ExtensionAttribute]
[StandardModuleAttribute]
public class JetBrains.ReSharper.Features.Navigation.VB.ContextNavigation.VBContextNavigationUtil : object {
    [CanBeNullAttribute]
[ExtensionAttribute]
internal static TTreeNode GetSelectedTreeNode(IDataContext dataContext);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.VB.VBLanguage", "16")]
public class JetBrains.ReSharper.Features.Navigation.VB.ContextNavigation.VBExitsFinder : object {
    public sealed virtual override IEnumerable`1<ITreeNode> GetReachableExitNodes(ITreeNode contextNode);
    public sealed virtual override IEnumerable`1<DocumentRange> GetReachableExitKeywordsRanges(ITreeNode contextNode);
    private static Nullable`1<DocumentRange> ExitNodeToKeywordRange(ITreeNode treeNode);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.VB.ContextNavigation.VBExtensionMethodsContextSearch : object {
    public sealed virtual override bool IsAvailable(IDataContext dataContext);
    public sealed virtual override bool IsContextApplicable(IDataContext dataContext);
    public sealed virtual override ExtensionMethodsSearchRequest GetExtensionMethodsRequest(IDataContext dataContext);
    public IType GetTypeOutOfSelectedElement(IDataContext dataContext);
    public bool IsSelectedElementAssociatedWithType(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.VB.ContextNavigation.VBFunctionExitsContextSearch : object {
    public sealed virtual override bool IsAvailable(IDataContext dataContext);
    public sealed virtual override bool IsContextApplicable(IDataContext dataContext);
    public sealed virtual override IEnumerable`1<DocumentRange> SearchTargets(IDataContext dataContext);
    private static bool GetFunctionBody(IDataContext dataContext);
    private static bool InsideName(DocumentOffset documentOffset, IDeclaration declaration);
    private static bool InsideClosingStatement(DocumentOffset documentOffset, DocumentRange closingStatementRange);
    private static bool InsideExitStatement(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.VB.ContextNavigation.VBParameterDeclarationContextSearch : ParameterDeclarationContextSearchBase {
    public sealed virtual override bool IsAvailable(IDataContext dataContext);
    [NotNullAttribute]
public sealed virtual override IEnumerable`1<IDeclaredElement> SearchTargets(IDataContext dataContext);
    public sealed virtual override bool IsContextApplicable(IDataContext dataContext);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.VB.ContextNavigation.VBSubstitutionsContextSearch : object {
    public sealed virtual override bool IsAvailable(IDataContext dataContext);
    public sealed virtual override bool IsContextApplicable(IDataContext dataContext);
    public sealed virtual override SearchSubstitutionRequest GetSubstitutionRequest(IDataContext dataContext);
    [CanBeNullAttribute]
private static ITypeParametersOwner GetTypeParametersOwner(ITypeArgumentList argumentList);
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.VB.Navigation.VBGotoClassMemberProvider : ClrGotoClassMemberProviderBase {
    protected virtual bool IsApplicable(IPsiSourceFile primarySourceFile, FileMemberNavigationScope fileMemberScope, GotoContext gotoContext, IIdentifierMatcher matcher);
}
[SolutionComponentAttribute("10")]
public class JetBrains.ReSharper.Features.Navigation.VB.Navigation.VbOccurrenceKindProvider : object {
    public sealed virtual override ICollection`1<OccurrenceKind> GetOccurrenceKinds(IOccurrence occurrence);
    public sealed virtual override IEnumerable`1<OccurrenceKind> GetAllPossibleOccurrenceKinds();
}
[ShellFeaturePartAttribute("16")]
public class JetBrains.ReSharper.Features.Navigation.VB.Navigation.VBSpecificGotoFileMemberProvider : ClrSpecificGotoFileMemberProvider {
    public virtual bool IsApplicable(INavigationScope scope, GotoContext gotoContext, IIdentifierMatcher matcher);
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public class JetBrains.ReSharper.Features.Navigation.VB.Resources.Strings : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string CurrentFile_Text { get; }
    public static string VBAnonymousTypeFinder_GetTitle { get; }
    public static string Solution { get; }
    public static string InvalidElement { get; }
    public static string UsagesOf { get; }
    public static string CurrrentFile { get; }
    public static string InvalidImportDirective { get; }
    public static string ReferencesAvailableVia { get; }
    private static Strings();
    public static JetResourceManager get_ResourceManager();
    public static string Choice(string format, Object[] args);
    public static string get_CurrentFile_Text();
    public static string get_VBAnonymousTypeFinder_GetTitle();
    public static string get_Solution();
    public static string get_InvalidElement();
    public static string get_UsagesOf();
    public static string get_CurrrentFile();
    public static string get_InvalidImportDirective();
    public static string get_ReferencesAvailableVia();
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.VB.Search.VBAnonymousTypeFinder : object {
    public ReferencePreferenceKind Kind { get; }
    public PreferLocationStyle LocationStyle { get; }
    public sealed virtual override object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    private object TryGetTargetFromAnonymousObjectCreation(ITreeNode element, ITreeNode shiftedElement);
    public sealed virtual override void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    public sealed virtual override string Present(object target);
    public sealed virtual override string GetTitle();
    public sealed virtual override ReferencePreferenceKind get_Kind();
    public sealed virtual override ISearchDomainContext GetSearchDomainContext(object target);
    public sealed virtual override IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual override PreferLocationStyle get_LocationStyle();
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.VB.Search.VBImplicitLocalVariableFinder : object {
    public PreferLocationStyle LocationStyle { get; }
    public ReferencePreferenceKind Kind { get; }
    public sealed virtual override object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    public sealed virtual override void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    public sealed virtual override string Present(object target);
    public sealed virtual override string GetTitle();
    public sealed virtual override IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual override PreferLocationStyle get_LocationStyle();
    public sealed virtual override ReferencePreferenceKind get_Kind();
    public sealed virtual override ISearchDomainContext GetSearchDomainContext(object target);
}
[SpecialElementFinderAttribute("16")]
internal class JetBrains.ReSharper.Features.Navigation.VB.Search.VBImportDirectiveFinder : object {
    public PreferLocationStyle LocationStyle { get; }
    public ReferencePreferenceKind Kind { get; }
    public sealed virtual override object GetSearchTarget(IFile file, DocumentRange range, DocumentOffset caretOffset);
    public sealed virtual override void FindOccurrences(object target, IFindResultConsumer`1<IOccurrence> consumer, IProgressIndicator progressIndicator, ISearchDomain scopeDomain);
    public sealed virtual override string Present(object target);
    public sealed virtual override string GetTitle();
    public sealed virtual override IEnumerable`1<DocumentRange> GetTargetRanges(object target, IProjectFile file);
    public sealed virtual override PreferLocationStyle get_LocationStyle();
    public sealed virtual override ReferencePreferenceKind get_Kind();
    public sealed virtual override ISearchDomainContext GetSearchDomainContext(object target);
}
[LanguageAttribute("JetBrains.ReSharper.Psi.VB.VBLanguage", "16")]
public class JetBrains.ReSharper.Features.Navigation.VB.VBReferencedCodeSearchHelper : ReferencedCodeSearchHelperBase {
    public sealed virtual override bool RemoveNamespaceImport(ITreeNode importNamespaceNode);
    public sealed virtual override ICollection`1<NamespaceImportData> GetNamespaceImportsList(IFile file);
    public sealed virtual override ICollection`1<Pair`2<IReference, IDeclaredElement>> GetUpdatedTargets(IReference reference, IDeclaredElement target);
    private IReference GetReference(IImportClause importClause);
    private INamespace GetTargetNamespace(IImportClause importClause);
    public sealed virtual override IDeclaredElement ProvideDeclaredElementsFromResolve(IReference reference, IResolveResult resolveResult);
    [CompilerGeneratedAttribute]
private NamespaceImportData _Lambda$__2-0(KeyValuePair`2<IImportClause, IList`1<IReference>> pair);
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Features.Navigation.VB.ZoneMarker : object {
}
