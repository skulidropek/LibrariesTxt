public class JetBrains.ReSharper.Intentions.Xml.AssemblyReferenceClass_PsiFeaturesItentionsXml : AssemblyReferenceClass_PsiFeaturesNewRefactorings {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.CDataToTextContextAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    public string Text { get; }
    public CDataToTextContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.ConvertAttributeToTagContextAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    public string Text { get; }
    public ConvertAttributeToTagContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.ConvertTagToAttributeContextAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    public string Text { get; }
    public ConvertTagToAttributeContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.ExpandEmptyTagContextAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    public string Text { get; }
    public ExpandEmptyTagContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.FixModuleQualificationContextAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    [NullableAttribute("2")]
private string myText;
    public static Key`1<JetHashSet`1<IXmlAttribute>> KEY;
    public string Text { get; }
    public FixModuleQualificationContextAction(XmlContextActionDataProvider provider);
    private static FixModuleQualificationContextAction();
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    [NullableContextAttribute("2")]
private IXmlAttributeValue GetAttributeValue(ITypeElement& typeElement);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
    [CompilerGeneratedAttribute]
private void <ExecutePsiTransaction>b__8_0(ITextControl textControl);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.MakeEmptyTagContextAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    public string Text { get; }
    public MakeEmptyTagContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.RemoveAllTagsAndKeepChildrenContextAction : RemoveTagAndKeepChildrenContextAction {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<IXmlTag> myTagsToRemove;
    public string Text { get; }
    public RemoveAllTagsAndKeepChildrenContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    private IList`1<IXmlTag> FindTags();
    private static void FindTags(IXmlTagContainer container, string fullTagName, List`1<IXmlTag> consumer);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.RemoveAttributeAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    public string Text { get; }
    public RemoveAttributeAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder cache);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.RemoveTagAndKeepChildrenContextAction : ModernContextActionBase {
    protected XmlContextActionDataProvider Provider;
    public string Text { get; }
    public RemoveTagAndKeepChildrenContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    [NullableContextAttribute("2")]
protected IXmlTag GetTagToRemove();
    [NullableContextAttribute("2")]
private IXmlTag FindTagByContext();
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
    protected static void RemoveTag(IXmlTag tagToRemove);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.ReplaceAllAttributesContextAction : ContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    [NullableAttribute("2")]
private string myNewName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IXmlAttribute> myAttributesToReplace;
    public string Text { get; }
    public ReplaceAllAttributesContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    [NullableContextAttribute("2")]
private IXmlAttribute GetAttributeToReplace();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    private static void GetData(IXmlTagContainer tagContainer, string tagName, string attributeName, List`1<IXmlAttribute> attributeInTheSameTag, List`1<IXmlAttribute> allAttributes, JetHashSet`1<string> suggestedNames);
    protected virtual Action`1<ITextControl> ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
    protected virtual void ExecuteBeforeProgressAndTransaction(ISolution solution);
    protected virtual Action`1<ITextControl> ExecuteAfterPsiTransaction(ISolution solution, IProjectModelTransactionCookie cookie, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.ReplaceAllTagsContextAction : ReplaceTagContextAction {
    public string Text { get; }
    public ReplaceAllTagsContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    private static void GetAllTags(IXmlTagContainer tagContainer, string tagName, List`1<IXmlTag> tags);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[ActionHandler("JetBrains.ReSharper.Refactorings.Rename.RenameAction")]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.ReplaceTagAsRenameAction : ContextActionAsActionHandler`1<ReplaceTagContextAction> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.ReplaceTagContextAction : ModernContextActionBase {
    protected XmlContextActionDataProvider Provider;
    public string Text { get; }
    public ReplaceTagContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    [NullableContextAttribute("2")]
protected IXmlTag GetTagToReplace(IXmlIdentifier& name);
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ContextActionAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ContextActions.TextToCDataContextAction : ModernContextActionBase {
    [CompilerGeneratedAttribute]
private XmlContextActionDataProvider <provider>P;
    public string Text { get; }
    public TextToCDataContextAction(XmlContextActionDataProvider provider);
    public virtual string get_Text();
    protected virtual IBulbActionCommand ExecutePsiTransaction(ISolution solution, IProgressIndicator progress);
    public virtual bool IsAvailable(IUserDataHolder dataHolder);
    private static TreeTextRange GetTextRange(IXmlToken token, XmlContextActionDataProvider context, String& text);
    [CompilerGeneratedAttribute]
private IBulbActionCommand <ExecutePsiTransaction>b__4_0(ISolution _, ITextControl textControl, IProgressIndicator _);
}
[ContextActionGroupAttribute]
public static class JetBrains.ReSharper.Intentions.Xml.ContextActions.XmlContextActions : object {
    public static string GroupID;
}
internal class JetBrains.ReSharper.Intentions.Xml.DisableWarning.DisableAndRestoreWarningByCommentsAction : DisableByCommentWarningActionBase {
    public string Text { get; }
    protected string OpeningText { get; }
    protected string ClosingText { get; }
    public DisableAndRestoreWarningByCommentsAction(DocumentRange highlightingRange, string severityId);
    public virtual string get_Text();
    protected virtual string get_OpeningText();
    protected virtual string get_ClosingText();
}
public abstract class JetBrains.ReSharper.Intentions.Xml.DisableWarning.DisableByCommentWarningActionBase : object {
    private DocumentRange myHighlightingRange;
    [NotNullAttribute]
protected string SeverityId;
    public string Text { get; }
    [NotNullAttribute]
protected string OpeningText { get; }
    [CanBeNullAttribute]
protected string ClosingText { get; }
    protected DisableByCommentWarningActionBase(DocumentRange highlightingRange, string severityId);
    public abstract virtual string get_Text();
    protected abstract virtual string get_OpeningText();
    protected abstract virtual string get_ClosingText();
    public sealed virtual void Execute(ISolution solution, ITextControl textControl);
}
[CustomHighlightingActionProviderAttribute("JetBrains.ProjectModel.XmlProjectFileType")]
public class JetBrains.ReSharper.Intentions.Xml.DisableWarning.DisableByCommentWarningActionProvider : object {
    [IteratorStateMachineAttribute("JetBrains.ReSharper.Intentions.Xml.DisableWarning.DisableByCommentWarningActionProvider/<GetActions>d__0")]
public sealed virtual IEnumerable`1<IntentionAction> GetActions(IHighlighting highlighting, DocumentRange highlightingRange, IPsiSourceFile sourceFile, IAnchor configureAnchor);
}
internal class JetBrains.ReSharper.Intentions.Xml.DisableWarning.DisableOnceWarningByComment : DisableByCommentWarningActionBase {
    public string Text { get; }
    protected string OpeningText { get; }
    protected string ClosingText { get; }
    public DisableOnceWarningByComment(DocumentRange highlightingRange, string severityId);
    public virtual string get_Text();
    protected virtual string get_OpeningText();
    protected virtual string get_ClosingText();
}
[QuickFixAttribute]
public class JetBrains.ReSharper.Intentions.Xml.QuickFixes.CloseTagsQuickFix : object {
    private List`1<IXmlTag> myOpenTags;
    public IBulbAction[] Items { get; }
    public CloseTagsQuickFix(XmlTagIsNotClosedHighlighting2 highlighting);
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    public IBulbAction[] get_Items();
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
}
[QuickFixAttribute]
public class JetBrains.ReSharper.Intentions.Xml.QuickFixes.MisplacedCommentQuickFix : object {
    private IXmlComment myComment;
    public IBulbAction[] Items { get; }
    public MisplacedCommentQuickFix(XmlMisplacedCommentErrorHighlighting highlighting);
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    public IBulbAction[] get_Items();
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
    private static void DeleteComment(IXmlComment comment);
}
[QuickFixAttribute]
public class JetBrains.ReSharper.Intentions.Xml.QuickFixes.TagFooterFix : object {
    private ITreeNode myInvalidFooter;
    public IBulbAction[] Items { get; }
    public TagFooterFix(XmlTagFooterErrorHighlighting highlighting);
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    public IBulbAction[] get_Items();
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
}
[QuickFixAttribute]
public class JetBrains.ReSharper.Intentions.Xml.QuickFixes.XmlPIQuickFix : object {
    private IXmlProcessingInstruction myXmlPI;
    public IBulbAction[] Items { get; }
    public string Text { get; }
    public XmlPIQuickFix(XmlPIErrorHighlighting highlighting);
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    public IBulbAction[] get_Items();
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
    public sealed virtual string get_Text();
    public sealed virtual void Execute(ISolution solution, ITextControl textControl);
}
[QuickFixAttribute]
public class JetBrains.ReSharper.Intentions.Xml.QuickFixes.XmlSyntaxErrorQuickFix : object {
    private IXmlSyntaxErrorElement myErrorElement;
    public IBulbAction[] Items { get; }
    public XmlSyntaxErrorQuickFix(XmlSyntaxErrorHighlighting errorHighlighting);
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    public IBulbAction[] get_Items();
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
}
[QuickFixAttribute]
public class JetBrains.ReSharper.Intentions.Xml.QuickFixes.XmlTagIsNotClosedQuickFix : object {
    [NotNullAttribute]
private IXmlTag myTag;
    public XmlTagIsNotClosedQuickFix(XmlTagIsNotClosedHighlighting highlighting);
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public static class JetBrains.ReSharper.Intentions.Xml.Resources.Strings : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string CDataToText_Text { get; }
    public static string ToNestedElement_Text { get; }
    public static string ToAttribute_Text { get; }
    public static string ExpandEmptyTag_Text { get; }
    public static string AddModuleQualification_Text { get; }
    public static string FixModuleQualification_Text { get; }
    public static string CollapseEmptyTag_Text { get; }
    public static string RemoveAttribute_Text { get; }
    public static string RemoveTag_Text { get; }
    public static string RemoveTagAndPromoteChild_Text { get; }
    public static string RemoveTagAndPromoteChilds_Text { get; }
    public static string ReplaceAllAttributes_Text { get; }
    public static string ReplaceTag_Text { get; }
    public static string TextToCData_Text { get; }
    public static string AddClosingTagsToAllOpenElements_Text { get; }
    public static string AddClosingTagTo__Text { get; }
    public static string MoveComment_Text { get; }
    public static string DeleteComment_Text { get; }
    public static string RemoveClosingTag_Text { get; }
    public static string AddClosingTagFor__Text { get; }
    public static string FixXMLProcessingInstruction_Text { get; }
    public static string Insert__Text { get; }
    public static string MakeElement_Empty_Text { get; }
    public static string InsertClosingTagTo__Text { get; }
    public static string RemoveAll_TagsAndPromoteChildren_Text { get; }
    public static string ReplaceAllTags_Text { get; }
    public static string DisableAndRestoreWithComments_Text { get; }
    public static string DisableOnceWithComment_Text { get; }
    public static string AddModuleQualificationContextAction_Description { get; }
    public static string AddModuleQualificationContextAction_Name { get; }
    public static string CollapseEmptyTagContextAction_Description { get; }
    public static string CollapseEmptyTagContextAction_Name { get; }
    public static string ConvertAttributeToNestedElementContextAction_Description { get; }
    public static string ConvertAttributeToNestedElementContextAction_Name { get; }
    public static string ConvertCDataToTextContextAction_Description { get; }
    public static string ConvertCDataToTextContextAction_Name { get; }
    public static string ConvertTagToAttributeContextAction_Description { get; }
    public static string ConvertTagToAttributeContextAction_Name { get; }
    public static string ExpandEmptyTagContextAction_Description { get; }
    public static string ExpandEmptyTagContextAction_Name { get; }
    public static string RemoveAllTagsWithSpecifiedNameAndPromoteTheirChildrenContextAction_Description { get; }
    public static string RemoveAllTagsWithSpecifiedNameAndPromoteTheirChildrenContextAction_Name { get; }
    public static string RemoveTagAndPromoteItsChildrenContextAction_Description { get; }
    public static string RemoveTagAndPromoteItsChildrenContextAction_Name { get; }
    public static string RemoveTagAttributeContextAction_Description { get; }
    public static string RemoveTagAttributeContextAction_Name { get; }
    public static string ReplaceAllAttributesContextAction_Description { get; }
    public static string ReplaceAllAttributesContextAction_Name { get; }
    public static string ReplaceAllTagsContextAction_Description { get; }
    public static string ReplaceAllTagsContextAction_Name { get; }
    public static string ReplaceTagContextAction_Description { get; }
    public static string ReplaceTagContextAction_Name { get; }
    public static string ConvertTextToCDataContextAction_Description { get; }
    public static string ConvertTextToCDataContextAction_Name { get; }
    private static Strings();
    public static JetResourceManager get_ResourceManager();
    public static string Choice(string format, Object[] args);
    public static string get_CDataToText_Text();
    public static string get_ToNestedElement_Text();
    public static string get_ToAttribute_Text();
    public static string get_ExpandEmptyTag_Text();
    public static string get_AddModuleQualification_Text();
    public static string get_FixModuleQualification_Text();
    public static string get_CollapseEmptyTag_Text();
    public static string get_RemoveAttribute_Text();
    public static string get_RemoveTag_Text();
    public static string get_RemoveTagAndPromoteChild_Text();
    public static string get_RemoveTagAndPromoteChilds_Text();
    public static string get_ReplaceAllAttributes_Text();
    public static string get_ReplaceTag_Text();
    public static string get_TextToCData_Text();
    public static string get_AddClosingTagsToAllOpenElements_Text();
    public static string get_AddClosingTagTo__Text();
    public static string get_MoveComment_Text();
    public static string get_DeleteComment_Text();
    public static string get_RemoveClosingTag_Text();
    public static string get_AddClosingTagFor__Text();
    public static string get_FixXMLProcessingInstruction_Text();
    public static string get_Insert__Text();
    public static string get_MakeElement_Empty_Text();
    public static string get_InsertClosingTagTo__Text();
    public static string get_RemoveAll_TagsAndPromoteChildren_Text();
    public static string get_ReplaceAllTags_Text();
    public static string get_DisableAndRestoreWithComments_Text();
    public static string get_DisableOnceWithComment_Text();
    public static string get_AddModuleQualificationContextAction_Description();
    public static string get_AddModuleQualificationContextAction_Name();
    public static string get_CollapseEmptyTagContextAction_Description();
    public static string get_CollapseEmptyTagContextAction_Name();
    public static string get_ConvertAttributeToNestedElementContextAction_Description();
    public static string get_ConvertAttributeToNestedElementContextAction_Name();
    public static string get_ConvertCDataToTextContextAction_Description();
    public static string get_ConvertCDataToTextContextAction_Name();
    public static string get_ConvertTagToAttributeContextAction_Description();
    public static string get_ConvertTagToAttributeContextAction_Name();
    public static string get_ExpandEmptyTagContextAction_Description();
    public static string get_ExpandEmptyTagContextAction_Name();
    public static string get_RemoveAllTagsWithSpecifiedNameAndPromoteTheirChildrenContextAction_Description();
    public static string get_RemoveAllTagsWithSpecifiedNameAndPromoteTheirChildrenContextAction_Name();
    public static string get_RemoveTagAndPromoteItsChildrenContextAction_Description();
    public static string get_RemoveTagAndPromoteItsChildrenContextAction_Name();
    public static string get_RemoveTagAttributeContextAction_Description();
    public static string get_RemoveTagAttributeContextAction_Name();
    public static string get_ReplaceAllAttributesContextAction_Description();
    public static string get_ReplaceAllAttributesContextAction_Name();
    public static string get_ReplaceAllTagsContextAction_Description();
    public static string get_ReplaceAllTagsContextAction_Name();
    public static string get_ReplaceTagContextAction_Description();
    public static string get_ReplaceTagContextAction_Name();
    public static string get_ConvertTextToCDataContextAction_Description();
    public static string get_ConvertTextToCDataContextAction_Name();
}
[ZoneMarkerAttribute]
public class JetBrains.ReSharper.Intentions.Xml.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
