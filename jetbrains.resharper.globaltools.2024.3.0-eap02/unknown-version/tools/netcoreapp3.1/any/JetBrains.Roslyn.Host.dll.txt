public interface JetBrains.Roslyn.Host.ComponentContainer.IRoslynInitializable {
    public abstract virtual void Init();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.ComponentContainer.RoslynComponentContainer : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private IComponentContainer <parentContainer>P;
    [CompilerGeneratedAttribute]
private ShellPartCatalogSet <shellPartCatalogSet>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    private int myCounter;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Nullable`1<ValueTuple`2<ComponentContainer, LifetimeDefinition>> myComposed;
    [NullableAttribute("2")]
public IComponentContainer Container { get; }
    public Lifetime Lifetime { get; }
    public RoslynComponentContainer(ILogger logger, IComponentContainer parentContainer, ShellPartCatalogSet shellPartCatalogSet, RoslynHostSchedulerProvider schedulerProvider);
    [NullableContextAttribute("2")]
public IComponentContainer get_Container();
    public Lifetime get_Lifetime();
    internal IComponentContainer Launch(Lifetime lifetime, RoslynModel model);
    private void TerminateCurrent();
    private ComponentContainer CreateContainer(LifetimeDefinition containerLtd);
    private void SetupRegistrations(ComponentContainer componentContainer, RoslynModel model);
    private void SetupOnTermination(Lifetime lifetime, ComponentContainer componentContainer);
    private static void Compose(ComponentContainer componentContainer);
    private static void InitRoslynInitializable(ComponentContainer componentContainer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
internal class JetBrains.Roslyn.Host.ComponentContainer.RoslynFacadeImpl : object {
    private RoslynComponentContainer myContainer;
    public Lifetime Lifetime { get; }
    public RoslynFacadeImpl(Lifetime lifetime, RoslynComponentContainer container, RoslynShellFacade shellFacade);
    public sealed virtual Lifetime get_Lifetime();
    public sealed virtual bool ScopeModel(Action`1<RoslynModel> action);
    [NullableContextAttribute("2")]
public sealed virtual T ScopeModel(TState state, Func`3<TState, RoslynModel, T> func);
    [AsyncStateMachineAttribute("JetBrains.Roslyn.Host.ComponentContainer.RoslynFacadeImpl/<ScopeModelAsync>d__6`1")]
public sealed virtual Task`1<T> ScopeModelAsync(Lifetime lifetime, Func`3<Lifetime, RoslynModel, Task`1<T>> func);
    [AsyncStateMachineAttribute("JetBrains.Roslyn.Host.ComponentContainer.RoslynFacadeImpl/<ScopeModelAsync>d__7`2")]
public sealed virtual Task`1<T> ScopeModelAsync(Lifetime lifetime, TState state, Func`4<Lifetime, RoslynModel, TState, Task`1<T>> func);
    public sealed virtual void ScopeFacade(Action`1<TFacade> action);
    public sealed virtual void ScopeFacade(TState state, Action`2<TFacade, TState> action);
    public sealed virtual TResult ScopeFacade(Func`2<TFacade, TResult> func);
    public sealed virtual TResult ScopeFacade(TState state, Func`3<TFacade, TState, TResult> func);
    private TResult Scope(TState state, Func`3<TComponent, TState, TResult> func, TResult defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Analyzers.RoslynAnalyzersService : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynAnalyzersKindService <analyzersKindService>P;
    [CompilerGeneratedAttribute]
private RoslynModel <roslynModel>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <targetFrameworkCache>P;
    public RoslynAnalyzersService(ILogger logger, RoslynAnalyzersKindService analyzersKindService, RoslynModel roslynModel, RoslynProjectIdTracker projectIdTracker, RoslynTargetFrameworkCache targetFrameworkCache);
    public sealed virtual IReadOnlyList`1<RdQuickFixDescriptor> GetQuickFixes(RdProjectId projectId, RdTargetFramework targetFramework, string filePath, RdDiagnosticHighlighterKey diagnosticKey);
    public sealed virtual HighlightersResult GetHighlighters(GetHighlightersArgs args);
    protected virtual IReadOnlyList`1<RdHighlighter> GetHighlightersFromWorker(int lineCount, RdProjectId projectId, RdTargetFramework roslynTfm, AnalyzersKind analyzersKind, string fileName, bool requestedBySwea, long sweaRunVersion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class JetBrains.Roslyn.Host.Core.Analyzers.RoslynDiagnostic : object {
    [CompilerGeneratedAttribute]
private RdDiagnosticDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public RdDiagnosticDescriptor Descriptor { get; public set; }
    public RoslynDiagnostic(RdDiagnosticDescriptor Descriptor);
    [CompilerGeneratedAttribute]
protected RoslynDiagnostic(RoslynDiagnostic original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public RdDiagnosticDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Descriptor(RdDiagnosticDescriptor value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RoslynDiagnostic left, RoslynDiagnostic right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RoslynDiagnostic left, RoslynDiagnostic right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(RoslynDiagnostic other);
    [CompilerGeneratedAttribute]
public virtual RoslynDiagnostic <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(RdDiagnosticDescriptor& Descriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Analyzers.RoslynDiagnosticDescriptorsCache : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private RoslynModel <model>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    private Dictionary`2<RdAnalyzerReference, Dictionary`2<string, RdDiagnosticDescriptor>> myCache;
    public RoslynDiagnosticDescriptorsCache(ILogger logger, Lifetime lifetime, RoslynModel model, RoslynHostSchedulerProvider schedulerProvider);
    public void Update(IReadOnlyList`1<RdProcedureResult> results);
    public virtual RdDiagnosticDescriptor GetDescriptor(RdDiagnosticDescriptorRef descriptorRef);
    public virtual IEnumerable`1<RdDiagnosticDescriptor> Drop(RdAnalyzerReference analyzerReference);
    private RdDiagnosticDescriptor FromCache(RdDiagnosticDescriptorRef diagnosticDescriptor);
    private Dictionary`2<string, RdDiagnosticDescriptor> Invalidate(RdDiagnosticDescriptorRef descriptorRef);
    protected virtual List`1<RdDiagnosticDescriptor> GetDescriptorsFromWorker(RdDiagnosticDescriptorRef descriptorRef);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Analyzers.RoslynDiagnosticsTracker : object {
    [CompilerGeneratedAttribute]
private Lifetime <rootLifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <roslynHostSchedulerProvider>P;
    [CompilerGeneratedAttribute]
private IShellLocksWrapper <shellLocksWrapper>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynDiagnosticDescriptorsCache <diagnosticDescriptorsCache>P;
    private Signal`1<IReadOnlyList`1<DiagnosticToSync>> myUpdatedDiagnosticsSignal;
    private Signal`1<Unit> mySeverityItemsSignal;
    private object myItemsLock;
    private RoslynSeverityItems`2<RdDiagnosticDescriptor, RoslynDiagnostic> myItems;
    private ImmutableDictionary`2<RdDiagnosticDescriptor, RoslynSeverityItemInfo`1<RdDiagnosticDescriptor>> myInfos;
    public ImmutableDictionary`2<RdDiagnosticDescriptor, RoslynSeverityItemInfo`1<RdDiagnosticDescriptor>> CurrentSeverityItems { get; }
    public RoslynDiagnosticsTracker(Lifetime rootLifetime, ILogger logger, RoslynHostSchedulerProvider roslynHostSchedulerProvider, IShellLocksWrapper shellLocksWrapper, RoslynProjectIdTracker projectIdTracker, RoslynDiagnosticDescriptorsCache diagnosticDescriptorsCache);
    public sealed virtual ImmutableDictionary`2<RdDiagnosticDescriptor, RoslynSeverityItemInfo`1<RdDiagnosticDescriptor>> get_CurrentSeverityItems();
    public sealed virtual void ViewSeverityItems(Lifetime lifetime, Action`2<Lifetime, IEnumerable`1<RoslynSeverityItemInfo`1<RdDiagnosticDescriptor>>> func);
    public sealed virtual void ViewDiagnostics(Lifetime lifetime, UpdatedDiagnosticsDelegate func);
    private void CallbackUpdateDiagnostics(UpdatedDiagnosticsDelegate func, IReadOnlyList`1<DiagnosticToSync> currentDiagnostics, Lifetime safeLifetime);
    internal void Update(IReadOnlyList`1<RdProcedureResult> results);
    private UpdateResult DoUpdate(IReadOnlyList`1<RdProcedureResult> results);
    private List`1<RoslynDiagnostic> GetDiagnosticsWithDescriptor(List`1<RdDiagnosticDescriptorRef> diagnostics);
    private Nullable`1<ValueTuple`2<IProject, TargetFrameworkId>> UnwrapKey(RdAnalyzersKey key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Compilation.RoslynCompilationSinkHandler : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private RoslynModel <model>P;
    [CompilerGeneratedAttribute]
private RoslynSyncCounter <syncCounter>P;
    [CompilerGeneratedAttribute]
private SourceGeneratorsSinkHandler <sourceGeneratorsSinkHandler>P;
    [CompilerGeneratedAttribute]
private RoslynErrorsReporter <errorsReporter>P;
    public RoslynCompilationSinkHandler(ILogger logger, Lifetime lifetime, RoslynModel model, RoslynSyncCounter syncCounter, SourceGeneratorsSinkHandler sourceGeneratorsSinkHandler, RoslynErrorsReporter errorsReporter);
    public sealed virtual void Init();
    internal void CompilationCompletedSink(RdCompilationOutcome outcome);
    [CompilerGeneratedAttribute]
private void <Init>b__7_0(Lifetime _, RdCompilationsEntry e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
public class JetBrains.Roslyn.Host.Core.Compilation.RoslynCompilationTrackingEnabledHandler : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ProjectModelMonitor <projectModelMonitor>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynModel <model>P;
    public RoslynCompilationTrackingEnabledHandler(Lifetime lifetime, ProjectModelMonitor projectModelMonitor, RoslynHostSchedulerProvider schedulerProvider, RoslynModel model);
    public virtual void StartCompilationTracking();
    [CompilerGeneratedAttribute]
private void <StartCompilationTracking>b__5_0(bool ready);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.Documents.RoslynOpenDocumentViewer : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynOpenDocumentsProvider <openDocumentsProvider>P;
    [CompilerGeneratedAttribute]
private RoslynSyncCounter <syncCounter>P;
    [CompilerGeneratedAttribute]
private RoslynEventCollector <eventCollector>P;
    private RdOpenDocumentsEndpoints myRdEntry;
    public RoslynOpenDocumentViewer(Lifetime lifetime, ILogger logger, RoslynHostSchedulerProvider schedulerProvider, RoslynModel roslynModel, RoslynOpenDocumentsProvider openDocumentsProvider, RoslynSyncCounter syncCounter, RoslynEventCollector eventCollector);
    public virtual void ViewDocuments();
    private void ViewOpenDocument(IDocument document, string filePath, Lifetime documentLifetime);
    private void HandleClose(string filePath, Lifetime documentLifetime);
    [CompilerGeneratedAttribute]
private void <ViewDocuments>b__8_0(Lifetime documentLifetime, string key, IDocument document);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
public class JetBrains.Roslyn.Host.Core.Observability.RoslynThirdPartyErrorsHandler : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private RoslynModel <model>P;
    [CompilerGeneratedAttribute]
private RoslynErrorsReporter <errorsReporter>P;
    public RoslynThirdPartyErrorsHandler(Lifetime lifetime, RoslynModel model, RoslynErrorsReporter errorsReporter);
    public sealed virtual void Init();
    private void OnThirdPartyError(List`1<RdThirdPartyError> errors);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynAdditionalDocumentsFileTracker : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private RoslynAdditionalDocumentsTracker <tracker>P;
    [CompilerGeneratedAttribute]
private IFileSystemTracker <fileSystemTracker>P;
    [CompilerGeneratedAttribute]
private RoslynChangesCookieFactory <changesCookieFactory>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    public RoslynAdditionalDocumentsFileTracker(Lifetime lifetime, RoslynAdditionalDocumentsTracker tracker, IFileSystemTracker fileSystemTracker, RoslynChangesCookieFactory changesCookieFactory, RoslynHostSchedulerProvider schedulerProvider);
    public sealed virtual void Init();
    private void ViewDocument(Lifetime viewLifetime, RdProjectId projectId, RdTargetFramework tfm, VirtualFileSystemPath location);
    internal void ReloadOnFileChanged(Lifetime viewLifetime, RdProjectId projectId, RdTargetFramework tfm, string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
public class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynAdditionalDocumentsTracker : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    private ViewableMap`2<RdProjectTargetFramework, ViewableSet`1<VirtualFileSystemPath>> myDocuments;
    public RoslynAdditionalDocumentsTracker(ILogger logger, RoslynHostSchedulerProvider schedulerProvider);
    public void ViewDocuments(Lifetime lifetime, Action`4<Lifetime, RdProjectId, RdTargetFramework, VirtualFileSystemPath> onDocumentChanged);
    public virtual void Add(RdProjectId projectId, RdTargetFramework tfm, VirtualFileSystemPath location);
    public virtual void Remove(RdProjectId projectId, RdTargetFramework tfm, VirtualFileSystemPath location);
    public void RemoveAll(RdProjectId projectId, RdTargetFramework tfm);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynAnalyzerConfigsFilesTracker : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private FileSystemTrackerWrapper <fileSystemTracker>P;
    [CompilerGeneratedAttribute]
private RoslynModel <roslynModel>P;
    [CompilerGeneratedAttribute]
private RoslynSyncCounter <syncCounter>P;
    [CompilerGeneratedAttribute]
private RoslynReadyMonitor <readyMonitor>P;
    [CompilerGeneratedAttribute]
private RoslynChangesResultsProcessor <changesResultsProcessor>P;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private HashSet`1<ValueTuple`3<VirtualFileSystemPath, RdProjectId, RdTargetFramework>> myTrackedFiles;
    public RoslynAnalyzerConfigsFilesTracker(Lifetime lifetime, FileSystemTrackerWrapper fileSystemTracker, RoslynModel roslynModel, RoslynSyncCounter syncCounter, RoslynReadyMonitor readyMonitor, RoslynChangesResultsProcessor changesResultsProcessor);
    public virtual void StartTracking(RdProjectId rdProjectId, RdTargetFramework rdTfmId, VirtualFileSystemPath location);
    public virtual void StopTracking(RdProjectId rdProjectId, RdTargetFramework rdTfmId, VirtualFileSystemPath location);
    public virtual void StopTrackingAll();
    private void OnAnalyzerConfigChanged(RdProjectId rdProjectId, RdTargetFramework rdTfmId, string analyzerConfigFilePath);
    protected virtual List`1<RdProcedureResult> ReloadAnalyzerConfigInWorker(RdProjectId rdProjectId, RdTargetFramework rdTfmId, string analyzerConfigFilePath, RdChangesVersion changesVersion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynAnalyzerConfigsSyncService : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <roslynTargetFrameworkCache>P;
    [CompilerGeneratedAttribute]
private RoslynAnalyzerConfigsFilesTracker <tracker>P;
    [CompilerGeneratedAttribute]
private RoslynApiWrapper <apiWrapper>P;
    public RoslynAnalyzerConfigsSyncService(ILogger logger, ISolution solution, RoslynTargetFrameworkCache roslynTargetFrameworkCache, RoslynAnalyzerConfigsFilesTracker tracker, RoslynApiWrapper apiWrapper);
    public static bool IsAnalyzerConfigFile(VirtualFileSystemPath path);
    public virtual bool HandleAnalyzerConfig(RdProjectId rdProjectId, RdTargetFramework rdTfmId, VirtualFileSystemPath location, string path, RoslynChangesCookie changesCookie);
    public virtual void RemoveAnalyzerConfig(RdProjectId rdProjectId, RdTargetFramework rdTfmId, VirtualFileSystemPath location, string path, RoslynChangesCookie changesCookie);
    public void SyncAnalyzerConfig(IProject project, RdProjectId rdProjectId, RoslynChangesCookie changesCookie);
    private bool IsTopLevelAnalyzerConfig(VirtualFileSystemPath location);
    private HashSet`1<VirtualFileSystemPath> GetAnalyzerConfigFiles(IProject project, IProjectConfiguration configuration);
    private VirtualFileSystemPath GetFileLocation(IProject project, VirtualFileSystemPath x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynAnalyzerReferencesFilesTracker : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private FileSystemTrackerWrapper <fileSystemTracker>P;
    [CompilerGeneratedAttribute]
private RoslynModel <roslynModel>P;
    [CompilerGeneratedAttribute]
private RoslynSyncCounter <syncCounter>P;
    [CompilerGeneratedAttribute]
private RoslynReadyMonitor <readyMonitor>P;
    [CompilerGeneratedAttribute]
private RoslynEventCollector <eventCollector>P;
    [CompilerGeneratedAttribute]
private RoslynChangesResultsProcessor <changesResultsProcessor>P;
    [CompilerGeneratedAttribute]
private RoslynDiagnosticDescriptorsCache <diagnosticDescriptorsCache>P;
    [CompilerGeneratedAttribute]
private RoslynSeverityCache <severityCache>P;
    public RoslynAnalyzerReferencesFilesTracker(ILogger logger, Lifetime lifetime, FileSystemTrackerWrapper fileSystemTracker, RoslynModel roslynModel, RoslynSyncCounter syncCounter, RoslynReadyMonitor readyMonitor, RoslynEventCollector eventCollector, RoslynChangesResultsProcessor changesResultsProcessor, RoslynDiagnosticDescriptorsCache diagnosticDescriptorsCache, RoslynSeverityCache severityCache);
    public virtual void StartTracking(VirtualFileSystemPath location, RdProjectId parentId, RdTargetFramework parentTfmId);
    public virtual void StopTracking(VirtualFileSystemPath location, RdProjectId containingProjectId, RdTargetFramework roslynProjectTfm);
    internal void OnAnalyzerReferenceUpdated(VirtualFileSystemPath location, FileSystemChangeDelta c);
    private void DropCaches(RdAnalyzerReference rdAnalyzerReference);
    protected virtual List`1<RdProcedureResult> ReloadAnalyzerReferenceInWorker(RdAnalyzerReference rdAnalyzerReference, RdChangesVersion changesVersion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynDocumentsSyncService : object {
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <roslynTargetFrameworkCache>P;
    [CompilerGeneratedAttribute]
private RoslynMsBuildProjectFilesViewer <msBuildProjectFilesViewer>P;
    [CompilerGeneratedAttribute]
private RoslynAnalyzerConfigsSyncService <analyzerConfigsSyncService>P;
    [CompilerGeneratedAttribute]
private RoslynAdditionalDocumentsTracker <additionalDocumentsTracker>P;
    private ILogger myLogger;
    public RoslynDocumentsSyncService(RoslynProjectIdTracker projectIdTracker, RoslynTargetFrameworkCache roslynTargetFrameworkCache, RoslynMsBuildProjectFilesViewer msBuildProjectFilesViewer, RoslynAnalyzerConfigsSyncService analyzerConfigsSyncService, RoslynAdditionalDocumentsTracker additionalDocumentsTracker);
    public void OnProjectFileAdd(IProjectFile projectFile, RdProjectId rdProjectId, RoslynChangesCookie changesCookie);
    public void OnAdditionalFileAdd(RoslynChangesCookie changesCookie, RdProjectId rdProjectId, RdTargetFramework roslynTfmId, string path, VirtualFileSystemPath location);
    public void OnProjectFileRemove(IProjectFile projectFile, VirtualFileSystemPath location, RdProjectId rdProjectId, RoslynChangesCookie changesCookie);
    public void OnAdditionalFileRemove(RoslynChangesCookie changesCookie, RdProjectId rdProjectId, RdTargetFramework roslynTfmId, string path, VirtualFileSystemPath location);
    private BuildAction GetBuildAction(TargetFrameworkId tfmId, IProjectFile projectFile, IProjectMark projectMark, VirtualFileSystemPath location);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynProjectsProperties : object {
    public static RdProjectProperties GetProjectProperties(IProject project);
    public static RdProjectConfigProperties GetProjectConfigProperties(IProject project, TargetFrameworkId tfmId, RdTargetFramework rdTfm);
    private static string TryGetSnkFilePath(IProject project, IProjectConfiguration configuration);
    private static Nullable`1<NullableOptions> TryGetNullable(IProjectConfiguration configuration);
    private static Nullable`1<bool> TryGetBoolOption(IProjectConfiguration configuration, string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynProjectsSyncService : object {
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <roslynTargetFrameworkCache>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynAnalyzerConfigsSyncService <roslynAnalyzerConfigsSyncService>P;
    [CompilerGeneratedAttribute]
private RoslynReferencesProjectToIncomingTracker <referencesProjectToIncomingTracker>P;
    private ILogger myLogger;
    public RoslynProjectsSyncService(RoslynTargetFrameworkCache roslynTargetFrameworkCache, RoslynProjectIdTracker projectIdTracker, RoslynAnalyzerConfigsSyncService roslynAnalyzerConfigsSyncService, RoslynReferencesProjectToIncomingTracker referencesProjectToIncomingTracker);
    public bool IsSyncProject(IProject project);
    public RdProjectId OnProjectAdd(IProject project, RoslynChangesCookie changesCookie);
    public void SyncTargetFrameworks(IProject project, RoslynChangesCookie changesCookie);
    public void SyncProjectProperties(IProject project, RoslynChangesCookie changesCookie);
    public void OnProjectRemove(IProject project, RoslynChangesCookie changesCookie);
    [CompilerGeneratedAttribute]
internal static bool <IsSyncProject>g__IsSupportedProjectLanguage|6_0(ProjectLanguage language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynReferencesProjectToIncomingTracker : object {
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <roslynTargetFrameworkCache>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    private OneToSetMap`2<RdProjectId, IProjectToProjectReference> myProjectToIncomingReferences;
    public RoslynReferencesProjectToIncomingTracker(RoslynTargetFrameworkCache roslynTargetFrameworkCache, RoslynProjectIdTracker projectIdTracker);
    public virtual void RemoveIncomingReferences(RoslynChangesCookie changesCookie, RdProjectId roslynProjectId);
    public virtual void Add(RdProjectId targetId, IProjectToProjectReference reference);
    public virtual void Remove(RdProjectId targetId, IProjectToProjectReference reference);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynReferencesSyncService : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynReferencesProjectToIncomingTracker <referencesProjectToIncomingTracker>P;
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <targetFrameworkCache>P;
    [CompilerGeneratedAttribute]
private RoslynApiWrapper <apiWrapper>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynAnalyzerReferencesFilesTracker <analyzerReferencesFilesTracker>P;
    [CompilerGeneratedAttribute]
private RoslynReferencesTracker <referencesTracker>P;
    public RoslynReferencesSyncService(ILogger logger, RoslynReferencesProjectToIncomingTracker referencesProjectToIncomingTracker, RoslynTargetFrameworkCache targetFrameworkCache, RoslynApiWrapper apiWrapper, RoslynProjectIdTracker projectIdTracker, RoslynAnalyzerReferencesFilesTracker analyzerReferencesFilesTracker, RoslynReferencesTracker referencesTracker);
    public void RestorePendingProjectReferences(IProject project, RoslynChangesCookie changesCookie);
    public void UpdateAssemblyReferences(VirtualFileSystemPath assemblyLocation, RoslynChangesCookie changesCookie);
    public void OnProjectReferenceAdd(IProjectToModuleReference reference, RdProjectId parentId, RoslynChangesCookie changesCookie);
    private void OnProjectToAssemblyReferenceAdd(IProjectToAssemblyReference reference, RdProjectId parentProjectId, RdTargetFramework parentTfmId, RoslynChangesCookie changesCookie);
    private void OnProjectToProjectReferenceAdd(IProjectToProjectReference reference, RdProjectId parentProjectId, RdTargetFramework parentTfmId, RoslynChangesCookie roslynChangesCookie);
    private void OnRoslynAnalyzerReferenceAdd(IRoslynAnalyzerReference reference, RdProjectId parentId, RdTargetFramework parentTfmId, RoslynChangesCookie changesCookie);
    public void OnProjectReferenceRemove(IProjectToModuleReference reference, RdProjectId containingProjectId, RoslynChangesCookie changesCookie);
    private void OnProjectToAssemblyReferenceRemove(IProjectToAssemblyReference assemblyReference, RdProjectId containingProjectId, RdTargetFramework roslynProjectTfm, RoslynChangesCookie changesCookie);
    private void OnAnalyzerReferenceRemove(IRoslynAnalyzerReference analyzerReference, RdProjectId containingProjectId, RdTargetFramework roslynProjectTfm, RoslynChangesCookie changesCookie);
    private void OnProjectReferenceRemove(IProjectToProjectReference reference, RdProjectId parentProjectId, RdTargetFramework parentTfm, RoslynChangesCookie changesCookie);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynReferencesTracker : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    private OneToSetMap`2<VirtualFileSystemPath, IProjectToProjectReference> myPendingProjectReferences;
    private Dictionary`2<IProjectToProjectReference, RdProjectId> myProjectReferenceToTargetProjects;
    private OneToSetMap`2<VirtualFileSystemPath, RdProjectId> myOutputAssembliesMap;
    private Dictionary`2<IProjectToProjectReference, VirtualFileSystemPath> myProjRefsToOutputAssemblies;
    public RoslynReferencesTracker(ILogger logger, RoslynProjectIdTracker projectIdTracker);
    public virtual RdProjectId GetTarget(IProjectToProjectReference reference);
    public virtual VirtualFileSystemPath GetOutputFilePath(IProjectToProjectReference reference);
    public virtual IEnumerable`1<RdProjectId> GetAssemblyReferencingProjects(VirtualFileSystemPath assemblyLocation);
    public virtual bool IsProjectReferenceTracked(IProjectToProjectReference reference);
    [IteratorStateMachineAttribute("JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynReferencesTracker/<ExtractPendingProjectReferences>d__11")]
public virtual IEnumerable`1<PendingProjectReference> ExtractPendingProjectReferences(IProject project);
    public virtual void AddPendingProjectReference(IProjectToProjectReference pendingReference);
    public virtual void RemovePendingProjectReference(VirtualFileSystemPath projectReferenceHintPath, IProjectToProjectReference pendingReference);
    public virtual void AddProjectReference(IProjectToProjectReference reference, RdProjectId targetId);
    public virtual void RemoveProjectReference(IProjectToProjectReference reference);
    public virtual void AddAssemblyReference(IProjectToProjectReference assemblyReference, VirtualFileSystemPath outputFilePath, RdProjectId parentProjectId);
    public virtual void RemoveAssemblyReference(IProjectToProjectReference reference, VirtualFileSystemPath outputFilePath, RdProjectId parentProjectId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.ProjectElements.RoslynRuleSetsViewer : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynChangesCookieFactory <changesCookieFactory>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RuleSetMountPointProvider <ruleSetMountPointProvider>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynEventCollector <eventCollector>P;
    public RoslynRuleSetsViewer(Lifetime lifetime, ILogger logger, RoslynChangesCookieFactory changesCookieFactory, RoslynHostSchedulerProvider schedulerProvider, RuleSetMountPointProvider ruleSetMountPointProvider, RoslynProjectIdTracker projectIdTracker, RoslynEventCollector eventCollector);
    public virtual void StartViewingRuleSets();
    private void ViewRulesets(Lifetime rulesetsLifetime, IProject project, IReadOnlyList`1<RulesetInfo> rulesets);
    private void HandleRulesetsClear(RdProjectId projectId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynChangesCookie : object {
    private static ILogger ourLogger;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<RdChangeProjectModelBase> myChanges;
    private bool myApplied;
    private RoslynModel myModel;
    private RoslynSyncCounter mySyncCounter;
    private RoslynHostSchedulerProvider myRoslynHostSchedulerProvider;
    private Lifetime myLifetime;
    private RoslynChangesResultsProcessor myChangesResultsProcessor;
    private ReadyCookie myReadyMonitorCookie;
    private string myCallerInfo;
    public RoslynChangesCookie(Lifetime lifetime, RoslynModel model, RoslynSyncCounter syncCounter, RoslynHostSchedulerProvider roslynHostSchedulerProvider, RoslynChangesResultsProcessor changesResultsProcessor, RoslynReadyMonitor readyMonitor, string callerInfo);
    private static RoslynChangesCookie();
    public virtual void Add(RdChangeProjectModelBase rdChange, string caller, int line, string file);
    public virtual void Apply(string caller, int callerLine);
    protected virtual List`1<RdProcedureResult> ApplyChangesToWorker(RdApplyChangesRequest request);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynChangesCookieFactory : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private RoslynSyncCounter <syncCounter>P;
    [CompilerGeneratedAttribute]
private RoslynReadyMonitor <readyMonitor>P;
    [CompilerGeneratedAttribute]
private RoslynModel <roslynModel>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <roslynHostSchedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynChangesResultsProcessor <changesResultsProcessor>P;
    public RoslynChangesCookieFactory(Lifetime lifetime, RoslynSyncCounter syncCounter, RoslynReadyMonitor readyMonitor, RoslynModel roslynModel, RoslynHostSchedulerProvider roslynHostSchedulerProvider, RoslynChangesResultsProcessor changesResultsProcessor);
    public virtual RoslynChangesCookie Cookie(string callerMember, string callerFile, int callerLine);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynChangesResultsProcessor : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynSeverityCache <severityCache>P;
    [CompilerGeneratedAttribute]
private RoslynErrorsReporter <errorsReporter>P;
    [CompilerGeneratedAttribute]
private RoslynEventCollector <eventCollector>P;
    [CompilerGeneratedAttribute]
private RoslynRefactoringProvidersTracker <roslynRefactoringProvidersTracker>P;
    [CompilerGeneratedAttribute]
private RoslynDiagnosticsTracker <diagnosticsTracker>P;
    [CompilerGeneratedAttribute]
private RoslynDiagnosticDescriptorsCache <diagnosticDescriptorsCache>P;
    public RoslynChangesResultsProcessor(ILogger logger, RoslynProjectIdTracker projectIdTracker, RoslynSeverityCache severityCache, RoslynErrorsReporter errorsReporter, RoslynEventCollector eventCollector, RoslynRefactoringProvidersTracker roslynRefactoringProvidersTracker, RoslynDiagnosticsTracker diagnosticsTracker, RoslynDiagnosticDescriptorsCache diagnosticDescriptorsCache);
    public virtual void ProcessResults(IReadOnlyList`1<RdProcedureResult> results, string callerInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynMSBuildEventsViewer : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <roslynHostSchedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynMsBuildProjectFilesViewer <msBuildProjectFilesViewer>P;
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <roslynTargetFrameworkCache>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynChangesCookieFactory <changesCookieFactory>P;
    [CompilerGeneratedAttribute]
private IShellLocksWrapper <shellLocksWrapper>P;
    [CompilerGeneratedAttribute]
private RoslynDocumentsSyncService <documentsSyncService>P;
    [CompilerGeneratedAttribute]
private RoslynAdditionalDocumentsTracker <additionalDocumentsTracker>P;
    public RoslynMSBuildEventsViewer(Lifetime lifetime, ISolution solution, RoslynHostSchedulerProvider roslynHostSchedulerProvider, RoslynMsBuildProjectFilesViewer msBuildProjectFilesViewer, RoslynTargetFrameworkCache roslynTargetFrameworkCache, RoslynProjectIdTracker projectIdTracker, RoslynChangesCookieFactory changesCookieFactory, IShellLocksWrapper shellLocksWrapper, RoslynDocumentsSyncService documentsSyncService, RoslynAdditionalDocumentsTracker additionalDocumentsTracker);
    public virtual void Start();
    private void HandleProjectFileChanged(RoslynMsBuildProjectFileChanged projectFileChange);
    [AsyncStateMachineAttribute("JetBrains.Roslyn.Host.Core.ProjectModel.RoslynMSBuildEventsViewer/<HandleProjectLoaded>d__13")]
private Task HandleProjectLoaded(RoslynMsBuildProjectLoaded projectLoaded);
    private void HandleProjectLoaded(RoslynMsBuildProjectLoaded projectLoaded, RdProjectId rdProjectId);
    [CompilerGeneratedAttribute]
private void <Start>b__11_0(RoslynMsBuildProjectLoaded projectLoaded);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynProjectIdTracker : object {
    private ILogger myLogger;
    private object myLock;
    private BidirectionalMapOnDictionary`2<IProject, RdProjectId> myProjects;
    private HashSet`1<RdProjectId> myPendingProjects;
    private int myNextProjectId;
    public RdProjectId GetOrCreateRoslynRdProjectId(IProject project);
    public void Update(IReadOnlyList`1<RdProcedureResult> results);
    public virtual RdProjectId GetProjectId(IProject project);
    public virtual bool IsProjectSyncedWithWorker(IProject project);
    public virtual IProject GetProject(RdProjectId projectId);
    private void SetIsSynced(RdProjectId projectId);
    private void Remove(RdProjectId projectId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynProjectModelChangesViewer : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynProjectModelChangesViewer <changesViewer>P;
    [CompilerGeneratedAttribute]
private IShellLocksWrapper <shellLocksWrapper>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynChangesCookieFactory <changesCookieFactory>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynProjectsSyncService <projectsSyncService>P;
    [CompilerGeneratedAttribute]
private RoslynReferencesSyncService <referencesSyncService>P;
    [CompilerGeneratedAttribute]
private RoslynDocumentsSyncService <documentsSyncService>P;
    public RoslynProjectModelChangesViewer(Lifetime lifetime, ILogger logger, RoslynProjectModelChangesViewer changesViewer, IShellLocksWrapper shellLocksWrapper, RoslynHostSchedulerProvider schedulerProvider, RoslynChangesCookieFactory changesCookieFactory, RoslynProjectIdTracker projectIdTracker, RoslynProjectsSyncService projectsSyncService, RoslynReferencesSyncService referencesSyncService, RoslynDocumentsSyncService documentsSyncService);
    public virtual void Start();
    private void HandleProjectModelChange(ProjectModelChange change);
    private void ProcessProjectAdd(ProjectModelChange currentChange, IProject project, RoslynChangesCookie changesCookie);
    private void ProcessProjectContentChanges(ProjectModelChange change, RdProjectId containingProjectId, RoslynChangesCookie changesCookie);
    private void ProcessProjectRemove(ProjectModelChange currentChange, IProject project, RoslynChangesCookie changesCookie);
    private void ProcessChangesRecursively(ProjectModelChange change, RoslynChangesCookie changesCookie, Action`3<ProjectModelChange, IProject, RoslynChangesCookie> processor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynProjectModelInitializer : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynChangesCookieFactory <changesCookieFactory>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynProjectsSyncService <projectsSyncService>P;
    [CompilerGeneratedAttribute]
private RoslynReferencesSyncService <referencesSyncService>P;
    [CompilerGeneratedAttribute]
private RoslynDocumentsSyncService <documentsSyncService>P;
    public RoslynProjectModelInitializer(ILogger logger, Lifetime lifetime, ISolution solution, RoslynHostSchedulerProvider schedulerProvider, RoslynChangesCookieFactory changesCookieFactory, RoslynProjectIdTracker projectIdTracker, RoslynProjectsSyncService projectsSyncService, RoslynReferencesSyncService referencesSyncService, RoslynDocumentsSyncService documentsSyncService);
    internal virtual void InitSolution(RoslynModel roslynModel);
    public virtual RoslynChangesCookie CollectInitialChanges();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.ProjectModel.RoslynTopLevelAnalyzerConfigFilesViewer : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private IShellLocks <locks>P;
    [CompilerGeneratedAttribute]
private RoslynChangesCookieFactory <changesCookieFactory>P;
    [CompilerGeneratedAttribute]
private IFileSystemTracker <fileSystemTracker>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <roslynHostSchedulerProvider>P;
    [CompilerGeneratedAttribute]
private SolutionFileLocationLive <locationLive>P;
    private SequentialScheduler myScheduler;
    public RoslynTopLevelAnalyzerConfigFilesViewer(Lifetime lifetime, ILogger logger, IShellLocks locks, RoslynChangesCookieFactory changesCookieFactory, IFileSystemTracker fileSystemTracker, RoslynHostSchedulerProvider roslynHostSchedulerProvider, SolutionFileLocationLive locationLive);
    public virtual void Start();
    private void ProcessSolutionDirectory(Lifetime directoryLifetime, VirtualFileSystemPath directory);
    private GroupingEvent CreateSyncGroupingEvent(Lifetime directoryLifetime, List`1<AddRemoveEvent`1<VirtualFileSystemPath>> buffer);
    private void OnSolutionDirectoryDeleted();
    [CompilerGeneratedAttribute]
private void <OnSolutionDirectoryDeleted>b__12_0();
}
[AttributeUsageAttribute("4")]
[MeansImplicitUseAttribute("8")]
[ComponentInstantiationAttribute("16")]
public class JetBrains.Roslyn.Host.Core.RoslynComponentAttribute : ComponentAttribute {
    private static Instantiation RoslynComponentDefaultInstantiation;
    public RoslynComponentAttribute(Instantiation instantiation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute("0")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.Roslyn.Host.Core.RoslynInitializer : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynModel <model>P;
    [CompilerGeneratedAttribute]
private IShellLocksWrapper <shellLocksWrapper>P;
    [CompilerGeneratedAttribute]
private RoslynProjectModelInitializer <roslynProjectModelInitializer>P;
    [CompilerGeneratedAttribute]
private IProjectModelMonitor <projectModelMonitor>P;
    [CompilerGeneratedAttribute]
private RoslynInitializedMonitor <roslynInitializedMonitor>P;
    [CompilerGeneratedAttribute]
private RoslynCompilationTrackingEnabledHandler <compilationTrackingEnabledHandler>P;
    [CompilerGeneratedAttribute]
private RoslynMSBuildEventsViewer <msBuildEventsViewer>P;
    [CompilerGeneratedAttribute]
private RoslynProjectModelChangesViewer <projectModelChangesViewer>P;
    [CompilerGeneratedAttribute]
private RoslynRuleSetsViewer <ruleSetsViewer>P;
    [CompilerGeneratedAttribute]
private RoslynTopLevelAnalyzerConfigFilesViewer <topLevelAnalyzerConfigFilesViewer>P;
    [CompilerGeneratedAttribute]
private RoslynOpenDocumentViewer <openDocumentViewer>P;
    [CompilerGeneratedAttribute]
private IUpdatableHighlightingResultsMap <highlightingResultsMap>P;
    private bool myInitialized;
    public RoslynInitializer(ILogger logger, RoslynHostSchedulerProvider schedulerProvider, RoslynModel model, IShellLocksWrapper shellLocksWrapper, RoslynProjectModelInitializer roslynProjectModelInitializer, IProjectModelMonitor projectModelMonitor, RoslynInitializedMonitor roslynInitializedMonitor, RoslynCompilationTrackingEnabledHandler compilationTrackingEnabledHandler, RoslynMSBuildEventsViewer msBuildEventsViewer, RoslynProjectModelChangesViewer projectModelChangesViewer, RoslynRuleSetsViewer ruleSetsViewer, RoslynTopLevelAnalyzerConfigFilesViewer topLevelAnalyzerConfigFilesViewer, RoslynOpenDocumentViewer openDocumentViewer, IUpdatableHighlightingResultsMap highlightingResultsMap);
    public void Initialize(Lifetime lifetime);
    private void InitRoslyn(Lifetime lifetime);
    private void InitProjectModel();
    private void RequestSWEARevisitSeverities();
    [CompilerGeneratedAttribute]
private void <Initialize>b__16_0(Lifetime lt);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private RoslynChangesCookie <InitProjectModel>b__18_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.RoslynSyncCounter : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynSyncStatusMonitor <syncStatusMonitor>P;
    private object myLock;
    private long myBackendVersion;
    private long myWorkerVersion;
    private bool myFailure;
    private int myAcquired;
    [CompilerGeneratedAttribute]
private RoslynSyncStatus <SyncStatus>k__BackingField;
    [ThreadUnsafeAttribute]
public RoslynSyncStatus SyncStatus { get; private set; }
    public RoslynSyncCounter(Lifetime lifetime, ILogger logger, RoslynSyncStatusMonitor syncStatusMonitor);
    [CompilerGeneratedAttribute]
public RoslynSyncStatus get_SyncStatus();
    [CompilerGeneratedAttribute]
private void set_SyncStatus(RoslynSyncStatus value);
    public sealed virtual void Init();
    public virtual void Acquire();
    public virtual void Release();
    public virtual RdChangesVersion Next(string caller, int callerLine);
    public virtual void Success(long workerVersion);
    public virtual void Failure(long workerVersion);
    private TResult Scope(TState state, Func`3<RoslynSyncCounter, TState, TResult> func, string caller);
    private bool UpdateStatusNoLock();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Severity.RoslynRefactoringProvidersTracker : object {
    [CompilerGeneratedAttribute]
private Lifetime <rootLifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <roslynHostSchedulerProvider>P;
    [CompilerGeneratedAttribute]
private IShellLocksWrapper <shellLocksWrapper>P;
    private Signal`1<Unit> myUpdatedSignal;
    private RoslynSeverityItems`2<RdRefactoringProvider, RdRefactoringProvider> myItems;
    private ImmutableDictionary`2<RdRefactoringProvider, RoslynSeverityItemInfo`1<RdRefactoringProvider>> myInfos;
    private ImmutableDictionary`2<RdRefactoringProvider, RoslynSeverityItemInfo`1<RdRefactoringProvider>> JetBrains.Roslyn.Host.Facade.IRoslynSeverityItemsFacade<JetBrains.Roslyn.Host.Models.RdRefactoringProvider>.CurrentSeverityItems { get; }
    public RoslynRefactoringProvidersTracker(Lifetime rootLifetime, ILogger logger, RoslynHostSchedulerProvider roslynHostSchedulerProvider, IShellLocksWrapper shellLocksWrapper, RoslynProjectIdTracker projectIdTracker);
    public void Update(IReadOnlyList`1<RdProcedureResult> results);
    private sealed virtual override ImmutableDictionary`2<RdRefactoringProvider, RoslynSeverityItemInfo`1<RdRefactoringProvider>> JetBrains.Roslyn.Host.Facade.IRoslynSeverityItemsFacade<JetBrains.Roslyn.Host.Models.RdRefactoringProvider>.get_CurrentSeverityItems();
    private sealed virtual override void JetBrains.Roslyn.Host.Facade.IRoslynSeverityItemsFacade<JetBrains.Roslyn.Host.Models.RdRefactoringProvider>.ViewSeverityItems(Lifetime lifetime, Action`2<Lifetime, IEnumerable`1<RoslynSeverityItemInfo`1<RdRefactoringProvider>>> func);
}
[ExtensionAttribute]
public static class JetBrains.Roslyn.Host.Core.Severity.RoslynSeverityExtensions : object {
    [ExtensionAttribute]
public static Severity FromProtocol(RoslynSeverity severity);
    [ExtensionAttribute]
public static RoslynSeverity ToProtocol(Severity severity);
    [ExtensionAttribute]
public static Severity ToSeverity(RoslynCustomSeverity roslynCustomSeverity);
    [ExtensionAttribute]
public static RoslynCustomSeverity ToRoslynCustomSeverity(Severity roslynCustomSeverity);
    [ExtensionAttribute]
public static RoslynCustomSeveritySetting ToProtocol(RoslynCustomSeverity severity);
    [ExtensionAttribute]
public static RoslynCustomSeverity ToRoslynCustomSeverity(RoslynCustomSeveritySetting protocolSeverity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class JetBrains.Roslyn.Host.Core.Severity.RoslynSeverityItemInfo`1 : object {
    [CompilerGeneratedAttribute]
private T <Item>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AnalyzerReference>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <ProjectNames>k__BackingField;
    public T Item { get; }
    public string AnalyzerReference { get; }
    public HashSet`1<string> ProjectNames { get; }
    public RoslynSeverityItemInfo`1(T severityItem, string analyzerReference);
    [CompilerGeneratedAttribute]
public T get_Item();
    [CompilerGeneratedAttribute]
public string get_AnalyzerReference();
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_ProjectNames();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.Severity.RoslynSeverityItems`2 : object {
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    private Dictionary`2<RdAnalyzersKey, IReadOnlyList`1<TSeverityItem>> myTree;
    public IReadOnlyDictionary`2<RdAnalyzersKey, IReadOnlyList`1<TSeverityItem>> Tree { get; }
    public RoslynSeverityItems`2(RoslynProjectIdTracker projectIdTracker);
    public IReadOnlyDictionary`2<RdAnalyzersKey, IReadOnlyList`1<TSeverityItem>> get_Tree();
    public void Update(RdAnalyzerReferenceRemove analyzerReferenceRemove);
    public void Update(RdAnalyzerReferenceRemoveCompletely analyzerReferenceRemoveCompletely);
    public void Update(RdProjectRemoved projectRemoved);
    public void Update(RdProjectTfmRemoved projectTfmRemoved);
    public void Update(RdAnalyzersKey key, List`1<TSeverityItem> items);
    public ImmutableDictionary`2<TDescriptor, RoslynSeverityItemInfo`1<TDescriptor>> BuildInfos(Func`2<TSeverityItem, TDescriptor> map);
    private void RemoveKeys(Predicate`1<RdAnalyzersKey> predicate);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class JetBrains.Roslyn.Host.Core.Severity.SWEA.RoslynFastSeverityRequest : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <SeverityId>k__BackingField;
    [CompilerGeneratedAttribute]
private IPsiSourceFile <SourceFile>k__BackingField;
    [CompilerGeneratedAttribute]
private ISolution <Solution>k__BackingField;
    [CompilerGeneratedAttribute]
private IContextBoundSettingsStore <SettingsStore>k__BackingField;
    [NullableAttribute("1")]
public string SeverityId { get; public set; }
    public IPsiSourceFile SourceFile { get; public set; }
    public ISolution Solution { get; public set; }
    public IContextBoundSettingsStore SettingsStore { get; public set; }
    public RoslynFastSeverityRequest(string SeverityId, IPsiSourceFile SourceFile, ISolution Solution, IContextBoundSettingsStore SettingsStore);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_SeverityId();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SeverityId(string value);
    [CompilerGeneratedAttribute]
public IPsiSourceFile get_SourceFile();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SourceFile(IPsiSourceFile value);
    [CompilerGeneratedAttribute]
public ISolution get_Solution();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Solution(ISolution value);
    [CompilerGeneratedAttribute]
public IContextBoundSettingsStore get_SettingsStore();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SettingsStore(IContextBoundSettingsStore value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(RoslynFastSeverityRequest left, RoslynFastSeverityRequest right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(RoslynFastSeverityRequest left, RoslynFastSeverityRequest right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(RoslynFastSeverityRequest other);
    [CompilerGeneratedAttribute]
public void Deconstruct(String& SeverityId, IPsiSourceFile& SourceFile, ISolution& Solution, IContextBoundSettingsStore& SettingsStore);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Severity.SWEA.RoslynModifiedSeverityHandler : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynSeverityCache <severityCache>P;
    [CompilerGeneratedAttribute]
private RoslynModel <roslynModel>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <targetFrameworkCache>P;
    private SettingsIndexedEntry mySettingsIndexedEntry;
    public RoslynModifiedSeverityHandler(Lifetime lifetime, ILogger logger, ISettingsStore settings, RoslynSeverityCache severityCache, RoslynModel roslynModel, RoslynProjectIdTracker projectIdTracker, RoslynTargetFrameworkCache targetFrameworkCache);
    public sealed virtual Nullable`1<Severity> GetSeverity(RoslynFastSeverityRequest request);
    private bool TryGetOverridenSeverity(string severityId, IContextBoundSettingsStore settingsStore, Severity& severity);
    private Nullable`1<Severity> TryGetModifiedSeverity(string id, IPsiSourceFile psiFile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Severity.SWEA.RoslynSeverityCache : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdTracker <projectIdTracker>P;
    [CompilerGeneratedAttribute]
private RoslynDiagnosticDescriptorsCache <descriptorsCache>P;
    private static string GroupId;
    private ConcurrentDictionary`2<string, DiagnosticInfo> myDiagnosticDescriptors;
    public RoslynSeverityCache(ILogger logger, RoslynHostSchedulerProvider schedulerProvider, RoslynProjectIdTracker projectIdTracker, RoslynDiagnosticDescriptorsCache descriptorsCache);
    public sealed virtual Nullable`1<SeverityItem> GetConfigurableSeverityItem(string diagnosticId);
    public void Update(IReadOnlyList`1<RdProcedureResult> roslynDiagnosticsSync);
    public virtual void ClearCache(RdDiagnosticDescriptor descriptor);
    private void Update(RdDiagnosticsSync rdDiagnosticsSync);
    private void UpdateCache(RdDiagnosticDescriptor descriptor, RdDiagnosticDescriptorRef diagnostic);
}
public class JetBrains.Roslyn.Host.Core.SourceGenerators.GeneratedFiles.OnWriteDelegate : MulticastDelegate {
    public OnWriteDelegate(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(VirtualFileSystemPath path);
    public virtual IAsyncResult BeginInvoke(VirtualFileSystemPath path, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class JetBrains.Roslyn.Host.Core.SourceGenerators.GeneratedFiles.RoslynGeneratedFileInTempFolder : object {
    [CompilerGeneratedAttribute]
private VirtualFileSystemPath <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private OnWriteDelegate <OnWrite>k__BackingField;
    private static ILogger ourLogger;
    private object myLock;
    [NullableAttribute("2")]
private string myContent;
    private int myCodePage;
    private bool myOnDisk;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public VirtualFileSystemPath Path { get; public set; }
    public OnWriteDelegate OnWrite { get; public set; }
    public RoslynGeneratedFileInTempFolder(VirtualFileSystemPath Path, OnWriteDelegate OnWrite);
    [CompilerGeneratedAttribute]
private RoslynGeneratedFileInTempFolder(RoslynGeneratedFileInTempFolder original);
    private static RoslynGeneratedFileInTempFolder();
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public VirtualFileSystemPath get_Path();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Path(VirtualFileSystemPath value);
    [CompilerGeneratedAttribute]
public OnWriteDelegate get_OnWrite();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OnWrite(OnWriteDelegate value);
    public void Update(string content, int codePage, bool refresh);
    public void EnsureOnDisk();
    public void Delete();
    private bool ShouldUpdate();
    private void ClearReadonly();
    private void SetReadonly();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RoslynGeneratedFileInTempFolder left, RoslynGeneratedFileInTempFolder right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RoslynGeneratedFileInTempFolder left, RoslynGeneratedFileInTempFolder right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(RoslynGeneratedFileInTempFolder other);
    [CompilerGeneratedAttribute]
public RoslynGeneratedFileInTempFolder <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(VirtualFileSystemPath& Path, OnWriteDelegate& OnWrite);
    [CompilerGeneratedAttribute]
private void <EnsureOnDisk>b__17_0();
    [CompilerGeneratedAttribute]
private void <Delete>b__18_0();
    [CompilerGeneratedAttribute]
private bool <ShouldUpdate>b__19_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.SourceGenerators.GeneratedFiles.RoslynGeneratedFilesInTempFolder : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdToPathMap <projectIdToPathMap>P;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<ValueTuple`2<VirtualFileSystemPath, TargetFrameworkId>, VirtualFileSystemPath> myPathCache;
    private ConcurrentDictionary`2<Key, Lazy`1<RoslynGeneratedFileInTempFolder>> myGeneratedFilesInTempFolder;
    private BidirectionalMapOnDictionary`2<Key, VirtualFileSystemPath> myKeyToPathMap;
    private object myMapLock;
    public RoslynGeneratedFilesInTempFolder(ILogger logger, RoslynProjectIdToPathMap projectIdToPathMap);
    private sealed virtual override VirtualFileSystemPath JetBrains.Roslyn.Host.Facade.IRoslynGeneratedFilesFacade.GetOrAddFile(Guid roslynProjectId, string fileName, OnWriteDelegate onWrite);
    private sealed virtual override void JetBrains.Roslyn.Host.Facade.IRoslynGeneratedFilesFacade.EnsureOnDisk(VirtualFileSystemPath filePath, OnWriteDelegate onWrite);
    private sealed virtual override bool JetBrains.Roslyn.Host.Facade.IRoslynGeneratedFilesFacade.Tracked(VirtualFileSystemPath filePath);
    private sealed virtual override bool JetBrains.Roslyn.Host.Facade.IRoslynGeneratedFilesFacade.TryRemove(Key key, VirtualFileSystemPath& removedFile);
    private sealed virtual override void JetBrains.Roslyn.Host.Facade.IRoslynGeneratedFilesFacade.UpdateContent(Guid roslynProjectId, string fileName, string contains, int codePage, ISet`1<VirtualFileSystemPath> openedDocuments, OnWriteDelegate onWrite);
    public RoslynGeneratedFileInTempFolder GetOrAddFile(Guid projectId, string fileName, OnWriteDelegate onWrite);
    private RoslynGeneratedFileInTempFolder GetOrAddFile(Key key, OnWriteDelegate onWrite);
    private bool TryGetKeyByPath(VirtualFileSystemPath path, Key& key);
    private bool TryRemove(Key key, RoslynGeneratedFileInTempFolder& file);
    private RoslynGeneratedFileInTempFolder CreateFile(Key key, OnWriteDelegate onWrite);
    private VirtualFileSystemPath GetProjectFolderPath(VirtualFileSystemPath projectLocation, TargetFrameworkId id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
public class JetBrains.Roslyn.Host.Core.SourceGenerators.GeneratedFiles.RoslynSourceGeneratorOutputFilesTracker : object {
    private ConcurrentDictionary`2<VirtualFileSystemPath, ISourceGeneratorOutputFile> myFilesByPath;
    public RoslynSourceGeneratorOutputFilesTracker(ILogger logger);
    public sealed virtual void Add(VirtualFileSystemPath fileInTemp, ISourceGeneratorOutputFile file);
    public sealed virtual void Remove(VirtualFileSystemPath fileInTemp);
    public sealed virtual ISourceGeneratorOutputFile TryGet(VirtualFileSystemPath fileInTemp);
    public sealed virtual IEnumerable`1<ISourceGeneratorOutputFile> GetAll();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.SourceGenerators.RoslynProjectIdToPathMap : object {
    private BidirectionalMapOnDictionary`2<Guid, ProjectPath> myMap;
    private object myLock;
    public void Register(Guid projectId, VirtualFileSystemPath path, TargetFrameworkId tfm);
    public ProjectPath FromProjectId(Guid roslynProjectId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.SourceGenerators.SourceGeneratorsSinkHandler : object {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynSourceGeneratorDataProvider <sourceGeneratorDataProvider>P;
    [CompilerGeneratedAttribute]
private RoslynModel <model>P;
    [CompilerGeneratedAttribute]
private RoslynProjectIdToPathMap <projectIdToPathMap>P;
    [CompilerGeneratedAttribute]
private ISourceGeneratorMonitor <monitor>P;
    public SourceGeneratorsSinkHandler(Lifetime lifetime, ILogger logger, RoslynSourceGeneratorDataProvider sourceGeneratorDataProvider, RoslynModel model, RoslynProjectIdToPathMap projectIdToPathMap, ISourceGeneratorMonitor monitor);
    public sealed virtual void Init();
    public virtual void OnProjectsNotHandled(List`1<RdNotHandledProject> notHandledProjects);
    private void OnGeneratedSink(RdGeneratedResult result);
    private VirtualFileSystemPath ParsePath(string projectPath);
    private TargetFrameworkId ParseTargetFrameworkId(string targetFramework);
    [CompilerGeneratedAttribute]
private void <Init>b__7_0(Lifetime _, RdSourceGeneratorsEntry e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RoslynComponentAttribute]
internal class JetBrains.Roslyn.Host.Core.Utils.FileSystemTrackerWrapper : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private Lifetime <baseLifetime>P;
    [CompilerGeneratedAttribute]
private IFileSystemTracker <fileSystemTracker>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    private ConcurrentDictionary`2<Key, LifetimeDefinition> myActiveTrackers;
    public FileSystemTrackerWrapper(ILogger logger, Lifetime baseLifetime, IFileSystemTracker fileSystemTracker, RoslynHostSchedulerProvider schedulerProvider);
    public virtual void StartTrackingSafe(VirtualFileSystemPath location, RdProjectId projectId, RdTargetFramework tfmId, Action`1<FileSystemChangeDelta> onChangeAction, string caller, int callerLine);
    public virtual void StopTracking(VirtualFileSystemPath location, RdProjectId projectId, RdTargetFramework tfmId, string caller, int callerLine);
}
public enum JetBrains.Roslyn.Host.Enums.RoslynCustomSeverity : Enum {
    public int value__;
    public static RoslynCustomSeverity SET_BY_ROSLYN;
    public static RoslynCustomSeverity DO_NOT_SHOW;
    public static RoslynCustomSeverity INFO;
    public static RoslynCustomSeverity HINT;
    public static RoslynCustomSeverity SUGGESTION;
    public static RoslynCustomSeverity WARNING;
    public static RoslynCustomSeverity ERROR;
}
public enum JetBrains.Roslyn.Host.Enums.RoslynProjectModelStatus : Enum {
    public int value__;
    public static RoslynProjectModelStatus NotInitialized;
    public static RoslynProjectModelStatus Initialized;
    public static RoslynProjectModelStatus Failure;
}
public enum JetBrains.Roslyn.Host.Enums.RoslynSyncStatus : Enum {
    public int value__;
    public static RoslynSyncStatus Uninitialized;
    public static RoslynSyncStatus Synchronizing;
    public static RoslynSyncStatus Synchronized;
    public static RoslynSyncStatus Failure;
    public static RoslynSyncStatus Unloaded;
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.ExternalProcess.IRoslynProcessLoggingSetup {
    public abstract virtual void Setup(Lifetime lifetime, RoslynModel model, IScheduler roslynProcessScheduler);
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.ExternalProcess.IRoslynWorkerEnvVariableMutator {
    public abstract virtual EnvironmentVariableMutator GetEnvVariableMutator();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.ExternalProcess.RoslynConnection : ProtocolConnection`1<RoslynModel> {
    public RoslynConnection(Lifetime lifetime, RoslynModel protocolModel, IProtocol protocol, StartupOutputWriter startupOutputWriter, int processId, ISignal`1<int> processUnexpectedExited);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.ExternalProcess.RoslynExternalProcess : ProtocolExternalProcess`2<RoslynModel, RoslynConnection> {
    [CompilerGeneratedAttribute]
private IScheduler <scheduler>P;
    [CompilerGeneratedAttribute]
private VirtualFileSystemPath <solutionPath>P;
    [CompilerGeneratedAttribute]
private IRoslynProcessLoggingSetup <loggingSetup>P;
    protected string Name { get; }
    public RoslynExternalProcess(Lifetime lifetime, IShellLocks locks, IProcessStartInfoPatcher processInfoPatcher, JetProcessRuntimeRequest request, IScheduler scheduler, VirtualFileSystemPath solutionPath, IRoslynProcessLoggingSetup loggingSetup);
    protected virtual string get_Name();
    protected virtual RoslynModel CreateModel(Lifetime lifetime, IProtocol protocol);
    protected virtual RoslynConnection CreateConnection(Lifetime lifetime, RoslynModel model, IProtocol protocol, StartupOutputWriter outputWriter, int processId, Signal`1<int> processUnexpectedExited);
    protected virtual IScheduler StartScheduler(Lifetime processLifetime);
    protected virtual ProcessStartInfo GetProcessStartInfo(Lifetime lifetime, int port);
    protected virtual bool Shutdown(RoslynModel model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.ExternalProcess.RoslynExternalProcessFactory : object {
    [CompilerGeneratedAttribute]
private IRoslynWorkerEnvVariableMutator <roslynWorkerEnvVariableMutator>P;
    [CompilerGeneratedAttribute]
private IShellLocks <locks>P;
    [CompilerGeneratedAttribute]
private IProcessStartInfoPatcher <processInfoPatcher>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private IRoslynProcessLoggingSetup <loggingSetup>P;
    public RoslynExternalProcessFactory(IRoslynWorkerEnvVariableMutator roslynWorkerEnvVariableMutator, IShellLocks locks, IProcessStartInfoPatcher processInfoPatcher, RoslynHostSchedulerProvider schedulerProvider, ISolution solution, IRoslynProcessLoggingSetup loggingSetup);
    public RoslynConnection Create(Lifetime lifetime);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
public class JetBrains.Roslyn.Host.ExternalProcess.RoslynExternalProcessManager : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    [CompilerGeneratedAttribute]
private RoslynExternalProcessFactory <processFactory>P;
    private SequentialLifetimes myProcessHandle;
    private ViewableProperty`1<bool> myWorkerExitedUnexpectedly;
    [CompilerGeneratedAttribute]
private IScheduler <Scheduler>k__BackingField;
    public IScheduler Scheduler { get; }
    public IReadonlyProperty`1<bool> WorkerExitedUnexpectedly { get; }
    public RoslynExternalProcessManager(Lifetime solutionLifetime, ILogger logger, RoslynHostSchedulerProvider schedulerProvider, IShellLocks shellLocks, RoslynExternalProcessFactory processFactory);
    [CompilerGeneratedAttribute]
public IScheduler get_Scheduler();
    public IReadonlyProperty`1<bool> get_WorkerExitedUnexpectedly();
    internal void Start(Action`2<Lifetime, RoslynModel> callback);
    internal void Stop();
    private void StartImpl(Lifetime lifetime, Action`2<Lifetime, RoslynModel> callback);
    [NullableContextAttribute("2")]
private RoslynConnection DoStart(Lifetime lifetime);
    private void HandleEndSession(Lifetime launchLifetime, RoslynConnection connection);
    private void HandleUnexpectedTermination();
}
public interface JetBrains.Roslyn.Host.Facade.IFacadeMarker {
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Facade.IRoslynAnalyzersFacade {
    public abstract virtual IReadOnlyList`1<RdQuickFixDescriptor> GetQuickFixes(RdProjectId projectId, RdTargetFramework targetFramework, string filePath, RdDiagnosticHighlighterKey diagnosticKey);
    public abstract virtual HighlightersResult GetHighlighters(GetHighlightersArgs args);
}
public interface JetBrains.Roslyn.Host.Facade.IRoslynChangesFacade {
    [NullableContextAttribute("1")]
public abstract virtual RdChangesVersion Next(string caller, int callerLine);
}
public interface JetBrains.Roslyn.Host.Facade.IRoslynDiagnosticsTrackerFacade {
    [NullableContextAttribute("1")]
public abstract virtual void ViewDiagnostics(Lifetime lifetime, UpdatedDiagnosticsDelegate func);
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Facade.IRoslynFacade {
    public Lifetime Lifetime { get; }
    public abstract virtual Lifetime get_Lifetime();
    public abstract virtual bool ScopeModel(Action`1<RoslynModel> action);
    [NullableContextAttribute("2")]
public abstract virtual T ScopeModel(TState state, Func`3<TState, RoslynModel, T> func);
    public abstract virtual Task`1<T> ScopeModelAsync(Lifetime lifetime, Func`3<Lifetime, RoslynModel, Task`1<T>> func);
    public abstract virtual Task`1<T> ScopeModelAsync(Lifetime lifetime, TState state, Func`4<Lifetime, RoslynModel, TState, Task`1<T>> func);
    public abstract virtual void ScopeFacade(Action`1<TFacade> action);
    public abstract virtual void ScopeFacade(TState state, Action`2<TFacade, TState> action);
    public abstract virtual TResult ScopeFacade(Func`2<TFacade, TResult> func);
    public abstract virtual TResult ScopeFacade(TState state, Func`3<TFacade, TState, TResult> func);
}
public interface JetBrains.Roslyn.Host.Facade.IRoslynFastSeverityFacade {
    public abstract virtual Nullable`1<Severity> GetSeverity(RoslynFastSeverityRequest request);
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Facade.IRoslynGeneratedFilesFacade {
    public abstract virtual VirtualFileSystemPath GetOrAddFile(Guid roslynProjectId, string fileName, OnWriteDelegate onWrite);
    public abstract virtual void EnsureOnDisk(VirtualFileSystemPath filePath, OnWriteDelegate onWrite);
    public abstract virtual bool Tracked(VirtualFileSystemPath filePath);
    public abstract virtual bool TryRemove(Key key, VirtualFileSystemPath& removedFile);
    public abstract virtual void UpdateContent(Guid roslynProjectId, string fileName, string contains, int codePage, ISet`1<VirtualFileSystemPath> openedDocuments, OnWriteDelegate onWrite);
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Facade.IRoslynProjectsFacade {
    public abstract virtual RdProjectId GetProjectId(IProject project);
    public abstract virtual bool IsProjectSyncedWithWorker(IProject project);
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Facade.IRoslynSeverityCacheFacade {
    public abstract virtual Nullable`1<SeverityItem> GetConfigurableSeverityItem(string diagnosticId);
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Facade.IRoslynSeverityItemsFacade`1 {
    public ImmutableDictionary`2<T, RoslynSeverityItemInfo`1<T>> CurrentSeverityItems { get; }
    public abstract virtual ImmutableDictionary`2<T, RoslynSeverityItemInfo`1<T>> get_CurrentSeverityItems();
    public abstract virtual void ViewSeverityItems(Lifetime lifetime, Action`2<Lifetime, IEnumerable`1<RoslynSeverityItemInfo`1<T>>> func);
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Facade.IRoslynSourceGeneratorOutputFilesTracker {
    public abstract virtual void Add(VirtualFileSystemPath fileInTemp, ISourceGeneratorOutputFile file);
    public abstract virtual void Remove(VirtualFileSystemPath fileInTemp);
    public abstract virtual ISourceGeneratorOutputFile TryGet(VirtualFileSystemPath fileInTemp);
    public abstract virtual IEnumerable`1<ISourceGeneratorOutputFile> GetAll();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ShellComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Facade.RoslynShellFacade : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private WeakReference`1<IRoslynFacade> myRoslynFacade;
    [NullableContextAttribute("1")]
internal void Set(Lifetime lifetime, IRoslynFacade roslynFacade);
    public T Scope(Func`2<IRoslynFacade, T> func);
    public T Scope(TState state, Func`3<IRoslynFacade, TState, T> func);
    [CompilerGeneratedAttribute]
private void <Set>b__1_0();
}
[CustomHighlightingActionProviderAttribute("JetBrains.ProjectModel.CSharpProjectFileType")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.ActionProviders.DisableCSharpRoslynAnalyzersActionProvider : object {
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("JetBrains.Roslyn.Host.Integration.Analyzers.ActionProviders.DisableCSharpRoslynAnalyzersActionProvider/<GetActions>d__0")]
public sealed virtual IEnumerable`1<IntentionAction> GetActions(IHighlighting highlighting, DocumentRange range, IPsiSourceFile sourceFile, IAnchor configureAnchor);
}
[CustomHighlightingActionProviderAttribute("JetBrains.ProjectModel.VBProjectFileType")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.ActionProviders.DisableVBRoslynAnalyzersActionProvider : object {
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("JetBrains.Roslyn.Host.Integration.Analyzers.ActionProviders.DisableVBRoslynAnalyzersActionProvider/<GetActions>d__0")]
public sealed virtual IEnumerable`1<IntentionAction> GetActions(IHighlighting highlighting, DocumentRange range, IPsiSourceFile sourceFile, IAnchor configureAnchor);
}
[CustomHighlightingActionProviderAttribute("JetBrains.ProjectModel.KnownProjectFileType")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.ActionProviders.RoslynChangeConfigurableSeverityWarningProvider : object {
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("JetBrains.Roslyn.Host.Integration.Analyzers.ActionProviders.RoslynChangeConfigurableSeverityWarningProvider/<GetActions>d__0")]
public sealed virtual IEnumerable`1<IntentionAction> GetActions(IHighlighting highlighting, DocumentRange highlightingRange, IPsiSourceFile sourceFile, IAnchor configureAnchor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Bulbs.RoslynBulbLauncher : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RdDispatcher <rdDispatcher>P;
    [CompilerGeneratedAttribute]
private UITaskExecutor <taskExecutor>P;
    [CompilerGeneratedAttribute]
private IRoslynFacade <roslynFacade>P;
    [CompilerGeneratedAttribute]
private RoslynCodeActionResultProcessor <resultProcessor>P;
    public RoslynBulbLauncher(ILogger logger, RdDispatcher rdDispatcher, UITaskExecutor taskExecutor, IRoslynFacade roslynFacade, RoslynCodeActionResultProcessor resultProcessor);
    public void LaunchQuickFixModal(RdProjectId projectId, RoslynHighlighting highlighter, RdQuickFixDescriptor descriptor, RdTargetFramework currentTfm);
    public void LaunchRefactoringModal(RdProjectId projectId, string filePath, RdCoords coords, RdRefactoringCodeAction refactoring, RdTargetFramework currentTfm);
    private void RunModalCodeAction(string actonName, Func`3<Lifetime, RoslynModel, IRdTask`1<RdCodeActionResult>> func);
    [NullableContextAttribute("2")]
private RdChangesVersion TryNextChangesVersion();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Bulbs.RoslynCodeActionResultProcessor : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private IRoslynUserNotifications <roslynUserNotifications>P;
    [CompilerGeneratedAttribute]
private RoslynEventCollector <eventCollector>P;
    public RoslynCodeActionResultProcessor(ILogger logger, ISolution solution, IRoslynUserNotifications roslynUserNotifications, RoslynEventCollector eventCollector);
    public void ProcessResult(RdCodeActionResult result, string actonName);
    private void HandleDocumentChanged(RdDocumentChangeArgs documentChangeArgs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Bulbs.RoslynQuickFix : object {
    [CompilerGeneratedAttribute]
private RoslynHighlighting <highlighter>P;
    [CompilerGeneratedAttribute]
private IHighlightingSettingsManager <highlightingSettingsManager>P;
    private static ILogger ourLogger;
    public RoslynQuickFix(RoslynHighlighting highlighter, IHighlightingSettingsManager highlightingSettingsManager);
    private static RoslynQuickFix();
    public sealed virtual IEnumerable`1<IntentionAction> CreateBulbItems();
    public sealed virtual bool IsAvailable(IUserDataHolder cache);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Bulbs.RoslynQuickFixBulbAction : object {
    [CompilerGeneratedAttribute]
private RoslynHighlighting <highlighter>P;
    [CompilerGeneratedAttribute]
private RdQuickFixDescriptor <descriptor>P;
    [CompilerGeneratedAttribute]
private RoslynBulbLauncher <roslynBulbLauncher>P;
    [CompilerGeneratedAttribute]
private RdTargetFramework <currentTfm>P;
    private static ILogger ourLogger;
    public string Text { get; }
    public RoslynQuickFixBulbAction(RoslynHighlighting highlighter, RdQuickFixDescriptor descriptor, RoslynBulbLauncher roslynBulbLauncher, RdTargetFramework currentTfm);
    private static RoslynQuickFixBulbAction();
    public sealed virtual string get_Text();
    private sealed virtual override void JetBrains.ReSharper.Feature.Services.Bulbs.IBulbAction.Execute(ISolution solution, ITextControl textControl);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Bulbs.RoslynQuickFixesProvider : object {
    [CompilerGeneratedAttribute]
private IHighlightingSettingsManager <highlightingSettingsManager>P;
    public IEnumerable`1<Type> Dependencies { get; }
    public RoslynQuickFixesProvider(IHighlightingSettingsManager highlightingSettingsManager);
    public sealed virtual IEnumerable`1<Type> get_Dependencies();
    public sealed virtual void Register(IQuickFixesRegistrar table);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IQuickFix <Register>b__4_0(RoslynHighlighting highlighter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("0")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Bulbs.RoslynRefactoringsProvider : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private IRoslynFacade <roslynFacade>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private RoslynTargetFrameworkCache <targetFrameworkCache>P;
    [CompilerGeneratedAttribute]
private RoslynBulbLauncher <bulbLauncher>P;
    [CompilerGeneratedAttribute]
private RoslynSettingsServiceSolutionLevel <settingsService>P;
    private static TimeSpan ourTimeout;
    private IAnchor myRefactoringAnchor;
    public int Priority { get; }
    public RoslynRefactoringsProvider(ILogger logger, IRoslynFacade roslynFacade, ISolution solution, RoslynTargetFrameworkCache targetFrameworkCache, RoslynBulbLauncher bulbLauncher, RoslynSettingsServiceSolutionLevel settingsService);
    private static RoslynRefactoringsProvider();
    public sealed virtual int get_Priority();
    public sealed virtual object PreExecute(ITextControl textControl, Lifetime lifetime);
    public sealed virtual void CollectActions(IntentionsBulbItems intentionsBulbItems, BulbItemsCache bulbItemsCache, ITextControl textControl, Lifetime caretPositionLifetime, IPsiSourceFile psiSourceFile, object precalculatedData);
    public sealed virtual void CollectSyncResults(object data, IntentionsBulbItems intentionsBulbItems, ITextControl textControl);
    private IReadOnlyList`1<RdRefactoringCodeAction> GetRefactorings(Lifetime caretPositionLifetime, ITextControl textControl, RdProjectId rdProjectId);
    private void LaunchRefactoring(ITextControl textControl, RdRefactoringCodeAction refactoring, RdProjectId rdProjectId);
    private static RdCoords GetCoords(DocumentOffset offset);
}
[HighlightingSourceAttribute]
public interface JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.IRoslynDaemonProcessFactory {
    [NullableContextAttribute("1")]
public abstract virtual IDaemonStageProcess GetDaemonStageProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, RoslynDaemonStage roslynDaemonStage);
}
[HighlightingSourceAttribute]
public interface JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.IRoslynHighlightingSourceContract {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynDaemonInvalidator : object {
    private ILogger myLogger;
    private IDaemon myDaemon;
    private RoslynReadyMonitor myRoslynReadyMonitor;
    private GroupingEvent myInvalidationGroupingEvent;
    private object myLock;
    public RoslynDaemonInvalidator(Lifetime lifetime, ILogger logger, IDaemon daemon, RoslynReadyMonitor roslynReadyMonitor, IRoslynFacade roslynFacade, IShellLocks shellLocks, IProjectModelMonitor projectModelMonitor);
    private void OnGroupingEvent(bool _);
    private void RoslynReadyChanged();
    private void ViewDiagnostics(Lifetime lifetime, IProject project, TargetFrameworkId tfm, RdAnalyzerReference analyzerReference, IReadOnlyList`1<RoslynDiagnostic> diagnostics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[HighlightingSourceAttribute]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynDaemonProcess : object {
    private ILogger myLogger;
    private DaemonProcessKind myProcessKind;
    private RoslynDaemonStage myDaemonStage;
    private RoslynSettingsService mySettingsService;
    private Lazy`1<IRoslynFacade> myRoslynFacade;
    private Lazy`1<RoslynLiveCustomConfigurableSeverityItemProvider> myCustomConfigurableSeverityItemProvider;
    [CompilerGeneratedAttribute]
private IDaemonProcess <DaemonProcess>k__BackingField;
    public IDaemonProcess DaemonProcess { get; }
    public RoslynDaemonProcess(IDaemonProcess daemonProcess, DaemonProcessKind processKind, IContextBoundSettingsStore boundSettingsStore, RoslynDaemonStage daemonStage);
    [CompilerGeneratedAttribute]
public sealed virtual IDaemonProcess get_DaemonProcess();
    public sealed virtual void Execute(Action`1<DaemonStageResult> committer);
    [IteratorStateMachineAttribute("JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynDaemonProcess/<EnumerateHighlightInfos>d__11")]
private IEnumerable`1<HighlightingInfo> EnumerateHighlightInfos(IReadOnlyList`1<RdHighlighter> highlighters, IProject project, RdProjectId projectId, string filePath);
    private static DocumentOffset GetOffset(IDocument document, RdCoords coords);
    [IteratorStateMachineAttribute("JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynDaemonProcess/<GetRoslynHighlightings>d__13")]
protected virtual IEnumerable`1<RoslynHighlightingBase> GetRoslynHighlightings(RdHighlighter highlighter, IProject project, RdProjectId projectId, string filePath, DocumentRange documentRange, Severity severity, DaemonProcessKind kind);
    [CompilerGeneratedAttribute]
private IRoslynFacade <.ctor>b__6_0();
    [CompilerGeneratedAttribute]
private RoslynLiveCustomConfigurableSeverityItemProvider <.ctor>b__6_1();
    [CompilerGeneratedAttribute]
internal static ConfigurableSeverityItem <GetRoslynHighlightings>g__CreateItem|13_0(<>c__DisplayClass13_0& );
}
[ShellComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[HighlightingSourceAttribute]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynDaemonProcessFactory : object {
    [NullableContextAttribute("1")]
public virtual IDaemonStageProcess GetDaemonStageProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind, RoslynDaemonStage roslynDaemonStage);
}
[DaemonStageAttribute("0")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynDaemonStage : object {
    private long mySweaRunVersion;
    public long SweaRunVersion { get; }
    [NullableContextAttribute("1")]
public RoslynDaemonStage(Lifetime lifetime, SolutionAnalysisService solutionAnalysisService);
    public long get_SweaRunVersion();
    private void OnReanalyzing();
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynDaemonStage/<CreateProcess>d__5")]
public sealed virtual IEnumerable`1<IDaemonStageProcess> CreateProcess(IDaemonProcess process, IContextBoundSettingsStore settings, DaemonProcessKind processKind);
    [CompilerGeneratedAttribute]
private void <.ctor>b__1_0(bool _);
}
public class JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynStaticSeverityGroups : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[StaticSeverityHighlightingAttribute("-1", "JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynStaticSeverityGroups/RoslynAnalyzers")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Highlightings.RoslynHighlighting : RoslynHighlightingBase {
    [CompilerGeneratedAttribute]
private ConfigurableSeverityItem <configurableSeverityItem>P;
    [CompilerGeneratedAttribute]
private string <htmlText>P;
    public string HtmlText { get; }
    public ConfigurableSeverityItem ConfigurableSeverityItem { get; }
    public RoslynHighlighting(IProject project, RdProjectId projectId, RdDiagnosticHighlighterKey key, string toolTip, string filePath, DocumentRange range, string configurableSeverityId, Severity severity, string category, string title, ConfigurableSeverityItem configurableSeverityItem, string htmlText);
    public sealed virtual string get_HtmlText();
    public sealed virtual ConfigurableSeverityItem get_ConfigurableSeverityItem();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[StaticSeverityHighlightingAttribute("-1", "JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynStaticSeverityGroups/RoslynAnalyzers")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class JetBrains.Roslyn.Host.Integration.Analyzers.Highlightings.RoslynHighlightingBase : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IProject <project>P;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RdProjectId <projectId>P;
    [CompilerGeneratedAttribute]
private RdDiagnosticHighlighterKey <key>P;
    [CompilerGeneratedAttribute]
private string <toolTip>P;
    [CompilerGeneratedAttribute]
private string <filePath>P;
    [CompilerGeneratedAttribute]
private DocumentRange <range>P;
    [CompilerGeneratedAttribute]
private string <configurableSeverityId>P;
    [CompilerGeneratedAttribute]
private Severity <severity>P;
    [CompilerGeneratedAttribute]
private string <category>P;
    [CompilerGeneratedAttribute]
private string <title>P;
    private static Regex ourDiagnosticIdRegex;
    public RdDiagnosticHighlighterKey Key { get; }
    [NullableAttribute("2")]
public IProject Project { get; }
    [NullableAttribute("2")]
public RdProjectId ProjectId { get; }
    public string ConfigurableSeverityId { get; }
    public Severity Severity { get; }
    public string Category { get; }
    public string Title { get; }
    public string ToolTip { get; }
    public string FilePath { get; }
    public string ErrorStripeToolTip { get; }
    protected RoslynHighlightingBase(IProject project, RdProjectId projectId, RdDiagnosticHighlighterKey key, string toolTip, string filePath, DocumentRange range, string configurableSeverityId, Severity severity, string category, string title);
    private static RoslynHighlightingBase();
    public RdDiagnosticHighlighterKey get_Key();
    [NullableContextAttribute("2")]
public IProject get_Project();
    [NullableContextAttribute("2")]
public RdProjectId get_ProjectId();
    public sealed virtual string get_ConfigurableSeverityId();
    public sealed virtual Severity get_Severity();
    public string get_Category();
    public sealed virtual string get_Title();
    public sealed virtual string get_ToolTip();
    public string get_FilePath();
    public sealed virtual string get_ErrorStripeToolTip();
    public sealed virtual bool IsValid();
    public sealed virtual DocumentRange CalculateRange();
    public sealed virtual Nullable`1<int> GetStatisticsKey();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[StaticSeverityHighlightingAttribute("1", "JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynStaticSeverityGroups/RoslynAnalyzers")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Highlightings.RoslynHighlightingEnc : RoslynHighlightingBase {
    [CompilerGeneratedAttribute]
private string <attributeId>P;
    public string AttributeId { get; }
    public RoslynHighlightingEnc(IProject project, RdProjectId projectId, RdDiagnosticHighlighterKey key, string toolTip, DocumentRange range, string configurableSeverityId, string filePath, string title, string attributeId);
    public sealed virtual string get_AttributeId();
}
[StaticSeverityHighlightingAttribute("-1", "JetBrains.Roslyn.Host.Integration.Analyzers.Daemon.RoslynStaticSeverityGroups/RoslynAnalyzers")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Highlightings.RoslynHighlightingSWEA : RoslynHighlightingBase {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ConfigurableSeverityItem <configurableSeverityItem>P;
    [NullableAttribute("1")]
public ConfigurableSeverityItem ConfigurableSeverityItem { get; }
    [NullableContextAttribute("1")]
public RoslynHighlightingSWEA(IProject project, RdProjectId projectId, RdDiagnosticHighlighterKey key, string toolTip, string filePath, DocumentRange range, string configurableSeverityId, Severity severity, string category, string title, ConfigurableSeverityItem configurableSeverityItem);
    [NullableContextAttribute("1")]
public sealed virtual ConfigurableSeverityItem get_ConfigurableSeverityItem();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterConfigurableHighlightingsGroupAttribute("RoslynAnalyzers", "JetBrains.Roslyn.Host.Resources.Strings", "RoslynAnalyzersConfigurableHighlightingsGroupTitle", "")]
[ShellComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.Highlightings.RoslynLiveCustomConfigurableSeverityItemProvider : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynShellFacade <roslynShellFacade>P;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Result`1<Nothing> ourNoResults;
    public RoslynLiveCustomConfigurableSeverityItemProvider(ILogger logger, RoslynShellFacade roslynShellFacade);
    private static RoslynLiveCustomConfigurableSeverityItemProvider();
    public sealed virtual Result`1<ConfigurableSeverityItem> GetConfigurableSeverityItem(string id);
    [NullableContextAttribute("2")]
public sealed virtual Result`1<Severity> GetSeverity(string severityId, IPsiSourceFile sourceFile, ISolution solution, IContextBoundSettingsStore settingsStore);
    public sealed virtual IEnumerable`1<ConfigurableSeverityItem> GetConfigurableSeverityItems();
    public sealed virtual IEnumerable`1<string> GetConfigurableSeverityIdsByCompoundItemName(string compountItemName);
    public sealed virtual IEnumerable`1<string> GetConfigurableSeverityIdsByGroupId(string groupId);
    public sealed virtual IReadOnlyCollection`1<string> GetSeverityIdsByCompilerId(string compilerID);
    public sealed virtual IEnumerable`1<string> GetAllCompilerIds();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.Analyzers.RoslynAnalyzersKindService : object {
    [CompilerGeneratedAttribute]
private RoslynEnabledInSettings <enabledInSettings>P;
    public RoslynAnalyzersKindService(RoslynEnabledInSettings enabledInSettings);
    public virtual Nullable`1<AnalyzersKind> GetAnalyzersKind(DaemonProcessKind processKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.Documents.RoslynOpenDocumentsProvider : object {
    public virtual void ViewDocuments(Lifetime lifetime, Action`3<Lifetime, string, IDocument> viewAction);
    public virtual string GetText(IDocument _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynEnabledHook : object {
    private ILogger myLogger;
    private ViewableProperty`1<bool> myEnabled;
    public IReadonlyProperty`1<bool> Enabled { get; }
    public RoslynEnabledHook(ILogger logger);
    protected RoslynEnabledHook(ILogger logger, bool enabled);
    public IReadonlyProperty`1<bool> get_Enabled();
    public void Disable(Lifetime lifetime);
    [CompilerGeneratedAttribute]
private bool <Disable>b__6_0();
    [CompilerGeneratedAttribute]
private void <Disable>b__6_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynEnabledMonitor : object {
    private ILogger myLogger;
    private IProjectModelMonitor myProjectModelMonitor;
    private RoslynEnabledHook myEnabledHook;
    private RoslynAnalyzerReferencesCounter myAnalyzerReferencesCounter;
    private RoslynStrongNameValidationChecker myStrongNameValidationChecker;
    private RoslynHotReloadStatus myRoslynHotReloadStatus;
    private Signal`1<Unit> myChangedSignal;
    private object mySync;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [ThreadUnsafeAttribute]
public bool Enabled { get; private set; }
    [ThreadUnsafeAttribute]
public ISource`1<Unit> EnabledChanged { get; }
    [NullableAttribute("2")]
public string Reason { get; private set; }
    public RoslynEnabledMonitor(Lifetime lifetime, ILogger logger, IProjectModelMonitor projectModelMonitor, RoslynEnabledHook enabledHook, RoslynAnalyzerReferencesCounter analyzerReferencesCounter, RoslynStrongNameValidationChecker strongNameValidationChecker, RoslynHotReloadStatus roslynHotReloadStatus);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
private void set_Enabled(bool value);
    public ISource`1<Unit> get_EnabledChanged();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Reason();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Reason(string value);
    private void SubscribeCompose(Lifetime lifetime, IReadonlyProperty`1[] properties);
    private void Update();
    private static string OnFalse(bool value, string txt);
    [CompilerGeneratedAttribute]
private void <SubscribeCompose>b__19_0(bool _);
}
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynEventCollector : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ISignal`1<ValueTuple`2<RoslynEvent, string>> myCollectedSignal;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ThreadUnsafeAttribute]
public ISource`1<ValueTuple`2<RoslynEvent, string>> Collected { get; }
    public ISource`1<ValueTuple`2<RoslynEvent, string>> get_Collected();
    [NullableContextAttribute("1")]
[ThreadUnsafeAttribute]
public virtual void Collect(RoslynEvent roslynEvent, string payload);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynHotReloadStatus : object {
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <schedulerProvider>P;
    private Property`1<bool> myHotReloadIsActive;
    [ThreadUnsafeAttribute]
public IProperty`1<bool> HotReloadIsActive { get; }
    public RoslynHotReloadStatus(RoslynHostSchedulerProvider schedulerProvider);
    public void Activate(Lifetime lifetime);
    public IProperty`1<bool> get_HotReloadIsActive();
    [CompilerGeneratedAttribute]
private bool <Activate>b__3_0();
    [CompilerGeneratedAttribute]
private void <Activate>b__3_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynInitializedMonitor : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    private ViewableProperty`1<bool> myInitialized;
    [ThreadUnsafeAttribute]
public IReadonlyProperty`1<bool> Initialized { get; }
    public RoslynInitializedMonitor(ILogger logger);
    public IReadonlyProperty`1<bool> get_Initialized();
    internal virtual void SetInitialized(Lifetime lifetime);
    [CompilerGeneratedAttribute]
private void <SetInitialized>b__5_0();
    [CompilerGeneratedAttribute]
private void <SetInitialized>b__5_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynReadyMonitor : object {
    private ISignal`1<Unit> myChangedSignal;
    private ILogger myLogger;
    private RoslynInitializedMonitor myRoslynInitializedMonitor;
    private int myReadyCounter;
    private object myLock;
    [CompilerGeneratedAttribute]
private bool <Ready>k__BackingField;
    [ThreadUnsafeAttribute]
public bool Ready { get; private set; }
    [ThreadUnsafeAttribute]
public ISource`1<Unit> ReadyChanged { get; }
    public RoslynReadyMonitor(ILogger logger, Lifetime lifetime, RoslynInitializedMonitor roslynInitializedMonitor);
    [CompilerGeneratedAttribute]
public bool get_Ready();
    [CompilerGeneratedAttribute]
private void set_Ready(bool value);
    public ISource`1<Unit> get_ReadyChanged();
    public virtual ReadyCookie GetReadyCookie(string caller, int callerLine);
    private void Acquire(string caller, int callerLine);
    private void Release(string caller, int callerLine);
    private void UpdateSafe(Action`1<RoslynReadyMonitor> action);
    private bool UpdateNoLock(string caller);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_0(Lifetime _, bool _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynSourceGeneratorMonitor : object {
    private ILogger myLogger;
    private object myLock;
    private SourceGeneratorMonitor mySourceGeneratorMonitor;
    private RoslynSyncStatusMonitor myRoslynSyncStatusMonitor;
    private Signal`1<Unit> myChangedSignal;
    [CompilerGeneratedAttribute]
private Status <GeneratorsStatus>k__BackingField;
    [ThreadUnsafeAttribute]
public Status GeneratorsStatus { get; private set; }
    [ThreadUnsafeAttribute]
public ISource`1<Unit> GeneratorsStatusChanged { get; }
    public RoslynSourceGeneratorMonitor(Lifetime lifetime, ILogger logger, SourceGeneratorMonitor sourceGeneratorMonitor, RoslynSyncStatusMonitor roslynSyncStatusMonitor);
    [CompilerGeneratedAttribute]
public Status get_GeneratorsStatus();
    [CompilerGeneratedAttribute]
private void set_GeneratorsStatus(Status value);
    public ISource`1<Unit> get_GeneratorsStatusChanged();
    private void UpdateStatus();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__5_0(PropertyChangedEventArgs`1<bool> _);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_1(Unit _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynStrongNameValidationChecker : object {
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private NotificationsModel <notifications>P;
    private bool myShouldShowNotification;
    public RoslynStrongNameValidationChecker(ISolution solution, NotificationsModel notifications);
    public bool CheckStrongNameValidationEnabledAndNotifyOnce();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.Monitor.RoslynSyncStatusMonitor : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private RoslynHostSchedulerProvider <roslynHostSchedulerProvider>P;
    private Signal`1<Unit> myChangedSignal;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Lifetimed`1<RoslynSyncCounter> myCurrentSyncCounter;
    [ThreadUnsafeAttribute]
public RoslynSyncStatus SyncStatus { get; }
    [ThreadUnsafeAttribute]
public ISource`1<Unit> SyncStatusChanged { get; }
    public RoslynSyncStatusMonitor(ILogger logger, RoslynHostSchedulerProvider roslynHostSchedulerProvider);
    public RoslynSyncStatus get_SyncStatus();
    public ISource`1<Unit> get_SyncStatusChanged();
    internal void Bind(Lifetime lifetime, RoslynSyncCounter roslynSyncCounter);
    public void OnSyncStatusChangedInCounter();
    [CompilerGeneratedAttribute]
private void <Bind>b__9_0();
    [CompilerGeneratedAttribute]
private void <Bind>b__9_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class JetBrains.Roslyn.Host.Integration.MSBuild.RoslynMsBuildProjectChangesCookie : object {
    [CompilerGeneratedAttribute]
private RoslynMsBuildProjectFilesViewer <viewer>P;
    [NullableAttribute("0")]
private FrugalLocalList`1<RoslynMsBuildProjectFileChanged> myProjectFileChanges;
    public RoslynMsBuildProjectChangesCookie(RoslynMsBuildProjectFilesViewer viewer);
    public void Removed(IProjectMark projectMark, TargetFrameworkId tfmId, VirtualFileSystemPath location);
    public void Added(IProjectMark projectMark, VirtualFileSystemPath location, TargetFrameworkId tfmId, string itemType);
    private sealed virtual override void System.IDisposable.Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class JetBrains.Roslyn.Host.Integration.MSBuild.RoslynMsBuildProjectFile : ValueType {
    [CompilerGeneratedAttribute]
private VirtualFileSystemPath <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ItemType>k__BackingField;
    public VirtualFileSystemPath Location { get; }
    public string ItemType { get; }
    public RoslynMsBuildProjectFile(VirtualFileSystemPath location, string itemType);
    [CompilerGeneratedAttribute]
public VirtualFileSystemPath get_Location();
    [CompilerGeneratedAttribute]
public string get_ItemType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class JetBrains.Roslyn.Host.Integration.MSBuild.RoslynMsBuildProjectFileChanged : ValueType {
    [CompilerGeneratedAttribute]
private IProjectMark <ProjectMark>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ItemType>k__BackingField;
    [CompilerGeneratedAttribute]
private VirtualFileSystemPath <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private TargetFrameworkId <TargetFrameworkId>k__BackingField;
    [CompilerGeneratedAttribute]
private AddRemove <AddRemove>k__BackingField;
    public IProjectMark ProjectMark { get; }
    [NullableAttribute("2")]
public string ItemType { get; }
    public VirtualFileSystemPath Location { get; }
    public TargetFrameworkId TargetFrameworkId { get; }
    public AddRemove AddRemove { get; }
    public RoslynMsBuildProjectFileChanged(AddRemove addRemove, IProjectMark projectMark, VirtualFileSystemPath location, TargetFrameworkId targetFrameworkId, string itemType);
    [CompilerGeneratedAttribute]
public IProjectMark get_ProjectMark();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ItemType();
    [CompilerGeneratedAttribute]
public VirtualFileSystemPath get_Location();
    [CompilerGeneratedAttribute]
public TargetFrameworkId get_TargetFrameworkId();
    [CompilerGeneratedAttribute]
public AddRemove get_AddRemove();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionInstanceComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.MSBuild.RoslynMsBuildProjectFilesViewer : object {
    private Dictionary`2<IProjectMark, Dictionary`2<TargetFrameworkId, IReadOnlyList`1<string>>> myMsBuildPropAdditionalFileItemNames;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<IProjectMark, ImmutableDictionary`2<TargetFrameworkId, ImmutableArray`1<RoslynMsBuildProjectFile>>> myMsBuildItems;
    private Signal`1<RoslynMsBuildProjectFileChanged> myProjectFileChanged;
    private Signal`1<RoslynMsBuildProjectLoaded> myProjectLoaded;
    public ISource`1<RoslynMsBuildProjectFileChanged> ProjectFileChanged { get; }
    public ISource`1<RoslynMsBuildProjectLoaded> ProjectLoaded { get; }
    public ISource`1<RoslynMsBuildProjectFileChanged> get_ProjectFileChanged();
    public ISource`1<RoslynMsBuildProjectLoaded> get_ProjectLoaded();
    public virtual string GetProjectFileItemType(IProjectMark projectMark, TargetFrameworkId tfmId, VirtualFileSystemPath location);
    internal void FireProjectFileChanged(RoslynMsBuildProjectFileChanged change);
    private sealed virtual override void JetBrains.ProjectModel.ProjectsHost.MsBuild.IMsBuildProjectModificationListener.OnAddFile(IProjectMark projectMark, string itemType, VirtualFileSystemPath location, VirtualFileSystemPath linkedPath, VirtualFileSystemPath relativeTo, Nullable`1<RelativeToType> relativeToType);
    private sealed virtual override void JetBrains.ProjectModel.ProjectsHost.MsBuild.IMsBuildProjectModificationListener.OnRemoveFile(IProjectMark projectMark, string itemType, VirtualFileSystemPath location);
    private sealed virtual override void JetBrains.ProjectModel.ProjectsHost.MsBuild.IMsBuildProjectModificationListener.OnUpdateFile(IProjectMark projectMark, string oldItemType, VirtualFileSystemPath oldLocation, string newItemType, VirtualFileSystemPath newLocation);
    private sealed virtual override void JetBrains.ProjectModel.ProjectsHost.MsBuild.IMsBuildProjectModificationListener.OnAddFolder(IProjectMark projectMark, VirtualFileSystemPath location, VirtualFileSystemPath relativeTo, Nullable`1<RelativeToType> relativeToType);
    private sealed virtual override void JetBrains.ProjectModel.ProjectsHost.MsBuild.IMsBuildProjectModificationListener.OnRemoveFolder(IProjectMark projectMark, VirtualFileSystemPath location);
    private sealed virtual override void JetBrains.ProjectModel.ProjectsHost.MsBuild.IMsBuildProjectModificationListener.OnUpdateFolder(IProjectMark projectMark, VirtualFileSystemPath oldLocation, VirtualFileSystemPath newLocation);
    private void AddProjectFileInternal(IProjectMark projectMark, TargetFrameworkId tfmId, VirtualFileSystemPath location, string itemType, RoslynMsBuildProjectChangesCookie cookie);
    private void RemoveProjectFileInternal(IProjectMark projectMark, TargetFrameworkId tfmId, VirtualFileSystemPath location, RoslynMsBuildProjectChangesCookie cookie);
    private string GetMsBuildItemType(IProjectMark projectMark, TargetFrameworkId targetFrameworkId, string projectModelItemType);
    private bool ContainedAdditionalFileItemNames(IProjectMark projectMark, TargetFrameworkId tfmId, string projectModelItemType);
    [NullableContextAttribute("2")]
private sealed virtual override void JetBrains.ProjectModel.ProjectsHost.MsBuild.IMsBuildProjectListener.OnProjectLoaded(IProjectMark projectMark, IProjectDescriptor projectDescriptor, MsBuildProject msBuildProject);
    private void LoadAdditionalFileItemNamesItems(IProjectMark projectMark, MsBuildProject msBuildProject);
    private void LoadItems(IProjectMark projectMark, MsBuildProject msBuildProject);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class JetBrains.Roslyn.Host.Integration.MSBuild.RoslynMsBuildProjectLoaded : ValueType {
    [CompilerGeneratedAttribute]
private IProjectMark <ProjectMark>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableDictionary`2<TargetFrameworkId, ImmutableArray`1<RoslynMsBuildProjectFile>> <LoadedMap>k__BackingField;
    public IProjectMark ProjectMark { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableDictionary`2<TargetFrameworkId, ImmutableArray`1<RoslynMsBuildProjectFile>> LoadedMap { get; }
    public RoslynMsBuildProjectLoaded(IProjectMark projectMark, ImmutableDictionary`2<TargetFrameworkId, ImmutableArray`1<RoslynMsBuildProjectFile>> loadedMap);
    [CompilerGeneratedAttribute]
public IProjectMark get_ProjectMark();
    [CompilerGeneratedAttribute]
public ImmutableDictionary`2<TargetFrameworkId, ImmutableArray`1<RoslynMsBuildProjectFile>> get_LoadedMap();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellComponentAttribute("16")]
internal class JetBrains.Roslyn.Host.Integration.MSBuild.RoslynMsBuildPropertiesRequest : object {
    public static string AssemblyOriginatorKeyFile;
    public static string Nullable;
    public static string CodeAnalysisTreatWarningsAsErrors;
    public static string RunAnalyzersDuringLiveAnalysis;
    public static string RunAnalyzers;
    public static string EditorConfigFiles;
    public IEnumerable`1<string> RequestedProperties { get; }
    public IEnumerable`1<string> RequestedItems { get; }
    public sealed virtual IEnumerable`1<string> get_RequestedProperties();
    public sealed virtual IEnumerable`1<string> get_RequestedItems();
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Integration.Observability.IRoslynProcessLogger {
    public abstract virtual void LogError(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.Observability.RoslynErrorsReporter : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    public RoslynErrorsReporter(ILogger logger);
    public virtual void ReportSourceGenerators(IReadOnlyList`1<RdSourceGeneratorsError> errors);
    public virtual void ReportFailures(IEnumerable`1<RdFailure> failures);
    public virtual void ReportThirdParty(Lifetime lifetime, List`1<RdThirdPartyError> errors);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Observability.RoslynProcessLoggingSetup : object {
    [CompilerGeneratedAttribute]
private IRoslynProcessLogger <processLogger>P;
    [CompilerGeneratedAttribute]
private LoggerModel <loggerModel>P;
    [CompilerGeneratedAttribute]
private ProductConfigurations <configurations>P;
    [CompilerGeneratedAttribute]
private IShellLocks <shellLocks>P;
    public RoslynProcessLoggingSetup(IRoslynProcessLogger processLogger, LoggerModel loggerModel, ProductConfigurations configurations, IShellLocks shellLocks);
    public sealed virtual void Setup(Lifetime lifetime, RoslynModel model, IScheduler roslynProcessScheduler);
    private void ViewObservability(Lifetime lifetime, RdObservabilityEntry entry, IScheduler roslynProcessScheduler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class JetBrains.Roslyn.Host.Integration.Observability.RoslynWorkerEnvVariableMutator : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private LoggerModel <loggerModel>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    public RoslynWorkerEnvVariableMutator(ILogger logger, LoggerModel loggerModel, ISolution solution);
    public sealed virtual EnvironmentVariableMutator GetEnvVariableMutator();
    private FileSystemPath CalculateLogDir();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.ProjectModel.RoslynAnalyzerReferencesCounter : object {
    private ViewableProperty`1<bool> myHasAnalyzerReferences;
    private ChangeManager myChangeManager;
    private ISolution mySolution;
    private LifetimeDefinition myChangeManagerLtd;
    public IReadonlyProperty`1<bool> HasAnalyzerReferences { get; }
    public RoslynAnalyzerReferencesCounter(Lifetime lifetime, ISolutionLoadTasksScheduler scheduler, ChangeManager changeManager, ISolution solution);
    private void Init();
    private void HandleChanges(ChangeEventArgs args);
    private void AnalyzerReferencesFound();
    public IReadonlyProperty`1<bool> get_HasAnalyzerReferences();
    private bool IsAnalyzerReferenceInChange(ProjectModelChange change);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
internal class JetBrains.Roslyn.Host.Integration.ProjectModel.RoslynProjectModelChangesViewer : object {
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private ChangeManager <changeManager>P;
    public RoslynProjectModelChangesViewer(ISolution solution, ChangeManager changeManager);
    public void StartViewing(Lifetime lifetime, Action`1<ProjectModelChange> processor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.ProjectModel.RoslynTargetFrameworkCache : object {
    private Dictionary`2<TargetFrameworkId, RdTargetFramework> myCache;
    public virtual RdTargetFramework GetOrCreate(TargetFrameworkId targetFrameworkId);
    private static RdTargetFramework Create(TargetFrameworkId targetFrameworkId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[SolutionComponentAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.Qodana.QodanaRoslynInspectionsRetriever : object {
    [CompilerGeneratedAttribute]
private IRoslynFacade <roslynFacade>P;
    [CompilerGeneratedAttribute]
private RoslynLiveCustomConfigurableSeverityItemProvider <severityItemProvider>P;
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    public QodanaRoslynInspectionsRetriever(IRoslynFacade roslynFacade, RoslynLiveCustomConfigurableSeverityItemProvider severityItemProvider, ISolution solution);
    public sealed virtual IList`1<AdditionalSeverityItem> RetrieveSeverities();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
public class JetBrains.Roslyn.Host.Integration.RuleSets.ProjectsWithRuleSetsTracker : object {
    public IViewableMap`2<IProject, string> ProjectRuleSets;
    public ProjectsWithRuleSetsTracker(Lifetime lifetime, ISolution solution, ISettingsStore settingsStore, IViewableProjectsCollection projects, ProjectReloadChangeProvider reloadChangeProvider, IShellLocks locks);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class JetBrains.Roslyn.Host.Integration.RuleSets.RulesetInfo : ValueType {
    [CompilerGeneratedAttribute]
private string <InspectionCode>k__BackingField;
    [CompilerGeneratedAttribute]
private RdRulesetAction <Action>k__BackingField;
    public string InspectionCode { get; public set; }
    public RdRulesetAction Action { get; public set; }
    public RulesetInfo(string InspectionCode, RdRulesetAction Action);
    [CompilerGeneratedAttribute]
public string get_InspectionCode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InspectionCode(string value);
    [CompilerGeneratedAttribute]
public RdRulesetAction get_Action();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Action(RdRulesetAction value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(RulesetInfo left, RulesetInfo right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(RulesetInfo left, RulesetInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(RulesetInfo other);
    [CompilerGeneratedAttribute]
public void Deconstruct(String& InspectionCode, RdRulesetAction& Action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
public class JetBrains.Roslyn.Host.Integration.RuleSets.RuleSetMountPointProvider : object {
    private ILogger myLogger;
    private ICollectionEvents`1<RuleSetSettingsLayer> mySettingStores;
    private ICollectionEvents`1<ISettingsStorageMountPoint> myMountPoints;
    public RuleSetMountPointProvider(Lifetime lifetime, ProjectsWithRuleSetsTracker tracker, IShellLocks locks, ShellLevelRuleSetMountPointProvider mountPoints, ILogger logger, IFileSystemTracker fileSystemTracker);
    public void ViewRulesets(Lifetime lifetime, Action`3<Lifetime, IProject, IReadOnlyList`1<RulesetInfo>> handler);
    private static RdRulesetAction ToProtocol(RoslynRuleSetAction action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.RuleSets.RuleSetSettingsLayer : object {
    public IProject Project;
    private static KeyPathComponents ourSettingsKeyPrefix;
    private static char ourKeyPrefix;
    private static KeyPathComponent ourLastComponent;
    private static string ourCompilerWarningPrefix;
    private static ILogger ourLogger;
    public IReadOnlyDictionary`2<string, RoslynRuleSetAction> Settings;
    public IReadOnlyList`1<FileSystemPath> AffectedPaths;
    public string Name { get; }
    public RuleSetSettingsLayer(IProject project, string ruleSetPath);
    private static RuleSetSettingsLayer();
    public sealed virtual string get_Name();
    [NullableContextAttribute("2")]
public sealed virtual object Get(KeyPathComponents key, ISettingsStorageTransactionContext transaction);
    [NullableContextAttribute("2")]
public sealed virtual void Set(KeyPathComponents key, object value, ISettingsStorageTransactionContext transaction);
    public sealed virtual void AdviseChange(Lifetime lifetime, Action`1<SettingsStorageChangeArgs> fOnChange, ISettingsStorageTransactionContext transaction);
    public sealed virtual void Enum(KeyPathComponents root, int nTakeChildLevelOnly, Action`2<KeyPathComponents, object> fCallback, ISettingsStorageTransactionContext transaction);
    public sealed virtual ISettingsStorageTransactionData AttachToTransaction(Lifetime lifetime, ISettingsStorageTransactionContext transactionToAttach, ISettingsStorageTransactionContext transactionOuter);
    [NullableContextAttribute("2")]
public sealed virtual void EraseSubtree(KeyPathComponents root, ISettingsStorageTransactionContext transaction);
    private static string RuleSetActionToSettingValue(RoslynRuleSetAction action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ShellComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.RuleSets.ShellLevelRuleSetMountPointProvider : object {
    private ICollectionEvents`1<ISettingsStorageMountPoint> myMountPoints;
    private ICollectionEvents`1<ISettingsStorage> mySettingStores;
    private ICollectionEvents`1<ISettingsStorageMountPoint> JetBrains.Application.Settings.IProvider<JetBrains.Application.Settings.ISettingsStorageMountPoint>.Items { get; }
    private ICollectionEvents`1<ISettingsStorage> JetBrains.Application.Settings.IProvider<JetBrains.Application.Settings.Storage.ISettingsStorage>.Items { get; }
    private sealed virtual override ICollectionEvents`1<ISettingsStorageMountPoint> JetBrains.Application.Settings.IProvider<JetBrains.Application.Settings.ISettingsStorageMountPoint>.get_Items();
    private sealed virtual override ICollectionEvents`1<ISettingsStorage> JetBrains.Application.Settings.IProvider<JetBrains.Application.Settings.Storage.ISettingsStorage>.get_Items();
    public void RegisterSolution(Lifetime lifetime, ICollectionEvents`1<ISettingsStorageMountPoint> mountPoints, ICollectionEvents`1<RuleSetSettingsLayer> settingStores);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.Settings.RoslynEnabledInSettings : object {
    private IContextBoundSettingsStoreLive myContext;
    [CompilerGeneratedAttribute]
private IReadonlyProperty`1<bool> <EnabledInSettings>k__BackingField;
    [ThreadUnsafeAttribute]
public IReadonlyProperty`1<bool> EnabledInSettings { get; }
    public RoslynEnabledInSettings(Lifetime lifetime, ISolution solution, ISettingsStore settingsStore);
    [CompilerGeneratedAttribute]
public IReadonlyProperty`1<bool> get_EnabledInSettings();
    public void SetRoslynEnabled(bool enabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SettingsKeyAttribute("JetBrains.ReSharper.Resources.Settings.CodeInspectionSettings", "JetBrains.Roslyn.Host.Resources.Strings", "RoslynAnalyzersSettingDescription")]
public class JetBrains.Roslyn.Host.Integration.Settings.RoslynSettings : object {
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.Roslyn.Host.Resources.Strings", "EnableRoslynAnalyzersSettingDescription")]
public bool RoslynEnabled;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.Roslyn.Host.Resources.Strings", "IncludeRoslynAnalyzersInSolutionWideAnalysisSettingDescription")]
public bool UseRoslynInSwea;
    [SettingsIndexedEntryAttribute("JetBrains.Roslyn.Host.Resources.Strings", "EnabledRoslynRefactoringsSettingDescription")]
public IIndexedEntry`2<string, bool> RoslynRefactoringsEnabled;
    [SettingsIndexedEntryAttribute("JetBrains.Roslyn.Host.Resources.Strings", "RoslynCustomSeveritiesSettingDescription")]
public IIndexedEntry`2<string, RoslynCustomSeverity> RoslynCustomSeverities;
    [SettingsEntryAttribute("Mono.Cecil.CustomAttributeArgument", "JetBrains.Roslyn.Host.Resources.Strings", "RoslynLegacySeveritiesWasMigratedSettingDescription")]
public bool LegacySeveritiesMigrated;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.Settings.RoslynSettingsService : object {
    [CompilerGeneratedAttribute]
private IContextBoundSettingsStore <boundSettingsStore>P;
    private static RoslynCustomSeverity Default;
    private static Expression`1<Func`2<RoslynSettings, IIndexedEntry`2<string, RoslynCustomSeverity>>> ourRoslynCustomSeverities;
    private static Expression`1<Func`2<RoslynSettings, IIndexedEntry`2<string, bool>>> ourRoslynRefactoringsEnabled;
    private SettingsIndexedEntry myCustomSeveritiesIndexedEntry;
    private SettingsIndexedEntry myRefactoringsEnabledIndexedEntry;
    public RoslynSettingsService(IContextBoundSettingsStore boundSettingsStore);
    private static RoslynSettingsService();
    public static IProperty`1<RoslynCustomSeverity> CreateCustomSeverityProperty(string diagnosticId, Lifetime lifetime, string propertyId, IContextBoundSettingsStore boundSettingsStore);
    public static RoslynCustomSeverity GetCustomSeverity(string diagnosticId, IContextBoundSettingsStore boundSettingsStore);
    public static RoslynCustomSeverity GetCustomSeverity(string diagnosticId, IContextBoundSettingsStore boundSettingsStore, SettingsIndexedEntry cachedEntry);
    public static SettingsIndexedEntry GetCustomSeveritiesIndexedEntry(ISettingsStore boundSettingsStore);
    private static void SetCustomSeverity(string diagnosticId, RoslynCustomSeverity severity, IContextBoundSettingsStore boundSettingsStore, SettingsIndexedEntry entry);
    public RoslynCustomSeverity GetCustomSeverity(string diagnosticId);
    public virtual void SetCustomSeverity(string diagnosticId, RoslynCustomSeverity severity);
    public bool IsRefactoringEnabled(string refactoringClassName);
    public void SetRefactoringEnabled(string refactoringClassName, bool isEnabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.Settings.RoslynSettingsServiceSolutionLevel : RoslynSettingsService {
    [CompilerGeneratedAttribute]
private ISolution <solution>P;
    [CompilerGeneratedAttribute]
private ISignal`1<string> <SeveritySet>k__BackingField;
    public ISignal`1<string> SeveritySet { get; }
    public RoslynSettingsServiceSolutionLevel(Lifetime lifetime, ISolution solution, ISettingsStore settingsStore);
    [CompilerGeneratedAttribute]
public ISignal`1<string> get_SeveritySet();
    public virtual void SetCustomSeverity(string diagnosticId, RoslynCustomSeverity severity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class JetBrains.Roslyn.Host.Integration.Settings.RoslynSeverityOption : ValueType {
    [CompilerGeneratedAttribute]
private RoslynCustomSeverity <Severity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Display>k__BackingField;
    [CompilerGeneratedAttribute]
private Color <Color>k__BackingField;
    public RoslynCustomSeverity Severity { get; }
    public string Display { get; }
    public Color Color { get; }
    public RoslynSeverityOption(RoslynCustomSeverity severity, string display, Color color);
    [CompilerGeneratedAttribute]
public RoslynCustomSeverity get_Severity();
    [CompilerGeneratedAttribute]
public string get_Display();
    [CompilerGeneratedAttribute]
public Color get_Color();
    public static RoslynSeverityOption From(SeverityOption option);
}
public static class JetBrains.Roslyn.Host.Integration.Settings.RoslynSeverityOptions : object {
    [NullableAttribute("1")]
public static IReadOnlyList`1<RoslynSeverityOption> Values;
    private static RoslynSeverityOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("0")]
public class JetBrains.Roslyn.Host.Integration.SourceGenerators.RoslynSourceGeneratedFileManager : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private IRoslynFacade <roslynFacade>P;
    public RoslynSourceGeneratedFileManager(ILogger logger, IRoslynFacade roslynFacade);
    [NullableContextAttribute("2")]
public sealed virtual VirtualFileSystemPath GetSourceGeneratedFilePath(Guid roslynProjectId, Guid documentId, string fileName, string analyzerReferencePath);
    public sealed virtual bool IsSourceGeneratedFile(VirtualFileSystemPath filePath);
    public sealed virtual void EnsureSourceGeneratedFileOnDisk(VirtualFileSystemPath filePath);
    public virtual void OnFileAdded(ISourceGeneratorOutputFile file, Guid roslynProjectId, Guid documentId, string fileName, string content, int codePage);
    public virtual void OnFileModified(ISourceGeneratorOutputFile file, Guid roslynProjectId, Guid documentId, string fileName, string content, int codePage);
    public virtual void OnFileRemoved(ISourceGeneratorOutputFile file, Guid roslynProjectId, Guid documentId, string fileName);
    public sealed virtual ISourceGeneratorOutputFile TryGetSourceGeneratedFileByPath(VirtualFileSystemPath filePath);
    public sealed virtual IEnumerable`1<ISourceGeneratorOutputFile> GetAllSourceGeneratedFiles();
    protected virtual void OnFileWrite(VirtualFileSystemPath path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Integration.SourceGenerators.RoslynSourceGeneratorDataProvider : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    [CompilerGeneratedAttribute]
private IDictionaryEvents`2<SourceGeneratorProjectId, SourceGeneratorProjectData> <GeneratedSources>k__BackingField;
    public IDictionaryEvents`2<SourceGeneratorProjectId, SourceGeneratorProjectData> GeneratedSources { get; }
    public RoslynSourceGeneratorDataProvider(ILogger logger);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionaryEvents`2<SourceGeneratorProjectId, SourceGeneratorProjectData> get_GeneratedSources();
    public void UpdateGeneratedSources(Guid projectId, VirtualFileSystemPath projectPath, TargetFrameworkId targetFrameworkId, IEnumerable`1<RdGeneratedDocument> rdGeneratedDocuments, Boolean& needToDropSinkCache);
    private string FindTextInGeneratedSources(SourceGeneratorProjectId key, string docPath, Nullable`1<SourceGeneratorProjectData> existingProj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Integration.SourceGenerators.RoslynSourceGeneratorMonitorStarter : SourceGeneratorMonitorStarter {
    [CompilerGeneratedAttribute]
private Lifetime <lifetime>P;
    [CompilerGeneratedAttribute]
private IShellLocks <shellLocks>P;
    [CompilerGeneratedAttribute]
private RoslynEnabledMonitor <enabledMonitor>P;
    public RoslynSourceGeneratorMonitorStarter(Lifetime lifetime, ISolutionLoadTasksScheduler scheduler, SourceGeneratorMonitor sourceGeneratorMonitor, IShellLocks shellLocks, RoslynEnabledMonitor enabledMonitor);
    protected virtual void Initialize(SourceGeneratorMonitor sourceGeneratorMonitor);
}
[ZoneDefinitionAttribute]
public interface JetBrains.Roslyn.Host.IRoslynHostSupportZone {
}
public enum JetBrains.Roslyn.Host.Models.AnalyzersKind : Enum {
    public int value__;
    public static AnalyzersKind Custom;
    public static AnalyzersKind Enc;
    public static AnalyzersKind All;
}
public enum JetBrains.Roslyn.Host.Models.NullableOptions : Enum {
    public int value__;
    public static NullableOptions Enable;
    public static NullableOptions Disable;
    public static NullableOptions Warnings;
    public static NullableOptions Annotations;
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzerConfigFile : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private RdAnalyzerConfigFileSource <Source>k__BackingField;
    public static CtxReadDelegate`1<RdAnalyzerConfigFile> Read;
    public static CtxWriteDelegate`1<RdAnalyzerConfigFile> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdAnalyzerConfigFileSource Source { get; private set; }
    public RdAnalyzerConfigFile(string path, RdAnalyzerConfigFileSource source);
    private static RdAnalyzerConfigFile();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public RdAnalyzerConfigFileSource get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(RdAnalyzerConfigFileSource value);
    public void Deconstruct(String& path, RdAnalyzerConfigFileSource& source);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdAnalyzerConfigFile other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public enum JetBrains.Roslyn.Host.Models.RdAnalyzerConfigFileSource : Enum {
    public int value__;
    public static RdAnalyzerConfigFileSource ProjectProperties;
    public static RdAnalyzerConfigFileSource ProjectItem;
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzerConfigReloadRequest : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    public static CtxReadDelegate`1<RdAnalyzerConfigReloadRequest> Read;
    public static CtxWriteDelegate`1<RdAnalyzerConfigReloadRequest> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    public RdAnalyzerConfigReloadRequest(string path, RdProjectId projectId, RdTargetFramework targetFramework, RdChangesVersion changesVersion);
    private static RdAnalyzerConfigReloadRequest();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    public void Deconstruct(String& path, RdProjectId& projectId, RdTargetFramework& targetFramework, RdChangesVersion& changesVersion);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdAnalyzerConfigReloadRequest other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzerReference : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdAnalyzerReference> Read;
    public static CtxWriteDelegate`1<RdAnalyzerReference> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdAnalyzerReference(string path);
    private static RdAnalyzerReference();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public void Deconstruct(String& path);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdAnalyzerReference other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzerReferenceReloadRequest : object {
    [CompilerGeneratedAttribute]
private RdAnalyzerReference <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    public static CtxReadDelegate`1<RdAnalyzerReferenceReloadRequest> Read;
    public static CtxWriteDelegate`1<RdAnalyzerReferenceReloadRequest> Write;
    [NotNullAttribute]
public RdAnalyzerReference Reference { get; private set; }
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    public RdAnalyzerReferenceReloadRequest(RdAnalyzerReference reference, RdChangesVersion changesVersion);
    private static RdAnalyzerReferenceReloadRequest();
    [CompilerGeneratedAttribute]
public RdAnalyzerReference get_Reference();
    [CompilerGeneratedAttribute]
private void set_Reference(RdAnalyzerReference value);
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    public void Deconstruct(RdAnalyzerReference& reference, RdChangesVersion& changesVersion);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdAnalyzerReferenceReloadRequest other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzerReferenceRemove : RdProcedureResult {
    [CompilerGeneratedAttribute]
private RdAnalyzersKey <Key>k__BackingField;
    public static CtxReadDelegate`1<RdAnalyzerReferenceRemove> Read;
    public static CtxWriteDelegate`1<RdAnalyzerReferenceRemove> Write;
    [NotNullAttribute]
public RdAnalyzersKey Key { get; private set; }
    public RdAnalyzerReferenceRemove(RdAnalyzersKey key);
    private static RdAnalyzerReferenceRemove();
    [CompilerGeneratedAttribute]
public RdAnalyzersKey get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(RdAnalyzersKey value);
    public virtual bool Equals(object obj);
    public bool Equals(RdAnalyzerReferenceRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzerReferenceRemoveCompletely : RdProcedureResult {
    [CompilerGeneratedAttribute]
private RdAnalyzerReference <Reference>k__BackingField;
    public static CtxReadDelegate`1<RdAnalyzerReferenceRemoveCompletely> Read;
    public static CtxWriteDelegate`1<RdAnalyzerReferenceRemoveCompletely> Write;
    [NotNullAttribute]
public RdAnalyzerReference Reference { get; private set; }
    public RdAnalyzerReferenceRemoveCompletely(RdAnalyzerReference reference);
    private static RdAnalyzerReferenceRemoveCompletely();
    [CompilerGeneratedAttribute]
public RdAnalyzerReference get_Reference();
    [CompilerGeneratedAttribute]
private void set_Reference(RdAnalyzerReference value);
    public virtual bool Equals(object obj);
    public bool Equals(RdAnalyzerReferenceRemoveCompletely other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzersEntry : RdBindableBase {
    [NotNullAttribute]
private RdCall`2<RdAnalyzerReference, List`1<RdDiagnosticDescriptor>> _GetDiagnosticDescriptors;
    [NotNullAttribute]
private RdCall`2<RdGetHighlighterArgs, List`1<RdHighlighter>> _GetFileHighlighters;
    [NotNullAttribute]
private RdCall`2<RdQuickFixRequest, List`1<RdQuickFixDescriptor>> _GetQuickFixes;
    [NotNullAttribute]
private RdCall`2<RdLaunchQuickFixArgs, RdCodeActionResult> _LaunchQuickFix;
    [NotNullAttribute]
private RdCall`2<RdRefactoringRequest, List`1<RdRefactoringCodeAction>> _GetRefactorings;
    [NotNullAttribute]
private RdCall`2<RdLaunchRefactoringArgs, RdCodeActionResult> _LaunchRefactoring;
    [NotNullAttribute]
private RdCall`2<RdGetNewSeverity, Nullable`1<RoslynSeverity>> _TryGetModifiedSeverity;
    public static CtxReadDelegate`1<RdAnalyzersEntry> Read;
    public static CtxReadDelegate`1<List`1<RdDiagnosticDescriptor>> ReadRdDiagnosticDescriptorListNullable;
    public static CtxReadDelegate`1<List`1<RdHighlighter>> ReadRdHighlighterList;
    public static CtxReadDelegate`1<List`1<RdQuickFixDescriptor>> ReadRdQuickFixDescriptorList;
    public static CtxReadDelegate`1<List`1<RdRefactoringCodeAction>> ReadRdRefactoringCodeActionList;
    public static CtxReadDelegate`1<Nullable`1<RoslynSeverity>> ReadRoslynSeverityNullable;
    public static CtxWriteDelegate`1<RdAnalyzersEntry> Write;
    public static CtxWriteDelegate`1<List`1<RdDiagnosticDescriptor>> WriteRdDiagnosticDescriptorListNullable;
    public static CtxWriteDelegate`1<List`1<RdHighlighter>> WriteRdHighlighterList;
    public static CtxWriteDelegate`1<List`1<RdQuickFixDescriptor>> WriteRdQuickFixDescriptorList;
    public static CtxWriteDelegate`1<List`1<RdRefactoringCodeAction>> WriteRdRefactoringCodeActionList;
    public static CtxWriteDelegate`1<Nullable`1<RoslynSeverity>> WriteRoslynSeverityNullable;
    [NotNullAttribute]
public IRdCall`2<RdAnalyzerReference, List`1<RdDiagnosticDescriptor>> GetDiagnosticDescriptors { get; }
    [NotNullAttribute]
public IRdCall`2<RdGetHighlighterArgs, List`1<RdHighlighter>> GetFileHighlighters { get; }
    [NotNullAttribute]
public IRdCall`2<RdQuickFixRequest, List`1<RdQuickFixDescriptor>> GetQuickFixes { get; }
    [NotNullAttribute]
public IRdCall`2<RdLaunchQuickFixArgs, RdCodeActionResult> LaunchQuickFix { get; }
    [NotNullAttribute]
public IRdCall`2<RdRefactoringRequest, List`1<RdRefactoringCodeAction>> GetRefactorings { get; }
    [NotNullAttribute]
public IRdCall`2<RdLaunchRefactoringArgs, RdCodeActionResult> LaunchRefactoring { get; }
    [NotNullAttribute]
public IRdCall`2<RdGetNewSeverity, Nullable`1<RoslynSeverity>> TryGetModifiedSeverity { get; }
    private RdAnalyzersEntry(RdCall`2<RdAnalyzerReference, List`1<RdDiagnosticDescriptor>> getDiagnosticDescriptors, RdCall`2<RdGetHighlighterArgs, List`1<RdHighlighter>> getFileHighlighters, RdCall`2<RdQuickFixRequest, List`1<RdQuickFixDescriptor>> getQuickFixes, RdCall`2<RdLaunchQuickFixArgs, RdCodeActionResult> launchQuickFix, RdCall`2<RdRefactoringRequest, List`1<RdRefactoringCodeAction>> getRefactorings, RdCall`2<RdLaunchRefactoringArgs, RdCodeActionResult> launchRefactoring, RdCall`2<RdGetNewSeverity, Nullable`1<RoslynSeverity>> tryGetModifiedSeverity);
    private static RdAnalyzersEntry();
    public IRdCall`2<RdAnalyzerReference, List`1<RdDiagnosticDescriptor>> get_GetDiagnosticDescriptors();
    public IRdCall`2<RdGetHighlighterArgs, List`1<RdHighlighter>> get_GetFileHighlighters();
    public IRdCall`2<RdQuickFixRequest, List`1<RdQuickFixDescriptor>> get_GetQuickFixes();
    public IRdCall`2<RdLaunchQuickFixArgs, RdCodeActionResult> get_LaunchQuickFix();
    public IRdCall`2<RdRefactoringRequest, List`1<RdRefactoringCodeAction>> get_GetRefactorings();
    public IRdCall`2<RdLaunchRefactoringArgs, RdCodeActionResult> get_LaunchRefactoring();
    public IRdCall`2<RdGetNewSeverity, Nullable`1<RoslynSeverity>> get_TryGetModifiedSeverity();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdAnalyzersKey : object {
    [CompilerGeneratedAttribute]
private RdProjectTargetFramework <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private RdAnalyzerReference <Reference>k__BackingField;
    public static CtxReadDelegate`1<RdAnalyzersKey> Read;
    public static CtxWriteDelegate`1<RdAnalyzersKey> Write;
    [NotNullAttribute]
public RdProjectTargetFramework Project { get; private set; }
    [NotNullAttribute]
public RdAnalyzerReference Reference { get; private set; }
    public RdAnalyzersKey(RdProjectTargetFramework project, RdAnalyzerReference reference);
    private static RdAnalyzersKey();
    [CompilerGeneratedAttribute]
public RdProjectTargetFramework get_Project();
    [CompilerGeneratedAttribute]
private void set_Project(RdProjectTargetFramework value);
    [CompilerGeneratedAttribute]
public RdAnalyzerReference get_Reference();
    [CompilerGeneratedAttribute]
private void set_Reference(RdAnalyzerReference value);
    public void Deconstruct(RdProjectTargetFramework& project, RdAnalyzerReference& reference);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdAnalyzersKey other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdApplyChangesRequest : object {
    [CompilerGeneratedAttribute]
private List`1<RdChangeProjectModelBase> <Changes>k__BackingField;
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    public static CtxReadDelegate`1<RdApplyChangesRequest> Read;
    public static CtxReadDelegate`1<List`1<RdChangeProjectModelBase>> ReadRdChangeProjectModelBaseList;
    public static CtxWriteDelegate`1<RdApplyChangesRequest> Write;
    public static CtxWriteDelegate`1<List`1<RdChangeProjectModelBase>> WriteRdChangeProjectModelBaseList;
    [NotNullAttribute]
public List`1<RdChangeProjectModelBase> Changes { get; private set; }
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    public RdApplyChangesRequest(List`1<RdChangeProjectModelBase> changes, RdChangesVersion changesVersion);
    private static RdApplyChangesRequest();
    [CompilerGeneratedAttribute]
public List`1<RdChangeProjectModelBase> get_Changes();
    [CompilerGeneratedAttribute]
private void set_Changes(List`1<RdChangeProjectModelBase> value);
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    public void Deconstruct(List`1& changes, RdChangesVersion& changesVersion);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdApplyChangesRequest other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdApplyDeltaResult : object {
    [CompilerGeneratedAttribute]
private List`1<RdHotReloadApplyDeltaDiagnostic> <Diagnostics>k__BackingField;
    public static CtxReadDelegate`1<RdApplyDeltaResult> Read;
    public static CtxReadDelegate`1<List`1<RdHotReloadApplyDeltaDiagnostic>> ReadRdHotReloadApplyDeltaDiagnosticList;
    public static CtxWriteDelegate`1<RdApplyDeltaResult> Write;
    public static CtxWriteDelegate`1<List`1<RdHotReloadApplyDeltaDiagnostic>> WriteRdHotReloadApplyDeltaDiagnosticList;
    [NotNullAttribute]
public List`1<RdHotReloadApplyDeltaDiagnostic> Diagnostics { get; private set; }
    public RdApplyDeltaResult(List`1<RdHotReloadApplyDeltaDiagnostic> diagnostics);
    private static RdApplyDeltaResult();
    [CompilerGeneratedAttribute]
public List`1<RdHotReloadApplyDeltaDiagnostic> get_Diagnostics();
    [CompilerGeneratedAttribute]
private void set_Diagnostics(List`1<RdHotReloadApplyDeltaDiagnostic> value);
    public void Deconstruct(List`1& diagnostics);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdApplyDeltaResult other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectAssemblyReferencesUpdate : RdChangeProjectBase {
    [CompilerGeneratedAttribute]
private string <AssemblyLocation>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectAssemblyReferencesUpdate> Read;
    public static CtxWriteDelegate`1<RdChangeProjectAssemblyReferencesUpdate> Write;
    [NotNullAttribute]
public string AssemblyLocation { get; private set; }
    public RdChangeProjectAssemblyReferencesUpdate(string assemblyLocation, RdProjectId projectId);
    private static RdChangeProjectAssemblyReferencesUpdate();
    [CompilerGeneratedAttribute]
public string get_AssemblyLocation();
    [CompilerGeneratedAttribute]
private void set_AssemblyLocation(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectAssemblyReferencesUpdate other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdChangeProjectBase : RdChangeProjectModelBase {
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectBase> Read;
    public static CtxWriteDelegate`1<RdChangeProjectBase> Write;
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    protected RdChangeProjectBase(RdProjectId projectId);
    private static RdChangeProjectBase();
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectBase_Unknown : RdChangeProjectBase {
    public static CtxReadDelegate`1<RdChangeProjectBase_Unknown> Read;
    public static CtxWriteDelegate`1<RdChangeProjectBase_Unknown> Write;
    public RdChangeProjectBase_Unknown(RdProjectId projectId);
    private static RdChangeProjectBase_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectBase_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdChangeProjectModelBase : object {
    public static CtxReadDelegate`1<RdChangeProjectModelBase> Read;
    public static CtxWriteDelegate`1<RdChangeProjectModelBase> Write;
    private static RdChangeProjectModelBase();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectModelBase_Unknown : RdChangeProjectModelBase {
    public static CtxReadDelegate`1<RdChangeProjectModelBase_Unknown> Read;
    public static CtxWriteDelegate`1<RdChangeProjectModelBase_Unknown> Write;
    private static RdChangeProjectModelBase_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectModelBase_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectProperties : RdChangeProjectBase {
    [CompilerGeneratedAttribute]
private RdProjectProperties <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdProjectConfigProperties> <ConfigProperties>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectProperties> Read;
    public static CtxReadDelegate`1<List`1<RdProjectConfigProperties>> ReadRdProjectConfigPropertiesList;
    public static CtxWriteDelegate`1<RdChangeProjectProperties> Write;
    public static CtxWriteDelegate`1<List`1<RdProjectConfigProperties>> WriteRdProjectConfigPropertiesList;
    [NotNullAttribute]
public RdProjectProperties Properties { get; private set; }
    [NotNullAttribute]
public List`1<RdProjectConfigProperties> ConfigProperties { get; private set; }
    public RdChangeProjectProperties(RdProjectProperties properties, List`1<RdProjectConfigProperties> configProperties, RdProjectId projectId);
    private static RdChangeProjectProperties();
    [CompilerGeneratedAttribute]
public RdProjectProperties get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(RdProjectProperties value);
    [CompilerGeneratedAttribute]
public List`1<RdProjectConfigProperties> get_ConfigProperties();
    [CompilerGeneratedAttribute]
private void set_ConfigProperties(List`1<RdProjectConfigProperties> value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectProperties other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectRulesetRulesClear : RdChangeProjectBase {
    public static CtxReadDelegate`1<RdChangeProjectRulesetRulesClear> Read;
    public static CtxWriteDelegate`1<RdChangeProjectRulesetRulesClear> Write;
    public RdChangeProjectRulesetRulesClear(RdProjectId projectId);
    private static RdChangeProjectRulesetRulesClear();
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectRulesetRulesClear other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectRulesetRulesSet : RdChangeProjectBase {
    [CompilerGeneratedAttribute]
private List`1<RdRulesetRule> <Rulesets>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectRulesetRulesSet> Read;
    public static CtxReadDelegate`1<List`1<RdRulesetRule>> ReadRdRulesetRuleList;
    public static CtxWriteDelegate`1<RdChangeProjectRulesetRulesSet> Write;
    public static CtxWriteDelegate`1<List`1<RdRulesetRule>> WriteRdRulesetRuleList;
    [NotNullAttribute]
public List`1<RdRulesetRule> Rulesets { get; private set; }
    public RdChangeProjectRulesetRulesSet(List`1<RdRulesetRule> rulesets, RdProjectId projectId);
    private static RdChangeProjectRulesetRulesSet();
    [CompilerGeneratedAttribute]
public List`1<RdRulesetRule> get_Rulesets();
    [CompilerGeneratedAttribute]
private void set_Rulesets(List`1<RdRulesetRule> value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectRulesetRulesSet other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTargetFrameworksSync : RdChangeProjectBase {
    [CompilerGeneratedAttribute]
private RdProjectCommonInfo <ProjectInfo>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTargetFrameworksSync> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTargetFrameworksSync> Write;
    [NotNullAttribute]
public RdProjectCommonInfo ProjectInfo { get; private set; }
    public RdChangeProjectTargetFrameworksSync(RdProjectCommonInfo projectInfo, RdProjectId projectId);
    private static RdChangeProjectTargetFrameworksSync();
    [CompilerGeneratedAttribute]
public RdProjectCommonInfo get_ProjectInfo();
    [CompilerGeneratedAttribute]
private void set_ProjectInfo(RdProjectCommonInfo value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTargetFrameworksSync other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAdditionalDocumentAdd : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAdditionalDocumentAdd> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAdditionalDocumentAdd> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdChangeProjectTfmAdditionalDocumentAdd(string path, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAdditionalDocumentAdd();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAdditionalDocumentAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAdditionalDocumentReload : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAdditionalDocumentReload> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAdditionalDocumentReload> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdChangeProjectTfmAdditionalDocumentReload(string path, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAdditionalDocumentReload();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAdditionalDocumentReload other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAdditionalDocumentRemove : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAdditionalDocumentRemove> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAdditionalDocumentRemove> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdChangeProjectTfmAdditionalDocumentRemove(string path, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAdditionalDocumentRemove();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAdditionalDocumentRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAdditionalDocumentsSync : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private List`1<string> <Paths>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAdditionalDocumentsSync> Read;
    public static CtxReadDelegate`1<List`1<string>> ReadStringList;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAdditionalDocumentsSync> Write;
    public static CtxWriteDelegate`1<List`1<string>> WriteStringList;
    [NotNullAttribute]
public List`1<string> Paths { get; private set; }
    public RdChangeProjectTfmAdditionalDocumentsSync(List`1<string> paths, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAdditionalDocumentsSync();
    [CompilerGeneratedAttribute]
public List`1<string> get_Paths();
    [CompilerGeneratedAttribute]
private void set_Paths(List`1<string> value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAdditionalDocumentsSync other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAnalyzerConfigFileAdd : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private RdAnalyzerConfigFile <File>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAnalyzerConfigFileAdd> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAnalyzerConfigFileAdd> Write;
    [NotNullAttribute]
public RdAnalyzerConfigFile File { get; private set; }
    public RdChangeProjectTfmAnalyzerConfigFileAdd(RdAnalyzerConfigFile file, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAnalyzerConfigFileAdd();
    [CompilerGeneratedAttribute]
public RdAnalyzerConfigFile get_File();
    [CompilerGeneratedAttribute]
private void set_File(RdAnalyzerConfigFile value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAnalyzerConfigFileAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAnalyzerConfigFileRemove : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private RdAnalyzerConfigFile <File>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAnalyzerConfigFileRemove> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAnalyzerConfigFileRemove> Write;
    [NotNullAttribute]
public RdAnalyzerConfigFile File { get; private set; }
    public RdChangeProjectTfmAnalyzerConfigFileRemove(RdAnalyzerConfigFile file, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAnalyzerConfigFileRemove();
    [CompilerGeneratedAttribute]
public RdAnalyzerConfigFile get_File();
    [CompilerGeneratedAttribute]
private void set_File(RdAnalyzerConfigFile value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAnalyzerConfigFileRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAnalyzerConfigFileSync : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private List`1<RdAnalyzerConfigFile> <Files>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAnalyzerConfigFileSync> Read;
    public static CtxReadDelegate`1<List`1<RdAnalyzerConfigFile>> ReadRdAnalyzerConfigFileList;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAnalyzerConfigFileSync> Write;
    public static CtxWriteDelegate`1<List`1<RdAnalyzerConfigFile>> WriteRdAnalyzerConfigFileList;
    [NotNullAttribute]
public List`1<RdAnalyzerConfigFile> Files { get; private set; }
    public RdChangeProjectTfmAnalyzerConfigFileSync(List`1<RdAnalyzerConfigFile> files, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAnalyzerConfigFileSync();
    [CompilerGeneratedAttribute]
public List`1<RdAnalyzerConfigFile> get_Files();
    [CompilerGeneratedAttribute]
private void set_Files(List`1<RdAnalyzerConfigFile> value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAnalyzerConfigFileSync other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAnalyzerReferenceAdd : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private RdAnalyzerReference <Reference>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAnalyzerReferenceAdd> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAnalyzerReferenceAdd> Write;
    [NotNullAttribute]
public RdAnalyzerReference Reference { get; private set; }
    public RdChangeProjectTfmAnalyzerReferenceAdd(RdAnalyzerReference reference, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAnalyzerReferenceAdd();
    [CompilerGeneratedAttribute]
public RdAnalyzerReference get_Reference();
    [CompilerGeneratedAttribute]
private void set_Reference(RdAnalyzerReference value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAnalyzerReferenceAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAnalyzerReferenceRemove : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private RdAnalyzerReference <Reference>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAnalyzerReferenceRemove> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAnalyzerReferenceRemove> Write;
    [NotNullAttribute]
public RdAnalyzerReference Reference { get; private set; }
    public RdChangeProjectTfmAnalyzerReferenceRemove(RdAnalyzerReference reference, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAnalyzerReferenceRemove();
    [CompilerGeneratedAttribute]
public RdAnalyzerReference get_Reference();
    [CompilerGeneratedAttribute]
private void set_Reference(RdAnalyzerReference value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAnalyzerReferenceRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAssemblyReferenceAdd : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Aliases>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAssemblyReferenceAdd> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAssemblyReferenceAdd> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    [NotNullAttribute]
public string Aliases { get; private set; }
    public RdChangeProjectTfmAssemblyReferenceAdd(string path, string aliases, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAssemblyReferenceAdd();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Aliases();
    [CompilerGeneratedAttribute]
private void set_Aliases(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAssemblyReferenceAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmAssemblyReferenceRemove : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Aliases>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmAssemblyReferenceRemove> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmAssemblyReferenceRemove> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    [NotNullAttribute]
public string Aliases { get; private set; }
    public RdChangeProjectTfmAssemblyReferenceRemove(string path, string aliases, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmAssemblyReferenceRemove();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Aliases();
    [CompilerGeneratedAttribute]
private void set_Aliases(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmAssemblyReferenceRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmBase : RdChangeProjectBase {
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmBase> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmBase> Write;
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    protected RdChangeProjectTfmBase(RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmBase();
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmBase_Unknown : RdChangeProjectTfmBase {
    public static CtxReadDelegate`1<RdChangeProjectTfmBase_Unknown> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmBase_Unknown> Write;
    public RdChangeProjectTfmBase_Unknown(RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmBase_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmBase_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmDocumentAdd : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmDocumentAdd> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmDocumentAdd> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdChangeProjectTfmDocumentAdd(string path, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmDocumentAdd();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmDocumentAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmDocumentRemove : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmDocumentRemove> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmDocumentRemove> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdChangeProjectTfmDocumentRemove(string path, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmDocumentRemove();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmDocumentRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmProjectReferenceAdd : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private RdProjectId <ReferencedProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTargetFramework <ReferencedTargetFramework>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmProjectReferenceAdd> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmProjectReferenceAdd> Write;
    [NotNullAttribute]
public RdProjectId ReferencedProjectId { get; private set; }
    [NotNullAttribute]
public RdTargetFramework ReferencedTargetFramework { get; private set; }
    public RdChangeProjectTfmProjectReferenceAdd(RdProjectId referencedProjectId, RdTargetFramework referencedTargetFramework, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmProjectReferenceAdd();
    [CompilerGeneratedAttribute]
public RdProjectId get_ReferencedProjectId();
    [CompilerGeneratedAttribute]
private void set_ReferencedProjectId(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdTargetFramework get_ReferencedTargetFramework();
    [CompilerGeneratedAttribute]
private void set_ReferencedTargetFramework(RdTargetFramework value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmProjectReferenceAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeProjectTfmProjectReferenceRemove : RdChangeProjectTfmBase {
    [CompilerGeneratedAttribute]
private RdProjectId <ReferencedProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTargetFramework <ReferencedTargetFramework>k__BackingField;
    public static CtxReadDelegate`1<RdChangeProjectTfmProjectReferenceRemove> Read;
    public static CtxWriteDelegate`1<RdChangeProjectTfmProjectReferenceRemove> Write;
    [NotNullAttribute]
public RdProjectId ReferencedProjectId { get; private set; }
    [NotNullAttribute]
public RdTargetFramework ReferencedTargetFramework { get; private set; }
    public RdChangeProjectTfmProjectReferenceRemove(RdProjectId referencedProjectId, RdTargetFramework referencedTargetFramework, RdTargetFramework targetFramework, RdProjectId projectId);
    private static RdChangeProjectTfmProjectReferenceRemove();
    [CompilerGeneratedAttribute]
public RdProjectId get_ReferencedProjectId();
    [CompilerGeneratedAttribute]
private void set_ReferencedProjectId(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdTargetFramework get_ReferencedTargetFramework();
    [CompilerGeneratedAttribute]
private void set_ReferencedTargetFramework(RdTargetFramework value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeProjectTfmProjectReferenceRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeSolutionProjectAdd : RdChangeProjectModelBase {
    [CompilerGeneratedAttribute]
private RdProjectId <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private RdProjectCommonInfo <ProjectInfo>k__BackingField;
    public static CtxReadDelegate`1<RdChangeSolutionProjectAdd> Read;
    public static CtxWriteDelegate`1<RdChangeSolutionProjectAdd> Write;
    [NotNullAttribute]
public RdProjectId Id { get; private set; }
    [NotNullAttribute]
public RdProjectCommonInfo ProjectInfo { get; private set; }
    public RdChangeSolutionProjectAdd(RdProjectId id, RdProjectCommonInfo projectInfo);
    private static RdChangeSolutionProjectAdd();
    [CompilerGeneratedAttribute]
public RdProjectId get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdProjectCommonInfo get_ProjectInfo();
    [CompilerGeneratedAttribute]
private void set_ProjectInfo(RdProjectCommonInfo value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeSolutionProjectAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeSolutionProjectRemove : RdChangeProjectModelBase {
    [CompilerGeneratedAttribute]
private RdProjectId <Id>k__BackingField;
    public static CtxReadDelegate`1<RdChangeSolutionProjectRemove> Read;
    public static CtxWriteDelegate`1<RdChangeSolutionProjectRemove> Write;
    [NotNullAttribute]
public RdProjectId Id { get; private set; }
    public RdChangeSolutionProjectRemove(RdProjectId id);
    private static RdChangeSolutionProjectRemove();
    [CompilerGeneratedAttribute]
public RdProjectId get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(RdProjectId value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeSolutionProjectRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeSolutionTopLevelEditorConfigAdd : RdChangeProjectModelBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdChangeSolutionTopLevelEditorConfigAdd> Read;
    public static CtxWriteDelegate`1<RdChangeSolutionTopLevelEditorConfigAdd> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdChangeSolutionTopLevelEditorConfigAdd(string path);
    private static RdChangeSolutionTopLevelEditorConfigAdd();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeSolutionTopLevelEditorConfigAdd other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeSolutionTopLevelEditorConfigClear : RdChangeProjectModelBase {
    public static CtxReadDelegate`1<RdChangeSolutionTopLevelEditorConfigClear> Read;
    public static CtxWriteDelegate`1<RdChangeSolutionTopLevelEditorConfigClear> Write;
    private static RdChangeSolutionTopLevelEditorConfigClear();
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeSolutionTopLevelEditorConfigClear other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangeSolutionTopLevelEditorConfigRemove : RdChangeProjectModelBase {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdChangeSolutionTopLevelEditorConfigRemove> Read;
    public static CtxWriteDelegate`1<RdChangeSolutionTopLevelEditorConfigRemove> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    public RdChangeSolutionTopLevelEditorConfigRemove(string path);
    private static RdChangeSolutionTopLevelEditorConfigRemove();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdChangeSolutionTopLevelEditorConfigRemove other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdChangesVersion : object {
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    public static CtxReadDelegate`1<RdChangesVersion> Read;
    public static CtxWriteDelegate`1<RdChangesVersion> Write;
    public long Version { get; private set; }
    public RdChangesVersion(long version);
    private static RdChangesVersion();
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(long value);
    public void Deconstruct(Int64& version);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdChangesVersion other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdCloseDocumentRequest : RdDocumentRequest {
    public static CtxReadDelegate`1<RdCloseDocumentRequest> Read;
    public static CtxWriteDelegate`1<RdCloseDocumentRequest> Write;
    public RdCloseDocumentRequest(string path);
    private static RdCloseDocumentRequest();
    public virtual bool Equals(object obj);
    public bool Equals(RdCloseDocumentRequest other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdCodeActionInfo : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EquivalenceKey>k__BackingField;
    public static CtxReadDelegate`1<RdCodeActionInfo> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxWriteDelegate`1<RdCodeActionInfo> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    [NotNullAttribute]
public string Title { get; private set; }
    [CanBeNullAttribute]
public string EquivalenceKey { get; private set; }
    public RdCodeActionInfo(string title, string equivalenceKey);
    private static RdCodeActionInfo();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
private void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_EquivalenceKey();
    [CompilerGeneratedAttribute]
private void set_EquivalenceKey(string value);
    public void Deconstruct(String& title, String& equivalenceKey);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdCodeActionInfo other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdCodeActionRequestBase : object {
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    public static CtxReadDelegate`1<RdCodeActionRequestBase> Read;
    public static CtxWriteDelegate`1<RdCodeActionRequestBase> Write;
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    [NotNullAttribute]
public string FileName { get; private set; }
    protected RdCodeActionRequestBase(RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdCodeActionRequestBase();
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
private void set_FileName(string value);
}
public class JetBrains.Roslyn.Host.Models.RdCodeActionRequestBase_Unknown : RdCodeActionRequestBase {
    public static CtxReadDelegate`1<RdCodeActionRequestBase_Unknown> Read;
    public static CtxWriteDelegate`1<RdCodeActionRequestBase_Unknown> Write;
    public RdCodeActionRequestBase_Unknown(RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdCodeActionRequestBase_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdCodeActionRequestBase_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdCodeActionResult : object {
    [CompilerGeneratedAttribute]
private RdCodeActionStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserException>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdDocumentChangeArgs> <Changes>k__BackingField;
    public static CtxReadDelegate`1<RdCodeActionResult> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxReadDelegate`1<List`1<RdDocumentChangeArgs>> ReadRdDocumentChangeArgsListNullable;
    public static CtxWriteDelegate`1<RdCodeActionResult> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    public static CtxWriteDelegate`1<List`1<RdDocumentChangeArgs>> WriteRdDocumentChangeArgsListNullable;
    public RdCodeActionStatus Status { get; private set; }
    [CanBeNullAttribute]
public string UserException { get; private set; }
    [CanBeNullAttribute]
public List`1<RdDocumentChangeArgs> Changes { get; private set; }
    public RdCodeActionResult(RdCodeActionStatus status, string userException, List`1<RdDocumentChangeArgs> changes);
    private static RdCodeActionResult();
    [CompilerGeneratedAttribute]
public RdCodeActionStatus get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(RdCodeActionStatus value);
    [CompilerGeneratedAttribute]
public string get_UserException();
    [CompilerGeneratedAttribute]
private void set_UserException(string value);
    [CompilerGeneratedAttribute]
public List`1<RdDocumentChangeArgs> get_Changes();
    [CompilerGeneratedAttribute]
private void set_Changes(List`1<RdDocumentChangeArgs> value);
    public void Deconstruct(RdCodeActionStatus& status, String& userException, List`1& changes);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdCodeActionResult other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public enum JetBrains.Roslyn.Host.Models.RdCodeActionStatus : Enum {
    public int value__;
    public static RdCodeActionStatus Success;
    public static RdCodeActionStatus InternalError;
    public static RdCodeActionStatus UserException;
}
public class JetBrains.Roslyn.Host.Models.RdCompilationOutcome : object {
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdNotHandledProject> <NotHandledProjects>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdSourceGeneratorsError> <SourceGeneratorsErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdFailure> <Failures>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NothingChanged>k__BackingField;
    public static CtxReadDelegate`1<RdCompilationOutcome> Read;
    public static CtxReadDelegate`1<List`1<RdNotHandledProject>> ReadRdNotHandledProjectList;
    public static CtxReadDelegate`1<List`1<RdSourceGeneratorsError>> ReadRdSourceGeneratorsErrorList;
    public static CtxReadDelegate`1<List`1<RdFailure>> ReadRdFailureList;
    public static CtxWriteDelegate`1<RdCompilationOutcome> Write;
    public static CtxWriteDelegate`1<List`1<RdNotHandledProject>> WriteRdNotHandledProjectList;
    public static CtxWriteDelegate`1<List`1<RdSourceGeneratorsError>> WriteRdSourceGeneratorsErrorList;
    public static CtxWriteDelegate`1<List`1<RdFailure>> WriteRdFailureList;
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    [NotNullAttribute]
public List`1<RdNotHandledProject> NotHandledProjects { get; private set; }
    [NotNullAttribute]
public List`1<RdSourceGeneratorsError> SourceGeneratorsErrors { get; private set; }
    [NotNullAttribute]
public List`1<RdFailure> Failures { get; private set; }
    public bool NothingChanged { get; private set; }
    public RdCompilationOutcome(RdChangesVersion changesVersion, List`1<RdNotHandledProject> notHandledProjects, List`1<RdSourceGeneratorsError> sourceGeneratorsErrors, List`1<RdFailure> failures, bool nothingChanged);
    private static RdCompilationOutcome();
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    [CompilerGeneratedAttribute]
public List`1<RdNotHandledProject> get_NotHandledProjects();
    [CompilerGeneratedAttribute]
private void set_NotHandledProjects(List`1<RdNotHandledProject> value);
    [CompilerGeneratedAttribute]
public List`1<RdSourceGeneratorsError> get_SourceGeneratorsErrors();
    [CompilerGeneratedAttribute]
private void set_SourceGeneratorsErrors(List`1<RdSourceGeneratorsError> value);
    [CompilerGeneratedAttribute]
public List`1<RdFailure> get_Failures();
    [CompilerGeneratedAttribute]
private void set_Failures(List`1<RdFailure> value);
    [CompilerGeneratedAttribute]
public bool get_NothingChanged();
    [CompilerGeneratedAttribute]
private void set_NothingChanged(bool value);
    public void Deconstruct(RdChangesVersion& changesVersion, List`1& notHandledProjects, List`1& sourceGeneratorsErrors, List`1& failures, Boolean& nothingChanged);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdCompilationOutcome other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdCompilationsEntry : RdBindableBase {
    [NotNullAttribute]
private RdProperty`1<bool> _TrackingEnabled;
    [NotNullAttribute]
private RdSignal`1<RdCompilationOutcome> _Completed;
    public static CtxReadDelegate`1<RdCompilationsEntry> Read;
    public static CtxWriteDelegate`1<RdCompilationsEntry> Write;
    [NotNullAttribute]
public IViewableProperty`1<bool> TrackingEnabled { get; }
    [NotNullAttribute]
public ISignal`1<RdCompilationOutcome> Completed { get; }
    private RdCompilationsEntry(RdProperty`1<bool> trackingEnabled, RdSignal`1<RdCompilationOutcome> completed);
    private static RdCompilationsEntry();
    public IViewableProperty`1<bool> get_TrackingEnabled();
    public ISignal`1<RdCompilationOutcome> get_Completed();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdCoords : object {
    [CompilerGeneratedAttribute]
private int <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Column>k__BackingField;
    public static CtxReadDelegate`1<RdCoords> Read;
    public static CtxWriteDelegate`1<RdCoords> Write;
    public int Line { get; private set; }
    public int Column { get; private set; }
    public RdCoords(int line, int column);
    private static RdCoords();
    [CompilerGeneratedAttribute]
public int get_Line();
    [CompilerGeneratedAttribute]
private void set_Line(int value);
    [CompilerGeneratedAttribute]
public int get_Column();
    [CompilerGeneratedAttribute]
private void set_Column(int value);
    public void Deconstruct(Int32& line, Int32& column);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdCoords other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDebugHotReloadService : RdBindableBase {
    [NotNullAttribute]
private RdCall`2<Unit, RdDebugPauseSessionModel> _StartPauseSession;
    [NotNullAttribute]
private RdCall`2<int, List`1<RdHotReloadDelta>> _GetHotReloadDelta;
    public static CtxReadDelegate`1<RdDebugHotReloadService> Read;
    public static CtxReadDelegate`1<List`1<RdHotReloadDelta>> ReadRdHotReloadDeltaList;
    public static CtxWriteDelegate`1<RdDebugHotReloadService> Write;
    public static CtxWriteDelegate`1<List`1<RdHotReloadDelta>> WriteRdHotReloadDeltaList;
    [NotNullAttribute]
public IRdCall`2<Unit, RdDebugPauseSessionModel> StartPauseSession { get; }
    [NotNullAttribute]
public IRdCall`2<int, List`1<RdHotReloadDelta>> GetHotReloadDelta { get; }
    private RdDebugHotReloadService(RdCall`2<Unit, RdDebugPauseSessionModel> startPauseSession, RdCall`2<int, List`1<RdHotReloadDelta>> getHotReloadDelta);
    private static RdDebugHotReloadService();
    public IRdCall`2<Unit, RdDebugPauseSessionModel> get_StartPauseSession();
    public IRdCall`2<int, List`1<RdHotReloadDelta>> get_GetHotReloadDelta();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDebugHotReloadServiceArg : object {
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    public static CtxReadDelegate`1<RdDebugHotReloadServiceArg> Read;
    public static CtxWriteDelegate`1<RdDebugHotReloadServiceArg> Write;
    public int Port { get; private set; }
    public long Id { get; private set; }
    public RdDebugHotReloadServiceArg(int port, long id);
    private static RdDebugHotReloadServiceArg();
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
private void set_Port(int value);
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(long value);
    public void Deconstruct(Int32& port, Int64& id);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdDebugHotReloadServiceArg other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDebugPauseSessionModel : RdBindableBase {
    [NotNullAttribute]
private RdCall`2<Unit, RdHotReloadBuildDeltaResult> _BuildDelta;
    public static CtxReadDelegate`1<RdDebugPauseSessionModel> Read;
    public static CtxWriteDelegate`1<RdDebugPauseSessionModel> Write;
    [NotNullAttribute]
public IRdCall`2<Unit, RdHotReloadBuildDeltaResult> BuildDelta { get; }
    private RdDebugPauseSessionModel(RdCall`2<Unit, RdHotReloadBuildDeltaResult> buildDelta);
    private static RdDebugPauseSessionModel();
    public IRdCall`2<Unit, RdHotReloadBuildDeltaResult> get_BuildDelta();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDiagnosticDescriptor : object {
    [CompilerGeneratedAttribute]
private string <DiagnosticDescriptorId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpLinkUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private RoslynSeverity <DefaultSeverity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabledByDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <CustomTags>k__BackingField;
    public static CtxReadDelegate`1<RdDiagnosticDescriptor> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxReadDelegate`1<String[]> ReadStringArray;
    public static CtxWriteDelegate`1<RdDiagnosticDescriptor> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    public static CtxWriteDelegate`1<String[]> WriteStringArray;
    [NotNullAttribute]
public string DiagnosticDescriptorId { get; private set; }
    public bool IsEnc { get; private set; }
    [NotNullAttribute]
public string Category { get; private set; }
    [NotNullAttribute]
public string Title { get; private set; }
    [NotNullAttribute]
public string Description { get; private set; }
    [CanBeNullAttribute]
public string HelpLinkUrl { get; private set; }
    public RoslynSeverity DefaultSeverity { get; private set; }
    public bool IsEnabledByDefault { get; private set; }
    [NotNullAttribute]
public String[] CustomTags { get; private set; }
    public RdDiagnosticDescriptor(string diagnosticDescriptorId, bool isEnc, string category, string title, string description, string helpLinkUrl, RoslynSeverity defaultSeverity, bool isEnabledByDefault, String[] customTags);
    private static RdDiagnosticDescriptor();
    [CompilerGeneratedAttribute]
public string get_DiagnosticDescriptorId();
    [CompilerGeneratedAttribute]
private void set_DiagnosticDescriptorId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEnc();
    [CompilerGeneratedAttribute]
private void set_IsEnc(bool value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
private void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
private void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_HelpLinkUrl();
    [CompilerGeneratedAttribute]
private void set_HelpLinkUrl(string value);
    [CompilerGeneratedAttribute]
public RoslynSeverity get_DefaultSeverity();
    [CompilerGeneratedAttribute]
private void set_DefaultSeverity(RoslynSeverity value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabledByDefault();
    [CompilerGeneratedAttribute]
private void set_IsEnabledByDefault(bool value);
    [CompilerGeneratedAttribute]
public String[] get_CustomTags();
    [CompilerGeneratedAttribute]
private void set_CustomTags(String[] value);
    public void Deconstruct(String& diagnosticDescriptorId, Boolean& isEnc, String& category, String& title, String& description, String& helpLinkUrl, RoslynSeverity& defaultSeverity, Boolean& isEnabledByDefault, String[]& customTags);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdDiagnosticDescriptor other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDiagnosticDescriptorRef : object {
    [CompilerGeneratedAttribute]
private string <DiagnosticDescriptorId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdAnalyzerReference <Reference>k__BackingField;
    public static CtxReadDelegate`1<RdDiagnosticDescriptorRef> Read;
    public static CtxWriteDelegate`1<RdDiagnosticDescriptorRef> Write;
    [NotNullAttribute]
public string DiagnosticDescriptorId { get; private set; }
    [NotNullAttribute]
public RdAnalyzerReference Reference { get; private set; }
    public RdDiagnosticDescriptorRef(string diagnosticDescriptorId, RdAnalyzerReference reference);
    private static RdDiagnosticDescriptorRef();
    [CompilerGeneratedAttribute]
public string get_DiagnosticDescriptorId();
    [CompilerGeneratedAttribute]
private void set_DiagnosticDescriptorId(string value);
    [CompilerGeneratedAttribute]
public RdAnalyzerReference get_Reference();
    [CompilerGeneratedAttribute]
private void set_Reference(RdAnalyzerReference value);
    public void Deconstruct(String& diagnosticDescriptorId, RdAnalyzerReference& reference);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdDiagnosticDescriptorRef other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDiagnosticHighlighter : object {
    [CompilerGeneratedAttribute]
private RdDiagnosticHighlighterKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnc>k__BackingField;
    public static CtxReadDelegate`1<RdDiagnosticHighlighter> Read;
    public static CtxWriteDelegate`1<RdDiagnosticHighlighter> Write;
    [NotNullAttribute]
public RdDiagnosticHighlighterKey Key { get; private set; }
    [NotNullAttribute]
public string Title { get; private set; }
    [NotNullAttribute]
public string Category { get; private set; }
    public bool IsEnc { get; private set; }
    public RdDiagnosticHighlighter(RdDiagnosticHighlighterKey key, string title, string category, bool isEnc);
    private static RdDiagnosticHighlighter();
    [CompilerGeneratedAttribute]
public RdDiagnosticHighlighterKey get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(RdDiagnosticHighlighterKey value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
private void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
private void set_Category(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEnc();
    [CompilerGeneratedAttribute]
private void set_IsEnc(bool value);
    public void Deconstruct(RdDiagnosticHighlighterKey& key, String& title, String& category, Boolean& isEnc);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdDiagnosticHighlighter other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDiagnosticHighlighterKey : object {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private RdCoords <StartCoords>k__BackingField;
    [CompilerGeneratedAttribute]
private RdCoords <EndCoords>k__BackingField;
    public static CtxReadDelegate`1<RdDiagnosticHighlighterKey> Read;
    public static CtxWriteDelegate`1<RdDiagnosticHighlighterKey> Write;
    [NotNullAttribute]
public string DiagnosticId { get; private set; }
    [NotNullAttribute]
public string Message { get; private set; }
    [NotNullAttribute]
public RdCoords StartCoords { get; private set; }
    [NotNullAttribute]
public RdCoords EndCoords { get; private set; }
    public RdDiagnosticHighlighterKey(string diagnosticId, string message, RdCoords startCoords, RdCoords endCoords);
    private static RdDiagnosticHighlighterKey();
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [CompilerGeneratedAttribute]
private void set_DiagnosticId(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public RdCoords get_StartCoords();
    [CompilerGeneratedAttribute]
private void set_StartCoords(RdCoords value);
    [CompilerGeneratedAttribute]
public RdCoords get_EndCoords();
    [CompilerGeneratedAttribute]
private void set_EndCoords(RdCoords value);
    public void Deconstruct(String& diagnosticId, String& message, RdCoords& startCoords, RdCoords& endCoords);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdDiagnosticHighlighterKey other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDiagnosticProperty : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static CtxReadDelegate`1<RdDiagnosticProperty> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxWriteDelegate`1<RdDiagnosticProperty> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    [NotNullAttribute]
public string Key { get; private set; }
    [CanBeNullAttribute]
public string Value { get; private set; }
    public RdDiagnosticProperty(string key, string value);
    private static RdDiagnosticProperty();
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    public void Deconstruct(String& key, String& value);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdDiagnosticProperty other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDiagnosticsSync : RdProcedureResult {
    [CompilerGeneratedAttribute]
private RdAnalyzersKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdDiagnosticDescriptorRef> <Diagnostics>k__BackingField;
    public static CtxReadDelegate`1<RdDiagnosticsSync> Read;
    public static CtxReadDelegate`1<List`1<RdDiagnosticDescriptorRef>> ReadRdDiagnosticDescriptorRefList;
    public static CtxWriteDelegate`1<RdDiagnosticsSync> Write;
    public static CtxWriteDelegate`1<List`1<RdDiagnosticDescriptorRef>> WriteRdDiagnosticDescriptorRefList;
    [NotNullAttribute]
public RdAnalyzersKey Key { get; private set; }
    [NotNullAttribute]
public List`1<RdDiagnosticDescriptorRef> Diagnostics { get; private set; }
    public RdDiagnosticsSync(RdAnalyzersKey key, List`1<RdDiagnosticDescriptorRef> diagnostics);
    private static RdDiagnosticsSync();
    [CompilerGeneratedAttribute]
public RdAnalyzersKey get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(RdAnalyzersKey value);
    [CompilerGeneratedAttribute]
public List`1<RdDiagnosticDescriptorRef> get_Diagnostics();
    [CompilerGeneratedAttribute]
private void set_Diagnostics(List`1<RdDiagnosticDescriptorRef> value);
    public virtual bool Equals(object obj);
    public bool Equals(RdDiagnosticsSync other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDocumentChangeArgs : object {
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTextBufferChange <Change>k__BackingField;
    public static CtxReadDelegate`1<RdDocumentChangeArgs> Read;
    public static CtxWriteDelegate`1<RdDocumentChangeArgs> Write;
    [NotNullAttribute]
public string FilePath { get; private set; }
    [NotNullAttribute]
public RdTextBufferChange Change { get; private set; }
    public RdDocumentChangeArgs(string filePath, RdTextBufferChange change);
    private static RdDocumentChangeArgs();
    [CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
private void set_FilePath(string value);
    [CompilerGeneratedAttribute]
public RdTextBufferChange get_Change();
    [CompilerGeneratedAttribute]
private void set_Change(RdTextBufferChange value);
    public void Deconstruct(String& filePath, RdTextBufferChange& change);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdDocumentChangeArgs other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdDocumentRequest : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public static CtxReadDelegate`1<RdDocumentRequest> Read;
    public static CtxWriteDelegate`1<RdDocumentRequest> Write;
    [NotNullAttribute]
public string Path { get; private set; }
    protected RdDocumentRequest(string path);
    private static RdDocumentRequest();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
}
public class JetBrains.Roslyn.Host.Models.RdDocumentRequest_Unknown : RdDocumentRequest {
    public static CtxReadDelegate`1<RdDocumentRequest_Unknown> Read;
    public static CtxWriteDelegate`1<RdDocumentRequest_Unknown> Write;
    public RdDocumentRequest_Unknown(string path);
    private static RdDocumentRequest_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdDocumentRequest_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdDumpEntry : RdBindableBase {
    [NotNullAttribute]
private RdCall`2<Unit, string> _DumpProjectModel;
    [NotNullAttribute]
private RdCall`2<List`1<string>, string> _DumpDocuments;
    public static CtxReadDelegate`1<RdDumpEntry> Read;
    public static CtxReadDelegate`1<List`1<string>> ReadStringList;
    public static CtxWriteDelegate`1<RdDumpEntry> Write;
    public static CtxWriteDelegate`1<List`1<string>> WriteStringList;
    [NotNullAttribute]
public IRdCall`2<Unit, string> DumpProjectModel { get; }
    [NotNullAttribute]
public IRdCall`2<List`1<string>, string> DumpDocuments { get; }
    private RdDumpEntry(RdCall`2<Unit, string> dumpProjectModel, RdCall`2<List`1<string>, string> dumpDocuments);
    private static RdDumpEntry();
    public IRdCall`2<Unit, string> get_DumpProjectModel();
    public IRdCall`2<List`1<string>, string> get_DumpDocuments();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdFailure : RdProcedureResult {
    [CompilerGeneratedAttribute]
private string <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetFrameworkId>k__BackingField;
    public static CtxReadDelegate`1<RdFailure> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxWriteDelegate`1<RdFailure> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    [NotNullAttribute]
public string Exception { get; private set; }
    [CanBeNullAttribute]
public string ProjectPath { get; private set; }
    [CanBeNullAttribute]
public string TargetFrameworkId { get; private set; }
    public RdFailure(string exception, string projectPath, string targetFrameworkId);
    private static RdFailure();
    [CompilerGeneratedAttribute]
public string get_Exception();
    [CompilerGeneratedAttribute]
private void set_Exception(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectPath();
    [CompilerGeneratedAttribute]
private void set_ProjectPath(string value);
    [CompilerGeneratedAttribute]
public string get_TargetFrameworkId();
    [CompilerGeneratedAttribute]
private void set_TargetFrameworkId(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdFailure other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdGeneratedDocument : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <DocumentIdGuid>k__BackingField;
    public static CtxReadDelegate`1<RdGeneratedDocument> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxWriteDelegate`1<RdGeneratedDocument> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    [NotNullAttribute]
public string Path { get; private set; }
    [CanBeNullAttribute]
public string Text { get; private set; }
    public int Encoding { get; private set; }
    [NotNullAttribute]
public Byte[] DocumentIdGuid { get; private set; }
    public RdGeneratedDocument(string path, string text, int encoding, Byte[] documentIdGuid);
    private static RdGeneratedDocument();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    [CompilerGeneratedAttribute]
public int get_Encoding();
    [CompilerGeneratedAttribute]
private void set_Encoding(int value);
    [CompilerGeneratedAttribute]
public Byte[] get_DocumentIdGuid();
    [CompilerGeneratedAttribute]
private void set_DocumentIdGuid(Byte[] value);
    public void Deconstruct(String& path, String& text, Int32& encoding, Byte[]& documentIdGuid);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdGeneratedDocument other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdGeneratedResult : object {
    [CompilerGeneratedAttribute]
private string <ProjectPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetFrameworkId>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdGeneratedDocument> <GeneratedDocuments>k__BackingField;
    public static CtxReadDelegate`1<RdGeneratedResult> Read;
    public static CtxReadDelegate`1<List`1<RdGeneratedDocument>> ReadRdGeneratedDocumentList;
    public static CtxWriteDelegate`1<RdGeneratedResult> Write;
    public static CtxWriteDelegate`1<List`1<RdGeneratedDocument>> WriteRdGeneratedDocumentList;
    [NotNullAttribute]
public string ProjectPath { get; private set; }
    [NotNullAttribute]
public string TargetFrameworkId { get; private set; }
    [NotNullAttribute]
public Byte[] ProjectId { get; private set; }
    [NotNullAttribute]
public List`1<RdGeneratedDocument> GeneratedDocuments { get; private set; }
    public RdGeneratedResult(string projectPath, string targetFrameworkId, Byte[] projectId, List`1<RdGeneratedDocument> generatedDocuments);
    private static RdGeneratedResult();
    [CompilerGeneratedAttribute]
public string get_ProjectPath();
    [CompilerGeneratedAttribute]
private void set_ProjectPath(string value);
    [CompilerGeneratedAttribute]
public string get_TargetFrameworkId();
    [CompilerGeneratedAttribute]
private void set_TargetFrameworkId(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(Byte[] value);
    [CompilerGeneratedAttribute]
public List`1<RdGeneratedDocument> get_GeneratedDocuments();
    [CompilerGeneratedAttribute]
private void set_GeneratedDocuments(List`1<RdGeneratedDocument> value);
    public void Deconstruct(String& projectPath, String& targetFrameworkId, Byte[]& projectId, List`1& generatedDocuments);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdGeneratedResult other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdGetHighlighterArgs : object {
    [CompilerGeneratedAttribute]
private int <LineCount>k__BackingField;
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzersKind <AnalyzersKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequestedBySwea>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SweaRunVersion>k__BackingField;
    public static CtxReadDelegate`1<RdGetHighlighterArgs> Read;
    public static CtxWriteDelegate`1<RdGetHighlighterArgs> Write;
    public int LineCount { get; private set; }
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    [NotNullAttribute]
public string FileName { get; private set; }
    public AnalyzersKind AnalyzersKind { get; private set; }
    public bool RequestedBySwea { get; private set; }
    public long SweaRunVersion { get; private set; }
    public RdGetHighlighterArgs(int lineCount, RdProjectId projectId, RdTargetFramework targetFramework, string fileName, AnalyzersKind analyzersKind, bool requestedBySwea, long sweaRunVersion);
    private static RdGetHighlighterArgs();
    [CompilerGeneratedAttribute]
public int get_LineCount();
    [CompilerGeneratedAttribute]
private void set_LineCount(int value);
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
private void set_FileName(string value);
    [CompilerGeneratedAttribute]
public AnalyzersKind get_AnalyzersKind();
    [CompilerGeneratedAttribute]
private void set_AnalyzersKind(AnalyzersKind value);
    [CompilerGeneratedAttribute]
public bool get_RequestedBySwea();
    [CompilerGeneratedAttribute]
private void set_RequestedBySwea(bool value);
    [CompilerGeneratedAttribute]
public long get_SweaRunVersion();
    [CompilerGeneratedAttribute]
private void set_SweaRunVersion(long value);
    public void Deconstruct(Int32& lineCount, RdProjectId& projectId, RdTargetFramework& targetFramework, String& fileName, AnalyzersKind& analyzersKind, Boolean& requestedBySwea, Int64& sweaRunVersion);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdGetHighlighterArgs other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdGetNewSeverity : object {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private RoslynSeverity <DefaultSeverity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabledByDefault>k__BackingField;
    public static CtxReadDelegate`1<RdGetNewSeverity> Read;
    public static CtxWriteDelegate`1<RdGetNewSeverity> Write;
    [NotNullAttribute]
public string DiagnosticId { get; private set; }
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    [NotNullAttribute]
public string FileName { get; private set; }
    public RoslynSeverity DefaultSeverity { get; private set; }
    public bool IsEnabledByDefault { get; private set; }
    public RdGetNewSeverity(string diagnosticId, RdProjectId projectId, RdTargetFramework targetFramework, string fileName, RoslynSeverity defaultSeverity, bool isEnabledByDefault);
    private static RdGetNewSeverity();
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [CompilerGeneratedAttribute]
private void set_DiagnosticId(string value);
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
private void set_FileName(string value);
    [CompilerGeneratedAttribute]
public RoslynSeverity get_DefaultSeverity();
    [CompilerGeneratedAttribute]
private void set_DefaultSeverity(RoslynSeverity value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabledByDefault();
    [CompilerGeneratedAttribute]
private void set_IsEnabledByDefault(bool value);
    public void Deconstruct(String& diagnosticId, RdProjectId& projectId, RdTargetFramework& targetFramework, String& fileName, RoslynSeverity& defaultSeverity, Boolean& isEnabledByDefault);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdGetNewSeverity other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdHighlighter : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HtmlTooltip>k__BackingField;
    [CompilerGeneratedAttribute]
private RoslynSeverity <Severity>k__BackingField;
    [CompilerGeneratedAttribute]
private RdDiagnosticHighlighter <Diagnostic>k__BackingField;
    public static CtxReadDelegate`1<RdHighlighter> Read;
    public static CtxWriteDelegate`1<RdHighlighter> Write;
    [NotNullAttribute]
public string Text { get; private set; }
    [NotNullAttribute]
public string HtmlTooltip { get; private set; }
    public RoslynSeverity Severity { get; private set; }
    [NotNullAttribute]
public RdDiagnosticHighlighter Diagnostic { get; private set; }
    public RdHighlighter(string text, string htmlTooltip, RoslynSeverity severity, RdDiagnosticHighlighter diagnostic);
    private static RdHighlighter();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_HtmlTooltip();
    [CompilerGeneratedAttribute]
private void set_HtmlTooltip(string value);
    [CompilerGeneratedAttribute]
public RoslynSeverity get_Severity();
    [CompilerGeneratedAttribute]
private void set_Severity(RoslynSeverity value);
    [CompilerGeneratedAttribute]
public RdDiagnosticHighlighter get_Diagnostic();
    [CompilerGeneratedAttribute]
private void set_Diagnostic(RdDiagnosticHighlighter value);
    public void Deconstruct(String& text, String& htmlTooltip, RoslynSeverity& severity, RdDiagnosticHighlighter& diagnostic);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdHighlighter other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdHotReloadApplyDeltaDiagnostic : object {
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public static CtxReadDelegate`1<RdHotReloadApplyDeltaDiagnostic> Read;
    public static CtxWriteDelegate`1<RdHotReloadApplyDeltaDiagnostic> Write;
    [NotNullAttribute]
public string ModuleName { get; private set; }
    [NotNullAttribute]
public string Message { get; private set; }
    public RdHotReloadApplyDeltaDiagnostic(string moduleName, string message);
    private static RdHotReloadApplyDeltaDiagnostic();
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
private void set_ModuleName(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    public void Deconstruct(String& moduleName, String& message);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdHotReloadApplyDeltaDiagnostic other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdHotReloadBuildDeltaResult : object {
    [CompilerGeneratedAttribute]
private RdHotReloadBuildRoslynDeltaResultKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdHotReloadDiagnostic> <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BuildId>k__BackingField;
    public static CtxReadDelegate`1<RdHotReloadBuildDeltaResult> Read;
    public static CtxReadDelegate`1<List`1<RdHotReloadDiagnostic>> ReadRdHotReloadDiagnosticListNullable;
    public static CtxReadDelegate`1<Nullable`1<int>> ReadIntNullable;
    public static CtxWriteDelegate`1<RdHotReloadBuildDeltaResult> Write;
    public static CtxWriteDelegate`1<List`1<RdHotReloadDiagnostic>> WriteRdHotReloadDiagnosticListNullable;
    public static CtxWriteDelegate`1<Nullable`1<int>> WriteIntNullable;
    public RdHotReloadBuildRoslynDeltaResultKind Kind { get; private set; }
    [CanBeNullAttribute]
public List`1<RdHotReloadDiagnostic> Diagnostics { get; private set; }
    [CanBeNullAttribute]
public Nullable`1<int> BuildId { get; private set; }
    public RdHotReloadBuildDeltaResult(RdHotReloadBuildRoslynDeltaResultKind kind, List`1<RdHotReloadDiagnostic> diagnostics, Nullable`1<int> buildId);
    private static RdHotReloadBuildDeltaResult();
    [CompilerGeneratedAttribute]
public RdHotReloadBuildRoslynDeltaResultKind get_Kind();
    [CompilerGeneratedAttribute]
private void set_Kind(RdHotReloadBuildRoslynDeltaResultKind value);
    [CompilerGeneratedAttribute]
public List`1<RdHotReloadDiagnostic> get_Diagnostics();
    [CompilerGeneratedAttribute]
private void set_Diagnostics(List`1<RdHotReloadDiagnostic> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BuildId();
    [CompilerGeneratedAttribute]
private void set_BuildId(Nullable`1<int> value);
    public void Deconstruct(RdHotReloadBuildRoslynDeltaResultKind& kind, List`1& diagnostics, Nullable`1& buildId);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdHotReloadBuildDeltaResult other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public enum JetBrains.Roslyn.Host.Models.RdHotReloadBuildRoslynDeltaResultKind : Enum {
    public int value__;
    public static RdHotReloadBuildRoslynDeltaResultKind Success;
    public static RdHotReloadBuildRoslynDeltaResultKind Failed;
    public static RdHotReloadBuildRoslynDeltaResultKind InternalError;
    public static RdHotReloadBuildRoslynDeltaResultKind NoChanges;
}
public class JetBrains.Roslyn.Host.Models.RdHotReloadDelta : object {
    [CompilerGeneratedAttribute]
private Guid <ModuleId>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <MetadataDelta>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <IlDelta>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <UpdatedTypes>k__BackingField;
    public static CtxReadDelegate`1<RdHotReloadDelta> Read;
    public static CtxReadDelegate`1<List`1<int>> ReadIntList;
    public static CtxWriteDelegate`1<RdHotReloadDelta> Write;
    public static CtxWriteDelegate`1<List`1<int>> WriteIntList;
    public Guid ModuleId { get; private set; }
    [NotNullAttribute]
public Byte[] MetadataDelta { get; private set; }
    [NotNullAttribute]
public Byte[] IlDelta { get; private set; }
    [NotNullAttribute]
public List`1<int> UpdatedTypes { get; private set; }
    public RdHotReloadDelta(Guid moduleId, Byte[] metadataDelta, Byte[] ilDelta, List`1<int> updatedTypes);
    private static RdHotReloadDelta();
    [CompilerGeneratedAttribute]
public Guid get_ModuleId();
    [CompilerGeneratedAttribute]
private void set_ModuleId(Guid value);
    [CompilerGeneratedAttribute]
public Byte[] get_MetadataDelta();
    [CompilerGeneratedAttribute]
private void set_MetadataDelta(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_IlDelta();
    [CompilerGeneratedAttribute]
private void set_IlDelta(Byte[] value);
    [CompilerGeneratedAttribute]
public List`1<int> get_UpdatedTypes();
    [CompilerGeneratedAttribute]
private void set_UpdatedTypes(List`1<int> value);
    public void Deconstruct(Guid& moduleId, Byte[]& metadataDelta, Byte[]& ilDelta, List`1& updatedTypes);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdHotReloadDelta other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdHotReloadDiagnostic : object {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ProjectGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private RdCoords <Coords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public static CtxReadDelegate`1<RdHotReloadDiagnostic> Read;
    public static CtxWriteDelegate`1<RdHotReloadDiagnostic> Write;
    [NotNullAttribute]
public string DiagnosticId { get; private set; }
    public Guid ProjectGuid { get; private set; }
    [NotNullAttribute]
public string FilePath { get; private set; }
    [NotNullAttribute]
public RdCoords Coords { get; private set; }
    [NotNullAttribute]
public string Message { get; private set; }
    public RdHotReloadDiagnostic(string diagnosticId, Guid projectGuid, string filePath, RdCoords coords, string message);
    private static RdHotReloadDiagnostic();
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [CompilerGeneratedAttribute]
private void set_DiagnosticId(string value);
    [CompilerGeneratedAttribute]
public Guid get_ProjectGuid();
    [CompilerGeneratedAttribute]
private void set_ProjectGuid(Guid value);
    [CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
private void set_FilePath(string value);
    [CompilerGeneratedAttribute]
public RdCoords get_Coords();
    [CompilerGeneratedAttribute]
private void set_Coords(RdCoords value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    public void Deconstruct(String& diagnosticId, Guid& projectGuid, String& filePath, RdCoords& coords, String& message);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdHotReloadDiagnostic other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdHotReloadManagerModel : RdBindableBase {
    [CompilerGeneratedAttribute]
private bool <EncDiagnosticsEnabled>k__BackingField;
    [NotNullAttribute]
private RdSignal`1<Unit> _Ready;
    [NotNullAttribute]
private RdCall`2<Unit, RdHotReloadSessionModel> _StartHotReloadSession;
    public static CtxReadDelegate`1<RdHotReloadManagerModel> Read;
    public static CtxWriteDelegate`1<RdHotReloadManagerModel> Write;
    public bool EncDiagnosticsEnabled { get; private set; }
    [NotNullAttribute]
public ISource`1<Unit> Ready { get; }
    [NotNullAttribute]
public IRdCall`2<Unit, RdHotReloadSessionModel> StartHotReloadSession { get; }
    private RdHotReloadManagerModel(bool encDiagnosticsEnabled, RdSignal`1<Unit> ready, RdCall`2<Unit, RdHotReloadSessionModel> startHotReloadSession);
    public RdHotReloadManagerModel(bool encDiagnosticsEnabled);
    private static RdHotReloadManagerModel();
    [CompilerGeneratedAttribute]
public bool get_EncDiagnosticsEnabled();
    [CompilerGeneratedAttribute]
private void set_EncDiagnosticsEnabled(bool value);
    public ISource`1<Unit> get_Ready();
    public IRdCall`2<Unit, RdHotReloadSessionModel> get_StartHotReloadSession();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdHotReloadSessionModel : RdBindableBase {
    [NotNullAttribute]
private RdCall`2<RdPrepareRuntimeHotReloadArg, RdPrepareRuntimeHotReloadResult> _PrepareRuntimeHotReload;
    [NotNullAttribute]
private RdCall`2<RdPrepareDebugHotReloadArg, RdPrepareDebugHotReloadResult> _PrepareDebugHotReload;
    public static CtxReadDelegate`1<RdHotReloadSessionModel> Read;
    public static CtxWriteDelegate`1<RdHotReloadSessionModel> Write;
    [NotNullAttribute]
public IRdCall`2<RdPrepareRuntimeHotReloadArg, RdPrepareRuntimeHotReloadResult> PrepareRuntimeHotReload { get; }
    [NotNullAttribute]
public IRdCall`2<RdPrepareDebugHotReloadArg, RdPrepareDebugHotReloadResult> PrepareDebugHotReload { get; }
    private RdHotReloadSessionModel(RdCall`2<RdPrepareRuntimeHotReloadArg, RdPrepareRuntimeHotReloadResult> prepareRuntimeHotReload, RdCall`2<RdPrepareDebugHotReloadArg, RdPrepareDebugHotReloadResult> prepareDebugHotReload);
    private static RdHotReloadSessionModel();
    public IRdCall`2<RdPrepareRuntimeHotReloadArg, RdPrepareRuntimeHotReloadResult> get_PrepareRuntimeHotReload();
    public IRdCall`2<RdPrepareDebugHotReloadArg, RdPrepareDebugHotReloadResult> get_PrepareDebugHotReload();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdLaunchQuickFixArgs : RdQuickFixRequestBase {
    [CompilerGeneratedAttribute]
private RdQuickFixDescriptor <QuickFixDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    public static CtxReadDelegate`1<RdLaunchQuickFixArgs> Read;
    public static CtxWriteDelegate`1<RdLaunchQuickFixArgs> Write;
    [NotNullAttribute]
public RdQuickFixDescriptor QuickFixDescriptor { get; private set; }
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    public RdLaunchQuickFixArgs(RdQuickFixDescriptor quickFixDescriptor, RdChangesVersion changesVersion, RdDiagnosticHighlighterKey diagnosticHighlighterKey, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdLaunchQuickFixArgs();
    [CompilerGeneratedAttribute]
public RdQuickFixDescriptor get_QuickFixDescriptor();
    [CompilerGeneratedAttribute]
private void set_QuickFixDescriptor(RdQuickFixDescriptor value);
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    public virtual bool Equals(object obj);
    public bool Equals(RdLaunchQuickFixArgs other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdLaunchRefactoringArgs : RdRefactoringRequestBase {
    [CompilerGeneratedAttribute]
private RdRefactoringCodeAction <RefactoringCodeAction>k__BackingField;
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    public static CtxReadDelegate`1<RdLaunchRefactoringArgs> Read;
    public static CtxWriteDelegate`1<RdLaunchRefactoringArgs> Write;
    [NotNullAttribute]
public RdRefactoringCodeAction RefactoringCodeAction { get; private set; }
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    public RdLaunchRefactoringArgs(RdRefactoringCodeAction refactoringCodeAction, RdChangesVersion changesVersion, RdCoords coords, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdLaunchRefactoringArgs();
    [CompilerGeneratedAttribute]
public RdRefactoringCodeAction get_RefactoringCodeAction();
    [CompilerGeneratedAttribute]
private void set_RefactoringCodeAction(RdRefactoringCodeAction value);
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    public virtual bool Equals(object obj);
    public bool Equals(RdLaunchRefactoringArgs other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdNotHandledProject : object {
    [CompilerGeneratedAttribute]
private string <ProjectPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetFrameworkId>k__BackingField;
    public static CtxReadDelegate`1<RdNotHandledProject> Read;
    public static CtxWriteDelegate`1<RdNotHandledProject> Write;
    [NotNullAttribute]
public string ProjectPath { get; private set; }
    [NotNullAttribute]
public string TargetFrameworkId { get; private set; }
    public RdNotHandledProject(string projectPath, string targetFrameworkId);
    private static RdNotHandledProject();
    [CompilerGeneratedAttribute]
public string get_ProjectPath();
    [CompilerGeneratedAttribute]
private void set_ProjectPath(string value);
    [CompilerGeneratedAttribute]
public string get_TargetFrameworkId();
    [CompilerGeneratedAttribute]
private void set_TargetFrameworkId(string value);
    public void Deconstruct(String& projectPath, String& targetFrameworkId);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdNotHandledProject other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdObservabilityEntry : RdBindableBase {
    [NotNullAttribute]
private RdProperty`1<List`1<string>> _TraceCategories;
    [NotNullAttribute]
private RdSignal`1<string> _ErrorOccurred;
    [NotNullAttribute]
private RdProperty`1<bool> _LogWarnAsError;
    [NotNullAttribute]
private RdSignal`1<List`1<RdThirdPartyError>> _ThirdPartyErrorSink;
    public static CtxReadDelegate`1<RdObservabilityEntry> Read;
    public static CtxReadDelegate`1<List`1<string>> ReadStringList;
    public static CtxReadDelegate`1<List`1<RdThirdPartyError>> ReadRdThirdPartyErrorList;
    public static CtxWriteDelegate`1<RdObservabilityEntry> Write;
    public static CtxWriteDelegate`1<List`1<string>> WriteStringList;
    public static CtxWriteDelegate`1<List`1<RdThirdPartyError>> WriteRdThirdPartyErrorList;
    [NotNullAttribute]
public IViewableProperty`1<List`1<string>> TraceCategories { get; }
    [NotNullAttribute]
public ISignal`1<string> ErrorOccurred { get; }
    [NotNullAttribute]
public IViewableProperty`1<bool> LogWarnAsError { get; }
    [NotNullAttribute]
public ISignal`1<List`1<RdThirdPartyError>> ThirdPartyErrorSink { get; }
    private RdObservabilityEntry(RdProperty`1<List`1<string>> traceCategories, RdSignal`1<string> errorOccurred, RdProperty`1<bool> logWarnAsError, RdSignal`1<List`1<RdThirdPartyError>> thirdPartyErrorSink);
    private static RdObservabilityEntry();
    public IViewableProperty`1<List`1<string>> get_TraceCategories();
    public ISignal`1<string> get_ErrorOccurred();
    public IViewableProperty`1<bool> get_LogWarnAsError();
    public ISignal`1<List`1<RdThirdPartyError>> get_ThirdPartyErrorSink();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdOpenDocumentRequest : RdDocumentRequest {
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitialText>k__BackingField;
    public static CtxReadDelegate`1<RdOpenDocumentRequest> Read;
    public static CtxWriteDelegate`1<RdOpenDocumentRequest> Write;
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    [NotNullAttribute]
public string InitialText { get; private set; }
    public RdOpenDocumentRequest(RdChangesVersion changesVersion, string initialText, string path);
    private static RdOpenDocumentRequest();
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    [CompilerGeneratedAttribute]
public string get_InitialText();
    [CompilerGeneratedAttribute]
private void set_InitialText(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdOpenDocumentRequest other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdOpenDocumentsEndpoints : RdBindableBase {
    [NotNullAttribute]
private RdSignal`1<RdOpenDocumentRequest> _OpenDocument;
    [NotNullAttribute]
private RdSignal`1<RdUpdateDocumentRequest> _UpdateDocument;
    [NotNullAttribute]
private RdSignal`1<RdCloseDocumentRequest> _CloseDocument;
    public static CtxReadDelegate`1<RdOpenDocumentsEndpoints> Read;
    public static CtxWriteDelegate`1<RdOpenDocumentsEndpoints> Write;
    [NotNullAttribute]
public ISignal`1<RdOpenDocumentRequest> OpenDocument { get; }
    [NotNullAttribute]
public ISignal`1<RdUpdateDocumentRequest> UpdateDocument { get; }
    [NotNullAttribute]
public ISignal`1<RdCloseDocumentRequest> CloseDocument { get; }
    private RdOpenDocumentsEndpoints(RdSignal`1<RdOpenDocumentRequest> openDocument, RdSignal`1<RdUpdateDocumentRequest> updateDocument, RdSignal`1<RdCloseDocumentRequest> closeDocument);
    private static RdOpenDocumentsEndpoints();
    public ISignal`1<RdOpenDocumentRequest> get_OpenDocument();
    public ISignal`1<RdUpdateDocumentRequest> get_UpdateDocument();
    public ISignal`1<RdCloseDocumentRequest> get_CloseDocument();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdPrepareDebugHotReloadArg : object {
    [CompilerGeneratedAttribute]
private int <ProcessId>k__BackingField;
    public static CtxReadDelegate`1<RdPrepareDebugHotReloadArg> Read;
    public static CtxWriteDelegate`1<RdPrepareDebugHotReloadArg> Write;
    public int ProcessId { get; private set; }
    public RdPrepareDebugHotReloadArg(int processId);
    private static RdPrepareDebugHotReloadArg();
    [CompilerGeneratedAttribute]
public int get_ProcessId();
    [CompilerGeneratedAttribute]
private void set_ProcessId(int value);
    public void Deconstruct(Int32& processId);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdPrepareDebugHotReloadArg other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdPrepareDebugHotReloadResult : RdBindableBase {
    [CompilerGeneratedAttribute]
private int <ProcessId>k__BackingField;
    [NotNullAttribute]
private RdCall`2<RdDebugHotReloadServiceArg, RdDebugHotReloadService> _StartDebugHotReloadService;
    public static CtxReadDelegate`1<RdPrepareDebugHotReloadResult> Read;
    public static CtxWriteDelegate`1<RdPrepareDebugHotReloadResult> Write;
    public int ProcessId { get; private set; }
    [NotNullAttribute]
public IRdCall`2<RdDebugHotReloadServiceArg, RdDebugHotReloadService> StartDebugHotReloadService { get; }
    private RdPrepareDebugHotReloadResult(int processId, RdCall`2<RdDebugHotReloadServiceArg, RdDebugHotReloadService> startDebugHotReloadService);
    public RdPrepareDebugHotReloadResult(int processId);
    private static RdPrepareDebugHotReloadResult();
    [CompilerGeneratedAttribute]
public int get_ProcessId();
    [CompilerGeneratedAttribute]
private void set_ProcessId(int value);
    public IRdCall`2<RdDebugHotReloadServiceArg, RdDebugHotReloadService> get_StartDebugHotReloadService();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdPrepareRuntimeHotReloadArg : object {
    [CompilerGeneratedAttribute]
private string <NamePipe>k__BackingField;
    public static CtxReadDelegate`1<RdPrepareRuntimeHotReloadArg> Read;
    public static CtxWriteDelegate`1<RdPrepareRuntimeHotReloadArg> Write;
    [NotNullAttribute]
public string NamePipe { get; private set; }
    public RdPrepareRuntimeHotReloadArg(string namePipe);
    private static RdPrepareRuntimeHotReloadArg();
    [CompilerGeneratedAttribute]
public string get_NamePipe();
    [CompilerGeneratedAttribute]
private void set_NamePipe(string value);
    public void Deconstruct(String& namePipe);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdPrepareRuntimeHotReloadArg other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdPrepareRuntimeHotReloadResult : RdBindableBase {
    [CompilerGeneratedAttribute]
private HotReloadAgentConnectionState <ConnectionState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessId>k__BackingField;
    [NotNullAttribute]
private RdCall`2<Unit, RdRuntimeHotReloadService> _StartRuntimeHotReloadService;
    public static CtxReadDelegate`1<RdPrepareRuntimeHotReloadResult> Read;
    public static CtxReadDelegate`1<Nullable`1<int>> ReadIntNullable;
    public static CtxWriteDelegate`1<RdPrepareRuntimeHotReloadResult> Write;
    public static CtxWriteDelegate`1<Nullable`1<int>> WriteIntNullable;
    public HotReloadAgentConnectionState ConnectionState { get; private set; }
    [CanBeNullAttribute]
public Nullable`1<int> ProcessId { get; private set; }
    [NotNullAttribute]
public IRdCall`2<Unit, RdRuntimeHotReloadService> StartRuntimeHotReloadService { get; }
    private RdPrepareRuntimeHotReloadResult(HotReloadAgentConnectionState connectionState, Nullable`1<int> processId, RdCall`2<Unit, RdRuntimeHotReloadService> startRuntimeHotReloadService);
    public RdPrepareRuntimeHotReloadResult(HotReloadAgentConnectionState connectionState, Nullable`1<int> processId);
    private static RdPrepareRuntimeHotReloadResult();
    [CompilerGeneratedAttribute]
public HotReloadAgentConnectionState get_ConnectionState();
    [CompilerGeneratedAttribute]
private void set_ConnectionState(HotReloadAgentConnectionState value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessId();
    [CompilerGeneratedAttribute]
private void set_ProcessId(Nullable`1<int> value);
    public IRdCall`2<Unit, RdRuntimeHotReloadService> get_StartRuntimeHotReloadService();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdProcedureResult : object {
    public static CtxReadDelegate`1<RdProcedureResult> Read;
    public static CtxWriteDelegate`1<RdProcedureResult> Write;
    private static RdProcedureResult();
}
public class JetBrains.Roslyn.Host.Models.RdProcedureResult_Unknown : RdProcedureResult {
    public static CtxReadDelegate`1<RdProcedureResult_Unknown> Read;
    public static CtxWriteDelegate`1<RdProcedureResult_Unknown> Write;
    private static RdProcedureResult_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdProcedureResult_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectAdded : RdProcedureResult {
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    public static CtxReadDelegate`1<RdProjectAdded> Read;
    public static CtxWriteDelegate`1<RdProjectAdded> Write;
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    public RdProjectAdded(RdProjectId projectId);
    private static RdProjectAdded();
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
    public virtual bool Equals(object obj);
    public bool Equals(RdProjectAdded other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectCommonInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Guid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdTargetFrameworkInfo> <TargetFrameworks>k__BackingField;
    public static CtxReadDelegate`1<RdProjectCommonInfo> Read;
    public static CtxReadDelegate`1<List`1<RdTargetFrameworkInfo>> ReadRdTargetFrameworkInfoList;
    public static CtxWriteDelegate`1<RdProjectCommonInfo> Write;
    public static CtxWriteDelegate`1<List`1<RdTargetFrameworkInfo>> WriteRdTargetFrameworkInfoList;
    [NotNullAttribute]
public string Name { get; private set; }
    [NotNullAttribute]
public string Path { get; private set; }
    public Guid Guid { get; private set; }
    [NotNullAttribute]
public string Language { get; private set; }
    [NotNullAttribute]
public List`1<RdTargetFrameworkInfo> TargetFrameworks { get; private set; }
    public RdProjectCommonInfo(string name, string path, Guid guid, string language, List`1<RdTargetFrameworkInfo> targetFrameworks);
    private static RdProjectCommonInfo();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public Guid get_Guid();
    [CompilerGeneratedAttribute]
private void set_Guid(Guid value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
private void set_Language(string value);
    [CompilerGeneratedAttribute]
public List`1<RdTargetFrameworkInfo> get_TargetFrameworks();
    [CompilerGeneratedAttribute]
private void set_TargetFrameworks(List`1<RdTargetFrameworkInfo> value);
    public void Deconstruct(String& name, String& path, Guid& guid, String& language, List`1& targetFrameworks);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdProjectCommonInfo other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectConfigProperties : object {
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentationFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LanguageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowUnsafeCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NoWarn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyOriginatorKeyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefineConstants>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NullableOptions> <NullableOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <WarningsAsErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <WarningsNotAsErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TreatWarningsAsErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CodeAnalysisTreatWarningsAsErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RunAnalyzersDuringLiveAnalysis>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RunAnalyzers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlatformTarget>k__BackingField;
    public static CtxReadDelegate`1<RdProjectConfigProperties> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxReadDelegate`1<Nullable`1<NullableOptions>> ReadNullableOptionsNullable;
    public static CtxReadDelegate`1<List`1<string>> ReadStringList;
    public static CtxReadDelegate`1<Nullable`1<bool>> ReadBoolNullable;
    public static CtxWriteDelegate`1<RdProjectConfigProperties> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    public static CtxWriteDelegate`1<Nullable`1<NullableOptions>> WriteNullableOptionsNullable;
    public static CtxWriteDelegate`1<List`1<string>> WriteStringList;
    public static CtxWriteDelegate`1<Nullable`1<bool>> WriteBoolNullable;
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    [CanBeNullAttribute]
public string AssemblyFile { get; private set; }
    [NotNullAttribute]
public string AssemblyName { get; private set; }
    [NotNullAttribute]
public string DocumentationFile { get; private set; }
    [NotNullAttribute]
public string LanguageVersion { get; private set; }
    public bool AllowUnsafeCode { get; private set; }
    [NotNullAttribute]
public string NoWarn { get; private set; }
    [CanBeNullAttribute]
public string AssemblyOriginatorKeyFile { get; private set; }
    [NotNullAttribute]
public string DefineConstants { get; private set; }
    [NotNullAttribute]
public string OutputType { get; private set; }
    [CanBeNullAttribute]
public Nullable`1<NullableOptions> NullableOptions { get; private set; }
    [NotNullAttribute]
public List`1<string> WarningsAsErrors { get; private set; }
    [NotNullAttribute]
public List`1<string> WarningsNotAsErrors { get; private set; }
    public bool TreatWarningsAsErrors { get; private set; }
    [CanBeNullAttribute]
public Nullable`1<bool> CodeAnalysisTreatWarningsAsErrors { get; private set; }
    [CanBeNullAttribute]
public Nullable`1<bool> RunAnalyzersDuringLiveAnalysis { get; private set; }
    [CanBeNullAttribute]
public Nullable`1<bool> RunAnalyzers { get; private set; }
    [CanBeNullAttribute]
public string PlatformTarget { get; private set; }
    public RdProjectConfigProperties(RdTargetFramework targetFramework, string assemblyFile, string assemblyName, string documentationFile, string languageVersion, bool allowUnsafeCode, string noWarn, string assemblyOriginatorKeyFile, string defineConstants, string outputType, Nullable`1<NullableOptions> nullableOptions, List`1<string> warningsAsErrors, List`1<string> warningsNotAsErrors, bool treatWarningsAsErrors, Nullable`1<bool> codeAnalysisTreatWarningsAsErrors, Nullable`1<bool> runAnalyzersDuringLiveAnalysis, Nullable`1<bool> runAnalyzers, string platformTarget);
    private static RdProjectConfigProperties();
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
    [CompilerGeneratedAttribute]
public string get_AssemblyFile();
    [CompilerGeneratedAttribute]
private void set_AssemblyFile(string value);
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
private void set_AssemblyName(string value);
    [CompilerGeneratedAttribute]
public string get_DocumentationFile();
    [CompilerGeneratedAttribute]
private void set_DocumentationFile(string value);
    [CompilerGeneratedAttribute]
public string get_LanguageVersion();
    [CompilerGeneratedAttribute]
private void set_LanguageVersion(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowUnsafeCode();
    [CompilerGeneratedAttribute]
private void set_AllowUnsafeCode(bool value);
    [CompilerGeneratedAttribute]
public string get_NoWarn();
    [CompilerGeneratedAttribute]
private void set_NoWarn(string value);
    [CompilerGeneratedAttribute]
public string get_AssemblyOriginatorKeyFile();
    [CompilerGeneratedAttribute]
private void set_AssemblyOriginatorKeyFile(string value);
    [CompilerGeneratedAttribute]
public string get_DefineConstants();
    [CompilerGeneratedAttribute]
private void set_DefineConstants(string value);
    [CompilerGeneratedAttribute]
public string get_OutputType();
    [CompilerGeneratedAttribute]
private void set_OutputType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<NullableOptions> get_NullableOptions();
    [CompilerGeneratedAttribute]
private void set_NullableOptions(Nullable`1<NullableOptions> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_WarningsAsErrors();
    [CompilerGeneratedAttribute]
private void set_WarningsAsErrors(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_WarningsNotAsErrors();
    [CompilerGeneratedAttribute]
private void set_WarningsNotAsErrors(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_TreatWarningsAsErrors();
    [CompilerGeneratedAttribute]
private void set_TreatWarningsAsErrors(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CodeAnalysisTreatWarningsAsErrors();
    [CompilerGeneratedAttribute]
private void set_CodeAnalysisTreatWarningsAsErrors(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RunAnalyzersDuringLiveAnalysis();
    [CompilerGeneratedAttribute]
private void set_RunAnalyzersDuringLiveAnalysis(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RunAnalyzers();
    [CompilerGeneratedAttribute]
private void set_RunAnalyzers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_PlatformTarget();
    [CompilerGeneratedAttribute]
private void set_PlatformTarget(string value);
    public void Deconstruct(RdTargetFramework& targetFramework, String& assemblyFile, String& assemblyName, String& documentationFile, String& languageVersion, Boolean& allowUnsafeCode, String& noWarn, String& assemblyOriginatorKeyFile, String& defineConstants, String& outputType, Nullable`1& nullableOptions, List`1& warningsAsErrors, List`1& warningsNotAsErrors, Boolean& treatWarningsAsErrors, Nullable`1& codeAnalysisTreatWarningsAsErrors, Nullable`1& runAnalyzersDuringLiveAnalysis, Nullable`1& runAnalyzers, String& platformTarget);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdProjectConfigProperties other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectId : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    public static CtxReadDelegate`1<RdProjectId> Read;
    public static CtxWriteDelegate`1<RdProjectId> Write;
    public int Id { get; private set; }
    public RdProjectId(int id);
    private static RdProjectId();
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(int value);
    public void Deconstruct(Int32& id);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdProjectId other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectModelEntry : RdBindableBase {
    [NotNullAttribute]
private RdCall`2<RdSolution, Unit> _InitSolution;
    [NotNullAttribute]
private RdCall`2<RdApplyChangesRequest, List`1<RdProcedureResult>> _ApplyChanges;
    [NotNullAttribute]
private RdCall`2<RdAnalyzerReferenceReloadRequest, List`1<RdProcedureResult>> _ReloadAnalyzerReference;
    [NotNullAttribute]
private RdCall`2<RdAnalyzerConfigReloadRequest, List`1<RdProcedureResult>> _ReloadAnalyzerConfig;
    public static CtxReadDelegate`1<RdProjectModelEntry> Read;
    public static CtxReadDelegate`1<List`1<RdProcedureResult>> ReadRdProcedureResultList;
    public static CtxWriteDelegate`1<RdProjectModelEntry> Write;
    public static CtxWriteDelegate`1<List`1<RdProcedureResult>> WriteRdProcedureResultList;
    [NotNullAttribute]
public IRdCall`2<RdSolution, Unit> InitSolution { get; }
    [NotNullAttribute]
public IRdCall`2<RdApplyChangesRequest, List`1<RdProcedureResult>> ApplyChanges { get; }
    [NotNullAttribute]
public IRdCall`2<RdAnalyzerReferenceReloadRequest, List`1<RdProcedureResult>> ReloadAnalyzerReference { get; }
    [NotNullAttribute]
public IRdCall`2<RdAnalyzerConfigReloadRequest, List`1<RdProcedureResult>> ReloadAnalyzerConfig { get; }
    private RdProjectModelEntry(RdCall`2<RdSolution, Unit> initSolution, RdCall`2<RdApplyChangesRequest, List`1<RdProcedureResult>> applyChanges, RdCall`2<RdAnalyzerReferenceReloadRequest, List`1<RdProcedureResult>> reloadAnalyzerReference, RdCall`2<RdAnalyzerConfigReloadRequest, List`1<RdProcedureResult>> reloadAnalyzerConfig);
    private static RdProjectModelEntry();
    public IRdCall`2<RdSolution, Unit> get_InitSolution();
    public IRdCall`2<RdApplyChangesRequest, List`1<RdProcedureResult>> get_ApplyChanges();
    public IRdCall`2<RdAnalyzerReferenceReloadRequest, List`1<RdProcedureResult>> get_ReloadAnalyzerReference();
    public IRdCall`2<RdAnalyzerConfigReloadRequest, List`1<RdProcedureResult>> get_ReloadAnalyzerConfig();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectProperties : object {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ImportedNamespaces>k__BackingField;
    public static CtxReadDelegate`1<RdProjectProperties> Read;
    public static CtxReadDelegate`1<string> ReadStringNullable;
    public static CtxReadDelegate`1<List`1<string>> ReadStringListNullable;
    public static CtxWriteDelegate`1<RdProjectProperties> Write;
    public static CtxWriteDelegate`1<string> WriteStringNullable;
    public static CtxWriteDelegate`1<List`1<string>> WriteStringListNullable;
    [NotNullAttribute]
public string Language { get; private set; }
    [CanBeNullAttribute]
public string RootNamespace { get; private set; }
    [CanBeNullAttribute]
public List`1<string> ImportedNamespaces { get; private set; }
    public RdProjectProperties(string language, string rootNamespace, List`1<string> importedNamespaces);
    private static RdProjectProperties();
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
private void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_RootNamespace();
    [CompilerGeneratedAttribute]
private void set_RootNamespace(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ImportedNamespaces();
    [CompilerGeneratedAttribute]
private void set_ImportedNamespaces(List`1<string> value);
    public void Deconstruct(String& language, String& rootNamespace, List`1& importedNamespaces);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdProjectProperties other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectRemoved : RdProcedureResult {
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    public static CtxReadDelegate`1<RdProjectRemoved> Read;
    public static CtxWriteDelegate`1<RdProjectRemoved> Write;
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    public RdProjectRemoved(RdProjectId projectId);
    private static RdProjectRemoved();
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
    public virtual bool Equals(object obj);
    public bool Equals(RdProjectRemoved other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectTargetFramework : object {
    [CompilerGeneratedAttribute]
private RdProjectId <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    public static CtxReadDelegate`1<RdProjectTargetFramework> Read;
    public static CtxWriteDelegate`1<RdProjectTargetFramework> Write;
    [NotNullAttribute]
public RdProjectId ProjectId { get; private set; }
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    public RdProjectTargetFramework(RdProjectId projectId, RdTargetFramework targetFramework);
    private static RdProjectTargetFramework();
    [CompilerGeneratedAttribute]
public RdProjectId get_ProjectId();
    [CompilerGeneratedAttribute]
private void set_ProjectId(RdProjectId value);
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
    public void Deconstruct(RdProjectId& projectId, RdTargetFramework& targetFramework);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdProjectTargetFramework other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdProjectTfmRemoved : RdProcedureResult {
    [CompilerGeneratedAttribute]
private RdProjectTargetFramework <Project>k__BackingField;
    public static CtxReadDelegate`1<RdProjectTfmRemoved> Read;
    public static CtxWriteDelegate`1<RdProjectTfmRemoved> Write;
    [NotNullAttribute]
public RdProjectTargetFramework Project { get; private set; }
    public RdProjectTfmRemoved(RdProjectTargetFramework project);
    private static RdProjectTfmRemoved();
    [CompilerGeneratedAttribute]
public RdProjectTargetFramework get_Project();
    [CompilerGeneratedAttribute]
private void set_Project(RdProjectTargetFramework value);
    public virtual bool Equals(object obj);
    public bool Equals(RdProjectTfmRemoved other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdQuickFixDescriptor : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public static CtxReadDelegate`1<RdQuickFixDescriptor> Read;
    public static CtxWriteDelegate`1<RdQuickFixDescriptor> Write;
    [NotNullAttribute]
public string Title { get; private set; }
    public RdQuickFixDescriptor(string title);
    private static RdQuickFixDescriptor();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
private void set_Title(string value);
    public void Deconstruct(String& title);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdQuickFixDescriptor other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdQuickFixRequest : RdQuickFixRequestBase {
    public static CtxReadDelegate`1<RdQuickFixRequest> Read;
    public static CtxWriteDelegate`1<RdQuickFixRequest> Write;
    public RdQuickFixRequest(RdDiagnosticHighlighterKey diagnosticHighlighterKey, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdQuickFixRequest();
    public virtual bool Equals(object obj);
    public bool Equals(RdQuickFixRequest other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdQuickFixRequestBase : RdCodeActionRequestBase {
    [CompilerGeneratedAttribute]
private RdDiagnosticHighlighterKey <DiagnosticHighlighterKey>k__BackingField;
    public static CtxReadDelegate`1<RdQuickFixRequestBase> Read;
    public static CtxWriteDelegate`1<RdQuickFixRequestBase> Write;
    [NotNullAttribute]
public RdDiagnosticHighlighterKey DiagnosticHighlighterKey { get; private set; }
    protected RdQuickFixRequestBase(RdDiagnosticHighlighterKey diagnosticHighlighterKey, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdQuickFixRequestBase();
    [CompilerGeneratedAttribute]
public RdDiagnosticHighlighterKey get_DiagnosticHighlighterKey();
    [CompilerGeneratedAttribute]
private void set_DiagnosticHighlighterKey(RdDiagnosticHighlighterKey value);
}
public class JetBrains.Roslyn.Host.Models.RdQuickFixRequestBase_Unknown : RdQuickFixRequestBase {
    public static CtxReadDelegate`1<RdQuickFixRequestBase_Unknown> Read;
    public static CtxWriteDelegate`1<RdQuickFixRequestBase_Unknown> Write;
    public RdQuickFixRequestBase_Unknown(RdDiagnosticHighlighterKey diagnosticHighlighterKey, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdQuickFixRequestBase_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdQuickFixRequestBase_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdRefactoringCodeAction : object {
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public static CtxReadDelegate`1<RdRefactoringCodeAction> Read;
    public static CtxWriteDelegate`1<RdRefactoringCodeAction> Write;
    [NotNullAttribute]
public string ClassName { get; private set; }
    [NotNullAttribute]
public string Title { get; private set; }
    public RdRefactoringCodeAction(string className, string title);
    private static RdRefactoringCodeAction();
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
private void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
private void set_Title(string value);
    public void Deconstruct(String& className, String& title);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdRefactoringCodeAction other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdRefactoringProvider : object {
    [CompilerGeneratedAttribute]
private string <RefactoringClass>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Languages>k__BackingField;
    public static CtxReadDelegate`1<RdRefactoringProvider> Read;
    public static CtxReadDelegate`1<List`1<string>> ReadStringList;
    public static CtxWriteDelegate`1<RdRefactoringProvider> Write;
    public static CtxWriteDelegate`1<List`1<string>> WriteStringList;
    [NotNullAttribute]
public string RefactoringClass { get; private set; }
    [NotNullAttribute]
public string Text { get; private set; }
    [NotNullAttribute]
public List`1<string> Languages { get; private set; }
    public RdRefactoringProvider(string refactoringClass, string text, List`1<string> languages);
    private static RdRefactoringProvider();
    [CompilerGeneratedAttribute]
public string get_RefactoringClass();
    [CompilerGeneratedAttribute]
private void set_RefactoringClass(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Languages();
    [CompilerGeneratedAttribute]
private void set_Languages(List`1<string> value);
    public void Deconstruct(String& refactoringClass, String& text, List`1& languages);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdRefactoringProvider other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdRefactoringRequest : RdRefactoringRequestBase {
    public static CtxReadDelegate`1<RdRefactoringRequest> Read;
    public static CtxWriteDelegate`1<RdRefactoringRequest> Write;
    public RdRefactoringRequest(RdCoords coords, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdRefactoringRequest();
    public virtual bool Equals(object obj);
    public bool Equals(RdRefactoringRequest other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public abstract class JetBrains.Roslyn.Host.Models.RdRefactoringRequestBase : RdCodeActionRequestBase {
    [CompilerGeneratedAttribute]
private RdCoords <Coords>k__BackingField;
    public static CtxReadDelegate`1<RdRefactoringRequestBase> Read;
    public static CtxWriteDelegate`1<RdRefactoringRequestBase> Write;
    [NotNullAttribute]
public RdCoords Coords { get; private set; }
    protected RdRefactoringRequestBase(RdCoords coords, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdRefactoringRequestBase();
    [CompilerGeneratedAttribute]
public RdCoords get_Coords();
    [CompilerGeneratedAttribute]
private void set_Coords(RdCoords value);
}
public class JetBrains.Roslyn.Host.Models.RdRefactoringRequestBase_Unknown : RdRefactoringRequestBase {
    public static CtxReadDelegate`1<RdRefactoringRequestBase_Unknown> Read;
    public static CtxWriteDelegate`1<RdRefactoringRequestBase_Unknown> Write;
    public RdRefactoringRequestBase_Unknown(RdCoords coords, RdProjectId projectId, RdTargetFramework targetFramework, string fileName);
    private static RdRefactoringRequestBase_Unknown();
    public virtual bool Equals(object obj);
    public bool Equals(RdRefactoringRequestBase_Unknown other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdRefactoringsSync : RdProcedureResult {
    [CompilerGeneratedAttribute]
private RdAnalyzersKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RdRefactoringProvider> <Refactorings>k__BackingField;
    public static CtxReadDelegate`1<RdRefactoringsSync> Read;
    public static CtxReadDelegate`1<List`1<RdRefactoringProvider>> ReadRdRefactoringProviderList;
    public static CtxWriteDelegate`1<RdRefactoringsSync> Write;
    public static CtxWriteDelegate`1<List`1<RdRefactoringProvider>> WriteRdRefactoringProviderList;
    [NotNullAttribute]
public RdAnalyzersKey Key { get; private set; }
    [NotNullAttribute]
public List`1<RdRefactoringProvider> Refactorings { get; private set; }
    public RdRefactoringsSync(RdAnalyzersKey key, List`1<RdRefactoringProvider> refactorings);
    private static RdRefactoringsSync();
    [CompilerGeneratedAttribute]
public RdAnalyzersKey get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(RdAnalyzersKey value);
    [CompilerGeneratedAttribute]
public List`1<RdRefactoringProvider> get_Refactorings();
    [CompilerGeneratedAttribute]
private void set_Refactorings(List`1<RdRefactoringProvider> value);
    public virtual bool Equals(object obj);
    public bool Equals(RdRefactoringsSync other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public enum JetBrains.Roslyn.Host.Models.RdRulesetAction : Enum {
    public int value__;
    public static RdRulesetAction Default;
    public static RdRulesetAction None;
    public static RdRulesetAction Error;
    public static RdRulesetAction Warning;
    public static RdRulesetAction Info;
    public static RdRulesetAction Hidden;
}
public class JetBrains.Roslyn.Host.Models.RdRulesetRule : object {
    [CompilerGeneratedAttribute]
private string <InspectionCode>k__BackingField;
    [CompilerGeneratedAttribute]
private RdRulesetAction <Action>k__BackingField;
    public static CtxReadDelegate`1<RdRulesetRule> Read;
    public static CtxWriteDelegate`1<RdRulesetRule> Write;
    [NotNullAttribute]
public string InspectionCode { get; private set; }
    public RdRulesetAction Action { get; private set; }
    public RdRulesetRule(string inspectionCode, RdRulesetAction action);
    private static RdRulesetRule();
    [CompilerGeneratedAttribute]
public string get_InspectionCode();
    [CompilerGeneratedAttribute]
private void set_InspectionCode(string value);
    [CompilerGeneratedAttribute]
public RdRulesetAction get_Action();
    [CompilerGeneratedAttribute]
private void set_Action(RdRulesetAction value);
    public void Deconstruct(String& inspectionCode, RdRulesetAction& action);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdRulesetRule other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdRuntimeHotReloadService : RdBindableBase {
    [NotNullAttribute]
private RdCall`2<int, RdApplyDeltaResult> _ApplyHotReloadDelta;
    [NotNullAttribute]
private RdCall`2<int, List`1<RdHotReloadDelta>> _GetHotReloadDelta;
    [NotNullAttribute]
private RdCall`2<Unit, RdHotReloadBuildDeltaResult> _BuildDelta;
    public static CtxReadDelegate`1<RdRuntimeHotReloadService> Read;
    public static CtxReadDelegate`1<List`1<RdHotReloadDelta>> ReadRdHotReloadDeltaList;
    public static CtxWriteDelegate`1<RdRuntimeHotReloadService> Write;
    public static CtxWriteDelegate`1<List`1<RdHotReloadDelta>> WriteRdHotReloadDeltaList;
    [NotNullAttribute]
public IRdCall`2<int, RdApplyDeltaResult> ApplyHotReloadDelta { get; }
    [NotNullAttribute]
public IRdCall`2<int, List`1<RdHotReloadDelta>> GetHotReloadDelta { get; }
    [NotNullAttribute]
public IRdCall`2<Unit, RdHotReloadBuildDeltaResult> BuildDelta { get; }
    private RdRuntimeHotReloadService(RdCall`2<int, RdApplyDeltaResult> applyHotReloadDelta, RdCall`2<int, List`1<RdHotReloadDelta>> getHotReloadDelta, RdCall`2<Unit, RdHotReloadBuildDeltaResult> buildDelta);
    private static RdRuntimeHotReloadService();
    public IRdCall`2<int, RdApplyDeltaResult> get_ApplyHotReloadDelta();
    public IRdCall`2<int, List`1<RdHotReloadDelta>> get_GetHotReloadDelta();
    public IRdCall`2<Unit, RdHotReloadBuildDeltaResult> get_BuildDelta();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdSolution : object {
    [CompilerGeneratedAttribute]
private string <SolutionPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SolutionGuid>k__BackingField;
    public static CtxReadDelegate`1<RdSolution> Read;
    public static CtxWriteDelegate`1<RdSolution> Write;
    [NotNullAttribute]
public string SolutionPath { get; private set; }
    public Guid SolutionGuid { get; private set; }
    public RdSolution(string solutionPath, Guid solutionGuid);
    private static RdSolution();
    [CompilerGeneratedAttribute]
public string get_SolutionPath();
    [CompilerGeneratedAttribute]
private void set_SolutionPath(string value);
    [CompilerGeneratedAttribute]
public Guid get_SolutionGuid();
    [CompilerGeneratedAttribute]
private void set_SolutionGuid(Guid value);
    public void Deconstruct(String& solutionPath, Guid& solutionGuid);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdSolution other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdSourceGeneratorsEntry : RdBindableBase {
    [NotNullAttribute]
private RdSignal`1<RdGeneratedResult> _Generated;
    [NotNullAttribute]
private RdSignal`1<Unit> _NeedToDropSourceGeneratorsSink;
    public static CtxReadDelegate`1<RdSourceGeneratorsEntry> Read;
    public static CtxWriteDelegate`1<RdSourceGeneratorsEntry> Write;
    [NotNullAttribute]
public ISignal`1<RdGeneratedResult> Generated { get; }
    [NotNullAttribute]
public ISignal`1<Unit> NeedToDropSourceGeneratorsSink { get; }
    private RdSourceGeneratorsEntry(RdSignal`1<RdGeneratedResult> generated, RdSignal`1<Unit> needToDropSourceGeneratorsSink);
    private static RdSourceGeneratorsEntry();
    public ISignal`1<RdGeneratedResult> get_Generated();
    public ISignal`1<Unit> get_NeedToDropSourceGeneratorsSink();
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdSourceGeneratorsError : object {
    [CompilerGeneratedAttribute]
private string <Generator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public static CtxReadDelegate`1<RdSourceGeneratorsError> Read;
    public static CtxWriteDelegate`1<RdSourceGeneratorsError> Write;
    [NotNullAttribute]
public string Generator { get; private set; }
    [NotNullAttribute]
public string Message { get; private set; }
    public RdSourceGeneratorsError(string generator, string message);
    private static RdSourceGeneratorsError();
    [CompilerGeneratedAttribute]
public string get_Generator();
    [CompilerGeneratedAttribute]
private void set_Generator(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    public void Deconstruct(String& generator, String& message);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdSourceGeneratorsError other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdTargetFramework : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public static CtxReadDelegate`1<RdTargetFramework> Read;
    public static CtxWriteDelegate`1<RdTargetFramework> Write;
    [NotNullAttribute]
public string Name { get; private set; }
    public RdTargetFramework(string name);
    private static RdTargetFramework();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public void Deconstruct(String& name);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdTargetFramework other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdTargetFrameworkInfo : object {
    [CompilerGeneratedAttribute]
private RdTargetFramework <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    public static CtxReadDelegate`1<RdTargetFrameworkInfo> Read;
    public static CtxWriteDelegate`1<RdTargetFrameworkInfo> Write;
    [NotNullAttribute]
public RdTargetFramework TargetFramework { get; private set; }
    [NotNullAttribute]
public string AssemblyName { get; private set; }
    public RdTargetFrameworkInfo(RdTargetFramework targetFramework, string assemblyName);
    private static RdTargetFrameworkInfo();
    [CompilerGeneratedAttribute]
public RdTargetFramework get_TargetFramework();
    [CompilerGeneratedAttribute]
private void set_TargetFramework(RdTargetFramework value);
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
private void set_AssemblyName(string value);
    public void Deconstruct(RdTargetFramework& targetFramework, String& assemblyName);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdTargetFrameworkInfo other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RdThirdPartyError : object {
    [CompilerGeneratedAttribute]
private RdThirdPartyErrorCause <Cause>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Details>k__BackingField;
    public static CtxReadDelegate`1<RdThirdPartyError> Read;
    public static CtxWriteDelegate`1<RdThirdPartyError> Write;
    public RdThirdPartyErrorCause Cause { get; private set; }
    [NotNullAttribute]
public string Source { get; private set; }
    [NotNullAttribute]
public string Message { get; private set; }
    [NotNullAttribute]
public string Details { get; private set; }
    public RdThirdPartyError(RdThirdPartyErrorCause cause, string source, string message, string details);
    private static RdThirdPartyError();
    [CompilerGeneratedAttribute]
public RdThirdPartyErrorCause get_Cause();
    [CompilerGeneratedAttribute]
private void set_Cause(RdThirdPartyErrorCause value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
private void set_Details(string value);
    public void Deconstruct(RdThirdPartyErrorCause& cause, String& source, String& message, String& details);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RdThirdPartyError other);
    public virtual int GetHashCode();
    public sealed virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public enum JetBrains.Roslyn.Host.Models.RdThirdPartyErrorCause : Enum {
    public int value__;
    public static RdThirdPartyErrorCause AssemblyLoading;
    public static RdThirdPartyErrorCause ProviderInstantiation;
}
public class JetBrains.Roslyn.Host.Models.RdUpdateDocumentRequest : RdDocumentRequest {
    [CompilerGeneratedAttribute]
private RdChangesVersion <ChangesVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewText>k__BackingField;
    public static CtxReadDelegate`1<RdUpdateDocumentRequest> Read;
    public static CtxWriteDelegate`1<RdUpdateDocumentRequest> Write;
    [NotNullAttribute]
public RdChangesVersion ChangesVersion { get; private set; }
    [NotNullAttribute]
public string NewText { get; private set; }
    public RdUpdateDocumentRequest(RdChangesVersion changesVersion, string newText, string path);
    private static RdUpdateDocumentRequest();
    [CompilerGeneratedAttribute]
public RdChangesVersion get_ChangesVersion();
    [CompilerGeneratedAttribute]
private void set_ChangesVersion(RdChangesVersion value);
    [CompilerGeneratedAttribute]
public string get_NewText();
    [CompilerGeneratedAttribute]
private void set_NewText(string value);
    public virtual bool Equals(object obj);
    public bool Equals(RdUpdateDocumentRequest other);
    public virtual int GetHashCode();
    public void Print(PrettyPrinter printer);
    public virtual string ToString();
}
public class JetBrains.Roslyn.Host.Models.RoslynModel : RdExtBase {
    [NotNullAttribute]
private RdProperty`1<bool> _Started;
    [NotNullAttribute]
private RdProperty`1<RdSourceGeneratorsEntry> _SourceGenerators;
    [NotNullAttribute]
private RdProperty`1<RdCompilationsEntry> _Compilations;
    [NotNullAttribute]
private RdProperty`1<RdAnalyzersEntry> _Analyzers;
    [NotNullAttribute]
private RdProperty`1<RdObservabilityEntry> _Observability;
    [NotNullAttribute]
private RdProperty`1<RdProjectModelEntry> _ProjectModel;
    [NotNullAttribute]
private RdProperty`1<RdOpenDocumentsEndpoints> _OpenDocuments;
    [NotNullAttribute]
private RdProperty`1<RdDumpEntry> _Dump;
    [NotNullAttribute]
private RdProperty`1<RdHotReloadManagerModel> _RoslynHotReloadManagerModel;
    public static CtxReadDelegate`1<RdHotReloadManagerModel> ReadRdHotReloadManagerModelNullable;
    public static CtxWriteDelegate`1<RdHotReloadManagerModel> WriteRdHotReloadManagerModelNullable;
    [NotNullAttribute]
public IViewableProperty`1<bool> Started { get; }
    [NotNullAttribute]
public IReadonlyProperty`1<RdSourceGeneratorsEntry> SourceGenerators { get; }
    [NotNullAttribute]
public IReadonlyProperty`1<RdCompilationsEntry> Compilations { get; }
    [NotNullAttribute]
public IReadonlyProperty`1<RdAnalyzersEntry> Analyzers { get; }
    [NotNullAttribute]
public IReadonlyProperty`1<RdObservabilityEntry> Observability { get; }
    [NotNullAttribute]
public IReadonlyProperty`1<RdProjectModelEntry> ProjectModel { get; }
    [NotNullAttribute]
public IReadonlyProperty`1<RdOpenDocumentsEndpoints> OpenDocuments { get; }
    [NotNullAttribute]
public IReadonlyProperty`1<RdDumpEntry> Dump { get; }
    [NotNullAttribute]
public IViewableProperty`1<RdHotReloadManagerModel> RoslynHotReloadManagerModel { get; }
    protected long SerializationHash { get; }
    protected Action`1<ISerializers> Register { get; }
    private RoslynModel(RdProperty`1<bool> started, RdProperty`1<RdSourceGeneratorsEntry> sourceGenerators, RdProperty`1<RdCompilationsEntry> compilations, RdProperty`1<RdAnalyzersEntry> analyzers, RdProperty`1<RdObservabilityEntry> observability, RdProperty`1<RdProjectModelEntry> projectModel, RdProperty`1<RdOpenDocumentsEndpoints> openDocuments, RdProperty`1<RdDumpEntry> dump, RdProperty`1<RdHotReloadManagerModel> roslynHotReloadManagerModel);
    public RoslynModel(Lifetime lifetime, IProtocol protocol);
    private static RoslynModel();
    public IViewableProperty`1<bool> get_Started();
    public IReadonlyProperty`1<RdSourceGeneratorsEntry> get_SourceGenerators();
    public IReadonlyProperty`1<RdCompilationsEntry> get_Compilations();
    public IReadonlyProperty`1<RdAnalyzersEntry> get_Analyzers();
    public IReadonlyProperty`1<RdObservabilityEntry> get_Observability();
    public IReadonlyProperty`1<RdProjectModelEntry> get_ProjectModel();
    public IReadonlyProperty`1<RdOpenDocumentsEndpoints> get_OpenDocuments();
    public IReadonlyProperty`1<RdDumpEntry> get_Dump();
    public IViewableProperty`1<RdHotReloadManagerModel> get_RoslynHotReloadManagerModel();
    protected virtual long get_SerializationHash();
    protected virtual Action`1<ISerializers> get_Register();
    public static void RegisterDeclaredTypesSerializers(ISerializers serializers);
    public virtual void Print(PrettyPrinter printer);
    public virtual string ToString();
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public static class JetBrains.Roslyn.Host.Resources.Strings : object {
    private static ILogger ourLog;
    private static Lazy`1<JetResourceManager> ourResourceManager;
    [EditorBrowsableAttribute("2")]
public static JetResourceManager ResourceManager { get; }
    public static string EnabledRoslynRefactoringsSettingDescription { get; }
    public static string EnableRoslynAnalyzersSettingDescription { get; }
    public static string IncludeRoslynAnalyzersInSolutionWideAnalysisSettingDescription { get; }
    public static string RoslynAnalyzersConfigurableHighlightingsGroupTitle { get; }
    public static string RoslynAnalyzersSettingDescription { get; }
    public static string RoslynAnalyzersText { get; }
    public static string RoslynCustomSeveritiesSettingDescription { get; }
    public static string RoslynLegacySeveritiesWasMigratedSettingDescription { get; }
    public static string RoslynCodeActionError { get; }
    public static string ConfigureInspectionSeverity_Text { get; }
    public static string SetByRoslyn_Text { get; }
    public static string RoslynMonitor_SolutionIsNotLoadedYet { get; }
    public static string RoslynMonitor_DisabledInSettings { get; }
    public static string RoslynMonitor_DisabledByHook { get; }
    public static string RoslynMonitor_NoAnalyzerReferences { get; }
    public static string RoslynAnalyzers_StrongNameValidation { get; }
    public static string RoslynAnalyzers_StrongNameValidation_Text { get; }
    private static Strings();
    public static JetResourceManager get_ResourceManager();
    public static string Choice(string format, Object[] args);
    public static string get_EnabledRoslynRefactoringsSettingDescription();
    public static string get_EnableRoslynAnalyzersSettingDescription();
    public static string get_IncludeRoslynAnalyzersInSolutionWideAnalysisSettingDescription();
    public static string get_RoslynAnalyzersConfigurableHighlightingsGroupTitle();
    public static string get_RoslynAnalyzersSettingDescription();
    public static string get_RoslynAnalyzersText();
    public static string get_RoslynCustomSeveritiesSettingDescription();
    public static string get_RoslynLegacySeveritiesWasMigratedSettingDescription();
    public static string get_RoslynCodeActionError();
    public static string get_ConfigureInspectionSeverity_Text();
    public static string get_SetByRoslyn_Text();
    public static string get_RoslynMonitor_SolutionIsNotLoadedYet();
    public static string get_RoslynMonitor_DisabledInSettings();
    public static string get_RoslynMonitor_DisabledByHook();
    public static string get_RoslynMonitor_NoAnalyzerReferences();
    public static string get_RoslynAnalyzers_StrongNameValidation();
    public static string get_RoslynAnalyzers_StrongNameValidation_Text();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("10")]
[ZoneMarkerAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.RoslynWorkerHost : object {
    private Lifetime myLifetime;
    private ILogger myLogger;
    private RoslynEnabledMonitor myRoslynEnabledMonitor;
    private RoslynExternalProcessManager myExternalProcessManager;
    private RoslynComponentContainer myComponentContainer;
    public RoslynWorkerHost(Lifetime lifetime, ILogger logger, RoslynEnabledMonitor roslynEnabledMonitor, RoslynExternalProcessManager externalProcessManager, RoslynComponentContainer componentContainer);
    public void RestartProcess();
    private void OnProcessStarted(Lifetime lifetime, RoslynModel model);
    private void OnWorkerStarted(Lifetime lifetime, RoslynModel model);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_0(Unit _);
    [CompilerGeneratedAttribute]
private void <RestartProcess>b__6_0();
}
[NullableContextAttribute("1")]
public interface JetBrains.Roslyn.Host.Utils.IShellLocksWrapper {
    public abstract virtual void AssertMainThread();
    public abstract virtual T ExecuteWithReadLock(Func`1<T> func);
    public abstract virtual Task`1<T> StartMainRead(Lifetime lifetime, Func`1<T> func);
    public abstract virtual Task StartMainRead(Lifetime lifetime, Action action);
}
[NullableContextAttribute("2")]
public interface JetBrains.Roslyn.Host.Utils.Multithreading.IReadonlyThreadBindProperty`1 {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Utils.Multithreading.RoslynHostSchedulerProvider : object {
    private SingleThreadScheduler myScheduler;
    private ITaskHost myMainTaskHost;
    public IScheduler Scheduler { get; }
    public RoslynHostSchedulerProvider(Lifetime lifetime, ISolution solution);
    public virtual void AssertRoslynHostThread();
    public virtual IScheduler get_Scheduler();
    public ThreadBindViewableProperty`1<T> CreateProperty(T value);
    public SchedulerAwaiter YieldToMain(Lifetime lifetime);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class JetBrains.Roslyn.Host.Utils.Multithreading.ThreadBindViewableProperty`1 : ViewableProperty`1<T> {
    [CompilerGeneratedAttribute]
private Thread <thread>P;
    public T Value { get; public set; }
    public ThreadBindViewableProperty`1(Thread thread, T value);
    public virtual T get_Value();
    public virtual void set_Value(T value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
public class JetBrains.Roslyn.Host.Utils.RoslynApiWrapper : object {
    [CompilerGeneratedAttribute]
private ILogger <logger>P;
    public RoslynApiWrapper(ILogger logger);
    public virtual IProject ReferenceResolveResult(IProjectToProjectReference reference);
    public virtual bool IsPathAbsolute(VirtualFileSystemPath path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class JetBrains.Roslyn.Host.Utils.RoslynHostException : Exception {
    public RoslynHostException(string message);
    public RoslynHostException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class JetBrains.Roslyn.Host.Utils.RoslynUtils : object {
    private static ILogger ourLogger;
    private static Guid ourGuidOne;
    private static RoslynUtils();
    [ExtensionAttribute]
public static Guid SanitizeForRoslyn(Guid guid);
    [ExtensionAttribute]
public static void SetRoslynHandler(IRdEndpoint`2<TReq, TRes> endpoint, RoslynHostSchedulerProvider schedulerProvider, Func`3<Lifetime, TReq, Task`1<TRes>> handler);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static TRes SyncIfAlive(IRdCall`2<TReq, TRes> call, TReq req, Lifetime lifetime, RpcTimeouts timeouts, string caller);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SolutionComponentAttribute("16")]
internal class JetBrains.Roslyn.Host.Utils.ShellLocksWrapper : object {
    [CompilerGeneratedAttribute]
private IShellLocks <shellLocks>P;
    public ShellLocksWrapper(IShellLocks shellLocks);
    public sealed virtual void AssertMainThread();
    public sealed virtual T ExecuteWithReadLock(Func`1<T> func);
    public sealed virtual Task`1<T> StartMainRead(Lifetime lifetime, Func`1<T> func);
    public sealed virtual Task StartMainRead(Lifetime lifetime, Action action);
}
[ZoneMarkerAttribute]
public class JetBrains.Roslyn.Host.ZoneMarker : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
