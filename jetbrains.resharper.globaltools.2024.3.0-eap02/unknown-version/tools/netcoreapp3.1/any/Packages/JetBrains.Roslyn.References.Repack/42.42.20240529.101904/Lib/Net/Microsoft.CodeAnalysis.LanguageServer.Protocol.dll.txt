[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.AddImport.AddImportPlacementOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<AddImportPlacementOptions> GetAddImportPlacementOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AddImportPlacementOptions GetAddImportPlacementOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Classification.ClassificationOptionsStorage : object {
    public static PerLanguageOption2`1<bool> ClassifyReassignedVariables;
    public static PerLanguageOption2`1<bool> ColorizeRegexPatterns;
    public static PerLanguageOption2`1<bool> ColorizeJsonPatterns;
    private static ClassificationOptionsStorage();
    [ExtensionAttribute]
public static ClassificationOptions GetClassificationOptions(IOptionsReader globalOptions, string language);
    [ExtensionAttribute]
public static OptionsProvider`1<ClassificationOptions> GetClassificationOptionsProvider(IOptionsReader globalOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsStorage : object {
    public static PerLanguageOption2`1<int> WrappingColumn;
    public static PerLanguageOption2`1<int> ConditionalExpressionWrappingLength;
    public static PerLanguageOption2`1<int> CollectionExpressionWrappingLength;
    private static CodeActionOptionsStorage();
    [ExtensionAttribute]
public static CodeActionOptions GetCodeActionOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
    [ExtensionAttribute]
internal static CodeActionOptionsProvider GetCodeActionOptionsProvider(IGlobalOptionService globalOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService : object {
    private ICodeFixService _codeFixService;
    private IDiagnosticAnalyzerService _diagnosticService;
    protected string OrganizeImportsDescription { get; }
    protected AbstractCodeCleanupService(ICodeFixService codeFixService, IDiagnosticAnalyzerService diagnosticAnalyzerService);
    protected abstract virtual string get_OrganizeImportsDescription();
    protected abstract virtual ImmutableArray`1<DiagnosticSet> GetDiagnosticSets();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService/<CleanupAsync>d__6")]
public sealed virtual Task`1<Document> CleanupAsync(Document document, EnabledDiagnosticOptions enabledDiagnostics, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService/<RemoveSortUsingsAsync>d__7")]
private static Task`1<Document> RemoveSortUsingsAsync(Document document, OrganizeUsingsSet organizeUsingsSet, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService/<ApplyCodeFixesAsync>d__8")]
private Task`1<Document> ApplyCodeFixesAsync(Document document, ImmutableArray`1<DiagnosticSet> enabledDiagnosticSets, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService/<ApplyCodeFixesForSpecificDiagnosticIdsAsync>d__9")]
private Task`1<Document> ApplyCodeFixesForSpecificDiagnosticIdsAsync(Document document, ImmutableArray`1<string> diagnosticIds, bool isAnyDiagnosticIdExplicitlyEnabled, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService/<ApplyCodeFixesForSpecificDiagnosticIdAsync>d__10")]
private Task`1<Document> ApplyCodeFixesForSpecificDiagnosticIdAsync(Document document, string diagnosticId, DiagnosticSeverity minimumSeverity, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService/<GetThirdPartyDiagnosticIdsAndTitlesAsync>d__11")]
private Task`1<ImmutableArray`1<ValueTuple`2<string, string>>> GetThirdPartyDiagnosticIdsAndTitlesAsync(Document document, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeCleanup.AbstractCodeCleanupService/<ApplyThirdPartyCodeFixesAsync>d__12")]
private Task`1<Document> ApplyThirdPartyCodeFixesAsync(Document document, ImmutableArray`1<ValueTuple`2<string, string>> diagnosticIds, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    public sealed virtual EnabledDiagnosticOptions GetAllDiagnostics();
    [CompilerGeneratedAttribute]
internal static bool <ApplyThirdPartyCodeFixesAsync>g__ChangesMadeOutsideDocument|12_0(Document currentDocument, Document updatedDocument);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.CodeCleanup.CodeCleanupOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<CodeCleanupOptions> GetCodeCleanupOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static CodeCleanupOptions GetCodeCleanupOptions(IOptionsReader globalOptions, LanguageServices languageServices);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.CodeCleanup.DiagnosticSet : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <DiagnosticIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAnyDiagnosticIdExplicitlyEnabled>k__BackingField;
    public string Description { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> DiagnosticIds { get; }
    public bool IsAnyDiagnosticIdExplicitlyEnabled { get; }
    private DiagnosticSet(string description, ImmutableArray`1<string> diagnosticIds, bool isAnyDiagnosticIdExplicitlyEnabled);
    public DiagnosticSet(string description, String[] diagnosticIds);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_DiagnosticIds();
    [CompilerGeneratedAttribute]
public bool get_IsAnyDiagnosticIdExplicitlyEnabled();
    public DiagnosticSet With(bool isAnyDiagnosticIdExplicitlyEnabled);
}
internal class Microsoft.CodeAnalysis.CodeCleanup.EnabledDiagnosticOptions : object {
    [CompilerGeneratedAttribute]
private bool <FormatDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RunThirdPartyFixers>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticSet> <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private OrganizeUsingsSet <OrganizeUsings>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public bool FormatDocument { get; public set; }
    public bool RunThirdPartyFixers { get; public set; }
    public ImmutableArray`1<DiagnosticSet> Diagnostics { get; public set; }
    public OrganizeUsingsSet OrganizeUsings { get; public set; }
    public EnabledDiagnosticOptions(bool FormatDocument, bool RunThirdPartyFixers, ImmutableArray`1<DiagnosticSet> Diagnostics, OrganizeUsingsSet OrganizeUsings);
    [CompilerGeneratedAttribute]
private EnabledDiagnosticOptions(EnabledDiagnosticOptions original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_FormatDocument();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FormatDocument(bool value);
    [CompilerGeneratedAttribute]
public bool get_RunThirdPartyFixers();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RunThirdPartyFixers(bool value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<DiagnosticSet> get_Diagnostics();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Diagnostics(ImmutableArray`1<DiagnosticSet> value);
    [CompilerGeneratedAttribute]
public OrganizeUsingsSet get_OrganizeUsings();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OrganizeUsings(OrganizeUsingsSet value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(EnabledDiagnosticOptions left, EnabledDiagnosticOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(EnabledDiagnosticOptions left, EnabledDiagnosticOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(EnabledDiagnosticOptions other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public EnabledDiagnosticOptions <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& FormatDocument, Boolean& RunThirdPartyFixers, ImmutableArray`1& Diagnostics, OrganizeUsingsSet& OrganizeUsings);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.CodeCleanup.ICodeCleanupService {
    public abstract virtual Task`1<Document> CleanupAsync(Document document, EnabledDiagnosticOptions enabledDiagnostics, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    public abstract virtual EnabledDiagnosticOptions GetAllDiagnostics();
}
internal class Microsoft.CodeAnalysis.CodeCleanup.OrganizeUsingsSet : object {
    [CompilerGeneratedAttribute]
private bool <IsRemoveUnusedImportEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSortImportsEnabled>k__BackingField;
    public bool IsRemoveUnusedImportEnabled { get; }
    public bool IsSortImportsEnabled { get; }
    public OrganizeUsingsSet(bool isRemoveUnusedImportEnabled, bool isSortImportsEnabled);
    [CompilerGeneratedAttribute]
public bool get_IsRemoveUnusedImportEnabled();
    [CompilerGeneratedAttribute]
public bool get_IsSortImportsEnabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportAttribute("Microsoft.CodeAnalysis.CodeFixes.ICodeFixService")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.CodeFixes.CodeFixService : object {
    private IDiagnosticAnalyzerService _diagnosticService;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<Lazy`2<CodeFixProvider, CodeChangeProviderMetadata>> _fixers;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<string, ImmutableArray`1<Lazy`2<CodeFixProvider, CodeChangeProviderMetadata>>> _fixersPerLanguageMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConditionalWeakTable`2<IReadOnlyList`1<AnalyzerReference>, ImmutableDictionary`2<string, ImmutableArray`1<CodeFixProvider>>> _projectFixersMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<string, Lazy`1<ImmutableArray`1<IConfigurationFixProvider>>> _configurationProvidersMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<Lazy`1<IErrorLoggerService>> _errorLoggers;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<string, Lazy`1<ImmutableDictionary`2<string, ImmutableArray`1<CodeFixProvider>>>> _lazyWorkspaceFixersMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<string, Lazy`1<ImmutableDictionary`2<CodeFixProvider, int>>> _lazyFixerPriorityMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<CodeFixProvider, ImmutableArray`1<string>> _fixerToFixableIdsMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<object, FixAllProviderInfo> _fixAllProviderMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<CodeFixProvider, CodeChangeProviderMetadata> _fixerToMetadataMap;
    [ImportingConstructorAttribute]
public CodeFixService(IDiagnosticAnalyzerService diagnosticAnalyzerService, IEnumerable`1<Lazy`1<IErrorLoggerService>> loggers, IEnumerable`1<Lazy`2<CodeFixProvider, CodeChangeProviderMetadata>> fixers, IEnumerable`1<Lazy`2<IConfigurationFixProvider, CodeChangeProviderMetadata>> configurationProviders);
    private Func`2<string, bool> GetShouldIncludeDiagnosticPredicate(TextDocument document, ICodeActionRequestPriorityProvider priorityProvider);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<GetMostSevereFixAsync>d__13")]
public sealed virtual Task`1<FirstFixResult> GetMostSevereFixAsync(TextDocument document, TextSpan range, ICodeActionRequestPriorityProvider priorityProvider, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<StreamFixesAsync>d__14")]
public sealed virtual IAsyncEnumerable`1<CodeFixCollection> StreamFixesAsync(TextDocument document, TextSpan range, ICodeActionRequestPriorityProvider priorityProvider, CodeActionOptionsProvider fallbackOptions, Func`2<string, IDisposable> addOperationScope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<GetCopilotDiagnosticsAsync>d__15")]
private static Task`1<ImmutableArray`1<DiagnosticData>> GetCopilotDiagnosticsAsync(TextDocument document, TextSpan range, Nullable`1<CodeActionRequestPriority> priority, CancellationToken cancellationToken);
    private static SortedDictionary`2<TextSpan, List`1<DiagnosticData>> ConvertToMap(SourceText text, ImmutableArray`1<DiagnosticData> diagnostics);
    public Task`1<CodeFixCollection> GetDocumentFixAllForIdInSpanAsync(TextDocument document, TextSpan range, string diagnosticId, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<GetDocumentFixAllForIdInSpanAsync>d__18")]
public sealed virtual Task`1<CodeFixCollection> GetDocumentFixAllForIdInSpanAsync(TextDocument document, TextSpan range, string diagnosticId, DiagnosticSeverity minimumSeverity, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    public Task`1<TDocument> ApplyCodeFixesForSpecificDiagnosticIdAsync(TDocument document, string diagnosticId, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<ApplyCodeFixesForSpecificDiagnosticIdAsync>d__20`1")]
public sealed virtual Task`1<TDocument> ApplyCodeFixesForSpecificDiagnosticIdAsync(TDocument document, string diagnosticId, DiagnosticSeverity severity, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    private bool TryGetWorkspaceFixersMap(TextDocument document, ImmutableDictionary`2& fixerMap);
    private bool TryGetWorkspaceFixersPriorityMap(TextDocument document, Lazy`1& fixersPriorityMap);
    private bool TryGetWorkspaceFixer(Lazy`2<CodeFixProvider, CodeChangeProviderMetadata> lazyFixer, SolutionServices services, bool logExceptionWithInfoBar, CodeFixProvider& fixer);
    [AsyncIteratorStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<StreamFixesAsync>d__24")]
private IAsyncEnumerable`1<CodeFixCollection> StreamFixesAsync(TextDocument document, SortedDictionary`2<TextSpan, List`1<DiagnosticData>> spanToDiagnostics, bool fixAllForInSpan, ICodeActionRequestPriorityProvider priorityProvider, CodeActionOptionsProvider fallbackOptions, Func`2<string, IDisposable> addOperationScope, CancellationToken cancellationToken);
    private CodeChangeProviderMetadata TryGetMetadata(CodeFixProvider fixer);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<GetCodeFixesAsync>d__26")]
private static Task`1<ImmutableArray`1<CodeFix>> GetCodeFixesAsync(TextDocument document, TextSpan span, CodeFixProvider fixer, CodeChangeProviderMetadata fixerMetadata, CodeActionOptionsProvider fallbackOptions, ImmutableArray`1<Diagnostic> diagnostics, Dictionary`2<Diagnostic, PooledHashSet`1<string>> uniqueDiagosticToEquivalenceKeysMap, Dictionary`2<ValueTuple`2<Diagnostic, string>, CodeFixProvider> diagnosticAndEquivalenceKeyToFixersMap, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<StreamConfigurationFixesAsync>d__27")]
private IAsyncEnumerable`1<CodeFixCollection> StreamConfigurationFixesAsync(TextDocument document, TextSpan diagnosticsSpan, IEnumerable`1<DiagnosticData> diagnostics, PooledHashSet`1<string> registeredConfigurationFixTitles, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.CodeFixes.CodeFixService/<TryGetFixesOrConfigurationsAsync>d__28`1")]
private Task`1<CodeFixCollection> TryGetFixesOrConfigurationsAsync(TextDocument textDocument, TextSpan fixesSpan, IEnumerable`1<DiagnosticData> diagnosticsWithSameSpan, bool fixAllForInSpan, TCodeFixProvider fixer, Func`2<Diagnostic, bool> hasFix, Func`2<ImmutableArray`1<Diagnostic>, Task`1<ImmutableArray`1<CodeFix>>> getFixes, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    public sealed virtual CodeFixProvider GetSuppressionFixer(string language, IEnumerable`1<string> diagnosticIds);
    private bool IsInteractiveCodeFixProvider(CodeFixProvider provider);
    private ImmutableArray`1<string> GetFixableDiagnosticIds(CodeFixProvider fixer, IExtensionManager extensionManager);
    private static ImmutableArray`1<string> GetAndTestFixableDiagnosticIds(CodeFixProvider codeFixProvider);
    private ImmutableDictionary`2<string, Lazy`1<ImmutableDictionary`2<string, ImmutableArray`1<CodeFixProvider>>>> GetFixerPerLanguageMap(SolutionServices services);
    private static ImmutableDictionary`2<string, Lazy`1<ImmutableArray`1<IConfigurationFixProvider>>> GetConfigurationProvidersPerLanguageMap(IEnumerable`1<Lazy`2<IConfigurationFixProvider, CodeChangeProviderMetadata>> configurationProviders);
    private ImmutableDictionary`2<string, Lazy`1<ImmutableDictionary`2<CodeFixProvider, int>>> GetFixerPriorityPerLanguageMap(SolutionServices services);
    private ImmutableDictionary`2<string, ImmutableArray`1<CodeFixProvider>> GetProjectFixers(TextDocument document);
    private ImmutableDictionary`2<string, ImmutableArray`1<CodeFixProvider>> ComputeProjectFixers(TextDocument document);
    private static ExtensionInfo<ProjectCodeFixProvider, CodeFixProvider, ExportCodeFixProviderAttribute> GetExtensionInfo(ExportCodeFixProviderAttribute attribute);
    public TestAccessor GetTestAccessor();
    [CompilerGeneratedAttribute]
internal static ImmutableArray`1<Diagnostic> <GetCodeFixesAsync>g__FilterApplicableDiagnostics|26_1(ImmutableArray`1<Diagnostic> applicableDiagnostics, string equivalenceKey, CodeFixProvider fixer, Dictionary`2<Diagnostic, PooledHashSet`1<string>> uniqueDiagosticToEquivalenceKeysMap, Dictionary`2<ValueTuple`2<Diagnostic, string>, CodeFixProvider> diagnosticAndEquivalenceKeyToFixersMap);
    [CompilerGeneratedAttribute]
internal static ImmutableArray`1<IConfigurationFixProvider> <GetConfigurationProvidersPerLanguageMap>g__GetConfigurationFixProviders|34_0(ImmutableArray`1<Lazy`2<IConfigurationFixProvider, CodeChangeProviderMetadata>> languageKindAndFixers);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.CodeFixes.ICodeFixService {
    public abstract virtual IAsyncEnumerable`1<CodeFixCollection> StreamFixesAsync(TextDocument document, TextSpan textSpan, ICodeActionRequestPriorityProvider priorityProvider, CodeActionOptionsProvider options, Func`2<string, IDisposable> addOperationScope, CancellationToken cancellationToken);
    public abstract virtual Task`1<FirstFixResult> GetMostSevereFixAsync(TextDocument document, TextSpan range, ICodeActionRequestPriorityProvider priorityProvider, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    public abstract virtual Task`1<CodeFixCollection> GetDocumentFixAllForIdInSpanAsync(TextDocument document, TextSpan textSpan, string diagnosticId, DiagnosticSeverity severity, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    public abstract virtual Task`1<TDocument> ApplyCodeFixesForSpecificDiagnosticIdAsync(TDocument document, string diagnosticId, DiagnosticSeverity severity, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    public abstract virtual CodeFixProvider GetSuppressionFixer(string language, IEnumerable`1<string> diagnosticIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.CodeFixes.ICodeFixServiceExtensions : object {
    [ExtensionAttribute]
public static IAsyncEnumerable`1<CodeFixCollection> StreamFixesAsync(ICodeFixService service, TextDocument document, TextSpan range, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<ImmutableArray`1<CodeFixCollection>> GetFixesAsync(ICodeFixService service, TextDocument document, TextSpan range, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<ImmutableArray`1<CodeFixCollection>> GetFixesAsync(ICodeFixService service, TextDocument document, TextSpan textSpan, ICodeActionRequestPriorityProvider priorityProvider, CodeActionOptionsProvider fallbackOptions, Func`2<string, IDisposable> addOperationScope, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TDocument> ApplyCodeFixesForSpecificDiagnosticIdAsync(ICodeFixService service, TDocument document, string diagnosticId, IProgress`1<CodeAnalysisProgress> progressTracker, CodeActionOptionsProvider fallbackOptions, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.CodeGeneration.CodeGenerationOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<CodeGenerationOptions> GetCodeGenerationOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<CleanCodeGenerationOptions> GetCleanCodeGenerationOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static CodeGenerationOptions GetCodeGenerationOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
    [ExtensionAttribute]
public static CodeAndImportGenerationOptions GetCodeAndImportGenerationOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
    [ExtensionAttribute]
public static CleanCodeGenerationOptions GetCleanCodeGenerationOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptionsStorage : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IdeCodeStyleOptions GetCodeStyleOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.CodeStyle.NamingStyleOptionsStorage : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static NamingStylePreferences GetNamingStylePreferences(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Completion.CompletionOptionsStorage : object {
    private static OptionGroup s_completionOptionGroup;
    public static Option2`1<bool> UnnamedSymbolCompletionDisabledFeatureFlag;
    public static Option2`1<bool> ShowNewSnippetExperienceFeatureFlag;
    public static PerLanguageOption2`1<bool> HideAdvancedMembers;
    public static PerLanguageOption2`1<bool> TriggerOnTyping;
    public static PerLanguageOption2`1<bool> TriggerOnTypingLetters;
    public static PerLanguageOption2`1<Nullable`1<bool>> TriggerOnDeletion;
    public static PerLanguageOption2`1<EnterKeyRule> EnterKeyBehavior;
    public static PerLanguageOption2`1<SnippetsRule> SnippetsBehavior;
    public static PerLanguageOption2`1<bool> ShowNameSuggestions;
    public static PerLanguageOption2`1<Nullable`1<bool>> ShowItemsFromUnimportedNamespaces;
    public static PerLanguageOption2`1<bool> TriggerInArgumentLists;
    public static Option2`1<bool> ForceExpandedCompletionIndexCreation;
    public static PerLanguageOption2`1<bool> ProvideRegexCompletions;
    public static PerLanguageOption2`1<bool> ProvideDateAndTimeCompletions;
    public static PerLanguageOption2`1<Nullable`1<bool>> ShowNewSnippetExperienceUserOption;
    private static CompletionOptionsStorage();
    [ExtensionAttribute]
public static CompletionOptions GetCompletionOptions(IGlobalOptionService options, string language);
}
internal class Microsoft.CodeAnalysis.CSharp.DecompiledSource.AssemblyResolver : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<MetadataReference, ValueTuple`2<string, ImmutableArray`1<byte>>> _inMemoryImagesForTesting;
    private Compilation _parentCompilation;
    private Dictionary`2<string, List`1<IAssemblySymbol>> _cache;
    private StringBuilder _logger;
    public AssemblyResolver(Compilation parentCompilation, StringBuilder logger);
    private static AssemblyResolver();
    public sealed virtual Task`1<PEFile> ResolveAsync(IAssemblyReference name);
    public sealed virtual Task`1<PEFile> ResolveModuleAsync(PEFile mainModule, string moduleName);
    public PEFile TryResolve(MetadataReference metadataReference, PEStreamOptions streamOptions);
    public sealed virtual PEFile Resolve(IAssemblyReference name);
    public sealed virtual PEFile ResolveModule(PEFile mainModule, string moduleName);
    private void Log(string format, Object[] args);
    [CompilerGeneratedAttribute]
private void <.ctor>g__BuildReferenceCache|4_0();
    [CompilerGeneratedAttribute]
private PEFile <Resolve>g__MakePEFile|8_0(IAssemblySymbol assembly);
}
[ExportLanguageServiceAttribute("Microsoft.CodeAnalysis.DecompiledSource.IDecompilationService", "C#", "Default")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.CSharp.DecompiledSource.CSharpDecompilationService : object {
    [NullableAttribute("1")]
private static FileVersionInfo s_decompilerVersion;
    private static CSharpDecompilationService();
    [NullableContextAttribute("1")]
public sealed virtual FileVersionInfo GetDecompilerVersion();
    [NullableContextAttribute("1")]
public sealed virtual Document PerformDecompilation(Document document, string fullName, Compilation compilation, MetadataReference metadataReference, string assemblyLocation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportAttribute("Microsoft.CodeAnalysis.Diagnostics.IDiagnosticAnalyzerService")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerService : object {
    private static string DiagnosticsUpdatedEventName;
    private EventMap _eventMap;
    private TaskQueue _eventQueue;
    [CompilerGeneratedAttribute]
private DiagnosticAnalyzerInfoCache <AnalyzerInfoCache>k__BackingField;
    [CompilerGeneratedAttribute]
private IAsynchronousOperationListener <Listener>k__BackingField;
    [CompilerGeneratedAttribute]
private IGlobalOptionService <GlobalOptions>k__BackingField;
    private ConditionalWeakTable`2<Workspace, DiagnosticIncrementalAnalyzer> _map;
    private CreateValueCallback<Workspace, DiagnosticIncrementalAnalyzer> _createIncrementalAnalyzer;
    private IDiagnosticsRefresher _diagnosticsRefresher;
    public DiagnosticAnalyzerInfoCache AnalyzerInfoCache { get; private set; }
    public IAsynchronousOperationListener Listener { get; }
    public IGlobalOptionService GlobalOptions { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public DiagnosticAnalyzerService(IAsynchronousOperationListenerProvider listenerProvider, SharedGlobalCache globalCache, IGlobalOptionService globalOptions, IDiagnosticsRefresher diagnosticsRefresher);
    [CompilerGeneratedAttribute]
public sealed virtual DiagnosticAnalyzerInfoCache get_AnalyzerInfoCache();
    [CompilerGeneratedAttribute]
private void set_AnalyzerInfoCache(DiagnosticAnalyzerInfoCache value);
    [CompilerGeneratedAttribute]
public IAsynchronousOperationListener get_Listener();
    [CompilerGeneratedAttribute]
public sealed virtual IGlobalOptionService get_GlobalOptions();
    public static bool IsGlobalOptionAffectingDiagnostics(IOption2 option);
    public sealed virtual void RequestDiagnosticRefresh();
    public sealed virtual Task`1<ValueTuple`2<ImmutableArray`1<DiagnosticData>, bool>> TryGetDiagnosticsForSpanAsync(TextDocument document, TextSpan range, Func`2<string, bool> shouldIncludeDiagnostic, bool includeSuppressedDiagnostics, ICodeActionRequestPriorityProvider priorityProvider, DiagnosticKind diagnosticKinds, bool isExplicit, CancellationToken cancellationToken);
    public sealed virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsForSpanAsync(TextDocument document, Nullable`1<TextSpan> range, Func`2<string, bool> shouldIncludeDiagnostic, bool includeCompilerDiagnostics, bool includeSuppressedDiagnostics, ICodeActionRequestPriorityProvider priorityProvider, Func`2<string, IDisposable> addOperationScope, DiagnosticKind diagnosticKinds, bool isExplicit, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public sealed virtual Task`1<ImmutableArray`1<DiagnosticData>> GetCachedDiagnosticsAsync(Workspace workspace, ProjectId projectId, DocumentId documentId, bool includeSuppressedDiagnostics, bool includeLocalDocumentDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public sealed virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(Solution solution, ProjectId projectId, DocumentId documentId, bool includeSuppressedDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerService/<ForceAnalyzeProjectAsync>d__23")]
public sealed virtual Task ForceAnalyzeProjectAsync(Project project, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public sealed virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsForIdsAsync(Solution solution, ProjectId projectId, DocumentId documentId, ImmutableHashSet`1<string> diagnosticIds, Func`2<DiagnosticAnalyzer, bool> shouldIncludeAnalyzer, Func`3<Project, DocumentId, IReadOnlyList`1<DocumentId>> getDocuments, bool includeSuppressedDiagnostics, bool includeLocalDocumentDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    public sealed virtual Task`1<ImmutableArray`1<DiagnosticData>> GetProjectDiagnosticsForIdsAsync(Solution solution, ProjectId projectId, ImmutableHashSet`1<string> diagnosticIds, Func`2<DiagnosticAnalyzer, bool> shouldIncludeAnalyzer, bool includeSuppressedDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public ValueTask SynchronizeWithBuildAsync(Workspace workspace, ImmutableDictionary`2<ProjectId, ImmutableArray`1<DiagnosticData>> diagnostics, bool onBuildCompleted, CancellationToken cancellationToken);
    public DiagnosticIncrementalAnalyzer CreateIncrementalAnalyzer(Workspace workspace);
    [ObsoleteAttribute("This factory method only provides services for the MEF export provider.", "True")]
private DiagnosticIncrementalAnalyzer CreateIncrementalAnalyzerCallback(Workspace workspace);
    private void OnDocumentActiveContextChanged(object sender, DocumentActiveContextChangedEventArgs e);
    [NullableContextAttribute("0")]
public void add_DiagnosticsUpdated(EventHandler`1<ImmutableArray`1<DiagnosticsUpdatedArgs>> value);
    [NullableContextAttribute("0")]
public void remove_DiagnosticsUpdated(EventHandler`1<ImmutableArray`1<DiagnosticsUpdatedArgs>> value);
    [NullableContextAttribute("0")]
internal void RaiseDiagnosticsUpdated(ImmutableArray`1<DiagnosticsUpdatedArgs> args);
    [NullableContextAttribute("0")]
internal void RaiseBulkDiagnosticsUpdated(Action`1<Action`1<ImmutableArray`1<DiagnosticsUpdatedArgs>>> eventAction);
    [NullableContextAttribute("0")]
internal void RaiseBulkDiagnosticsUpdated(Func`2<Action`1<ImmutableArray`1<DiagnosticsUpdatedArgs>>, Task> eventActionAsync);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__16_0(object _, OptionChangedEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.Diagnostics.DiagnosticOptionsStorage : object {
    public static Option2`1<bool> PullDiagnosticsFeatureFlag;
    public static Option2`1<bool> LogTelemetryForBackgroundAnalyzerExecution;
    public static Option2`1<bool> LightbulbSkipExecutingDeprioritizedAnalyzers;
    private static DiagnosticOptionsStorage();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor : object {
    [NullableAttribute("2")]
private CompilationWithAnalyzers _compilationWithAnalyzers;
    private InProcOrRemoteHostAnalyzerRunner _diagnosticAnalyzerRunner;
    private bool _isExplicit;
    private bool _logPerformanceInfo;
    [NullableAttribute("2")]
private Action _onAnalysisException;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<DiagnosticAnalyzer> _compilationBasedAnalyzersInAnalysisScope;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> _lazySyntaxDiagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> _lazySemanticDiagnostics;
    [CompilerGeneratedAttribute]
private DocumentAnalysisScope <AnalysisScope>k__BackingField;
    internal static string WRN_AnalyzerCannotBeCreatedIdCS;
    internal static string WRN_AnalyzerCannotBeCreatedIdVB;
    internal static string WRN_NoAnalyzerInAssemblyIdCS;
    internal static string WRN_NoAnalyzerInAssemblyIdVB;
    internal static string WRN_UnableToLoadAnalyzerIdCS;
    internal static string WRN_UnableToLoadAnalyzerIdVB;
    internal static string WRN_AnalyzerReferencesNetFrameworkIdCS;
    internal static string WRN_AnalyzerReferencesNetFrameworkIdVB;
    internal static string WRN_AnalyzerReferencesNewerCompilerIdCS;
    internal static string WRN_AnalyzerReferencesNewerCompilerIdVB;
    internal static string AnalyzerExceptionDiagnosticId;
    internal static string AnalyzerDriverExceptionDiagnosticId;
    internal static string WRN_AnalyzerCannotBeCreatedId;
    internal static string WRN_NoAnalyzerInAssemblyId;
    internal static string WRN_UnableToLoadAnalyzerId;
    internal static string WRN_AnalyzerReferencesNetFrameworkId;
    internal static string WRN_AnalyzerReferencesNewerCompilerId;
    private static string AnalyzerExceptionDiagnosticCategory;
    public DocumentAnalysisScope AnalysisScope { get; }
    public DocumentAnalysisExecutor(DocumentAnalysisScope analysisScope, CompilationWithAnalyzers compilationWithAnalyzers, InProcOrRemoteHostAnalyzerRunner diagnosticAnalyzerRunner, bool isExplicit, bool logPerformanceInfo, Action onAnalysisException);
    [CompilerGeneratedAttribute]
public DocumentAnalysisScope get_AnalysisScope();
    public DocumentAnalysisExecutor With(DocumentAnalysisScope analysisScope);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<ComputeDiagnosticsAsync>d__13")]
public Task`1<IEnumerable`1<DiagnosticData>> ComputeDiagnosticsAsync(DiagnosticAnalyzer analyzer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<GetAnalysisResultAsync>d__14")]
private Task`1<ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> GetAnalysisResultAsync(DocumentAnalysisScope analysisScope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<GetSourceGeneratorDiagnosticsAsync>d__15")]
private Task`1<ImmutableArray`1<Diagnostic>> GetSourceGeneratorDiagnosticsAsync(Project project, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<GetCompilerAnalyzerDiagnosticsAsync>d__16")]
private Task`1<ImmutableArray`1<DiagnosticData>> GetCompilerAnalyzerDiagnosticsAsync(DiagnosticAnalyzer analyzer, Nullable`1<TextSpan> span, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<GetSyntaxDiagnosticsAsync>d__17")]
private Task`1<ImmutableArray`1<DiagnosticData>> GetSyntaxDiagnosticsAsync(DiagnosticAnalyzer analyzer, bool isCompilerAnalyzer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<GetSemanticDiagnosticsAsync>d__18")]
private Task`1<ImmutableArray`1<DiagnosticData>> GetSemanticDiagnosticsAsync(DiagnosticAnalyzer analyzer, bool isCompilerAnalyzer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<RemapDiagnosticLocationsIfRequiredAsync>d__19")]
private static Task`1<ImmutableArray`1<DiagnosticData>> RemapDiagnosticLocationsIfRequiredAsync(TextDocument textDocument, ImmutableArray`1<DiagnosticData> diagnostics, CancellationToken cancellationToken);
    internal static Diagnostic CreateAnalyzerExceptionDiagnostic(DiagnosticAnalyzer analyzer, Exception e);
    public static DiagnosticData CreateAnalyzerLoadFailureDiagnostic(AnalyzerLoadFailureEventArgs e, string fullPath, ProjectId projectId, string language);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<CreateCompilationWithAnalyzersAsync>d__40")]
public static Task`1<CompilationWithAnalyzers> CreateCompilationWithAnalyzersAsync(Project project, IdeAnalyzerOptions ideOptions, IEnumerable`1<DiagnosticAnalyzer> analyzers, bool includeSuppressedDiagnostics, CancellationToken cancellationToken);
    [ConditionalAttribute("DEBUG")]
private static void AssertCompilation(Project project, Compilation compilation1);
    public static bool IsAnalyzerEnabledForProject(DiagnosticAnalyzer analyzer, Project project, IGlobalOptionService globalOptions);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<ComputeDocumentDiagnosticAnalyzerDiagnosticsAsync>d__43")]
public static Task`1<ImmutableArray`1<Diagnostic>> ComputeDocumentDiagnosticAnalyzerDiagnosticsAsync(DocumentDiagnosticAnalyzer analyzer, Document document, AnalysisKind kind, Compilation compilation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<ComputeProjectDiagnosticAnalyzerDiagnosticsAsync>d__44")]
public static Task`1<ImmutableArray`1<Diagnostic>> ComputeProjectDiagnosticAnalyzerDiagnosticsAsync(ProjectDiagnosticAnalyzer analyzer, Project project, Compilation compilation, CancellationToken cancellationToken);
    private static bool IsCanceled(Exception ex, CancellationToken cancellationToken);
    [IteratorStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor/<ConvertToLocalDiagnostics>d__46")]
public static IEnumerable`1<DiagnosticData> ConvertToLocalDiagnostics(IEnumerable`1<Diagnostic> diagnostics, TextDocument targetTextDocument, Nullable`1<TextSpan> span);
    [CompilerGeneratedAttribute]
internal static string <CreateAnalyzerLoadFailureDiagnostic>g__GetLanguageSpecificId|39_0(string language, string noLanguageId, string csharpId, string vbId);
    [CompilerGeneratedAttribute]
internal static bool <ConvertToLocalDiagnostics>g__IsReportedInDocument|46_0(Diagnostic diagnostic, TextDocument targetTextDocument);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer : object {
    private DiagnosticAnalyzerTelemetry _telemetry;
    private StateManager _stateManager;
    private InProcOrRemoteHostAnalyzerRunner _diagnosticAnalyzerRunner;
    private IncrementalMemberEditAnalyzer _incrementalMemberEditAnalyzer;
    [CompilerGeneratedAttribute]
private DiagnosticAnalyzerService <AnalyzerService>k__BackingField;
    [CompilerGeneratedAttribute]
private Workspace <Workspace>k__BackingField;
    internal DiagnosticAnalyzerService AnalyzerService { get; }
    internal Workspace Workspace { get; }
    internal IGlobalOptionService GlobalOptions { get; }
    internal DiagnosticAnalyzerInfoCache DiagnosticAnalyzerInfoCache { get; }
    [ObsoleteAttribute("This factory method only provides services for the MEF export provider.", "True")]
public DiagnosticIncrementalAnalyzer(DiagnosticAnalyzerService analyzerService, Workspace workspace, DiagnosticAnalyzerInfoCache analyzerInfoCache);
    private static Task`1<CompilationWithAnalyzers> CreateCompilationWithAnalyzersAsync(Project project, IdeAnalyzerOptions ideOptions, IEnumerable`1<StateSet> stateSets, bool includeSuppressedDiagnostics, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal DiagnosticAnalyzerService get_AnalyzerService();
    [CompilerGeneratedAttribute]
internal Workspace get_Workspace();
    internal IGlobalOptionService get_GlobalOptions();
    internal DiagnosticAnalyzerInfoCache get_DiagnosticAnalyzerInfoCache();
    private void OnProjectAnalyzerReferenceChanged(object sender, ProjectAnalyzerReferenceChangedEventArgs e);
    private void ClearAllDiagnostics(ImmutableArray`1<StateSet> stateSets, ProjectId projectId);
    private void AddDiagnosticsCreatedArgs(TemporaryArray`1& builder, Project project, DiagnosticAnalyzer analyzer, ImmutableArray`1<DiagnosticData> items);
    private void AddDiagnosticsRemovedArgs(TemporaryArray`1& builder, ProjectId projectId, Solution solution, DiagnosticAnalyzer analyzer);
    private void AddDiagnosticsCreatedArgs(TemporaryArray`1& builder, TextDocument document, DiagnosticAnalyzer analyzer, AnalysisKind kind, ImmutableArray`1<DiagnosticData> items);
    private void AddDiagnosticsRemovedArgs(TemporaryArray`1& builder, DocumentId documentId, Solution solution, DiagnosticAnalyzer analyzer, AnalysisKind kind);
    private static object CreateId(DiagnosticAnalyzer analyzer, DocumentId documentId, AnalysisKind kind);
    private static object CreateId(DiagnosticAnalyzer analyzer, ProjectId projectId, AnalysisKind kind);
    public static Task`1<VersionStamp> GetDiagnosticVersionAsync(Project project, CancellationToken cancellationToken);
    private static DiagnosticAnalysisResult GetResultOrEmpty(ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> map, DiagnosticAnalyzer analyzer, ProjectId projectId, VersionStamp version);
    internal IEnumerable`1<DiagnosticAnalyzer> GetAnalyzersTestOnly(Project project);
    private static string GetProjectLogMessage(Project project, ImmutableArray`1<StateSet> stateSets);
    private static string GetOpenLogMessage(TextDocument document);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<GetProjectAnalysisDataAsync>d__32")]
private Task`1<ProjectAnalysisData> GetProjectAnalysisDataAsync(CompilationWithAnalyzers compilationWithAnalyzers, Project project, IdeAnalyzerOptions ideOptions, ImmutableArray`1<StateSet> stateSets, bool forceAnalyzerRun, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static bool CompilationHasOpenFileOnlyAnalyzers(CompilationWithAnalyzers compilationWithAnalyzers, SimplifierOptions options);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<RemoveCompilerSemanticErrorsIfProjectNotLoadedAsync>d__34")]
private static Task`1<ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> RemoveCompilerSemanticErrorsIfProjectNotLoadedAsync(ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> result, Project project, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<ComputeDiagnosticsAsync>d__35")]
private Task`1<ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> ComputeDiagnosticsAsync(CompilationWithAnalyzers compilationWithAnalyzers, Project project, ImmutableArray`1<DiagnosticAnalyzer> ideAnalyzers, bool forcedAnalysis, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<ComputeDiagnosticsAsync>d__36")]
private Task`1<ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> ComputeDiagnosticsAsync(CompilationWithAnalyzers compilationWithAnalyzers, Project project, IdeAnalyzerOptions ideOptions, ImmutableArray`1<StateSet> stateSets, bool forcedAnalysis, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> existing, CancellationToken cancellationToken);
    private static ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> MergeExistingDiagnostics(VersionStamp version, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> existing, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> result);
    private static bool TryReduceAnalyzersToRun(CompilationWithAnalyzers compilationWithAnalyzers, VersionStamp version, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> existing, IdeAnalyzerOptions ideOptions, ImmutableArray`1& analyzers);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<MergeProjectDiagnosticAnalyzerDiagnosticsAsync>d__39")]
private Task`1<ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> MergeProjectDiagnosticAnalyzerDiagnosticsAsync(Project project, ImmutableArray`1<DiagnosticAnalyzer> ideAnalyzers, Compilation compilation, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> result, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<UpdateWithDocumentLoadAndGeneratorFailuresAsync>d__40")]
private Task`1<ValueTuple`2<ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>, ImmutableHashSet`1<Document>>> UpdateWithDocumentLoadAndGeneratorFailuresAsync(ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> results, Project project, VersionStamp version, CancellationToken cancellationToken);
    private void UpdateAnalyzerTelemetryData(ImmutableDictionary`2<DiagnosticAnalyzer, AnalyzerTelemetryInfo> telemetry);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<SynchronizeWithBuildAsync>d__49")]
public ValueTask SynchronizeWithBuildAsync(ImmutableDictionary`2<ProjectId, ImmutableArray`1<DiagnosticData>> buildDiagnostics, bool onBuildCompleted, CancellationToken cancellationToken);
    [ConditionalAttribute("DEBUG")]
private static void DebugVerifyBuildDiagnostics(ImmutableDictionary`2<ProjectId, ImmutableArray`1<DiagnosticData>> buildDiagnostics);
    private ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> CreateAnalysisResults(Project project, ImmutableArray`1<StateSet> stateSets, ImmutableArray`1<DiagnosticData> diagnostics);
    private static ImmutableArray`1<DiagnosticData> ConvertToLiveDiagnostics(ILookup`2<string, DiagnosticData> lookup, ImmutableArray`1<DiagnosticDescriptor> descriptors, HashSet`1<string> seen);
    private static DiagnosticData CreateLiveDiagnostic(DiagnosticDescriptor descriptor, DiagnosticData diagnostic);
    private static string LogSynchronizeWithBuild(ImmutableDictionary`2<ProjectId, ImmutableArray`1<DiagnosticData>> map);
    [NullableContextAttribute("2")]
public Task`1<ImmutableArray`1<DiagnosticData>> GetCachedDiagnosticsAsync(Solution solution, ProjectId projectId, DocumentId documentId, bool includeSuppressedDiagnostics, bool includeLocalDocumentDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(Solution solution, ProjectId projectId, DocumentId documentId, bool includeSuppressedDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsForIdsAsync(Solution solution, ProjectId projectId, DocumentId documentId, ImmutableHashSet`1<string> diagnosticIds, Func`2<DiagnosticAnalyzer, bool> shouldIncludeAnalyzer, Func`3<Project, DocumentId, IReadOnlyList`1<DocumentId>> getDocuments, bool includeSuppressedDiagnostics, bool includeLocalDocumentDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    public Task`1<ImmutableArray`1<DiagnosticData>> GetProjectDiagnosticsForIdsAsync(Solution solution, ProjectId projectId, ImmutableHashSet`1<string> diagnosticIds, Func`2<DiagnosticAnalyzer, bool> shouldIncludeAnalyzer, bool includeSuppressedDiagnostics, bool includeNonLocalDocumentDiagnostics, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<TryAppendDiagnosticsForSpanAsync>d__62")]
public Task`1<bool> TryAppendDiagnosticsForSpanAsync(TextDocument document, Nullable`1<TextSpan> range, ArrayBuilder`1<DiagnosticData> result, Func`2<string, bool> shouldIncludeDiagnostic, bool includeSuppressedDiagnostics, bool includeCompilerDiagnostics, ICodeActionRequestPriorityProvider priorityProvider, bool blockForData, Func`2<string, IDisposable> addOperationScope, DiagnosticKind diagnosticKinds, bool isExplicit, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<GetDiagnosticsForSpanAsync>d__63")]
public Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsForSpanAsync(TextDocument document, Nullable`1<TextSpan> range, Func`2<string, bool> shouldIncludeDiagnostic, bool includeSuppressedDiagnostics, bool includeCompilerDiagnostics, ICodeActionRequestPriorityProvider priorityProvider, bool blockForData, Func`2<string, IDisposable> addOperationScope, DiagnosticKind diagnosticKinds, bool isExplicit, CancellationToken cancellationToken);
    public Task ForceAnalyzeProjectAsync(Project project, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<AnalyzeProjectAsync>d__68")]
private Task AnalyzeProjectAsync(Project project, bool forceAnalyzerRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<TextDocumentOpenAsync>d__69")]
private Task TextDocumentOpenAsync(TextDocument document, CancellationToken cancellationToken);
    private ImmutableArray`1<StateSet> GetStateSetsForFullSolutionAnalysis(ImmutableArray`1<StateSet> stateSets, Project project);
    private bool IsCandidateForFullSolutionAnalysis(DiagnosticAnalyzer analyzer, Project project);
    private void RaiseProjectDiagnosticsIfNeeded(Project project, IEnumerable`1<StateSet> stateSets, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> result);
    private void RaiseProjectDiagnosticsIfNeeded(Project project, IEnumerable`1<StateSet> stateSets, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> oldResult, ImmutableDictionary`2<DiagnosticAnalyzer, DiagnosticAnalysisResult> newResult);
    private void AddDocumentDiagnosticsArgsIfNeeded(TemporaryArray`1& builder, TextDocument document, DiagnosticAnalyzer analyzer, AnalysisKind kind, DiagnosticAnalysisResult oldResult, DiagnosticAnalysisResult newResult);
    private void AddDocumentDiagnosticsArgsIfNeeded(TemporaryArray`1& builder, TextDocument document, DiagnosticAnalyzer analyzer, AnalysisKind kind, ImmutableArray`1<DiagnosticData> oldItems, ImmutableArray`1<DiagnosticData> newItems, bool forceUpdate);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer/<CreateProjectDiagnosticsCreatedArgsAsync>d__76")]
private Task`1<ImmutableArray`1<DiagnosticsUpdatedArgs>> CreateProjectDiagnosticsCreatedArgsAsync(Project project, StateSet stateSet, DiagnosticAnalysisResult oldAnalysisResult, DiagnosticAnalysisResult newAnalysisResult, CancellationToken cancellationToken);
    private void AddProjectDiagnosticsRemovedArgs(TemporaryArray`1& builder, StateSet stateSet, ProjectId projectId, IEnumerable`1<DocumentId> documentIds, bool handleActiveFile);
    public TestAccessor GetTestAccessor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Diagnostics.IdeAnalyzerOptionsStorage : object {
    public static Option2`1<bool> CrashOnAnalyzerException;
    public static PerLanguageOption2`1<bool> ReportInvalidPlaceholdersInStringDotFormatCalls;
    public static PerLanguageOption2`1<bool> ReportInvalidRegexPatterns;
    public static PerLanguageOption2`1<bool> ReportInvalidJsonPatterns;
    public static PerLanguageOption2`1<bool> DetectAndOfferEditorFeaturesForProbableJsonStrings;
    private static IdeAnalyzerOptionsStorage();
    [ExtensionAttribute]
public static IdeAnalyzerOptions GetIdeAnalyzerOptions(IGlobalOptionService globalOptions, Project project);
    [ExtensionAttribute]
public static IdeAnalyzerOptions GetIdeAnalyzerOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.Diagnostics.InProcOrRemoteHostAnalyzerRunner : object {
    private bool _enabled;
    private IAsynchronousOperationListener _asyncOperationListener;
    [CompilerGeneratedAttribute]
private DiagnosticAnalyzerInfoCache <AnalyzerInfoCache>k__BackingField;
    public DiagnosticAnalyzerInfoCache AnalyzerInfoCache { get; }
    public InProcOrRemoteHostAnalyzerRunner(bool enabled, DiagnosticAnalyzerInfoCache analyzerInfoCache, IAsynchronousOperationListener operationListener);
    [CompilerGeneratedAttribute]
public DiagnosticAnalyzerInfoCache get_AnalyzerInfoCache();
    public Task`1<DiagnosticAnalysisResultMap`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> AnalyzeDocumentAsync(DocumentAnalysisScope documentAnalysisScope, CompilationWithAnalyzers compilationWithAnalyzers, bool isExplicit, bool logPerformanceInfo, bool getTelemetryInfo, CancellationToken cancellationToken);
    public Task`1<DiagnosticAnalysisResultMap`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> AnalyzeProjectAsync(Project project, CompilationWithAnalyzers compilationWithAnalyzers, bool forceExecuteAllAnalyzers, bool logPerformanceInfo, bool getTelemetryInfo, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.InProcOrRemoteHostAnalyzerRunner/<AnalyzeAsync>d__8")]
private Task`1<DiagnosticAnalysisResultMap`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> AnalyzeAsync(DocumentAnalysisScope documentAnalysisScope, Project project, CompilationWithAnalyzers compilationWithAnalyzers, bool isExplicit, bool forceExecuteAllAnalyzers, bool logPerformanceInfo, bool getTelemetryInfo, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.InProcOrRemoteHostAnalyzerRunner/<GetSourceGeneratorDiagnosticsAsync>d__9")]
public Task`1<ImmutableArray`1<Diagnostic>> GetSourceGeneratorDiagnosticsAsync(Project project, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.InProcOrRemoteHostAnalyzerRunner/<AnalyzeInProcAsync>d__10")]
private Task`1<DiagnosticAnalysisResultMap`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> AnalyzeInProcAsync(DocumentAnalysisScope documentAnalysisScope, Project project, CompilationWithAnalyzers compilationWithAnalyzers, RemoteHostClient client, bool logPerformanceInfo, bool getTelemetryInfo, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.InProcOrRemoteHostAnalyzerRunner/<FireAndForgetReportAnalyzerPerformanceAsync>d__11")]
private Task FireAndForgetReportAnalyzerPerformanceAsync(DocumentAnalysisScope documentAnalysisScope, Project project, RemoteHostClient client, AnalysisResult analysisResult, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Diagnostics.InProcOrRemoteHostAnalyzerRunner/<AnalyzeOutOfProcAsync>d__12")]
private static Task`1<DiagnosticAnalysisResultMap`2<DiagnosticAnalyzer, DiagnosticAnalysisResult>> AnalyzeOutOfProcAsync(DocumentAnalysisScope documentAnalysisScope, Project project, CompilationWithAnalyzers compilationWithAnalyzers, RemoteHostClient client, bool isExplicit, bool forceExecuteAllAnalyzers, bool logPerformanceInfo, bool getTelemetryInfo, CancellationToken cancellationToken);
    private static ImmutableDictionary`2<DocumentId, ImmutableArray`1<DiagnosticData>> Hydrate(ImmutableArray`1<ValueTuple`2<DocumentId, ImmutableArray`1<DiagnosticData>>> diagnosticByDocument, Project project);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.DocumentationComments.DocumentationCommentOptionsStorage : object {
    public static PerLanguageOption2`1<bool> AutoXmlDocCommentGeneration;
    private static DocumentationCommentOptionsStorage();
    [ExtensionAttribute]
public static DocumentationCommentOptions GetDocumentationCommentOptions(IGlobalOptionService globalOptions, LineFormattingOptions lineFormatting, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.DocumentHighlighting.HighlightingOptionsStorage : object {
    private static OptionGroup s_highlightingGroup;
    public static PerLanguageOption2`1<bool> HighlightRelatedRegexComponentsUnderCursor;
    public static PerLanguageOption2`1<bool> HighlightRelatedJsonComponentsUnderCursor;
    private static HighlightingOptionsStorage();
    [ExtensionAttribute]
public static HighlightingOptions GetHighlightingOptions(IGlobalOptionService globalOptions, string language);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ExtractMethod.ExtractMethodOptionsStorage : object {
    public static PerLanguageOption2`1<bool> DoNotPutOutOrRefOnStruct;
    private static ExtractMethodOptionsStorage();
    [ExtensionAttribute]
public static ExtractMethodOptions GetExtractMethodOptions(IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static ExtractMethodGenerationOptions GetExtractMethodGenerationOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
    [ExtensionAttribute]
public static ValueTask`1<ExtractMethodGenerationOptions> GetExtractMethodGenerationOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.FindUsages.FindUsagesOptionsStorage : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static FindUsagesOptions GetFindUsagesOptions(IGlobalOptionService globalOptions, string language);
}
internal class Microsoft.CodeAnalysis.FindUsages.SimpleFindUsagesContext : FindUsagesContext {
    private object _gate;
    private Builder<DefinitionItem> _definitionItems;
    private Builder<SourceReferenceItem> _referenceItems;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchTitle>k__BackingField;
    public string Message { get; private set; }
    public string SearchTitle { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_SearchTitle();
    [CompilerGeneratedAttribute]
private void set_SearchTitle(string value);
    public virtual ValueTask ReportNoResultsAsync(string message, CancellationToken cancellationToken);
    public virtual ValueTask SetSearchTitleAsync(string title, CancellationToken cancellationToken);
    public ImmutableArray`1<DefinitionItem> GetDefinitions();
    public ImmutableArray`1<SourceReferenceItem> GetReferences();
    public virtual ValueTask OnDefinitionFoundAsync(DefinitionItem definition, CancellationToken cancellationToken);
    public virtual ValueTask OnReferenceFoundAsync(SourceReferenceItem reference, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Formatting.AutoFormattingOptionsStorage : object {
    internal static PerLanguageOption2`1<bool> FormatOnReturn;
    public static PerLanguageOption2`1<bool> FormatOnTyping;
    public static PerLanguageOption2`1<bool> FormatOnSemicolon;
    public static PerLanguageOption2`1<bool> FormatOnCloseBrace;
    private static AutoFormattingOptionsStorage();
    [ExtensionAttribute]
public static AutoFormattingOptions GetAutoFormattingOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Formatting.DocumentFormattingOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<DocumentFormattingOptions> GetDocumentFormattingOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static DocumentFormattingOptions GetDocumentFormattingOptions(IGlobalOptionService globalOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Formatting.LineFormattingOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<LineFormattingOptions> GetLineFormattingOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static LineFormattingOptions GetLineFormattingOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.Formatting.RazorLineFormattingOptionsStorage : object {
    internal static Option2`1<bool> UseTabs;
    internal static Option2`1<int> TabSize;
    private static RazorLineFormattingOptionsStorage();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Formatting.SyntaxFormattingOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<SyntaxFormattingOptions> GetSyntaxFormattingOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static SyntaxFormattingOptions GetSyntaxFormattingOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Host.WorkspaceConfigurationOptionsStorage : object {
    public static Option2`1<StorageDatabase> Database;
    public static Option2`1<bool> DisableRecoverableText;
    public static Option2`1<bool> ValidateCompilationTrackerStates;
    public static Option2`1<Nullable`1<bool>> EnableOpeningSourceGeneratedFilesInWorkspace;
    public static Option2`1<bool> EnableOpeningSourceGeneratedFilesInWorkspaceFeatureFlag;
    private static WorkspaceConfigurationOptionsStorage();
    [ExtensionAttribute]
public static WorkspaceConfigurationOptions GetWorkspaceConfigurationOptions(IGlobalOptionService globalOptions);
}
[ExportWorkspaceServiceAttribute("Microsoft.CodeAnalysis.Host.IWorkspaceConfigurationService", "Host")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.Host.WorkspaceConfigurationService : object {
    [NullableAttribute("1")]
private IGlobalOptionService _globalOptions;
    private Nullable`1<WorkspaceConfigurationOptions> _lazyOptions;
    public WorkspaceConfigurationOptions Options { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public WorkspaceConfigurationService(IGlobalOptionService globalOptions);
    public sealed virtual WorkspaceConfigurationOptions get_Options();
    internal void Clear();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.ImplementType.ImplementTypeOptionsStorage : object {
    private static OptionGroup s_implementTypeGroup;
    public static PerLanguageOption2`1<ImplementTypeInsertionBehavior> InsertionBehavior;
    public static PerLanguageOption2`1<ImplementTypePropertyGenerationBehavior> PropertyGenerationBehavior;
    private static ImplementTypeOptionsStorage();
    [ExtensionAttribute]
public static ImplementTypeOptions GetImplementTypeOptions(IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static ImplementTypeGenerationOptions GetImplementTypeGenerationOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Indentation.IndentationOptionsStorage : object {
    public static PerLanguageOption2`1<IndentStyle> SmartIndent { get; }
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.Indentation.IndentationOptionsStorage/<GetIndentationOptionsAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IndentationOptions> GetIndentationOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    public static PerLanguageOption2`1<IndentStyle> get_SmartIndent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.InlineHints.InlineHintsOptionsStorage : object {
    private static OptionGroup s_inlayHintOptionGroup;
    public static PerLanguageOption2`1<bool> EnabledForParameters;
    public static PerLanguageOption2`1<bool> ForLiteralParameters;
    public static PerLanguageOption2`1<bool> ForIndexerParameters;
    public static PerLanguageOption2`1<bool> ForObjectCreationParameters;
    public static PerLanguageOption2`1<bool> ForOtherParameters;
    public static PerLanguageOption2`1<bool> SuppressForParametersThatDifferOnlyBySuffix;
    public static PerLanguageOption2`1<bool> SuppressForParametersThatMatchMethodIntent;
    public static PerLanguageOption2`1<bool> SuppressForParametersThatMatchArgumentName;
    public static PerLanguageOption2`1<bool> EnabledForTypes;
    public static PerLanguageOption2`1<bool> ForImplicitVariableTypes;
    public static PerLanguageOption2`1<bool> ForLambdaParameterTypes;
    public static PerLanguageOption2`1<bool> ForImplicitObjectCreation;
    private static InlineHintsOptionsStorage();
    [ExtensionAttribute]
public static InlineHintsOptions GetInlineHintsOptions(IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static InlineParameterHintsOptions GetInlineParameterHintsOptions(IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static InlineTypeHintsOptions GetInlineTypeHintsOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.AbstractLspServiceProvider : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<Lazy`2<ILspService, LspServiceMetadataView>> _lspServices;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<Lazy`2<ILspServiceFactory, LspServiceMetadataView>> _lspServiceFactories;
    public AbstractLspServiceProvider(IEnumerable`1<Lazy`2<ILspService, LspServiceMetadataView>> specificLspServices, IEnumerable`1<Lazy`2<ILspServiceFactory, LspServiceMetadataView>> specificLspServiceFactories);
    public LspServices CreateServices(WellKnownLspServerKinds serverKind, ImmutableDictionary`2<Type, ImmutableArray`1<Func`2<ILspServices, object>>> baseServices);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportAttribute("Microsoft.CodeAnalysis.LanguageServer.ILanguageServerFactory")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.CSharpVisualBasicLanguageServerFactory : object {
    private AbstractLspServiceProvider _lspServiceProvider;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CSharpVisualBasicLanguageServerFactory(CSharpVisualBasicLspServiceProvider lspServiceProvider);
    public sealed virtual AbstractLanguageServer`1<RequestContext> Create(JsonRpc jsonRpc, ICapabilitiesProvider capabilitiesProvider, WellKnownLspServerKinds serverKind, AbstractLspLogger logger, HostServices hostServices);
    public AbstractLanguageServer`1<RequestContext> Create(Stream input, Stream output, ICapabilitiesProvider capabilitiesProvider, AbstractLspLogger logger, HostServices hostServices);
}
[ExportAttribute("Microsoft.CodeAnalysis.LanguageServer.CSharpVisualBasicLspServiceProvider")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.CSharpVisualBasicLspServiceProvider : AbstractLspServiceProvider {
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CSharpVisualBasicLspServiceProvider(IEnumerable`1<Lazy`2<ILspService, LspServiceMetadataView>> lspServices, IEnumerable`1<Lazy`2<ILspServiceFactory, LspServiceMetadataView>> lspServiceFactories);
}
[ExportAttribute("Microsoft.CodeAnalysis.LanguageServer.ExperimentalCapabilitiesProvider")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.ExperimentalCapabilitiesProvider : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<Lazy`2<CompletionProvider, CompletionProviderMetadata>> _completionProviders;
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public ExperimentalCapabilitiesProvider(IEnumerable`1<Lazy`2<CompletionProvider, CompletionProviderMetadata>> completionProviders);
    public void Initialize();
    [NullableContextAttribute("1")]
public sealed virtual ServerCapabilities GetCapabilities(ClientCapabilities clientCapabilities);
    [NullableContextAttribute("1")]
private static VSInternalServerCapabilities GetVSServerCapabilities();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
[MetadataAttributeAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.ExportLspServiceFactoryAttribute : ExportAttribute {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private WellKnownLspServerKinds <ServerKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStateless>k__BackingField;
    public Type Type { get; }
    public WellKnownLspServerKinds ServerKind { get; }
    public bool IsStateless { get; }
    public ExportLspServiceFactoryAttribute(Type type, string contractName, WellKnownLspServerKinds serverKind);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public WellKnownLspServerKinds get_ServerKind();
    [CompilerGeneratedAttribute]
public bool get_IsStateless();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1028")]
[MetadataAttributeAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.ExportStatelessLspServiceAttribute : ExportAttribute {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<WellKnownLspServerKinds> <ServerKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStateless>k__BackingField;
    public Type Type { get; }
    public Nullable`1<WellKnownLspServerKinds> ServerKind { get; }
    public bool IsStateless { get; }
    public ExportStatelessLspServiceAttribute(Type type, string contractName, WellKnownLspServerKinds serverKind);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public Nullable`1<WellKnownLspServerKinds> get_ServerKind();
    [CompilerGeneratedAttribute]
public bool get_IsStateless();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.LanguageServer.Extensions : object {
    [ExtensionAttribute]
public static Uri GetURI(TextDocument document);
    [ExtensionAttribute]
public static Uri GetUriForRenamedDocument(TextDocument document);
    [ExtensionAttribute]
public static Uri CreateUriForDocumentWithoutFilePath(TextDocument document);
    [ExtensionAttribute]
public static ImmutableArray`1<Document> GetDocuments(Solution solution, Uri documentUri);
    [ExtensionAttribute]
public static ImmutableArray`1<Document> GetDocuments(Solution solution, string documentPath);
    [ExtensionAttribute]
public static ImmutableArray`1<TextDocument> GetTextDocuments(Solution solution, Uri documentUri);
    [ExtensionAttribute]
public static ImmutableArray`1<DocumentId> GetDocumentIds(Solution solution, Uri documentUri);
    [ExtensionAttribute]
public static Document GetDocument(Solution solution, TextDocumentIdentifier documentIdentifier);
    private static T FindItemInProjectContext(ImmutableArray`1<T> items, TextDocumentIdentifier itemIdentifier, Func`2<T, ProjectId> projectIdGetter, Func`1<T> defaultGetter);
    [ExtensionAttribute]
public static T FindDocumentInProjectContext(ImmutableArray`1<T> documents, TextDocumentIdentifier documentIdentifier, Func`3<Solution, DocumentId, T> documentGetter);
    [ExtensionAttribute]
public static Project GetProject(Solution solution, TextDocumentIdentifier projectIdentifier);
    [ExtensionAttribute]
public static TextDocument GetAdditionalDocument(Solution solution, TextDocumentIdentifier documentIdentifier);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Extensions/<GetPositionFromLinePositionAsync>d__12")]
[ExtensionAttribute]
public static Task`1<int> GetPositionFromLinePositionAsync(TextDocument document, LinePosition linePosition, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool HasVisualStudioLspCapability(ClientCapabilities clientCapabilities);
    [ExtensionAttribute]
public static bool HasCompletionListDataCapability(ClientCapabilities clientCapabilities);
    [ExtensionAttribute]
public static bool HasCompletionListCommitCharactersCapability(ClientCapabilities clientCapabilities);
    [ExtensionAttribute]
public static string GetMarkdownLanguageName(Document document);
    [ExtensionAttribute]
public static ClassifiedTextElement GetClassifiedText(DefinitionItem definition);
    private static bool TryGetVSCompletionListSetting(ClientCapabilities clientCapabilities, VSInternalCompletionListSetting& completionListSetting);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.FormatNewFileHandler", "8")]
[SharedAttribute]
[MethodAttribute("roslyn/formatNewFile")]
internal class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.FormatNewFileHandler : object {
    [NullableAttribute("1")]
public static string FormatNewFileMethodName;
    [NullableAttribute("1")]
private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public FormatNewFileHandler(IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.FormatNewFileHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<string> HandleRequestAsync(FormatNewFileParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.FormatNewFileParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Contents>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
[DataMemberAttribute]
public TextDocumentIdentifier Document { get; public set; }
    [RequiredMemberAttribute]
[DataMemberAttribute]
public TextDocumentIdentifier Project { get; public set; }
    [RequiredMemberAttribute]
[DataMemberAttribute]
public string Contents { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private FormatNewFileParams(FormatNewFileParams original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TextDocumentIdentifier get_Document();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Document(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public TextDocumentIdentifier get_Project();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Project(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public string get_Contents();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Contents(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(FormatNewFileParams left, FormatNewFileParams right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(FormatNewFileParams left, FormatNewFileParams right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(FormatNewFileParams other);
    [CompilerGeneratedAttribute]
public FormatNewFileParams <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[MethodAttribute("roslyn/semanticTokenRanges")]
internal class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SemanticTokensRangesHandler : object {
    public static string SemanticRangesMethodName;
    private IGlobalOptionService _globalOptions;
    private SemanticTokensRefreshQueue _semanticTokenRefreshQueue;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public SemanticTokensRangesHandler(IGlobalOptionService globalOptions, SemanticTokensRefreshQueue semanticTokensRefreshQueue);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(SemanticTokensRangesParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SemanticTokensRangesHandler/<HandleRequestAsync>d__9")]
public sealed virtual Task`1<SemanticTokens> HandleRequestAsync(SemanticTokensRangesParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SemanticTokensRangesParams : SemanticTokensParams {
    [CompilerGeneratedAttribute]
private Range[] <Ranges>k__BackingField;
    [RequiredMemberAttribute]
[DataMemberAttribute]
public Range[] Ranges { get; public set; }
    [CompilerGeneratedAttribute]
public Range[] get_Ranges();
    [CompilerGeneratedAttribute]
public void set_Ranges(Range[] value);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SimplifyMethodHandler", "8")]
[SharedAttribute]
[MethodAttribute("roslyn/simplifyMethod")]
internal class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SimplifyMethodHandler : object {
    [NullableAttribute("1")]
public static string SimplifyMethodMethodName;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(SimplifyMethodParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SimplifyMethodHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<TextEdit[]> HandleRequestAsync(SimplifyMethodParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SimplifyMethodParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private TextEdit <TextEdit>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
[DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [RequiredMemberAttribute]
[DataMemberAttribute]
public TextEdit TextEdit { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
protected SimplifyMethodParams(SimplifyMethodParams original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public TextEdit get_TextEdit();
    [CompilerGeneratedAttribute]
public void set_TextEdit(TextEdit value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(SimplifyMethodParams left, SimplifyMethodParams right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(SimplifyMethodParams left, SimplifyMethodParams right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(SimplifyMethodParams other);
    [CompilerGeneratedAttribute]
public virtual SimplifyMethodParams <Clone>$();
}
internal static class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.VSMac.AnalyzerHelper : object {
    [NullableContextAttribute("1")]
public static DiagnosticData CreateAnalyzerLoadFailureDiagnostic(AnalyzerLoadFailureEventArgs e, string fullPath, ProjectId projectId, string language);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.VSMac.API.IVSMacLspLogger {
    public abstract virtual void TraceInformation(string message);
    public abstract virtual void TraceWarning(string message);
    public abstract virtual void TraceError(string message);
    public abstract virtual void TraceException(Exception exception);
    public abstract virtual void TraceStart(string message);
    public abstract virtual void TraceStop(string message);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.VSMac.API.IVSMacLspLoggerFactory {
    public abstract virtual Task`1<IVSMacLspLogger> CreateLoggerAsync(string serverTypeName, JsonRpc jsonRpc, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.VSMac.CompletionOptionsAccessor : object {
    public static PerLanguageOption2`1<Nullable`1<bool>> ShowItemsFromUnimportedNamespaces { get; }
    public static PerLanguageOption2`1<bool> TriggerOnTypingLetters { get; }
    public static PerLanguageOption2`1<Nullable`1<bool>> TriggerOnDeletion { get; }
    public static PerLanguageOption2`1<Nullable`1<bool>> get_ShowItemsFromUnimportedNamespaces();
    public static PerLanguageOption2`1<bool> get_TriggerOnTypingLetters();
    public static PerLanguageOption2`1<Nullable`1<bool>> get_TriggerOnDeletion();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.VSMac.SolutionCrawlerOptionsAccessor : object {
    public static bool LowMemoryForcedMinimalBackgroundAnalysis { get; public set; }
    public static PerLanguageOption2`1<BackgroundAnalysisScope> BackgroundAnalysisScopeOption { get; }
    public static bool get_LowMemoryForcedMinimalBackgroundAnalysis();
    public static void set_LowMemoryForcedMinimalBackgroundAnalysis(bool value);
    public static PerLanguageOption2`1<BackgroundAnalysisScope> get_BackgroundAnalysisScopeOption();
    public static BackgroundAnalysisScope GetBackgroundAnalysisScope(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.LanguageServer.Features.Diagnostics.DiagnosticDataExtensions : object {
    [ExtensionAttribute]
internal static bool TryGetUnnecessaryDataLocations(DiagnosticData diagnosticData, Nullable`1& unnecessaryLocations);
    [ExtensionAttribute]
internal static bool TryGetUnnecessaryLocationIndices(DiagnosticData diagnosticData, String& unnecessaryIndices);
    [CompilerGeneratedAttribute]
internal static IEnumerable`1<int> <TryGetUnnecessaryDataLocations>g__GetLocationIndices|0_0(string indicesProperty);
}
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.AbstractFormatDocumentHandlerBase`2 : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.AbstractFormatDocumentHandlerBase`2/<GetTextEditsAsync>d__4")]
protected static Task`1<TextEdit[]> GetTextEditsAsync(RequestContext context, FormattingOptions options, IGlobalOptionService globalOptions, CancellationToken cancellationToken, Range range);
    [NullableContextAttribute("1")]
public abstract virtual TextDocumentIdentifier GetTextDocumentIdentifier(RequestType request);
    [NullableContextAttribute("1")]
public abstract virtual Task`1<ResponseType> HandleRequestAsync(RequestType request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.AbstractGoToDefinitionHandler : object {
    private IMetadataAsSourceFileService _metadataAsSourceFileService;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public AbstractGoToDefinitionHandler(IMetadataAsSourceFileService metadataAsSourceFileService, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(TextDocumentPositionParams request);
    public abstract virtual Task`1<Location[]> HandleRequestAsync(TextDocumentPositionParams request, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.AbstractGoToDefinitionHandler/<GetDefinitionAsync>d__9")]
protected Task`1<Location[]> GetDefinitionAsync(TextDocumentPositionParams request, bool typeOnly, RequestContext context, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static bool <GetDefinitionAsync>g__ShouldInclude|9_0(INavigableItem item, bool typeOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.AbstractRefreshQueue : object {
    [NullableAttribute("2")]
private AsyncBatchingWorkQueue`1<Uri> _refreshQueue;
    private LspWorkspaceManager _lspWorkspaceManager;
    private IClientLanguageServerManager _notificationManager;
    private IAsynchronousOperationListener _asyncListener;
    private CancellationTokenSource _disposalTokenSource;
    private LspWorkspaceRegistrationService _lspWorkspaceRegistrationService;
    protected bool _isQueueCreated;
    public AbstractRefreshQueue(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, LspWorkspaceManager lspWorkspaceManager, IClientLanguageServerManager notificationManager);
    protected abstract virtual string GetFeatureAttribute();
    protected abstract virtual Nullable`1<bool> GetRefreshSupport(ClientCapabilities clientCapabilities);
    protected abstract virtual string GetWorkspaceRefreshName();
    public sealed virtual Task OnInitializedAsync(ClientCapabilities clientCapabilities, RequestContext context, CancellationToken cancellationToken);
    private void OnLspSolutionChanged(object sender, WorkspaceChangeEventArgs e);
    [NullableContextAttribute("2")]
protected void EnqueueRefreshNotification(Uri documentUri);
    private ValueTask FilterLspTrackedDocumentsAsync(LspWorkspaceManager lspWorkspaceManager, IClientLanguageServerManager notificationManager, ImmutableSegmentedList`1<Uri> documentUris, CancellationToken cancellationToken);
    public virtual void Dispose();
    [CompilerGeneratedAttribute]
private ValueTask <OnInitializedAsync>b__11_0(ImmutableSegmentedList`1<Uri> documentUris, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress : object {
    public static BufferedProgress`1<T> Create(IProgress`1<T> progress);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void Report(BufferedProgress`1<T[]> progress, T item);
    [ExtensionAttribute]
public static T[] GetFlattenedValues(BufferedProgress`1<T[]> progress);
}
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1 : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IProgress`1<T> _underlyingProgress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ArrayBuilder`1<T> _buffer;
    public BufferedProgress`1(IProgress`1<T> underlyingProgress);
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public sealed virtual void Report(T value);
    public T[] GetValues();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.BuildOnlyDiagnosticIdsHandler", "8")]
[SharedAttribute]
[MethodAttribute("workspace/buildOnlyDiagnosticIds")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.BuildOnlyDiagnosticIdsHandler : object {
    public static string BuildOnlyDiagnosticIdsMethodName;
    private SharedGlobalCache _globalCache;
    private ImmutableDictionary`2<string, String[]> _compilerBuildOnlyDiagnosticIds;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public BuildOnlyDiagnosticIdsHandler(SharedGlobalCache globalCache, IEnumerable`1<Lazy`2<ILspBuildOnlyDiagnostics, ILspBuildOnlyDiagnosticsMetadata>> compilerBuildOnlyDiagnosticsProviders);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual Task`1<BuildOnlyDiagnosticIdsResult> HandleRequestAsync(RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.BuildOnlyDiagnosticIdsResult : object {
    [CompilerGeneratedAttribute]
private String[] <Ids>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DataMemberAttribute]
public String[] Ids { get; public set; }
    public BuildOnlyDiagnosticIdsResult(String[] Ids);
    [CompilerGeneratedAttribute]
protected BuildOnlyDiagnosticIdsResult(BuildOnlyDiagnosticIdsResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public String[] get_Ids();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Ids(String[] value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BuildOnlyDiagnosticIdsResult left, BuildOnlyDiagnosticIdsResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BuildOnlyDiagnosticIdsResult left, BuildOnlyDiagnosticIdsResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(BuildOnlyDiagnosticIdsResult other);
    [CompilerGeneratedAttribute]
public virtual BuildOnlyDiagnosticIdsResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String[]& Ids);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ClientLanguageServerManager : object {
    private JsonRpc _jsonRpc;
    public ClientLanguageServerManager(JsonRpc jsonRpc);
    public sealed virtual Task`1<TResponse> SendRequestAsync(string methodName, TParams params, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ClientLanguageServerManager/<SendRequestAsync>d__3")]
public sealed virtual ValueTask SendRequestAsync(string methodName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ClientLanguageServerManager/<SendRequestAsync>d__4`1")]
public sealed virtual ValueTask SendRequestAsync(string methodName, TParams params, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ClientLanguageServerManager/<SendNotificationAsync>d__5")]
public sealed virtual ValueTask SendNotificationAsync(string methodName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ClientLanguageServerManager/<SendNotificationAsync>d__6`1")]
public sealed virtual ValueTask SendNotificationAsync(string methodName, TParams params, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionResolveHandler", "8")]
[SharedAttribute]
[MethodAttribute("codeAction/resolve")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionResolveHandler : object {
    private ICodeFixService _codeFixService;
    private ICodeRefactoringService _codeRefactoringService;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CodeActionResolveHandler(ICodeFixService codeFixService, ICodeRefactoringService codeRefactoringService, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(CodeAction request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionResolveHandler/<HandleRequestAsync>d__9")]
public sealed virtual Task`1<CodeAction> HandleRequestAsync(CodeAction codeAction, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionFixAllResolveHandler", "8")]
[SharedAttribute]
[MethodAttribute("codeAction/resolveFixAll")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionFixAllResolveHandler : object {
    private ICodeFixService _codeFixService;
    private ICodeRefactoringService _codeRefactoringService;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CodeActionFixAllResolveHandler(ICodeFixService codeFixService, ICodeRefactoringService codeRefactoringService, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(RoslynFixAllCodeAction request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionFixAllResolveHandler/<HandleRequestAsync>d__9")]
public sealed virtual Task`1<RoslynFixAllCodeAction> HandleRequestAsync(RoslynFixAllCodeAction request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers : object {
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers/<GetVSCodeActionsAsync>d__0")]
public static Task`1<CodeAction[]> GetVSCodeActionsAsync(CodeActionParams request, TextDocument document, CodeActionOptionsProvider fallbackOptions, ICodeFixService codeFixService, ICodeRefactoringService codeRefactoringService, bool hasVsLspCapability, CancellationToken cancellationToken);
    private static bool IsCodeActionNotSupportedByLSP(IUnifiedSuggestedAction suggestedAction);
    private static CodeAction[] GenerateCodeActions(CodeActionParams request, IUnifiedSuggestedAction suggestedAction, CodeActionKind codeActionKind);
    private static ImmutableArray`1<CodeAction> CollectNestedActions(CodeActionParams request, CodeActionKind codeActionKind, Diagnostic[] diagnosticsForFix, IUnifiedSuggestedAction suggestedAction, ImmutableArray`1<string> pathOfParentAction, bool isTopLevelCodeAction);
    private static void AddLSPCodeActions(ArrayBuilder`1<CodeAction> builder, CodeAction codeAction, CodeActionParams request, CodeActionKind codeActionKind, Diagnostic[] diagnosticsForFix, Command nestedCodeActionCommand, Nullable`1<ImmutableArray`1<CodeAction>> nestedCodeActions, String[] codeActionPath, IUnifiedSuggestedAction suggestedAction);
    private static VSInternalCodeAction GenerateVSCodeAction(CodeActionParams request, SourceText documentText, IUnifiedSuggestedAction suggestedAction, CodeActionKind codeActionKind, CodeActionPriority setPriority, Range applicableRange, int currentSetNumber, ImmutableArray`1<string> codeActionPathList, Int32& currentHighestSetNumber);
    private static Diagnostic[] GetApplicableDiagnostics(CodeActionContext context, IUnifiedSuggestedAction action);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers/<GetCodeActionsAsync>d__7")]
public static Task`1<ImmutableArray`1<CodeAction>> GetCodeActionsAsync(TextDocument document, Range selection, CodeActionOptionsProvider fallbackOptions, ICodeFixService codeFixService, ICodeRefactoringService codeRefactoringService, string fixAllScope, CancellationToken cancellationToken);
    private static CodeAction GetNestedActionsFromActionSet(IUnifiedSuggestedAction suggestedAction, string fixAllScope);
    private static void GetFixAllActionsFromActionSet(IUnifiedSuggestedAction suggestedAction, ArrayBuilder`1<CodeAction> codeActions, string fixAllScope);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers/<GetActionSetsAsync>d__10")]
private static ValueTask`1<ImmutableArray`1<UnifiedSuggestedActionSet>> GetActionSetsAsync(TextDocument document, CodeActionOptionsProvider fallbackOptions, ICodeFixService codeFixService, ICodeRefactoringService codeRefactoringService, Range selection, CancellationToken cancellationToken);
    private static CodeActionKind GetCodeActionKindFromSuggestedActionCategoryName(string categoryName);
    private static Nullable`1<VSInternalPriorityLevel> UnifiedSuggestedActionSetPriorityToPriorityLevel(CodeActionPriority priority);
    public static CodeAction GetCodeActionToResolve(String[] codeActionPath, ImmutableArray`1<CodeAction> codeActions, bool isFixAllAction);
    [CompilerGeneratedAttribute]
internal static VSInternalCodeAction[] <GenerateVSCodeAction>g__GenerateNestedVSCodeActions|5_0(CodeActionParams request, SourceText documentText, IUnifiedSuggestedAction suggestedAction, CodeActionKind codeActionKind, Int32& currentHighestSetNumber, ImmutableArray`1<string> codeActionPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionResolveData : object {
    [CompilerGeneratedAttribute]
private string <UniqueIdentifier>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <CustomTags>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <CodeActionPath>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <FixAllFlavors>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<ImmutableArray`1<CodeAction>> <NestedCodeActions>k__BackingField;
    public string UniqueIdentifier { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> CustomTags { get; }
    public Range Range { get; }
    public TextDocumentIdentifier TextDocument { get; }
    public String[] CodeActionPath { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyAttribute]
public String[] FixAllFlavors { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyAttribute]
public Nullable`1<ImmutableArray`1<CodeAction>> NestedCodeActions { get; }
    public CodeActionResolveData(string uniqueIdentifier, ImmutableArray`1<string> customTags, Range range, TextDocumentIdentifier textDocument, String[] codeActionPath, String[] fixAllFlavors, Nullable`1<ImmutableArray`1<CodeAction>> nestedCodeActions);
    [CompilerGeneratedAttribute]
public string get_UniqueIdentifier();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_CustomTags();
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public String[] get_CodeActionPath();
    [CompilerGeneratedAttribute]
public String[] get_FixAllFlavors();
    [CompilerGeneratedAttribute]
public Nullable`1<ImmutableArray`1<CodeAction>> get_NestedCodeActions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionResolveHelper : object {
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionResolveHelper/<GetCodeActionResolveEditsAsync>d__0")]
public static Task`1<WorkspaceEdit> GetCodeActionResolveEditsAsync(RequestContext context, CodeActionResolveData data, ImmutableArray`1<CodeActionOperation> operations, CancellationToken cancellationToken);
    private static bool HasDocumentNameChange(DocumentId documentId, Solution newSolution, Solution oldSolution);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.FixAllCodeAction : AbstractFixAllCodeAction {
    private string _title;
    public string Title { get; }
    public FixAllCodeAction(string title, IFixAllState fixAllState, bool showPreviewChangesDialog);
    public virtual string get_Title();
    protected virtual IFixAllContext CreateFixAllContext(IFixAllState fixAllState, IProgress`1<CodeAnalysisProgress> progressTracker, CancellationToken cancellationToken);
    protected virtual bool IsInternalProvider(IFixAllState fixAllState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.RoslynFixAllCodeAction : CodeAction {
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonPropertyAttribute]
public string Scope { get; }
    public RoslynFixAllCodeAction(string scope);
    [CompilerGeneratedAttribute]
public string get_Scope();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionsHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/codeAction")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionsHandler : object {
    private ICodeFixService _codeFixService;
    private ICodeRefactoringService _codeRefactoringService;
    private IGlobalOptionService _globalOptions;
    internal static string RunCodeActionCommandName;
    internal static string RunFixAllCodeActionCommandName;
    internal static string RunNestedCodeActionCommandName;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CodeActionsHandler(ICodeFixService codeFixService, ICodeRefactoringService codeRefactoringService, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(CodeActionParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionsHandler/<HandleRequestAsync>d__12")]
public sealed virtual Task`1<CodeAction[]> HandleRequestAsync(CodeActionParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/codeLens")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensHandler : object {
    public static string RunTestsCommandIdentifier;
    private IGlobalOptionService _globalOptionService;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CodeLensHandler(IGlobalOptionService globalOptionService);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(CodeLensParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensHandler/<HandleRequestAsync>d__8")]
public sealed virtual Task`1<CodeLens[]> HandleRequestAsync(CodeLensParams request, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensHandler/<AddReferencesCodeLensAsync>d__9")]
private static Task AddReferencesCodeLensAsync(ArrayBuilder`1<CodeLens> codeLenses, ImmutableArray`1<CodeLensMember> members, Document document, SourceText text, TextDocumentIdentifier textDocumentIdentifier, CancellationToken cancellationToken);
    private static void AddTestCodeLens(ArrayBuilder`1<CodeLens> codeLenses, ImmutableArray`1<CodeLensMember> members, Document document, SourceText text, TextDocumentIdentifier textDocumentIdentifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensRefreshQueue : AbstractRefreshQueue {
    private IGlobalOptionService _globalOptionService;
    public CodeLensRefreshQueue(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, LspWorkspaceManager lspWorkspaceManager, IClientLanguageServerManager notificationManager, IGlobalOptionService globalOptionService);
    protected virtual string GetFeatureAttribute();
    protected virtual Nullable`1<bool> GetRefreshSupport(ClientCapabilities clientCapabilities);
    protected virtual string GetWorkspaceRefreshName();
    private void OnOptionChanged(object sender, OptionChangedEventArgs e);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensRefreshQueue", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensRefreshQueueFactory : object {
    private IAsynchronousOperationListenerProvider _asyncListenerProvider;
    private LspWorkspaceRegistrationService _lspWorkspaceRegistrationService;
    private IGlobalOptionService _globalOptionService;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CodeLensRefreshQueueFactory(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, IGlobalOptionService globalOptionService);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveData : DocumentResolveData {
    [CompilerGeneratedAttribute]
private string <SyntaxVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ListIndex>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string SyntaxVersion { get; public set; }
    public int ListIndex { get; public set; }
    public CodeLensResolveData(string SyntaxVersion, int ListIndex, TextDocumentIdentifier TextDocument);
    [CompilerGeneratedAttribute]
private CodeLensResolveData(CodeLensResolveData original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_SyntaxVersion();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SyntaxVersion(string value);
    [CompilerGeneratedAttribute]
public int get_ListIndex();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ListIndex(int value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CodeLensResolveData left, CodeLensResolveData right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CodeLensResolveData left, CodeLensResolveData right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(DocumentResolveData other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(CodeLensResolveData other);
    [CompilerGeneratedAttribute]
public virtual DocumentResolveData <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& SyntaxVersion, Int32& ListIndex, TextDocumentIdentifier& TextDocument);
}
[MethodAttribute("codeLens/resolve")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveHandler : object {
    [NullableAttribute("1")]
private static string ClientReferencesCommand;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(CodeLens request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<CodeLens> HandleRequestAsync(CodeLens request, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
private static CodeLensResolveData GetCodeLensResolveData(CodeLens codeLens);
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveHandlerFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Commands.AbstractExecuteWorkspaceCommandHandler : object {
    [NullableAttribute("1")]
public string Command { get; }
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
public abstract virtual string get_Command();
    public abstract virtual bool get_MutatesSolutionState();
    public abstract virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public abstract virtual TextDocumentIdentifier GetTextDocumentIdentifier(ExecuteCommandParams request);
    [NullableContextAttribute("1")]
public abstract virtual Task`1<object> HandleRequestAsync(ExecuteCommandParams request, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public static string GetRequestNameForCommandName(string commandName);
}
[MetadataAttributeAttribute]
[AttributeUsageAttribute("4")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Commands.CommandAttribute : MethodAttribute {
    [NullableContextAttribute("1")]
public CommandAttribute(string command);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.AbstractLspCompletionResultCreationService : object {
    [CompilerGeneratedAttribute]
private static String[] <DefaultCommitCharactersArray>k__BackingField;
    public static String[] DefaultCommitCharactersArray { get; }
    private static AbstractLspCompletionResultCreationService();
    protected abstract virtual Task`1<CompletionItem> CreateItemAndPopulateTextEditAsync(Document document, SourceText documentText, bool snippetsSupported, bool itemDefaultsSupported, TextSpan defaultSpan, string typedText, CompletionItem item, CompletionService completionService, CancellationToken cancellationToken);
    public abstract virtual Task`1<CompletionItem> ResolveAsync(CompletionItem lspItem, CompletionItem roslynItem, TextDocumentIdentifier textDocumentIdentifier, Document document, CompletionCapabilityHelper capabilityHelper, CompletionService completionService, CompletionOptions completionOptions, SymbolDescriptionOptions symbolDescriptionOptions, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public static String[] get_DefaultCommitCharactersArray();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.AbstractLspCompletionResultCreationService/<ConvertToLspCompletionListAsync>d__5")]
public sealed virtual Task`1<CompletionList> ConvertToLspCompletionListAsync(Document document, int position, CompletionCapabilityHelper capabilityHelper, CompletionList list, bool isIncomplete, long resultId, CancellationToken cancellationToken);
    public static String[] CreateCommitCharacterArrayFromRules(CompletionItemRules rules);
    protected static void PopulateTextEdit(CompletionItem lspItem, TextSpan completionChangeSpan, string completionChangeNewText, SourceText documentText, bool itemDefaultsSupported, TextSpan defaultSpan);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.AbstractLspCompletionResultCreationService/<GetChangeAndPopulateSimpleTextEditAsync>d__9")]
protected static Task GetChangeAndPopulateSimpleTextEditAsync(Document document, SourceText documentText, bool itemDefaultsSupported, TextSpan defaultSpan, CompletionItem item, CompletionItem lspItem, CompletionService completionService, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.AbstractLspCompletionResultCreationService/<GenerateAdditionalTextEditForImportCompletionAsync>d__10")]
public static Task`1<TextEdit[]> GenerateAdditionalTextEditForImportCompletionAsync(CompletionItem selectedItem, Document document, CompletionService completionService, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.AbstractLspCompletionResultCreationService/<GetCompletionChangeOrDisplayNameInCaseOfExceptionAsync>d__11")]
private static Task`1<CompletionChange> GetCompletionChangeOrDisplayNameInCaseOfExceptionAsync(CompletionService completionService, Document document, CompletionItem completionItem, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.AbstractLspCompletionResultCreationService/<GenerateComplexTextEditAsync>d__12")]
public static Task`1<ValueTuple`3<TextEdit, bool, Nullable`1<int>>> GenerateComplexTextEditAsync(Document document, CompletionService completionService, CompletionItem selectedItem, bool snippetsSupported, bool insertNewPositionPlaceholder, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static CompletionItemKind <ConvertToLspCompletionListAsync>g__GetCompletionKind|5_1(ImmutableArray`1<string> tags, ISet`1<CompletionItemKind> supportedClientKinds);
    [CompilerGeneratedAttribute]
internal static String[] <ConvertToLspCompletionListAsync>g__GetCommitCharacters|5_2(CompletionItem item, Dictionary`2<ImmutableArray`1<CharacterSetModificationRule>, String[]> currentRuleCache);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionCapabilityHelper : object {
    public static string CommitCharactersPropertyName;
    public static string DataPropertyName;
    public static string EditRangePropertyName;
    [NullableAttribute("2")]
private CompletionSetting _completionSetting;
    [NullableAttribute("2")]
private VSInternalCompletionSetting _vsCompletionSetting;
    [CompilerGeneratedAttribute]
private bool <SupportVSInternalClientCapabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportDefaultEditRange>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportCompletionListData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportVSInternalCompletionListData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportDefaultCommitCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportVSInternalDefaultCommitCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportSnippets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsMarkdownDocumentation>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<CompletionItemKind> <SupportedItemKinds>k__BackingField;
    public bool SupportVSInternalClientCapabilities { get; }
    public bool SupportDefaultEditRange { get; }
    public bool SupportCompletionListData { get; }
    public bool SupportVSInternalCompletionListData { get; }
    public bool SupportDefaultCommitCharacters { get; }
    public bool SupportVSInternalDefaultCommitCharacters { get; }
    public bool SupportSnippets { get; }
    public bool SupportsMarkdownDocumentation { get; }
    public ISet`1<CompletionItemKind> SupportedItemKinds { get; }
    public CompletionCapabilityHelper(ClientCapabilities clientCapabilities);
    [CompilerGeneratedAttribute]
public bool get_SupportVSInternalClientCapabilities();
    [CompilerGeneratedAttribute]
public bool get_SupportDefaultEditRange();
    [CompilerGeneratedAttribute]
public bool get_SupportCompletionListData();
    [CompilerGeneratedAttribute]
public bool get_SupportVSInternalCompletionListData();
    [CompilerGeneratedAttribute]
public bool get_SupportDefaultCommitCharacters();
    [CompilerGeneratedAttribute]
public bool get_SupportVSInternalDefaultCommitCharacters();
    [CompilerGeneratedAttribute]
public bool get_SupportSnippets();
    [CompilerGeneratedAttribute]
public bool get_SupportsMarkdownDocumentation();
    [CompilerGeneratedAttribute]
public ISet`1<CompletionItemKind> get_SupportedItemKinds();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionListCache : ResolveCache`1<CacheEntry> {
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionListCache", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionListCacheFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionResolveData : DocumentResolveData {
    [CompilerGeneratedAttribute]
private long <ResultId>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public long ResultId { get; public set; }
    public CompletionResolveData(long ResultId, TextDocumentIdentifier TextDocument);
    [CompilerGeneratedAttribute]
private CompletionResolveData(CompletionResolveData original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public long get_ResultId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResultId(long value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CompletionResolveData left, CompletionResolveData right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CompletionResolveData left, CompletionResolveData right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(DocumentResolveData other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(CompletionResolveData other);
    [CompilerGeneratedAttribute]
public virtual DocumentResolveData <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int64& ResultId, TextDocumentIdentifier& TextDocument);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportWorkspaceServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.ILspCompletionResultCreationService", "Default")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.DefaultLspCompletionResultCreationService : AbstractLspCompletionResultCreationService {
    public static string CompleteComplexEditCommand;
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.DefaultLspCompletionResultCreationService/<CreateItemAndPopulateTextEditAsync>d__2")]
protected virtual Task`1<CompletionItem> CreateItemAndPopulateTextEditAsync(Document document, SourceText documentText, bool snippetsSupported, bool itemDefaultsSupported, TextSpan defaultSpan, string typedText, CompletionItem item, CompletionService completionService, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.DefaultLspCompletionResultCreationService/<ResolveAsync>d__3")]
public virtual Task`1<CompletionItem> ResolveAsync(CompletionItem lspItem, CompletionItem roslynItem, TextDocumentIdentifier textDocumentIdentifier, Document document, CompletionCapabilityHelper capabilityHelper, CompletionService completionService, CompletionOptions completionOptions, SymbolDescriptionOptions symbolDescriptionOptions, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.ILspCompletionResultCreationService {
    public abstract virtual Task`1<CompletionList> ConvertToLspCompletionListAsync(Document document, int position, CompletionCapabilityHelper capabilityHelper, CompletionList list, bool isIncomplete, long resultId, CancellationToken cancellationToken);
    public abstract virtual Task`1<CompletionItem> ResolveAsync(CompletionItem lspItem, CompletionItem roslynItem, TextDocumentIdentifier textDocumentIdentifier, Document document, CompletionCapabilityHelper capabilityHelper, CompletionService completionService, CompletionOptions completionOptions, SymbolDescriptionOptions symbolDescriptionOptions, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/completion")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionHandler : object {
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CompletionHandler(IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(CompletionParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<CompletionList> HandleRequestAsync(CompletionParams request, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionHandler/<GetFilteredCompletionListAsync>d__8")]
private Task`1<Nullable`1<ValueTuple`3<CompletionList, bool, long>>> GetFilteredCompletionListAsync(CompletionParams request, RequestContext context, SourceText sourceText, Document document, CompletionOptions completionOptions, CompletionService completionService, CompletionCapabilityHelper capabilityHelper, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionHandler/<CalculateListAsync>d__9")]
private static Task`1<Nullable`1<ValueTuple`2<CompletionList, long>>> CalculateListAsync(Document document, int position, CompletionTrigger completionTrigger, CompletionOptions completionOptions, CompletionService completionService, CompletionListCache completionListCache, CancellationToken cancellationToken);
    private static ValueTuple`2<CompletionList, bool> FilterCompletionList(CompletionList completionList, int completionListMaxSize, CompletionTrigger completionTrigger, SourceText sourceText);
    private CompletionOptions GetCompletionOptions(Document document, CompletionCapabilityHelper capabilityHelper);
    [CompilerGeneratedAttribute]
internal static CompletionFilterReason <FilterCompletionList>g__GetFilterReason|10_2(CompletionTrigger trigger);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[MethodAttribute("completionItem/resolve")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionResolveHandler : object {
    private CompletionListCache _completionListCache;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public CompletionResolveHandler(IGlobalOptionService globalOptions, CompletionListCache completionListCache);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(CompletionItem request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionResolveHandler/<HandleRequestAsync>d__8")]
public sealed virtual Task`1<CompletionItem> HandleRequestAsync(CompletionItem completionItem, RequestContext context, CancellationToken cancellationToken);
    private static bool MatchesLSPCompletionItem(CompletionItem lspCompletionItem, CompletionItem completionItem);
    private static TextDocumentIdentifier GetTextDocumentCacheEntry(CompletionItem request);
    private CacheEntry GetCompletionListCacheEntry(CompletionItem request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionResolveHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionResolveHandlerFactory : object {
    private IGlobalOptionService _globalOptions;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public CompletionResolveHandlerFactory(IGlobalOptionService globalOptions);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[MethodAttribute("workspace/didChangeConfiguration")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler : object {
    private bool _supportWorkspaceConfiguration;
    private ILspLogger _lspLogger;
    private IGlobalOptionService _globalOptionService;
    private IClientLanguageServerManager _clientLanguageServerManager;
    private Guid _registrationId;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<ConfigurationItem> _configurationItems;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<ValueTuple`2<IOption2, string>> _optionsAndLanguageNamesToRefresh;
    private static ImmutableDictionary`2<string, string> s_languageNameToPrefix;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ImmutableArray`1<string> SupportedLanguages;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ImmutableArray`1<IOption2> SupportedOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public DidChangeConfigurationNotificationHandler(ILspLogger logger, IGlobalOptionService globalOptionService, IClientLanguageServerManager clientLanguageServerManager);
    private static DidChangeConfigurationNotificationHandler();
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual Task HandleNotificationAsync(DidChangeConfigurationParams request, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler/<RefreshOptionsAsync>d__15")]
private Task RefreshOptionsAsync(CancellationToken cancellationToken);
    private void SetOption(IOption2 option, string valueFromClient, string languageName);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler/<GetConfigurationsAsync>d__17")]
private Task`1<ImmutableArray`1<string>> GetConfigurationsAsync(CancellationToken cancellationToken);
    private static ImmutableArray`1<ValueTuple`2<IOption2, string>> GenerateOptionsNeedsToRefresh();
    private static ImmutableArray`1<ConfigurationItem> GenerateGlobalConfigurationItems();
    internal static string GenerateFullNameForOption(IOption2 option);
    private static string GenerateOptionGroupName(IOption2 option);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler/<OnInitializedAsync>d__22")]
public sealed virtual Task OnInitializedAsync(ClientCapabilities clientCapabilities, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandlerFactory : object {
    private IGlobalOptionService _globalOptionService;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public DidChangeConfigurationNotificationHandlerFactory(IGlobalOptionService globalOptionService);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[ExportWorkspaceServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ILspHoverResultCreationService", "Default")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DefaultLspHoverResultCreationService : object {
    [NullableContextAttribute("1")]
public sealed virtual Task`1<Hover> CreateHoverAsync(Document document, QuickInfoItem info, ClientCapabilities clientCapabilities, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DefaultLspHoverResultCreationService/<CreateDefaultHoverAsync>d__2")]
public static Task`1<Hover> CreateDefaultHoverAsync(TextDocument document, QuickInfoItem info, ClientCapabilities clientCapabilities, CancellationToken cancellationToken);
}
[ExportWorkspaceServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ILspReferencesResultCreationService", "Default")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DefaultLspReferencesResultCreationService : object {
    [NullableContextAttribute("1")]
public sealed virtual Nullable`1<SumType`2<VSInternalReferenceItem, Location>> CreateReference(int definitionId, int id, ClassifiedTextElement text, Nullable`1<DocumentSpan> documentSpan, ImmutableDictionary`2<string, string> properties, ClassifiedTextElement definitionText, Glyph definitionGlyph, Nullable`1<SymbolUsageInfo> symbolUsageInfo, Location location);
}
[ExportWorkspaceServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ILspSymbolInformationCreationService", "Default")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DefaultLspSymbolInformationCreationService : object {
    [NullableContextAttribute("1")]
public sealed virtual SymbolInformation Create(string name, string containerName, SymbolKind kind, Location location, Glyph glyph);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractDocumentDiagnosticSource`1 : object {
    [CompilerGeneratedAttribute]
private TDocument <Document>k__BackingField;
    public TDocument Document { get; }
    protected AbstractDocumentDiagnosticSource`1(TDocument document);
    [CompilerGeneratedAttribute]
public TDocument get_Document();
    public abstract virtual bool IsLiveSource();
    public abstract virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(IDiagnosticAnalyzerService diagnosticAnalyzerService, RequestContext context, CancellationToken cancellationToken);
    public sealed virtual ProjectOrDocumentId GetId();
    public sealed virtual Project GetProject();
    [NullableContextAttribute("2")]
public sealed virtual TextDocumentIdentifier GetDocumentIdentifier();
    public sealed virtual string ToDisplayString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractDocumentPullDiagnosticHandler`3 : AbstractPullDiagnosticHandler`3<TDiagnosticsParams, TReport, TReturn> {
    protected AbstractDocumentPullDiagnosticHandler`3(IDiagnosticAnalyzerService diagnosticAnalyzerService, IDiagnosticsRefresher diagnosticRefresher, IGlobalOptionService globalOptions);
    public abstract virtual TextDocumentIdentifier GetTextDocumentIdentifier(TDiagnosticsParams diagnosticsParams);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractProjectDiagnosticSource : object {
    [CompilerGeneratedAttribute]
private Project <project>P;
    protected Project Project { get; }
    protected AbstractProjectDiagnosticSource(Project project);
    protected Project get_Project();
    public static AbstractProjectDiagnosticSource CreateForFullSolutionAnalysisDiagnostics(Project project, Func`2<DiagnosticAnalyzer, bool> shouldIncludeAnalyzer);
    public static AbstractProjectDiagnosticSource CreateForCodeAnalysisDiagnostics(Project project, ICodeAnalysisDiagnosticAnalyzerService codeAnalysisService);
    public abstract virtual bool IsLiveSource();
    public abstract virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(IDiagnosticAnalyzerService diagnosticAnalyzerService, RequestContext context, CancellationToken cancellationToken);
    public sealed virtual ProjectOrDocumentId GetId();
    public sealed virtual Project GetProject();
    [NullableContextAttribute("2")]
public sealed virtual TextDocumentIdentifier GetDocumentIdentifier();
    public sealed virtual string ToDisplayString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3 : object {
    protected static int WorkspaceDiagnosticIdentifier;
    protected static int DocumentDiagnosticIdentifier;
    internal static int DocumentNonLocalDiagnosticIdentifier;
    private IDiagnosticsRefresher _diagnosticRefresher;
    protected IGlobalOptionService GlobalOptions;
    protected IDiagnosticAnalyzerService DiagnosticAnalyzerService;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<string, VersionedPullCache`2<ValueTuple`2<int, Nullable`1<VersionStamp>>, ValueTuple`2<int, Checksum>>> _categoryToVersionedCache;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    protected AbstractPullDiagnosticHandler`3(IDiagnosticAnalyzerService diagnosticAnalyzerService, IDiagnosticsRefresher diagnosticRefresher, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    protected virtual string GetDiagnosticSourceIdentifier(TDiagnosticsParams diagnosticsParams);
    [NullableContextAttribute("0")]
protected abstract virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(TDiagnosticsParams diagnosticsParams);
    protected abstract virtual ValueTask`1<ImmutableArray`1<IDiagnosticSource>> GetOrderedDiagnosticSourcesAsync(TDiagnosticsParams diagnosticsParams, RequestContext context, CancellationToken cancellationToken);
    protected abstract virtual TReport CreateReport(TextDocumentIdentifier identifier, Diagnostic[] diagnostics, string resultId);
    protected abstract virtual bool TryCreateUnchangedReport(TextDocumentIdentifier identifier, string resultId, TReport& report);
    protected abstract virtual TReport CreateRemovedReport(TextDocumentIdentifier identifier);
    [NullableContextAttribute("2")]
protected abstract virtual TReturn CreateReturn(BufferedProgress`1<TReport> progress);
    protected abstract virtual DiagnosticTag[] ConvertTags(DiagnosticData diagnosticData, bool isLiveSource);
    protected abstract virtual string GetDiagnosticCategory(TDiagnosticsParams diagnosticsParams);
    protected virtual Task WaitForChangesAsync(RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3/<HandleRequestAsync>d__22")]
public sealed virtual Task`1<TReturn> HandleRequestAsync(TDiagnosticsParams diagnosticsParams, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private static Dictionary`2<ProjectOrDocumentId, PreviousPullResult> GetIdToPreviousDiagnosticParams(RequestContext context, ImmutableArray`1<PreviousPullResult> previousResults, ImmutableArray`1& removedDocuments);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3/<ComputeAndReportCurrentDiagnosticsAsync>d__24")]
private Task ComputeAndReportCurrentDiagnosticsAsync(RequestContext context, IDiagnosticSource diagnosticSource, BufferedProgress`1<TReport> progress, string resultId, ClientCapabilities clientCapabilities, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private void HandleRemovedDocuments(RequestContext context, ImmutableArray`1<PreviousPullResult> removedPreviousResults, BufferedProgress`1<TReport> progress);
    private ImmutableArray`1<Diagnostic> ConvertDiagnostic(IDiagnosticSource diagnosticSource, DiagnosticData diagnosticData, ClientCapabilities capabilities);
    private static Nullable`1<VSDiagnosticRank> ConvertRank(DiagnosticData diagnosticData);
    private static DiagnosticSeverity ConvertDiagnosticSeverity(DiagnosticSeverity severity, ClientCapabilities clientCapabilities);
    protected static DiagnosticTag[] ConvertTags(DiagnosticData diagnosticData, bool isLiveSource, bool potentialDuplicate);
    private bool SupportsFadingOption(DiagnosticData diagnosticData);
    [CompilerGeneratedAttribute]
internal static Nullable`1<ProjectOrDocumentId> <GetIdToPreviousDiagnosticParams>g__GetIdForPreviousResult|23_0(TextDocumentIdentifier textDocumentIdentifier, Solution solution);
    [CompilerGeneratedAttribute]
internal static Range <ConvertDiagnostic>g__GetRange|26_1(DiagnosticDataLocation dataLocation);
    [CompilerGeneratedAttribute]
internal static bool <ConvertDiagnostic>g__ShouldIncludeHiddenDiagnostic|26_2(DiagnosticData diagnosticData, ClientCapabilities capabilities);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspaceDocumentDiagnosticSource : AbstractDocumentDiagnosticSource`1<TextDocument> {
    protected AbstractWorkspaceDocumentDiagnosticSource(TextDocument document);
    public static AbstractWorkspaceDocumentDiagnosticSource CreateForFullSolutionAnalysisDiagnostics(TextDocument document, Func`2<DiagnosticAnalyzer, bool> shouldIncludeAnalyzer);
    public static AbstractWorkspaceDocumentDiagnosticSource CreateForCodeAnalysisDiagnostics(TextDocument document, ICodeAnalysisDiagnosticAnalyzerService codeAnalysisService);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspacePullDiagnosticsHandler`3 : AbstractPullDiagnosticHandler`3<TDiagnosticsParams, TReport, TReturn> {
    private LspWorkspaceRegistrationService _workspaceRegistrationService;
    private LspWorkspaceManager _workspaceManager;
    private int _lspChanged;
    protected AbstractWorkspacePullDiagnosticsHandler`3(LspWorkspaceManager workspaceManager, LspWorkspaceRegistrationService registrationService, IDiagnosticAnalyzerService diagnosticAnalyzerService, IDiagnosticsRefresher diagnosticRefresher, IGlobalOptionService globalOptions);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspacePullDiagnosticsHandler`3/<GetOrderedDiagnosticSourcesAsync>d__5")]
protected virtual ValueTask`1<ImmutableArray`1<IDiagnosticSource>> GetOrderedDiagnosticSourcesAsync(TDiagnosticsParams diagnosticsParams, RequestContext context, CancellationToken cancellationToken);
    private void OnLspSolutionChanged(object sender, WorkspaceChangeEventArgs e);
    private void OnLspTextChanged(object sender, EventArgs e);
    private void UpdateLspChanged();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspacePullDiagnosticsHandler`3/<WaitForChangesAsync>d__9")]
protected virtual Task WaitForChangesAsync(RequestContext context, CancellationToken cancellationToken);
    private static ImmutableArray`1<IDiagnosticSource> GetTaskListDiagnosticSources(RequestContext context, IGlobalOptionService globalOptions);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspacePullDiagnosticsHandler`3/<GetDiagnosticSourcesAsync>d__11")]
public static ValueTask`1<ImmutableArray`1<IDiagnosticSource>> GetDiagnosticSourcesAsync(RequestContext context, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    private static IEnumerable`1<Project> GetProjectsInPriorityOrder(Solution solution, ImmutableArray`1<string> supportedLanguages);
    private static bool ShouldSkipDocument(RequestContext context, TextDocument document);
    [NullableContextAttribute("0")]
internal abstract virtual TestAccessor<TDiagnosticsParams, TReport, TReturn> GetTestAccessor();
    [IteratorStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspacePullDiagnosticsHandler`3/<<GetProjectsInPriorityOrder>g__GetProjectsInPriorityOrderWorker|12_1>d")]
[CompilerGeneratedAttribute]
internal static IEnumerable`1<Project> <GetProjectsInPriorityOrder>g__GetProjectsInPriorityOrderWorker|12_1(Solution solution);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DiagnosticsRefreshQueue : AbstractRefreshQueue {
    private Refresher _refresher;
    private DiagnosticsRefreshQueue(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, LspWorkspaceManager lspWorkspaceManager, IClientLanguageServerManager notificationManager, Refresher refresher);
    public virtual void Dispose();
    private void WorkspaceRefreshRequested();
    protected virtual string GetFeatureAttribute();
    protected virtual Nullable`1<bool> GetRefreshSupport(ClientCapabilities clientCapabilities);
    protected virtual string GetWorkspaceRefreshName();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DocumentDiagnosticSource : AbstractDocumentDiagnosticSource`1<TextDocument> {
    [CompilerGeneratedAttribute]
private DiagnosticKind <DiagnosticKind>k__BackingField;
    public DiagnosticKind DiagnosticKind { get; }
    public DocumentDiagnosticSource(DiagnosticKind diagnosticKind, TextDocument document);
    [CompilerGeneratedAttribute]
public DiagnosticKind get_DiagnosticKind();
    public virtual bool IsLiveSource();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DocumentDiagnosticSource/<GetDiagnosticsAsync>d__5")]
public virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(IDiagnosticAnalyzerService diagnosticAnalyzerService, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MethodAttribute("textdocument/_vs_diagnostic")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DocumentPullDiagnosticHandler : AbstractDocumentPullDiagnosticHandler`3<VSInternalDocumentDiagnosticsParams, VSInternalDiagnosticReport[], VSInternalDiagnosticReport[]> {
    public DocumentPullDiagnosticHandler(IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticRefresher, IGlobalOptionService globalOptions);
    protected virtual string GetDiagnosticCategory(VSInternalDocumentDiagnosticsParams diagnosticsParams);
    public virtual TextDocumentIdentifier GetTextDocumentIdentifier(VSInternalDocumentDiagnosticsParams diagnosticsParams);
    protected virtual VSInternalDiagnosticReport[] CreateReport(TextDocumentIdentifier identifier, Diagnostic[] diagnostics, string resultId);
    protected virtual VSInternalDiagnosticReport[] CreateRemovedReport(TextDocumentIdentifier identifier);
    protected virtual bool TryCreateUnchangedReport(TextDocumentIdentifier identifier, string resultId, VSInternalDiagnosticReport[]& report);
    [NullableContextAttribute("0")]
protected virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(VSInternalDocumentDiagnosticsParams diagnosticsParams);
    protected virtual DiagnosticTag[] ConvertTags(DiagnosticData diagnosticData, bool isLiveSource);
    protected virtual ValueTask`1<ImmutableArray`1<IDiagnosticSource>> GetOrderedDiagnosticSourcesAsync(VSInternalDocumentDiagnosticsParams diagnosticsParams, RequestContext context, CancellationToken cancellationToken);
    protected virtual VSInternalDiagnosticReport[] CreateReturn(BufferedProgress`1<VSInternalDiagnosticReport[]> progress);
    internal static ImmutableArray`1<IDiagnosticSource> GetDiagnosticSources(DiagnosticKind diagnosticKind, bool nonLocalDocumentDiagnostics, bool taskList, RequestContext context, IGlobalOptionService globalOptions);
    [CompilerGeneratedAttribute]
internal static ImmutableArray`1<IDiagnosticSource> <GetDiagnosticSources>g__GetNonLocalDiagnosticSources|10_0(<>c__DisplayClass10_0& );
    [CompilerGeneratedAttribute]
internal static bool <GetDiagnosticSources>g__ShouldIncludeAnalyzer|10_1(DiagnosticAnalyzer analyzer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DocumentPullDiagnosticHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DocumentPullDiagnosticHandlerFactory : object {
    private IDiagnosticAnalyzerService _analyzerService;
    private IDiagnosticsRefresher _diagnosticsRefresher;
    private IGlobalOptionService _globalOptions;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public DocumentPullDiagnosticHandlerFactory(IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticsRefresher, IGlobalOptionService globalOptions);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.IDiagnosticSource {
    public abstract virtual Project GetProject();
    public abstract virtual ProjectOrDocumentId GetId();
    [NullableContextAttribute("2")]
public abstract virtual TextDocumentIdentifier GetDocumentIdentifier();
    public abstract virtual string ToDisplayString();
    public abstract virtual bool IsLiveSource();
    public abstract virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(IDiagnosticAnalyzerService diagnosticAnalyzerService, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.NonLocalDocumentDiagnosticSource : AbstractDocumentDiagnosticSource`1<TextDocument> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<DiagnosticAnalyzer, bool> _shouldIncludeAnalyzer;
    public NonLocalDocumentDiagnosticSource(TextDocument document, Func`2<DiagnosticAnalyzer, bool> shouldIncludeAnalyzer);
    public virtual bool IsLiveSource();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.NonLocalDocumentDiagnosticSource/<GetDiagnosticsAsync>d__3")]
public virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(IDiagnosticAnalyzerService diagnosticAnalyzerService, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.ProjectOrDocumentId : ValueType {
    [NullableAttribute("2")]
private DocumentId _documentId;
    [NullableAttribute("2")]
private ProjectId _projectId;
    public ProjectOrDocumentId(ProjectId projectId);
    public ProjectOrDocumentId(DocumentId documentId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicDocumentPullDiagnosticsHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicDocumentPullDiagnosticHandlerFactory : object {
    private IDiagnosticAnalyzerService _analyzerService;
    private IDiagnosticsRefresher _diagnosticRefresher;
    private IGlobalOptionService _globalOptions;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public PublicDocumentPullDiagnosticHandlerFactory(IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticRefresher, IGlobalOptionService globalOptions);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MethodAttribute("textDocument/diagnostic")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicDocumentPullDiagnosticsHandler : AbstractDocumentPullDiagnosticHandler`3<DocumentDiagnosticParams, SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult>, Nullable`1<SumType`2<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport>>> {
    private string _nonLocalDiagnosticsSourceRegistrationId;
    private IClientLanguageServerManager _clientLanguageServerManager;
    public PublicDocumentPullDiagnosticsHandler(IClientLanguageServerManager clientLanguageServerManager, IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticsRefresher, IGlobalOptionService globalOptions);
    protected virtual string GetDiagnosticCategory(DocumentDiagnosticParams diagnosticsParams);
    public virtual TextDocumentIdentifier GetTextDocumentIdentifier(DocumentDiagnosticParams diagnosticsParams);
    protected virtual string GetDiagnosticSourceIdentifier(DocumentDiagnosticParams diagnosticsParams);
    protected virtual DiagnosticTag[] ConvertTags(DiagnosticData diagnosticData, bool isLiveSource);
    protected virtual SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult> CreateReport(TextDocumentIdentifier identifier, Diagnostic[] diagnostics, string resultId);
    protected virtual SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult> CreateRemovedReport(TextDocumentIdentifier identifier);
    protected virtual bool TryCreateUnchangedReport(TextDocumentIdentifier identifier, string resultId, SumType`3& report);
    protected virtual Nullable`1<SumType`2<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport>> CreateReturn(BufferedProgress`1<SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult>> progress);
    protected virtual ValueTask`1<ImmutableArray`1<IDiagnosticSource>> GetOrderedDiagnosticSourcesAsync(DocumentDiagnosticParams diagnosticParams, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
protected virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(DocumentDiagnosticParams diagnosticsParams);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicDocumentPullDiagnosticsHandler/<OnInitializedAsync>d__13")]
public sealed virtual Task OnInitializedAsync(ClientCapabilities clientCapabilities, RequestContext context, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private bool <OnInitializedAsync>g__IsFsaEnabled|13_0(<>c__DisplayClass13_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicWorkspacePullDiagnosticsHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicWorkspacePullDiagnosticHandlerFactory : object {
    [CompilerGeneratedAttribute]
private LspWorkspaceRegistrationService <registrationService>P;
    [CompilerGeneratedAttribute]
private IDiagnosticAnalyzerService <analyzerService>P;
    [CompilerGeneratedAttribute]
private IDiagnosticsRefresher <diagnosticsRefresher>P;
    [CompilerGeneratedAttribute]
private IGlobalOptionService <globalOptions>P;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public PublicWorkspacePullDiagnosticHandlerFactory(LspWorkspaceRegistrationService registrationService, IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticsRefresher, IGlobalOptionService globalOptions);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MethodAttribute("workspace/diagnostic")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicWorkspacePullDiagnosticsHandler : AbstractWorkspacePullDiagnosticsHandler`3<WorkspaceDiagnosticParams, SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult>, WorkspaceDiagnosticReport> {
    public PublicWorkspacePullDiagnosticsHandler(LspWorkspaceManager workspaceManager, LspWorkspaceRegistrationService registrationService, IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticRefresher, IGlobalOptionService globalOptions);
    protected virtual string GetDiagnosticCategory(WorkspaceDiagnosticParams diagnosticsParams);
    protected virtual DiagnosticTag[] ConvertTags(DiagnosticData diagnosticData, bool isLiveSource);
    protected virtual SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult> CreateReport(TextDocumentIdentifier identifier, Diagnostic[] diagnostics, string resultId);
    protected virtual SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult> CreateRemovedReport(TextDocumentIdentifier identifier);
    protected virtual bool TryCreateUnchangedReport(TextDocumentIdentifier identifier, string resultId, SumType`2& report);
    [NullableContextAttribute("2")]
protected virtual WorkspaceDiagnosticReport CreateReturn(BufferedProgress`1<SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult>> progress);
    [NullableContextAttribute("0")]
protected virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(WorkspaceDiagnosticParams diagnosticsParams);
    internal virtual TestAccessor<WorkspaceDiagnosticParams, SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult>, WorkspaceDiagnosticReport> GetTestAccessor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.PullDiagnosticCategories : object {
    public static string Task;
    public static string WorkspaceDocumentsAndProject;
    public static string DocumentCompilerSyntax;
    public static string DocumentCompilerSemantic;
    public static string DocumentAnalyzerSyntax;
    public static string DocumentAnalyzerSemantic;
    private static PullDiagnosticCategories();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.PullDiagnosticConstants : object {
    public static string TaskItemCustomTag;
    public static string Priority;
    public static string Low;
    public static string Medium;
    public static string High;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.TaskListDiagnosticSource : AbstractDocumentDiagnosticSource`1<Document> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableArray`1<string> s_todoCommentCustomTags;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableDictionary`2<string, string> s_lowPriorityProperties;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableDictionary`2<string, string> s_mediumPriorityProperties;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableDictionary`2<string, string> s_highPriorityProperties;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Tuple`2<ImmutableArray`1<string>, ImmutableArray`1<TaskListItemDescriptor>> s_lastRequestedTokens;
    private IGlobalOptionService _globalOptions;
    public TaskListDiagnosticSource(Document document, IGlobalOptionService globalOptions);
    private static TaskListDiagnosticSource();
    public virtual bool IsLiveSource();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.TaskListDiagnosticSource/<GetDiagnosticsAsync>d__8")]
public virtual Task`1<ImmutableArray`1<DiagnosticData>> GetDiagnosticsAsync(IDiagnosticAnalyzerService diagnosticAnalyzerService, RequestContext context, CancellationToken cancellationToken);
    private static ImmutableDictionary`2<string, string> GetProperties(TaskListItemPriority priority);
    [NullableContextAttribute("0")]
private static ImmutableArray`1<TaskListItemDescriptor> GetAndCacheDescriptors(ImmutableArray`1<string> tokenList);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private DiagnosticData <GetDiagnosticsAsync>b__8_0(TaskListItem i);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MethodAttribute("workspace/_vs_diagnostic")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.WorkspacePullDiagnosticHandler : AbstractWorkspacePullDiagnosticsHandler`3<VSInternalWorkspaceDiagnosticsParams, VSInternalWorkspaceDiagnosticReport[], VSInternalWorkspaceDiagnosticReport[]> {
    public WorkspacePullDiagnosticHandler(LspWorkspaceManager workspaceManager, LspWorkspaceRegistrationService registrationService, IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticsRefresher, IGlobalOptionService globalOptions);
    protected virtual string GetDiagnosticCategory(VSInternalWorkspaceDiagnosticsParams diagnosticsParams);
    protected virtual VSInternalWorkspaceDiagnosticReport[] CreateReport(TextDocumentIdentifier identifier, Diagnostic[] diagnostics, string resultId);
    protected virtual VSInternalWorkspaceDiagnosticReport[] CreateRemovedReport(TextDocumentIdentifier identifier);
    protected virtual bool TryCreateUnchangedReport(TextDocumentIdentifier identifier, string resultId, VSInternalWorkspaceDiagnosticReport[]& report);
    [NullableContextAttribute("0")]
protected virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(VSInternalWorkspaceDiagnosticsParams diagnosticsParams);
    protected virtual DiagnosticTag[] ConvertTags(DiagnosticData diagnosticData, bool isLiveSource);
    protected virtual VSInternalWorkspaceDiagnosticReport[] CreateReturn(BufferedProgress`1<VSInternalWorkspaceDiagnosticReport[]> progress);
    internal virtual TestAccessor<VSInternalWorkspaceDiagnosticsParams, VSInternalWorkspaceDiagnosticReport[], VSInternalWorkspaceDiagnosticReport[]> GetTestAccessor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.WorkspacePullDiagnosticHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.WorkspacePullDiagnosticHandlerFactory : object {
    [CompilerGeneratedAttribute]
private LspWorkspaceRegistrationService <registrationService>P;
    [CompilerGeneratedAttribute]
private IDiagnosticAnalyzerService <analyzerService>P;
    [CompilerGeneratedAttribute]
private IDiagnosticsRefresher <diagnosticsRefresher>P;
    [CompilerGeneratedAttribute]
private IGlobalOptionService <globalOptions>P;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public WorkspacePullDiagnosticHandlerFactory(LspWorkspaceRegistrationService registrationService, IDiagnosticAnalyzerService analyzerService, IDiagnosticsRefresher diagnosticsRefresher, IGlobalOptionService globalOptions);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidChangeHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/didChange")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidChangeHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(DidChangeTextDocumentParams request);
    [NullableContextAttribute("1")]
public sealed virtual Task`1<object> HandleRequestAsync(DidChangeTextDocumentParams request, RequestContext context, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidCloseHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/didClose")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidCloseHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(DidCloseTextDocumentParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidCloseHandler/<HandleNotificationAsync>d__6")]
public sealed virtual Task HandleNotificationAsync(DidCloseTextDocumentParams request, RequestContext context, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidOpenHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/didOpen")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidOpenHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual Uri GetTextDocumentIdentifier(DidOpenTextDocumentParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidOpenHandler/<HandleNotificationAsync>d__6")]
public sealed virtual Task HandleNotificationAsync(DidOpenTextDocumentParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentHighlightsHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/documentHighlight")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentHighlightsHandler : object {
    private IHighlightingService _highlightingService;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public DocumentHighlightsHandler(IHighlightingService highlightingService, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(TextDocumentPositionParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentHighlightsHandler/<HandleRequestAsync>d__8")]
public sealed virtual Task`1<DocumentHighlight[]> HandleRequestAsync(TextDocumentPositionParams request, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentHighlightsHandler/<GetKeywordHighlightsAsync>d__9")]
private Task`1<ImmutableArray`1<DocumentHighlight>> GetKeywordHighlightsAsync(Document document, SourceText text, int position, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentHighlightsHandler/<GetReferenceHighlightsAsync>d__10")]
private Task`1<ImmutableArray`1<DocumentHighlight>> GetReferenceHighlightsAsync(Document document, SourceText text, int position, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentResolveData : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public TextDocumentIdentifier TextDocument { get; public set; }
    public DocumentResolveData(TextDocumentIdentifier TextDocument);
    [CompilerGeneratedAttribute]
protected DocumentResolveData(DocumentResolveData original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(DocumentResolveData left, DocumentResolveData right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(DocumentResolveData left, DocumentResolveData right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(DocumentResolveData other);
    [CompilerGeneratedAttribute]
public virtual DocumentResolveData <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(TextDocumentIdentifier& TextDocument);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentSymbolsHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/documentSymbol")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentSymbolsHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(RoslynDocumentSymbolParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentSymbolsHandler/<HandleRequestAsync>d__6")]
public sealed virtual Task`1<Object[]> HandleRequestAsync(RoslynDocumentSymbolParams request, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
private static SymbolInformation GetSymbolInformation(RoslynNavigationBarItem item, Document document, SourceText text, string containerName);
    [NullableContextAttribute("1")]
private static RoslynDocumentSymbol GetDocumentSymbol(RoslynNavigationBarItem item, SourceText text, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
private static string GetDocumentSymbolName(string proposedName);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static RoslynDocumentSymbol[] <GetDocumentSymbol>g__GetChildren|8_0(ImmutableArray`1<RoslynNavigationBarItem> items, SourceText text, CancellationToken cancellationToken);
}
[IsReadOnlyAttribute]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.EditAndContinue.LspSolutionSnapshotId : ValueType {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    public LspSolutionSnapshotId(int Id);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Id(int value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(LspSolutionSnapshotId left, LspSolutionSnapshotId right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(LspSolutionSnapshotId left, LspSolutionSnapshotId right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(LspSolutionSnapshotId other);
    [CompilerGeneratedAttribute]
public void Deconstruct(Int32& Id);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.EditAndContinue.RegisterSolutionSnapshotHandler", "8")]
[SharedAttribute]
[MethodAttribute("workspace/_vs_registerSolutionSnapshot")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.EditAndContinue.RegisterSolutionSnapshotHandler : object {
    [NullableAttribute("1")]
private ISolutionSnapshotRegistry _registry;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public RegisterSolutionSnapshotHandler(ISolutionSnapshotRegistry registry);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual Task`1<LspSolutionSnapshotId> HandleRequestAsync(RequestContext context, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ExecuteWorkspaceCommandHandler", "8")]
[SharedAttribute]
[MethodAttribute("workspace/executeCommand")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ExecuteWorkspaceCommandHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ExecuteWorkspaceCommandHandler/<HandleRequestAsync>d__5")]
public sealed virtual Task`1<object> HandleRequestAsync(ExecuteCommandParams request, RequestContext context, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("4")]
[MetadataAttributeAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ExportCSharpVisualBasicLspServiceFactoryAttribute : ExportLspServiceFactoryAttribute {
    [NullableContextAttribute("1")]
public ExportCSharpVisualBasicLspServiceFactoryAttribute(Type type, WellKnownLspServerKinds serverKind);
}
[AttributeUsageAttribute("4")]
[MetadataAttributeAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ExportCSharpVisualBasicStatelessLspServiceAttribute : ExportStatelessLspServiceAttribute {
    [NullableContextAttribute("1")]
public ExportCSharpVisualBasicStatelessLspServiceAttribute(Type type, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindAllReferencesHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/references")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.FindAllReferencesHandler : object {
    private IMetadataAsSourceFileService _metadataAsSourceFileService;
    private IAsynchronousOperationListener _asyncListener;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public FindAllReferencesHandler(IMetadataAsSourceFileService metadataAsSourceFileService, IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(ReferenceParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindAllReferencesHandler/<HandleRequestAsync>d__9")]
public sealed virtual Task`1<SumType`2[]> HandleRequestAsync(ReferenceParams referenceParams, RequestContext context, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindImplementationsHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/implementation")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.FindImplementationsHandler : object {
    [NullableAttribute("1")]
private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public FindImplementationsHandler(IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(TextDocumentPositionParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindImplementationsHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<Location[]> HandleRequestAsync(TextDocumentPositionParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext : FindUsagesContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IProgress`1<SumType`2[]> _progress;
    private Workspace _workspace;
    private Document _document;
    private int _position;
    private IMetadataAsSourceFileService _metadataAsSourceFileService;
    private IGlobalOptionService _globalOptions;
    private SemaphoreSlim _semaphore;
    private Dictionary`2<DefinitionItem, int> _definitionToId;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<int, SumType`2<VSInternalReferenceItem, Location>> _definitionsWithoutReference;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private HashSet`1<ValueTuple`2<string, TextSpan>> _referenceLocations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncBatchingWorkQueue`1<SumType`2<VSInternalReferenceItem, Location>> _workQueue;
    private int _id;
    public FindUsagesLSPContext(IProgress`1<SumType`2[]> progress, Workspace workspace, Document document, int position, IMetadataAsSourceFileService metadataAsSourceFileService, IAsynchronousOperationListener asyncListener, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext/<OnCompletedAsync>d__13")]
public virtual ValueTask OnCompletedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext/<OnDefinitionFoundAsync>d__14")]
public virtual ValueTask OnDefinitionFoundAsync(DefinitionItem definition, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext/<OnReferenceFoundAsync>d__15")]
public virtual ValueTask OnReferenceFoundAsync(SourceReferenceItem reference, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext/<GenerateVSReferenceItemAsync>d__16")]
private Task`1<Nullable`1<SumType`2<VSInternalReferenceItem, Location>>> GenerateVSReferenceItemAsync(int definitionId, int id, Nullable`1<DocumentSpan> documentSpan, ImmutableDictionary`2<string, string> properties, ClassifiedTextElement definitionText, Glyph definitionGlyph, Nullable`1<SymbolUsageInfo> symbolUsageInfo, bool isWrittenTo, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext/<ComputeLocationAsync>d__17")]
private Task`1<Location> ComputeLocationAsync(Nullable`1<DocumentSpan> documentSpan, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext/<ComputeTextAsync>d__18")]
private Task`1<ClassifiedTextElement> ComputeTextAsync(Nullable`1<int> definitionId, Nullable`1<DocumentSpan> documentSpan, ClassifiedTextElement definitionText, bool isWrittenTo, CancellationToken cancellationToken);
    private static ClassifiedTextRun[] GetClassifiedTextRuns(int id, Nullable`1<int> definitionId, DocumentSpan documentSpan, bool isWrittenTo, ImmutableArray`1<ClassifiedSpan> classifiedSpans, SourceText docText);
    private ValueTask ReportReferencesAsync(ImmutableSegmentedList`1<SumType`2<VSInternalReferenceItem, Location>> referencesToReport, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FoldingRangesHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/foldingRange")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.FoldingRangesHandler : object {
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public FoldingRangesHandler(IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(FoldingRangeParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FoldingRangesHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<FoldingRange[]> HandleRequestAsync(FoldingRangeParams request, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FoldingRangesHandler/<GetFoldingRangesAsync>d__8")]
public static Task`1<FoldingRange[]> GetFoldingRangesAsync(Document document, BlockStructureOptions options, CancellationToken cancellationToken);
    private static FoldingRange[] GetFoldingRanges(BlockStructure blockStructure, SourceText text);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FormatDocumentHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/formatting")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.FormatDocumentHandler : AbstractFormatDocumentHandlerBase`2<DocumentFormattingParams, TextEdit[]> {
    private IGlobalOptionService _globalOptions;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public FormatDocumentHandler(IGlobalOptionService globalOptions);
    public virtual TextDocumentIdentifier GetTextDocumentIdentifier(DocumentFormattingParams request);
    public virtual Task`1<TextEdit[]> HandleRequestAsync(DocumentFormattingParams request, RequestContext context, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FormatDocumentOnTypeHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/onTypeFormatting")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.FormatDocumentOnTypeHandler : object {
    [NullableAttribute("1")]
private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public FormatDocumentOnTypeHandler(IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(DocumentOnTypeFormattingParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FormatDocumentOnTypeHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<TextEdit[]> HandleRequestAsync(DocumentOnTypeFormattingParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.FormatDocumentRangeHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/rangeFormatting")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.FormatDocumentRangeHandler : AbstractFormatDocumentHandlerBase`2<DocumentRangeFormattingParams, TextEdit[]> {
    private IGlobalOptionService _globalOptions;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public FormatDocumentRangeHandler(IGlobalOptionService globalOptions);
    public virtual TextDocumentIdentifier GetTextDocumentIdentifier(DocumentRangeFormattingParams request);
    public virtual Task`1<TextEdit[]> HandleRequestAsync(DocumentRangeFormattingParams request, RequestContext context, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.GetTextDocumentWithContextHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/_vs_getProjectContexts")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.GetTextDocumentWithContextHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(VSGetProjectContextsParams request);
    [NullableContextAttribute("1")]
public sealed virtual Task`1<VSProjectContextList> HandleRequestAsync(VSGetProjectContextsParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.GoToDefinitionHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/definition")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.GoToDefinitionHandler : AbstractGoToDefinitionHandler {
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public GoToDefinitionHandler(IMetadataAsSourceFileService metadataAsSourceFileService, IGlobalOptionService globalOptions);
    public virtual Task`1<Location[]> HandleRequestAsync(TextDocumentPositionParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.GoToTypeDefinitionHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/typeDefinition")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.GoToTypeDefinitionHandler : AbstractGoToDefinitionHandler {
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public GoToTypeDefinitionHandler(IMetadataAsSourceFileService metadataAsSourceFileService, IGlobalOptionService globalOptions);
    public virtual Task`1<Location[]> HandleRequestAsync(TextDocumentPositionParams request, RequestContext context, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.HoverHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/hover")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.HoverHandler : object {
    [NullableAttribute("1")]
private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public HoverHandler(IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(TextDocumentPositionParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.HoverHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<Hover> HandleRequestAsync(TextDocumentPositionParams request, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.HoverHandler/<GetHoverAsync>d__8")]
internal static Task`1<Hover> GetHoverAsync(Document document, int position, SymbolDescriptionOptions options, ClientCapabilities clientCapabilities, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.IDocumentChangeTracker {
    public abstract virtual ValueTask StartTrackingAsync(Uri documentUri, SourceText initialText, string languageId, CancellationToken cancellationToken);
    public abstract virtual void UpdateTrackedDocument(Uri documentUri, SourceText text);
    public abstract virtual ValueTask StopTrackingAsync(Uri documentUri, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.IInitializeManager {
    public abstract virtual ClientCapabilities GetClientCapabilities();
    [NullableContextAttribute("2")]
public abstract virtual ClientCapabilities TryGetClientCapabilities();
    [NullableContextAttribute("2")]
public abstract virtual InitializeParams TryGetInitializeParams();
    public abstract virtual void SetInitializeParams(InitializeParams initializeParams);
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspHoverResultCreationService {
    [NullableContextAttribute("1")]
public abstract virtual Task`1<Hover> CreateHoverAsync(Document document, QuickInfoItem info, ClientCapabilities clientCapabilities, CancellationToken cancellationToken);
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspReferencesResultCreationService {
    [NullableContextAttribute("1")]
public abstract virtual Nullable`1<SumType`2<VSInternalReferenceItem, Location>> CreateReference(int definitionId, int id, ClassifiedTextElement text, Nullable`1<DocumentSpan> documentSpan, ImmutableDictionary`2<string, string> properties, ClassifiedTextElement definitionText, Glyph definitionGlyph, Nullable`1<SymbolUsageInfo> symbolUsageInfo, Location location);
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceDocumentRequestHandler`2 {
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceNotificationHandler {
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceNotificationHandler`1 {
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceRequestHandler`1 {
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceRequestHandler`2 {
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ILspSymbolInformationCreationService {
    [NullableContextAttribute("1")]
public abstract virtual SymbolInformation Create(string name, string containerName, SymbolKind kind, Location location, Glyph glyph);
}
[MethodAttribute("initialized")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InitializedHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InitializedHandler/<HandleNotificationAsync>d__5")]
public sealed virtual Task HandleNotificationAsync(InitializedParams request, RequestContext requestContext, CancellationToken cancellationToken);
}
[MethodAttribute("initialize")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InitializeHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual Task`1<InitializeResult> HandleRequestAsync(InitializeParams request, RequestContext context, CancellationToken cancellationToken);
}
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InitializeManager : object {
    [NullableAttribute("2")]
private InitializeParams _initializeParams;
    [NullableContextAttribute("1")]
public sealed virtual ClientCapabilities GetClientCapabilities();
    [NullableContextAttribute("1")]
public sealed virtual void SetInitializeParams(InitializeParams initializeParams);
    [NullableContextAttribute("2")]
public sealed virtual InitializeParams TryGetInitializeParams();
    [NullableContextAttribute("2")]
public sealed virtual ClientCapabilities TryGetClientCapabilities();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintCache : ResolveCache`1<InlayHintCacheEntry> {
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintCache", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintCacheFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/inlayHint")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintHandler : object {
    [NullableAttribute("1")]
private IGlobalOptionService _optionsService;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public InlayHintHandler(IGlobalOptionService optionsService);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(InlayHintParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<InlayHint[]> HandleRequestAsync(InlayHintParams request, RequestContext context, CancellationToken cancellationToken);
    private static ValueTuple`3<string, bool, bool> Trim(ImmutableArray`1<TaggedText> taggedTexts);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintRefreshQueue : AbstractRefreshQueue {
    private IGlobalOptionService _globalOptionService;
    public InlayHintRefreshQueue(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, IGlobalOptionService globalOptionService, LspWorkspaceManager lspWorkspaceManager, IClientLanguageServerManager notificationManager);
    public virtual void Dispose();
    private void OnOptionChanged(object sender, OptionChangedEventArgs e);
    protected virtual string GetFeatureAttribute();
    protected virtual Nullable`1<bool> GetRefreshSupport(ClientCapabilities clientCapabilities);
    protected virtual string GetWorkspaceRefreshName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintRefreshQueue", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintRefreshQueueFactory : object {
    private IAsynchronousOperationListenerProvider _asyncListenerProvider;
    private LspWorkspaceRegistrationService _lspWorkspaceRegistrationService;
    private IGlobalOptionService _globalOptionService;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public InlayHintRefreshQueueFactory(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, IGlobalOptionService globalOptionService);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveData : DocumentResolveData {
    [CompilerGeneratedAttribute]
private long <ResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ListIndex>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public long ResultId { get; public set; }
    public int ListIndex { get; public set; }
    public InlayHintResolveData(long ResultId, int ListIndex, TextDocumentIdentifier TextDocument);
    [CompilerGeneratedAttribute]
private InlayHintResolveData(InlayHintResolveData original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public long get_ResultId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResultId(long value);
    [CompilerGeneratedAttribute]
public int get_ListIndex();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ListIndex(int value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(InlayHintResolveData left, InlayHintResolveData right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(InlayHintResolveData left, InlayHintResolveData right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(DocumentResolveData other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(InlayHintResolveData other);
    [CompilerGeneratedAttribute]
public virtual DocumentResolveData <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int64& ResultId, Int32& ListIndex, TextDocumentIdentifier& TextDocument);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[MethodAttribute("inlayHint/resolve")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveHandler : object {
    private InlayHintCache _inlayHintCache;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public InlayHintResolveHandler(InlayHintCache inlayHintCache);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(InlayHint request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<InlayHint> HandleRequestAsync(InlayHint request, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static TextDocumentIdentifier GetTextDocument(object requestData);
    private ValueTuple`2<InlayHintCacheEntry, InlineHint> GetCacheEntry(InlayHintResolveData resolveData);
    private static InlayHintResolveData GetInlayHintResolveData(InlayHint inlayHint);
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveHandlerFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/_vs_inlineCompletion")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler : object {
    public static ImmutableHashSet`1<string> BuiltInSnippets;
    private XmlSnippetParser _xmlSnippetParser;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public InlineCompletionsHandler(XmlSnippetParser xmlSnippetParser, IGlobalOptionService globalOptions);
    private static InlineCompletionsHandler();
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(VSInternalInlineCompletionRequest request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler/<HandleRequestAsync>d__9")]
public sealed virtual Task`1<VSInternalInlineCompletionList> HandleRequestAsync(VSInternalInlineCompletionRequest request, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler/<GetFormattedLspSnippetAsync>d__10")]
private static Task`1<string> GetFormattedLspSnippetAsync(ParsedXmlSnippet parsedSnippet, TextSpan snippetShortcut, Document originalDocument, SourceText originalSourceText, SyntaxFormattingOptions formattingOptions, SimplifierOptions simplifierOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler/<GetReplacedSnippetTextAsync>d__11")]
private static Task`1<ValueTuple`3<string, ImmutableDictionary`2<SnippetFieldPart, ImmutableArray`1<TextSpan>>, Nullable`1<TextSpan>>> GetReplacedSnippetTextAsync(Document originalDocument, SourceText originalSourceText, TextSpan snippetSpan, ParsedXmlSnippet parsedSnippet, SimplifierOptions simplifierOptions, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TextSpan <GetFormattedLspSnippetAsync>g__GetAdjustedSpan|10_0(ImmutableArray`1<TextChange> textChanges, TextSpan originalSpan);
    [CompilerGeneratedAttribute]
internal static TextSpan <GetFormattedLspSnippetAsync>g__GetTextSpanInContextOfSnippet|10_1(int positionInFullText, int snippetPositionInFullText, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<string, ParsedXmlSnippet> _parsedSnippetsCache;
    internal ParsedXmlSnippet GetParsedXmlSnippet(SnippetInfo matchingSnippetInfo, RequestContext context);
    private static ParsedXmlSnippet GetAndParseSnippetFromFile(SnippetInfo snippetInfo);
    private static CodeSnippet RetrieveSnippetXmlFromFile(SnippetInfo snippetInfo);
    internal TestAccessor GetTestAccessor();
}
internal interface Microsoft.CodeAnalysis.LanguageServer.Handler.ISolutionRequiredHandler {
    public bool RequiresLSPSolution { get; }
    public abstract virtual bool get_RequiresLSPSolution();
}
internal static class Microsoft.CodeAnalysis.LanguageServer.Handler.LspErrorCodes : object {
    public static int ContentModified;
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.MapCodeHandler", "8")]
[SharedAttribute]
[MethodAttribute("workspace/_vs_mapCode")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.MapCodeHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.MapCodeHandler/<HandleRequestAsync>d__5")]
public sealed virtual Task`1<WorkspaceEdit> HandleRequestAsync(VSInternalMapCodeParams request, RequestContext context, CancellationToken cancellationToken);
}
[MetadataAttributeAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.MethodAttribute : LanguageServerEndpointAttribute {
    [NullableContextAttribute("1")]
public MethodAttribute(string method);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.NonMutatingDocumentChangeTracker : object {
    public sealed virtual ValueTask StartTrackingAsync(Uri documentUri, SourceText initialText, string languageId, CancellationToken cancellationToken);
    public sealed virtual ValueTask StopTrackingAsync(Uri documentUri, CancellationToken cancellationToken);
    public sealed virtual void UpdateTrackedDocument(Uri documentUri, SourceText text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.OnAutoInsertHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/_vs_onAutoInsert")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.OnAutoInsertHandler : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<IBraceCompletionService> _csharpBraceCompletionServices;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<IBraceCompletionService> _visualBasicBraceCompletionServices;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public OnAutoInsertHandler(IEnumerable`1<IBraceCompletionService> csharpBraceCompletionServices, IEnumerable`1<IBraceCompletionService> visualBasicBraceCompletionServices, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(VSInternalDocumentOnAutoInsertParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.OnAutoInsertHandler/<HandleRequestAsync>d__9")]
public sealed virtual Task`1<VSInternalDocumentOnAutoInsertResponseItem> HandleRequestAsync(VSInternalDocumentOnAutoInsertParams request, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.OnAutoInsertHandler/<GetDocumentationCommentResponseAsync>d__10")]
private static Task`1<VSInternalDocumentOnAutoInsertResponseItem> GetDocumentationCommentResponseAsync(VSInternalDocumentOnAutoInsertParams autoInsertParams, Document document, IDocumentationCommentSnippetService service, DocumentationCommentOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.OnAutoInsertHandler/<GetBraceCompletionAfterReturnResponseAsync>d__11")]
private Task`1<VSInternalDocumentOnAutoInsertResponseItem> GetBraceCompletionAfterReturnResponseAsync(VSInternalDocumentOnAutoInsertParams autoInsertParams, Document document, IndentationOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.OnAutoInsertHandler/<GetBraceCompletionContextAsync>d__12")]
private Task`1<Nullable`1<ValueTuple`2<IBraceCompletionService, BraceCompletionContext>>> GetBraceCompletionContextAsync(int caretLocation, Document document, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static SourceText <GetBraceCompletionAfterReturnResponseAsync>g__GetIndentedText|11_0(SourceText textToIndent, TextLine lineToIndent, LinePosition desiredCaretLinePosition, IndentationOptions options);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.OnAutoInsertHandler/<<GetBraceCompletionAfterReturnResponseAsync>g__GetCollapsedChangeAsync|11_1>d")]
[CompilerGeneratedAttribute]
internal static Task`1<TextChange> <GetBraceCompletionAfterReturnResponseAsync>g__GetCollapsedChangeAsync|11_1(ImmutableArray`1<TextChange> textChanges, Document oldDocument, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static string <GetBraceCompletionAfterReturnResponseAsync>g__GetTextChangeTextWithCaretAtLocation|11_2(SourceText sourceText, TextChange textChange, LinePosition desiredCaretLinePosition);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.PrepareRenameHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/prepareRename")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.PrepareRenameHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(PrepareRenameParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.PrepareRenameHandler/<HandleRequestAsync>d__6")]
public sealed virtual Task`1<Range> HandleRequestAsync(PrepareRenameParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.PreviousPullResult : ValueType {
    [CompilerGeneratedAttribute]
private string <PreviousResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    public string PreviousResultId { get; public set; }
    public TextDocumentIdentifier TextDocument { get; public set; }
    public PreviousPullResult(string PreviousResultId, TextDocumentIdentifier TextDocument);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PreviousResultId();
    [CompilerGeneratedAttribute]
public void set_PreviousResultId(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [IsReadOnlyAttribute]
[NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(PreviousPullResult left, PreviousPullResult right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(PreviousPullResult left, PreviousPullResult right);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(PreviousPullResult other);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public void Deconstruct(String& PreviousResultId, TextDocumentIdentifier& TextDocument);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.RenameHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/rename")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.RenameHandler : object {
    [NullableAttribute("1")]
private IGlobalOptionService _optionsService;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public RenameHandler(IGlobalOptionService optionsService);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(RenameParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.RenameHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<WorkspaceEdit> HandleRequestAsync(RenameParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext : ValueType {
    private IDocumentChangeTracker _documentChangeTracker;
    [NullableAttribute("2")]
private ClientCapabilities _clientCapabilities;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<Uri, ValueTuple`2<SourceText, string>> _trackedDocuments;
    private ILspServices _lspServices;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private StrongBox`1<ValueTuple`3<Workspace, Solution, TextDocument>> _lspSolution;
    public WellKnownLspServerKinds ServerKind;
    public string Method;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> SupportedLanguages;
    public CancellationToken QueueCancellationToken;
    private ILspLogger _logger;
    [NullableAttribute("2")]
public Workspace Workspace { get; }
    [NullableAttribute("2")]
public Solution Solution { get; }
    [NullableAttribute("2")]
public Document Document { get; }
    [NullableAttribute("2")]
public TextDocument TextDocument { get; }
    public RequestContext(Workspace workspace, Solution solution, ILspLogger logger, string method, ClientCapabilities clientCapabilities, WellKnownLspServerKinds serverKind, TextDocument document, IDocumentChangeTracker documentChangeTracker, ImmutableDictionary`2<Uri, ValueTuple`2<SourceText, string>> trackedDocuments, ImmutableArray`1<string> supportedLanguages, ILspServices lspServices, CancellationToken queueCancellationToken);
    [NullableContextAttribute("2")]
public Workspace get_Workspace();
    [NullableContextAttribute("2")]
public Solution get_Solution();
    [NullableContextAttribute("2")]
public Document get_Document();
    [NullableContextAttribute("2")]
public TextDocument get_TextDocument();
    public ClientCapabilities GetRequiredClientCapabilities();
    public Document GetRequiredDocument();
    public TextDocument GetRequiredTextDocument();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext/<CreateAsync>d__22")]
public static Task`1<RequestContext> CreateAsync(bool mutatesSolutionState, bool requiresLSPSolution, TextDocumentIdentifier textDocument, WellKnownLspServerKinds serverKind, ClientCapabilities clientCapabilities, ImmutableArray`1<string> supportedLanguages, ILspServices lspServices, ILspLogger logger, string method, CancellationToken cancellationToken);
    public ValueTask StartTrackingAsync(Uri uri, SourceText initialText, string languageId, CancellationToken cancellationToken);
    public void UpdateTrackedDocument(Uri uri, SourceText changedText);
    public SourceText GetTrackedDocumentSourceText(Uri documentUri);
    public ValueTask StopTrackingAsync(Uri uri, CancellationToken cancellationToken);
    public bool IsTracking(Uri documentUri);
    public void ClearSolutionContext();
    public void TraceInformation(string message);
    public void TraceWarning(string message);
    public void TraceError(string message);
    public void TraceException(Exception exception);
    public T GetRequiredLspService();
    public T GetRequiredService();
    public IEnumerable`1<T> GetRequiredServices();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContextFactory : AbstractRequestContextFactory`1<RequestContext> {
    private ILspServices _lspServices;
    public RequestContextFactory(ILspServices lspServices);
    public virtual Task`1<RequestContext> CreateRequestContextAsync(IQueueItem`1<RequestContext> queueItem, IMethodHandler methodHandler, TRequestParam requestParam, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.RequestTelemetryLogger : object {
    private string _serverTypeName;
    private ConcurrentDictionary`2<string, Counter> _requestCounters;
    private CountLogAggregator`1<string> _findDocumentResults;
    private CountLogAggregator`1<bool> _usedForkedSolutionCounter;
    private int _disposed;
    public RequestTelemetryLogger(string serverTypeName);
    [NullableContextAttribute("2")]
public void UpdateFindDocumentTelemetryData(bool success, string workspaceKind);
    public void UpdateUsedForkedSolutionCounter(bool usedForkedSolution);
    public void UpdateTelemetryData(string methodName, TimeSpan queuedDuration, TimeSpan requestDuration, Result result);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private void <Dispose>b__9_0(Dictionary`2<string, object> m);
    [CompilerGeneratedAttribute]
private void <Dispose>b__9_1(Dictionary`2<string, object> m);
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.RequestTelemetryLogger", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.RequestTelemetryLoggerFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1 : object {
    private int _maxCacheSize;
    private object _accessLock;
    private long _nextResultId;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ValueTuple`2<long, TCacheEntry>> _resultIdToCachedItem;
    public ResolveCache`1(int maxCacheSize);
    public long UpdateCache(TCacheEntry cacheEntry);
    [NullableContextAttribute("2")]
public TCacheEntry GetCachedEntry(long resultId);
    [NullableContextAttribute("0")]
internal TestAccessor<TCacheEntry> GetTestAccessor();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCache : ResolveCache`1<object> {
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCache", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCacheFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.RoslynDocumentSymbol : DocumentSymbol {
    [CompilerGeneratedAttribute]
private int <Glyph>k__BackingField;
    [DataMemberAttribute]
public int Glyph { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public RoslynDocumentSymbol[] Children { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Glyph();
    [CompilerGeneratedAttribute]
public void set_Glyph(int value);
    public RoslynDocumentSymbol[] get_Children();
    public void set_Children(RoslynDocumentSymbol[] value);
}
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.RoslynDocumentSymbolParams : DocumentSymbolParams {
    [CompilerGeneratedAttribute]
private bool <UseHierarchicalSymbols>k__BackingField;
    [JsonPropertyAttribute]
public bool UseHierarchicalSymbols { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseHierarchicalSymbols();
    [CompilerGeneratedAttribute]
public void set_UseHierarchicalSymbols(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.CustomLspSemanticTokenNames : object {
    public static string ExcludedCode;
    public static string KeywordControl;
    public static string OperatorOverloaded;
    public static string Whitespace;
    public static string Text;
    public static string PreprocessorText;
    public static string Punctuation;
    public static string StringVerbatim;
    public static string StringEscapeCharacter;
    public static string RecordClassName;
    public static string DelegateName;
    public static string ModuleName;
    public static string RecordStructName;
    public static string FieldName;
    public static string ConstantName;
    public static string ExtensionMethodName;
    public static string XmlDocCommentAttributeName;
    public static string XmlDocCommentAttributeQuotes;
    public static string XmlDocCommentAttributeValue;
    public static string XmlDocCommentCDataSection;
    public static string XmlDocCommentComment;
    public static string XmlDocCommentDelimiter;
    public static string XmlDocCommentEntityReference;
    public static string XmlDocCommentName;
    public static string XmlDocCommentProcessingInstruction;
    public static string XmlDocCommentText;
    public static string XmlLiteralAttributeName;
    public static string XmlLiteralAttributeQuotes;
    public static string XmlLiteralAttributeValue;
    public static string XmlLiteralCDataSection;
    public static string XmlLiteralComment;
    public static string XmlLiteralDelimiter;
    public static string XmlLiteralEmbeddedExpression;
    public static string XmlLiteralEntityReference;
    public static string XmlLiteralName;
    public static string XmlLiteralProcessingInstruction;
    public static string XmlLiteralText;
    public static string RegexComment;
    public static string RegexCharacterClass;
    public static string RegexAnchor;
    public static string RegexQuantifier;
    public static string RegexGrouping;
    public static string RegexAlternation;
    public static string RegexText;
    public static string RegexSelfEscapedCharacter;
    public static string RegexOtherEscape;
    public static string JsonComment;
    public static string JsonNumber;
    public static string JsonString;
    public static string JsonKeyword;
    public static string JsonText;
    public static string JsonOperator;
    public static string JsonPunctuation;
    public static string JsonArray;
    public static string JsonObject;
    public static string JsonPropertyName;
    public static string JsonConstructorName;
    public static string TestCodeMarkdown;
    public static ImmutableDictionary`2<string, string> ClassificationTypeNameToCustomTokenName;
    private static CustomLspSemanticTokenNames();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensHelpers : object {
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensHelpers/<HandleRequestHelperAsync>d__0")]
internal static Task`1<Int32[]> HandleRequestHelperAsync(IGlobalOptionService globalOptions, SemanticTokensRefreshQueue semanticTokensRefreshQueue, Range[] ranges, RequestContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensHelpers/<HandleRequestHelperAsync>d__1")]
public static Task`1<Int32[]> HandleRequestHelperAsync(Document document, ImmutableArray`1<LinePositionSpan> spans, bool supportsVisualStudioExtensions, ClassificationOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensHelpers/<ComputeSemanticTokensDataAsync>d__2")]
public static Task`1<Int32[]> ComputeSemanticTokensDataAsync(Document document, ImmutableArray`1<LinePositionSpan> spans, bool supportsVisualStudioExtensions, ClassificationOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensHelpers/<GetClassifiedSpansForDocumentAsync>d__3")]
private static Task GetClassifiedSpansForDocumentAsync(SegmentedList`1<ClassifiedSpan> classifiedSpans, Document document, ImmutableArray`1<TextSpan> textSpans, ClassificationOptions options, CancellationToken cancellationToken);
    private static void ConvertMultiLineToSingleLineSpans(SourceText text, SegmentedList`1<ClassifiedSpan> classifiedSpans, SegmentedList`1<ClassifiedSpan> updatedClassifiedSpans);
    private static Int32[] ComputeTokens(TextLineCollection lines, SegmentedList`1<ClassifiedSpan> classifiedSpans, bool supportsVisualStudioExtensions, IReadOnlyDictionary`2<string, int> tokenTypesToIndex);
    private static int ComputeNextToken(TextLineCollection lines, Int32& lastLineNumber, Int32& lastStartCharacter, SegmentedList`1<ClassifiedSpan> classifiedSpans, int currentClassifiedSpanIndex, IReadOnlyDictionary`2<string, string> tokenTypeMap, IReadOnlyDictionary`2<string, int> tokenTypesToIndex, Int32& deltaLineOut, Int32& startCharacterDeltaOut, Int32& tokenLengthOut, Int32& tokenTypeOut, Int32& tokenModifiersOut);
    [CompilerGeneratedAttribute]
internal static void <ConvertMultiLineToSingleLineSpans>g__ConvertToSingleLineSpan|4_0(SourceText text, SegmentedList`1<ClassifiedSpan> originalClassifiedSpans, SegmentedList`1<ClassifiedSpan> updatedClassifiedSpans, Int32& spanIndex, string classificationType, int startLine, int startOffset, int endLine, int endOffSet);
    [CompilerGeneratedAttribute]
internal static int <ComputeNextToken>g__GetTokenTypeIndex|6_0(string classificationType, <>c__DisplayClass6_0& );
}
[MethodAttribute("textDocument/semanticTokens/range")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRangeHandler : object {
    [NullableAttribute("1")]
private IGlobalOptionService _globalOptions;
    [NullableAttribute("1")]
private SemanticTokensRefreshQueue _semanticTokenRefreshQueue;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
public SemanticTokensRangeHandler(IGlobalOptionService globalOptions, SemanticTokensRefreshQueue semanticTokensRefreshQueue);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(SemanticTokensRangeParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRangeHandler/<HandleRequestAsync>d__8")]
public sealed virtual Task`1<SemanticTokens> HandleRequestAsync(SemanticTokensRangeParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRangeHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRangeHandlerFactory : object {
    private IGlobalOptionService _globalOptions;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public SemanticTokensRangeHandlerFactory(IGlobalOptionService globalOptions);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.ExternalAccess.Razor.SemanticTokensRangesHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRangesHandlerFactory : object {
    private IGlobalOptionService _globalOptions;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public SemanticTokensRangesHandlerFactory(IGlobalOptionService globalOptions);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue : object {
    private object _gate;
    private Dictionary`2<ProjectId, Checksum> _projectIdToLastComputedChecksum;
    private LspWorkspaceManager _lspWorkspaceManager;
    private IClientLanguageServerManager _notificationManager;
    private ICapabilitiesProvider _capabilitiesProvider;
    private IAsynchronousOperationListener _asyncListener;
    private CancellationTokenSource _disposalTokenSource;
    [NullableAttribute("2")]
private AsyncBatchingWorkQueue`1<Uri> _semanticTokenRefreshQueue;
    private LspWorkspaceRegistrationService _lspWorkspaceRegistrationService;
    public SemanticTokensRefreshQueue(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, LspWorkspaceManager lspWorkspaceManager, IClientLanguageServerManager notificationManager, ICapabilitiesProvider capabilitiesProvider);
    public sealed virtual Task OnInitializedAsync(ClientCapabilities clientCapabilities, RequestContext context, CancellationToken _);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue/<TryEnqueueRefreshComputationAsync>d__11")]
public Task TryEnqueueRefreshComputationAsync(Project project, CancellationToken cancellationToken);
    private ValueTask FilterLspTrackedDocumentsAsync(ImmutableSegmentedList`1<Uri> documentUris, CancellationToken cancellationToken);
    private void OnLspSolutionChanged(object sender, WorkspaceChangeEventArgs e);
    [NullableContextAttribute("2")]
private static bool DisallowsAdditionalDocumentChangedRefreshes(string filePath);
    [NullableContextAttribute("2")]
private void EnqueueSemanticTokenRefreshNotification(Uri documentUri);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueueFactory : object {
    private IAsynchronousOperationListenerProvider _asyncListenerProvider;
    private LspWorkspaceRegistrationService _lspWorkspaceRegistrationService;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public SemanticTokensRefreshQueueFactory(IAsynchronousOperationListenerProvider asynchronousOperationListenerProvider, LspWorkspaceRegistrationService lspWorkspaceRegistrationService);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema : ValueType {
    private static ImmutableDictionary`2<string, string> s_vsDirectTypeMap;
    private static ImmutableDictionary`2<string, string> s_pureLspDirectTypeMap;
    private static SemanticTokensSchema s_vsTokenSchema;
    private static SemanticTokensSchema s_pureLspTokenSchema;
    public IReadOnlyDictionary`2<string, string> TokenTypeMap;
    public IReadOnlyDictionary`2<string, int> TokenTypeToIndex;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> AllTokenTypes;
    public static String[] TokenModifiers;
    public static SemanticTokensSchema LegacyTokenSchemaForRazor { get; }
    public static SemanticTokensSchema LegacyTokensSchemaForLSIF { get; }
    public SemanticTokensSchema(IReadOnlyDictionary`2<string, string> tokenTypeMap);
    private static SemanticTokensSchema();
    public static SemanticTokensSchema GetSchema(bool clientSupportsVisualStudioExtensions);
    public static SemanticTokensSchema get_LegacyTokenSchemaForRazor();
    public static SemanticTokensSchema get_LegacyTokensSchemaForLSIF();
}
[FlagsAttribute]
internal enum Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.TokenModifiers : Enum {
    public int value__;
    public static TokenModifiers None;
    public static TokenModifiers Static;
    public static TokenModifiers ReassignedVariable;
}
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ServerInfoProvider : object {
    public WellKnownLspServerKinds ServerKind;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> SupportedLanguages;
    public ServerInfoProvider(WellKnownLspServerKinds serverKind, ImmutableArray`1<string> supportedLanguages);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ServerLifetime.LspServiceLifeCycleManager : object {
    private IClientLanguageServerManager _clientLanguageServerManager;
    public LspServiceLifeCycleManager(IClientLanguageServerManager clientLanguageServerManager);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ServerLifetime.LspServiceLifeCycleManager/<ShutdownAsync>d__2")]
public sealed virtual Task ShutdownAsync(string message);
    public sealed virtual Task ExitAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SignatureHelpHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/signatureHelp")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SignatureHelpHandler : object {
    private IEnumerable`1<Lazy`2<ISignatureHelpProvider, OrderableLanguageMetadata>> _allProviders;
    private IGlobalOptionService _globalOptions;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public SignatureHelpHandler(IEnumerable`1<Lazy`2<ISignatureHelpProvider, OrderableLanguageMetadata>> allProviders, IGlobalOptionService globalOptions);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(TextDocumentPositionParams request);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SignatureHelpHandler/<HandleRequestAsync>d__8")]
public sealed virtual Task`1<SignatureHelp> HandleRequestAsync(TextDocumentPositionParams request, RequestContext context, CancellationToken cancellationToken);
    private static int GetActiveSignature(SignatureHelpItems items);
    private static string GetSignatureText(SignatureHelpItem item);
    private static ClassifiedTextElement GetSignatureClassifiedText(SignatureHelpItem item);
}
internal abstract class Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2 : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private VersionedPullCache`1<Nullable`1<ValueTuple`2<Checksum, Checksum>>> _versionedCache;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public abstract virtual TextDocumentIdentifier GetTextDocumentIdentifier(TParams requestParams);
    protected abstract virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(TParams requestParams);
    protected abstract virtual ImmutableArray`1<Document> GetOrderedDocuments(RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
protected abstract virtual TReport CreateReport(TextDocumentIdentifier identifier, Int32[] ranges, string resultId);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2/<HandleRequestAsync>d__10")]
public sealed virtual Task`1<TReport[]> HandleRequestAsync(TParams requestParams, RequestContext context, CancellationToken cancellationToken);
    private static Dictionary`2<Document, PreviousPullResult> GetDocumentToPreviousParams(RequestContext context, ImmutableArray`1<PreviousPullResult> previousResults);
    [NullableContextAttribute("1")]
[AsyncIteratorStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2/<ComputeAndReportCurrentSpansAsync>d__12")]
private IAsyncEnumerable`1<TReport> ComputeAndReportCurrentSpansAsync(Document document, ISpellCheckSpanService service, string resultId, CancellationToken cancellationToken);
    private void HandleRemovedDocuments(RequestContext context, ImmutableArray`1<PreviousPullResult> previousResults, BufferedProgress`1<TReport[]> progress);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2/<ComputeChecksumsAsync>d__14")]
private static Task`1<ValueTuple`2<Checksum, Checksum>> ComputeChecksumsAsync(Document document, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MethodAttribute("textDocument/_vs_spellCheckableRanges")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.DocumentSpellCheckHandler : AbstractSpellCheckHandler`2<VSInternalDocumentSpellCheckableParams, VSInternalSpellCheckableRangeReport> {
    public virtual TextDocumentIdentifier GetTextDocumentIdentifier(VSInternalDocumentSpellCheckableParams requestParams);
    protected virtual VSInternalSpellCheckableRangeReport CreateReport(TextDocumentIdentifier identifier, Int32[] ranges, string resultId);
    [NullableContextAttribute("0")]
protected virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(VSInternalDocumentSpellCheckableParams requestParams);
    protected virtual ImmutableArray`1<Document> GetOrderedDocuments(RequestContext context, CancellationToken cancellationToken);
    internal static ImmutableArray`1<Document> GetRequestedDocument(RequestContext context);
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.DocumentSpellCheckHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.DocumentSpellCheckHandlerFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MethodAttribute("workspace/_vs_spellCheckableRanges")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.WorkspaceSpellCheckHandler : AbstractSpellCheckHandler`2<VSInternalWorkspaceSpellCheckableParams, VSInternalWorkspaceSpellCheckableReport> {
    protected virtual VSInternalWorkspaceSpellCheckableReport CreateReport(TextDocumentIdentifier identifier, Int32[] ranges, string resultId);
    public virtual TextDocumentIdentifier GetTextDocumentIdentifier(VSInternalWorkspaceSpellCheckableParams requestParams);
    [NullableContextAttribute("0")]
protected virtual Nullable`1<ImmutableArray`1<PreviousPullResult>> GetPreviousResults(VSInternalWorkspaceSpellCheckableParams requestParams);
    protected virtual ImmutableArray`1<Document> GetOrderedDocuments(RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <GetOrderedDocuments>g__AddDocumentsFromProject|3_0(Project project, ImmutableArray`1<string> supportedLanguages, <>c__DisplayClass3_0& );
}
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.WorkspaceSpellCheckHandler", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.WorkspaceSpellCheckHandlerFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Testing.DebugAttachParams : object {
    [CompilerGeneratedAttribute]
private int <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DataMemberAttribute]
public int ProcessId { get; public set; }
    public DebugAttachParams(int ProcessId);
    [CompilerGeneratedAttribute]
protected DebugAttachParams(DebugAttachParams original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public int get_ProcessId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ProcessId(int value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(DebugAttachParams left, DebugAttachParams right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(DebugAttachParams left, DebugAttachParams right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(DebugAttachParams other);
    [CompilerGeneratedAttribute]
public virtual DebugAttachParams <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int32& ProcessId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Testing.DebugAttachResult : object {
    [CompilerGeneratedAttribute]
private bool <DidAttach>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DataMemberAttribute]
public bool DidAttach { get; public set; }
    public DebugAttachResult(bool DidAttach);
    [CompilerGeneratedAttribute]
protected DebugAttachResult(DebugAttachResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_DidAttach();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DidAttach(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(DebugAttachResult left, DebugAttachResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(DebugAttachResult left, DebugAttachResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(DebugAttachResult other);
    [CompilerGeneratedAttribute]
public virtual DebugAttachResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& DidAttach);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Testing.RunTestsParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AttachDebugger>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <RunSettingsPath>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<RunTestsPartialResult> <PartialResultToken>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
public bool AttachDebugger { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
public string RunSettingsPath { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<RunTestsPartialResult> PartialResultToken { get; public set; }
    public RunTestsParams(TextDocumentIdentifier TextDocument, Range Range, bool AttachDebugger, string RunSettingsPath);
    [CompilerGeneratedAttribute]
protected RunTestsParams(RunTestsParams original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Range(Range value);
    [CompilerGeneratedAttribute]
public bool get_AttachDebugger();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AttachDebugger(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RunSettingsPath();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RunSettingsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<RunTestsPartialResult> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<RunTestsPartialResult> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RunTestsParams left, RunTestsParams right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RunTestsParams left, RunTestsParams right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(RunTestsParams other);
    [CompilerGeneratedAttribute]
public virtual RunTestsParams <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(TextDocumentIdentifier& TextDocument, Range& Range, Boolean& AttachDebugger, String& RunSettingsPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Testing.RunTestsPartialResult : object {
    [CompilerGeneratedAttribute]
private string <Stage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TestProgress> <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [DataMemberAttribute]
public string Stage { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<TestProgress> Progress { get; public set; }
    public RunTestsPartialResult(string Stage, string Message, Nullable`1<TestProgress> Progress);
    [CompilerGeneratedAttribute]
protected RunTestsPartialResult(RunTestsPartialResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Stage();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Stage(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Message(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TestProgress> get_Progress();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Progress(Nullable`1<TestProgress> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RunTestsPartialResult left, RunTestsPartialResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RunTestsPartialResult left, RunTestsPartialResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(RunTestsPartialResult other);
    [CompilerGeneratedAttribute]
public virtual RunTestsPartialResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Stage, String& Message, Nullable`1& Progress);
}
[DataContractAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.Testing.TestProgress : ValueType {
    [CompilerGeneratedAttribute]
private long <TestsPassed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TestsFailed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TestsSkipped>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalTests>k__BackingField;
    [DataMemberAttribute]
public long TestsPassed { get; public set; }
    [DataMemberAttribute]
public long TestsFailed { get; public set; }
    [DataMemberAttribute]
public long TestsSkipped { get; public set; }
    [DataMemberAttribute]
public long TotalTests { get; public set; }
    public TestProgress(long TestsPassed, long TestsFailed, long TestsSkipped, long TotalTests);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public long get_TestsPassed();
    [CompilerGeneratedAttribute]
public void set_TestsPassed(long value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public long get_TestsFailed();
    [CompilerGeneratedAttribute]
public void set_TestsFailed(long value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public long get_TestsSkipped();
    [CompilerGeneratedAttribute]
public void set_TestsSkipped(long value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public long get_TotalTests();
    [CompilerGeneratedAttribute]
public void set_TotalTests(long value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(TestProgress left, TestProgress right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(TestProgress left, TestProgress right);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TestProgress other);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public void Deconstruct(Int64& TestsPassed, Int64& TestsFailed, Int64& TestsSkipped, Int64& TotalTests);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ValidateBreakableRangeHandler", "8")]
[SharedAttribute]
[MethodAttribute("textDocument/_vs_validateBreakableRange")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.ValidateBreakableRangeHandler : object {
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
public sealed virtual TextDocumentIdentifier GetTextDocumentIdentifier(VSInternalValidateBreakableRangeParams request);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.ValidateBreakableRangeHandler/<HandleRequestAsync>d__6")]
public sealed virtual Task`1<Range> HandleRequestAsync(VSInternalValidateBreakableRangeParams request, RequestContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
private static bool BreakpointRangeIsSmaller(Range breakpointRange, Range existingRange);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`1 : VersionedPullCache`2<TVersion, object> {
    public VersionedPullCache`1(string uniqueKey);
    public Task`1<string> GetNewResultIdAsync(Dictionary`2<Document, PreviousPullResult> documentToPreviousDiagnosticParams, Document document, Func`1<Task`1<TVersion>> computeVersionAsync, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2 : object {
    private string _uniqueKey;
    private SemaphoreSlim _semaphore;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<ValueTuple`2<Workspace, ProjectOrDocumentId>, ValueTuple`3<string, TCheapVersion, TExpensiveVersion>> _idToLastReportedResult;
    private long _nextDocumentResultId;
    public VersionedPullCache`2(string uniqueKey);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2/<GetNewResultIdAsync>d__5")]
public Task`1<string> GetNewResultIdAsync(Dictionary`2<ProjectOrDocumentId, PreviousPullResult> idToClientLastResult, ProjectOrDocumentId projectOrDocumentId, Project project, Func`1<Task`1<TCheapVersion>> computeCheapVersionAsync, Func`1<Task`1<TExpensiveVersion>> computeExpensiveVersionAsync, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2/<IsFullyLoadedAsync>d__6")]
private static Task`1<bool> IsFullyLoadedAsync(Solution solution, CancellationToken cancellationToken);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.WorkspaceSymbolsHandler", "8")]
[SharedAttribute]
[MethodAttribute("workspace/symbol")]
internal class Microsoft.CodeAnalysis.LanguageServer.Handler.WorkspaceSymbolsHandler : object {
    [NullableAttribute("1")]
private static IImmutableSet`1<string> s_supportedKinds;
    [NullableAttribute("1")]
private IAsynchronousOperationListener _asyncListener;
    public bool MutatesSolutionState { get; }
    public bool RequiresLSPSolution { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public WorkspaceSymbolsHandler(IAsynchronousOperationListenerProvider listenerProvider);
    private static WorkspaceSymbolsHandler();
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual bool get_RequiresLSPSolution();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.Handler.WorkspaceSymbolsHandler/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<SymbolInformation[]> HandleRequestAsync(WorkspaceSymbolParams request, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.HostWorkspace.LanguageServerProjectSystemOptionsStorage : object {
    private static OptionGroup s_optionGroup;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Option2`1<string> BinaryLogPath;
    public static Option2`1<bool> EnableAutomaticRestore;
    private static LanguageServerProjectSystemOptionsStorage();
}
internal interface Microsoft.CodeAnalysis.LanguageServer.ICapabilitiesProvider {
    [NullableContextAttribute("1")]
public abstract virtual ServerCapabilities GetCapabilities(ClientCapabilities clientCapabilities);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.IClientLanguageServerManager {
    public abstract virtual Task`1<TResponse> SendRequestAsync(string methodName, TParams params, CancellationToken cancellationToken);
    public abstract virtual ValueTask SendRequestAsync(string methodName, CancellationToken cancellationToken);
    public abstract virtual ValueTask SendRequestAsync(string methodName, TParams params, CancellationToken cancellationToken);
    public abstract virtual ValueTask SendNotificationAsync(string methodName, CancellationToken cancellationToken);
    public abstract virtual ValueTask SendNotificationAsync(string methodName, TParams params, CancellationToken cancellationToken);
}
internal interface Microsoft.CodeAnalysis.LanguageServer.ILanguageInfoProvider {
    [NullableContextAttribute("1")]
public abstract virtual LanguageInformation GetLanguageInformation(string documentPath, string lspLanguageId);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.ILanguageServerFactory {
    public abstract virtual AbstractLanguageServer`1<RequestContext> Create(JsonRpc jsonRpc, ICapabilitiesProvider capabilitiesProvider, WellKnownLspServerKinds serverKind, AbstractLspLogger logger, HostServices hostServices);
}
internal interface Microsoft.CodeAnalysis.LanguageServer.ILspService {
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.ILspServiceFactory {
    public abstract virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.ILspServiceLoggerFactory {
    public abstract virtual Task`1<AbstractLspLogger> CreateLoggerAsync(string serverTypeName, JsonRpc jsonRpc, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.ILspWorkspace {
    public bool SupportsMutation { get; }
    public abstract virtual bool get_SupportsMutation();
    public abstract virtual ValueTask UpdateTextIfPresentAsync(DocumentId documentId, SourceText sourceText, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.LanguageServer.IOnInitialized {
    public abstract virtual Task OnInitializedAsync(ClientCapabilities clientCapabilities, RequestContext context, CancellationToken cancellationToken);
}
internal interface Microsoft.CodeAnalysis.LanguageServer.IRequestExecutionQueueProvider`1 {
    [NullableContextAttribute("1")]
public abstract virtual IRequestExecutionQueue`1<RequestContext> CreateRequestExecutionQueue(AbstractLanguageServer`1<RequestContext> languageServer, ILspLogger logger, AbstractHandlerProvider handlerProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.LanguageInfoProvider : object {
    private static LanguageInformation s_csharpLanguageInformation;
    private static LanguageInformation s_fsharpLanguageInformation;
    private static LanguageInformation s_vbLanguageInformation;
    private static LanguageInformation s_typeScriptLanguageInformation;
    private static LanguageInformation s_razorLanguageInformation;
    private static LanguageInformation s_xamlLanguageInformation;
    private static Dictionary`2<string, LanguageInformation> s_extensionToLanguageInformation;
    private static LanguageInfoProvider();
    public sealed virtual LanguageInformation GetLanguageInformation(string documentPath, string lspLanguageId);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string DocumentUriSerializationError { get; }
    internal static string MarkupContentSerializationError { get; }
    internal static string NestedSumType { get; }
    internal static string NoSumTypeMatch { get; }
    internal static string StringEnumMissingConstructor { get; }
    internal static string StringEnumSerializationError { get; }
    internal static string TextDocumentSyncSerializationError { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_DocumentUriSerializationError();
    internal static string get_MarkupContentSerializationError();
    internal static string get_NestedSumType();
    internal static string get_NoSumTypeMatch();
    internal static string get_StringEnumMissingConstructor();
    internal static string get_StringEnumSerializationError();
    internal static string get_TextDocumentSyncSerializationError();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.LspMiscellaneousFilesWorkspace : Workspace {
    private ILspServices _lspServices;
    public bool SupportsMutation { get; }
    public LspMiscellaneousFilesWorkspace(ILspServices lspServices, HostServices hostServices);
    public sealed virtual bool get_SupportsMutation();
    public Document AddMiscellaneousDocument(Uri uri, SourceText documentText, string languageId, ILspLogger logger);
    public void TryRemoveMiscellaneousDocument(Uri uri);
    public sealed virtual ValueTask UpdateTextIfPresentAsync(DocumentId documentId, SourceText sourceText, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.LspOptionsStorage : object {
    public static Option2`1<int> MaxCompletionListSize;
    public static Option2`1<bool> LspEditorFeatureFlag;
    public static Option2`1<bool> LspSemanticTokensFeatureFlag;
    public static Option2`1<bool> LspUsingDevkitFeatures;
    private static OptionGroup s_codeLensOptionGroup;
    public static PerLanguageOption2`1<bool> LspEnableReferencesCodeLens;
    public static PerLanguageOption2`1<bool> LspEnableTestsCodeLens;
    private static LspOptionsStorage();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.LspServiceMetadataView : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private WellKnownLspServerKinds <ServerKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStateless>k__BackingField;
    public Type Type { get; public set; }
    public WellKnownLspServerKinds ServerKind { get; public set; }
    public bool IsStateless { get; public set; }
    public LspServiceMetadataView(IDictionary`2<string, object> metadata);
    public LspServiceMetadataView(Type type);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public WellKnownLspServerKinds get_ServerKind();
    [CompilerGeneratedAttribute]
public void set_ServerKind(WellKnownLspServerKinds value);
    [CompilerGeneratedAttribute]
public bool get_IsStateless();
    [CompilerGeneratedAttribute]
public void set_IsStateless(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.LspServices : object {
    private ImmutableDictionary`2<Type, Lazy`2<ILspService, LspServiceMetadataView>> _lazyMefLspServices;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<Type, ImmutableArray`1<Func`2<ILspServices, object>>> _baseServices;
    private object _gate;
    private HashSet`1<IDisposable> _servicesToDispose;
    public LspServices(ImmutableArray`1<Lazy`2<ILspService, LspServiceMetadataView>> mefLspServices, ImmutableArray`1<Lazy`2<ILspServiceFactory, LspServiceMetadataView>> mefLspServiceFactories, WellKnownLspServerKinds serverKind, ImmutableDictionary`2<Type, ImmutableArray`1<Func`2<ILspServices, object>>> baseServices);
    public sealed virtual T GetRequiredService();
    [NullableContextAttribute("2")]
public T GetService();
    public sealed virtual IEnumerable`1<T> GetRequiredServices();
    public sealed virtual object TryGetService(Type type);
    public sealed virtual ImmutableArray`1<Type> GetRegisteredServices();
    public sealed virtual bool SupportsGetRegisteredServices();
    private IEnumerable`1<T> GetBaseServices();
    [IteratorStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspServices/<GetMefServices>d__12`1")]
private IEnumerable`1<T> GetMefServices();
    public sealed virtual void Dispose();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private object <TryGetService>b__8_0(Func`2<ILspServices, object> creatorFunc);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private T <GetBaseServices>b__11_0(Func`2<ILspServices, object> creatorFunc);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<Workspace, ValueTuple`2<Nullable`1<int>, Solution>> _cachedLspSolutions;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<Uri, ValueTuple`2<SourceText, string>> _trackedDocuments;
    private ILspLogger _logger;
    [NullableAttribute("2")]
private LspMiscellaneousFilesWorkspace _lspMiscellaneousFilesWorkspace;
    private LspWorkspaceRegistrationService _lspWorkspaceRegistrationService;
    private ILanguageInfoProvider _languageInfoProvider;
    private RequestTelemetryLogger _requestTelemetryLogger;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<EventArgs> LspTextChanged;
    public LspWorkspaceManager(ILspLogger logger, LspMiscellaneousFilesWorkspace lspMiscellaneousFilesWorkspace, LspWorkspaceRegistrationService lspWorkspaceRegistrationService, ILanguageInfoProvider languageInfoProvider, RequestTelemetryLogger requestTelemetryLogger);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<ApplyChangeToMutatingWorkspaceAsync>d__9")]
private static ValueTask ApplyChangeToMutatingWorkspaceAsync(Workspace workspace, Uri uri, Func`3<ILspWorkspace, DocumentId, ValueTask> change);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<StartTrackingAsync>d__10")]
public sealed virtual ValueTask StartTrackingAsync(Uri uri, SourceText documentText, string languageId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<StopTrackingAsync>d__11")]
public sealed virtual ValueTask StopTrackingAsync(Uri uri, CancellationToken cancellationToken);
    public sealed virtual void UpdateTrackedDocument(Uri uri, SourceText newSourceText);
    public ImmutableDictionary`2<Uri, ValueTuple`2<SourceText, string>> GetTrackedLspText();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<GetLspSolutionInfoAsync>d__14")]
public Task`1<ValueTuple`2<Workspace, Solution>> GetLspSolutionInfoAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<GetLspDocumentInfoAsync>d__15")]
public Task`1<ValueTuple`3<Workspace, Solution, TextDocument>> GetLspDocumentInfoAsync(TextDocumentIdentifier textDocumentIdentifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<GetLspSolutionsAsync>d__16")]
private Task`1<ImmutableArray`1<ValueTuple`3<Workspace, Solution, bool>>> GetLspSolutionsAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<DoesAllTextMatchWorkspaceSolutionAsync>d__17")]
private Task`1<bool> DoesAllTextMatchWorkspaceSolutionAsync(ImmutableDictionary`2<Uri, ImmutableArray`1<TextDocument>> documentsInWorkspace, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager/<AreChecksumsEqualAsync>d__18")]
private static ValueTask`1<bool> AreChecksumsEqualAsync(TextDocument document, SourceText lspText, CancellationToken cancellationToken);
    internal string GetLanguageForUri(Uri uri);
    private static ImmutableDictionary`2<Uri, ImmutableArray`1<TextDocument>> GetDocumentsForUris(ImmutableArray`1<Uri> trackedDocuments, Solution workspaceCurrentSolution);
    internal TestAccessor GetTestAccessor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportCSharpVisualBasicLspServiceFactoryAttribute("Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManagerFactory : object {
    private LspWorkspaceRegistrationService _workspaceRegistrationService;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public LspWorkspaceManagerFactory(LspWorkspaceRegistrationService lspWorkspaceRegistrationService);
    public sealed virtual ILspService CreateILspService(LspServices lspServices, WellKnownLspServerKinds serverKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceRegisteredEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Workspace <Workspace>k__BackingField;
    public Workspace Workspace { get; }
    public LspWorkspaceRegisteredEventArgs(Workspace workspace);
    [CompilerGeneratedAttribute]
public Workspace get_Workspace();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExportEventListenerAttribute("Workspace", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceRegistrationEventListener : object {
    private LspWorkspaceRegistrationService _lspWorkspaceRegistrationService;
    [ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public LspWorkspaceRegistrationEventListener(LspWorkspaceRegistrationService lspWorkspaceRegistrationService);
    public sealed virtual void StartListening(Workspace workspace, object _);
    public sealed virtual void StopListening(Workspace workspace);
}
internal abstract class Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceRegistrationService : object {
    [NullableAttribute("1")]
private object _gate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<Workspace> _registrations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<WorkspaceChangeEventArgs> LspSolutionChanged;
    public ImmutableArray`1<Workspace> GetAllRegistrations();
    [NullableContextAttribute("2")]
public virtual void Register(Workspace workspace);
    [NullableContextAttribute("2")]
public void Deregister(Workspace workspace);
    [NullableContextAttribute("1")]
private void OnLspWorkspaceChanged(object sender, WorkspaceChangeEventArgs e);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.NoOpLspLogger : AbstractLspLogger {
    public static NoOpLspLogger Instance;
    private static NoOpLspLogger();
    public virtual void LogDebug(string message, Object[] params);
    public virtual void LogException(Exception exception, string message, Object[] params);
    public virtual void LogInformation(string message, Object[] params);
    public virtual void LogWarning(string message, Object[] params);
    public virtual void LogError(string message, Object[] params);
    public virtual void LogStartContext(string message, Object[] params);
    public virtual void LogEndContext(string message, Object[] params);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.ProtocolConstants : object {
    public static string RazorCSharp;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ImmutableArray`1<string> RoslynLspLanguages;
    public static string RoslynLspLanguagesContract;
    public static string TypeScriptLanguageContract;
    public static string RazorCohostContract;
    private static ProtocolConstants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions : object {
    private static string CSharpMarkdownLanguageName;
    private static string VisualBasicMarkdownLanguageName;
    private static string SourceGeneratedDocumentBaseUri;
    private static string BlockCodeFence;
    private static string InlineCodeFence;
    private static Uri s_sourceGeneratedDocumentBaseUri;
    private static Char[] s_dirSeparators;
    private static Regex s_markdownEscapeRegex;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ImmutableDictionary`2<string, ImmutableArray`1<CompletionItemKind>> RoslynTagToCompletionItemKinds;
    private static ProtocolConversions();
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<LSPToRoslynCompletionTriggerAsync>d__9")]
public static Task`1<CompletionTrigger> LSPToRoslynCompletionTriggerAsync(CompletionContext context, Document document, int position, CancellationToken cancellationToken);
    public static string GetDocumentFilePathFromUri(Uri uri);
    public static Uri CreateAbsoluteUri(string absolutePath);
    internal static string GetAbsoluteUriString(string absolutePath);
    public static Uri CreateUriFromSourceGeneratedFilePath(string filePath);
    private static bool IsAscii(char c);
    private static bool IsAscii(string filePath);
    public static TextDocumentPositionParams PositionToTextDocumentPositionParams(int position, SourceText text, Document document);
    public static TextDocumentIdentifier DocumentToTextDocumentIdentifier(TextDocument document);
    public static VersionedTextDocumentIdentifier DocumentToVersionedTextDocumentIdentifier(Document document);
    public static LinePosition PositionToLinePosition(Position position);
    public static LinePositionSpan RangeToLinePositionSpan(Range range);
    public static TextSpan RangeToTextSpan(Range range, SourceText text);
    public static TextEdit TextChangeToTextEdit(TextChange textChange, SourceText oldText);
    public static TextChange TextEditToTextChange(TextEdit edit, SourceText oldText);
    public static TextChange ContentChangeEventToTextChange(TextDocumentContentChangeEvent changeEvent, SourceText text);
    public static Position LinePositionToPosition(LinePosition linePosition);
    public static Range LinePositionToRange(LinePositionSpan linePositionSpan);
    public static Range TextSpanToRange(TextSpan textSpan, SourceText text);
    public static Task`1<Location> DocumentSpanToLocationAsync(DocumentSpan documentSpan, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<DocumentSpanToLocationWithTextAsync>d__29")]
public static Task`1<VSInternalLocation> DocumentSpanToLocationWithTextAsync(DocumentSpan documentSpan, ClassifiedTextElement text, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<ChangedDocumentsToTextDocumentEditsAsync>d__30`1")]
public static Task`1<TextDocumentEdit[]> ChangedDocumentsToTextDocumentEditsAsync(IEnumerable`1<DocumentId> changedDocuments, Func`2<DocumentId, T> getNewDocumentFunc, Func`2<DocumentId, T> getOldDocumentFunc, IDocumentTextDifferencingService textDiffService, CancellationToken cancellationToken);
    public static Task`1<Location> TextSpanToLocationAsync(TextDocument document, TextSpan textSpan, bool isStale, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<TextSpanToLocationAsync>d__32")]
public static Task`1<Location> TextSpanToLocationAsync(TextDocument document, TextSpan textSpan, bool isStale, Nullable`1<RequestContext> context, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public static CodeDescription HelpLinkToCodeDescription(Uri uri);
    public static SymbolKind NavigateToKindToSymbolKind(string kind);
    public static DocumentHighlightKind HighlightSpanKindToDocumentHighlightKind(HighlightSpanKind kind);
    public static Glyph SymbolKindToGlyph(SymbolKind kind);
    public static SymbolKind GlyphToSymbolKind(Glyph glyph);
    public static Glyph CompletionItemKindToGlyph(CompletionItemKind kind);
    public static VSInternalReferenceKind[] SymbolUsageInfoToReferenceKinds(SymbolUsageInfo symbolUsageInfo);
    public static string ProjectIdToProjectContextId(ProjectId id);
    public static ProjectId ProjectContextToProjectId(VSProjectContext projectContext);
    public static VSProjectContext ProjectToProjectContext(Project project);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<GetFormattingOptionsAsync>d__43")]
public static Task`1<SyntaxFormattingOptions> GetFormattingOptionsAsync(FormattingOptions options, Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    public static MarkupContent GetDocumentationMarkupContent(ImmutableArray`1<TaggedText> tags, TextDocument document, bool featureSupportsMarkdown);
    public static MarkupContent GetDocumentationMarkupContent(ImmutableArray`1<TaggedText> tags, string language, bool featureSupportsMarkdown);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<GetMappedSpanResultAsync>d__46")]
private static Task`1<Nullable`1<ImmutableArray`1<MappedSpanResult>>> GetMappedSpanResultAsync(TextDocument textDocument, ImmutableArray`1<TextSpan> textSpans, CancellationToken cancellationToken);
    private static Range MappedSpanResultToRange(MappedSpanResult mappedSpanResult);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<<LSPToRoslynCompletionTriggerAsync>g__GetInsertionCharacterAsync|9_0>d")]
[CompilerGeneratedAttribute]
internal static Task`1<char> <LSPToRoslynCompletionTriggerAsync>g__GetInsertionCharacterAsync|9_0(Document document, int position, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static string <GetAbsoluteUriString>g__EscapeUriPart|12_0(string stringToEscape);
    [CompilerGeneratedAttribute]
internal static string <RangeToTextSpan>g__RangeToString|21_0(Range range);
    [CompilerGeneratedAttribute]
internal static string <RangeToTextSpan>g__PositionToString|21_1(Position position);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions/<<TextSpanToLocationAsync>g__ConvertTextSpanToLocationAsync|32_0>d")]
[CompilerGeneratedAttribute]
internal static Task`1<Location> <TextSpanToLocationAsync>g__ConvertTextSpanToLocationAsync|32_0(TextDocument document, TextSpan span, bool isStale, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static Location <TextSpanToLocationAsync>g__ConvertTextSpanWithTextToLocation|32_1(TextSpan span, SourceText text, Uri documentUri);
    [CompilerGeneratedAttribute]
internal static string <GetDocumentationMarkupContent>g__GetCodeBlockLanguageName|45_0(string language);
    [CompilerGeneratedAttribute]
internal static string <GetDocumentationMarkupContent>g__GetStyledText|45_1(TaggedText taggedText, bool isInCodeBlock);
}
[ExportCSharpVisualBasicStatelessLspServiceAttribute("Microsoft.CodeAnalysis.LanguageServer.IRequestExecutionQueueProvider`1<Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext>", "8")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.LanguageServer.RequestExecutionQueueProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual IRequestExecutionQueue`1<RequestContext> CreateRequestExecutionQueue(AbstractLanguageServer`1<RequestContext> languageServer, ILspLogger logger, AbstractHandlerProvider handlerProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.RequestTelemetryScope : AbstractRequestScope {
    private RequestTelemetryLogger _telemetryLogger;
    private Result _result;
    private SharedStopwatch _stopwatch;
    private TimeSpan _queuedDuration;
    public RequestTelemetryScope(string name, RequestTelemetryLogger telemetryLogger);
    public virtual void RecordExecutionStart();
    public virtual void RecordCancellation();
    public virtual void RecordException(Exception exception);
    public virtual void RecordWarning(string message);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.RoslynLanguageServer : AbstractLanguageServer`1<RequestContext> {
    private AbstractLspServiceProvider _lspServiceProvider;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<Type, ImmutableArray`1<Func`2<ILspServices, object>>> _baseServices;
    private WellKnownLspServerKinds _serverKind;
    public RoslynLanguageServer(AbstractLspServiceProvider lspServiceProvider, JsonRpc jsonRpc, ICapabilitiesProvider capabilitiesProvider, AbstractLspLogger logger, HostServices hostServices, ImmutableArray`1<string> supportedLanguages, WellKnownLspServerKinds serverKind);
    protected virtual ILspServices ConstructLspServices();
    protected virtual IRequestExecutionQueue`1<RequestContext> ConstructRequestExecutionQueue();
    private ImmutableDictionary`2<Type, ImmutableArray`1<Func`2<ILspServices, object>>> GetBaseServices(JsonRpc jsonRpc, AbstractLspLogger logger, ICapabilitiesProvider capabilitiesProvider, HostServices hostServices, WellKnownLspServerKinds serverKind, ImmutableArray`1<string> supportedLanguages);
    public sealed virtual Task OnInitializedAsync(ClientCapabilities clientCapabilities, RequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.RoslynRequestExecutionQueue : RequestExecutionQueue`1<RequestContext> {
    private IInitializeManager _initializeManager;
    private LspWorkspaceManager _lspWorkspaceManager;
    [NullableAttribute("2")]
private CultureInfo _cultureInfo;
    public RoslynRequestExecutionQueue(AbstractLanguageServer`1<RequestContext> languageServer, ILspLogger logger, AbstractHandlerProvider handlerProvider);
    public virtual Task WrapStartRequestTaskAsync(Task nonMutatingRequestTask, bool rethrowExceptions);
    protected virtual string GetLanguageForRequest(string methodName, TRequest request);
    private static Uri GetUriForRequest(string methodName, TRequest request);
    private CultureInfo GetCultureForRequest();
    [CompilerGeneratedAttribute]
internal static bool <GetUriForRequest>g__IsDocumentResolveMethod|6_0(string methodName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.SourceTextLoader : TextLoader {
    private SourceText _sourceText;
    private string _fileUri;
    [NullableAttribute("2")]
internal string FilePath { get; }
    public SourceTextLoader(SourceText sourceText, string fileUri);
    [NullableContextAttribute("2")]
internal virtual string get_FilePath();
    public virtual Task`1<TextAndVersion> LoadTextAndVersionAsync(LoadTextOptions options, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.LanguageServer.TelemetryService : AbstractTelemetryService {
    private RequestTelemetryLogger _requestTelemetryLogger;
    public TelemetryService(ILspServices lspServices);
    public virtual AbstractRequestScope CreateRequestScope(string lspMethodName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerExtensions : object {
    [ExtensionAttribute]
public static string ToUserVisibleString(WellKnownLspServerKinds server);
    [ExtensionAttribute]
public static string ToTelemetryString(WellKnownLspServerKinds server);
    [ExtensionAttribute]
public static string GetContractName(WellKnownLspServerKinds server);
}
internal enum Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds : Enum {
    public int value__;
    public static WellKnownLspServerKinds RazorCohostServer;
    public static WellKnownLspServerKinds RazorLspServer;
    public static WellKnownLspServerKinds LiveShareLspServer;
    public static WellKnownLspServerKinds AlwaysActiveVSLspServer;
    public static WellKnownLspServerKinds CSharpVisualBasicLspServer;
    public static WellKnownLspServerKinds XamlLspServer;
    public static WellKnownLspServerKinds XamlLspServerDisableUX;
    public static WellKnownLspServerKinds RoslynTypeScriptLspServer;
    public static WellKnownLspServerKinds Any;
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.LanguageService.SymbolDescriptionOptionsStorage : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static SymbolDescriptionOptions GetSymbolDescriptionOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.MetadataAsSource.MetadataAsSourceOptionsStorage : object {
    private static OptionGroup s_navigationOptionGroup;
    public static Option2`1<bool> NavigateToDecompiledSources;
    public static Option2`1<bool> AlwaysUseDefaultSymbolServers;
    public static Option2`1<bool> NavigateToSourceLinkAndEmbeddedSources;
    private static MetadataAsSourceOptionsStorage();
    [ExtensionAttribute]
public static MetadataAsSourceOptions GetMetadataAsSourceOptions(IGlobalOptionService globalOptions, LanguageServices languageServices);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Options.CodeActionOptionsStorage : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Provider CreateProvider(IGlobalOptionService globalOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.OrganizeImports.OrganizeImportsOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<OrganizeImportsOptions> GetOrganizeImportsOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static OrganizeImportsOptions GetOrganizeImportsOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.QuickInfo.QuickInfoOptionsStorage : object {
    private static OptionGroup s_quickInfoGroup;
    public static PerLanguageOption2`1<bool> ShowRemarksInQuickInfo;
    public static Option2`1<bool> IncludeNavigationHintsInQuickInfo;
    private static QuickInfoOptionsStorage();
    [ExtensionAttribute]
public static QuickInfoOptions GetQuickInfoOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.ReferenceHighlighting.ReferenceHighlightingConstants : object {
    public static string DefinitionTagId;
    public static string ReferenceTagId;
    public static string WrittenReferenceTagId;
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpOptionsStorage : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static SignatureHelpOptions GetSignatureHelpOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Simplification.SimplifierOptionsStorage : object {
    [ExtensionAttribute]
public static ValueTask`1<SimplifierOptions> GetSimplifierOptionsAsync(Document document, IGlobalOptionService globalOptions, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static SimplifierOptions GetSimplifierOptions(IGlobalOptionService options, LanguageServices languageServices);
}
[ExportWorkspaceServiceAttribute("Microsoft.CodeAnalysis.SolutionCrawler.ISolutionCrawlerOptionsService", "Default")]
[SharedAttribute]
internal class Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsService : object {
    [NullableAttribute("1")]
private IGlobalOptionService _globalOptions;
    public bool EnableDiagnosticsInSourceGeneratedFiles { get; }
    [NullableContextAttribute("1")]
[ImportingConstructorAttribute]
[ObsoleteAttribute("This exported object must be obtained through the MEF export provider.", "True")]
public SolutionCrawlerOptionsService(IGlobalOptionService globalOptions);
    public sealed virtual bool get_EnableDiagnosticsInSourceGeneratedFiles();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage : object {
    private static OptionGroup s_backgroundAnalysisOptionGroup;
    public static PerLanguageOption2`1<BackgroundAnalysisScope> BackgroundAnalysisScopeOption;
    public static Option2`1<Nullable`1<BackgroundAnalysisScope>> SolutionBackgroundAnalysisScopeOption;
    public static PerLanguageOption2`1<CompilerDiagnosticsScope> CompilerDiagnosticsScopeOption;
    public static PerLanguageOption2`1<bool> RemoveDocumentDiagnosticsOnDocumentClose;
    public static Option2`1<Nullable`1<bool>> EnableDiagnosticsInSourceGeneratedFiles;
    public static Option2`1<bool> EnableDiagnosticsInSourceGeneratedFilesFeatureFlag;
    public static bool LowMemoryForcedMinimalBackgroundAnalysis;
    private static SolutionCrawlerOptionsStorage();
    [ExtensionAttribute]
public static BackgroundAnalysisScope GetBackgroundAnalysisScope(IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static CompilerDiagnosticsScope GetBackgroundCompilerAnalysisScope(IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static bool IsFullSolutionAnalysisEnabled(DiagnosticAnalyzer analyzer, IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static bool IsFullSolutionAnalysisEnabled(IGlobalOptionService globalOptions, string language);
    [ExtensionAttribute]
public static bool IsFullSolutionAnalysisEnabled(IGlobalOptionService globalOptions, string language, Boolean& compilerFullSolutionAnalysisEnabled, Boolean& analyzersFullSolutionAnalysisEnabled);
    [ExtensionAttribute]
public static bool IsAnalysisDisabled(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.Structure.BlockStructureOptionsStorage : object {
    public static PerLanguageOption2`1<bool> ShowBlockStructureGuidesForCommentsAndPreprocessorRegions;
    public static PerLanguageOption2`1<bool> ShowBlockStructureGuidesForDeclarationLevelConstructs;
    public static PerLanguageOption2`1<bool> ShowBlockStructureGuidesForCodeLevelConstructs;
    public static PerLanguageOption2`1<bool> ShowOutliningForCommentsAndPreprocessorRegions;
    public static PerLanguageOption2`1<bool> ShowOutliningForDeclarationLevelConstructs;
    public static PerLanguageOption2`1<bool> ShowOutliningForCodeLevelConstructs;
    public static PerLanguageOption2`1<bool> CollapseRegionsWhenFirstOpened;
    public static PerLanguageOption2`1<bool> CollapseImportsWhenFirstOpened;
    public static PerLanguageOption2`1<bool> CollapseSourceLinkEmbeddedDecompiledFilesWhenFirstOpened;
    public static PerLanguageOption2`1<bool> CollapseMetadataSignatureFilesWhenFirstOpened;
    public static PerLanguageOption2`1<bool> CollapseRegionsWhenCollapsingToDefinitions;
    public static PerLanguageOption2`1<bool> CollapseLocalFunctionsWhenCollapsingToDefinitions;
    public static PerLanguageOption2`1<int> MaximumBannerLength;
    private static BlockStructureOptionsStorage();
    [ExtensionAttribute]
public static BlockStructureOptions GetBlockStructureOptions(IGlobalOptionService globalOptions, Project project);
    [ExtensionAttribute]
public static BlockStructureOptions GetBlockStructureOptions(IGlobalOptionService globalOptions, string language, bool isMetadataAsSource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.SymbolSearch.SymbolSearchOptionsStorage : object {
    private static OptionGroup s_optionGroup;
    public static PerLanguageOption2`1<bool> SearchReferenceAssemblies;
    public static PerLanguageOption2`1<bool> SearchNuGetPackages;
    private static SymbolSearchOptionsStorage();
    [ExtensionAttribute]
internal static SymbolSearchOptions GetSymbolSearchOptions(IGlobalOptionService globalOptions, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.TaskList.TaskListOptionsStorage : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Option2`1<ImmutableArray`1<string>> Descriptors;
    public static Option2`1<bool> ComputeTaskListItemsForClosedFiles;
    private static TaskListOptionsStorage();
    [ExtensionAttribute]
public static TaskListOptions GetTaskListOptions(IGlobalOptionService globalOptions);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.UnifiedSuggestions.IUnifiedSuggestedAction {
    public Workspace Workspace { get; }
    public CodeAction OriginalCodeAction { get; }
    public CodeActionPriority CodeActionPriority { get; }
    public abstract virtual Workspace get_Workspace();
    public abstract virtual CodeAction get_OriginalCodeAction();
    public abstract virtual CodeActionPriority get_CodeActionPriority();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedCodeFixSuggestedAction : UnifiedSuggestedAction {
    [CompilerGeneratedAttribute]
private CodeFix <CodeFix>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Provider>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private UnifiedSuggestedActionSet <FixAllFlavors>k__BackingField;
    public CodeFix CodeFix { get; }
    public object Provider { get; }
    [NullableAttribute("2")]
public UnifiedSuggestedActionSet FixAllFlavors { get; }
    public UnifiedCodeFixSuggestedAction(Workspace workspace, CodeAction codeAction, CodeActionPriority codeActionPriority, CodeFix codeFix, object provider, UnifiedSuggestedActionSet fixAllFlavors);
    [CompilerGeneratedAttribute]
public sealed virtual CodeFix get_CodeFix();
    [CompilerGeneratedAttribute]
public object get_Provider();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public UnifiedSuggestedActionSet get_FixAllFlavors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedCodeRefactoringSuggestedAction : UnifiedSuggestedAction {
    [CompilerGeneratedAttribute]
private CodeRefactoringProvider <CodeRefactoringProvider>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private UnifiedSuggestedActionSet <FixAllFlavors>k__BackingField;
    public CodeRefactoringProvider CodeRefactoringProvider { get; }
    [NullableAttribute("2")]
public UnifiedSuggestedActionSet FixAllFlavors { get; }
    public UnifiedCodeRefactoringSuggestedAction(Workspace workspace, CodeAction codeAction, CodeActionPriority codeActionPriority, CodeRefactoringProvider codeRefactoringProvider, UnifiedSuggestedActionSet fixAllFlavors);
    [CompilerGeneratedAttribute]
public sealed virtual CodeRefactoringProvider get_CodeRefactoringProvider();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public UnifiedSuggestedActionSet get_FixAllFlavors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedFixAllCodeFixSuggestedAction : UnifiedSuggestedAction {
    [CompilerGeneratedAttribute]
private Diagnostic <Diagnostic>k__BackingField;
    [CompilerGeneratedAttribute]
private IFixAllState <FixAllState>k__BackingField;
    public Diagnostic Diagnostic { get; }
    public IFixAllState FixAllState { get; }
    public UnifiedFixAllCodeFixSuggestedAction(Workspace workspace, CodeAction codeAction, CodeActionPriority codeActionPriority, IFixAllState fixAllState, Diagnostic diagnostic);
    [CompilerGeneratedAttribute]
public sealed virtual Diagnostic get_Diagnostic();
    [CompilerGeneratedAttribute]
public sealed virtual IFixAllState get_FixAllState();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedFixAllCodeRefactoringSuggestedAction : UnifiedSuggestedAction {
    [CompilerGeneratedAttribute]
private IFixAllState <FixAllState>k__BackingField;
    public IFixAllState FixAllState { get; }
    public UnifiedFixAllCodeRefactoringSuggestedAction(Workspace workspace, CodeAction codeAction, CodeActionPriority codeActionPriority, IFixAllState fixAllState);
    [CompilerGeneratedAttribute]
public sealed virtual IFixAllState get_FixAllState();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedPredefinedSuggestedActionCategoryNames : object {
    public static string Any;
    public static string CodeFix;
    public static string ErrorFix;
    public static string StyleFix;
    public static string Refactoring;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedAction : object {
    [CompilerGeneratedAttribute]
private Workspace <Workspace>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeAction <OriginalCodeAction>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeActionPriority <CodeActionPriority>k__BackingField;
    public Workspace Workspace { get; }
    public CodeAction OriginalCodeAction { get; }
    public CodeActionPriority CodeActionPriority { get; }
    public UnifiedSuggestedAction(Workspace workspace, CodeAction codeAction, CodeActionPriority codeActionPriority);
    [CompilerGeneratedAttribute]
public sealed virtual Workspace get_Workspace();
    [CompilerGeneratedAttribute]
public sealed virtual CodeAction get_OriginalCodeAction();
    [CompilerGeneratedAttribute]
public sealed virtual CodeActionPriority get_CodeActionPriority();
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.ICodeFixSuggestedAction {
    public CodeFix CodeFix { get; }
    public abstract virtual CodeFix get_CodeFix();
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.ICodeRefactoringSuggestedAction {
    public CodeRefactoringProvider CodeRefactoringProvider { get; }
    public abstract virtual CodeRefactoringProvider get_CodeRefactoringProvider();
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.IFixAllCodeFixSuggestedAction {
    public Diagnostic Diagnostic { get; }
    public CodeAction OriginalCodeAction { get; }
    public IFixAllState FixAllState { get; }
    public abstract virtual Diagnostic get_Diagnostic();
    public abstract virtual CodeAction get_OriginalCodeAction();
    public abstract virtual IFixAllState get_FixAllState();
}
[NullableContextAttribute("1")]
internal interface Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.IFixAllCodeRefactoringSuggestedAction {
    public CodeAction OriginalCodeAction { get; }
    public IFixAllState FixAllState { get; }
    public abstract virtual CodeAction get_OriginalCodeAction();
    public abstract virtual IFixAllState get_FixAllState();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Solution <OriginalSolution>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CategoryName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<IUnifiedSuggestedAction> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeActionPriority <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TextSpan> <ApplicableToSpan>k__BackingField;
    [NullableAttribute("1")]
public Solution OriginalSolution { get; }
    public string CategoryName { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<IUnifiedSuggestedAction> Actions { get; }
    public object Title { get; }
    public CodeActionPriority Priority { get; }
    public Nullable`1<TextSpan> ApplicableToSpan { get; }
    public UnifiedSuggestedActionSet(Solution originalSolution, string categoryName, ImmutableArray`1<IUnifiedSuggestedAction> actions, object title, CodeActionPriority priority, Nullable`1<TextSpan> applicableToSpan);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Solution get_OriginalSolution();
    [CompilerGeneratedAttribute]
public string get_CategoryName();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<IUnifiedSuggestedAction> get_Actions();
    [CompilerGeneratedAttribute]
public object get_Title();
    [CompilerGeneratedAttribute]
public CodeActionPriority get_Priority();
    [CompilerGeneratedAttribute]
public Nullable`1<TextSpan> get_ApplicableToSpan();
}
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSetComparer : object {
    private Nullable`1<TextSpan> _targetSpan;
    public UnifiedSuggestedActionSetComparer(Nullable`1<TextSpan> targetSpan);
    private static int Distance(Nullable`1<TextSpan> maybeA, Nullable`1<TextSpan> maybeB);
    public sealed virtual int Compare(UnifiedSuggestedActionSet x, UnifiedSuggestedActionSet y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource : object {
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<GetFilterAndOrderCodeFixesAsync>d__0")]
public static ValueTask`1<ImmutableArray`1<UnifiedSuggestedActionSet>> GetFilterAndOrderCodeFixesAsync(Workspace workspace, ICodeFixService codeFixService, TextDocument document, TextSpan selection, ICodeActionRequestPriorityProvider priorityProvider, CodeActionOptionsProvider fallbackOptions, Func`2<string, IDisposable> addOperationScope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<OrganizeFixesAsync>d__1")]
private static Task`1<ImmutableArray`1<UnifiedSuggestedActionSet>> OrganizeFixesAsync(Workspace workspace, Solution originalSolution, SourceText text, ImmutableArray`1<CodeFixCollection> fixCollections, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<GroupFixesAsync>d__2")]
private static Task GroupFixesAsync(Workspace workspace, Solution originalSolution, ImmutableArray`1<CodeFixCollection> fixCollections, IDictionary`2<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>, IList`1<IUnifiedSuggestedAction>> map, ArrayBuilder`1<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>> order, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<ProcessFixCollectionAsync>d__3")]
private static Task ProcessFixCollectionAsync(Workspace workspace, Solution originalSolution, IDictionary`2<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>, IList`1<IUnifiedSuggestedAction>> map, ArrayBuilder`1<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>> order, CodeFixCollection fixCollection, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<AddCodeActionsAsync>d__4")]
private static Task AddCodeActionsAsync(Workspace workspace, Solution originalSolution, IDictionary`2<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>, IList`1<IUnifiedSuggestedAction>> map, ArrayBuilder`1<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>> order, CodeFixCollection fixCollection, Func`2<CodeAction, Task`1<UnifiedSuggestedActionSet>> getFixAllSuggestedActionSetAsync, ImmutableArray`1<CodeFix> codeFixes);
    private static void AddFix(CodeFix fix, IUnifiedSuggestedAction suggestedAction, IDictionary`2<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>, IList`1<IUnifiedSuggestedAction>> map, ArrayBuilder`1<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>> order);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<GetUnifiedFixAllSuggestedActionSetAsync>d__6")]
private static Task`1<UnifiedSuggestedActionSet> GetUnifiedFixAllSuggestedActionSetAsync(CodeAction action, int actionCount, IFixAllState fixAllState, ImmutableArray`1<FixAllScope> supportedScopes, Diagnostic firstDiagnostic, Workspace workspace, Solution originalSolution, CancellationToken cancellationToken);
    private static ImmutableArray`1<UnifiedSuggestedActionSet> PrioritizeFixGroups(Solution originalSolution, SourceText text, ImmutableDictionary`2<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>, IList`1<IUnifiedSuggestedAction>> map, ImmutableArray`1<Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>>> order, Workspace workspace);
    private static void AddUnifiedSuggestedActionsSet(Solution originalSolution, SourceText text, ImmutableArray`1<IUnifiedSuggestedAction> actions, Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>> groupKey, ArrayBuilder`1<UnifiedSuggestedActionSet> sets);
    private static string GetFixCategory(DiagnosticSeverity severity);
    private static bool IsTopLevelSuppressionAction(CodeAction action);
    private static bool IsBulkConfigurationAction(CodeAction action);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<GetFilterAndOrderCodeRefactoringsAsync>d__12")]
public static Task`1<ImmutableArray`1<UnifiedSuggestedActionSet>> GetFilterAndOrderCodeRefactoringsAsync(Workspace workspace, ICodeRefactoringService codeRefactoringService, TextDocument document, TextSpan selection, Nullable`1<CodeActionRequestPriority> priority, CodeActionOptionsProvider options, Func`2<string, IDisposable> addOperationScope, bool filterOutsideSelection, CancellationToken cancellationToken);
    private static ImmutableArray`1<CodeRefactoring> FilterOnAnyThread(ImmutableArray`1<CodeRefactoring> refactorings, TextSpan selection, bool filterOutsideSelection);
    private static CodeRefactoring FilterOnAnyThread(CodeRefactoring refactoring, TextSpan selection, bool filterOutsideSelection);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<OrganizeRefactoringsAsync>d__15")]
private static Task`1<UnifiedSuggestedActionSet> OrganizeRefactoringsAsync(Workspace workspace, TextDocument document, TextSpan selection, CodeRefactoring refactoring, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource/<GetUnifiedFixAllSuggestedActionSetAsync>d__16")]
private static Task`1<UnifiedSuggestedActionSet> GetUnifiedFixAllSuggestedActionSetAsync(CodeAction action, int actionCount, Document document, TextSpan selection, CodeRefactoringProvider provider, FixAllProviderInfo fixAllProviderInfo, CodeActionOptionsProvider optionsProvider, Workspace workspace, CancellationToken cancellationToken);
    public static ImmutableArray`1<UnifiedSuggestedActionSet> FilterAndOrderActionSets(ImmutableArray`1<UnifiedSuggestedActionSet> fixes, ImmutableArray`1<UnifiedSuggestedActionSet> refactorings, Nullable`1<TextSpan> selectionOpt, int currentActionCount);
    private static ImmutableArray`1<UnifiedSuggestedActionSet> GetInitiallyOrderedActionSets(Nullable`1<TextSpan> selectionOpt, ImmutableArray`1<UnifiedSuggestedActionSet> fixes, ImmutableArray`1<UnifiedSuggestedActionSet> refactorings);
    private static ImmutableArray`1<UnifiedSuggestedActionSet> OrderActionSets(ImmutableArray`1<UnifiedSuggestedActionSet> actionSets, Nullable`1<TextSpan> selectionOpt);
    private static UnifiedSuggestedActionSet WithPriority(UnifiedSuggestedActionSet set, CodeActionPriority priority);
    private static ImmutableArray`1<UnifiedSuggestedActionSet> InlineActionSetsIfDesirable(ImmutableArray`1<UnifiedSuggestedActionSet> actionSets, int currentActionCount);
    private static UnifiedSuggestedActionSet InlineActions(UnifiedSuggestedActionSet actionSet);
    private static ImmutableArray`1<UnifiedSuggestedActionSet> FilterActionSetsByTitle(ImmutableArray`1<UnifiedSuggestedActionSet> allActionSets);
    private static UnifiedSuggestedActionSet FilterActionSetByTitle(UnifiedSuggestedActionSet set, HashSet`1<string> seenTitles);
    [CompilerGeneratedAttribute]
internal static Tuple`3<DiagnosticData, CodeActionPriority, Nullable`1<CodeActionPriority>> <AddFix>g__GetGroupKey|5_0(CodeFix fix);
    [CompilerGeneratedAttribute]
internal static ValueTuple`2<Nullable`1<TextSpan>, string> <PrioritizeFixGroups>g__CombineSpansAndCategory|7_0(ArrayBuilder`1<UnifiedSuggestedActionSet> sets);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionWithNestedActions : UnifiedSuggestedAction {
    [CompilerGeneratedAttribute]
private object <Provider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<UnifiedSuggestedActionSet> <NestedActionSets>k__BackingField;
    public object Provider { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<UnifiedSuggestedActionSet> NestedActionSets { get; }
    [NullableContextAttribute("1")]
public UnifiedSuggestedActionWithNestedActions(Workspace workspace, CodeAction codeAction, CodeActionPriority codeActionPriority, object provider, ImmutableArray`1<UnifiedSuggestedActionSet> nestedActionSets);
    [CompilerGeneratedAttribute]
public object get_Provider();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<UnifiedSuggestedActionSet> get_NestedActionSets();
}
internal abstract class Microsoft.CommonLanguageServerProtocol.Framework.AbstractHandlerProvider : object {
    public abstract virtual ImmutableArray`1<RequestHandlerMetadata> GetRegisteredMethods();
    [NullableContextAttribute("1")]
public abstract virtual IMethodHandler GetMethodHandler(string method, Type requestType, Type responseType, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CommonLanguageServerProtocol.Framework.AbstractLanguageServer`1 : object {
    private JsonRpc _jsonRpc;
    protected ILspLogger _logger;
    private Lazy`1<IRequestExecutionQueue`1<TRequestContext>> _queue;
    private Lazy`1<ILspServices> _lspServices;
    [CompilerGeneratedAttribute]
private bool <IsInitialized>k__BackingField;
    private object _lifeCycleLock;
    [NullableAttribute("2")]
private Task _shutdownRequestTask;
    [NullableAttribute("2")]
private Task _exitNotificationTask;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private TaskCompletionSource`1<object> _serverExitedSource;
    public bool IsInitialized { get; private set; }
    protected AbstractHandlerProvider HandlerProvider { get; }
    protected AbstractLanguageServer`1(JsonRpc jsonRpc, ILspLogger logger);
    [CompilerGeneratedAttribute]
public bool get_IsInitialized();
    [CompilerGeneratedAttribute]
private void set_IsInitialized(bool value);
    public void Initialize();
    protected abstract virtual ILspServices ConstructLspServices();
    [ObsoleteAttribute("Use HandlerProvider property instead.", "False")]
protected virtual IHandlerProvider GetHandlerProvider();
    protected virtual AbstractHandlerProvider get_HandlerProvider();
    public ILspServices GetLspServices();
    protected virtual void SetupRequestDispatcher(IHandlerProvider handlerProvider);
    [JsonRpcMethodAttribute("shutdown")]
public Task HandleShutdownRequestAsync(CancellationToken _);
    [JsonRpcMethodAttribute("exit")]
public Task HandleExitNotificationAsync(CancellationToken _);
    public virtual void OnInitialized();
    protected virtual IRequestExecutionQueue`1<TRequestContext> ConstructRequestExecutionQueue();
    protected IRequestExecutionQueue`1<TRequestContext> GetRequestExecutionQueue();
    public Task WaitForExitAsync();
    public Task ShutdownAsync(string message);
    public Task ExitAsync();
    private ValueTask ShutdownRequestExecutionQueueAsync();
    [AsyncStateMachineAttribute("Microsoft.CommonLanguageServerProtocol.Framework.AbstractLanguageServer`1/<JsonRpc_Disconnected>d__30")]
private void JsonRpc_Disconnected(object sender, JsonRpcDisconnectedEventArgs e);
    [NullableContextAttribute("0")]
internal TestAccessor<TRequestContext> GetTestAccessor();
    [CompilerGeneratedAttribute]
private ILspServices <.ctor>b__12_0();
    [CompilerGeneratedAttribute]
private IRequestExecutionQueue`1<TRequestContext> <.ctor>b__12_1();
    [AsyncStateMachineAttribute("Microsoft.CommonLanguageServerProtocol.Framework.AbstractLanguageServer`1/<<ShutdownAsync>g__Shutdown_NoLockAsync|27_0>d")]
[CompilerGeneratedAttribute]
private Task <ShutdownAsync>g__Shutdown_NoLockAsync|27_0(string message);
    [AsyncStateMachineAttribute("Microsoft.CommonLanguageServerProtocol.Framework.AbstractLanguageServer`1/<<ExitAsync>g__Exit_NoLockAsync|28_0>d")]
[CompilerGeneratedAttribute]
private Task <ExitAsync>g__Exit_NoLockAsync|28_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CommonLanguageServerProtocol.Framework.AbstractLspLogger : object {
    public abstract virtual void LogDebug(string message, Object[] params);
    public abstract virtual void LogStartContext(string message, Object[] params);
    public abstract virtual void LogEndContext(string message, Object[] params);
    public abstract virtual void LogInformation(string message, Object[] params);
    public abstract virtual void LogWarning(string message, Object[] params);
    public abstract virtual void LogError(string message, Object[] params);
    public abstract virtual void LogException(Exception exception, string message, Object[] params);
}
internal abstract class Microsoft.CommonLanguageServerProtocol.Framework.AbstractRequestContextFactory`1 : object {
    [NullableContextAttribute("1")]
public abstract virtual Task`1<TRequestContext> CreateRequestContextAsync(IQueueItem`1<TRequestContext> queueItem, IMethodHandler methodHandler, TRequestParam requestParam, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.CommonLanguageServerProtocol.Framework.AbstractRequestScope : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    protected AbstractRequestScope(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    public abstract virtual void RecordCancellation();
    public abstract virtual void RecordException(Exception exception);
    public abstract virtual void RecordWarning(string message);
    public abstract virtual void RecordExecutionStart();
    public abstract virtual void Dispose();
}
internal abstract class Microsoft.CommonLanguageServerProtocol.Framework.AbstractTelemetryService : object {
    [NullableContextAttribute("1")]
public abstract virtual AbstractRequestScope CreateRequestScope(string lspMethodName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.HandlerProvider : AbstractHandlerProvider {
    private ILspServices _lspServices;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<RequestHandlerMetadata, Lazy`1<IMethodHandler>> _requestHandlers;
    private static IReadOnlyList`1<string> RequiredMethods;
    public HandlerProvider(ILspServices lspServices);
    private static HandlerProvider();
    public sealed virtual IMethodHandler GetMethodHandler(string method, Type requestType, Type responseType);
    public virtual IMethodHandler GetMethodHandler(string method, Type requestType, Type responseType, string language);
    public virtual ImmutableArray`1<RequestHandlerMetadata> GetRegisteredMethods();
    private ImmutableDictionary`2<RequestHandlerMetadata, Lazy`1<IMethodHandler>> GetRequestHandlers();
    private static ImmutableDictionary`2<RequestHandlerMetadata, Lazy`1<IMethodHandler>> CreateMethodToHandlerMap(ILspServices lspServices);
    private static List`1<HandlerTypes> ConvertHandlerTypeToRequestResponseTypes(Type handlerType);
    [CompilerGeneratedAttribute]
internal static void <CreateMethodToHandlerMap>g__CheckForDuplicates|7_0(string methodName, string language, HashSet`1<ValueTuple`2<string, string>> existingMethods);
    [CompilerGeneratedAttribute]
internal static ValueTuple`2<string, IEnumerable`1<string>> <CreateMethodToHandlerMap>g__GetRequestHandlerMethod|7_1(Type handlerType, Type requestType, Type contextType, Type responseType);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static LanguageServerEndpointAttribute <CreateMethodToHandlerMap>g__GetMethodAttributeFromHandlerMethod|7_6(Type handlerType, Type requestType, Type contextType, Type responseType);
    [CompilerGeneratedAttribute]
internal static bool <CreateMethodToHandlerMap>g__MethodInfoMatches|7_8(MethodInfo methodInfo, <>c__DisplayClass7_3& );
    [CompilerGeneratedAttribute]
internal static bool <CreateMethodToHandlerMap>g__TypesMatch|7_9(MethodInfo methodInfo, Type[] types);
    [CompilerGeneratedAttribute]
internal static LanguageServerEndpointAttribute <CreateMethodToHandlerMap>g__GetMethodAttributeFromClassOrInterface|7_7(Type type);
    [CompilerGeneratedAttribute]
internal static void <CreateMethodToHandlerMap>g__VerifyHandlers|7_2(IEnumerable`1<RequestHandlerMetadata> requestHandlerKeys);
}
[LanguageServerEndpointAttribute("initialized", "default", "Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.Handlers.InitializedHandler`2 : object {
    private bool HasBeenInitialized;
    public bool MutatesSolutionState { get; }
    public sealed virtual bool get_MutatesSolutionState();
    [NullableContextAttribute("1")]
public sealed virtual Task HandleNotificationAsync(TRequest request, TRequestContext requestContext, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[LanguageServerEndpointAttribute("initialize", "default", "Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.Handlers.InitializeHandler`3 : object {
    private IInitializeManager`2<TRequest, TResponse> _capabilitiesManager;
    public bool MutatesSolutionState { get; }
    public InitializeHandler`3(IInitializeManager`2<TRequest, TResponse> capabilitiesManager);
    public sealed virtual bool get_MutatesSolutionState();
    public sealed virtual Task`1<TResponse> HandleRequestAsync(TRequest request, TRequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IHandlerProvider {
    public abstract virtual ImmutableArray`1<RequestHandlerMetadata> GetRegisteredMethods();
    public abstract virtual IMethodHandler GetMethodHandler(string method, Type requestType, Type responseType);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IInitializeManager`2 {
    public abstract virtual TResponse GetInitializeResult();
    public abstract virtual void SetInitializeParams(TRequest request);
    public abstract virtual TRequest GetInitializeParams();
}
[NullableContextAttribute("1")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.ILifeCycleManager {
    public abstract virtual Task ExitAsync();
    public abstract virtual Task ShutdownAsync(string message);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.ILspLogger {
    public abstract virtual void LogStartContext(string message, Object[] params);
    public abstract virtual void LogEndContext(string message, Object[] params);
    public abstract virtual void LogInformation(string message, Object[] params);
    public abstract virtual void LogWarning(string message, Object[] params);
    public abstract virtual void LogError(string message, Object[] params);
    public abstract virtual void LogException(Exception exception, string message, Object[] params);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.ILspServices {
    public abstract virtual T GetRequiredService();
    public abstract virtual object TryGetService(Type type);
    public abstract virtual IEnumerable`1<T> GetRequiredServices();
    public abstract virtual ImmutableArray`1<Type> GetRegisteredServices();
    public abstract virtual bool SupportsGetRegisteredServices();
}
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IMethodHandler {
    public bool MutatesSolutionState { get; }
    public abstract virtual bool get_MutatesSolutionState();
}
internal interface Microsoft.CommonLanguageServerProtocol.Framework.INotificationHandler`1 {
    [NullableContextAttribute("1")]
public abstract virtual Task HandleNotificationAsync(TRequestContext requestContext, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.INotificationHandler`2 {
    [NullableContextAttribute("1")]
public abstract virtual Task HandleNotificationAsync(TRequest request, TRequestContext requestContext, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IQueueItem`1 {
    public ILspServices LspServices { get; }
    public string MethodName { get; }
    public string Language { get; }
    [NullableAttribute("2")]
public Type RequestType { get; }
    [NullableAttribute("2")]
public Type ResponseType { get; }
    public abstract virtual Task StartRequestAsync(TRequestContext requestContext, IMethodHandler handler, CancellationToken cancellationToken);
    public abstract virtual Task`1<TRequestContext> CreateRequestContextAsync(IMethodHandler handler, CancellationToken cancellationToken);
    public abstract virtual ILspServices get_LspServices();
    public abstract virtual string get_MethodName();
    public abstract virtual string get_Language();
    [NullableContextAttribute("2")]
public abstract virtual Type get_RequestType();
    [NullableContextAttribute("2")]
public abstract virtual Type get_ResponseType();
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("Use AbstractRequestContextFactory instead.", "False")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IRequestContextFactory`1 {
    public abstract virtual Task`1<TRequestContext> CreateRequestContextAsync(IQueueItem`1<TRequestContext> queueItem, TRequestParam requestParam, CancellationToken cancellationToken);
}
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IRequestExecutionQueue`1 {
    [NullableContextAttribute("1")]
public abstract virtual Task`1<TResponse> ExecuteAsync(TRequest request, string methodName, ILspServices lspServices, CancellationToken cancellationToken);
    public abstract virtual void Start();
}
[NullableContextAttribute("2")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IRequestHandler`2 {
    [NullableContextAttribute("1")]
public abstract virtual Task`1<TResponse> HandleRequestAsync(TRequestContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.IRequestHandler`3 {
    [NullableContextAttribute("1")]
public abstract virtual Task`1<TResponse> HandleRequestAsync(TRequest request, TRequestContext context, CancellationToken cancellationToken);
}
internal interface Microsoft.CommonLanguageServerProtocol.Framework.ITextDocumentIdentifierHandler {
}
[NullableContextAttribute("2")]
internal interface Microsoft.CommonLanguageServerProtocol.Framework.ITextDocumentIdentifierHandler`2 {
    [NullableContextAttribute("1")]
public abstract virtual TTextDocumentIdentifier GetTextDocumentIdentifier(TRequest request);
}
internal class Microsoft.CommonLanguageServerProtocol.Framework.LanguageServerConstants : object {
    [NullableAttribute("1")]
public static string DefaultLanguageName;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1092")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.LanguageServerEndpointAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Languages>k__BackingField;
    public string Method { get; }
    public String[] Languages { get; }
    [ObsoleteAttribute("Use the constructor that takes a language instead.", "False")]
public LanguageServerEndpointAttribute(string method);
    public LanguageServerEndpointAttribute(string method, string language, String[] additionalLanguages);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public String[] get_Languages();
}
internal class Microsoft.CommonLanguageServerProtocol.Framework.NoValue : object {
    [NullableAttribute("1")]
public static NoValue Instance;
    private static NoValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.QueueItem`3 : object {
    private TRequest _request;
    private ILspLogger _logger;
    [NullableAttribute("2")]
private AbstractRequestScope _requestTelemetryScope;
    private TaskCompletionSource`1<TResponse> _completionSource;
    [CompilerGeneratedAttribute]
private ILspServices <LspServices>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    public ILspServices LspServices { get; }
    public string MethodName { get; }
    public string Language { get; }
    [NullableAttribute("2")]
public Type RequestType { get; }
    [NullableAttribute("2")]
public Type ResponseType { get; }
    private QueueItem`3(string methodName, string language, TRequest request, ILspServices lspServices, ILspLogger logger, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public sealed virtual ILspServices get_LspServices();
    [CompilerGeneratedAttribute]
public sealed virtual string get_MethodName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Language();
    [NullableContextAttribute("2")]
public sealed virtual Type get_RequestType();
    [NullableContextAttribute("2")]
public sealed virtual Type get_ResponseType();
    public static ValueTuple`2<IQueueItem`1<TRequestContext>, Task`1<TResponse>> Create(string methodName, string language, TRequest request, ILspServices lspServices, ILspLogger logger, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CommonLanguageServerProtocol.Framework.QueueItem`3/<CreateRequestContextAsync>d__19")]
public sealed virtual Task`1<TRequestContext> CreateRequestContextAsync(IMethodHandler handler, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.CommonLanguageServerProtocol.Framework.QueueItem`3/<StartRequestAsync>d__20")]
public sealed virtual Task StartRequestAsync(TRequestContext context, IMethodHandler handler, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1 : object {
    protected ILspLogger _logger;
    protected AbstractHandlerProvider _handlerProvider;
    private AbstractLanguageServer`1<TRequestContext> _languageServer;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected AsyncQueue`1<ValueTuple`3<IQueueItem`1<TRequestContext>, Guid, CancellationToken>> _queue;
    private CancellationTokenSource _cancelSource;
    [NullableAttribute("2")]
protected Task _queueProcessingTask;
    public CancellationToken CancellationToken { get; }
    protected bool CancelInProgressWorkUponMutatingRequest { get; }
    [ObsoleteAttribute("Use constructor with AbstractHandlerProvider instead.", "False")]
public RequestExecutionQueue`1(AbstractLanguageServer`1<TRequestContext> languageServer, ILspLogger logger, IHandlerProvider handlerProvider);
    public RequestExecutionQueue`1(AbstractLanguageServer`1<TRequestContext> languageServer, ILspLogger logger, AbstractHandlerProvider handlerProvider);
    public CancellationToken get_CancellationToken();
    public sealed virtual void Start();
    protected virtual bool get_CancelInProgressWorkUponMutatingRequest();
    public virtual Task`1<TResponse> ExecuteAsync(TRequest request, string methodName, ILspServices lspServices, CancellationToken requestCancellationToken);
    internal ValueTuple`2<IQueueItem`1<TRequestContext>, Task`1<TResponse>> CreateQueueItem(string methodName, TRequest request, ILspServices lspServices, CancellationToken cancellationToken);
    protected virtual string GetLanguageForRequest(string methodName, TRequest request);
    [AsyncStateMachineAttribute("Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1/<ProcessQueueAsync>d__16")]
private Task ProcessQueueAsync();
    protected virtual IMethodHandler GetHandlerForRequest(IQueueItem`1<TRequestContext> work);
    public virtual Task WrapStartRequestTaskAsync(Task nonMutatingRequestTask, bool rethrowExceptions);
    public sealed virtual ValueTask DisposeAsync();
    [NullableContextAttribute("0")]
internal TestAccessor<TRequestContext> GetTestAccessor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.RequestHandlerMetadata : object {
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <RequestType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <ResponseType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string MethodName { get; public set; }
    [NullableAttribute("2")]
public Type RequestType { get; public set; }
    [NullableAttribute("2")]
public Type ResponseType { get; public set; }
    public string Language { get; public set; }
    public RequestHandlerMetadata(string MethodName, Type RequestType, Type ResponseType, string Language);
    [CompilerGeneratedAttribute]
protected RequestHandlerMetadata(RequestHandlerMetadata original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MethodName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_RequestType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RequestType(Type value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_ResponseType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResponseType(Type value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Language(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RequestHandlerMetadata left, RequestHandlerMetadata right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RequestHandlerMetadata left, RequestHandlerMetadata right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(RequestHandlerMetadata other);
    [CompilerGeneratedAttribute]
public virtual RequestHandlerMetadata <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& MethodName, Type& RequestType, Type& ResponseType, String& Language);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.RequestShutdownEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; }
    public RequestShutdownEventArgs(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.CommonLanguageServerProtocol.Framework.WrappedHandlerProvider : AbstractHandlerProvider {
    private IHandlerProvider _handlerProvider;
    public WrappedHandlerProvider(IHandlerProvider handlerProvider);
    public virtual IMethodHandler GetMethodHandler(string method, Type requestType, Type responseType, string language);
    public virtual ImmutableArray`1<RequestHandlerMetadata> GetRegisteredMethods();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.Core.Imaging.ImageId : ValueType {
    public Guid Guid;
    public int Id;
    public ImageId(Guid guid, int id);
    public virtual string ToString();
    public string ToString(IFormatProvider provider);
    private sealed virtual override bool System.IEquatable<Roslyn.Core.Imaging.ImageId>.Equals(ImageId other);
    public virtual bool Equals(object other);
    public static bool op_Equality(ImageId left, ImageId right);
    public static bool op_Inequality(ImageId left, ImageId right);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditParams : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkspaceEdit <Edit>k__BackingField;
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string Label { get; public set; }
    [DataMemberAttribute]
public WorkspaceEdit Edit { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Label();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public WorkspaceEdit get_Edit();
    [CompilerGeneratedAttribute]
public void set_Edit(WorkspaceEdit value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditResponse : object {
    [CompilerGeneratedAttribute]
private bool <Applied>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureReason>k__BackingField;
    [DataMemberAttribute]
public bool Applied { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string FailureReason { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Applied();
    [CompilerGeneratedAttribute]
public void set_Applied(bool value);
    [CompilerGeneratedAttribute]
public string get_FailureReason();
    [CompilerGeneratedAttribute]
public void set_FailureReason(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter : JsonConverter {
    public static ClassifiedTextElementConverter Instance;
    private static ClassifiedTextElementConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.ClassifiedTextRunConverter : JsonConverter {
    public static ClassifiedTextRunConverter Instance;
    private static ClassifiedTextRunConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ClientCapabilities : object {
    [CompilerGeneratedAttribute]
private WorkspaceClientCapabilities <Workspace>k__BackingField;
    [CompilerGeneratedAttribute]
private TextDocumentClientCapabilities <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Experimental>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public WorkspaceClientCapabilities Workspace { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public TextDocumentClientCapabilities TextDocument { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public object Experimental { get; public set; }
    [CompilerGeneratedAttribute]
public WorkspaceClientCapabilities get_Workspace();
    [CompilerGeneratedAttribute]
public void set_Workspace(WorkspaceClientCapabilities value);
    [CompilerGeneratedAttribute]
public TextDocumentClientCapabilities get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentClientCapabilities value);
    [CompilerGeneratedAttribute]
public object get_Experimental();
    [CompilerGeneratedAttribute]
public void set_Experimental(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeAction : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CodeActionKind> <Kind>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Diagnostic[] <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkspaceEdit <Edit>k__BackingField;
    [CompilerGeneratedAttribute]
private Command <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [NullableAttribute("1")]
[DataMemberAttribute]
public string Title { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<CodeActionKind> Kind { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Diagnostic[] Diagnostics { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public WorkspaceEdit Edit { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Command Command { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public object Data { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Title();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<CodeActionKind> get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(Nullable`1<CodeActionKind> value);
    [CompilerGeneratedAttribute]
public Diagnostic[] get_Diagnostics();
    [CompilerGeneratedAttribute]
public void set_Diagnostics(Diagnostic[] value);
    [CompilerGeneratedAttribute]
public WorkspaceEdit get_Edit();
    [CompilerGeneratedAttribute]
public void set_Edit(WorkspaceEdit value);
    [CompilerGeneratedAttribute]
public Command get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(Command value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeActionContext : object {
    [CompilerGeneratedAttribute]
private Diagnostic[] <Diagnostics>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CodeActionKind[] <Only>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CodeActionTriggerKind> <TriggerKind>k__BackingField;
    [DataMemberAttribute]
public Diagnostic[] Diagnostics { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public CodeActionKind[] Only { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<CodeActionTriggerKind> TriggerKind { get; public set; }
    [CompilerGeneratedAttribute]
public Diagnostic[] get_Diagnostics();
    [CompilerGeneratedAttribute]
public void set_Diagnostics(Diagnostic[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CodeActionKind[] get_Only();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Only(CodeActionKind[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<CodeActionTriggerKind> get_TriggerKind();
    [CompilerGeneratedAttribute]
public void set_TriggerKind(Nullable`1<CodeActionTriggerKind> value);
}
[IsReadOnlyAttribute]
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1<Roslyn.LanguageServer.Protocol.CodeActionKind>")]
[TypeConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1/TypeConverter<Roslyn.LanguageServer.Protocol.CodeActionKind>")]
internal class Roslyn.LanguageServer.Protocol.CodeActionKind : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static CodeActionKind Empty;
    public static CodeActionKind QuickFix;
    public static CodeActionKind Refactor;
    public static CodeActionKind RefactorExtract;
    public static CodeActionKind RefactorInline;
    public static CodeActionKind RefactorRewrite;
    public static CodeActionKind Source;
    public static CodeActionKind SourceOrganizeImports;
    public static CodeActionKind SourceFixAll;
    [NullableAttribute("1")]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public CodeActionKind(string Value);
    private static CodeActionKind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CodeActionKind left, CodeActionKind right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CodeActionKind left, CodeActionKind right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CodeActionKind other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeActionKindSetting : object {
    [CompilerGeneratedAttribute]
private CodeActionKind[] <ValueSet>k__BackingField;
    [DataMemberAttribute]
public CodeActionKind[] ValueSet { get; public set; }
    [CompilerGeneratedAttribute]
public CodeActionKind[] get_ValueSet();
    [CompilerGeneratedAttribute]
public void set_ValueSet(CodeActionKind[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeActionLiteralSetting : object {
    [CompilerGeneratedAttribute]
private CodeActionKindSetting <CodeActionKind>k__BackingField;
    [DataMemberAttribute]
public CodeActionKindSetting CodeActionKind { get; public set; }
    [CompilerGeneratedAttribute]
public CodeActionKindSetting get_CodeActionKind();
    [CompilerGeneratedAttribute]
public void set_CodeActionKind(CodeActionKindSetting value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeActionOptions : object {
    [CompilerGeneratedAttribute]
private CodeActionKind[] <CodeActionKinds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ResolveProvider>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CodeActionKind[] CodeActionKinds { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ResolveProvider { get; public set; }
    [CompilerGeneratedAttribute]
public CodeActionKind[] get_CodeActionKinds();
    [CompilerGeneratedAttribute]
public void set_CodeActionKinds(CodeActionKind[] value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
    [CompilerGeneratedAttribute]
public bool get_ResolveProvider();
    [CompilerGeneratedAttribute]
public void set_ResolveProvider(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeActionParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeActionContext <Context>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
public CodeActionContext Context { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public CodeActionContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(CodeActionContext value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeActionResolveSupportSetting : object {
    [CompilerGeneratedAttribute]
private String[] <Properties>k__BackingField;
    [DataMemberAttribute]
public String[] Properties { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(String[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeActionSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private CodeActionLiteralSetting <CodeActionLiteralSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeActionResolveSupportSetting <ResolveSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DataSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CodeActionLiteralSetting CodeActionLiteralSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CodeActionResolveSupportSetting ResolveSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DataSupport { get; public set; }
    [CompilerGeneratedAttribute]
public CodeActionLiteralSetting get_CodeActionLiteralSupport();
    [CompilerGeneratedAttribute]
public void set_CodeActionLiteralSupport(CodeActionLiteralSetting value);
    [CompilerGeneratedAttribute]
public CodeActionResolveSupportSetting get_ResolveSupport();
    [CompilerGeneratedAttribute]
public void set_ResolveSupport(CodeActionResolveSupportSetting value);
    [CompilerGeneratedAttribute]
public bool get_DataSupport();
    [CompilerGeneratedAttribute]
public void set_DataSupport(bool value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.CodeActionTriggerKind : Enum {
    public int value__;
    public static CodeActionTriggerKind Invoked;
    public static CodeActionTriggerKind Automatic;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeDescription : object {
    [CompilerGeneratedAttribute]
private Uri <Href>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Href { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Href();
    [CompilerGeneratedAttribute]
public void set_Href(Uri value);
    [NullableContextAttribute("2")]
public static bool op_Equality(CodeDescription value1, CodeDescription value2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(CodeDescription value1, CodeDescription value2);
    public sealed virtual bool Equals(CodeDescription other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeLens : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private Command <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [NullableAttribute("1")]
[DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Command Command { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public object Data { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Range get_Range();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public Command get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(Command value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeLensOptions : object {
    [CompilerGeneratedAttribute]
private bool <ResolveProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ResolveProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ResolveProvider();
    [CompilerGeneratedAttribute]
public void set_ResolveProvider(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeLensParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CodeLensWorkspaceSetting : object {
    [CompilerGeneratedAttribute]
private bool <RefreshSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool RefreshSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RefreshSupport();
    [CompilerGeneratedAttribute]
public void set_RefreshSupport(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Color : object {
    [CompilerGeneratedAttribute]
private decimal <Red>k__BackingField;
    [CompilerGeneratedAttribute]
private decimal <Green>k__BackingField;
    [CompilerGeneratedAttribute]
private decimal <Blue>k__BackingField;
    [CompilerGeneratedAttribute]
private decimal <Alpha>k__BackingField;
    [DataMemberAttribute]
public decimal Red { get; public set; }
    [DataMemberAttribute]
public decimal Green { get; public set; }
    [DataMemberAttribute]
public decimal Blue { get; public set; }
    [DataMemberAttribute]
public decimal Alpha { get; public set; }
    [CompilerGeneratedAttribute]
public decimal get_Red();
    [CompilerGeneratedAttribute]
public void set_Red(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Green();
    [CompilerGeneratedAttribute]
public void set_Green(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Blue();
    [CompilerGeneratedAttribute]
public void set_Blue(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Alpha();
    [CompilerGeneratedAttribute]
public void set_Alpha(decimal value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ColorInformation : object {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private Color <Color>k__BackingField;
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
public Color Color { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public Color get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(Color value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Command : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandIdentifier>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Title { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string CommandIdentifier { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Object[] Arguments { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_CommandIdentifier();
    [CompilerGeneratedAttribute]
public void set_CommandIdentifier(string value);
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Object[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionContext : object {
    [CompilerGeneratedAttribute]
private CompletionTriggerKind <TriggerKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TriggerCharacter>k__BackingField;
    [DataMemberAttribute]
public CompletionTriggerKind TriggerKind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string TriggerCharacter { get; public set; }
    [CompilerGeneratedAttribute]
public CompletionTriggerKind get_TriggerKind();
    [CompilerGeneratedAttribute]
public void set_TriggerKind(CompletionTriggerKind value);
    [CompilerGeneratedAttribute]
public string get_TriggerCharacter();
    [CompilerGeneratedAttribute]
public void set_TriggerCharacter(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionItem : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionItemLabelDetails <LabelDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionItemKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<string, MarkupContent>> <Documentation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Preselect>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SortText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilterText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InsertText>k__BackingField;
    [CompilerGeneratedAttribute]
private InsertTextFormat <InsertTextFormat>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<TextEdit, InsertReplaceEdit>> <TextEdit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TextEditText>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private TextEdit[] <AdditionalTextEdits>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <CommitCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private Command <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [NullableAttribute("1")]
[DataMemberAttribute]
public string Label { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionItemLabelDetails LabelDetails { get; public set; }
    [DataMemberAttribute]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[JsonPropertyAttribute]
public CompletionItemKind Kind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Detail { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> Documentation { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Preselect { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string SortText { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string FilterText { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string InsertText { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public InsertTextFormat InsertTextFormat { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<TextEdit, InsertReplaceEdit>> TextEdit { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string TextEditText { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public TextEdit[] AdditionalTextEdits { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] CommitCharacters { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Command Command { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public object Data { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Label();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public CompletionItemLabelDetails get_LabelDetails();
    [CompilerGeneratedAttribute]
public void set_LabelDetails(CompletionItemLabelDetails value);
    [CompilerGeneratedAttribute]
public CompletionItemKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(CompletionItemKind value);
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> get_Documentation();
    [CompilerGeneratedAttribute]
public void set_Documentation(Nullable`1<SumType`2<string, MarkupContent>> value);
    [CompilerGeneratedAttribute]
public bool get_Preselect();
    [CompilerGeneratedAttribute]
public void set_Preselect(bool value);
    [CompilerGeneratedAttribute]
public string get_SortText();
    [CompilerGeneratedAttribute]
public void set_SortText(string value);
    [CompilerGeneratedAttribute]
public string get_FilterText();
    [CompilerGeneratedAttribute]
public void set_FilterText(string value);
    [CompilerGeneratedAttribute]
public string get_InsertText();
    [CompilerGeneratedAttribute]
public void set_InsertText(string value);
    [CompilerGeneratedAttribute]
public InsertTextFormat get_InsertTextFormat();
    [CompilerGeneratedAttribute]
public void set_InsertTextFormat(InsertTextFormat value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<TextEdit, InsertReplaceEdit>> get_TextEdit();
    [CompilerGeneratedAttribute]
public void set_TextEdit(Nullable`1<SumType`2<TextEdit, InsertReplaceEdit>> value);
    [CompilerGeneratedAttribute]
public string get_TextEditText();
    [CompilerGeneratedAttribute]
public void set_TextEditText(string value);
    [CompilerGeneratedAttribute]
public TextEdit[] get_AdditionalTextEdits();
    [CompilerGeneratedAttribute]
public void set_AdditionalTextEdits(TextEdit[] value);
    [CompilerGeneratedAttribute]
public String[] get_CommitCharacters();
    [CompilerGeneratedAttribute]
public void set_CommitCharacters(String[] value);
    [CompilerGeneratedAttribute]
public Command get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(Command value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
}
internal enum Roslyn.LanguageServer.Protocol.CompletionItemKind : Enum {
    public int value__;
    public static CompletionItemKind None;
    public static CompletionItemKind Text;
    public static CompletionItemKind Method;
    public static CompletionItemKind Function;
    public static CompletionItemKind Constructor;
    public static CompletionItemKind Field;
    public static CompletionItemKind Variable;
    public static CompletionItemKind Class;
    public static CompletionItemKind Interface;
    public static CompletionItemKind Module;
    public static CompletionItemKind Property;
    public static CompletionItemKind Unit;
    public static CompletionItemKind Value;
    public static CompletionItemKind Enum;
    public static CompletionItemKind Keyword;
    public static CompletionItemKind Snippet;
    public static CompletionItemKind Color;
    public static CompletionItemKind File;
    public static CompletionItemKind Reference;
    public static CompletionItemKind Folder;
    public static CompletionItemKind EnumMember;
    public static CompletionItemKind Constant;
    public static CompletionItemKind Struct;
    public static CompletionItemKind Event;
    public static CompletionItemKind Operator;
    public static CompletionItemKind TypeParameter;
    public static CompletionItemKind Macro;
    public static CompletionItemKind Namespace;
    public static CompletionItemKind Template;
    public static CompletionItemKind TypeDefinition;
    public static CompletionItemKind Union;
    public static CompletionItemKind Delegate;
    public static CompletionItemKind TagHelper;
    public static CompletionItemKind ExtensionMethod;
    public static CompletionItemKind Element;
    public static CompletionItemKind LocalResource;
    public static CompletionItemKind SystemResource;
    public static CompletionItemKind CloseElement;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionItemKindSetting : object {
    [CompilerGeneratedAttribute]
private CompletionItemKind[] <ValueSet>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionItemKind[] ValueSet { get; public set; }
    [CompilerGeneratedAttribute]
public CompletionItemKind[] get_ValueSet();
    [CompilerGeneratedAttribute]
public void set_ValueSet(CompletionItemKind[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionItemLabelDetails : object {
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Detail { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionItemOptions : object {
    [CompilerGeneratedAttribute]
private bool <LabelDetailsSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool LabelDetailsSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_LabelDetailsSupport();
    [CompilerGeneratedAttribute]
public void set_LabelDetailsSupport(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionItemSetting : object {
    [CompilerGeneratedAttribute]
private bool <SnippetSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CommitCharactersSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private MarkupKind[] <DocumentationFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeprecatedSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreselectSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionItemTagSupportSetting <TagSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InsertReplaceSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private ResolveSupportSetting <ResolveSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private InsertTextModeSupportSetting <InsertTextModeSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LabelDetailsSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SnippetSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool CommitCharactersSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public MarkupKind[] DocumentationFormat { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DeprecatedSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool PreselectSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionItemTagSupportSetting TagSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool InsertReplaceSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public ResolveSupportSetting ResolveSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public InsertTextModeSupportSetting InsertTextModeSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool LabelDetailsSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_SnippetSupport();
    [CompilerGeneratedAttribute]
public void set_SnippetSupport(bool value);
    [CompilerGeneratedAttribute]
public bool get_CommitCharactersSupport();
    [CompilerGeneratedAttribute]
public void set_CommitCharactersSupport(bool value);
    [CompilerGeneratedAttribute]
public MarkupKind[] get_DocumentationFormat();
    [CompilerGeneratedAttribute]
public void set_DocumentationFormat(MarkupKind[] value);
    [CompilerGeneratedAttribute]
public bool get_DeprecatedSupport();
    [CompilerGeneratedAttribute]
public void set_DeprecatedSupport(bool value);
    [CompilerGeneratedAttribute]
public bool get_PreselectSupport();
    [CompilerGeneratedAttribute]
public void set_PreselectSupport(bool value);
    [CompilerGeneratedAttribute]
public CompletionItemTagSupportSetting get_TagSupport();
    [CompilerGeneratedAttribute]
public void set_TagSupport(CompletionItemTagSupportSetting value);
    [CompilerGeneratedAttribute]
public bool get_InsertReplaceSupport();
    [CompilerGeneratedAttribute]
public void set_InsertReplaceSupport(bool value);
    [CompilerGeneratedAttribute]
public ResolveSupportSetting get_ResolveSupport();
    [CompilerGeneratedAttribute]
public void set_ResolveSupport(ResolveSupportSetting value);
    [CompilerGeneratedAttribute]
public InsertTextModeSupportSetting get_InsertTextModeSupport();
    [CompilerGeneratedAttribute]
public void set_InsertTextModeSupport(InsertTextModeSupportSetting value);
    [CompilerGeneratedAttribute]
public bool get_LabelDetailsSupport();
    [CompilerGeneratedAttribute]
public void set_LabelDetailsSupport(bool value);
}
internal enum Roslyn.LanguageServer.Protocol.CompletionItemTag : Enum {
    public int value__;
    public static CompletionItemTag Deprecated;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionItemTagSupportSetting : object {
    [CompilerGeneratedAttribute]
private CompletionItemTag[] <ValueSet>k__BackingField;
    [DataMemberAttribute]
public CompletionItemTag[] ValueSet { get; public set; }
    [CompilerGeneratedAttribute]
public CompletionItemTag[] get_ValueSet();
    [CompilerGeneratedAttribute]
public void set_ValueSet(CompletionItemTag[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionList : object {
    [CompilerGeneratedAttribute]
private bool <IsIncomplete>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionItem[] <Items>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CompletionListItemDefaults <ItemDefaults>k__BackingField;
    [DataMemberAttribute]
public bool IsIncomplete { get; public set; }
    [DataMemberAttribute]
public CompletionItem[] Items { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionListItemDefaults ItemDefaults { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsIncomplete();
    [CompilerGeneratedAttribute]
public void set_IsIncomplete(bool value);
    [CompilerGeneratedAttribute]
public CompletionItem[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(CompletionItem[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CompletionListItemDefaults get_ItemDefaults();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ItemDefaults(CompletionListItemDefaults value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionListItemDefaults : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <CommitCharacters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<Range, InsertReplaceRange>> <EditRange>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InsertTextFormat> <InsertTextFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InsertTextMode> <InsertTextMode>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] CommitCharacters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<Range, InsertReplaceRange>> EditRange { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<InsertTextFormat> InsertTextFormat { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<InsertTextMode> InsertTextMode { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public object Data { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_CommitCharacters();
    [CompilerGeneratedAttribute]
public void set_CommitCharacters(String[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<Range, InsertReplaceRange>> get_EditRange();
    [CompilerGeneratedAttribute]
public void set_EditRange(Nullable`1<SumType`2<Range, InsertReplaceRange>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<InsertTextFormat> get_InsertTextFormat();
    [CompilerGeneratedAttribute]
public void set_InsertTextFormat(Nullable`1<InsertTextFormat> value);
    [CompilerGeneratedAttribute]
public Nullable`1<InsertTextMode> get_InsertTextMode();
    [CompilerGeneratedAttribute]
public void set_InsertTextMode(Nullable`1<InsertTextMode> value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionListSetting : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <ItemDefaults>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] ItemDefaults { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_ItemDefaults();
    [CompilerGeneratedAttribute]
public void set_ItemDefaults(String[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TriggerCharacters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <AllCommitCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ResolveProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionItemOptions <CompletionItemOptions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] TriggerCharacters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] AllCommitCharacters { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ResolveProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionItemOptions CompletionItemOptions { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_TriggerCharacters();
    [CompilerGeneratedAttribute]
public void set_TriggerCharacters(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_AllCommitCharacters();
    [CompilerGeneratedAttribute]
public void set_AllCommitCharacters(String[] value);
    [CompilerGeneratedAttribute]
public bool get_ResolveProvider();
    [CompilerGeneratedAttribute]
public void set_ResolveProvider(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
    [CompilerGeneratedAttribute]
public CompletionItemOptions get_CompletionItemOptions();
    [CompilerGeneratedAttribute]
public void set_CompletionItemOptions(CompletionItemOptions value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionParams : TextDocumentPositionParams {
    [CompilerGeneratedAttribute]
private CompletionContext <Context>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<Nullable`1<SumType`2<CompletionItem[], CompletionList>>> <PartialResultToken>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionContext Context { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<Nullable`1<SumType`2<CompletionItem[], CompletionList>>> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public CompletionContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(CompletionContext value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<Nullable`1<SumType`2<CompletionItem[], CompletionList>>> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<Nullable`1<SumType`2<CompletionItem[], CompletionList>>> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CompletionSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private CompletionItemSetting <CompletionItem>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionItemKindSetting <CompletionItemKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContextSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InsertTextMode> <InsertTextMode>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionListSetting <CompletionListSetting>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionItemSetting CompletionItem { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionItemKindSetting CompletionItemKind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ContextSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<InsertTextMode> InsertTextMode { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionListSetting CompletionListSetting { get; public set; }
    [CompilerGeneratedAttribute]
public CompletionItemSetting get_CompletionItem();
    [CompilerGeneratedAttribute]
public void set_CompletionItem(CompletionItemSetting value);
    [CompilerGeneratedAttribute]
public CompletionItemKindSetting get_CompletionItemKind();
    [CompilerGeneratedAttribute]
public void set_CompletionItemKind(CompletionItemKindSetting value);
    [CompilerGeneratedAttribute]
public bool get_ContextSupport();
    [CompilerGeneratedAttribute]
public void set_ContextSupport(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<InsertTextMode> get_InsertTextMode();
    [CompilerGeneratedAttribute]
public void set_InsertTextMode(Nullable`1<InsertTextMode> value);
    [CompilerGeneratedAttribute]
public CompletionListSetting get_CompletionListSetting();
    [CompilerGeneratedAttribute]
public void set_CompletionListSetting(CompletionListSetting value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.CompletionTriggerKind : Enum {
    public int value__;
    public static CompletionTriggerKind Invoked;
    public static CompletionTriggerKind TriggerCharacter;
    public static CompletionTriggerKind TriggerForIncompleteCompletions;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ConfigurationItem : object {
    [CompilerGeneratedAttribute]
private Uri <ScopeUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Section>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri ScopeUri { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Section { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_ScopeUri();
    [CompilerGeneratedAttribute]
public void set_ScopeUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Section();
    [CompilerGeneratedAttribute]
public void set_Section(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ConfigurationParams : object {
    [CompilerGeneratedAttribute]
private ConfigurationItem[] <Items>k__BackingField;
    [DataMemberAttribute]
public ConfigurationItem[] Items { get; public set; }
    [CompilerGeneratedAttribute]
public ConfigurationItem[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(ConfigurationItem[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.ContainerElementConverter : JsonConverter {
    public static ContainerElementConverter Instance;
    private static ContainerElementConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[KindAttribute("create", "kind")]
internal class Roslyn.LanguageServer.Protocol.CreateFile : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CreateFileOptions <Options>k__BackingField;
    [DataMemberAttribute]
public string Kind { get; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public CreateFileOptions Options { get; public set; }
    public string get_Kind();
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CreateFileOptions get_Options();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Options(CreateFileOptions value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.CreateFileOptions : object {
    [CompilerGeneratedAttribute]
private bool <Overwrite>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExists>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Overwrite { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IgnoreIfExists { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Overwrite();
    [CompilerGeneratedAttribute]
public void set_Overwrite(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreIfExists();
    [CompilerGeneratedAttribute]
public void set_IgnoreIfExists(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DefaultBehaviorPrepareRename : object {
    [CompilerGeneratedAttribute]
private bool <DefaultBehavior>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DefaultBehavior { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DefaultBehavior();
    [CompilerGeneratedAttribute]
public void set_DefaultBehavior(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DefinitionOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[KindAttribute("delete", "kind")]
internal class Roslyn.LanguageServer.Protocol.DeleteFile : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private DeleteFileOptions <Options>k__BackingField;
    [DataMemberAttribute]
public string Kind { get; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public DeleteFileOptions Options { get; public set; }
    public string get_Kind();
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public DeleteFileOptions get_Options();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Options(DeleteFileOptions value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DeleteFileOptions : object {
    [CompilerGeneratedAttribute]
private bool <Recursive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreIfNotExists>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Recursive { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IgnoreIfNotExists { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Recursive();
    [CompilerGeneratedAttribute]
public void set_Recursive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreIfNotExists();
    [CompilerGeneratedAttribute]
public void set_IgnoreIfNotExists(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Diagnostic : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DiagnosticSeverity> <Severity>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<int, string>> <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeDescription <CodeDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private DiagnosticTag[] <Tags>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private DiagnosticRelatedInformation[] <RelatedInformation>k__BackingField;
    [NullableAttribute("1")]
[DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<DiagnosticSeverity> Severity { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<int, string>> Code { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CodeDescription CodeDescription { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Source { get; public set; }
    [NullableAttribute("1")]
[DataMemberAttribute]
public string Message { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DiagnosticTag[] Tags { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public DiagnosticRelatedInformation[] RelatedInformation { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Range get_Range();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public Nullable`1<DiagnosticSeverity> get_Severity();
    [CompilerGeneratedAttribute]
public void set_Severity(Nullable`1<DiagnosticSeverity> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<int, string>> get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(Nullable`1<SumType`2<int, string>> value);
    [CompilerGeneratedAttribute]
public CodeDescription get_CodeDescription();
    [CompilerGeneratedAttribute]
public void set_CodeDescription(CodeDescription value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public DiagnosticTag[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(DiagnosticTag[] value);
    [CompilerGeneratedAttribute]
public DiagnosticRelatedInformation[] get_RelatedInformation();
    [CompilerGeneratedAttribute]
public void set_RelatedInformation(DiagnosticRelatedInformation[] value);
    public static bool op_Equality(Diagnostic value1, Diagnostic value2);
    public static bool op_Inequality(Diagnostic value1, Diagnostic value2);
    [NullableContextAttribute("1")]
public sealed virtual bool Equals(Diagnostic other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DiagnosticOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InterFileDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkspaceDiagnostics>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Identifier { get; public set; }
    [DataMemberAttribute]
public bool InterFileDependencies { get; public set; }
    [DataMemberAttribute]
public bool WorkspaceDiagnostics { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public bool get_InterFileDependencies();
    [CompilerGeneratedAttribute]
public void set_InterFileDependencies(bool value);
    [CompilerGeneratedAttribute]
public bool get_WorkspaceDiagnostics();
    [CompilerGeneratedAttribute]
public void set_WorkspaceDiagnostics(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DiagnosticRegistrationOptions : DiagnosticOptions {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private DocumentFilter[] <DocumentSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public DocumentFilter[] DocumentSelector { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DocumentFilter[] get_DocumentSelector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocumentSelector(DocumentFilter[] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DiagnosticRelatedInformation : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [DataMemberAttribute]
public Location Location { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Location value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DiagnosticServerCancellationData : object {
    [CompilerGeneratedAttribute]
private bool <RetriggerRequest>k__BackingField;
    [DataMemberAttribute]
public bool RetriggerRequest { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RetriggerRequest();
    [CompilerGeneratedAttribute]
public void set_RetriggerRequest(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DiagnosticSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private bool <RelatedDocumentSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool RelatedDocumentSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RelatedDocumentSupport();
    [CompilerGeneratedAttribute]
public void set_RelatedDocumentSupport(bool value);
}
internal enum Roslyn.LanguageServer.Protocol.DiagnosticSeverity : Enum {
    public int value__;
    public static DiagnosticSeverity Error;
    public static DiagnosticSeverity Warning;
    public static DiagnosticSeverity Information;
    public static DiagnosticSeverity Hint;
}
internal enum Roslyn.LanguageServer.Protocol.DiagnosticTag : Enum {
    public int value__;
    public static DiagnosticTag Unnecessary;
    public static DiagnosticTag Deprecated;
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DiagnosticWorkspaceSetting : object {
    [CompilerGeneratedAttribute]
private bool <RefreshSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool RefreshSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RefreshSupport();
    [CompilerGeneratedAttribute]
public void set_RefreshSupport(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DidChangeConfigurationParams : object {
    [CompilerGeneratedAttribute]
private object <Settings>k__BackingField;
    [DataMemberAttribute]
public object Settings { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DidChangeTextDocumentParams : object {
    [CompilerGeneratedAttribute]
private VersionedTextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private TextDocumentContentChangeEvent[] <ContentChanges>k__BackingField;
    [DataMemberAttribute]
public VersionedTextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public TextDocumentContentChangeEvent[] ContentChanges { get; public set; }
    private TextDocumentIdentifier Roslyn.LanguageServer.Protocol.ITextDocumentParams.TextDocument { get; }
    [CompilerGeneratedAttribute]
public VersionedTextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(VersionedTextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public TextDocumentContentChangeEvent[] get_ContentChanges();
    [CompilerGeneratedAttribute]
public void set_ContentChanges(TextDocumentContentChangeEvent[] value);
    private sealed virtual override TextDocumentIdentifier Roslyn.LanguageServer.Protocol.ITextDocumentParams.get_TextDocument();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DidChangeWatchedFilesParams : object {
    [CompilerGeneratedAttribute]
private FileEvent[] <Changes>k__BackingField;
    [DataMemberAttribute]
public FileEvent[] Changes { get; public set; }
    [CompilerGeneratedAttribute]
public FileEvent[] get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(FileEvent[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DidCloseTextDocumentParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DidOpenTextDocumentParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentItem <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentItem TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public TextDocumentItem get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentItem value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DidSaveTextDocumentParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string Text { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Text();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Text(string value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentColorOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentColorParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentDiagnosticParams : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult>> <PartialResultToken>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreviousResultId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult>> PartialResultToken { get; public set; }
    [NullableAttribute("1")]
[DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Identifier { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string PreviousResultId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult>> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<SumType`3<RelatedFullDocumentDiagnosticReport, RelatedUnchangedDocumentDiagnosticReport, DocumentDiagnosticReportPartialResult>> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_PreviousResultId();
    [CompilerGeneratedAttribute]
public void set_PreviousResultId(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportKind : object {
    public static string Full;
    public static string Unchanged;
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportPartialResult : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> <RelatedDocuments>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> RelatedDocuments { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> get_RelatedDocuments();
    [CompilerGeneratedAttribute]
public void set_RelatedDocuments(Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentFilter : object {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Language { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Scheme { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Pattern { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentFormattingOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentFormattingParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private FormattingOptions <Options>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public FormattingOptions Options { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public FormattingOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(FormattingOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentHighlight : object {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentHighlightKind <Kind>k__BackingField;
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[JsonPropertyAttribute]
public DocumentHighlightKind Kind { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public DocumentHighlightKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(DocumentHighlightKind value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.DocumentHighlightKind : Enum {
    public int value__;
    public static DocumentHighlightKind Text;
    public static DocumentHighlightKind Read;
    public static DocumentHighlightKind Write;
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentHighlightOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
internal class Roslyn.LanguageServer.Protocol.DocumentHighlightParams : TextDocumentPositionParams {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<DocumentHighlight[]> <PartialResultToken>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<DocumentHighlight[]> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<DocumentHighlight[]> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<DocumentHighlight[]> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentLink : object {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Uri <Target>k__BackingField;
    [DataMemberAttribute]
public Range Range { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
[JsonPropertyAttribute]
public Uri Target { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Uri get_Target();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Target(Uri value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentLinkOptions : object {
    [CompilerGeneratedAttribute]
private bool <ResolveProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ResolveProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ResolveProvider();
    [CompilerGeneratedAttribute]
public void set_ResolveProvider(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentLinkParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingOptions : object {
    [CompilerGeneratedAttribute]
private string <FirstTriggerCharacter>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <MoreTriggerCharacter>k__BackingField;
    [DataMemberAttribute]
public string FirstTriggerCharacter { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] MoreTriggerCharacter { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FirstTriggerCharacter();
    [CompilerGeneratedAttribute]
public void set_FirstTriggerCharacter(string value);
    [CompilerGeneratedAttribute]
public String[] get_MoreTriggerCharacter();
    [CompilerGeneratedAttribute]
public void set_MoreTriggerCharacter(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingParams : TextDocumentPositionParams {
    [CompilerGeneratedAttribute]
private string <Character>k__BackingField;
    [CompilerGeneratedAttribute]
private FormattingOptions <Options>k__BackingField;
    [DataMemberAttribute]
public string Character { get; public set; }
    [DataMemberAttribute]
public FormattingOptions Options { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Character();
    [CompilerGeneratedAttribute]
public void set_Character(string value);
    [CompilerGeneratedAttribute]
public FormattingOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(FormattingOptions value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentRangeFormattingOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentRangeFormattingParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private FormattingOptions <Options>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
public FormattingOptions Options { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public FormattingOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(FormattingOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentSymbol : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [CompilerGeneratedAttribute]
private SymbolKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Deprecated>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <SelectionRange>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private DocumentSymbol[] <Children>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string Detail { get; public set; }
    [DataMemberAttribute]
public SymbolKind Kind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Deprecated { get; public set; }
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
public Range SelectionRange { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public DocumentSymbol[] Children { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Detail();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Detail(string value);
    [CompilerGeneratedAttribute]
public SymbolKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(SymbolKind value);
    [CompilerGeneratedAttribute]
public bool get_Deprecated();
    [CompilerGeneratedAttribute]
public void set_Deprecated(bool value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public Range get_SelectionRange();
    [CompilerGeneratedAttribute]
public void set_SelectionRange(Range value);
    [CompilerGeneratedAttribute]
public DocumentSymbol[] get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(DocumentSymbol[] value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentSymbolOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentSymbolParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DocumentSymbolSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private SymbolKindSetting <SymbolKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HierarchicalDocumentSymbolSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SymbolKindSetting SymbolKind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool HierarchicalDocumentSymbolSupport { get; public set; }
    [CompilerGeneratedAttribute]
public SymbolKindSetting get_SymbolKind();
    [CompilerGeneratedAttribute]
public void set_SymbolKind(SymbolKindSetting value);
    [CompilerGeneratedAttribute]
public bool get_HierarchicalDocumentSymbolSupport();
    [CompilerGeneratedAttribute]
public void set_HierarchicalDocumentSymbolSupport(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.DocumentUriConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.DropProgressConverter : JsonConverter {
    public bool CanWrite { get; }
    public virtual bool get_CanWrite();
    public static JsonSerializer CreateSerializer();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.DynamicRegistrationSetting : object {
    [CompilerGeneratedAttribute]
private bool <DynamicRegistration>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DynamicRegistration { get; public set; }
    public DynamicRegistrationSetting(bool value);
    [CompilerGeneratedAttribute]
public bool get_DynamicRegistration();
    [CompilerGeneratedAttribute]
public void set_DynamicRegistration(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ExecuteCommandOptions : object {
    [CompilerGeneratedAttribute]
private String[] <Commands>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
public String[] Commands { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Commands();
    [CompilerGeneratedAttribute]
public void set_Commands(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ExecuteCommandParams : object {
    [CompilerGeneratedAttribute]
private string <Command>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    [DataMemberAttribute]
public string Command { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Object[] Arguments { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(string value);
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Object[] value);
}
internal enum Roslyn.LanguageServer.Protocol.FileChangeType : Enum {
    public int value__;
    public static FileChangeType Created;
    public static FileChangeType Changed;
    public static FileChangeType Deleted;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.FileEvent : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private FileChangeType <FileChangeType>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [DataMemberAttribute]
public FileChangeType FileChangeType { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public FileChangeType get_FileChangeType();
    [CompilerGeneratedAttribute]
public void set_FileChangeType(FileChangeType value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.FoldingRange : object {
    [CompilerGeneratedAttribute]
private int <StartLine>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StartCharacter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EndLine>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EndCharacter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FoldingRangeKind> <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollapsedText>k__BackingField;
    [DataMemberAttribute]
public int StartLine { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> StartCharacter { get; public set; }
    [DataMemberAttribute]
public int EndLine { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> EndCharacter { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<FoldingRangeKind> Kind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string CollapsedText { get; public set; }
    [CompilerGeneratedAttribute]
public int get_StartLine();
    [CompilerGeneratedAttribute]
public void set_StartLine(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_StartCharacter();
    [CompilerGeneratedAttribute]
public void set_StartCharacter(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_EndLine();
    [CompilerGeneratedAttribute]
public void set_EndLine(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_EndCharacter();
    [CompilerGeneratedAttribute]
public void set_EndCharacter(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<FoldingRangeKind> get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(Nullable`1<FoldingRangeKind> value);
    [CompilerGeneratedAttribute]
public string get_CollapsedText();
    [CompilerGeneratedAttribute]
public void set_CollapsedText(string value);
}
[IsReadOnlyAttribute]
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1<Roslyn.LanguageServer.Protocol.FoldingRangeKind>")]
[TypeConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1/TypeConverter<Roslyn.LanguageServer.Protocol.FoldingRangeKind>")]
internal class Roslyn.LanguageServer.Protocol.FoldingRangeKind : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static FoldingRangeKind Comment;
    public static FoldingRangeKind Imports;
    public static FoldingRangeKind Region;
    [NullableAttribute("1")]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public FoldingRangeKind(string Value);
    private static FoldingRangeKind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(FoldingRangeKind left, FoldingRangeKind right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(FoldingRangeKind left, FoldingRangeKind right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(FoldingRangeKind other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.FoldingRangeOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.FoldingRangeParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.FoldingRangeSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RangeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LineFoldingOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private FoldingRangeSettingOptions <FoldingRange>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> RangeLimit { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool LineFoldingOnly { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public FoldingRangeSettingOptions FoldingRange { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RangeLimit();
    [CompilerGeneratedAttribute]
public void set_RangeLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_LineFoldingOnly();
    [CompilerGeneratedAttribute]
public void set_LineFoldingOnly(bool value);
    [CompilerGeneratedAttribute]
public FoldingRangeSettingOptions get_FoldingRange();
    [CompilerGeneratedAttribute]
public void set_FoldingRange(FoldingRangeSettingOptions value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.FoldingRangeSettingOptions : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private bool <CollapsedText>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool CollapsedText { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_CollapsedText();
    [CompilerGeneratedAttribute]
public void set_CollapsedText(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.FormattingOptions : object {
    [CompilerGeneratedAttribute]
private int <TabSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InsertSpaces>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <OtherOptions>k__BackingField;
    [DataMemberAttribute]
public int TabSize { get; public set; }
    [DataMemberAttribute]
public bool InsertSpaces { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> OtherOptions { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TabSize();
    [CompilerGeneratedAttribute]
public void set_TabSize(int value);
    [CompilerGeneratedAttribute]
public bool get_InsertSpaces();
    [CompilerGeneratedAttribute]
public void set_InsertSpaces(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_OtherOptions();
    [CompilerGeneratedAttribute]
public void set_OtherOptions(Dictionary`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[KindAttribute("full", "kind")]
internal class Roslyn.LanguageServer.Protocol.FullDocumentDiagnosticReport : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private Diagnostic[] <Items>k__BackingField;
    [DataMemberAttribute]
public string Kind { get; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string ResultId { get; public set; }
    [DataMemberAttribute]
public Diagnostic[] Items { get; public set; }
    public string get_Kind();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ResultId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ResultId(string value);
    [CompilerGeneratedAttribute]
public Diagnostic[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(Diagnostic[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Hover : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`4<string, MarkedString, SumType`2[], MarkupContent>> <Contents>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public Nullable`1<SumType`4<string, MarkedString, SumType`2[], MarkupContent>> Contents { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range Range { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`4<string, MarkedString, SumType`2[], MarkupContent>> get_Contents();
    [CompilerGeneratedAttribute]
public void set_Contents(Nullable`1<SumType`4<string, MarkedString, SumType`2[], MarkupContent>> value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.HoverOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.HoverSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private MarkupKind[] <ContentFormat>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public MarkupKind[] ContentFormat { get; public set; }
    [CompilerGeneratedAttribute]
public MarkupKind[] get_ContentFormat();
    [CompilerGeneratedAttribute]
public void set_ContentFormat(MarkupKind[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.ImageElementConverter : JsonConverter {
    public static ImageElementConverter Instance;
    private static ImageElementConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.ImageIdConverter : JsonConverter {
    public static ImageIdConverter Instance;
    private static ImageIdConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ImplementationOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
internal class Roslyn.LanguageServer.Protocol.InitializedParams : object {
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InitializeError : object {
    [CompilerGeneratedAttribute]
private bool <Retry>k__BackingField;
    [DataMemberAttribute]
public bool Retry { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Retry();
    [CompilerGeneratedAttribute]
public void set_Retry(bool value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.InitializeErrorCode : Enum {
    public int value__;
    public static InitializeErrorCode UnknownProtocolVersion;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InitializeParams : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RootUri>k__BackingField;
    [CompilerGeneratedAttribute]
private object <InitializationOptions>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ClientCapabilities <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private TraceSetting <Trace>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> ProcessId { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Locale { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[ObsoleteAttribute("Deprecated in favour of RootUri")]
public string RootPath { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri RootUri { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public object InitializationOptions { get; public set; }
    [NullableAttribute("1")]
[DataMemberAttribute]
public ClientCapabilities Capabilities { get; public set; }
    [DataMemberAttribute]
[DefaultValueAttribute("Roslyn.LanguageServer.Protocol.TraceSetting", "off")]
[JsonPropertyAttribute]
public TraceSetting Trace { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Locale();
    [CompilerGeneratedAttribute]
public void set_Locale(string value);
    [CompilerGeneratedAttribute]
public string get_RootPath();
    [CompilerGeneratedAttribute]
public void set_RootPath(string value);
    [CompilerGeneratedAttribute]
public Uri get_RootUri();
    [CompilerGeneratedAttribute]
public void set_RootUri(Uri value);
    [CompilerGeneratedAttribute]
public object get_InitializationOptions();
    [CompilerGeneratedAttribute]
public void set_InitializationOptions(object value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ClientCapabilities get_Capabilities();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Capabilities(ClientCapabilities value);
    [CompilerGeneratedAttribute]
public TraceSetting get_Trace();
    [CompilerGeneratedAttribute]
public void set_Trace(TraceSetting value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InitializeResult : object {
    [CompilerGeneratedAttribute]
private ServerCapabilities <Capabilities>k__BackingField;
    [DataMemberAttribute]
public ServerCapabilities Capabilities { get; public set; }
    [CompilerGeneratedAttribute]
public ServerCapabilities get_Capabilities();
    [CompilerGeneratedAttribute]
public void set_Capabilities(ServerCapabilities value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHint : object {
    [CompilerGeneratedAttribute]
private Position <Position>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private SumType`2<string, InlayHintLabelPart[]> <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InlayHintKind> <Kind>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private TextEdit[] <TextEdits>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<string, MarkupContent>> <ToolTip>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PaddingLeft>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PaddingRight>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [DataMemberAttribute]
public Position Position { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public SumType`2<string, InlayHintLabelPart[]> Label { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<InlayHintKind> Kind { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public TextEdit[] TextEdits { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> ToolTip { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool PaddingLeft { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool PaddingRight { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public object Data { get; public set; }
    [CompilerGeneratedAttribute]
public Position get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(Position value);
    [CompilerGeneratedAttribute]
public SumType`2<string, InlayHintLabelPart[]> get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(SumType`2<string, InlayHintLabelPart[]> value);
    [CompilerGeneratedAttribute]
public Nullable`1<InlayHintKind> get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(Nullable`1<InlayHintKind> value);
    [CompilerGeneratedAttribute]
public TextEdit[] get_TextEdits();
    [CompilerGeneratedAttribute]
public void set_TextEdits(TextEdit[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> get_ToolTip();
    [CompilerGeneratedAttribute]
public void set_ToolTip(Nullable`1<SumType`2<string, MarkupContent>> value);
    [CompilerGeneratedAttribute]
public bool get_PaddingLeft();
    [CompilerGeneratedAttribute]
public void set_PaddingLeft(bool value);
    [CompilerGeneratedAttribute]
public bool get_PaddingRight();
    [CompilerGeneratedAttribute]
public void set_PaddingRight(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Data();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Data(object value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.InlayHintKind : Enum {
    public int value__;
    public static InlayHintKind Type;
    public static InlayHintKind Parameter;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHintLabelPart : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<string, MarkupContent>> <ToolTip>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Command <Command>k__BackingField;
    [NullableAttribute("1")]
[DataMemberAttribute]
public string Value { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> ToolTip { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Location Location { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Command Command { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> get_ToolTip();
    [CompilerGeneratedAttribute]
public void set_ToolTip(Nullable`1<SumType`2<string, MarkupContent>> value);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Location value);
    [CompilerGeneratedAttribute]
public Command get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(Command value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHintOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ResolveProvider>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ResolveProvider { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
    [CompilerGeneratedAttribute]
public bool get_ResolveProvider();
    [CompilerGeneratedAttribute]
public void set_ResolveProvider(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHintParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Range Range { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHintRegistrationOptions : InlayHintOptions {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private DocumentFilter[] <DocumentSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public DocumentFilter[] DocumentSelector { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DocumentFilter[] get_DocumentSelector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocumentSelector(DocumentFilter[] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHintResolveSupportSetting : object {
    [CompilerGeneratedAttribute]
private String[] <Properties>k__BackingField;
    [DataMemberAttribute]
public String[] Properties { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(String[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHintSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private InlayHintResolveSupportSetting <ResolveSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public InlayHintResolveSupportSetting ResolveSupport { get; public set; }
    [CompilerGeneratedAttribute]
public InlayHintResolveSupportSetting get_ResolveSupport();
    [CompilerGeneratedAttribute]
public void set_ResolveSupport(InlayHintResolveSupportSetting value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InlayHintWorkspaceSetting : object {
    [CompilerGeneratedAttribute]
private bool <RefreshSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool RefreshSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RefreshSupport();
    [CompilerGeneratedAttribute]
public void set_RefreshSupport(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InsertReplaceEdit : object {
    [CompilerGeneratedAttribute]
private string <NewText>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Insert>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Replace>k__BackingField;
    [DataMemberAttribute]
public string NewText { get; public set; }
    [DataMemberAttribute]
public Range Insert { get; public set; }
    [DataMemberAttribute]
public Range Replace { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NewText();
    [CompilerGeneratedAttribute]
public void set_NewText(string value);
    [CompilerGeneratedAttribute]
public Range get_Insert();
    [CompilerGeneratedAttribute]
public void set_Insert(Range value);
    [CompilerGeneratedAttribute]
public Range get_Replace();
    [CompilerGeneratedAttribute]
public void set_Replace(Range value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InsertReplaceRange : object {
    [CompilerGeneratedAttribute]
private Range <Insert>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Replace>k__BackingField;
    [DataMemberAttribute]
public Range Insert { get; public set; }
    [DataMemberAttribute]
public Range Replace { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Insert();
    [CompilerGeneratedAttribute]
public void set_Insert(Range value);
    [CompilerGeneratedAttribute]
public Range get_Replace();
    [CompilerGeneratedAttribute]
public void set_Replace(Range value);
}
internal enum Roslyn.LanguageServer.Protocol.InsertTextFormat : Enum {
    public int value__;
    public static InsertTextFormat Plaintext;
    public static InsertTextFormat Snippet;
}
internal enum Roslyn.LanguageServer.Protocol.InsertTextMode : Enum {
    public int value__;
    public static InsertTextMode AsIs;
    public static InsertTextMode AdjustIndentation;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.InsertTextModeSupportSetting : object {
    [CompilerGeneratedAttribute]
private InsertTextMode[] <ValueSet>k__BackingField;
    [DataMemberAttribute]
public InsertTextMode[] ValueSet { get; public set; }
    [CompilerGeneratedAttribute]
public InsertTextMode[] get_ValueSet();
    [CompilerGeneratedAttribute]
public void set_ValueSet(InsertTextMode[] value);
}
[NullableContextAttribute("2")]
internal interface Roslyn.LanguageServer.Protocol.IPartialResultParams`1 {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IProgress`1<T> PartialResultToken { get; public set; }
    public abstract virtual IProgress`1<T> get_PartialResultToken();
    public abstract virtual void set_PartialResultToken(IProgress`1<T> value);
}
[NullableContextAttribute("2")]
internal interface Roslyn.LanguageServer.Protocol.IStaticRegistrationOptions {
    public string Id { get; public set; }
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
}
[NullableContextAttribute("1")]
internal interface Roslyn.LanguageServer.Protocol.IStringEnum {
    public string Value { get; }
    public abstract virtual string get_Value();
}
[NullableContextAttribute("2")]
internal interface Roslyn.LanguageServer.Protocol.ISumType {
    public object Value { get; }
    public abstract virtual object get_Value();
}
[NullableContextAttribute("1")]
internal interface Roslyn.LanguageServer.Protocol.ITextDocumentParams {
    public TextDocumentIdentifier TextDocument { get; }
    public abstract virtual TextDocumentIdentifier get_TextDocument();
}
[NullableContextAttribute("1")]
internal interface Roslyn.LanguageServer.Protocol.ITextDocumentPositionParams {
    public TextDocumentIdentifier TextDocument { get; public set; }
    public Position Position { get; public set; }
    public abstract virtual TextDocumentIdentifier get_TextDocument();
    public abstract virtual void set_TextDocument(TextDocumentIdentifier value);
    public abstract virtual Position get_Position();
    public abstract virtual void set_Position(Position value);
}
internal interface Roslyn.LanguageServer.Protocol.ITextDocumentRegistrationOptions {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public DocumentFilter[] DocumentSelector { get; public set; }
    public abstract virtual DocumentFilter[] get_DocumentSelector();
    public abstract virtual void set_DocumentSelector(DocumentFilter[] value);
}
internal interface Roslyn.LanguageServer.Protocol.IWorkDoneProgressOptions {
    public bool WorkDoneProgress { get; public set; }
    public abstract virtual bool get_WorkDoneProgress();
    public abstract virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
internal static class Roslyn.LanguageServer.Protocol.JsonConverterCollectionUtilities : object {
    [NullableAttribute("1")]
public static object ConvertersLock;
    private static JsonConverterCollectionUtilities();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Roslyn.LanguageServer.Protocol.KindAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KindPropertyName>k__BackingField;
    public string Kind { get; private set; }
    public string KindPropertyName { get; private set; }
    public KindAttribute(string kind, string kindPropertyName);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
private void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_KindPropertyName();
    [CompilerGeneratedAttribute]
private void set_KindPropertyName(string value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.LinkedEditingRangeOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.LinkedEditingRangeParams : TextDocumentPositionParams {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.LinkedEditingRanges : object {
    [CompilerGeneratedAttribute]
private Range[] <Ranges>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <WordPattern>k__BackingField;
    [DataMemberAttribute]
public Range[] Ranges { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string WordPattern { get; public set; }
    [CompilerGeneratedAttribute]
public Range[] get_Ranges();
    [CompilerGeneratedAttribute]
public void set_Ranges(Range[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_WordPattern();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_WordPattern(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Location : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [DataMemberAttribute]
public Range Range { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Location other);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.LogMessageParams : object {
    [CompilerGeneratedAttribute]
private MessageType <MessageType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [DataMemberAttribute]
public MessageType MessageType { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public MessageType get_MessageType();
    [CompilerGeneratedAttribute]
public void set_MessageType(MessageType value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.LspNotification`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public LspNotification`1(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.LspRequest`2 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public LspRequest`2(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.MarkedString : object {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Language { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.MarkupContent : object {
    [CompilerGeneratedAttribute]
private MarkupKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [DataMemberAttribute]
public MarkupKind Kind { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public MarkupKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(MarkupKind value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[IsReadOnlyAttribute]
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1<Roslyn.LanguageServer.Protocol.MarkupKind>")]
[TypeConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1/TypeConverter<Roslyn.LanguageServer.Protocol.MarkupKind>")]
internal class Roslyn.LanguageServer.Protocol.MarkupKind : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static MarkupKind PlainText;
    public static MarkupKind Markdown;
    [NullableAttribute("1")]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public MarkupKind(string Value);
    private static MarkupKind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(MarkupKind left, MarkupKind right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(MarkupKind left, MarkupKind right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(MarkupKind other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.MessageActionItem : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [DataMemberAttribute]
public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.MessageType : Enum {
    public int value__;
    public static MessageType Error;
    public static MessageType Warning;
    public static MessageType Info;
    public static MessageType Log;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.Methods : object {
    public static string InitializeName;
    public static string InitializedName;
    public static string ProgressNotificationName;
    public static string PartialResultTokenName;
    public static string PartialResultTokenPropertyName;
    public static string WorkDoneTokenName;
    public static string ProgressNotificationTokenName;
    public static string TextDocumentCodeActionName;
    public static string TextDocumentCodeLensName;
    public static string CodeActionResolveName;
    public static string CodeLensResolveName;
    public static string TextDocumentCompletionName;
    public static string TextDocumentCompletionResolveName;
    public static string TextDocumentDefinitionName;
    public static string TextDocumentDiagnosticName;
    public static string TextDocumentDidOpenName;
    public static string TextDocumentDidCloseName;
    public static string TextDocumentDidChangeName;
    public static string TextDocumentDidSaveName;
    public static string TextDocumentDocumentHighlightName;
    public static string TextDocumentDocumentLinkName;
    public static string DocumentLinkResolveName;
    public static string TextDocumentDocumentColorName;
    public static string TextDocumentDocumentSymbolName;
    public static string TextDocumentFoldingRangeName;
    public static string TextDocumentFormattingName;
    public static string TextDocumentHoverName;
    public static string TextDocumentOnTypeFormattingName;
    public static string TextDocumentRangeFormattingName;
    public static string TextDocumentPublishDiagnosticsName;
    public static string TextDocumentImplementationName;
    public static string TextDocumentInlayHintName;
    public static string InlayHintResolveName;
    public static string TextDocumentTypeDefinitionName;
    public static string TextDocumentReferencesName;
    public static string TextDocumentRenameName;
    public static string TextDocumentPrepareRenameName;
    public static string TextDocumentSemanticTokensFullName;
    public static string TextDocumentSemanticTokensRangeName;
    public static string TextDocumentSemanticTokensFullDeltaName;
    public static string TextDocumentSignatureHelpName;
    public static string TextDocumentWillSaveName;
    public static string TextDocumentWillSaveWaitUntilName;
    public static string TextDocumentLinkedEditingRangeName;
    public static string WindowLogMessageName;
    public static string WindowShowMessageName;
    public static string WindowShowMessageRequestName;
    public static string WorkspaceApplyEditName;
    public static string WorkspaceSemanticTokensRefreshName;
    public static string WorkspaceConfigurationName;
    public static string WorkspaceDiagnosticName;
    public static string WorkspaceDiagnosticRefreshName;
    public static string WorkspaceDidChangeConfigurationName;
    public static string WorkspaceExecuteCommandName;
    public static string WorkspaceSymbolName;
    public static string WorkspaceDidChangeWatchedFilesName;
    public static string WorkspaceCodeLensRefreshName;
    public static string WorkspaceInlayHintRefreshName;
    public static string ShutdownName;
    public static string ExitName;
    public static string TelemetryEventName;
    public static string ClientRegisterCapabilityName;
    public static string ClientUnregisterCapabilityName;
    public static LspRequest`2<InitializeParams, InitializeResult> Initialize;
    public static LspNotification`1<InitializedParams> Initialized;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<CodeActionParams, SumType`2[]> TextDocumentCodeAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<CodeLensParams, CodeLens[]> TextDocumentCodeLens;
    public static LspRequest`2<CodeAction, CodeAction> CodeActionResolve;
    public static LspRequest`2<CodeLens, CodeLens> CodeLensResolve;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<CompletionParams, Nullable`1<SumType`2<CompletionItem[], CompletionList>>> TextDocumentCompletion;
    public static LspRequest`2<CompletionItem, CompletionItem> TextDocumentCompletionResolve;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<TextDocumentPositionParams, Nullable`1<SumType`2<Location, Location[]>>> TextDocumentDefinition;
    public static LspNotification`1<DidOpenTextDocumentParams> TextDocumentDidOpen;
    public static LspNotification`1<DidCloseTextDocumentParams> TextDocumentDidClose;
    public static LspNotification`1<DidChangeTextDocumentParams> TextDocumentDidChange;
    public static LspNotification`1<DidSaveTextDocumentParams> TextDocumentDidSave;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<DocumentHighlightParams, DocumentHighlight[]> TextDocumentDocumentHighlight;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<DocumentLinkParams, DocumentLink[]> TextDocumentDocumentLink;
    public static LspRequest`2<DocumentLink, DocumentLink> DocumentLinkResolve;
    public static LspRequest`2<DocumentColorParams, ColorInformation[]> DocumentColorRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<DocumentSymbolParams, SymbolInformation[]> TextDocumentDocumentSymbol;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<FoldingRangeParams, FoldingRange[]> TextDocumentFoldingRange;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<DocumentFormattingParams, TextEdit[]> TextDocumentFormatting;
    public static LspRequest`2<TextDocumentPositionParams, Hover> TextDocumentHover;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<DocumentOnTypeFormattingParams, TextEdit[]> TextDocumentOnTypeFormatting;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<DocumentRangeFormattingParams, TextEdit[]> TextDocumentRangeFormatting;
    public static LspNotification`1<PublishDiagnosticParams> TextDocumentPublishDiagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<TextDocumentPositionParams, Nullable`1<SumType`2<Location, Location[]>>> TextDocumentImplementation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<InlayHintParams, InlayHint[]> TextDocumentInlayHint;
    public static LspRequest`2<InlayHint, InlayHint> InlayHintResolve;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<TextDocumentPositionParams, Nullable`1<SumType`2<Location, Location[]>>> TextDocumentTypeDefinition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<ReferenceParams, Location[]> TextDocumentReferences;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<RenameParams, WorkspaceEdit> TextDocumentRename;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<PrepareRenameParams, Nullable`1<SumType`3<RenameRange, DefaultBehaviorPrepareRename, Range>>> TextDocumentPrepareRename;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<SignatureHelpParams, SignatureHelp> TextDocumentSignatureHelp;
    public static LspNotification`1<WillSaveTextDocumentParams> TextDocumentWillSave;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<WillSaveTextDocumentParams, TextEdit[]> TextDocumentWillSaveWaitUntil;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<LinkedEditingRangeParams, LinkedEditingRanges> TextDocumentLinkedEditingRange;
    public static LspNotification`1<LogMessageParams> WindowLogMessage;
    public static LspNotification`1<ShowMessageParams> WindowShowMessage;
    public static LspRequest`2<ShowMessageRequestParams, MessageActionItem> WindowShowMessageRequest;
    public static LspRequest`2<ApplyWorkspaceEditParams, ApplyWorkspaceEditResponse> WorkspaceApplyEdit;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<object, object> WorkspaceSemanticTokensRefresh;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<ConfigurationParams, Object[]> WorkspaceConfiguration;
    public static LspNotification`1<DidChangeConfigurationParams> WorkspaceDidChangeConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<ExecuteCommandParams, object> WorkspaceExecuteCommand;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<WorkspaceSymbolParams, SymbolInformation[]> WorkspaceSymbol;
    public static LspNotification`1<DidChangeWatchedFilesParams> WorkspaceDidChangeWatchedFiles;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<object, object> WorkspaceCodeLensRefresh;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<object, object> WorkspaceInlayHintRefresh;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<object, object> Shutdown;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspNotification`1<object> Exit;
    public static LspNotification`1<object> TelemetryEvent;
    public static LspRequest`2<RegistrationParams, object> ClientRegisterCapability;
    public static LspRequest`2<UnregistrationParams, object> ClientUnregisterCapability;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<SemanticTokensParams, SemanticTokens> TextDocumentSemanticTokensFull;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<SemanticTokensRangeParams, SemanticTokens> TextDocumentSemanticTokensRange;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<SemanticTokensDeltaParams, Nullable`1<SumType`2<SemanticTokens, SemanticTokensDelta>>> TextDocumentSemanticTokensFullDelta;
    private static Methods();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.ObjectContentConverter : JsonConverter {
    public static string TypeProperty;
    public static ObjectContentConverter Instance;
    private static ObjectContentConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.OptimizedVSCompletionListJsonConverter")]
internal class Roslyn.LanguageServer.Protocol.OptimizedVSCompletionList : VSInternalCompletionList {
    public OptimizedVSCompletionList(VSInternalCompletionList completionList);
    public OptimizedVSCompletionList(CompletionList completionList);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.OptimizedVSCompletionListJsonConverter : JsonConverter {
    public static OptimizedVSCompletionListJsonConverter Instance;
    private static ConcurrentDictionary`2<ImageId, string> IconRawJson;
    public bool CanRead { get; }
    private static OptimizedVSCompletionListJsonConverter();
    public virtual bool get_CanRead();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private static void WriteCompletionItem(JsonWriter writer, CompletionItem completionItem, JsonSerializer serializer, Dictionary`2<object, string> itemRawJsonCache);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier : TextDocumentIdentifier {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Version>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> Version { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<int> value);
    [NullableContextAttribute("2")]
public static bool op_Equality(OptionalVersionedTextDocumentIdentifier value1, OptionalVersionedTextDocumentIdentifier value2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(OptionalVersionedTextDocumentIdentifier value1, OptionalVersionedTextDocumentIdentifier value2);
    public sealed virtual bool Equals(OptionalVersionedTextDocumentIdentifier other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ParameterInformationConverter")]
internal class Roslyn.LanguageServer.Protocol.ParameterInformation : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private SumType`2<string, Tuple`2<int, int>> <Label>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<string, MarkupContent>> <Documentation>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public SumType`2<string, Tuple`2<int, int>> Label { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> Documentation { get; public set; }
    [CompilerGeneratedAttribute]
public SumType`2<string, Tuple`2<int, int>> get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(SumType`2<string, Tuple`2<int, int>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> get_Documentation();
    [CompilerGeneratedAttribute]
public void set_Documentation(Nullable`1<SumType`2<string, MarkupContent>> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.ParameterInformationConverter : JsonConverter {
    public bool CanWrite { get; }
    public virtual bool get_CanWrite();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ParameterInformationSetting : object {
    [CompilerGeneratedAttribute]
private bool <LabelOffsetSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool LabelOffsetSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_LabelOffsetSupport();
    [CompilerGeneratedAttribute]
public void set_LabelOffsetSupport(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Position : object {
    [CompilerGeneratedAttribute]
private int <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Character>k__BackingField;
    [DataMemberAttribute]
public int Line { get; public set; }
    [DataMemberAttribute]
public int Character { get; public set; }
    public Position(int line, int character);
    [CompilerGeneratedAttribute]
public int get_Line();
    [CompilerGeneratedAttribute]
public void set_Line(int value);
    [CompilerGeneratedAttribute]
public int get_Character();
    [CompilerGeneratedAttribute]
public void set_Character(int value);
    public static bool op_Equality(Position firstPosition, Position secondPosition);
    public static bool op_Inequality(Position firstPosition, Position secondPosition);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Position other);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.PrepareRenameParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <Position>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Position Position { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Position get_Position();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Position(Position value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.PrepareSupportDefaultBehavior : Enum {
    public int value__;
    public static PrepareSupportDefaultBehavior Identifier;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.PreviousResultId : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.PublishDiagnosticParams : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Diagnostic[] <Diagnostics>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [DataMemberAttribute]
public Diagnostic[] Diagnostics { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public Diagnostic[] get_Diagnostics();
    [CompilerGeneratedAttribute]
public void set_Diagnostics(Diagnostic[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.PublishDiagnosticsSetting : object {
    [CompilerGeneratedAttribute]
private TagSupport <TagSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public TagSupport TagSupport { get; public set; }
    [CompilerGeneratedAttribute]
public TagSupport get_TagSupport();
    [CompilerGeneratedAttribute]
public void set_TagSupport(TagSupport value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Range : object {
    [CompilerGeneratedAttribute]
private Position <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <End>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Position Start { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Position End { get; public set; }
    [CompilerGeneratedAttribute]
public Position get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(Position value);
    [CompilerGeneratedAttribute]
public Position get_End();
    [CompilerGeneratedAttribute]
public void set_End(Position value);
    [NullableContextAttribute("2")]
public static bool op_Equality(Range value1, Range value2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(Range value1, Range value2);
    public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ReferenceContext : object {
    [CompilerGeneratedAttribute]
private bool <IncludeDeclaration>k__BackingField;
    [DataMemberAttribute]
public bool IncludeDeclaration { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IncludeDeclaration();
    [CompilerGeneratedAttribute]
public void set_IncludeDeclaration(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ReferenceOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ReferenceParams : TextDocumentPositionParams {
    [CompilerGeneratedAttribute]
private ReferenceContext <Context>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<object> <PartialResultToken>k__BackingField;
    [DataMemberAttribute]
public ReferenceContext Context { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<object> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(ReferenceContext value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<object> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.RegexConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Registration : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <RegisterOptions>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Method { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public object RegisterOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_RegisterOptions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RegisterOptions(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.RegistrationParams : object {
    [CompilerGeneratedAttribute]
private Registration[] <Registrations>k__BackingField;
    [DataMemberAttribute]
public Registration[] Registrations { get; public set; }
    [CompilerGeneratedAttribute]
public Registration[] get_Registrations();
    [CompilerGeneratedAttribute]
public void set_Registrations(Registration[] value);
}
[DataContractAttribute]
[KindAttribute("full", "kind")]
internal class Roslyn.LanguageServer.Protocol.RelatedFullDocumentDiagnosticReport : FullDocumentDiagnosticReport {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> <RelatedDocuments>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> RelatedDocuments { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> get_RelatedDocuments();
    [CompilerGeneratedAttribute]
public void set_RelatedDocuments(Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> value);
}
[DataContractAttribute]
[KindAttribute("unchanged", "kind")]
internal class Roslyn.LanguageServer.Protocol.RelatedUnchangedDocumentDiagnosticReport : UnchangedDocumentDiagnosticReport {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> <RelatedDocuments>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> RelatedDocuments { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> get_RelatedDocuments();
    [CompilerGeneratedAttribute]
public void set_RelatedDocuments(Dictionary`2<Uri, SumType`2<FullDocumentDiagnosticReport, UnchangedDocumentDiagnosticReport>> value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.RenameClientCapabilities : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private bool <PrepareSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PrepareSupportDefaultBehavior> <PrepareSupportDefaultBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HonorsChangeAnnotations>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool PrepareSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<PrepareSupportDefaultBehavior> PrepareSupportDefaultBehavior { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool HonorsChangeAnnotations { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_PrepareSupport();
    [CompilerGeneratedAttribute]
public void set_PrepareSupport(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<PrepareSupportDefaultBehavior> get_PrepareSupportDefaultBehavior();
    [CompilerGeneratedAttribute]
public void set_PrepareSupportDefaultBehavior(Nullable`1<PrepareSupportDefaultBehavior> value);
    [CompilerGeneratedAttribute]
public bool get_HonorsChangeAnnotations();
    [CompilerGeneratedAttribute]
public void set_HonorsChangeAnnotations(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[KindAttribute("rename", "kind")]
internal class Roslyn.LanguageServer.Protocol.RenameFile : object {
    [CompilerGeneratedAttribute]
private Uri <OldUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <NewUri>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RenameFileOptions <Options>k__BackingField;
    [DataMemberAttribute]
public string Kind { get; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri OldUri { get; public set; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri NewUri { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public RenameFileOptions Options { get; public set; }
    public string get_Kind();
    [CompilerGeneratedAttribute]
public Uri get_OldUri();
    [CompilerGeneratedAttribute]
public void set_OldUri(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_NewUri();
    [CompilerGeneratedAttribute]
public void set_NewUri(Uri value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RenameFileOptions get_Options();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Options(RenameFileOptions value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.RenameFileOptions : object {
    [CompilerGeneratedAttribute]
private bool <Overwrite>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExists>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Overwrite { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IgnoreIfExists { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Overwrite();
    [CompilerGeneratedAttribute]
public void set_Overwrite(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreIfExists();
    [CompilerGeneratedAttribute]
public void set_IgnoreIfExists(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.RenameOptions : object {
    [CompilerGeneratedAttribute]
private bool <PrepareProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool PrepareProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_PrepareProvider();
    [CompilerGeneratedAttribute]
public void set_PrepareProvider(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.RenameParams : TextDocumentPositionParams {
    [CompilerGeneratedAttribute]
private string <NewName>k__BackingField;
    [DataMemberAttribute]
public string NewName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NewName();
    [CompilerGeneratedAttribute]
public void set_NewName(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.RenameRange : object {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Placeholder>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Placeholder { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public string get_Placeholder();
    [CompilerGeneratedAttribute]
public void set_Placeholder(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ResolveSupportSetting : object {
    [CompilerGeneratedAttribute]
private String[] <Properties>k__BackingField;
    [DataMemberAttribute]
public String[] Properties { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(String[] value);
}
[IsReadOnlyAttribute]
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1<Roslyn.LanguageServer.Protocol.ResourceOperationKind>")]
[TypeConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1/TypeConverter<Roslyn.LanguageServer.Protocol.ResourceOperationKind>")]
internal class Roslyn.LanguageServer.Protocol.ResourceOperationKind : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static ResourceOperationKind Create;
    public static ResourceOperationKind Rename;
    public static ResourceOperationKind Delete;
    [NullableAttribute("1")]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public ResourceOperationKind(string Value);
    private static ResourceOperationKind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ResourceOperationKind left, ResourceOperationKind right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ResourceOperationKind left, ResourceOperationKind right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ResourceOperationKind other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SaveOptions : object {
    [CompilerGeneratedAttribute]
private bool <IncludeText>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IncludeText { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IncludeText();
    [CompilerGeneratedAttribute]
public void set_IncludeText(bool value);
}
[IsReadOnlyAttribute]
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1<Roslyn.LanguageServer.Protocol.SemanticTokenFormat>")]
[TypeConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1/TypeConverter<Roslyn.LanguageServer.Protocol.SemanticTokenFormat>")]
internal class Roslyn.LanguageServer.Protocol.SemanticTokenFormat : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static SemanticTokenFormat Relative;
    [NullableAttribute("1")]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public SemanticTokenFormat(string Value);
    private static SemanticTokenFormat();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(SemanticTokenFormat left, SemanticTokenFormat right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(SemanticTokenFormat left, SemanticTokenFormat right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(SemanticTokenFormat other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.SemanticTokenModifiers : object {
    public static string Declaration;
    public static string Definition;
    public static string Readonly;
    public static string Static;
    public static string Deprecated;
    public static string Abstract;
    public static string Async;
    public static string Modification;
    public static string Documentation;
    public static string DefaultLibrary;
    public static IReadOnlyList`1<string> AllModifiers;
    private static SemanticTokenModifiers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokens : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Data>k__BackingField;
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string ResultId { get; public set; }
    [DataMemberAttribute]
public Int32[] Data { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ResultId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ResultId(string value);
    [CompilerGeneratedAttribute]
public Int32[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Int32[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensDelta : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private SemanticTokensEdit[] <Edits>k__BackingField;
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string ResultId { get; public set; }
    [DataMemberAttribute]
public SemanticTokensEdit[] Edits { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ResultId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ResultId(string value);
    [CompilerGeneratedAttribute]
public SemanticTokensEdit[] get_Edits();
    [CompilerGeneratedAttribute]
public void set_Edits(SemanticTokensEdit[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensDeltaParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreviousResultId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<SemanticTokensDeltaPartialResult> <PartialResultToken>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public string PreviousResultId { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<SemanticTokensDeltaPartialResult> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public string get_PreviousResultId();
    [CompilerGeneratedAttribute]
public void set_PreviousResultId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<SemanticTokensDeltaPartialResult> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<SemanticTokensDeltaPartialResult> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensDeltaPartialResult : object {
    [CompilerGeneratedAttribute]
private SemanticTokensEdit[] <Edits>k__BackingField;
    [DataMemberAttribute]
public SemanticTokensEdit[] Edits { get; public set; }
    [CompilerGeneratedAttribute]
public SemanticTokensEdit[] get_Edits();
    [CompilerGeneratedAttribute]
public void set_Edits(SemanticTokensEdit[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensEdit : object {
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DeleteCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Data>k__BackingField;
    [DataMemberAttribute]
public int Start { get; public set; }
    [DataMemberAttribute]
public int DeleteCount { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Int32[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public int get_DeleteCount();
    [CompilerGeneratedAttribute]
public void set_DeleteCount(int value);
    [CompilerGeneratedAttribute]
public Int32[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Int32[] value);
    public sealed virtual int CompareTo(SemanticTokensEdit other);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensFullOptions : object {
    [CompilerGeneratedAttribute]
private bool <Delta>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Delta { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Delta();
    [CompilerGeneratedAttribute]
public void set_Delta(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensLegend : object {
    [CompilerGeneratedAttribute]
private String[] <TokenTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TokenModifiers>k__BackingField;
    [DataMemberAttribute]
public String[] TokenTypes { get; public set; }
    [DataMemberAttribute]
public String[] TokenModifiers { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_TokenTypes();
    [CompilerGeneratedAttribute]
public void set_TokenTypes(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_TokenModifiers();
    [CompilerGeneratedAttribute]
public void set_TokenModifiers(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensOptions : object {
    [CompilerGeneratedAttribute]
private SemanticTokensLegend <Legend>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, object>> <Range>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, SemanticTokensFullOptions>> <Full>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
public SemanticTokensLegend Legend { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, object>> Range { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, SemanticTokensFullOptions>> Full { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public SemanticTokensLegend get_Legend();
    [CompilerGeneratedAttribute]
public void set_Legend(SemanticTokensLegend value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, object>> get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Nullable`1<SumType`2<bool, object>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, SemanticTokensFullOptions>> get_Full();
    [CompilerGeneratedAttribute]
public void set_Full(Nullable`1<SumType`2<bool, SemanticTokensFullOptions>> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<SemanticTokensPartialResult> <PartialResultToken>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<SemanticTokensPartialResult> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<SemanticTokensPartialResult> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<SemanticTokensPartialResult> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensPartialResult : object {
    [CompilerGeneratedAttribute]
private Int32[] <Data>k__BackingField;
    [DataMemberAttribute]
public Int32[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public Int32[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Int32[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensRangeParams : SemanticTokensParams {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [DataMemberAttribute]
public Range Range { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensRequestsFullSetting : object {
    [CompilerGeneratedAttribute]
private bool <Delta>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Delta { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Delta();
    [CompilerGeneratedAttribute]
public void set_Delta(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensRequestsSetting : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, object>> <Range>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, SemanticTokensRequestsFullSetting>> <Full>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, object>> Range { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, SemanticTokensRequestsFullSetting>> Full { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, object>> get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Nullable`1<SumType`2<bool, object>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, SemanticTokensRequestsFullSetting>> get_Full();
    [CompilerGeneratedAttribute]
public void set_Full(Nullable`1<SumType`2<bool, SemanticTokensRequestsFullSetting>> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private SemanticTokensRequestsSetting <Requests>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TokenTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TokenModifiers>k__BackingField;
    [CompilerGeneratedAttribute]
private SemanticTokenFormat[] <Formats>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OverlappingTokenSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MultilineTokenSupport>k__BackingField;
    [DataMemberAttribute]
public SemanticTokensRequestsSetting Requests { get; public set; }
    [DataMemberAttribute]
public String[] TokenTypes { get; public set; }
    [DataMemberAttribute]
public String[] TokenModifiers { get; public set; }
    [DataMemberAttribute]
public SemanticTokenFormat[] Formats { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool OverlappingTokenSupport { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool MultilineTokenSupport { get; public set; }
    [CompilerGeneratedAttribute]
public SemanticTokensRequestsSetting get_Requests();
    [CompilerGeneratedAttribute]
public void set_Requests(SemanticTokensRequestsSetting value);
    [CompilerGeneratedAttribute]
public String[] get_TokenTypes();
    [CompilerGeneratedAttribute]
public void set_TokenTypes(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_TokenModifiers();
    [CompilerGeneratedAttribute]
public void set_TokenModifiers(String[] value);
    [CompilerGeneratedAttribute]
public SemanticTokenFormat[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(SemanticTokenFormat[] value);
    [CompilerGeneratedAttribute]
public bool get_OverlappingTokenSupport();
    [CompilerGeneratedAttribute]
public void set_OverlappingTokenSupport(bool value);
    [CompilerGeneratedAttribute]
public bool get_MultilineTokenSupport();
    [CompilerGeneratedAttribute]
public void set_MultilineTokenSupport(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SemanticTokensWorkspaceSetting : object {
    [CompilerGeneratedAttribute]
private bool <RefreshSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool RefreshSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RefreshSupport();
    [CompilerGeneratedAttribute]
public void set_RefreshSupport(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.SemanticTokenTypes : object {
    public static string Namespace;
    public static string Type;
    public static string Class;
    public static string Enum;
    public static string Interface;
    public static string Struct;
    public static string TypeParameter;
    public static string Parameter;
    public static string Variable;
    public static string Property;
    public static string EnumMember;
    public static string Event;
    public static string Function;
    public static string Method;
    public static string Macro;
    public static string Keyword;
    public static string Modifier;
    public static string Comment;
    public static string String;
    public static string Number;
    public static string Regexp;
    public static string Operator;
    public static IReadOnlyList`1<string> AllTypes;
    private static SemanticTokenTypes();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ServerCapabilities : object {
    [CompilerGeneratedAttribute]
private TextDocumentSyncOptions <TextDocumentSync>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionOptions <CompletionProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, HoverOptions>> <HoverProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private SignatureHelpOptions <SignatureHelpProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, DefinitionOptions>> <DefinitionProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, TypeDefinitionOptions>> <TypeDefinitionProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, ImplementationOptions>> <ImplementationProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, ReferenceOptions>> <ReferencesProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, DocumentHighlightOptions>> <DocumentHighlightProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, DocumentSymbolOptions>> <DocumentSymbolProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, CodeActionOptions>> <CodeActionProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeLensOptions <CodeLensProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentLinkOptions <DocumentLinkProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, DocumentColorOptions>> <DocumentColorProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, DocumentFormattingOptions>> <DocumentFormattingProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, DocumentRangeFormattingOptions>> <DocumentRangeFormattingProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentOnTypeFormattingOptions <DocumentOnTypeFormattingProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, RenameOptions>> <RenameProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, FoldingRangeOptions>> <FoldingRangeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ExecuteCommandOptions <ExecuteCommandProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, WorkspaceSymbolOptions>> <WorkspaceSymbolProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Experimental>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, LinkedEditingRangeOptions>> <LinkedEditingRangeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private SemanticTokensOptions <SemanticTokensOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private DiagnosticOptions <DiagnosticOptions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, InlayHintOptions>> <InlayHintOptions>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.TextDocumentSyncConverter")]
public TextDocumentSyncOptions TextDocumentSync { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionOptions CompletionProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, HoverOptions>> HoverProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SignatureHelpOptions SignatureHelpProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, DefinitionOptions>> DefinitionProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, TypeDefinitionOptions>> TypeDefinitionProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, ImplementationOptions>> ImplementationProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, ReferenceOptions>> ReferencesProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, DocumentHighlightOptions>> DocumentHighlightProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, DocumentSymbolOptions>> DocumentSymbolProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, CodeActionOptions>> CodeActionProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CodeLensOptions CodeLensProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DocumentLinkOptions DocumentLinkProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, DocumentColorOptions>> DocumentColorProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, DocumentFormattingOptions>> DocumentFormattingProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, DocumentRangeFormattingOptions>> DocumentRangeFormattingProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DocumentOnTypeFormattingOptions DocumentOnTypeFormattingProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, RenameOptions>> RenameProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, FoldingRangeOptions>> FoldingRangeProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public ExecuteCommandOptions ExecuteCommandProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, WorkspaceSymbolOptions>> WorkspaceSymbolProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public object Experimental { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, LinkedEditingRangeOptions>> LinkedEditingRangeProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SemanticTokensOptions SemanticTokensOptions { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DiagnosticOptions DiagnosticOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, InlayHintOptions>> InlayHintOptions { get; public set; }
    [CompilerGeneratedAttribute]
public TextDocumentSyncOptions get_TextDocumentSync();
    [CompilerGeneratedAttribute]
public void set_TextDocumentSync(TextDocumentSyncOptions value);
    [CompilerGeneratedAttribute]
public CompletionOptions get_CompletionProvider();
    [CompilerGeneratedAttribute]
public void set_CompletionProvider(CompletionOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, HoverOptions>> get_HoverProvider();
    [CompilerGeneratedAttribute]
public void set_HoverProvider(Nullable`1<SumType`2<bool, HoverOptions>> value);
    [CompilerGeneratedAttribute]
public SignatureHelpOptions get_SignatureHelpProvider();
    [CompilerGeneratedAttribute]
public void set_SignatureHelpProvider(SignatureHelpOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, DefinitionOptions>> get_DefinitionProvider();
    [CompilerGeneratedAttribute]
public void set_DefinitionProvider(Nullable`1<SumType`2<bool, DefinitionOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, TypeDefinitionOptions>> get_TypeDefinitionProvider();
    [CompilerGeneratedAttribute]
public void set_TypeDefinitionProvider(Nullable`1<SumType`2<bool, TypeDefinitionOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, ImplementationOptions>> get_ImplementationProvider();
    [CompilerGeneratedAttribute]
public void set_ImplementationProvider(Nullable`1<SumType`2<bool, ImplementationOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, ReferenceOptions>> get_ReferencesProvider();
    [CompilerGeneratedAttribute]
public void set_ReferencesProvider(Nullable`1<SumType`2<bool, ReferenceOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, DocumentHighlightOptions>> get_DocumentHighlightProvider();
    [CompilerGeneratedAttribute]
public void set_DocumentHighlightProvider(Nullable`1<SumType`2<bool, DocumentHighlightOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, DocumentSymbolOptions>> get_DocumentSymbolProvider();
    [CompilerGeneratedAttribute]
public void set_DocumentSymbolProvider(Nullable`1<SumType`2<bool, DocumentSymbolOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, CodeActionOptions>> get_CodeActionProvider();
    [CompilerGeneratedAttribute]
public void set_CodeActionProvider(Nullable`1<SumType`2<bool, CodeActionOptions>> value);
    [CompilerGeneratedAttribute]
public CodeLensOptions get_CodeLensProvider();
    [CompilerGeneratedAttribute]
public void set_CodeLensProvider(CodeLensOptions value);
    [CompilerGeneratedAttribute]
public DocumentLinkOptions get_DocumentLinkProvider();
    [CompilerGeneratedAttribute]
public void set_DocumentLinkProvider(DocumentLinkOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, DocumentColorOptions>> get_DocumentColorProvider();
    [CompilerGeneratedAttribute]
public void set_DocumentColorProvider(Nullable`1<SumType`2<bool, DocumentColorOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, DocumentFormattingOptions>> get_DocumentFormattingProvider();
    [CompilerGeneratedAttribute]
public void set_DocumentFormattingProvider(Nullable`1<SumType`2<bool, DocumentFormattingOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, DocumentRangeFormattingOptions>> get_DocumentRangeFormattingProvider();
    [CompilerGeneratedAttribute]
public void set_DocumentRangeFormattingProvider(Nullable`1<SumType`2<bool, DocumentRangeFormattingOptions>> value);
    [CompilerGeneratedAttribute]
public DocumentOnTypeFormattingOptions get_DocumentOnTypeFormattingProvider();
    [CompilerGeneratedAttribute]
public void set_DocumentOnTypeFormattingProvider(DocumentOnTypeFormattingOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, RenameOptions>> get_RenameProvider();
    [CompilerGeneratedAttribute]
public void set_RenameProvider(Nullable`1<SumType`2<bool, RenameOptions>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, FoldingRangeOptions>> get_FoldingRangeProvider();
    [CompilerGeneratedAttribute]
public void set_FoldingRangeProvider(Nullable`1<SumType`2<bool, FoldingRangeOptions>> value);
    [CompilerGeneratedAttribute]
public ExecuteCommandOptions get_ExecuteCommandProvider();
    [CompilerGeneratedAttribute]
public void set_ExecuteCommandProvider(ExecuteCommandOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, WorkspaceSymbolOptions>> get_WorkspaceSymbolProvider();
    [CompilerGeneratedAttribute]
public void set_WorkspaceSymbolProvider(Nullable`1<SumType`2<bool, WorkspaceSymbolOptions>> value);
    [CompilerGeneratedAttribute]
public object get_Experimental();
    [CompilerGeneratedAttribute]
public void set_Experimental(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, LinkedEditingRangeOptions>> get_LinkedEditingRangeProvider();
    [CompilerGeneratedAttribute]
public void set_LinkedEditingRangeProvider(Nullable`1<SumType`2<bool, LinkedEditingRangeOptions>> value);
    [CompilerGeneratedAttribute]
public SemanticTokensOptions get_SemanticTokensOptions();
    [CompilerGeneratedAttribute]
public void set_SemanticTokensOptions(SemanticTokensOptions value);
    [CompilerGeneratedAttribute]
public DiagnosticOptions get_DiagnosticOptions();
    [CompilerGeneratedAttribute]
public void set_DiagnosticOptions(DiagnosticOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, InlayHintOptions>> get_InlayHintOptions();
    [CompilerGeneratedAttribute]
public void set_InlayHintOptions(Nullable`1<SumType`2<bool, InlayHintOptions>> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ShowMessageParams : object {
    [CompilerGeneratedAttribute]
private MessageType <MessageType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [DataMemberAttribute]
public MessageType MessageType { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public MessageType get_MessageType();
    [CompilerGeneratedAttribute]
public void set_MessageType(MessageType value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.ShowMessageRequestParams : ShowMessageParams {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private MessageActionItem[] <Actions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public MessageActionItem[] Actions { get; public set; }
    [CompilerGeneratedAttribute]
public MessageActionItem[] get_Actions();
    [CompilerGeneratedAttribute]
public void set_Actions(MessageActionItem[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SignatureHelp : object {
    [CompilerGeneratedAttribute]
private SignatureInformation[] <Signatures>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ActiveSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ActiveParameter>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SignatureInformation[] Signatures { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> ActiveSignature { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> ActiveParameter { get; public set; }
    [CompilerGeneratedAttribute]
public SignatureInformation[] get_Signatures();
    [CompilerGeneratedAttribute]
public void set_Signatures(SignatureInformation[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ActiveSignature();
    [CompilerGeneratedAttribute]
public void set_ActiveSignature(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ActiveParameter();
    [CompilerGeneratedAttribute]
public void set_ActiveParameter(Nullable`1<int> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SignatureHelpContext : object {
    [CompilerGeneratedAttribute]
private SignatureHelpTriggerKind <TriggerKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TriggerCharacter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRetrigger>k__BackingField;
    [CompilerGeneratedAttribute]
private SignatureHelp <ActiveSignatureHelp>k__BackingField;
    [DataMemberAttribute]
public SignatureHelpTriggerKind TriggerKind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string TriggerCharacter { get; public set; }
    [DataMemberAttribute]
public bool IsRetrigger { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SignatureHelp ActiveSignatureHelp { get; public set; }
    [CompilerGeneratedAttribute]
public SignatureHelpTriggerKind get_TriggerKind();
    [CompilerGeneratedAttribute]
public void set_TriggerKind(SignatureHelpTriggerKind value);
    [CompilerGeneratedAttribute]
public string get_TriggerCharacter();
    [CompilerGeneratedAttribute]
public void set_TriggerCharacter(string value);
    [CompilerGeneratedAttribute]
public bool get_IsRetrigger();
    [CompilerGeneratedAttribute]
public void set_IsRetrigger(bool value);
    [CompilerGeneratedAttribute]
public SignatureHelp get_ActiveSignatureHelp();
    [CompilerGeneratedAttribute]
public void set_ActiveSignatureHelp(SignatureHelp value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SignatureHelpOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TriggerCharacters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <RetriggerCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] TriggerCharacters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] RetriggerCharacters { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_TriggerCharacters();
    [CompilerGeneratedAttribute]
public void set_TriggerCharacters(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_RetriggerCharacters();
    [CompilerGeneratedAttribute]
public void set_RetriggerCharacters(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SignatureHelpParams : TextDocumentPositionParams {
    [CompilerGeneratedAttribute]
private SignatureHelpContext <Context>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SignatureHelpContext Context { get; public set; }
    [CompilerGeneratedAttribute]
public SignatureHelpContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(SignatureHelpContext value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SignatureHelpSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private SignatureInformationSetting <SignatureInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContextSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SignatureInformationSetting SignatureInformation { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ContextSupport { get; public set; }
    [CompilerGeneratedAttribute]
public SignatureInformationSetting get_SignatureInformation();
    [CompilerGeneratedAttribute]
public void set_SignatureInformation(SignatureInformationSetting value);
    [CompilerGeneratedAttribute]
public bool get_ContextSupport();
    [CompilerGeneratedAttribute]
public void set_ContextSupport(bool value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.SignatureHelpTriggerKind : Enum {
    public int value__;
    public static SignatureHelpTriggerKind Invoked;
    public static SignatureHelpTriggerKind TriggerCharacter;
    public static SignatureHelpTriggerKind ContentChange;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SignatureInformation : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<string, MarkupContent>> <Documentation>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ParameterInformation[] <Parameters>k__BackingField;
    [DataMemberAttribute]
public string Label { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> Documentation { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public ParameterInformation[] Parameters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<string, MarkupContent>> get_Documentation();
    [CompilerGeneratedAttribute]
public void set_Documentation(Nullable`1<SumType`2<string, MarkupContent>> value);
    [CompilerGeneratedAttribute]
public ParameterInformation[] get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(ParameterInformation[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SignatureInformationSetting : object {
    [CompilerGeneratedAttribute]
private MarkupKind[] <DocumentationFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterInformationSetting <ParameterInformation>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public MarkupKind[] DocumentationFormat { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public ParameterInformationSetting ParameterInformation { get; public set; }
    [CompilerGeneratedAttribute]
public MarkupKind[] get_DocumentationFormat();
    [CompilerGeneratedAttribute]
public void set_DocumentationFormat(MarkupKind[] value);
    [CompilerGeneratedAttribute]
public ParameterInformationSetting get_ParameterInformation();
    [CompilerGeneratedAttribute]
public void set_ParameterInformation(ParameterInformationSetting value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.StringEnumConverter`1 : JsonConverter {
    private static Func`2<string, TStringEnumType> CreateEnum;
    private static StringEnumConverter`1();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.SumConverter : JsonConverter {
    private static ConcurrentDictionary`2<Type, SumTypeInfoCache> SumTypeCache;
    private static SumConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private static bool IsTokenCompatibleWithType(JsonReader reader, UnionTypeInfo unionTypeInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.SumConverter")]
internal class Roslyn.LanguageServer.Protocol.SumType`2 : ValueType {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [NullableAttribute("2")]
public object Value { get; }
    public T1 First { get; }
    public T2 Second { get; }
    private static SumType`2();
    public SumType`2(T1 val);
    public SumType`2(T2 val);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    public T1 get_First();
    public T2 get_Second();
    public static SumType`2<T1, T2> op_Implicit(T1 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`2<T1, T2>> op_Implicit(T1 val);
    public static SumType`2<T1, T2> op_Implicit(T2 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`2<T1, T2>> op_Implicit(T2 val);
    public static T1 op_Explicit(SumType`2<T1, T2> sum);
    public static T2 op_Explicit(SumType`2<T1, T2> sum);
    public static bool op_Equality(SumType`2<T1, T2> left, SumType`2<T1, T2> right);
    public static bool op_Inequality(SumType`2<T1, T2> left, SumType`2<T1, T2> right);
    public bool TryGetFirst(T1& value);
    public bool TryGetSecond(T2& value);
    public TResult Match(Func`2<T1, TResult> firstMatch, Func`2<T2, TResult> secondMatch, Func`1<TResult> defaultMatch);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SumType`2<T1, T2> other);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.SumConverter")]
internal class Roslyn.LanguageServer.Protocol.SumType`3 : ValueType {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [NullableAttribute("2")]
public object Value { get; }
    public T1 First { get; }
    public T2 Second { get; }
    public T3 Third { get; }
    private static SumType`3();
    public SumType`3(T1 val);
    public SumType`3(T2 val);
    public SumType`3(T3 val);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    public T1 get_First();
    public T2 get_Second();
    public T3 get_Third();
    public static SumType`3<T1, T2, T3> op_Implicit(T1 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`3<T1, T2, T3>> op_Implicit(T1 val);
    public static SumType`3<T1, T2, T3> op_Implicit(T2 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`3<T1, T2, T3>> op_Implicit(T2 val);
    public static SumType`3<T1, T2, T3> op_Implicit(T3 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`3<T1, T2, T3>> op_Implicit(T3 val);
    public static SumType`3<T1, T2, T3> op_Implicit(SumType`2<T1, T2> sum);
    public static SumType`2<T1, T2> op_Explicit(SumType`3<T1, T2, T3> sum);
    public static T1 op_Explicit(SumType`3<T1, T2, T3> sum);
    public static T2 op_Explicit(SumType`3<T1, T2, T3> sum);
    public static T3 op_Explicit(SumType`3<T1, T2, T3> sum);
    public static bool op_Equality(SumType`3<T1, T2, T3> left, SumType`3<T1, T2, T3> right);
    public static bool op_Inequality(SumType`3<T1, T2, T3> left, SumType`3<T1, T2, T3> right);
    public bool TryGetFirst(T1& value);
    public bool TryGetSecond(T2& value);
    public bool TryGetThird(T3& value);
    public TResult Match(Func`2<T1, TResult> firstMatch, Func`2<T2, TResult> secondMatch, Func`2<T3, TResult> thirdMatch, Func`1<TResult> defaultMatch);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SumType`3<T1, T2, T3> other);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.SumConverter")]
internal class Roslyn.LanguageServer.Protocol.SumType`4 : ValueType {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [NullableAttribute("2")]
public object Value { get; }
    public T1 First { get; }
    public T2 Second { get; }
    public T3 Third { get; }
    public T4 Fourth { get; }
    private static SumType`4();
    public SumType`4(T1 val);
    public SumType`4(T2 val);
    public SumType`4(T3 val);
    public SumType`4(T4 val);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    public T1 get_First();
    public T2 get_Second();
    public T3 get_Third();
    public T4 get_Fourth();
    public static SumType`4<T1, T2, T3, T4> op_Implicit(T1 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`4<T1, T2, T3, T4>> op_Implicit(T1 val);
    public static SumType`4<T1, T2, T3, T4> op_Implicit(T2 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`4<T1, T2, T3, T4>> op_Implicit(T2 val);
    public static SumType`4<T1, T2, T3, T4> op_Implicit(T3 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`4<T1, T2, T3, T4>> op_Implicit(T3 val);
    public static SumType`4<T1, T2, T3, T4> op_Implicit(T4 val);
    [NullableContextAttribute("2")]
public static Nullable`1<SumType`4<T1, T2, T3, T4>> op_Implicit(T4 val);
    public static SumType`4<T1, T2, T3, T4> op_Implicit(SumType`2<T1, T2> sum);
    public static SumType`4<T1, T2, T3, T4> op_Implicit(SumType`3<T1, T2, T3> sum);
    public static SumType`2<T1, T2> op_Explicit(SumType`4<T1, T2, T3, T4> sum);
    public static SumType`3<T1, T2, T3> op_Explicit(SumType`4<T1, T2, T3, T4> sum);
    public static T1 op_Explicit(SumType`4<T1, T2, T3, T4> sum);
    public static T2 op_Explicit(SumType`4<T1, T2, T3, T4> sum);
    public static T3 op_Explicit(SumType`4<T1, T2, T3, T4> sum);
    public static T4 op_Explicit(SumType`4<T1, T2, T3, T4> sum);
    public static bool op_Equality(SumType`4<T1, T2, T3, T4> left, SumType`4<T1, T2, T3, T4> right);
    public static bool op_Inequality(SumType`4<T1, T2, T3, T4> left, SumType`4<T1, T2, T3, T4> right);
    public bool TryGetFirst(T1& value);
    public bool TryGetSecond(T2& value);
    public bool TryGetThird(T3& value);
    public bool TryGetFourth(T4& value);
    public TResult Match(Func`2<T1, TResult> firstMatch, Func`2<T2, TResult> secondMatch, Func`2<T3, TResult> thirdMatch, Func`2<T4, TResult> fourthMatch, Func`1<TResult> defaultMatch);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SumType`4<T1, T2, T3, T4> other);
    public virtual int GetHashCode();
}
internal static class Roslyn.LanguageServer.Protocol.SumTypeUtils : object {
    [NullableContextAttribute("1")]
public static void ValidateTypeParameter(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SymbolInformation : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private SymbolKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public SymbolKind Kind { get; public set; }
    [DataMemberAttribute]
public Location Location { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string ContainerName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public SymbolKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(SymbolKind value);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Location value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ContainerName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ContainerName(string value);
    public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(SymbolInformation other);
    public virtual int GetHashCode();
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.SymbolKind : Enum {
    public int value__;
    public static SymbolKind File;
    public static SymbolKind Module;
    public static SymbolKind Namespace;
    public static SymbolKind Package;
    public static SymbolKind Class;
    public static SymbolKind Method;
    public static SymbolKind Property;
    public static SymbolKind Field;
    public static SymbolKind Constructor;
    public static SymbolKind Enum;
    public static SymbolKind Interface;
    public static SymbolKind Function;
    public static SymbolKind Variable;
    public static SymbolKind Constant;
    public static SymbolKind String;
    public static SymbolKind Number;
    public static SymbolKind Boolean;
    public static SymbolKind Array;
    public static SymbolKind Object;
    public static SymbolKind Key;
    public static SymbolKind Null;
    public static SymbolKind EnumMember;
    public static SymbolKind Struct;
    public static SymbolKind Event;
    public static SymbolKind Operator;
    public static SymbolKind TypeParameter;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SymbolKindSetting : object {
    [CompilerGeneratedAttribute]
private SymbolKind[] <ValueSet>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SymbolKind[] ValueSet { get; public set; }
    [CompilerGeneratedAttribute]
public SymbolKind[] get_ValueSet();
    [CompilerGeneratedAttribute]
public void set_ValueSet(SymbolKind[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SymbolSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private SymbolKindSetting <SymbolKind>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SymbolKindSetting SymbolKind { get; public set; }
    [CompilerGeneratedAttribute]
public SymbolKindSetting get_SymbolKind();
    [CompilerGeneratedAttribute]
public void set_SymbolKind(SymbolKindSetting value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.SynchronizationSetting : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private bool <WillSave>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WillSaveWaitUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DidSave>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WillSave { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WillSaveWaitUntil { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DidSave { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_WillSave();
    [CompilerGeneratedAttribute]
public void set_WillSave(bool value);
    [CompilerGeneratedAttribute]
public bool get_WillSaveWaitUntil();
    [CompilerGeneratedAttribute]
public void set_WillSaveWaitUntil(bool value);
    [CompilerGeneratedAttribute]
public bool get_DidSave();
    [CompilerGeneratedAttribute]
public void set_DidSave(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TagSupport : object {
    [CompilerGeneratedAttribute]
private DiagnosticTag[] <ValueSet>k__BackingField;
    [DataMemberAttribute]
public DiagnosticTag[] ValueSet { get; public set; }
    [CompilerGeneratedAttribute]
public DiagnosticTag[] get_ValueSet();
    [CompilerGeneratedAttribute]
public void set_ValueSet(DiagnosticTag[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities : object {
    [CompilerGeneratedAttribute]
private SynchronizationSetting <Synchronization>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionSetting <Completion>k__BackingField;
    [CompilerGeneratedAttribute]
private HoverSetting <Hover>k__BackingField;
    [CompilerGeneratedAttribute]
private SignatureHelpSetting <SignatureHelp>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <Definition>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <TypeDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <Implementation>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <References>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <DocumentHighlight>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentSymbolSetting <DocumentSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeActionSetting <CodeAction>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <CodeLens>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <DocumentLink>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <Formatting>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <RangeFormatting>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <OnTypeFormatting>k__BackingField;
    [CompilerGeneratedAttribute]
private RenameClientCapabilities <Rename>k__BackingField;
    [CompilerGeneratedAttribute]
private PublishDiagnosticsSetting <PublishDiagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private FoldingRangeSetting <FoldingRange>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private DynamicRegistrationSetting <LinkedEditingRange>k__BackingField;
    [CompilerGeneratedAttribute]
private SemanticTokensSetting <SemanticTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private DiagnosticSetting <Diagnostic>k__BackingField;
    [CompilerGeneratedAttribute]
private InlayHintSetting <InlayHint>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SynchronizationSetting Synchronization { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionSetting Completion { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public HoverSetting Hover { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SignatureHelpSetting SignatureHelp { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting Definition { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting TypeDefinition { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting Implementation { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting References { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting DocumentHighlight { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DocumentSymbolSetting DocumentSymbol { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CodeActionSetting CodeAction { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting CodeLens { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting DocumentLink { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting Formatting { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting RangeFormatting { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting OnTypeFormatting { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public RenameClientCapabilities Rename { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public PublishDiagnosticsSetting PublishDiagnostics { get; public set; }
    [DataMemberAttribute]
public FoldingRangeSetting FoldingRange { get; public set; }
    [NullableAttribute("1")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting LinkedEditingRange { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SemanticTokensSetting SemanticTokens { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DiagnosticSetting Diagnostic { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public InlayHintSetting InlayHint { get; public set; }
    [CompilerGeneratedAttribute]
public SynchronizationSetting get_Synchronization();
    [CompilerGeneratedAttribute]
public void set_Synchronization(SynchronizationSetting value);
    [CompilerGeneratedAttribute]
public CompletionSetting get_Completion();
    [CompilerGeneratedAttribute]
public void set_Completion(CompletionSetting value);
    [CompilerGeneratedAttribute]
public HoverSetting get_Hover();
    [CompilerGeneratedAttribute]
public void set_Hover(HoverSetting value);
    [CompilerGeneratedAttribute]
public SignatureHelpSetting get_SignatureHelp();
    [CompilerGeneratedAttribute]
public void set_SignatureHelp(SignatureHelpSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_Definition();
    [CompilerGeneratedAttribute]
public void set_Definition(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_TypeDefinition();
    [CompilerGeneratedAttribute]
public void set_TypeDefinition(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_Implementation();
    [CompilerGeneratedAttribute]
public void set_Implementation(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_References();
    [CompilerGeneratedAttribute]
public void set_References(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_DocumentHighlight();
    [CompilerGeneratedAttribute]
public void set_DocumentHighlight(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DocumentSymbolSetting get_DocumentSymbol();
    [CompilerGeneratedAttribute]
public void set_DocumentSymbol(DocumentSymbolSetting value);
    [CompilerGeneratedAttribute]
public CodeActionSetting get_CodeAction();
    [CompilerGeneratedAttribute]
public void set_CodeAction(CodeActionSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_CodeLens();
    [CompilerGeneratedAttribute]
public void set_CodeLens(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_DocumentLink();
    [CompilerGeneratedAttribute]
public void set_DocumentLink(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_Formatting();
    [CompilerGeneratedAttribute]
public void set_Formatting(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_RangeFormatting();
    [CompilerGeneratedAttribute]
public void set_RangeFormatting(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_OnTypeFormatting();
    [CompilerGeneratedAttribute]
public void set_OnTypeFormatting(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public RenameClientCapabilities get_Rename();
    [CompilerGeneratedAttribute]
public void set_Rename(RenameClientCapabilities value);
    [CompilerGeneratedAttribute]
public PublishDiagnosticsSetting get_PublishDiagnostics();
    [CompilerGeneratedAttribute]
public void set_PublishDiagnostics(PublishDiagnosticsSetting value);
    [CompilerGeneratedAttribute]
public FoldingRangeSetting get_FoldingRange();
    [CompilerGeneratedAttribute]
public void set_FoldingRange(FoldingRangeSetting value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_LinkedEditingRange();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_LinkedEditingRange(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public SemanticTokensSetting get_SemanticTokens();
    [CompilerGeneratedAttribute]
public void set_SemanticTokens(SemanticTokensSetting value);
    [CompilerGeneratedAttribute]
public DiagnosticSetting get_Diagnostic();
    [CompilerGeneratedAttribute]
public void set_Diagnostic(DiagnosticSetting value);
    [CompilerGeneratedAttribute]
public InlayHintSetting get_InlayHint();
    [CompilerGeneratedAttribute]
public void set_InlayHint(InlayHintSetting value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentContentChangeEvent : object {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RangeLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> RangeLength { get; public set; }
    [DataMemberAttribute]
public string Text { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RangeLength();
    [CompilerGeneratedAttribute]
public void set_RangeLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentEdit : object {
    [CompilerGeneratedAttribute]
private OptionalVersionedTextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private TextEdit[] <Edits>k__BackingField;
    [DataMemberAttribute]
public OptionalVersionedTextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public TextEdit[] Edits { get; public set; }
    [CompilerGeneratedAttribute]
public OptionalVersionedTextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(OptionalVersionedTextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public TextEdit[] get_Edits();
    [CompilerGeneratedAttribute]
public void set_Edits(TextEdit[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentIdentifier : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [NullableContextAttribute("2")]
public static bool op_Equality(TextDocumentIdentifier value1, TextDocumentIdentifier value2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(TextDocumentIdentifier value1, TextDocumentIdentifier value2);
    public sealed virtual bool Equals(TextDocumentIdentifier other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentItem : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [DataMemberAttribute]
public string LanguageId { get; public set; }
    [DataMemberAttribute]
public int Version { get; public set; }
    [DataMemberAttribute]
public string Text { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public string get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentPositionParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <Position>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Position Position { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Position get_Position();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Position(Position value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentRegistrationOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private DocumentFilter[] <DocumentSelector>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public DocumentFilter[] DocumentSelector { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DocumentFilter[] get_DocumentSelector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocumentSelector(DocumentFilter[] value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.TextDocumentSaveReason : Enum {
    public int value__;
    public static TextDocumentSaveReason Manual;
    public static TextDocumentSaveReason AfterDelay;
    public static TextDocumentSaveReason FocusOut;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.TextDocumentSyncConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.TextDocumentSyncKind : Enum {
    public int value__;
    public static TextDocumentSyncKind None;
    public static TextDocumentSyncKind Full;
    public static TextDocumentSyncKind Incremental;
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions : object {
    [CompilerGeneratedAttribute]
private bool <OpenClose>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TextDocumentSyncKind> <Change>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WillSave>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WillSaveWaitUntil>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<bool, SaveOptions>> <Save>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool OpenClose { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public Nullable`1<TextDocumentSyncKind> Change { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WillSave { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WillSaveWaitUntil { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<bool, SaveOptions>> Save { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_OpenClose();
    [CompilerGeneratedAttribute]
public void set_OpenClose(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TextDocumentSyncKind> get_Change();
    [CompilerGeneratedAttribute]
public void set_Change(Nullable`1<TextDocumentSyncKind> value);
    [CompilerGeneratedAttribute]
public bool get_WillSave();
    [CompilerGeneratedAttribute]
public void set_WillSave(bool value);
    [CompilerGeneratedAttribute]
public bool get_WillSaveWaitUntil();
    [CompilerGeneratedAttribute]
public void set_WillSaveWaitUntil(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<bool, SaveOptions>> get_Save();
    [CompilerGeneratedAttribute]
public void set_Save(Nullable`1<SumType`2<bool, SaveOptions>> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TextEdit : object {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewText>k__BackingField;
    [DataMemberAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
public string NewText { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public string get_NewText();
    [CompilerGeneratedAttribute]
public void set_NewText(string value);
}
[IsReadOnlyAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1<Roslyn.LanguageServer.Protocol.TraceSetting>")]
[TypeConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1/TypeConverter<Roslyn.LanguageServer.Protocol.TraceSetting>")]
internal class Roslyn.LanguageServer.Protocol.TraceSetting : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static TraceSetting Off;
    public static TraceSetting Messages;
    public static TraceSetting Verbose;
    [NullableAttribute("1")]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public TraceSetting(string Value);
    private static TraceSetting();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(TraceSetting left, TraceSetting right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(TraceSetting left, TraceSetting right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(TraceSetting other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.TypeDefinitionOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[KindAttribute("unchanged", "kind")]
internal class Roslyn.LanguageServer.Protocol.UnchangedDocumentDiagnosticReport : object {
    [CompilerGeneratedAttribute]
private string <ResultId>k__BackingField;
    [DataMemberAttribute]
public string Kind { get; }
    [DataMemberAttribute]
public string ResultId { get; public set; }
    public string get_Kind();
    [CompilerGeneratedAttribute]
public string get_ResultId();
    [CompilerGeneratedAttribute]
public void set_ResultId(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.Unregistration : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Method { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.UnregistrationParams : object {
    [CompilerGeneratedAttribute]
private Unregistration[] <Unregistrations>k__BackingField;
    [DataMemberAttribute]
public Unregistration[] Unregistrations { get; public set; }
    [CompilerGeneratedAttribute]
public Unregistration[] get_Unregistrations();
    [CompilerGeneratedAttribute]
public void set_Unregistrations(Unregistration[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier : TextDocumentIdentifier {
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [DataMemberAttribute]
public int Version { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [NullableContextAttribute("2")]
public static bool op_Equality(VersionedTextDocumentIdentifier value1, VersionedTextDocumentIdentifier value2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(VersionedTextDocumentIdentifier value1, VersionedTextDocumentIdentifier value2);
    public sealed virtual bool Equals(VersionedTextDocumentIdentifier other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSDiagnostic : Diagnostic {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private VSDiagnosticProjectInformation[] <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpandedMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolTip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DiagnosticType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VSDiagnosticRank> <DiagnosticRank>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OutputId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public VSDiagnosticProjectInformation[] Projects { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ExpandedMessage { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ToolTip { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Identifier { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string DiagnosticType { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<VSDiagnosticRank> DiagnosticRank { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> OutputId { get; public set; }
    [CompilerGeneratedAttribute]
public VSDiagnosticProjectInformation[] get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(VSDiagnosticProjectInformation[] value);
    [CompilerGeneratedAttribute]
public string get_ExpandedMessage();
    [CompilerGeneratedAttribute]
public void set_ExpandedMessage(string value);
    [CompilerGeneratedAttribute]
public string get_ToolTip();
    [CompilerGeneratedAttribute]
public void set_ToolTip(string value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_DiagnosticType();
    [CompilerGeneratedAttribute]
public void set_DiagnosticType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<VSDiagnosticRank> get_DiagnosticRank();
    [CompilerGeneratedAttribute]
public void set_DiagnosticRank(Nullable`1<VSDiagnosticRank> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OutputId();
    [CompilerGeneratedAttribute]
public void set_OutputId(Nullable`1<int> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSDiagnosticProjectInformation : object {
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectIdentifier>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ProjectName { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Context { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ProjectIdentifier { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectIdentifier();
    [CompilerGeneratedAttribute]
public void set_ProjectIdentifier(string value);
}
internal enum Roslyn.LanguageServer.Protocol.VSDiagnosticRank : Enum {
    public int value__;
    public static VSDiagnosticRank Highest;
    public static VSDiagnosticRank High;
    public static VSDiagnosticRank Default;
    public static VSDiagnosticRank Low;
    public static VSDiagnosticRank Lowest;
}
internal static class Roslyn.LanguageServer.Protocol.VSDiagnosticTags : object {
    public static DiagnosticTag BuildError;
    public static DiagnosticTag IntellisenseError;
    public static DiagnosticTag PotentialDuplicate;
    public static DiagnosticTag HiddenInErrorList;
    public static DiagnosticTag VisibleInErrorList;
    public static DiagnosticTag HiddenInEditor;
    public static DiagnosticTag SuppressEditorToolTip;
    public static DiagnosticTag EditAndContinueError;
    public static DiagnosticTag TaskItem;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.LanguageServer.Protocol.VSExtensionConverter`2 : JsonConverter {
    public bool CanWrite { get; }
    public virtual bool get_CanWrite();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[ExtensionAttribute]
internal static class Roslyn.LanguageServer.Protocol.VSExtensionUtilities : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddVSExtensionConverters(JsonSerializer serializer);
    [CompilerGeneratedAttribute]
internal static void <AddVSExtensionConverters>g__TryAddConverter|0_0(<>c__DisplayClass0_0& );
}
internal class Roslyn.LanguageServer.Protocol.VSFoldingRangeSetting : FoldingRangeSetting {
    [CompilerGeneratedAttribute]
private bool <RefreshSupport>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool RefreshSupport { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RefreshSupport();
    [CompilerGeneratedAttribute]
public void set_RefreshSupport(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSGetProjectContextsParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentItem <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentItem TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public TextDocumentItem get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentItem value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSImageId : object {
    [CompilerGeneratedAttribute]
private Guid <Guid>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [DataMemberAttribute]
public Guid Guid { get; public set; }
    [DataMemberAttribute]
public int Id { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Guid();
    [CompilerGeneratedAttribute]
public void set_Guid(Guid value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(VSImageId other);
    public virtual int GetHashCode();
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalClientCapabilities : ClientCapabilities {
    [CompilerGeneratedAttribute]
private bool <SupportsVisualStudioExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VSInternalSnippetSupportLevel> <SupportedSnippetVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsNotIncludingTextInTextDocumentDidOpen>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsIconExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsDiagnosticRequests>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SupportsVisualStudioExtensions { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<VSInternalSnippetSupportLevel> SupportedSnippetVersion { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SupportsNotIncludingTextInTextDocumentDidOpen { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SupportsIconExtensions { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SupportsDiagnosticRequests { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_SupportsVisualStudioExtensions();
    [CompilerGeneratedAttribute]
public void set_SupportsVisualStudioExtensions(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<VSInternalSnippetSupportLevel> get_SupportedSnippetVersion();
    [CompilerGeneratedAttribute]
public void set_SupportedSnippetVersion(Nullable`1<VSInternalSnippetSupportLevel> value);
    [CompilerGeneratedAttribute]
public bool get_SupportsNotIncludingTextInTextDocumentDidOpen();
    [CompilerGeneratedAttribute]
public void set_SupportsNotIncludingTextInTextDocumentDidOpen(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsIconExtensions();
    [CompilerGeneratedAttribute]
public void set_SupportsIconExtensions(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsDiagnosticRequests();
    [CompilerGeneratedAttribute]
public void set_SupportsDiagnosticRequests(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalClipboardContent : object {
    [CompilerGeneratedAttribute]
private string <MimeType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [DataMemberAttribute]
public string MimeType { get; public set; }
    [DataMemberAttribute]
public string Content { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MimeType();
    [CompilerGeneratedAttribute]
public void set_MimeType(string value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCodeAction : CodeAction {
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VSInternalPriorityLevel> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <ApplicableRange>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private VSInternalCodeAction[] <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <TelemetryId>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Group { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<VSInternalPriorityLevel> Priority { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range ApplicableRange { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalCodeAction[] Children { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<Guid> TelemetryId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<VSInternalPriorityLevel> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<VSInternalPriorityLevel> value);
    [CompilerGeneratedAttribute]
public Range get_ApplicableRange();
    [CompilerGeneratedAttribute]
public void set_ApplicableRange(Range value);
    [CompilerGeneratedAttribute]
public VSInternalCodeAction[] get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(VSInternalCodeAction[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_TelemetryId();
    [CompilerGeneratedAttribute]
public void set_TelemetryId(Nullable`1<Guid> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCodeActionContext : CodeActionContext {
    [CompilerGeneratedAttribute]
private Range <SelectionRange>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range SelectionRange { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_SelectionRange();
    [CompilerGeneratedAttribute]
public void set_SelectionRange(Range value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup : object {
    public static string QuickFix;
    public static string Refactor;
    public static string RefactorExtract;
    public static string RefactorInline;
    public static string RefactorRewrite;
    public static string Source;
    public static string SourceOrganizeImports;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroupSetting : object {
    [CompilerGeneratedAttribute]
private String[] <ValueSet>k__BackingField;
    [DataMemberAttribute]
public String[] ValueSet { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_ValueSet();
    [CompilerGeneratedAttribute]
public void set_ValueSet(String[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCodeActionLiteralSetting : CodeActionLiteralSetting {
    [CompilerGeneratedAttribute]
private VSInternalCodeActionGroupSetting <CodeActionGroup>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalCodeActionGroupSetting CodeActionGroup { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalCodeActionGroupSetting get_CodeActionGroup();
    [CompilerGeneratedAttribute]
public void set_CodeActionGroup(VSInternalCodeActionGroupSetting value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCommitCharacter : object {
    [CompilerGeneratedAttribute]
private string <Character>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Insert>k__BackingField;
    [DataMemberAttribute]
public string Character { get; public set; }
    [DataMemberAttribute]
public bool Insert { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Character();
    [CompilerGeneratedAttribute]
public void set_Character(string value);
    [CompilerGeneratedAttribute]
public bool get_Insert();
    [CompilerGeneratedAttribute]
public void set_Insert(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCompletionContext : CompletionContext {
    [CompilerGeneratedAttribute]
private VSInternalCompletionInvokeKind <InvokeKind>k__BackingField;
    [DataMemberAttribute]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[JsonPropertyAttribute]
public VSInternalCompletionInvokeKind InvokeKind { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalCompletionInvokeKind get_InvokeKind();
    [CompilerGeneratedAttribute]
public void set_InvokeKind(VSInternalCompletionInvokeKind value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.VSInternalCompletionInvokeKind : Enum {
    public int value__;
    public static VSInternalCompletionInvokeKind Explicit;
    public static VSInternalCompletionInvokeKind Typing;
    public static VSInternalCompletionInvokeKind Deletion;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCompletionItem : CompletionItem {
    [NullableAttribute("1")]
internal static string IconSerializedName;
    [NullableAttribute("1")]
internal static string DescriptionSerializedName;
    [NullableAttribute("1")]
internal static string VsCommitCharactersSerializedName;
    [NullableAttribute("1")]
internal static string VsResolveTextEditOnCommitName;
    [CompilerGeneratedAttribute]
private ImageElement <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private ClassifiedTextElement <Description>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> <VsCommitCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <VsResolveTextEditOnCommit>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ImageElementConverter")]
[JsonPropertyAttribute]
public ImageElement Icon { get; public set; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter")]
[JsonPropertyAttribute]
public ClassifiedTextElement Description { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> VsCommitCharacters { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool VsResolveTextEditOnCommit { get; public set; }
    [CompilerGeneratedAttribute]
public ImageElement get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(ImageElement value);
    [CompilerGeneratedAttribute]
public ClassifiedTextElement get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(ClassifiedTextElement value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> get_VsCommitCharacters();
    [CompilerGeneratedAttribute]
public void set_VsCommitCharacters(Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> value);
    [CompilerGeneratedAttribute]
public bool get_VsResolveTextEditOnCommit();
    [CompilerGeneratedAttribute]
public void set_VsResolveTextEditOnCommit(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCompletionList : CompletionList {
    internal static string SuggestionModeSerializedName;
    internal static string ContinueCharactersSerializedName;
    internal static string DataSerializedName;
    internal static string CommitCharactersSerializedName;
    [CompilerGeneratedAttribute]
private bool <SuggestionMode>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private SumType`3[] <ContinueCharacters>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> <CommitCharacters>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SuggestionMode { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public SumType`3[] ContinueCharacters { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public object Data { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> CommitCharacters { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_SuggestionMode();
    [CompilerGeneratedAttribute]
public void set_SuggestionMode(bool value);
    [CompilerGeneratedAttribute]
public SumType`3[] get_ContinueCharacters();
    [CompilerGeneratedAttribute]
public void set_ContinueCharacters(SumType`3[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Data();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Data(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> get_CommitCharacters();
    [CompilerGeneratedAttribute]
public void set_CommitCharacters(Nullable`1<SumType`2<String[], VSInternalCommitCharacter[]>> value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCompletionListSetting : object {
    [CompilerGeneratedAttribute]
private bool <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CommitCharacters>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Data { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool CommitCharacters { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(bool value);
    [CompilerGeneratedAttribute]
public bool get_CommitCharacters();
    [CompilerGeneratedAttribute]
public void set_CommitCharacters(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalCompletionSetting : CompletionSetting {
    [CompilerGeneratedAttribute]
private VSInternalCompletionListSetting <CompletionList>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalCompletionListSetting CompletionList { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalCompletionListSetting get_CompletionList();
    [CompilerGeneratedAttribute]
public void set_CompletionList(VSInternalCompletionListSetting value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterClass : object {
    [DataMemberAttribute]
[JsonPropertyAttribute]
public static string Type;
    [CompilerGeneratedAttribute]
private string <UnicodeClass>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string UnicodeClass { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UnicodeClass();
    [CompilerGeneratedAttribute]
public void set_UnicodeClass(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterRange : object {
    [DataMemberAttribute]
[JsonPropertyAttribute]
public static string Type;
    [CompilerGeneratedAttribute]
private string <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private string <End>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Start { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string End { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(string value);
    [CompilerGeneratedAttribute]
public string get_End();
    [CompilerGeneratedAttribute]
public void set_End(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterSingle : object {
    [DataMemberAttribute]
[JsonPropertyAttribute]
public static string Type;
    [CompilerGeneratedAttribute]
private string <Character>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Character { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Character();
    [CompilerGeneratedAttribute]
public void set_Character(string value);
}
[IsReadOnlyAttribute]
[DataContractAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1<Roslyn.LanguageServer.Protocol.VSInternalDiagnosticKind>")]
[TypeConverterAttribute("Roslyn.LanguageServer.Protocol.StringEnumConverter`1/TypeConverter<Roslyn.LanguageServer.Protocol.VSInternalDiagnosticKind>")]
internal class Roslyn.LanguageServer.Protocol.VSInternalDiagnosticKind : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public static VSInternalDiagnosticKind Task;
    [NullableAttribute("1")]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public VSInternalDiagnosticKind(string Value);
    private static VSInternalDiagnosticKind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(VSInternalDiagnosticKind left, VSInternalDiagnosticKind right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(VSInternalDiagnosticKind left, VSInternalDiagnosticKind right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(VSInternalDiagnosticKind other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDiagnosticOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <BuildOnlyDiagnosticIds>k__BackingField;
    [CompilerGeneratedAttribute]
private VSInternalDiagnosticKind[] <DiagnosticKinds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsMultipleContextsDiagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] BuildOnlyDiagnosticIds { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalDiagnosticKind[] DiagnosticKinds { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SupportsMultipleContextsDiagnostics { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
protected VSInternalDiagnosticOptions(VSInternalDiagnosticOptions original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public String[] get_BuildOnlyDiagnosticIds();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_BuildOnlyDiagnosticIds(String[] value);
    [CompilerGeneratedAttribute]
public VSInternalDiagnosticKind[] get_DiagnosticKinds();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DiagnosticKinds(VSInternalDiagnosticKind[] value);
    [CompilerGeneratedAttribute]
public bool get_SupportsMultipleContextsDiagnostics();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SupportsMultipleContextsDiagnostics(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(VSInternalDiagnosticOptions left, VSInternalDiagnosticOptions right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(VSInternalDiagnosticOptions left, VSInternalDiagnosticOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(VSInternalDiagnosticOptions other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual VSInternalDiagnosticOptions <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDiagnosticParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VSInternalDiagnosticKind> <QueryingDiagnosticKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreviousResultId>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<VSInternalDiagnosticKind> QueryingDiagnosticKind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string PreviousResultId { get; public set; }
    [CompilerGeneratedAttribute]
public TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Nullable`1<VSInternalDiagnosticKind> get_QueryingDiagnosticKind();
    [CompilerGeneratedAttribute]
public void set_QueryingDiagnosticKind(Nullable`1<VSInternalDiagnosticKind> value);
    [CompilerGeneratedAttribute]
public string get_PreviousResultId();
    [CompilerGeneratedAttribute]
public void set_PreviousResultId(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport : object {
    [CompilerGeneratedAttribute]
private string <ResultId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Diagnostic[] <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Supersedes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <OutputKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Version>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ResultId { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Diagnostic[] Diagnostics { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> Identifier { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> Supersedes { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<Guid> OutputKey { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ResultId();
    [CompilerGeneratedAttribute]
public void set_ResultId(string value);
    [CompilerGeneratedAttribute]
public Diagnostic[] get_Diagnostics();
    [CompilerGeneratedAttribute]
public void set_Diagnostics(Diagnostic[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Supersedes();
    [CompilerGeneratedAttribute]
public void set_Supersedes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_OutputKey();
    [CompilerGeneratedAttribute]
public void set_OutputKey(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<int> value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDocumentDiagnosticsParams : VSInternalDiagnosticParams {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<VSInternalDiagnosticReport[]> <WorkDoneToken>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<VSInternalDiagnosticReport[]> <PartialResultToken>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<VSInternalDiagnosticReport[]> WorkDoneToken { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<VSInternalDiagnosticReport[]> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public IProgress`1<VSInternalDiagnosticReport[]> get_WorkDoneToken();
    [CompilerGeneratedAttribute]
public void set_WorkDoneToken(IProgress`1<VSInternalDiagnosticReport[]> value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<VSInternalDiagnosticReport[]> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<VSInternalDiagnosticReport[]> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertOptions : object {
    [CompilerGeneratedAttribute]
private String[] <TriggerCharacters>k__BackingField;
    [DataMemberAttribute]
public String[] TriggerCharacters { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_TriggerCharacters();
    [CompilerGeneratedAttribute]
public void set_TriggerCharacters(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Character>k__BackingField;
    [CompilerGeneratedAttribute]
private FormattingOptions <Options>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Position Position { get; public set; }
    [DataMemberAttribute]
public string Character { get; public set; }
    [DataMemberAttribute]
public FormattingOptions Options { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Position get_Position();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Position(Position value);
    [CompilerGeneratedAttribute]
public string get_Character();
    [CompilerGeneratedAttribute]
public void set_Character(string value);
    [CompilerGeneratedAttribute]
public FormattingOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(FormattingOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertResponseItem : object {
    [CompilerGeneratedAttribute]
private InsertTextFormat <TextEditFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private TextEdit <TextEdit>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public InsertTextFormat TextEditFormat { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public TextEdit TextEdit { get; public set; }
    [CompilerGeneratedAttribute]
public InsertTextFormat get_TextEditFormat();
    [CompilerGeneratedAttribute]
public void set_TextEditFormat(InsertTextFormat value);
    [CompilerGeneratedAttribute]
public TextEdit get_TextEdit();
    [CompilerGeneratedAttribute]
public void set_TextEdit(TextEdit value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalDocumentSpellCheckableParams : VSInternalStreamingParams {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<VSInternalSpellCheckableRangeReport[]> <PartialResultToken>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<VSInternalSpellCheckableRangeReport[]> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<VSInternalSpellCheckableRangeReport[]> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<VSInternalSpellCheckableRangeReport[]> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalExecuteCommandClientCapabilities : DynamicRegistrationSetting {
    [CompilerGeneratedAttribute]
private String[] <SupportedCommands>k__BackingField;
    [DataMemberAttribute]
public String[] SupportedCommands { get; public set; }
    public VSInternalExecuteCommandClientCapabilities(bool value);
    [CompilerGeneratedAttribute]
public String[] get_SupportedCommands();
    [CompilerGeneratedAttribute]
public void set_SupportedCommands(String[] value);
}
[ExtensionAttribute]
internal static class Roslyn.LanguageServer.Protocol.VSInternalExtensionUtilities : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddVSInternalExtensionConverters(JsonSerializer serializer);
    [CompilerGeneratedAttribute]
internal static void <AddVSInternalExtensionConverters>g__AddOrReplaceConverter|0_0(<>c__DisplayClass0_0& );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalHover : Hover {
    [CompilerGeneratedAttribute]
private object <RawContent>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ObjectContentConverter")]
[JsonPropertyAttribute]
public object RawContent { get; public set; }
    [CompilerGeneratedAttribute]
public object get_RawContent();
    [CompilerGeneratedAttribute]
public void set_RawContent(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalIconMapping : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private VSImageId[] <Images>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Tags>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public VSImageId[] Images { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] Tags { get; public set; }
    [CompilerGeneratedAttribute]
public VSImageId[] get_Images();
    [CompilerGeneratedAttribute]
public void set_Images(VSImageId[] value);
    [CompilerGeneratedAttribute]
public String[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(String[] value);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(VSInternalIconMapping other);
    public virtual int GetHashCode();
    private static bool CheckImagesAreEqual(VSImageId[] current, VSImageId[] other);
    private static bool CheckTagsAreEqual(String[] current, String[] other);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionContext : object {
    [CompilerGeneratedAttribute]
private VSInternalInlineCompletionTriggerKind <TriggerKind>k__BackingField;
    [CompilerGeneratedAttribute]
private VSInternalSelectedCompletionInfo <SelectedCompletionInfo>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalInlineCompletionTriggerKind TriggerKind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalSelectedCompletionInfo SelectedCompletionInfo { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalInlineCompletionTriggerKind get_TriggerKind();
    [CompilerGeneratedAttribute]
public void set_TriggerKind(VSInternalInlineCompletionTriggerKind value);
    [CompilerGeneratedAttribute]
public VSInternalSelectedCompletionInfo get_SelectedCompletionInfo();
    [CompilerGeneratedAttribute]
public void set_SelectedCompletionInfo(VSInternalSelectedCompletionInfo value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionItem : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private Command <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InsertTextFormat> <TextFormat>k__BackingField;
    [NullableAttribute("1")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Command Command { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<InsertTextFormat> TextFormat { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Text();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public Command get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(Command value);
    [CompilerGeneratedAttribute]
public Nullable`1<InsertTextFormat> get_TextFormat();
    [CompilerGeneratedAttribute]
public void set_TextFormat(Nullable`1<InsertTextFormat> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionList : object {
    [CompilerGeneratedAttribute]
private VSInternalInlineCompletionItem[] <Items>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalInlineCompletionItem[] Items { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalInlineCompletionItem[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(VSInternalInlineCompletionItem[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionOptions : object {
    [CompilerGeneratedAttribute]
private Regex <Pattern>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.RegexConverter")]
public Regex Pattern { get; public set; }
    [CompilerGeneratedAttribute]
public Regex get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(Regex value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionRequest : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private VSInternalInlineCompletionContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private FormattingOptions <Options>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Position Position { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalInlineCompletionContext Context { get; public set; }
    [DataMemberAttribute]
public FormattingOptions Options { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Position get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(Position value);
    [CompilerGeneratedAttribute]
public VSInternalInlineCompletionContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(VSInternalInlineCompletionContext value);
    [CompilerGeneratedAttribute]
public FormattingOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(FormattingOptions value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionTriggerKind : Enum {
    public int value__;
    public static VSInternalInlineCompletionTriggerKind Automatic;
    public static VSInternalInlineCompletionTriggerKind Explicit;
}
internal enum Roslyn.LanguageServer.Protocol.VSInternalItemOrigin : Enum {
    public int value__;
    public static VSInternalItemOrigin Exact;
    public static VSInternalItemOrigin ExactMetadata;
    public static VSInternalItemOrigin Indexed;
    public static VSInternalItemOrigin IndexedInRepo;
    public static VSInternalItemOrigin IndexedInOrganization;
    public static VSInternalItemOrigin IndexedInThirdParty;
    public static VSInternalItemOrigin Other;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Modifier>k__BackingField;
    [DataMemberAttribute]
public string Kind { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] Modifier { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public String[] get_Modifier();
    [CompilerGeneratedAttribute]
public void set_Modifier(String[] value);
    [NullableContextAttribute("2")]
public static bool op_Equality(VSInternalKindAndModifier value1, VSInternalKindAndModifier value2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(VSInternalKindAndModifier value1, VSInternalKindAndModifier value2);
    public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(VSInternalKindAndModifier other);
    public virtual int GetHashCode();
    private bool CheckModifierEquality(String[] modifiers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers : object {
    public static string Public;
    public static string Private;
    public static string Protected;
    public static string Internal;
    public static string Sealed;
    public static string Shortcut;
    public static string Snippet;
    public static string Friend;
    public static string Declaration;
    public static IReadOnlyCollection`1<string> AllModifiers;
    private static VSInternalKnownKindModifiers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.VSInternalKnownKinds : object {
    public static string Text;
    public static string Method;
    public static string Function;
    public static string Constructor;
    public static string Field;
    public static string Variable;
    public static string Class;
    public static string Interface;
    public static string Module;
    public static string Property;
    public static string Unit;
    public static string Value;
    public static string Enum;
    public static string Keyword;
    public static string Snippet;
    public static string Color;
    public static string File;
    public static string Reference;
    public static string Folder;
    public static string EnumMember;
    public static string Constant;
    public static string Struct;
    public static string Event;
    public static string Operator;
    public static string TypeParameter;
    public static string Namespace;
    public static string Package;
    public static string StringKind;
    public static string Number;
    public static string Boolean;
    public static string Array;
    public static string ObjectKind;
    public static string Key;
    public static string Null;
    public static string Macro;
    public static string Template;
    public static string Typedef;
    public static string Union;
    public static string Delegate;
    public static string Tag;
    public static string Attribute;
    public static IReadOnlyCollection`1<string> AllKinds;
    private static VSInternalKnownKinds();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalLocation : VSLocation {
    private object textValue;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ObjectContentConverter")]
[JsonPropertyAttribute]
public object Text { get; public set; }
    public object get_Text();
    public void set_Text(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalMapCodeMapping : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Contents>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Location[][] <FocusLocations>k__BackingField;
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public String[] Contents { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Location[][] FocusLocations { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public TextDocumentIdentifier get_TextDocument();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public String[] get_Contents();
    [CompilerGeneratedAttribute]
public void set_Contents(String[] value);
    [CompilerGeneratedAttribute]
public Location[][] get_FocusLocations();
    [CompilerGeneratedAttribute]
public void set_FocusLocations(Location[][] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalMapCodeParams : object {
    [CompilerGeneratedAttribute]
private VSInternalMapCodeMapping[] <Mappings>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private WorkspaceEdit <Updates>k__BackingField;
    [DataMemberAttribute]
public VSInternalMapCodeMapping[] Mappings { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public WorkspaceEdit Updates { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalMapCodeMapping[] get_Mappings();
    [CompilerGeneratedAttribute]
public void set_Mappings(VSInternalMapCodeMapping[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public WorkspaceEdit get_Updates();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Updates(WorkspaceEdit value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.VSInternalMethods : object {
    public static string DocumentFoldingRangeRefreshName;
    public static string DocumentReferencesName;
    public static string OnAutoInsertName;
    public static string TextDocumentIconMappingResolveName;
    public static string DocumentPullDiagnosticName;
    public static string WorkspacePullDiagnosticName;
    public static string TextDocumentValidateBreakableRangeName;
    public static string TextDocumentInlineCompletionName;
    public static string TextDocumentSpellCheckableRangesName;
    public static string TextDocumentUriPresentationName;
    public static string TextDocumentTextPresentationName;
    public static string WorkspaceSpellCheckableRangesName;
    public static string WorkspaceMapCodeName;
    public static LspRequest`2<VSInternalDocumentOnAutoInsertParams, VSInternalDocumentOnAutoInsertResponseItem> OnAutoInsert;
    public static LspRequest`2<VSInternalKindAndModifier, VSInternalIconMapping> TextDocumentIconMappingResolve;
    public static LspRequest`2<VSInternalDocumentDiagnosticsParams, VSInternalDiagnosticReport[]> DocumentPullDiagnostic;
    public static LspRequest`2<VSInternalWorkspaceDiagnosticsParams, VSInternalWorkspaceDiagnosticReport[]> WorkspacePullDiagnostic;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<VSInternalValidateBreakableRangeParams, Range> TextDocumentValidateBreakableRange;
    public static LspRequest`2<VSInternalInlineCompletionRequest, VSInternalInlineCompletionList> TextDocumentInlineCompletion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<VSInternalUriPresentationParams, WorkspaceEdit> TextDocumentUriPresentation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<VSInternalTextPresentationParams, WorkspaceEdit> TextDocumentTextPresentation;
    public static LspRequest`2<VSInternalDocumentSpellCheckableParams, VSInternalSpellCheckableRangeReport[]> TextDocumentSpellCheckableRanges;
    public static LspRequest`2<VSInternalWorkspaceSpellCheckableParams, VSInternalWorkspaceSpellCheckableReport[]> WorkspaceSpellCheckableRanges;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static LspRequest`2<VSInternalMapCodeParams, WorkspaceEdit> WorkspaceMapCode;
    private static VSInternalMethods();
}
internal enum Roslyn.LanguageServer.Protocol.VSInternalPriorityLevel : Enum {
    public int value__;
    public static VSInternalPriorityLevel Lowest;
    public static VSInternalPriorityLevel Low;
    public static VSInternalPriorityLevel Normal;
    public static VSInternalPriorityLevel High;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalProjectContext : VSProjectContext {
    [CompilerGeneratedAttribute]
private VSInternalKindAndModifier <VSKind>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalKindAndModifier VSKind { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalKindAndModifier get_VSKind();
    [CompilerGeneratedAttribute]
public void set_VSKind(VSInternalKindAndModifier value);
    public static bool op_Equality(VSInternalProjectContext value1, VSInternalProjectContext value2);
    public static bool op_Inequality(VSInternalProjectContext value1, VSInternalProjectContext value2);
    [NullableContextAttribute("1")]
public sealed virtual bool Equals(VSInternalProjectContext other);
    [NullableContextAttribute("1")]
public virtual bool Equals(VSProjectContext other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalReferenceItem : object {
    private object definitionTextValue;
    private object textValue;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DefinitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private VSInternalResolutionStatusKind <ResolutionStatus>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private VSInternalReferenceKind[] <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainingType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainingMember>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VSInternalItemOrigin> <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private ImageElement <DefinitionIcon>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [NullableAttribute("1")]
[DataMemberAttribute]
public Location Location { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<int> DefinitionId { get; public set; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ObjectContentConverter")]
[JsonPropertyAttribute]
public object DefinitionText { get; public set; }
    [DataMemberAttribute]
public VSInternalResolutionStatusKind ResolutionStatus { get; public set; }
    [NullableAttribute("1")]
[DataMemberAttribute]
public VSInternalReferenceKind[] Kind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string DocumentName { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ProjectName { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ContainingType { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ContainingMember { get; public set; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ObjectContentConverter")]
[JsonPropertyAttribute]
public object Text { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string DisplayPath { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<VSInternalItemOrigin> Origin { get; public set; }
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ImageElementConverter")]
[JsonPropertyAttribute]
public ImageElement DefinitionIcon { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Location get_Location();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Location(Location value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DefinitionId();
    [CompilerGeneratedAttribute]
public void set_DefinitionId(Nullable`1<int> value);
    public object get_DefinitionText();
    public void set_DefinitionText(object value);
    [CompilerGeneratedAttribute]
public VSInternalResolutionStatusKind get_ResolutionStatus();
    [CompilerGeneratedAttribute]
public void set_ResolutionStatus(VSInternalResolutionStatusKind value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public VSInternalReferenceKind[] get_Kind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Kind(VSInternalReferenceKind[] value);
    [CompilerGeneratedAttribute]
public string get_DocumentName();
    [CompilerGeneratedAttribute]
public void set_DocumentName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ContainingType();
    [CompilerGeneratedAttribute]
public void set_ContainingType(string value);
    [CompilerGeneratedAttribute]
public string get_ContainingMember();
    [CompilerGeneratedAttribute]
public void set_ContainingMember(string value);
    public object get_Text();
    public void set_Text(object value);
    [CompilerGeneratedAttribute]
public string get_DisplayPath();
    [CompilerGeneratedAttribute]
public void set_DisplayPath(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<VSInternalItemOrigin> get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(Nullable`1<VSInternalItemOrigin> value);
    [CompilerGeneratedAttribute]
public ImageElement get_DefinitionIcon();
    [CompilerGeneratedAttribute]
public void set_DefinitionIcon(ImageElement value);
}
internal enum Roslyn.LanguageServer.Protocol.VSInternalReferenceKind : Enum {
    public int value__;
    public static VSInternalReferenceKind Inactive;
    public static VSInternalReferenceKind Comment;
    public static VSInternalReferenceKind String;
    public static VSInternalReferenceKind Read;
    public static VSInternalReferenceKind Write;
    public static VSInternalReferenceKind Reference;
    public static VSInternalReferenceKind Name;
    public static VSInternalReferenceKind Qualified;
    public static VSInternalReferenceKind TypeArgument;
    public static VSInternalReferenceKind TypeConstraint;
    public static VSInternalReferenceKind BaseType;
    public static VSInternalReferenceKind Constructor;
    public static VSInternalReferenceKind Destructor;
    public static VSInternalReferenceKind Import;
    public static VSInternalReferenceKind Declaration;
    public static VSInternalReferenceKind AddressOf;
    public static VSInternalReferenceKind NotReference;
    public static VSInternalReferenceKind Unknown;
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalReferenceParams : ReferenceParams {
    [CompilerGeneratedAttribute]
private Nullable`1<VSInternalItemOrigin> <Scope>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<VSInternalItemOrigin> Scope { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<VSInternalItemOrigin> get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(Nullable`1<VSInternalItemOrigin> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSelection : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSupport : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Default>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Label { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Default { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public bool get_Default();
    [CompilerGeneratedAttribute]
public void set_Default(bool value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalRenameParams : RenameParams {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private VSInternalRenameOptionSelection[] <OptionSelections>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalRenameOptionSelection[] OptionSelections { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalRenameOptionSelection[] get_OptionSelections();
    [CompilerGeneratedAttribute]
public void set_OptionSelections(VSInternalRenameOptionSelection[] value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalRenameRange : RenameRange {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private VSInternalRenameOptionSupport[] <SupportedOptions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalRenameOptionSupport[] SupportedOptions { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalRenameOptionSupport[] get_SupportedOptions();
    [CompilerGeneratedAttribute]
public void set_SupportedOptions(VSInternalRenameOptionSupport[] value);
}
internal enum Roslyn.LanguageServer.Protocol.VSInternalResolutionStatusKind : Enum {
    public int value__;
    public static VSInternalResolutionStatusKind ConfirmedAsReference;
    public static VSInternalResolutionStatusKind ConfirmedAsNotReference;
    public static VSInternalResolutionStatusKind NotConfirmed;
    public static VSInternalResolutionStatusKind NotProcessed;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalSelectedCompletionInfo : object {
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionItemKind <CompletionKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSnippetText>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range Range { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CompletionItemKind CompletionKind { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IsSnippetText { get; public set; }
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public CompletionItemKind get_CompletionKind();
    [CompilerGeneratedAttribute]
public void set_CompletionKind(CompletionItemKind value);
    [CompilerGeneratedAttribute]
public bool get_IsSnippetText();
    [CompilerGeneratedAttribute]
public void set_IsSnippetText(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities : VSServerCapabilities {
    [CompilerGeneratedAttribute]
private bool <DisableGoToWorkspaceSymbols>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MSReferencesProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private VSInternalDocumentOnAutoInsertOptions <OnAutoInsertProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DoNotIncludeTextInTextDocumentDidOpen>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KindDescriptionResolveProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsDiagnosticRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private VSInternalDiagnosticOptions <DiagnosticProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private VSInternalInlineCompletionOptions <InlineCompletionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SpellCheckingProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BreakableRangeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UriPresentationProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TextPresentationProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MapCodeProvider>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DisableGoToWorkspaceSymbols { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool MSReferencesProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalDocumentOnAutoInsertOptions OnAutoInsertProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DoNotIncludeTextInTextDocumentDidOpen { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool KindDescriptionResolveProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SupportsDiagnosticRequests { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalDiagnosticOptions DiagnosticProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalInlineCompletionOptions InlineCompletionOptions { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool SpellCheckingProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool BreakableRangeProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool UriPresentationProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool TextPresentationProvider { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool MapCodeProvider { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DisableGoToWorkspaceSymbols();
    [CompilerGeneratedAttribute]
public void set_DisableGoToWorkspaceSymbols(bool value);
    [CompilerGeneratedAttribute]
public bool get_MSReferencesProvider();
    [CompilerGeneratedAttribute]
public void set_MSReferencesProvider(bool value);
    [CompilerGeneratedAttribute]
public VSInternalDocumentOnAutoInsertOptions get_OnAutoInsertProvider();
    [CompilerGeneratedAttribute]
public void set_OnAutoInsertProvider(VSInternalDocumentOnAutoInsertOptions value);
    [CompilerGeneratedAttribute]
public bool get_DoNotIncludeTextInTextDocumentDidOpen();
    [CompilerGeneratedAttribute]
public void set_DoNotIncludeTextInTextDocumentDidOpen(bool value);
    [CompilerGeneratedAttribute]
public bool get_KindDescriptionResolveProvider();
    [CompilerGeneratedAttribute]
public void set_KindDescriptionResolveProvider(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsDiagnosticRequests();
    [CompilerGeneratedAttribute]
public void set_SupportsDiagnosticRequests(bool value);
    [CompilerGeneratedAttribute]
public VSInternalDiagnosticOptions get_DiagnosticProvider();
    [CompilerGeneratedAttribute]
public void set_DiagnosticProvider(VSInternalDiagnosticOptions value);
    [CompilerGeneratedAttribute]
public VSInternalInlineCompletionOptions get_InlineCompletionOptions();
    [CompilerGeneratedAttribute]
public void set_InlineCompletionOptions(VSInternalInlineCompletionOptions value);
    [CompilerGeneratedAttribute]
public bool get_SpellCheckingProvider();
    [CompilerGeneratedAttribute]
public void set_SpellCheckingProvider(bool value);
    [CompilerGeneratedAttribute]
public bool get_BreakableRangeProvider();
    [CompilerGeneratedAttribute]
public void set_BreakableRangeProvider(bool value);
    [CompilerGeneratedAttribute]
public bool get_UriPresentationProvider();
    [CompilerGeneratedAttribute]
public void set_UriPresentationProvider(bool value);
    [CompilerGeneratedAttribute]
public bool get_TextPresentationProvider();
    [CompilerGeneratedAttribute]
public void set_TextPresentationProvider(bool value);
    [CompilerGeneratedAttribute]
public bool get_MapCodeProvider();
    [CompilerGeneratedAttribute]
public void set_MapCodeProvider(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalSignatureInformation : SignatureInformation {
    [CompilerGeneratedAttribute]
private ClassifiedTextElement <ColorizedLabel>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter")]
[JsonPropertyAttribute]
public ClassifiedTextElement ColorizedLabel { get; public set; }
    [CompilerGeneratedAttribute]
public ClassifiedTextElement get_ColorizedLabel();
    [CompilerGeneratedAttribute]
public void set_ColorizedLabel(ClassifiedTextElement value);
}
internal enum Roslyn.LanguageServer.Protocol.VSInternalSnippetSupportLevel : Enum {
    public int value__;
    public static VSInternalSnippetSupportLevel DefaultTabStop;
    public static VSInternalSnippetSupportLevel Complete;
}
internal enum Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind : Enum {
    public int value__;
    public static VSInternalSpellCheckableRangeKind String;
    public static VSInternalSpellCheckableRangeKind Comment;
    public static VSInternalSpellCheckableRangeKind Identifier;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeReport : object {
    [CompilerGeneratedAttribute]
private string <ResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Ranges>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ResultId { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Int32[] Ranges { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ResultId();
    [CompilerGeneratedAttribute]
public void set_ResultId(string value);
    [CompilerGeneratedAttribute]
public Int32[] get_Ranges();
    [CompilerGeneratedAttribute]
public void set_Ranges(Int32[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalStreamingParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <PreviousResultId>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string PreviousResultId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_PreviousResultId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PreviousResultId(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalSymbolInformation : VSSymbolInformation {
    [CompilerGeneratedAttribute]
private VSInternalKindAndModifier <VSKind>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalKindAndModifier VSKind { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalKindAndModifier get_VSKind();
    [CompilerGeneratedAttribute]
public void set_VSKind(VSInternalKindAndModifier value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalTextDocumentClientCapabilities : TextDocumentClientCapabilities {
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <OnAutoInsert>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting OnAutoInsert { get; public set; }
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_OnAutoInsert();
    [CompilerGeneratedAttribute]
public void set_OnAutoInsert(DynamicRegistrationSetting value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalTextDocumentRegistrationOptions : TextDocumentRegistrationOptions {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TriggerCharacters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public String[] TriggerCharacters { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_TriggerCharacters();
    [CompilerGeneratedAttribute]
public void set_TriggerCharacters(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalTextPresentationParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range Range { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
public string Text { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Text();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Text(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalUriPresentationParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Uri[] <Uris>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Range Range { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Uri[] Uris { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
    [CompilerGeneratedAttribute]
public Uri[] get_Uris();
    [CompilerGeneratedAttribute]
public void set_Uris(Uri[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalValidateBreakableRangeParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Range <Range>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public Range Range { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public Range get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(Range value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.VSInternalWellKnownCodeActionCommands : object {
    public static string SetClipboard;
    public static string OpenUrl;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticReport : VSInternalDiagnosticReport {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticsParams : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private VSInternalDiagnosticParams[] <PreviousResults>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<VSInternalWorkspaceDiagnosticReport[]> <WorkDoneToken>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<VSInternalWorkspaceDiagnosticReport[]> <PartialResultToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VSInternalDiagnosticKind> <QueryingDiagnosticKind>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalDiagnosticParams[] PreviousResults { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<VSInternalWorkspaceDiagnosticReport[]> WorkDoneToken { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<VSInternalWorkspaceDiagnosticReport[]> PartialResultToken { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<VSInternalDiagnosticKind> QueryingDiagnosticKind { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalDiagnosticParams[] get_PreviousResults();
    [CompilerGeneratedAttribute]
public void set_PreviousResults(VSInternalDiagnosticParams[] value);
    [CompilerGeneratedAttribute]
public IProgress`1<VSInternalWorkspaceDiagnosticReport[]> get_WorkDoneToken();
    [CompilerGeneratedAttribute]
public void set_WorkDoneToken(IProgress`1<VSInternalWorkspaceDiagnosticReport[]> value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<VSInternalWorkspaceDiagnosticReport[]> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<VSInternalWorkspaceDiagnosticReport[]> value);
    [CompilerGeneratedAttribute]
public Nullable`1<VSInternalDiagnosticKind> get_QueryingDiagnosticKind();
    [CompilerGeneratedAttribute]
public void set_QueryingDiagnosticKind(Nullable`1<VSInternalDiagnosticKind> value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalWorkspaceSpellCheckableParams : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private VSInternalStreamingParams[] <PreviousResults>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<VSInternalWorkspaceSpellCheckableReport[]> <PartialResultToken>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public VSInternalStreamingParams[] PreviousResults { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<VSInternalWorkspaceSpellCheckableReport[]> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public VSInternalStreamingParams[] get_PreviousResults();
    [CompilerGeneratedAttribute]
public void set_PreviousResults(VSInternalStreamingParams[] value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<VSInternalWorkspaceSpellCheckableReport[]> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<VSInternalWorkspaceSpellCheckableReport[]> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSInternalWorkspaceSpellCheckableReport : VSInternalSpellCheckableRangeReport {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSLocation : Location {
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayPath>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ProjectName { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string DisplayPath { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayPath();
    [CompilerGeneratedAttribute]
public void set_DisplayPath(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Roslyn.LanguageServer.Protocol.VSMethods : object {
    public static string GetProjectContextsName;
    public static LspRequest`2<VSGetProjectContextsParams, VSProjectContextList> GetProjectContexts;
    private static VSMethods();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSProjectContext : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private VSProjectKind <Kind>k__BackingField;
    [DataMemberAttribute]
public string Label { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public VSProjectKind Kind { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public VSProjectKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(VSProjectKind value);
    [NullableContextAttribute("2")]
public static bool op_Equality(VSProjectContext value1, VSProjectContext value2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(VSProjectContext value1, VSProjectContext value2);
    public virtual bool Equals(VSProjectContext other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSProjectContextList : object {
    [CompilerGeneratedAttribute]
private VSProjectContext[] <ProjectContexts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultIndex>k__BackingField;
    [DataMemberAttribute]
public VSProjectContext[] ProjectContexts { get; public set; }
    [DataMemberAttribute]
public int DefaultIndex { get; public set; }
    [CompilerGeneratedAttribute]
public VSProjectContext[] get_ProjectContexts();
    [CompilerGeneratedAttribute]
public void set_ProjectContexts(VSProjectContext[] value);
    [CompilerGeneratedAttribute]
public int get_DefaultIndex();
    [CompilerGeneratedAttribute]
public void set_DefaultIndex(int value);
}
[DataContractAttribute]
internal enum Roslyn.LanguageServer.Protocol.VSProjectKind : Enum {
    public int value__;
    public static VSProjectKind CPlusPlus;
    public static VSProjectKind CSharp;
    public static VSProjectKind VisualBasic;
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSServerCapabilities : ServerCapabilities {
    [CompilerGeneratedAttribute]
private bool <ProjectContextProvider>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ProjectContextProvider { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ProjectContextProvider();
    [CompilerGeneratedAttribute]
public void set_ProjectContextProvider(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSSymbolInformation : SymbolInformation {
    [CompilerGeneratedAttribute]
private VSImageId <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HintText>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSImageId Icon { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string HintText { get; public set; }
    [CompilerGeneratedAttribute]
public VSImageId get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(VSImageId value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_HintText();
    [CompilerGeneratedAttribute]
public void set_HintText(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier : TextDocumentIdentifier {
    [CompilerGeneratedAttribute]
private VSProjectContext <ProjectContext>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public VSProjectContext ProjectContext { get; public set; }
    [CompilerGeneratedAttribute]
public VSProjectContext get_ProjectContext();
    [CompilerGeneratedAttribute]
public void set_ProjectContext(VSProjectContext value);
    public static bool op_Equality(VSTextDocumentIdentifier value1, VSTextDocumentIdentifier value2);
    public static bool op_Inequality(VSTextDocumentIdentifier value1, VSTextDocumentIdentifier value2);
    [NullableContextAttribute("1")]
public sealed virtual bool Equals(VSTextDocumentIdentifier other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WillSaveTextDocumentParams : object {
    [CompilerGeneratedAttribute]
private TextDocumentIdentifier <TextDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private TextDocumentSaveReason <Reason>k__BackingField;
    [DataMemberAttribute]
public TextDocumentIdentifier TextDocument { get; public set; }
    [DataMemberAttribute]
public TextDocumentSaveReason Reason { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TextDocumentIdentifier get_TextDocument();
    [CompilerGeneratedAttribute]
public void set_TextDocument(TextDocumentIdentifier value);
    [CompilerGeneratedAttribute]
public TextDocumentSaveReason get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(TextDocumentSaveReason value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities : object {
    [CompilerGeneratedAttribute]
private bool <ApplyEdit>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkspaceEditSetting <WorkspaceEdit>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <DidChangeConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <DidChangeWatchedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private SymbolSetting <Symbol>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicRegistrationSetting <ExecuteCommand>k__BackingField;
    [CompilerGeneratedAttribute]
private SemanticTokensWorkspaceSetting <SemanticTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private DiagnosticWorkspaceSetting <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private InlayHintWorkspaceSetting <InlayHint>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeLensWorkspaceSetting <CodeLens>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool ApplyEdit { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public WorkspaceEditSetting WorkspaceEdit { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting DidChangeConfiguration { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting DidChangeWatchedFiles { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SymbolSetting Symbol { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DynamicRegistrationSetting ExecuteCommand { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public SemanticTokensWorkspaceSetting SemanticTokens { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public DiagnosticWorkspaceSetting Diagnostics { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Configuration { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public InlayHintWorkspaceSetting InlayHint { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public CodeLensWorkspaceSetting CodeLens { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ApplyEdit();
    [CompilerGeneratedAttribute]
public void set_ApplyEdit(bool value);
    [CompilerGeneratedAttribute]
public WorkspaceEditSetting get_WorkspaceEdit();
    [CompilerGeneratedAttribute]
public void set_WorkspaceEdit(WorkspaceEditSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_DidChangeConfiguration();
    [CompilerGeneratedAttribute]
public void set_DidChangeConfiguration(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_DidChangeWatchedFiles();
    [CompilerGeneratedAttribute]
public void set_DidChangeWatchedFiles(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public SymbolSetting get_Symbol();
    [CompilerGeneratedAttribute]
public void set_Symbol(SymbolSetting value);
    [CompilerGeneratedAttribute]
public DynamicRegistrationSetting get_ExecuteCommand();
    [CompilerGeneratedAttribute]
public void set_ExecuteCommand(DynamicRegistrationSetting value);
    [CompilerGeneratedAttribute]
public SemanticTokensWorkspaceSetting get_SemanticTokens();
    [CompilerGeneratedAttribute]
public void set_SemanticTokens(SemanticTokensWorkspaceSetting value);
    [CompilerGeneratedAttribute]
public DiagnosticWorkspaceSetting get_Diagnostics();
    [CompilerGeneratedAttribute]
public void set_Diagnostics(DiagnosticWorkspaceSetting value);
    [CompilerGeneratedAttribute]
public bool get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(bool value);
    [CompilerGeneratedAttribute]
public InlayHintWorkspaceSetting get_InlayHint();
    [CompilerGeneratedAttribute]
public void set_InlayHint(InlayHintWorkspaceSetting value);
    [CompilerGeneratedAttribute]
public CodeLensWorkspaceSetting get_CodeLens();
    [CompilerGeneratedAttribute]
public void set_CodeLens(CodeLensWorkspaceSetting value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticParams : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult>> <PartialResultToken>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private PreviousResultId[] <PreviousResultId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult>> PartialResultToken { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public string Identifier { get; public set; }
    [DataMemberAttribute]
public PreviousResultId[] PreviousResultId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult>> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<SumType`2<WorkspaceDiagnosticReport, WorkspaceDiagnosticReportPartialResult>> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Identifier();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public PreviousResultId[] get_PreviousResultId();
    [CompilerGeneratedAttribute]
public void set_PreviousResultId(PreviousResultId[] value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReport : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private SumType`2[] <Items>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public SumType`2[] Items { get; public set; }
    [CompilerGeneratedAttribute]
public SumType`2[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(SumType`2[] value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReportPartialResult : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private SumType`2[] <Items>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public SumType`2[] Items { get; public set; }
    [CompilerGeneratedAttribute]
public SumType`2[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(SumType`2[] value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceEdit : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, TextEdit[]> <Changes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<SumType`2<TextDocumentEdit[], SumType`4[]>> <DocumentChanges>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Dictionary`2<string, TextEdit[]> Changes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public Nullable`1<SumType`2<TextDocumentEdit[], SumType`4[]>> DocumentChanges { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, TextEdit[]> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(Dictionary`2<string, TextEdit[]> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SumType`2<TextDocumentEdit[], SumType`4[]>> get_DocumentChanges();
    [CompilerGeneratedAttribute]
public void set_DocumentChanges(Nullable`1<SumType`2<TextDocumentEdit[], SumType`4[]>> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceEditSetting : object {
    [CompilerGeneratedAttribute]
private bool <DocumentChanges>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceOperationKind[] <ResourceOperations>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool DocumentChanges { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public ResourceOperationKind[] ResourceOperations { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DocumentChanges();
    [CompilerGeneratedAttribute]
public void set_DocumentChanges(bool value);
    [CompilerGeneratedAttribute]
public ResourceOperationKind[] get_ResourceOperations();
    [CompilerGeneratedAttribute]
public void set_ResourceOperations(ResourceOperationKind[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[KindAttribute("full", "kind")]
internal class Roslyn.LanguageServer.Protocol.WorkspaceFullDocumentDiagnosticReport : FullDocumentDiagnosticReport {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Version>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Version { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<int> value);
}
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceSymbolOptions : object {
    [CompilerGeneratedAttribute]
private bool <WorkDoneProgress>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool WorkDoneProgress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WorkDoneProgress();
    [CompilerGeneratedAttribute]
public sealed virtual Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WorkDoneProgress(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
internal class Roslyn.LanguageServer.Protocol.WorkspaceSymbolParams : object {
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IProgress`1<SymbolInformation[]> <PartialResultToken>k__BackingField;
    [DataMemberAttribute]
public string Query { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyAttribute]
public IProgress`1<SymbolInformation[]> PartialResultToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IProgress`1<SymbolInformation[]> get_PartialResultToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartialResultToken(IProgress`1<SymbolInformation[]> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[KindAttribute("unchanged", "kind")]
internal class Roslyn.LanguageServer.Protocol.WorkspaceUnchangedDocumentDiagnosticReport : UnchangedDocumentDiagnosticReport {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Version>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Roslyn.LanguageServer.Protocol.DocumentUriConverter")]
public Uri Uri { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Version { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<int> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Roslyn.Text.Adornments.ClassifiedTextElement : object {
    public static string TextClassificationTypeName;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ClassifiedTextRun> <Runs>k__BackingField;
    public IEnumerable`1<ClassifiedTextRun> Runs { get; }
    public ClassifiedTextElement(ClassifiedTextRun[] runs);
    public ClassifiedTextElement(IEnumerable`1<ClassifiedTextRun> runs);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ClassifiedTextRun> get_Runs();
    public static ClassifiedTextElement CreateHyperlink(string text, string tooltip, Action navigationAction);
    public static ClassifiedTextElement CreatePlainText(string text);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Roslyn.Text.Adornments.ClassifiedTextRun : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <ClassificationTypeName>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MarkerTagType>k__BackingField;
    [CompilerGeneratedAttribute]
private ClassifiedTextRunStyle <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tooltip>k__BackingField;
    [CompilerGeneratedAttribute]
private Action <NavigationAction>k__BackingField;
    [NullableAttribute("1")]
public string ClassificationTypeName { get; }
    [NullableAttribute("1")]
public string Text { get; }
    public string MarkerTagType { get; }
    public ClassifiedTextRunStyle Style { get; }
    public string Tooltip { get; }
    public Action NavigationAction { get; }
    public ClassifiedTextRun(string classificationTypeName, string text, ClassifiedTextRunStyle style, string markerTagType, Action navigationAction, string tooltip);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ClassificationTypeName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public string get_MarkerTagType();
    [CompilerGeneratedAttribute]
public ClassifiedTextRunStyle get_Style();
    [CompilerGeneratedAttribute]
public string get_Tooltip();
    [CompilerGeneratedAttribute]
public Action get_NavigationAction();
}
[FlagsAttribute]
internal enum Roslyn.Text.Adornments.ClassifiedTextRunStyle : Enum {
    public int value__;
    public static ClassifiedTextRunStyle Plain;
    public static ClassifiedTextRunStyle Bold;
    public static ClassifiedTextRunStyle Italic;
    public static ClassifiedTextRunStyle Underline;
    public static ClassifiedTextRunStyle UseClassificationFont;
    public static ClassifiedTextRunStyle UseClassificationStyle;
}
internal class Roslyn.Text.Adornments.ContainerElement : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <Elements>k__BackingField;
    [CompilerGeneratedAttribute]
private ContainerElementStyle <Style>k__BackingField;
    public IEnumerable`1<object> Elements { get; }
    public ContainerElementStyle Style { get; }
    public ContainerElement(ContainerElementStyle style, IEnumerable`1<object> elements);
    public ContainerElement(ContainerElementStyle style, Object[] elements);
    [CompilerGeneratedAttribute]
public IEnumerable`1<object> get_Elements();
    [CompilerGeneratedAttribute]
public ContainerElementStyle get_Style();
}
[FlagsAttribute]
internal enum Roslyn.Text.Adornments.ContainerElementStyle : Enum {
    public int value__;
    public static ContainerElementStyle Wrapped;
    public static ContainerElementStyle Stacked;
    public static ContainerElementStyle VerticalPadding;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Roslyn.Text.Adornments.ImageElement : object {
    [NullableAttribute("1")]
public static ImageElement Empty;
    [CompilerGeneratedAttribute]
private ImageId <ImageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AutomationName>k__BackingField;
    public ImageId ImageId { get; }
    public string AutomationName { get; }
    public ImageElement(ImageId imageId);
    public ImageElement(ImageId imageId, string automationName);
    private static ImageElement();
    [CompilerGeneratedAttribute]
public ImageId get_ImageId();
    [CompilerGeneratedAttribute]
public string get_AutomationName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsByRefLikeAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
