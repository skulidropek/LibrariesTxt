[FriendlyNameAttribute("junit")]
[ExtensionUriAttribute("logger://Microsoft/TestPlatform/JUnitXmlLogger/v1")]
internal class JUnit.TestLogger.JUnitXmlTestLogger : object {
    public static string ExtensionUri;
    public static string FriendlyName;
    public static string LogFilePathKey;
    public static string EnvironmentKey;
    private string outputFilePath;
    private string environmentOpt;
    private object resultsGuard;
    private List`1<TestResultInfo> results;
    private DateTime localStartTime;
    private static List`1<string> errorTypes;
    private static Dictionary`2<string, string> errorTypeKeyValuePair;
    private static JUnitXmlTestLogger();
    public sealed virtual void Initialize(TestLoggerEvents events, string testResultsDirPath);
    public sealed virtual void Initialize(TestLoggerEvents events, Dictionary`2<string, string> parameters);
    private void InitializeImpl(TestLoggerEvents events, string outputPath);
    internal void TestMessageHandler(object sender, TestRunMessageEventArgs e);
    internal void TestResultHandler(object sender, TestResultEventArgs e);
    internal void TestRunCompleteHandler(object sender, TestRunCompleteEventArgs e);
    private XElement CreateTestSuitesElement(List`1<TestResultInfo> results);
    private ValueTuple`4<XElement, int, int, TimeSpan> CreateTestSuiteElement(IGrouping`2<string, TestResultInfo> resultsByAssembly, int index);
    private static ValueTuple`7<List`1<XElement>, int, int, int, int, int, TimeSpan> CreateTestCases(IGrouping`2<string, TestResultInfo> resultsByType, List`1<TestResultInfo> testResultAsError);
    private static bool IsError(TestResultInfo result);
    private static XElement CreateTestCaseElement(TestResultInfo result);
    private static bool TryParseName(string testCaseName, String& metadataTypeName, String& metadataMethodName, String& metadataMethodArguments);
    private static string RemoveInvalidXmlChar(string str);
    private static string ReplaceInvalidCharacterWithUniCodeEscapeSequence(Match match);
    [CompilerGeneratedAttribute]
private ValueTuple`4<XElement, int, int, TimeSpan> <CreateTestSuitesElement>b__18_2(IGrouping`2<string, TestResultInfo> resultsByAssembly, int index);
}
