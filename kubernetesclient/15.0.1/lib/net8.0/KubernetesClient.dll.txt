public abstract class k8s.AbstractKubernetes : object {
    [CompilerGeneratedAttribute]
private TimeSpan <HttpClientTimeout>k__BackingField;
    public TimeSpan HttpClientTimeout { get; public set; }
    public ICoreOperations Core { get; }
    public ICoreV1Operations CoreV1 { get; }
    public IApisOperations Apis { get; }
    public IAdmissionregistrationOperations Admissionregistration { get; }
    public IAdmissionregistrationV1Operations AdmissionregistrationV1 { get; }
    public IAdmissionregistrationV1alpha1Operations AdmissionregistrationV1alpha1 { get; }
    public IAdmissionregistrationV1beta1Operations AdmissionregistrationV1beta1 { get; }
    public IApiextensionsOperations Apiextensions { get; }
    public IApiextensionsV1Operations ApiextensionsV1 { get; }
    public IApiregistrationOperations Apiregistration { get; }
    public IApiregistrationV1Operations ApiregistrationV1 { get; }
    public IAppsOperations Apps { get; }
    public IAppsV1Operations AppsV1 { get; }
    public IAuthenticationOperations Authentication { get; }
    public IAuthenticationV1Operations AuthenticationV1 { get; }
    public IAuthenticationV1alpha1Operations AuthenticationV1alpha1 { get; }
    public IAuthenticationV1beta1Operations AuthenticationV1beta1 { get; }
    public IAuthorizationOperations Authorization { get; }
    public IAuthorizationV1Operations AuthorizationV1 { get; }
    public IAutoscalingOperations Autoscaling { get; }
    public IAutoscalingV1Operations AutoscalingV1 { get; }
    public IAutoscalingV2Operations AutoscalingV2 { get; }
    public IBatchOperations Batch { get; }
    public IBatchV1Operations BatchV1 { get; }
    public ICertificatesOperations Certificates { get; }
    public ICertificatesV1Operations CertificatesV1 { get; }
    public ICertificatesV1alpha1Operations CertificatesV1alpha1 { get; }
    public ICoordinationOperations Coordination { get; }
    public ICoordinationV1Operations CoordinationV1 { get; }
    public ICoordinationV1alpha1Operations CoordinationV1alpha1 { get; }
    public IDiscoveryOperations Discovery { get; }
    public IDiscoveryV1Operations DiscoveryV1 { get; }
    public IEventsOperations Events { get; }
    public IEventsV1Operations EventsV1 { get; }
    public IFlowcontrolApiserverOperations FlowcontrolApiserver { get; }
    public IFlowcontrolApiserverV1Operations FlowcontrolApiserverV1 { get; }
    public IFlowcontrolApiserverV1beta3Operations FlowcontrolApiserverV1beta3 { get; }
    public IInternalApiserverOperations InternalApiserver { get; }
    public IInternalApiserverV1alpha1Operations InternalApiserverV1alpha1 { get; }
    public INetworkingOperations Networking { get; }
    public INetworkingV1Operations NetworkingV1 { get; }
    public INetworkingV1beta1Operations NetworkingV1beta1 { get; }
    public INodeOperations Node { get; }
    public INodeV1Operations NodeV1 { get; }
    public IPolicyOperations Policy { get; }
    public IPolicyV1Operations PolicyV1 { get; }
    public IRbacAuthorizationOperations RbacAuthorization { get; }
    public IRbacAuthorizationV1Operations RbacAuthorizationV1 { get; }
    public IResourceOperations Resource { get; }
    public IResourceV1alpha3Operations ResourceV1alpha3 { get; }
    public ISchedulingOperations Scheduling { get; }
    public ISchedulingV1Operations SchedulingV1 { get; }
    public IStorageOperations Storage { get; }
    public IStorageV1Operations StorageV1 { get; }
    public IStorageV1alpha1Operations StorageV1alpha1 { get; }
    public IStorageV1beta1Operations StorageV1beta1 { get; }
    public IStoragemigrationOperations Storagemigration { get; }
    public IStoragemigrationV1alpha1Operations StoragemigrationV1alpha1 { get; }
    public ILogsOperations Logs { get; }
    public IVersionOperations Version { get; }
    public ICustomObjectsOperations CustomObjects { get; }
    public IWellKnownOperations WellKnown { get; }
    public IOpenidOperations Openid { get; }
    [CompilerGeneratedAttribute]
public virtual TimeSpan get_HttpClientTimeout();
    [CompilerGeneratedAttribute]
public virtual void set_HttpClientTimeout(TimeSpan value);
    protected virtual MediaTypeHeaderValue GetHeader(object body);
    private MediaTypeHeaderValue GetHeader(V1Patch body);
    protected abstract virtual Task`1<HttpOperationResponse`1<T>> CreateResultAsync(HttpRequestMessage httpRequest, HttpResponseMessage httpResponse, Nullable`1<bool> watch, CancellationToken cancellationToken);
    protected abstract virtual Task`1<HttpResponseMessage> SendRequest(string relativeUri, HttpMethod method, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, T body, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreOperations_GetAPIVersionsWithHttpMessagesAsync>d__10`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreOperations_GetAPIVersionsWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreOperations-GetAPIVersionsWithHttpMessagesAsync>d__11")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIVersions>> k8s.ICoreOperations.GetAPIVersionsWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__12`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__13")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.ICoreV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListComponentStatusWithHttpMessagesAsync>d__14`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListComponentStatusWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListComponentStatusWithHttpMessagesAsync>d__15")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ComponentStatusList>> k8s.ICoreV1Operations.ListComponentStatusWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadComponentStatusWithHttpMessagesAsync>d__16`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadComponentStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadComponentStatusWithHttpMessagesAsync>d__17")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ComponentStatus>> k8s.ICoreV1Operations.ReadComponentStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListConfigMapForAllNamespacesWithHttpMessagesAsync>d__18`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListConfigMapForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListConfigMapForAllNamespacesWithHttpMessagesAsync>d__19")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ConfigMapList>> k8s.ICoreV1Operations.ListConfigMapForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListEndpointsForAllNamespacesWithHttpMessagesAsync>d__20`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListEndpointsForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListEndpointsForAllNamespacesWithHttpMessagesAsync>d__21")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointsList>> k8s.ICoreV1Operations.ListEndpointsForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListEventForAllNamespacesWithHttpMessagesAsync>d__22`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListEventForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListEventForAllNamespacesWithHttpMessagesAsync>d__23")]
private sealed virtual override Task`1<HttpOperationResponse`1<Corev1EventList>> k8s.ICoreV1Operations.ListEventForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListLimitRangeForAllNamespacesWithHttpMessagesAsync>d__24`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListLimitRangeForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListLimitRangeForAllNamespacesWithHttpMessagesAsync>d__25")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LimitRangeList>> k8s.ICoreV1Operations.ListLimitRangeForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespaceWithHttpMessagesAsync>d__26`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespaceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespaceWithHttpMessagesAsync>d__27")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NamespaceList>> k8s.ICoreV1Operations.ListNamespaceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespaceWithHttpMessagesAsync>d__28`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespaceWithHttpMessagesAsync(V1Namespace body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespaceWithHttpMessagesAsync>d__29")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.CreateNamespaceWithHttpMessagesAsync(V1Namespace body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedBindingWithHttpMessagesAsync>d__30`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedBindingWithHttpMessagesAsync(V1Binding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedBindingWithHttpMessagesAsync>d__31")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Binding>> k8s.ICoreV1Operations.CreateNamespacedBindingWithHttpMessagesAsync(V1Binding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedConfigMapWithHttpMessagesAsync>d__32`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedConfigMapWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedConfigMapWithHttpMessagesAsync>d__33")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedConfigMapWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedConfigMapWithHttpMessagesAsync>d__34`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedConfigMapWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedConfigMapWithHttpMessagesAsync>d__35")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ConfigMapList>> k8s.ICoreV1Operations.ListNamespacedConfigMapWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedConfigMapWithHttpMessagesAsync>d__36`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedConfigMapWithHttpMessagesAsync(V1ConfigMap body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedConfigMapWithHttpMessagesAsync>d__37")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ConfigMap>> k8s.ICoreV1Operations.CreateNamespacedConfigMapWithHttpMessagesAsync(V1ConfigMap body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedConfigMapWithHttpMessagesAsync>d__38`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedConfigMapWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedConfigMapWithHttpMessagesAsync>d__39")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNamespacedConfigMapWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedConfigMapWithHttpMessagesAsync>d__40`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedConfigMapWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedConfigMapWithHttpMessagesAsync>d__41")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ConfigMap>> k8s.ICoreV1Operations.ReadNamespacedConfigMapWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedConfigMapWithHttpMessagesAsync>d__42`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedConfigMapWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedConfigMapWithHttpMessagesAsync>d__43")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ConfigMap>> k8s.ICoreV1Operations.PatchNamespacedConfigMapWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedConfigMapWithHttpMessagesAsync>d__44`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedConfigMapWithHttpMessagesAsync(V1ConfigMap body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedConfigMapWithHttpMessagesAsync>d__45")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ConfigMap>> k8s.ICoreV1Operations.ReplaceNamespacedConfigMapWithHttpMessagesAsync(V1ConfigMap body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedEndpointsWithHttpMessagesAsync>d__46`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedEndpointsWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedEndpointsWithHttpMessagesAsync>d__47")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedEndpointsWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedEndpointsWithHttpMessagesAsync>d__48`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedEndpointsWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedEndpointsWithHttpMessagesAsync>d__49")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointsList>> k8s.ICoreV1Operations.ListNamespacedEndpointsWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedEndpointsWithHttpMessagesAsync>d__50`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedEndpointsWithHttpMessagesAsync(V1Endpoints body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedEndpointsWithHttpMessagesAsync>d__51")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Endpoints>> k8s.ICoreV1Operations.CreateNamespacedEndpointsWithHttpMessagesAsync(V1Endpoints body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedEndpointsWithHttpMessagesAsync>d__52`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedEndpointsWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedEndpointsWithHttpMessagesAsync>d__53")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNamespacedEndpointsWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedEndpointsWithHttpMessagesAsync>d__54`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedEndpointsWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedEndpointsWithHttpMessagesAsync>d__55")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Endpoints>> k8s.ICoreV1Operations.ReadNamespacedEndpointsWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedEndpointsWithHttpMessagesAsync>d__56`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedEndpointsWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedEndpointsWithHttpMessagesAsync>d__57")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Endpoints>> k8s.ICoreV1Operations.PatchNamespacedEndpointsWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedEndpointsWithHttpMessagesAsync>d__58`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedEndpointsWithHttpMessagesAsync(V1Endpoints body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedEndpointsWithHttpMessagesAsync>d__59")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Endpoints>> k8s.ICoreV1Operations.ReplaceNamespacedEndpointsWithHttpMessagesAsync(V1Endpoints body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedEventWithHttpMessagesAsync>d__60`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedEventWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedEventWithHttpMessagesAsync>d__61")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedEventWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedEventWithHttpMessagesAsync>d__62`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedEventWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedEventWithHttpMessagesAsync>d__63")]
private sealed virtual override Task`1<HttpOperationResponse`1<Corev1EventList>> k8s.ICoreV1Operations.ListNamespacedEventWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedEventWithHttpMessagesAsync>d__64`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedEventWithHttpMessagesAsync(Corev1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedEventWithHttpMessagesAsync>d__65")]
private sealed virtual override Task`1<HttpOperationResponse`1<Corev1Event>> k8s.ICoreV1Operations.CreateNamespacedEventWithHttpMessagesAsync(Corev1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedEventWithHttpMessagesAsync>d__66`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedEventWithHttpMessagesAsync>d__67")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedEventWithHttpMessagesAsync>d__68`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedEventWithHttpMessagesAsync>d__69")]
private sealed virtual override Task`1<HttpOperationResponse`1<Corev1Event>> k8s.ICoreV1Operations.ReadNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedEventWithHttpMessagesAsync>d__70`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedEventWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedEventWithHttpMessagesAsync>d__71")]
private sealed virtual override Task`1<HttpOperationResponse`1<Corev1Event>> k8s.ICoreV1Operations.PatchNamespacedEventWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedEventWithHttpMessagesAsync>d__72`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedEventWithHttpMessagesAsync(Corev1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedEventWithHttpMessagesAsync>d__73")]
private sealed virtual override Task`1<HttpOperationResponse`1<Corev1Event>> k8s.ICoreV1Operations.ReplaceNamespacedEventWithHttpMessagesAsync(Corev1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedLimitRangeWithHttpMessagesAsync>d__74`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedLimitRangeWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedLimitRangeWithHttpMessagesAsync>d__75")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedLimitRangeWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedLimitRangeWithHttpMessagesAsync>d__76`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedLimitRangeWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedLimitRangeWithHttpMessagesAsync>d__77")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LimitRangeList>> k8s.ICoreV1Operations.ListNamespacedLimitRangeWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedLimitRangeWithHttpMessagesAsync>d__78`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedLimitRangeWithHttpMessagesAsync(V1LimitRange body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedLimitRangeWithHttpMessagesAsync>d__79")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LimitRange>> k8s.ICoreV1Operations.CreateNamespacedLimitRangeWithHttpMessagesAsync(V1LimitRange body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedLimitRangeWithHttpMessagesAsync>d__80`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedLimitRangeWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedLimitRangeWithHttpMessagesAsync>d__81")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNamespacedLimitRangeWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedLimitRangeWithHttpMessagesAsync>d__82`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedLimitRangeWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedLimitRangeWithHttpMessagesAsync>d__83")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LimitRange>> k8s.ICoreV1Operations.ReadNamespacedLimitRangeWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedLimitRangeWithHttpMessagesAsync>d__84`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedLimitRangeWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedLimitRangeWithHttpMessagesAsync>d__85")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LimitRange>> k8s.ICoreV1Operations.PatchNamespacedLimitRangeWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedLimitRangeWithHttpMessagesAsync>d__86`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedLimitRangeWithHttpMessagesAsync(V1LimitRange body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedLimitRangeWithHttpMessagesAsync>d__87")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LimitRange>> k8s.ICoreV1Operations.ReplaceNamespacedLimitRangeWithHttpMessagesAsync(V1LimitRange body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__88`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__89")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__90`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__91")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaimList>> k8s.ICoreV1Operations.ListNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__92`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1PersistentVolumeClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__93")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.CreateNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1PersistentVolumeClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__94`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__95")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.DeleteNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__96`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__97")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.ReadNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__98`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__99")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.PatchNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__100`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedPersistentVolumeClaimWithHttpMessagesAsync>d__101")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.ReplaceNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync>d__102`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync>d__103")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.ReadNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync>d__104`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync>d__105")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.PatchNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync>d__106`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync>d__107")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> k8s.ICoreV1Operations.ReplaceNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedPodWithHttpMessagesAsync>d__108`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedPodWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedPodWithHttpMessagesAsync>d__109")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedPodWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedPodWithHttpMessagesAsync>d__110`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedPodWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedPodWithHttpMessagesAsync>d__111")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodList>> k8s.ICoreV1Operations.ListNamespacedPodWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedPodWithHttpMessagesAsync>d__112`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedPodWithHttpMessagesAsync(V1Pod body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedPodWithHttpMessagesAsync>d__113")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.CreateNamespacedPodWithHttpMessagesAsync(V1Pod body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedPodWithHttpMessagesAsync>d__114`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedPodWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedPodWithHttpMessagesAsync>d__115")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.DeleteNamespacedPodWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedPodWithHttpMessagesAsync>d__116`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedPodWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedPodWithHttpMessagesAsync>d__117")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.ReadNamespacedPodWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedPodWithHttpMessagesAsync>d__118`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedPodWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedPodWithHttpMessagesAsync>d__119")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.PatchNamespacedPodWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedPodWithHttpMessagesAsync>d__120`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedPodWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedPodWithHttpMessagesAsync>d__121")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.ReplaceNamespacedPodWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNamespacedPodAttachWithHttpMessagesAsync>d__122")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNamespacedPodAttachWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNamespacedPodAttachWithHttpMessagesAsync>d__123")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNamespacedPodAttachWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNamespacedPodAttachWithHttpMessagesAsync>d__124")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNamespacedPodAttachWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNamespacedPodAttachWithHttpMessagesAsync>d__125")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNamespacedPodAttachWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedPodBindingWithHttpMessagesAsync>d__126`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedPodBindingWithHttpMessagesAsync(V1Binding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedPodBindingWithHttpMessagesAsync>d__127")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Binding>> k8s.ICoreV1Operations.CreateNamespacedPodBindingWithHttpMessagesAsync(V1Binding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedPodEphemeralcontainersWithHttpMessagesAsync>d__128`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedPodEphemeralcontainersWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedPodEphemeralcontainersWithHttpMessagesAsync>d__129")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.ReadNamespacedPodEphemeralcontainersWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedPodEphemeralcontainersWithHttpMessagesAsync>d__130`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedPodEphemeralcontainersWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedPodEphemeralcontainersWithHttpMessagesAsync>d__131")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.PatchNamespacedPodEphemeralcontainersWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedPodEphemeralcontainersWithHttpMessagesAsync>d__132`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedPodEphemeralcontainersWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedPodEphemeralcontainersWithHttpMessagesAsync>d__133")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.ReplaceNamespacedPodEphemeralcontainersWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedPodEvictionWithHttpMessagesAsync>d__134`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedPodEvictionWithHttpMessagesAsync(V1Eviction body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedPodEvictionWithHttpMessagesAsync>d__135")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Eviction>> k8s.ICoreV1Operations.CreateNamespacedPodEvictionWithHttpMessagesAsync(V1Eviction body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNamespacedPodExecWithHttpMessagesAsync>d__136")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNamespacedPodExecWithHttpMessagesAsync(string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNamespacedPodExecWithHttpMessagesAsync>d__137")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNamespacedPodExecWithHttpMessagesAsync(string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNamespacedPodExecWithHttpMessagesAsync>d__138")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNamespacedPodExecWithHttpMessagesAsync(string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNamespacedPodExecWithHttpMessagesAsync>d__139")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNamespacedPodExecWithHttpMessagesAsync(string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedPodLogWithHttpMessagesAsync>d__140")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ReadNamespacedPodLogWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> follow, Nullable`1<bool> insecureSkipTLSVerifyBackend, Nullable`1<int> limitBytes, Nullable`1<bool> pretty, Nullable`1<bool> previous, Nullable`1<int> sinceSeconds, Nullable`1<int> tailLines, Nullable`1<bool> timestamps, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedPodLogWithHttpMessagesAsync>d__141")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ReadNamespacedPodLogWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> follow, Nullable`1<bool> insecureSkipTLSVerifyBackend, Nullable`1<int> limitBytes, Nullable`1<bool> pretty, Nullable`1<bool> previous, Nullable`1<int> sinceSeconds, Nullable`1<int> tailLines, Nullable`1<bool> timestamps, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNamespacedPodPortforwardWithHttpMessagesAsync>d__142")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNamespacedPodPortforwardWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<int> ports, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNamespacedPodPortforwardWithHttpMessagesAsync>d__143")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNamespacedPodPortforwardWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<int> ports, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNamespacedPodPortforwardWithHttpMessagesAsync>d__144")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNamespacedPodPortforwardWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<int> ports, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNamespacedPodPortforwardWithHttpMessagesAsync>d__145")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNamespacedPodPortforwardWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<int> ports, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectDeleteNamespacedPodProxyWithHttpMessagesAsync>d__146")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectDeleteNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectDeleteNamespacedPodProxyWithHttpMessagesAsync>d__147")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectDeleteNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNamespacedPodProxyWithHttpMessagesAsync>d__148")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNamespacedPodProxyWithHttpMessagesAsync>d__149")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectHeadNamespacedPodProxyWithHttpMessagesAsync>d__150")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectHeadNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectHeadNamespacedPodProxyWithHttpMessagesAsync>d__151")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectHeadNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPatchNamespacedPodProxyWithHttpMessagesAsync>d__152")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPatchNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPatchNamespacedPodProxyWithHttpMessagesAsync>d__153")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPatchNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNamespacedPodProxyWithHttpMessagesAsync>d__154")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNamespacedPodProxyWithHttpMessagesAsync>d__155")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPutNamespacedPodProxyWithHttpMessagesAsync>d__156")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPutNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPutNamespacedPodProxyWithHttpMessagesAsync>d__157")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPutNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectDeleteNamespacedPodProxyWithPathWithHttpMessagesAsync>d__158")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectDeleteNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectDeleteNamespacedPodProxyWithPathWithHttpMessagesAsync>d__159")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectDeleteNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNamespacedPodProxyWithPathWithHttpMessagesAsync>d__160")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNamespacedPodProxyWithPathWithHttpMessagesAsync>d__161")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectHeadNamespacedPodProxyWithPathWithHttpMessagesAsync>d__162")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectHeadNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectHeadNamespacedPodProxyWithPathWithHttpMessagesAsync>d__163")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectHeadNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPatchNamespacedPodProxyWithPathWithHttpMessagesAsync>d__164")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPatchNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPatchNamespacedPodProxyWithPathWithHttpMessagesAsync>d__165")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPatchNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNamespacedPodProxyWithPathWithHttpMessagesAsync>d__166")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNamespacedPodProxyWithPathWithHttpMessagesAsync>d__167")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPutNamespacedPodProxyWithPathWithHttpMessagesAsync>d__168")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPutNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPutNamespacedPodProxyWithPathWithHttpMessagesAsync>d__169")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPutNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedPodStatusWithHttpMessagesAsync>d__170`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedPodStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedPodStatusWithHttpMessagesAsync>d__171")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.ReadNamespacedPodStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedPodStatusWithHttpMessagesAsync>d__172`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedPodStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedPodStatusWithHttpMessagesAsync>d__173")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.PatchNamespacedPodStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedPodStatusWithHttpMessagesAsync>d__174`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedPodStatusWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedPodStatusWithHttpMessagesAsync>d__175")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Pod>> k8s.ICoreV1Operations.ReplaceNamespacedPodStatusWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedPodTemplateWithHttpMessagesAsync>d__176`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedPodTemplateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedPodTemplateWithHttpMessagesAsync>d__177")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedPodTemplateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedPodTemplateWithHttpMessagesAsync>d__178`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedPodTemplateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedPodTemplateWithHttpMessagesAsync>d__179")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodTemplateList>> k8s.ICoreV1Operations.ListNamespacedPodTemplateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedPodTemplateWithHttpMessagesAsync>d__180`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedPodTemplateWithHttpMessagesAsync(V1PodTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedPodTemplateWithHttpMessagesAsync>d__181")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodTemplate>> k8s.ICoreV1Operations.CreateNamespacedPodTemplateWithHttpMessagesAsync(V1PodTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedPodTemplateWithHttpMessagesAsync>d__182`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedPodTemplateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedPodTemplateWithHttpMessagesAsync>d__183")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodTemplate>> k8s.ICoreV1Operations.DeleteNamespacedPodTemplateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedPodTemplateWithHttpMessagesAsync>d__184`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedPodTemplateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedPodTemplateWithHttpMessagesAsync>d__185")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodTemplate>> k8s.ICoreV1Operations.ReadNamespacedPodTemplateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedPodTemplateWithHttpMessagesAsync>d__186`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedPodTemplateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedPodTemplateWithHttpMessagesAsync>d__187")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodTemplate>> k8s.ICoreV1Operations.PatchNamespacedPodTemplateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedPodTemplateWithHttpMessagesAsync>d__188`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedPodTemplateWithHttpMessagesAsync(V1PodTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedPodTemplateWithHttpMessagesAsync>d__189")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodTemplate>> k8s.ICoreV1Operations.ReplaceNamespacedPodTemplateWithHttpMessagesAsync(V1PodTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedReplicationControllerWithHttpMessagesAsync>d__190`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedReplicationControllerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedReplicationControllerWithHttpMessagesAsync>d__191")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedReplicationControllerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedReplicationControllerWithHttpMessagesAsync>d__192`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedReplicationControllerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedReplicationControllerWithHttpMessagesAsync>d__193")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationControllerList>> k8s.ICoreV1Operations.ListNamespacedReplicationControllerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedReplicationControllerWithHttpMessagesAsync>d__194`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedReplicationControllerWithHttpMessagesAsync(V1ReplicationController body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedReplicationControllerWithHttpMessagesAsync>d__195")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationController>> k8s.ICoreV1Operations.CreateNamespacedReplicationControllerWithHttpMessagesAsync(V1ReplicationController body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedReplicationControllerWithHttpMessagesAsync>d__196`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedReplicationControllerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedReplicationControllerWithHttpMessagesAsync>d__197")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNamespacedReplicationControllerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedReplicationControllerWithHttpMessagesAsync>d__198`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedReplicationControllerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedReplicationControllerWithHttpMessagesAsync>d__199")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationController>> k8s.ICoreV1Operations.ReadNamespacedReplicationControllerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedReplicationControllerWithHttpMessagesAsync>d__200`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedReplicationControllerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedReplicationControllerWithHttpMessagesAsync>d__201")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationController>> k8s.ICoreV1Operations.PatchNamespacedReplicationControllerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedReplicationControllerWithHttpMessagesAsync>d__202`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedReplicationControllerWithHttpMessagesAsync(V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedReplicationControllerWithHttpMessagesAsync>d__203")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationController>> k8s.ICoreV1Operations.ReplaceNamespacedReplicationControllerWithHttpMessagesAsync(V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedReplicationControllerScaleWithHttpMessagesAsync>d__204`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedReplicationControllerScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedReplicationControllerScaleWithHttpMessagesAsync>d__205")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.ICoreV1Operations.ReadNamespacedReplicationControllerScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedReplicationControllerScaleWithHttpMessagesAsync>d__206`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedReplicationControllerScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedReplicationControllerScaleWithHttpMessagesAsync>d__207")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.ICoreV1Operations.PatchNamespacedReplicationControllerScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedReplicationControllerScaleWithHttpMessagesAsync>d__208`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedReplicationControllerScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedReplicationControllerScaleWithHttpMessagesAsync>d__209")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.ICoreV1Operations.ReplaceNamespacedReplicationControllerScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedReplicationControllerStatusWithHttpMessagesAsync>d__210`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedReplicationControllerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedReplicationControllerStatusWithHttpMessagesAsync>d__211")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationController>> k8s.ICoreV1Operations.ReadNamespacedReplicationControllerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedReplicationControllerStatusWithHttpMessagesAsync>d__212`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedReplicationControllerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedReplicationControllerStatusWithHttpMessagesAsync>d__213")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationController>> k8s.ICoreV1Operations.PatchNamespacedReplicationControllerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedReplicationControllerStatusWithHttpMessagesAsync>d__214`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedReplicationControllerStatusWithHttpMessagesAsync(V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedReplicationControllerStatusWithHttpMessagesAsync>d__215")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationController>> k8s.ICoreV1Operations.ReplaceNamespacedReplicationControllerStatusWithHttpMessagesAsync(V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedResourceQuotaWithHttpMessagesAsync>d__216`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedResourceQuotaWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedResourceQuotaWithHttpMessagesAsync>d__217")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedResourceQuotaWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedResourceQuotaWithHttpMessagesAsync>d__218`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedResourceQuotaWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedResourceQuotaWithHttpMessagesAsync>d__219")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuotaList>> k8s.ICoreV1Operations.ListNamespacedResourceQuotaWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedResourceQuotaWithHttpMessagesAsync>d__220`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedResourceQuotaWithHttpMessagesAsync(V1ResourceQuota body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedResourceQuotaWithHttpMessagesAsync>d__221")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.CreateNamespacedResourceQuotaWithHttpMessagesAsync(V1ResourceQuota body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedResourceQuotaWithHttpMessagesAsync>d__222`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedResourceQuotaWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedResourceQuotaWithHttpMessagesAsync>d__223")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.DeleteNamespacedResourceQuotaWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedResourceQuotaWithHttpMessagesAsync>d__224`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedResourceQuotaWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedResourceQuotaWithHttpMessagesAsync>d__225")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.ReadNamespacedResourceQuotaWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedResourceQuotaWithHttpMessagesAsync>d__226`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedResourceQuotaWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedResourceQuotaWithHttpMessagesAsync>d__227")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.PatchNamespacedResourceQuotaWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedResourceQuotaWithHttpMessagesAsync>d__228`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedResourceQuotaWithHttpMessagesAsync(V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedResourceQuotaWithHttpMessagesAsync>d__229")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.ReplaceNamespacedResourceQuotaWithHttpMessagesAsync(V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedResourceQuotaStatusWithHttpMessagesAsync>d__230`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedResourceQuotaStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedResourceQuotaStatusWithHttpMessagesAsync>d__231")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.ReadNamespacedResourceQuotaStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedResourceQuotaStatusWithHttpMessagesAsync>d__232`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedResourceQuotaStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedResourceQuotaStatusWithHttpMessagesAsync>d__233")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.PatchNamespacedResourceQuotaStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedResourceQuotaStatusWithHttpMessagesAsync>d__234`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedResourceQuotaStatusWithHttpMessagesAsync(V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedResourceQuotaStatusWithHttpMessagesAsync>d__235")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuota>> k8s.ICoreV1Operations.ReplaceNamespacedResourceQuotaStatusWithHttpMessagesAsync(V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedSecretWithHttpMessagesAsync>d__236`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedSecretWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedSecretWithHttpMessagesAsync>d__237")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedSecretWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedSecretWithHttpMessagesAsync>d__238`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedSecretWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedSecretWithHttpMessagesAsync>d__239")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1SecretList>> k8s.ICoreV1Operations.ListNamespacedSecretWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedSecretWithHttpMessagesAsync>d__240`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedSecretWithHttpMessagesAsync(V1Secret body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedSecretWithHttpMessagesAsync>d__241")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Secret>> k8s.ICoreV1Operations.CreateNamespacedSecretWithHttpMessagesAsync(V1Secret body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedSecretWithHttpMessagesAsync>d__242`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedSecretWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedSecretWithHttpMessagesAsync>d__243")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNamespacedSecretWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedSecretWithHttpMessagesAsync>d__244`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedSecretWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedSecretWithHttpMessagesAsync>d__245")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Secret>> k8s.ICoreV1Operations.ReadNamespacedSecretWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedSecretWithHttpMessagesAsync>d__246`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedSecretWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedSecretWithHttpMessagesAsync>d__247")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Secret>> k8s.ICoreV1Operations.PatchNamespacedSecretWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedSecretWithHttpMessagesAsync>d__248`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedSecretWithHttpMessagesAsync(V1Secret body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedSecretWithHttpMessagesAsync>d__249")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Secret>> k8s.ICoreV1Operations.ReplaceNamespacedSecretWithHttpMessagesAsync(V1Secret body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedServiceAccountWithHttpMessagesAsync>d__250`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedServiceAccountWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedServiceAccountWithHttpMessagesAsync>d__251")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedServiceAccountWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedServiceAccountWithHttpMessagesAsync>d__252`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedServiceAccountWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedServiceAccountWithHttpMessagesAsync>d__253")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceAccountList>> k8s.ICoreV1Operations.ListNamespacedServiceAccountWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedServiceAccountWithHttpMessagesAsync>d__254`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedServiceAccountWithHttpMessagesAsync(V1ServiceAccount body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedServiceAccountWithHttpMessagesAsync>d__255")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceAccount>> k8s.ICoreV1Operations.CreateNamespacedServiceAccountWithHttpMessagesAsync(V1ServiceAccount body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedServiceAccountWithHttpMessagesAsync>d__256`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedServiceAccountWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedServiceAccountWithHttpMessagesAsync>d__257")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceAccount>> k8s.ICoreV1Operations.DeleteNamespacedServiceAccountWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedServiceAccountWithHttpMessagesAsync>d__258`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedServiceAccountWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedServiceAccountWithHttpMessagesAsync>d__259")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceAccount>> k8s.ICoreV1Operations.ReadNamespacedServiceAccountWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedServiceAccountWithHttpMessagesAsync>d__260`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedServiceAccountWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedServiceAccountWithHttpMessagesAsync>d__261")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceAccount>> k8s.ICoreV1Operations.PatchNamespacedServiceAccountWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedServiceAccountWithHttpMessagesAsync>d__262`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedServiceAccountWithHttpMessagesAsync(V1ServiceAccount body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedServiceAccountWithHttpMessagesAsync>d__263")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceAccount>> k8s.ICoreV1Operations.ReplaceNamespacedServiceAccountWithHttpMessagesAsync(V1ServiceAccount body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedServiceAccountTokenWithHttpMessagesAsync>d__264`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedServiceAccountTokenWithHttpMessagesAsync(Authenticationv1TokenRequest body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedServiceAccountTokenWithHttpMessagesAsync>d__265")]
private sealed virtual override Task`1<HttpOperationResponse`1<Authenticationv1TokenRequest>> k8s.ICoreV1Operations.CreateNamespacedServiceAccountTokenWithHttpMessagesAsync(Authenticationv1TokenRequest body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNamespacedServiceWithHttpMessagesAsync>d__266`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNamespacedServiceWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNamespacedServiceWithHttpMessagesAsync>d__267")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNamespacedServiceWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNamespacedServiceWithHttpMessagesAsync>d__268`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNamespacedServiceWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNamespacedServiceWithHttpMessagesAsync>d__269")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceList>> k8s.ICoreV1Operations.ListNamespacedServiceWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNamespacedServiceWithHttpMessagesAsync>d__270`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNamespacedServiceWithHttpMessagesAsync(V1Service body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNamespacedServiceWithHttpMessagesAsync>d__271")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.CreateNamespacedServiceWithHttpMessagesAsync(V1Service body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespacedServiceWithHttpMessagesAsync>d__272`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespacedServiceWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespacedServiceWithHttpMessagesAsync>d__273")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.DeleteNamespacedServiceWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedServiceWithHttpMessagesAsync>d__274`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedServiceWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedServiceWithHttpMessagesAsync>d__275")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.ReadNamespacedServiceWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedServiceWithHttpMessagesAsync>d__276`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedServiceWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedServiceWithHttpMessagesAsync>d__277")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.PatchNamespacedServiceWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedServiceWithHttpMessagesAsync>d__278`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedServiceWithHttpMessagesAsync(V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedServiceWithHttpMessagesAsync>d__279")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.ReplaceNamespacedServiceWithHttpMessagesAsync(V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectDeleteNamespacedServiceProxyWithHttpMessagesAsync>d__280")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectDeleteNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectDeleteNamespacedServiceProxyWithHttpMessagesAsync>d__281")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectDeleteNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNamespacedServiceProxyWithHttpMessagesAsync>d__282")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNamespacedServiceProxyWithHttpMessagesAsync>d__283")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectHeadNamespacedServiceProxyWithHttpMessagesAsync>d__284")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectHeadNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectHeadNamespacedServiceProxyWithHttpMessagesAsync>d__285")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectHeadNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPatchNamespacedServiceProxyWithHttpMessagesAsync>d__286")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPatchNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPatchNamespacedServiceProxyWithHttpMessagesAsync>d__287")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPatchNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNamespacedServiceProxyWithHttpMessagesAsync>d__288")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNamespacedServiceProxyWithHttpMessagesAsync>d__289")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPutNamespacedServiceProxyWithHttpMessagesAsync>d__290")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPutNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPutNamespacedServiceProxyWithHttpMessagesAsync>d__291")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPutNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectDeleteNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__292")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectDeleteNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectDeleteNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__293")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectDeleteNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__294")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__295")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectHeadNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__296")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectHeadNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectHeadNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__297")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectHeadNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPatchNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__298")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPatchNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPatchNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__299")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPatchNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__300")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__301")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPutNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__302")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPutNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPutNamespacedServiceProxyWithPathWithHttpMessagesAsync>d__303")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPutNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespacedServiceStatusWithHttpMessagesAsync>d__304`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespacedServiceStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespacedServiceStatusWithHttpMessagesAsync>d__305")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.ReadNamespacedServiceStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespacedServiceStatusWithHttpMessagesAsync>d__306`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespacedServiceStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespacedServiceStatusWithHttpMessagesAsync>d__307")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.PatchNamespacedServiceStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespacedServiceStatusWithHttpMessagesAsync>d__308`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespacedServiceStatusWithHttpMessagesAsync(V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespacedServiceStatusWithHttpMessagesAsync>d__309")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Service>> k8s.ICoreV1Operations.ReplaceNamespacedServiceStatusWithHttpMessagesAsync(V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNamespaceWithHttpMessagesAsync>d__310`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNamespaceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNamespaceWithHttpMessagesAsync>d__311")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNamespaceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespaceWithHttpMessagesAsync>d__312`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespaceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespaceWithHttpMessagesAsync>d__313")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.ReadNamespaceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespaceWithHttpMessagesAsync>d__314`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespaceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespaceWithHttpMessagesAsync>d__315")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.PatchNamespaceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespaceWithHttpMessagesAsync>d__316`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespaceWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespaceWithHttpMessagesAsync>d__317")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.ReplaceNamespaceWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespaceFinalizeWithHttpMessagesAsync>d__318`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespaceFinalizeWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespaceFinalizeWithHttpMessagesAsync>d__319")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.ReplaceNamespaceFinalizeWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNamespaceStatusWithHttpMessagesAsync>d__320`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNamespaceStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNamespaceStatusWithHttpMessagesAsync>d__321")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.ReadNamespaceStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNamespaceStatusWithHttpMessagesAsync>d__322`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNamespaceStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNamespaceStatusWithHttpMessagesAsync>d__323")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.PatchNamespaceStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNamespaceStatusWithHttpMessagesAsync>d__324`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNamespaceStatusWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNamespaceStatusWithHttpMessagesAsync>d__325")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Namespace>> k8s.ICoreV1Operations.ReplaceNamespaceStatusWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionNodeWithHttpMessagesAsync>d__326`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionNodeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionNodeWithHttpMessagesAsync>d__327")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionNodeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListNodeWithHttpMessagesAsync>d__328`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListNodeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListNodeWithHttpMessagesAsync>d__329")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NodeList>> k8s.ICoreV1Operations.ListNodeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreateNodeWithHttpMessagesAsync>d__330`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreateNodeWithHttpMessagesAsync(V1Node body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreateNodeWithHttpMessagesAsync>d__331")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Node>> k8s.ICoreV1Operations.CreateNodeWithHttpMessagesAsync(V1Node body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteNodeWithHttpMessagesAsync>d__332`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteNodeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteNodeWithHttpMessagesAsync>d__333")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteNodeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNodeWithHttpMessagesAsync>d__334`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNodeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNodeWithHttpMessagesAsync>d__335")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Node>> k8s.ICoreV1Operations.ReadNodeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNodeWithHttpMessagesAsync>d__336`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNodeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNodeWithHttpMessagesAsync>d__337")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Node>> k8s.ICoreV1Operations.PatchNodeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNodeWithHttpMessagesAsync>d__338`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNodeWithHttpMessagesAsync(V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNodeWithHttpMessagesAsync>d__339")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Node>> k8s.ICoreV1Operations.ReplaceNodeWithHttpMessagesAsync(V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectDeleteNodeProxyWithHttpMessagesAsync>d__340")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectDeleteNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectDeleteNodeProxyWithHttpMessagesAsync>d__341")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectDeleteNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNodeProxyWithHttpMessagesAsync>d__342")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNodeProxyWithHttpMessagesAsync>d__343")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectHeadNodeProxyWithHttpMessagesAsync>d__344")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectHeadNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectHeadNodeProxyWithHttpMessagesAsync>d__345")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectHeadNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPatchNodeProxyWithHttpMessagesAsync>d__346")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPatchNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPatchNodeProxyWithHttpMessagesAsync>d__347")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPatchNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNodeProxyWithHttpMessagesAsync>d__348")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNodeProxyWithHttpMessagesAsync>d__349")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPutNodeProxyWithHttpMessagesAsync>d__350")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPutNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPutNodeProxyWithHttpMessagesAsync>d__351")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPutNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectDeleteNodeProxyWithPathWithHttpMessagesAsync>d__352")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectDeleteNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectDeleteNodeProxyWithPathWithHttpMessagesAsync>d__353")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectDeleteNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectGetNodeProxyWithPathWithHttpMessagesAsync>d__354")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectGetNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectGetNodeProxyWithPathWithHttpMessagesAsync>d__355")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectGetNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectHeadNodeProxyWithPathWithHttpMessagesAsync>d__356")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectHeadNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectHeadNodeProxyWithPathWithHttpMessagesAsync>d__357")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectHeadNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPatchNodeProxyWithPathWithHttpMessagesAsync>d__358")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPatchNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPatchNodeProxyWithPathWithHttpMessagesAsync>d__359")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPatchNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPostNodeProxyWithPathWithHttpMessagesAsync>d__360")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPostNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPostNodeProxyWithPathWithHttpMessagesAsync>d__361")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPostNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ConnectPutNodeProxyWithPathWithHttpMessagesAsync>d__362")]
private Task`1<HttpOperationResponse`1<Stream>> ICoreV1Operations_ConnectPutNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ConnectPutNodeProxyWithPathWithHttpMessagesAsync>d__363")]
private sealed virtual override Task`1<HttpOperationResponse`1<Stream>> k8s.ICoreV1Operations.ConnectPutNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadNodeStatusWithHttpMessagesAsync>d__364`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadNodeStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadNodeStatusWithHttpMessagesAsync>d__365")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Node>> k8s.ICoreV1Operations.ReadNodeStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchNodeStatusWithHttpMessagesAsync>d__366`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchNodeStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchNodeStatusWithHttpMessagesAsync>d__367")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Node>> k8s.ICoreV1Operations.PatchNodeStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplaceNodeStatusWithHttpMessagesAsync>d__368`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplaceNodeStatusWithHttpMessagesAsync(V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplaceNodeStatusWithHttpMessagesAsync>d__369")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Node>> k8s.ICoreV1Operations.ReplaceNodeStatusWithHttpMessagesAsync(V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListPersistentVolumeClaimForAllNamespacesWithHttpMessagesAsync>d__370`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListPersistentVolumeClaimForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListPersistentVolumeClaimForAllNamespacesWithHttpMessagesAsync>d__371")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeClaimList>> k8s.ICoreV1Operations.ListPersistentVolumeClaimForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeleteCollectionPersistentVolumeWithHttpMessagesAsync>d__372`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeleteCollectionPersistentVolumeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeleteCollectionPersistentVolumeWithHttpMessagesAsync>d__373")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoreV1Operations.DeleteCollectionPersistentVolumeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListPersistentVolumeWithHttpMessagesAsync>d__374`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListPersistentVolumeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListPersistentVolumeWithHttpMessagesAsync>d__375")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolumeList>> k8s.ICoreV1Operations.ListPersistentVolumeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_CreatePersistentVolumeWithHttpMessagesAsync>d__376`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_CreatePersistentVolumeWithHttpMessagesAsync(V1PersistentVolume body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-CreatePersistentVolumeWithHttpMessagesAsync>d__377")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.CreatePersistentVolumeWithHttpMessagesAsync(V1PersistentVolume body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_DeletePersistentVolumeWithHttpMessagesAsync>d__378`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_DeletePersistentVolumeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-DeletePersistentVolumeWithHttpMessagesAsync>d__379")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.DeletePersistentVolumeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadPersistentVolumeWithHttpMessagesAsync>d__380`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadPersistentVolumeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadPersistentVolumeWithHttpMessagesAsync>d__381")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.ReadPersistentVolumeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchPersistentVolumeWithHttpMessagesAsync>d__382`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchPersistentVolumeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchPersistentVolumeWithHttpMessagesAsync>d__383")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.PatchPersistentVolumeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplacePersistentVolumeWithHttpMessagesAsync>d__384`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplacePersistentVolumeWithHttpMessagesAsync(V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplacePersistentVolumeWithHttpMessagesAsync>d__385")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.ReplacePersistentVolumeWithHttpMessagesAsync(V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReadPersistentVolumeStatusWithHttpMessagesAsync>d__386`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReadPersistentVolumeStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReadPersistentVolumeStatusWithHttpMessagesAsync>d__387")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.ReadPersistentVolumeStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_PatchPersistentVolumeStatusWithHttpMessagesAsync>d__388`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_PatchPersistentVolumeStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-PatchPersistentVolumeStatusWithHttpMessagesAsync>d__389")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.PatchPersistentVolumeStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ReplacePersistentVolumeStatusWithHttpMessagesAsync>d__390`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ReplacePersistentVolumeStatusWithHttpMessagesAsync(V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ReplacePersistentVolumeStatusWithHttpMessagesAsync>d__391")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PersistentVolume>> k8s.ICoreV1Operations.ReplacePersistentVolumeStatusWithHttpMessagesAsync(V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListPodForAllNamespacesWithHttpMessagesAsync>d__392`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListPodForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListPodForAllNamespacesWithHttpMessagesAsync>d__393")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodList>> k8s.ICoreV1Operations.ListPodForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListPodTemplateForAllNamespacesWithHttpMessagesAsync>d__394`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListPodTemplateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListPodTemplateForAllNamespacesWithHttpMessagesAsync>d__395")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodTemplateList>> k8s.ICoreV1Operations.ListPodTemplateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListReplicationControllerForAllNamespacesWithHttpMessagesAsync>d__396`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListReplicationControllerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListReplicationControllerForAllNamespacesWithHttpMessagesAsync>d__397")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicationControllerList>> k8s.ICoreV1Operations.ListReplicationControllerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListResourceQuotaForAllNamespacesWithHttpMessagesAsync>d__398`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListResourceQuotaForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListResourceQuotaForAllNamespacesWithHttpMessagesAsync>d__399")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ResourceQuotaList>> k8s.ICoreV1Operations.ListResourceQuotaForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListSecretForAllNamespacesWithHttpMessagesAsync>d__400`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListSecretForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListSecretForAllNamespacesWithHttpMessagesAsync>d__401")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1SecretList>> k8s.ICoreV1Operations.ListSecretForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListServiceAccountForAllNamespacesWithHttpMessagesAsync>d__402`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListServiceAccountForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListServiceAccountForAllNamespacesWithHttpMessagesAsync>d__403")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceAccountList>> k8s.ICoreV1Operations.ListServiceAccountForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoreV1Operations_ListServiceForAllNamespacesWithHttpMessagesAsync>d__404`1")]
private Task`1<HttpOperationResponse`1<T>> ICoreV1Operations_ListServiceForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoreV1Operations-ListServiceForAllNamespacesWithHttpMessagesAsync>d__405")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ServiceList>> k8s.ICoreV1Operations.ListServiceForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApisOperations_GetAPIVersionsWithHttpMessagesAsync>d__406`1")]
private Task`1<HttpOperationResponse`1<T>> IApisOperations_GetAPIVersionsWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApisOperations-GetAPIVersionsWithHttpMessagesAsync>d__407")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroupList>> k8s.IApisOperations.GetAPIVersionsWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationOperations_GetAPIGroupWithHttpMessagesAsync>d__408`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationOperations-GetAPIGroupWithHttpMessagesAsync>d__409")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IAdmissionregistrationOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__410`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__411")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAdmissionregistrationV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteCollectionMutatingWebhookConfigurationWithHttpMessagesAsync>d__412`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteCollectionMutatingWebhookConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteCollectionMutatingWebhookConfigurationWithHttpMessagesAsync>d__413")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteCollectionMutatingWebhookConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ListMutatingWebhookConfigurationWithHttpMessagesAsync>d__414`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ListMutatingWebhookConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ListMutatingWebhookConfigurationWithHttpMessagesAsync>d__415")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1MutatingWebhookConfigurationList>> k8s.IAdmissionregistrationV1Operations.ListMutatingWebhookConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_CreateMutatingWebhookConfigurationWithHttpMessagesAsync>d__416`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_CreateMutatingWebhookConfigurationWithHttpMessagesAsync(V1MutatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-CreateMutatingWebhookConfigurationWithHttpMessagesAsync>d__417")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.CreateMutatingWebhookConfigurationWithHttpMessagesAsync(V1MutatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteMutatingWebhookConfigurationWithHttpMessagesAsync>d__418`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteMutatingWebhookConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteMutatingWebhookConfigurationWithHttpMessagesAsync>d__419")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteMutatingWebhookConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReadMutatingWebhookConfigurationWithHttpMessagesAsync>d__420`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReadMutatingWebhookConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReadMutatingWebhookConfigurationWithHttpMessagesAsync>d__421")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.ReadMutatingWebhookConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_PatchMutatingWebhookConfigurationWithHttpMessagesAsync>d__422`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_PatchMutatingWebhookConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-PatchMutatingWebhookConfigurationWithHttpMessagesAsync>d__423")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.PatchMutatingWebhookConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReplaceMutatingWebhookConfigurationWithHttpMessagesAsync>d__424`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReplaceMutatingWebhookConfigurationWithHttpMessagesAsync(V1MutatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReplaceMutatingWebhookConfigurationWithHttpMessagesAsync>d__425")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.ReplaceMutatingWebhookConfigurationWithHttpMessagesAsync(V1MutatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync>d__426`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync>d__427")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ListValidatingAdmissionPolicyWithHttpMessagesAsync>d__428`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ListValidatingAdmissionPolicyWithHttpMessagesAsync>d__429")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyList>> k8s.IAdmissionregistrationV1Operations.ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_CreateValidatingAdmissionPolicyWithHttpMessagesAsync>d__430`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-CreateValidatingAdmissionPolicyWithHttpMessagesAsync>d__431")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1Operations.CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteValidatingAdmissionPolicyWithHttpMessagesAsync>d__432`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteValidatingAdmissionPolicyWithHttpMessagesAsync>d__433")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReadValidatingAdmissionPolicyWithHttpMessagesAsync>d__434`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReadValidatingAdmissionPolicyWithHttpMessagesAsync>d__435")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1Operations.ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_PatchValidatingAdmissionPolicyWithHttpMessagesAsync>d__436`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-PatchValidatingAdmissionPolicyWithHttpMessagesAsync>d__437")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1Operations.PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync>d__438`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync>d__439")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1Operations.ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__440`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__441")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1Operations.ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__442`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__443")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1Operations.PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__444`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__445")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1Operations.ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__446`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__447")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__448`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__449")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBindingList>> k8s.IAdmissionregistrationV1Operations.ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__450`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__451")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1Operations.CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__452`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__453")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__454`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__455")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1Operations.ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__456`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__457")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1Operations.PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__458`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__459")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1Operations.ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteCollectionValidatingWebhookConfigurationWithHttpMessagesAsync>d__460`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteCollectionValidatingWebhookConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteCollectionValidatingWebhookConfigurationWithHttpMessagesAsync>d__461")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteCollectionValidatingWebhookConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ListValidatingWebhookConfigurationWithHttpMessagesAsync>d__462`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ListValidatingWebhookConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ListValidatingWebhookConfigurationWithHttpMessagesAsync>d__463")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfigurationList>> k8s.IAdmissionregistrationV1Operations.ListValidatingWebhookConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_CreateValidatingWebhookConfigurationWithHttpMessagesAsync>d__464`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_CreateValidatingWebhookConfigurationWithHttpMessagesAsync(V1ValidatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-CreateValidatingWebhookConfigurationWithHttpMessagesAsync>d__465")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.CreateValidatingWebhookConfigurationWithHttpMessagesAsync(V1ValidatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_DeleteValidatingWebhookConfigurationWithHttpMessagesAsync>d__466`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_DeleteValidatingWebhookConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-DeleteValidatingWebhookConfigurationWithHttpMessagesAsync>d__467")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1Operations.DeleteValidatingWebhookConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReadValidatingWebhookConfigurationWithHttpMessagesAsync>d__468`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReadValidatingWebhookConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReadValidatingWebhookConfigurationWithHttpMessagesAsync>d__469")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.ReadValidatingWebhookConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_PatchValidatingWebhookConfigurationWithHttpMessagesAsync>d__470`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_PatchValidatingWebhookConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-PatchValidatingWebhookConfigurationWithHttpMessagesAsync>d__471")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.PatchValidatingWebhookConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1Operations_ReplaceValidatingWebhookConfigurationWithHttpMessagesAsync>d__472`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1Operations_ReplaceValidatingWebhookConfigurationWithHttpMessagesAsync(V1ValidatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1Operations-ReplaceValidatingWebhookConfigurationWithHttpMessagesAsync>d__473")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> k8s.IAdmissionregistrationV1Operations.ReplaceValidatingWebhookConfigurationWithHttpMessagesAsync(V1ValidatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync>d__474`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-GetAPIResourcesWithHttpMessagesAsync>d__475")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAdmissionregistrationV1alpha1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync>d__476`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync>d__477")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1alpha1Operations.DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ListValidatingAdmissionPolicyWithHttpMessagesAsync>d__478`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ListValidatingAdmissionPolicyWithHttpMessagesAsync>d__479")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyList>> k8s.IAdmissionregistrationV1alpha1Operations.ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_CreateValidatingAdmissionPolicyWithHttpMessagesAsync>d__480`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-CreateValidatingAdmissionPolicyWithHttpMessagesAsync>d__481")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1alpha1Operations.CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_DeleteValidatingAdmissionPolicyWithHttpMessagesAsync>d__482`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-DeleteValidatingAdmissionPolicyWithHttpMessagesAsync>d__483")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1alpha1Operations.DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ReadValidatingAdmissionPolicyWithHttpMessagesAsync>d__484`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ReadValidatingAdmissionPolicyWithHttpMessagesAsync>d__485")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1alpha1Operations.ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_PatchValidatingAdmissionPolicyWithHttpMessagesAsync>d__486`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-PatchValidatingAdmissionPolicyWithHttpMessagesAsync>d__487")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1alpha1Operations.PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync>d__488`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync>d__489")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1alpha1Operations.ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__490`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__491")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1alpha1Operations.ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__492`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__493")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1alpha1Operations.PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__494`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__495")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1alpha1Operations.ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__496`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__497")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1alpha1Operations.DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__498`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__499")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBindingList>> k8s.IAdmissionregistrationV1alpha1Operations.ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__500`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__501")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1alpha1Operations.CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__502`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__503")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1alpha1Operations.DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__504`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__505")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1alpha1Operations.ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__506`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__507")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1alpha1Operations.PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1alpha1Operations_ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__508`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1alpha1Operations_ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1alpha1Operations-ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__509")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1alpha1Operations.ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync>d__510`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-GetAPIResourcesWithHttpMessagesAsync>d__511")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAdmissionregistrationV1beta1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync>d__512`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync>d__513")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1beta1Operations.DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ListValidatingAdmissionPolicyWithHttpMessagesAsync>d__514`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ListValidatingAdmissionPolicyWithHttpMessagesAsync>d__515")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyList>> k8s.IAdmissionregistrationV1beta1Operations.ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_CreateValidatingAdmissionPolicyWithHttpMessagesAsync>d__516`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-CreateValidatingAdmissionPolicyWithHttpMessagesAsync>d__517")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1beta1Operations.CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_DeleteValidatingAdmissionPolicyWithHttpMessagesAsync>d__518`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-DeleteValidatingAdmissionPolicyWithHttpMessagesAsync>d__519")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1beta1Operations.DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ReadValidatingAdmissionPolicyWithHttpMessagesAsync>d__520`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ReadValidatingAdmissionPolicyWithHttpMessagesAsync>d__521")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1beta1Operations.ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_PatchValidatingAdmissionPolicyWithHttpMessagesAsync>d__522`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-PatchValidatingAdmissionPolicyWithHttpMessagesAsync>d__523")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1beta1Operations.PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync>d__524`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync>d__525")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1beta1Operations.ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__526`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__527")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1beta1Operations.ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__528`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__529")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1beta1Operations.PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__530`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync>d__531")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> k8s.IAdmissionregistrationV1beta1Operations.ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__532`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__533")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1beta1Operations.DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__534`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__535")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBindingList>> k8s.IAdmissionregistrationV1beta1Operations.ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__536`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__537")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1beta1Operations.CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__538`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__539")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAdmissionregistrationV1beta1Operations.DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__540`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__541")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1beta1Operations.ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__542`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__543")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1beta1Operations.PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAdmissionregistrationV1beta1Operations_ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__544`1")]
private Task`1<HttpOperationResponse`1<T>> IAdmissionregistrationV1beta1Operations_ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAdmissionregistrationV1beta1Operations-ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync>d__545")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> k8s.IAdmissionregistrationV1beta1Operations.ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsOperations_GetAPIGroupWithHttpMessagesAsync>d__546`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsOperations-GetAPIGroupWithHttpMessagesAsync>d__547")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IApiextensionsOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__548`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__549")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IApiextensionsV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_DeleteCollectionCustomResourceDefinitionWithHttpMessagesAsync>d__550`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_DeleteCollectionCustomResourceDefinitionWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-DeleteCollectionCustomResourceDefinitionWithHttpMessagesAsync>d__551")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IApiextensionsV1Operations.DeleteCollectionCustomResourceDefinitionWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_ListCustomResourceDefinitionWithHttpMessagesAsync>d__552`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_ListCustomResourceDefinitionWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-ListCustomResourceDefinitionWithHttpMessagesAsync>d__553")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinitionList>> k8s.IApiextensionsV1Operations.ListCustomResourceDefinitionWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_CreateCustomResourceDefinitionWithHttpMessagesAsync>d__554`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_CreateCustomResourceDefinitionWithHttpMessagesAsync(V1CustomResourceDefinition body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-CreateCustomResourceDefinitionWithHttpMessagesAsync>d__555")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> k8s.IApiextensionsV1Operations.CreateCustomResourceDefinitionWithHttpMessagesAsync(V1CustomResourceDefinition body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_DeleteCustomResourceDefinitionWithHttpMessagesAsync>d__556`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_DeleteCustomResourceDefinitionWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-DeleteCustomResourceDefinitionWithHttpMessagesAsync>d__557")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IApiextensionsV1Operations.DeleteCustomResourceDefinitionWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_ReadCustomResourceDefinitionWithHttpMessagesAsync>d__558`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_ReadCustomResourceDefinitionWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-ReadCustomResourceDefinitionWithHttpMessagesAsync>d__559")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> k8s.IApiextensionsV1Operations.ReadCustomResourceDefinitionWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_PatchCustomResourceDefinitionWithHttpMessagesAsync>d__560`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_PatchCustomResourceDefinitionWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-PatchCustomResourceDefinitionWithHttpMessagesAsync>d__561")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> k8s.IApiextensionsV1Operations.PatchCustomResourceDefinitionWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_ReplaceCustomResourceDefinitionWithHttpMessagesAsync>d__562`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_ReplaceCustomResourceDefinitionWithHttpMessagesAsync(V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-ReplaceCustomResourceDefinitionWithHttpMessagesAsync>d__563")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> k8s.IApiextensionsV1Operations.ReplaceCustomResourceDefinitionWithHttpMessagesAsync(V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_ReadCustomResourceDefinitionStatusWithHttpMessagesAsync>d__564`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_ReadCustomResourceDefinitionStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-ReadCustomResourceDefinitionStatusWithHttpMessagesAsync>d__565")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> k8s.IApiextensionsV1Operations.ReadCustomResourceDefinitionStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_PatchCustomResourceDefinitionStatusWithHttpMessagesAsync>d__566`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_PatchCustomResourceDefinitionStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-PatchCustomResourceDefinitionStatusWithHttpMessagesAsync>d__567")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> k8s.IApiextensionsV1Operations.PatchCustomResourceDefinitionStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiextensionsV1Operations_ReplaceCustomResourceDefinitionStatusWithHttpMessagesAsync>d__568`1")]
private Task`1<HttpOperationResponse`1<T>> IApiextensionsV1Operations_ReplaceCustomResourceDefinitionStatusWithHttpMessagesAsync(V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiextensionsV1Operations-ReplaceCustomResourceDefinitionStatusWithHttpMessagesAsync>d__569")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> k8s.IApiextensionsV1Operations.ReplaceCustomResourceDefinitionStatusWithHttpMessagesAsync(V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationOperations_GetAPIGroupWithHttpMessagesAsync>d__570`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationOperations-GetAPIGroupWithHttpMessagesAsync>d__571")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IApiregistrationOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__572`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__573")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IApiregistrationV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_DeleteCollectionAPIServiceWithHttpMessagesAsync>d__574`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_DeleteCollectionAPIServiceWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-DeleteCollectionAPIServiceWithHttpMessagesAsync>d__575")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IApiregistrationV1Operations.DeleteCollectionAPIServiceWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_ListAPIServiceWithHttpMessagesAsync>d__576`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_ListAPIServiceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-ListAPIServiceWithHttpMessagesAsync>d__577")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIServiceList>> k8s.IApiregistrationV1Operations.ListAPIServiceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_CreateAPIServiceWithHttpMessagesAsync>d__578`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_CreateAPIServiceWithHttpMessagesAsync(V1APIService body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-CreateAPIServiceWithHttpMessagesAsync>d__579")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIService>> k8s.IApiregistrationV1Operations.CreateAPIServiceWithHttpMessagesAsync(V1APIService body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_DeleteAPIServiceWithHttpMessagesAsync>d__580`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_DeleteAPIServiceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-DeleteAPIServiceWithHttpMessagesAsync>d__581")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IApiregistrationV1Operations.DeleteAPIServiceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_ReadAPIServiceWithHttpMessagesAsync>d__582`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_ReadAPIServiceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-ReadAPIServiceWithHttpMessagesAsync>d__583")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIService>> k8s.IApiregistrationV1Operations.ReadAPIServiceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_PatchAPIServiceWithHttpMessagesAsync>d__584`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_PatchAPIServiceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-PatchAPIServiceWithHttpMessagesAsync>d__585")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIService>> k8s.IApiregistrationV1Operations.PatchAPIServiceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_ReplaceAPIServiceWithHttpMessagesAsync>d__586`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_ReplaceAPIServiceWithHttpMessagesAsync(V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-ReplaceAPIServiceWithHttpMessagesAsync>d__587")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIService>> k8s.IApiregistrationV1Operations.ReplaceAPIServiceWithHttpMessagesAsync(V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_ReadAPIServiceStatusWithHttpMessagesAsync>d__588`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_ReadAPIServiceStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-ReadAPIServiceStatusWithHttpMessagesAsync>d__589")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIService>> k8s.IApiregistrationV1Operations.ReadAPIServiceStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_PatchAPIServiceStatusWithHttpMessagesAsync>d__590`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_PatchAPIServiceStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-PatchAPIServiceStatusWithHttpMessagesAsync>d__591")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIService>> k8s.IApiregistrationV1Operations.PatchAPIServiceStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IApiregistrationV1Operations_ReplaceAPIServiceStatusWithHttpMessagesAsync>d__592`1")]
private Task`1<HttpOperationResponse`1<T>> IApiregistrationV1Operations_ReplaceAPIServiceStatusWithHttpMessagesAsync(V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IApiregistrationV1Operations-ReplaceAPIServiceStatusWithHttpMessagesAsync>d__593")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIService>> k8s.IApiregistrationV1Operations.ReplaceAPIServiceStatusWithHttpMessagesAsync(V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsOperations_GetAPIGroupWithHttpMessagesAsync>d__594`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsOperations-GetAPIGroupWithHttpMessagesAsync>d__595")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IAppsOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__596`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__597")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAppsV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListControllerRevisionForAllNamespacesWithHttpMessagesAsync>d__598`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListControllerRevisionForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListControllerRevisionForAllNamespacesWithHttpMessagesAsync>d__599")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ControllerRevisionList>> k8s.IAppsV1Operations.ListControllerRevisionForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListDaemonSetForAllNamespacesWithHttpMessagesAsync>d__600`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListDaemonSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListDaemonSetForAllNamespacesWithHttpMessagesAsync>d__601")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSetList>> k8s.IAppsV1Operations.ListDaemonSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListDeploymentForAllNamespacesWithHttpMessagesAsync>d__602`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListDeploymentForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListDeploymentForAllNamespacesWithHttpMessagesAsync>d__603")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DeploymentList>> k8s.IAppsV1Operations.ListDeploymentForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteCollectionNamespacedControllerRevisionWithHttpMessagesAsync>d__604`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteCollectionNamespacedControllerRevisionWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteCollectionNamespacedControllerRevisionWithHttpMessagesAsync>d__605")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteCollectionNamespacedControllerRevisionWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListNamespacedControllerRevisionWithHttpMessagesAsync>d__606`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListNamespacedControllerRevisionWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListNamespacedControllerRevisionWithHttpMessagesAsync>d__607")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ControllerRevisionList>> k8s.IAppsV1Operations.ListNamespacedControllerRevisionWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_CreateNamespacedControllerRevisionWithHttpMessagesAsync>d__608`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_CreateNamespacedControllerRevisionWithHttpMessagesAsync(V1ControllerRevision body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-CreateNamespacedControllerRevisionWithHttpMessagesAsync>d__609")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ControllerRevision>> k8s.IAppsV1Operations.CreateNamespacedControllerRevisionWithHttpMessagesAsync(V1ControllerRevision body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteNamespacedControllerRevisionWithHttpMessagesAsync>d__610`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteNamespacedControllerRevisionWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteNamespacedControllerRevisionWithHttpMessagesAsync>d__611")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteNamespacedControllerRevisionWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedControllerRevisionWithHttpMessagesAsync>d__612`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedControllerRevisionWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedControllerRevisionWithHttpMessagesAsync>d__613")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ControllerRevision>> k8s.IAppsV1Operations.ReadNamespacedControllerRevisionWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedControllerRevisionWithHttpMessagesAsync>d__614`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedControllerRevisionWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedControllerRevisionWithHttpMessagesAsync>d__615")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ControllerRevision>> k8s.IAppsV1Operations.PatchNamespacedControllerRevisionWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedControllerRevisionWithHttpMessagesAsync>d__616`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedControllerRevisionWithHttpMessagesAsync(V1ControllerRevision body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedControllerRevisionWithHttpMessagesAsync>d__617")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ControllerRevision>> k8s.IAppsV1Operations.ReplaceNamespacedControllerRevisionWithHttpMessagesAsync(V1ControllerRevision body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteCollectionNamespacedDaemonSetWithHttpMessagesAsync>d__618`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteCollectionNamespacedDaemonSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteCollectionNamespacedDaemonSetWithHttpMessagesAsync>d__619")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteCollectionNamespacedDaemonSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListNamespacedDaemonSetWithHttpMessagesAsync>d__620`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListNamespacedDaemonSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListNamespacedDaemonSetWithHttpMessagesAsync>d__621")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSetList>> k8s.IAppsV1Operations.ListNamespacedDaemonSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_CreateNamespacedDaemonSetWithHttpMessagesAsync>d__622`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_CreateNamespacedDaemonSetWithHttpMessagesAsync(V1DaemonSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-CreateNamespacedDaemonSetWithHttpMessagesAsync>d__623")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSet>> k8s.IAppsV1Operations.CreateNamespacedDaemonSetWithHttpMessagesAsync(V1DaemonSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteNamespacedDaemonSetWithHttpMessagesAsync>d__624`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteNamespacedDaemonSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteNamespacedDaemonSetWithHttpMessagesAsync>d__625")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteNamespacedDaemonSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedDaemonSetWithHttpMessagesAsync>d__626`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedDaemonSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedDaemonSetWithHttpMessagesAsync>d__627")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSet>> k8s.IAppsV1Operations.ReadNamespacedDaemonSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedDaemonSetWithHttpMessagesAsync>d__628`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedDaemonSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedDaemonSetWithHttpMessagesAsync>d__629")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSet>> k8s.IAppsV1Operations.PatchNamespacedDaemonSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedDaemonSetWithHttpMessagesAsync>d__630`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedDaemonSetWithHttpMessagesAsync(V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedDaemonSetWithHttpMessagesAsync>d__631")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSet>> k8s.IAppsV1Operations.ReplaceNamespacedDaemonSetWithHttpMessagesAsync(V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedDaemonSetStatusWithHttpMessagesAsync>d__632`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedDaemonSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedDaemonSetStatusWithHttpMessagesAsync>d__633")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSet>> k8s.IAppsV1Operations.ReadNamespacedDaemonSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedDaemonSetStatusWithHttpMessagesAsync>d__634`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedDaemonSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedDaemonSetStatusWithHttpMessagesAsync>d__635")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSet>> k8s.IAppsV1Operations.PatchNamespacedDaemonSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedDaemonSetStatusWithHttpMessagesAsync>d__636`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedDaemonSetStatusWithHttpMessagesAsync(V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedDaemonSetStatusWithHttpMessagesAsync>d__637")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DaemonSet>> k8s.IAppsV1Operations.ReplaceNamespacedDaemonSetStatusWithHttpMessagesAsync(V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteCollectionNamespacedDeploymentWithHttpMessagesAsync>d__638`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteCollectionNamespacedDeploymentWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteCollectionNamespacedDeploymentWithHttpMessagesAsync>d__639")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteCollectionNamespacedDeploymentWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListNamespacedDeploymentWithHttpMessagesAsync>d__640`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListNamespacedDeploymentWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListNamespacedDeploymentWithHttpMessagesAsync>d__641")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1DeploymentList>> k8s.IAppsV1Operations.ListNamespacedDeploymentWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_CreateNamespacedDeploymentWithHttpMessagesAsync>d__642`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_CreateNamespacedDeploymentWithHttpMessagesAsync(V1Deployment body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-CreateNamespacedDeploymentWithHttpMessagesAsync>d__643")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Deployment>> k8s.IAppsV1Operations.CreateNamespacedDeploymentWithHttpMessagesAsync(V1Deployment body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteNamespacedDeploymentWithHttpMessagesAsync>d__644`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteNamespacedDeploymentWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteNamespacedDeploymentWithHttpMessagesAsync>d__645")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteNamespacedDeploymentWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedDeploymentWithHttpMessagesAsync>d__646`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedDeploymentWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedDeploymentWithHttpMessagesAsync>d__647")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Deployment>> k8s.IAppsV1Operations.ReadNamespacedDeploymentWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedDeploymentWithHttpMessagesAsync>d__648`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedDeploymentWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedDeploymentWithHttpMessagesAsync>d__649")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Deployment>> k8s.IAppsV1Operations.PatchNamespacedDeploymentWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedDeploymentWithHttpMessagesAsync>d__650`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedDeploymentWithHttpMessagesAsync(V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedDeploymentWithHttpMessagesAsync>d__651")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Deployment>> k8s.IAppsV1Operations.ReplaceNamespacedDeploymentWithHttpMessagesAsync(V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedDeploymentScaleWithHttpMessagesAsync>d__652`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedDeploymentScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedDeploymentScaleWithHttpMessagesAsync>d__653")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.ReadNamespacedDeploymentScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedDeploymentScaleWithHttpMessagesAsync>d__654`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedDeploymentScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedDeploymentScaleWithHttpMessagesAsync>d__655")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.PatchNamespacedDeploymentScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedDeploymentScaleWithHttpMessagesAsync>d__656`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedDeploymentScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedDeploymentScaleWithHttpMessagesAsync>d__657")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.ReplaceNamespacedDeploymentScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedDeploymentStatusWithHttpMessagesAsync>d__658`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedDeploymentStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedDeploymentStatusWithHttpMessagesAsync>d__659")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Deployment>> k8s.IAppsV1Operations.ReadNamespacedDeploymentStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedDeploymentStatusWithHttpMessagesAsync>d__660`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedDeploymentStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedDeploymentStatusWithHttpMessagesAsync>d__661")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Deployment>> k8s.IAppsV1Operations.PatchNamespacedDeploymentStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedDeploymentStatusWithHttpMessagesAsync>d__662`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedDeploymentStatusWithHttpMessagesAsync(V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedDeploymentStatusWithHttpMessagesAsync>d__663")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Deployment>> k8s.IAppsV1Operations.ReplaceNamespacedDeploymentStatusWithHttpMessagesAsync(V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteCollectionNamespacedReplicaSetWithHttpMessagesAsync>d__664`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteCollectionNamespacedReplicaSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteCollectionNamespacedReplicaSetWithHttpMessagesAsync>d__665")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteCollectionNamespacedReplicaSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListNamespacedReplicaSetWithHttpMessagesAsync>d__666`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListNamespacedReplicaSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListNamespacedReplicaSetWithHttpMessagesAsync>d__667")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSetList>> k8s.IAppsV1Operations.ListNamespacedReplicaSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_CreateNamespacedReplicaSetWithHttpMessagesAsync>d__668`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_CreateNamespacedReplicaSetWithHttpMessagesAsync(V1ReplicaSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-CreateNamespacedReplicaSetWithHttpMessagesAsync>d__669")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSet>> k8s.IAppsV1Operations.CreateNamespacedReplicaSetWithHttpMessagesAsync(V1ReplicaSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteNamespacedReplicaSetWithHttpMessagesAsync>d__670`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteNamespacedReplicaSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteNamespacedReplicaSetWithHttpMessagesAsync>d__671")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteNamespacedReplicaSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedReplicaSetWithHttpMessagesAsync>d__672`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedReplicaSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedReplicaSetWithHttpMessagesAsync>d__673")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSet>> k8s.IAppsV1Operations.ReadNamespacedReplicaSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedReplicaSetWithHttpMessagesAsync>d__674`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedReplicaSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedReplicaSetWithHttpMessagesAsync>d__675")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSet>> k8s.IAppsV1Operations.PatchNamespacedReplicaSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedReplicaSetWithHttpMessagesAsync>d__676`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedReplicaSetWithHttpMessagesAsync(V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedReplicaSetWithHttpMessagesAsync>d__677")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSet>> k8s.IAppsV1Operations.ReplaceNamespacedReplicaSetWithHttpMessagesAsync(V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedReplicaSetScaleWithHttpMessagesAsync>d__678`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedReplicaSetScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedReplicaSetScaleWithHttpMessagesAsync>d__679")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.ReadNamespacedReplicaSetScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedReplicaSetScaleWithHttpMessagesAsync>d__680`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedReplicaSetScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedReplicaSetScaleWithHttpMessagesAsync>d__681")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.PatchNamespacedReplicaSetScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedReplicaSetScaleWithHttpMessagesAsync>d__682`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedReplicaSetScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedReplicaSetScaleWithHttpMessagesAsync>d__683")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.ReplaceNamespacedReplicaSetScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedReplicaSetStatusWithHttpMessagesAsync>d__684`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedReplicaSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedReplicaSetStatusWithHttpMessagesAsync>d__685")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSet>> k8s.IAppsV1Operations.ReadNamespacedReplicaSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedReplicaSetStatusWithHttpMessagesAsync>d__686`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedReplicaSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedReplicaSetStatusWithHttpMessagesAsync>d__687")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSet>> k8s.IAppsV1Operations.PatchNamespacedReplicaSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedReplicaSetStatusWithHttpMessagesAsync>d__688`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedReplicaSetStatusWithHttpMessagesAsync(V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedReplicaSetStatusWithHttpMessagesAsync>d__689")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSet>> k8s.IAppsV1Operations.ReplaceNamespacedReplicaSetStatusWithHttpMessagesAsync(V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteCollectionNamespacedStatefulSetWithHttpMessagesAsync>d__690`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteCollectionNamespacedStatefulSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteCollectionNamespacedStatefulSetWithHttpMessagesAsync>d__691")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteCollectionNamespacedStatefulSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListNamespacedStatefulSetWithHttpMessagesAsync>d__692`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListNamespacedStatefulSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListNamespacedStatefulSetWithHttpMessagesAsync>d__693")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSetList>> k8s.IAppsV1Operations.ListNamespacedStatefulSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_CreateNamespacedStatefulSetWithHttpMessagesAsync>d__694`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_CreateNamespacedStatefulSetWithHttpMessagesAsync(V1StatefulSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-CreateNamespacedStatefulSetWithHttpMessagesAsync>d__695")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSet>> k8s.IAppsV1Operations.CreateNamespacedStatefulSetWithHttpMessagesAsync(V1StatefulSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_DeleteNamespacedStatefulSetWithHttpMessagesAsync>d__696`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_DeleteNamespacedStatefulSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-DeleteNamespacedStatefulSetWithHttpMessagesAsync>d__697")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAppsV1Operations.DeleteNamespacedStatefulSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedStatefulSetWithHttpMessagesAsync>d__698`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedStatefulSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedStatefulSetWithHttpMessagesAsync>d__699")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSet>> k8s.IAppsV1Operations.ReadNamespacedStatefulSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedStatefulSetWithHttpMessagesAsync>d__700`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedStatefulSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedStatefulSetWithHttpMessagesAsync>d__701")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSet>> k8s.IAppsV1Operations.PatchNamespacedStatefulSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedStatefulSetWithHttpMessagesAsync>d__702`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedStatefulSetWithHttpMessagesAsync(V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedStatefulSetWithHttpMessagesAsync>d__703")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSet>> k8s.IAppsV1Operations.ReplaceNamespacedStatefulSetWithHttpMessagesAsync(V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedStatefulSetScaleWithHttpMessagesAsync>d__704`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedStatefulSetScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedStatefulSetScaleWithHttpMessagesAsync>d__705")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.ReadNamespacedStatefulSetScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedStatefulSetScaleWithHttpMessagesAsync>d__706`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedStatefulSetScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedStatefulSetScaleWithHttpMessagesAsync>d__707")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.PatchNamespacedStatefulSetScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedStatefulSetScaleWithHttpMessagesAsync>d__708`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedStatefulSetScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedStatefulSetScaleWithHttpMessagesAsync>d__709")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Scale>> k8s.IAppsV1Operations.ReplaceNamespacedStatefulSetScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReadNamespacedStatefulSetStatusWithHttpMessagesAsync>d__710`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReadNamespacedStatefulSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReadNamespacedStatefulSetStatusWithHttpMessagesAsync>d__711")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSet>> k8s.IAppsV1Operations.ReadNamespacedStatefulSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_PatchNamespacedStatefulSetStatusWithHttpMessagesAsync>d__712`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_PatchNamespacedStatefulSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-PatchNamespacedStatefulSetStatusWithHttpMessagesAsync>d__713")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSet>> k8s.IAppsV1Operations.PatchNamespacedStatefulSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ReplaceNamespacedStatefulSetStatusWithHttpMessagesAsync>d__714`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ReplaceNamespacedStatefulSetStatusWithHttpMessagesAsync(V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ReplaceNamespacedStatefulSetStatusWithHttpMessagesAsync>d__715")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSet>> k8s.IAppsV1Operations.ReplaceNamespacedStatefulSetStatusWithHttpMessagesAsync(V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListReplicaSetForAllNamespacesWithHttpMessagesAsync>d__716`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListReplicaSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListReplicaSetForAllNamespacesWithHttpMessagesAsync>d__717")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ReplicaSetList>> k8s.IAppsV1Operations.ListReplicaSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAppsV1Operations_ListStatefulSetForAllNamespacesWithHttpMessagesAsync>d__718`1")]
private Task`1<HttpOperationResponse`1<T>> IAppsV1Operations_ListStatefulSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAppsV1Operations-ListStatefulSetForAllNamespacesWithHttpMessagesAsync>d__719")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StatefulSetList>> k8s.IAppsV1Operations.ListStatefulSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationOperations_GetAPIGroupWithHttpMessagesAsync>d__720`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationOperations-GetAPIGroupWithHttpMessagesAsync>d__721")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IAuthenticationOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__722`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__723")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAuthenticationV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationV1Operations_CreateSelfSubjectReviewWithHttpMessagesAsync>d__724`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationV1Operations_CreateSelfSubjectReviewWithHttpMessagesAsync(V1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationV1Operations-CreateSelfSubjectReviewWithHttpMessagesAsync>d__725")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1SelfSubjectReview>> k8s.IAuthenticationV1Operations.CreateSelfSubjectReviewWithHttpMessagesAsync(V1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationV1Operations_CreateTokenReviewWithHttpMessagesAsync>d__726`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationV1Operations_CreateTokenReviewWithHttpMessagesAsync(V1TokenReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationV1Operations-CreateTokenReviewWithHttpMessagesAsync>d__727")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1TokenReview>> k8s.IAuthenticationV1Operations.CreateTokenReviewWithHttpMessagesAsync(V1TokenReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync>d__728`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationV1alpha1Operations-GetAPIResourcesWithHttpMessagesAsync>d__729")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAuthenticationV1alpha1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationV1alpha1Operations_CreateSelfSubjectReviewWithHttpMessagesAsync>d__730`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationV1alpha1Operations_CreateSelfSubjectReviewWithHttpMessagesAsync(V1alpha1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationV1alpha1Operations-CreateSelfSubjectReviewWithHttpMessagesAsync>d__731")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1SelfSubjectReview>> k8s.IAuthenticationV1alpha1Operations.CreateSelfSubjectReviewWithHttpMessagesAsync(V1alpha1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync>d__732`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationV1beta1Operations-GetAPIResourcesWithHttpMessagesAsync>d__733")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAuthenticationV1beta1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthenticationV1beta1Operations_CreateSelfSubjectReviewWithHttpMessagesAsync>d__734`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthenticationV1beta1Operations_CreateSelfSubjectReviewWithHttpMessagesAsync(V1beta1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthenticationV1beta1Operations-CreateSelfSubjectReviewWithHttpMessagesAsync>d__735")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1SelfSubjectReview>> k8s.IAuthenticationV1beta1Operations.CreateSelfSubjectReviewWithHttpMessagesAsync(V1beta1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthorizationOperations_GetAPIGroupWithHttpMessagesAsync>d__736`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthorizationOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthorizationOperations-GetAPIGroupWithHttpMessagesAsync>d__737")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IAuthorizationOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthorizationV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__738`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthorizationV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthorizationV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__739")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAuthorizationV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthorizationV1Operations_CreateNamespacedLocalSubjectAccessReviewWithHttpMessagesAsync>d__740`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthorizationV1Operations_CreateNamespacedLocalSubjectAccessReviewWithHttpMessagesAsync(V1LocalSubjectAccessReview body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthorizationV1Operations-CreateNamespacedLocalSubjectAccessReviewWithHttpMessagesAsync>d__741")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LocalSubjectAccessReview>> k8s.IAuthorizationV1Operations.CreateNamespacedLocalSubjectAccessReviewWithHttpMessagesAsync(V1LocalSubjectAccessReview body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthorizationV1Operations_CreateSelfSubjectAccessReviewWithHttpMessagesAsync>d__742`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthorizationV1Operations_CreateSelfSubjectAccessReviewWithHttpMessagesAsync(V1SelfSubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthorizationV1Operations-CreateSelfSubjectAccessReviewWithHttpMessagesAsync>d__743")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1SelfSubjectAccessReview>> k8s.IAuthorizationV1Operations.CreateSelfSubjectAccessReviewWithHttpMessagesAsync(V1SelfSubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthorizationV1Operations_CreateSelfSubjectRulesReviewWithHttpMessagesAsync>d__744`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthorizationV1Operations_CreateSelfSubjectRulesReviewWithHttpMessagesAsync(V1SelfSubjectRulesReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthorizationV1Operations-CreateSelfSubjectRulesReviewWithHttpMessagesAsync>d__745")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1SelfSubjectRulesReview>> k8s.IAuthorizationV1Operations.CreateSelfSubjectRulesReviewWithHttpMessagesAsync(V1SelfSubjectRulesReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAuthorizationV1Operations_CreateSubjectAccessReviewWithHttpMessagesAsync>d__746`1")]
private Task`1<HttpOperationResponse`1<T>> IAuthorizationV1Operations_CreateSubjectAccessReviewWithHttpMessagesAsync(V1SubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAuthorizationV1Operations-CreateSubjectAccessReviewWithHttpMessagesAsync>d__747")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1SubjectAccessReview>> k8s.IAuthorizationV1Operations.CreateSubjectAccessReviewWithHttpMessagesAsync(V1SubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingOperations_GetAPIGroupWithHttpMessagesAsync>d__748`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingOperations-GetAPIGroupWithHttpMessagesAsync>d__749")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IAutoscalingOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__750`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__751")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAutoscalingV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync>d__752`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync>d__753")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscalerList>> k8s.IAutoscalingV1Operations.ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__754`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__755")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAutoscalingV1Operations.DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__756`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__757")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscalerList>> k8s.IAutoscalingV1Operations.ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__758`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__759")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> k8s.IAutoscalingV1Operations.CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__760`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__761")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAutoscalingV1Operations.DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__762`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__763")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> k8s.IAutoscalingV1Operations.ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__764`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__765")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> k8s.IAutoscalingV1Operations.PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__766`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__767")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> k8s.IAutoscalingV1Operations.ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__768`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__769")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> k8s.IAutoscalingV1Operations.ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__770`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__771")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> k8s.IAutoscalingV1Operations.PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV1Operations_ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__772`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV1Operations_ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV1Operations-ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__773")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> k8s.IAutoscalingV1Operations.ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_GetAPIResourcesWithHttpMessagesAsync>d__774`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-GetAPIResourcesWithHttpMessagesAsync>d__775")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IAutoscalingV2Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync>d__776`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync>d__777")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscalerList>> k8s.IAutoscalingV2Operations.ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__778`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__779")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAutoscalingV2Operations.DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__780`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__781")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscalerList>> k8s.IAutoscalingV2Operations.ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__782`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__783")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> k8s.IAutoscalingV2Operations.CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__784`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__785")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IAutoscalingV2Operations.DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__786`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__787")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> k8s.IAutoscalingV2Operations.ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__788`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__789")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> k8s.IAutoscalingV2Operations.PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__790`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync>d__791")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> k8s.IAutoscalingV2Operations.ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__792`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__793")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> k8s.IAutoscalingV2Operations.ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__794`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__795")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> k8s.IAutoscalingV2Operations.PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IAutoscalingV2Operations_ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__796`1")]
private Task`1<HttpOperationResponse`1<T>> IAutoscalingV2Operations_ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IAutoscalingV2Operations-ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync>d__797")]
private sealed virtual override Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> k8s.IAutoscalingV2Operations.ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchOperations_GetAPIGroupWithHttpMessagesAsync>d__798`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchOperations-GetAPIGroupWithHttpMessagesAsync>d__799")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IBatchOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__800`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__801")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IBatchV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ListCronJobForAllNamespacesWithHttpMessagesAsync>d__802`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ListCronJobForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ListCronJobForAllNamespacesWithHttpMessagesAsync>d__803")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJobList>> k8s.IBatchV1Operations.ListCronJobForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ListJobForAllNamespacesWithHttpMessagesAsync>d__804`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ListJobForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ListJobForAllNamespacesWithHttpMessagesAsync>d__805")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1JobList>> k8s.IBatchV1Operations.ListJobForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_DeleteCollectionNamespacedCronJobWithHttpMessagesAsync>d__806`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_DeleteCollectionNamespacedCronJobWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-DeleteCollectionNamespacedCronJobWithHttpMessagesAsync>d__807")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IBatchV1Operations.DeleteCollectionNamespacedCronJobWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ListNamespacedCronJobWithHttpMessagesAsync>d__808`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ListNamespacedCronJobWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ListNamespacedCronJobWithHttpMessagesAsync>d__809")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJobList>> k8s.IBatchV1Operations.ListNamespacedCronJobWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_CreateNamespacedCronJobWithHttpMessagesAsync>d__810`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_CreateNamespacedCronJobWithHttpMessagesAsync(V1CronJob body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-CreateNamespacedCronJobWithHttpMessagesAsync>d__811")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJob>> k8s.IBatchV1Operations.CreateNamespacedCronJobWithHttpMessagesAsync(V1CronJob body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_DeleteNamespacedCronJobWithHttpMessagesAsync>d__812`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_DeleteNamespacedCronJobWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-DeleteNamespacedCronJobWithHttpMessagesAsync>d__813")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IBatchV1Operations.DeleteNamespacedCronJobWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReadNamespacedCronJobWithHttpMessagesAsync>d__814`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReadNamespacedCronJobWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReadNamespacedCronJobWithHttpMessagesAsync>d__815")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJob>> k8s.IBatchV1Operations.ReadNamespacedCronJobWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_PatchNamespacedCronJobWithHttpMessagesAsync>d__816`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_PatchNamespacedCronJobWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-PatchNamespacedCronJobWithHttpMessagesAsync>d__817")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJob>> k8s.IBatchV1Operations.PatchNamespacedCronJobWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReplaceNamespacedCronJobWithHttpMessagesAsync>d__818`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReplaceNamespacedCronJobWithHttpMessagesAsync(V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReplaceNamespacedCronJobWithHttpMessagesAsync>d__819")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJob>> k8s.IBatchV1Operations.ReplaceNamespacedCronJobWithHttpMessagesAsync(V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReadNamespacedCronJobStatusWithHttpMessagesAsync>d__820`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReadNamespacedCronJobStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReadNamespacedCronJobStatusWithHttpMessagesAsync>d__821")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJob>> k8s.IBatchV1Operations.ReadNamespacedCronJobStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_PatchNamespacedCronJobStatusWithHttpMessagesAsync>d__822`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_PatchNamespacedCronJobStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-PatchNamespacedCronJobStatusWithHttpMessagesAsync>d__823")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJob>> k8s.IBatchV1Operations.PatchNamespacedCronJobStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReplaceNamespacedCronJobStatusWithHttpMessagesAsync>d__824`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReplaceNamespacedCronJobStatusWithHttpMessagesAsync(V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReplaceNamespacedCronJobStatusWithHttpMessagesAsync>d__825")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CronJob>> k8s.IBatchV1Operations.ReplaceNamespacedCronJobStatusWithHttpMessagesAsync(V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_DeleteCollectionNamespacedJobWithHttpMessagesAsync>d__826`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_DeleteCollectionNamespacedJobWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-DeleteCollectionNamespacedJobWithHttpMessagesAsync>d__827")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IBatchV1Operations.DeleteCollectionNamespacedJobWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ListNamespacedJobWithHttpMessagesAsync>d__828`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ListNamespacedJobWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ListNamespacedJobWithHttpMessagesAsync>d__829")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1JobList>> k8s.IBatchV1Operations.ListNamespacedJobWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_CreateNamespacedJobWithHttpMessagesAsync>d__830`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_CreateNamespacedJobWithHttpMessagesAsync(V1Job body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-CreateNamespacedJobWithHttpMessagesAsync>d__831")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Job>> k8s.IBatchV1Operations.CreateNamespacedJobWithHttpMessagesAsync(V1Job body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_DeleteNamespacedJobWithHttpMessagesAsync>d__832`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_DeleteNamespacedJobWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-DeleteNamespacedJobWithHttpMessagesAsync>d__833")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IBatchV1Operations.DeleteNamespacedJobWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReadNamespacedJobWithHttpMessagesAsync>d__834`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReadNamespacedJobWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReadNamespacedJobWithHttpMessagesAsync>d__835")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Job>> k8s.IBatchV1Operations.ReadNamespacedJobWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_PatchNamespacedJobWithHttpMessagesAsync>d__836`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_PatchNamespacedJobWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-PatchNamespacedJobWithHttpMessagesAsync>d__837")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Job>> k8s.IBatchV1Operations.PatchNamespacedJobWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReplaceNamespacedJobWithHttpMessagesAsync>d__838`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReplaceNamespacedJobWithHttpMessagesAsync(V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReplaceNamespacedJobWithHttpMessagesAsync>d__839")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Job>> k8s.IBatchV1Operations.ReplaceNamespacedJobWithHttpMessagesAsync(V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReadNamespacedJobStatusWithHttpMessagesAsync>d__840`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReadNamespacedJobStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReadNamespacedJobStatusWithHttpMessagesAsync>d__841")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Job>> k8s.IBatchV1Operations.ReadNamespacedJobStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_PatchNamespacedJobStatusWithHttpMessagesAsync>d__842`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_PatchNamespacedJobStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-PatchNamespacedJobStatusWithHttpMessagesAsync>d__843")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Job>> k8s.IBatchV1Operations.PatchNamespacedJobStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IBatchV1Operations_ReplaceNamespacedJobStatusWithHttpMessagesAsync>d__844`1")]
private Task`1<HttpOperationResponse`1<T>> IBatchV1Operations_ReplaceNamespacedJobStatusWithHttpMessagesAsync(V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IBatchV1Operations-ReplaceNamespacedJobStatusWithHttpMessagesAsync>d__845")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Job>> k8s.IBatchV1Operations.ReplaceNamespacedJobStatusWithHttpMessagesAsync(V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesOperations_GetAPIGroupWithHttpMessagesAsync>d__846`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesOperations-GetAPIGroupWithHttpMessagesAsync>d__847")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.ICertificatesOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__848`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__849")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.ICertificatesV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_DeleteCollectionCertificateSigningRequestWithHttpMessagesAsync>d__850`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_DeleteCollectionCertificateSigningRequestWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-DeleteCollectionCertificateSigningRequestWithHttpMessagesAsync>d__851")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICertificatesV1Operations.DeleteCollectionCertificateSigningRequestWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_ListCertificateSigningRequestWithHttpMessagesAsync>d__852`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_ListCertificateSigningRequestWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-ListCertificateSigningRequestWithHttpMessagesAsync>d__853")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequestList>> k8s.ICertificatesV1Operations.ListCertificateSigningRequestWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_CreateCertificateSigningRequestWithHttpMessagesAsync>d__854`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_CreateCertificateSigningRequestWithHttpMessagesAsync(V1CertificateSigningRequest body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-CreateCertificateSigningRequestWithHttpMessagesAsync>d__855")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.CreateCertificateSigningRequestWithHttpMessagesAsync(V1CertificateSigningRequest body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_DeleteCertificateSigningRequestWithHttpMessagesAsync>d__856`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_DeleteCertificateSigningRequestWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-DeleteCertificateSigningRequestWithHttpMessagesAsync>d__857")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICertificatesV1Operations.DeleteCertificateSigningRequestWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_ReadCertificateSigningRequestWithHttpMessagesAsync>d__858`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_ReadCertificateSigningRequestWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-ReadCertificateSigningRequestWithHttpMessagesAsync>d__859")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.ReadCertificateSigningRequestWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_PatchCertificateSigningRequestWithHttpMessagesAsync>d__860`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_PatchCertificateSigningRequestWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-PatchCertificateSigningRequestWithHttpMessagesAsync>d__861")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.PatchCertificateSigningRequestWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_ReplaceCertificateSigningRequestWithHttpMessagesAsync>d__862`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_ReplaceCertificateSigningRequestWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-ReplaceCertificateSigningRequestWithHttpMessagesAsync>d__863")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.ReplaceCertificateSigningRequestWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_ReadCertificateSigningRequestApprovalWithHttpMessagesAsync>d__864`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_ReadCertificateSigningRequestApprovalWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-ReadCertificateSigningRequestApprovalWithHttpMessagesAsync>d__865")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.ReadCertificateSigningRequestApprovalWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_PatchCertificateSigningRequestApprovalWithHttpMessagesAsync>d__866`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_PatchCertificateSigningRequestApprovalWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-PatchCertificateSigningRequestApprovalWithHttpMessagesAsync>d__867")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.PatchCertificateSigningRequestApprovalWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_ReplaceCertificateSigningRequestApprovalWithHttpMessagesAsync>d__868`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_ReplaceCertificateSigningRequestApprovalWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-ReplaceCertificateSigningRequestApprovalWithHttpMessagesAsync>d__869")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.ReplaceCertificateSigningRequestApprovalWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_ReadCertificateSigningRequestStatusWithHttpMessagesAsync>d__870`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_ReadCertificateSigningRequestStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-ReadCertificateSigningRequestStatusWithHttpMessagesAsync>d__871")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.ReadCertificateSigningRequestStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_PatchCertificateSigningRequestStatusWithHttpMessagesAsync>d__872`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_PatchCertificateSigningRequestStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-PatchCertificateSigningRequestStatusWithHttpMessagesAsync>d__873")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.PatchCertificateSigningRequestStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1Operations_ReplaceCertificateSigningRequestStatusWithHttpMessagesAsync>d__874`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1Operations_ReplaceCertificateSigningRequestStatusWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1Operations-ReplaceCertificateSigningRequestStatusWithHttpMessagesAsync>d__875")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> k8s.ICertificatesV1Operations.ReplaceCertificateSigningRequestStatusWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync>d__876`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-GetAPIResourcesWithHttpMessagesAsync>d__877")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.ICertificatesV1alpha1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_DeleteCollectionClusterTrustBundleWithHttpMessagesAsync>d__878`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_DeleteCollectionClusterTrustBundleWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-DeleteCollectionClusterTrustBundleWithHttpMessagesAsync>d__879")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICertificatesV1alpha1Operations.DeleteCollectionClusterTrustBundleWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_ListClusterTrustBundleWithHttpMessagesAsync>d__880`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_ListClusterTrustBundleWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-ListClusterTrustBundleWithHttpMessagesAsync>d__881")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundleList>> k8s.ICertificatesV1alpha1Operations.ListClusterTrustBundleWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_CreateClusterTrustBundleWithHttpMessagesAsync>d__882`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_CreateClusterTrustBundleWithHttpMessagesAsync(V1alpha1ClusterTrustBundle body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-CreateClusterTrustBundleWithHttpMessagesAsync>d__883")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> k8s.ICertificatesV1alpha1Operations.CreateClusterTrustBundleWithHttpMessagesAsync(V1alpha1ClusterTrustBundle body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_DeleteClusterTrustBundleWithHttpMessagesAsync>d__884`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_DeleteClusterTrustBundleWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-DeleteClusterTrustBundleWithHttpMessagesAsync>d__885")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICertificatesV1alpha1Operations.DeleteClusterTrustBundleWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_ReadClusterTrustBundleWithHttpMessagesAsync>d__886`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_ReadClusterTrustBundleWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-ReadClusterTrustBundleWithHttpMessagesAsync>d__887")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> k8s.ICertificatesV1alpha1Operations.ReadClusterTrustBundleWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_PatchClusterTrustBundleWithHttpMessagesAsync>d__888`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_PatchClusterTrustBundleWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-PatchClusterTrustBundleWithHttpMessagesAsync>d__889")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> k8s.ICertificatesV1alpha1Operations.PatchClusterTrustBundleWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICertificatesV1alpha1Operations_ReplaceClusterTrustBundleWithHttpMessagesAsync>d__890`1")]
private Task`1<HttpOperationResponse`1<T>> ICertificatesV1alpha1Operations_ReplaceClusterTrustBundleWithHttpMessagesAsync(V1alpha1ClusterTrustBundle body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICertificatesV1alpha1Operations-ReplaceClusterTrustBundleWithHttpMessagesAsync>d__891")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> k8s.ICertificatesV1alpha1Operations.ReplaceClusterTrustBundleWithHttpMessagesAsync(V1alpha1ClusterTrustBundle body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationOperations_GetAPIGroupWithHttpMessagesAsync>d__892`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationOperations-GetAPIGroupWithHttpMessagesAsync>d__893")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.ICoordinationOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__894`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__895")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.ICoordinationV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_ListLeaseForAllNamespacesWithHttpMessagesAsync>d__896`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_ListLeaseForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-ListLeaseForAllNamespacesWithHttpMessagesAsync>d__897")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LeaseList>> k8s.ICoordinationV1Operations.ListLeaseForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_DeleteCollectionNamespacedLeaseWithHttpMessagesAsync>d__898`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_DeleteCollectionNamespacedLeaseWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-DeleteCollectionNamespacedLeaseWithHttpMessagesAsync>d__899")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoordinationV1Operations.DeleteCollectionNamespacedLeaseWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_ListNamespacedLeaseWithHttpMessagesAsync>d__900`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_ListNamespacedLeaseWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-ListNamespacedLeaseWithHttpMessagesAsync>d__901")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1LeaseList>> k8s.ICoordinationV1Operations.ListNamespacedLeaseWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_CreateNamespacedLeaseWithHttpMessagesAsync>d__902`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_CreateNamespacedLeaseWithHttpMessagesAsync(V1Lease body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-CreateNamespacedLeaseWithHttpMessagesAsync>d__903")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Lease>> k8s.ICoordinationV1Operations.CreateNamespacedLeaseWithHttpMessagesAsync(V1Lease body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_DeleteNamespacedLeaseWithHttpMessagesAsync>d__904`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_DeleteNamespacedLeaseWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-DeleteNamespacedLeaseWithHttpMessagesAsync>d__905")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoordinationV1Operations.DeleteNamespacedLeaseWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_ReadNamespacedLeaseWithHttpMessagesAsync>d__906`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_ReadNamespacedLeaseWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-ReadNamespacedLeaseWithHttpMessagesAsync>d__907")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Lease>> k8s.ICoordinationV1Operations.ReadNamespacedLeaseWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_PatchNamespacedLeaseWithHttpMessagesAsync>d__908`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_PatchNamespacedLeaseWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-PatchNamespacedLeaseWithHttpMessagesAsync>d__909")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Lease>> k8s.ICoordinationV1Operations.PatchNamespacedLeaseWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1Operations_ReplaceNamespacedLeaseWithHttpMessagesAsync>d__910`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1Operations_ReplaceNamespacedLeaseWithHttpMessagesAsync(V1Lease body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1Operations-ReplaceNamespacedLeaseWithHttpMessagesAsync>d__911")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Lease>> k8s.ICoordinationV1Operations.ReplaceNamespacedLeaseWithHttpMessagesAsync(V1Lease body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync>d__912`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-GetAPIResourcesWithHttpMessagesAsync>d__913")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.ICoordinationV1alpha1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_ListLeaseCandidateForAllNamespacesWithHttpMessagesAsync>d__914`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_ListLeaseCandidateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-ListLeaseCandidateForAllNamespacesWithHttpMessagesAsync>d__915")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidateList>> k8s.ICoordinationV1alpha1Operations.ListLeaseCandidateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_DeleteCollectionNamespacedLeaseCandidateWithHttpMessagesAsync>d__916`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_DeleteCollectionNamespacedLeaseCandidateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-DeleteCollectionNamespacedLeaseCandidateWithHttpMessagesAsync>d__917")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoordinationV1alpha1Operations.DeleteCollectionNamespacedLeaseCandidateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_ListNamespacedLeaseCandidateWithHttpMessagesAsync>d__918`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_ListNamespacedLeaseCandidateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-ListNamespacedLeaseCandidateWithHttpMessagesAsync>d__919")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidateList>> k8s.ICoordinationV1alpha1Operations.ListNamespacedLeaseCandidateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_CreateNamespacedLeaseCandidateWithHttpMessagesAsync>d__920`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_CreateNamespacedLeaseCandidateWithHttpMessagesAsync(V1alpha1LeaseCandidate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-CreateNamespacedLeaseCandidateWithHttpMessagesAsync>d__921")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> k8s.ICoordinationV1alpha1Operations.CreateNamespacedLeaseCandidateWithHttpMessagesAsync(V1alpha1LeaseCandidate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_DeleteNamespacedLeaseCandidateWithHttpMessagesAsync>d__922`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_DeleteNamespacedLeaseCandidateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-DeleteNamespacedLeaseCandidateWithHttpMessagesAsync>d__923")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ICoordinationV1alpha1Operations.DeleteNamespacedLeaseCandidateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_ReadNamespacedLeaseCandidateWithHttpMessagesAsync>d__924`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_ReadNamespacedLeaseCandidateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-ReadNamespacedLeaseCandidateWithHttpMessagesAsync>d__925")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> k8s.ICoordinationV1alpha1Operations.ReadNamespacedLeaseCandidateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_PatchNamespacedLeaseCandidateWithHttpMessagesAsync>d__926`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_PatchNamespacedLeaseCandidateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-PatchNamespacedLeaseCandidateWithHttpMessagesAsync>d__927")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> k8s.ICoordinationV1alpha1Operations.PatchNamespacedLeaseCandidateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICoordinationV1alpha1Operations_ReplaceNamespacedLeaseCandidateWithHttpMessagesAsync>d__928`1")]
private Task`1<HttpOperationResponse`1<T>> ICoordinationV1alpha1Operations_ReplaceNamespacedLeaseCandidateWithHttpMessagesAsync(V1alpha1LeaseCandidate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICoordinationV1alpha1Operations-ReplaceNamespacedLeaseCandidateWithHttpMessagesAsync>d__929")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> k8s.ICoordinationV1alpha1Operations.ReplaceNamespacedLeaseCandidateWithHttpMessagesAsync(V1alpha1LeaseCandidate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryOperations_GetAPIGroupWithHttpMessagesAsync>d__930`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryOperations-GetAPIGroupWithHttpMessagesAsync>d__931")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IDiscoveryOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__932`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__933")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IDiscoveryV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_ListEndpointSliceForAllNamespacesWithHttpMessagesAsync>d__934`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_ListEndpointSliceForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-ListEndpointSliceForAllNamespacesWithHttpMessagesAsync>d__935")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointSliceList>> k8s.IDiscoveryV1Operations.ListEndpointSliceForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_DeleteCollectionNamespacedEndpointSliceWithHttpMessagesAsync>d__936`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_DeleteCollectionNamespacedEndpointSliceWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-DeleteCollectionNamespacedEndpointSliceWithHttpMessagesAsync>d__937")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IDiscoveryV1Operations.DeleteCollectionNamespacedEndpointSliceWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_ListNamespacedEndpointSliceWithHttpMessagesAsync>d__938`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_ListNamespacedEndpointSliceWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-ListNamespacedEndpointSliceWithHttpMessagesAsync>d__939")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointSliceList>> k8s.IDiscoveryV1Operations.ListNamespacedEndpointSliceWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_CreateNamespacedEndpointSliceWithHttpMessagesAsync>d__940`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_CreateNamespacedEndpointSliceWithHttpMessagesAsync(V1EndpointSlice body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-CreateNamespacedEndpointSliceWithHttpMessagesAsync>d__941")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointSlice>> k8s.IDiscoveryV1Operations.CreateNamespacedEndpointSliceWithHttpMessagesAsync(V1EndpointSlice body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_DeleteNamespacedEndpointSliceWithHttpMessagesAsync>d__942`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_DeleteNamespacedEndpointSliceWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-DeleteNamespacedEndpointSliceWithHttpMessagesAsync>d__943")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IDiscoveryV1Operations.DeleteNamespacedEndpointSliceWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_ReadNamespacedEndpointSliceWithHttpMessagesAsync>d__944`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_ReadNamespacedEndpointSliceWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-ReadNamespacedEndpointSliceWithHttpMessagesAsync>d__945")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointSlice>> k8s.IDiscoveryV1Operations.ReadNamespacedEndpointSliceWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_PatchNamespacedEndpointSliceWithHttpMessagesAsync>d__946`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_PatchNamespacedEndpointSliceWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-PatchNamespacedEndpointSliceWithHttpMessagesAsync>d__947")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointSlice>> k8s.IDiscoveryV1Operations.PatchNamespacedEndpointSliceWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IDiscoveryV1Operations_ReplaceNamespacedEndpointSliceWithHttpMessagesAsync>d__948`1")]
private Task`1<HttpOperationResponse`1<T>> IDiscoveryV1Operations_ReplaceNamespacedEndpointSliceWithHttpMessagesAsync(V1EndpointSlice body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IDiscoveryV1Operations-ReplaceNamespacedEndpointSliceWithHttpMessagesAsync>d__949")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1EndpointSlice>> k8s.IDiscoveryV1Operations.ReplaceNamespacedEndpointSliceWithHttpMessagesAsync(V1EndpointSlice body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsOperations_GetAPIGroupWithHttpMessagesAsync>d__950`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsOperations-GetAPIGroupWithHttpMessagesAsync>d__951")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IEventsOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__952`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__953")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IEventsV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_ListEventForAllNamespacesWithHttpMessagesAsync>d__954`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_ListEventForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-ListEventForAllNamespacesWithHttpMessagesAsync>d__955")]
private sealed virtual override Task`1<HttpOperationResponse`1<Eventsv1EventList>> k8s.IEventsV1Operations.ListEventForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_DeleteCollectionNamespacedEventWithHttpMessagesAsync>d__956`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_DeleteCollectionNamespacedEventWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-DeleteCollectionNamespacedEventWithHttpMessagesAsync>d__957")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IEventsV1Operations.DeleteCollectionNamespacedEventWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_ListNamespacedEventWithHttpMessagesAsync>d__958`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_ListNamespacedEventWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-ListNamespacedEventWithHttpMessagesAsync>d__959")]
private sealed virtual override Task`1<HttpOperationResponse`1<Eventsv1EventList>> k8s.IEventsV1Operations.ListNamespacedEventWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_CreateNamespacedEventWithHttpMessagesAsync>d__960`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_CreateNamespacedEventWithHttpMessagesAsync(Eventsv1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-CreateNamespacedEventWithHttpMessagesAsync>d__961")]
private sealed virtual override Task`1<HttpOperationResponse`1<Eventsv1Event>> k8s.IEventsV1Operations.CreateNamespacedEventWithHttpMessagesAsync(Eventsv1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_DeleteNamespacedEventWithHttpMessagesAsync>d__962`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_DeleteNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-DeleteNamespacedEventWithHttpMessagesAsync>d__963")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IEventsV1Operations.DeleteNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_ReadNamespacedEventWithHttpMessagesAsync>d__964`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_ReadNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-ReadNamespacedEventWithHttpMessagesAsync>d__965")]
private sealed virtual override Task`1<HttpOperationResponse`1<Eventsv1Event>> k8s.IEventsV1Operations.ReadNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_PatchNamespacedEventWithHttpMessagesAsync>d__966`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_PatchNamespacedEventWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-PatchNamespacedEventWithHttpMessagesAsync>d__967")]
private sealed virtual override Task`1<HttpOperationResponse`1<Eventsv1Event>> k8s.IEventsV1Operations.PatchNamespacedEventWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IEventsV1Operations_ReplaceNamespacedEventWithHttpMessagesAsync>d__968`1")]
private Task`1<HttpOperationResponse`1<T>> IEventsV1Operations_ReplaceNamespacedEventWithHttpMessagesAsync(Eventsv1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IEventsV1Operations-ReplaceNamespacedEventWithHttpMessagesAsync>d__969")]
private sealed virtual override Task`1<HttpOperationResponse`1<Eventsv1Event>> k8s.IEventsV1Operations.ReplaceNamespacedEventWithHttpMessagesAsync(Eventsv1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverOperations_GetAPIGroupWithHttpMessagesAsync>d__970`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverOperations-GetAPIGroupWithHttpMessagesAsync>d__971")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IFlowcontrolApiserverOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__972`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__973")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IFlowcontrolApiserverV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_DeleteCollectionFlowSchemaWithHttpMessagesAsync>d__974`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_DeleteCollectionFlowSchemaWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-DeleteCollectionFlowSchemaWithHttpMessagesAsync>d__975")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1Operations.DeleteCollectionFlowSchemaWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ListFlowSchemaWithHttpMessagesAsync>d__976`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ListFlowSchemaWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ListFlowSchemaWithHttpMessagesAsync>d__977")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchemaList>> k8s.IFlowcontrolApiserverV1Operations.ListFlowSchemaWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_CreateFlowSchemaWithHttpMessagesAsync>d__978`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_CreateFlowSchemaWithHttpMessagesAsync(V1FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-CreateFlowSchemaWithHttpMessagesAsync>d__979")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchema>> k8s.IFlowcontrolApiserverV1Operations.CreateFlowSchemaWithHttpMessagesAsync(V1FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_DeleteFlowSchemaWithHttpMessagesAsync>d__980`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_DeleteFlowSchemaWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-DeleteFlowSchemaWithHttpMessagesAsync>d__981")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1Operations.DeleteFlowSchemaWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReadFlowSchemaWithHttpMessagesAsync>d__982`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReadFlowSchemaWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReadFlowSchemaWithHttpMessagesAsync>d__983")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchema>> k8s.IFlowcontrolApiserverV1Operations.ReadFlowSchemaWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_PatchFlowSchemaWithHttpMessagesAsync>d__984`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_PatchFlowSchemaWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-PatchFlowSchemaWithHttpMessagesAsync>d__985")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchema>> k8s.IFlowcontrolApiserverV1Operations.PatchFlowSchemaWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReplaceFlowSchemaWithHttpMessagesAsync>d__986`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReplaceFlowSchemaWithHttpMessagesAsync(V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReplaceFlowSchemaWithHttpMessagesAsync>d__987")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchema>> k8s.IFlowcontrolApiserverV1Operations.ReplaceFlowSchemaWithHttpMessagesAsync(V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReadFlowSchemaStatusWithHttpMessagesAsync>d__988`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReadFlowSchemaStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReadFlowSchemaStatusWithHttpMessagesAsync>d__989")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchema>> k8s.IFlowcontrolApiserverV1Operations.ReadFlowSchemaStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_PatchFlowSchemaStatusWithHttpMessagesAsync>d__990`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_PatchFlowSchemaStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-PatchFlowSchemaStatusWithHttpMessagesAsync>d__991")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchema>> k8s.IFlowcontrolApiserverV1Operations.PatchFlowSchemaStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReplaceFlowSchemaStatusWithHttpMessagesAsync>d__992`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReplaceFlowSchemaStatusWithHttpMessagesAsync(V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReplaceFlowSchemaStatusWithHttpMessagesAsync>d__993")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1FlowSchema>> k8s.IFlowcontrolApiserverV1Operations.ReplaceFlowSchemaStatusWithHttpMessagesAsync(V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync>d__994`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync>d__995")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1Operations.DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ListPriorityLevelConfigurationWithHttpMessagesAsync>d__996`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ListPriorityLevelConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ListPriorityLevelConfigurationWithHttpMessagesAsync>d__997")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfigurationList>> k8s.IFlowcontrolApiserverV1Operations.ListPriorityLevelConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_CreatePriorityLevelConfigurationWithHttpMessagesAsync>d__998`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_CreatePriorityLevelConfigurationWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-CreatePriorityLevelConfigurationWithHttpMessagesAsync>d__999")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1Operations.CreatePriorityLevelConfigurationWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_DeletePriorityLevelConfigurationWithHttpMessagesAsync>d__1000`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_DeletePriorityLevelConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-DeletePriorityLevelConfigurationWithHttpMessagesAsync>d__1001")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1Operations.DeletePriorityLevelConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReadPriorityLevelConfigurationWithHttpMessagesAsync>d__1002`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReadPriorityLevelConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReadPriorityLevelConfigurationWithHttpMessagesAsync>d__1003")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1Operations.ReadPriorityLevelConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_PatchPriorityLevelConfigurationWithHttpMessagesAsync>d__1004`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_PatchPriorityLevelConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-PatchPriorityLevelConfigurationWithHttpMessagesAsync>d__1005")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1Operations.PatchPriorityLevelConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReplacePriorityLevelConfigurationWithHttpMessagesAsync>d__1006`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReplacePriorityLevelConfigurationWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReplacePriorityLevelConfigurationWithHttpMessagesAsync>d__1007")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1Operations.ReplacePriorityLevelConfigurationWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1008`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1009")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1Operations.ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1010`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1011")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1Operations.PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1Operations_ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1012`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1Operations_ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1Operations-ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1013")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1Operations.ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_GetAPIResourcesWithHttpMessagesAsync>d__1014`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-GetAPIResourcesWithHttpMessagesAsync>d__1015")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IFlowcontrolApiserverV1beta3Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_DeleteCollectionFlowSchemaWithHttpMessagesAsync>d__1016`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_DeleteCollectionFlowSchemaWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-DeleteCollectionFlowSchemaWithHttpMessagesAsync>d__1017")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1beta3Operations.DeleteCollectionFlowSchemaWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ListFlowSchemaWithHttpMessagesAsync>d__1018`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ListFlowSchemaWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ListFlowSchemaWithHttpMessagesAsync>d__1019")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchemaList>> k8s.IFlowcontrolApiserverV1beta3Operations.ListFlowSchemaWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_CreateFlowSchemaWithHttpMessagesAsync>d__1020`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_CreateFlowSchemaWithHttpMessagesAsync(V1beta3FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-CreateFlowSchemaWithHttpMessagesAsync>d__1021")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> k8s.IFlowcontrolApiserverV1beta3Operations.CreateFlowSchemaWithHttpMessagesAsync(V1beta3FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_DeleteFlowSchemaWithHttpMessagesAsync>d__1022`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_DeleteFlowSchemaWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-DeleteFlowSchemaWithHttpMessagesAsync>d__1023")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1beta3Operations.DeleteFlowSchemaWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReadFlowSchemaWithHttpMessagesAsync>d__1024`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReadFlowSchemaWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReadFlowSchemaWithHttpMessagesAsync>d__1025")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> k8s.IFlowcontrolApiserverV1beta3Operations.ReadFlowSchemaWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_PatchFlowSchemaWithHttpMessagesAsync>d__1026`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_PatchFlowSchemaWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-PatchFlowSchemaWithHttpMessagesAsync>d__1027")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> k8s.IFlowcontrolApiserverV1beta3Operations.PatchFlowSchemaWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReplaceFlowSchemaWithHttpMessagesAsync>d__1028`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReplaceFlowSchemaWithHttpMessagesAsync(V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReplaceFlowSchemaWithHttpMessagesAsync>d__1029")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> k8s.IFlowcontrolApiserverV1beta3Operations.ReplaceFlowSchemaWithHttpMessagesAsync(V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReadFlowSchemaStatusWithHttpMessagesAsync>d__1030`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReadFlowSchemaStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReadFlowSchemaStatusWithHttpMessagesAsync>d__1031")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> k8s.IFlowcontrolApiserverV1beta3Operations.ReadFlowSchemaStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_PatchFlowSchemaStatusWithHttpMessagesAsync>d__1032`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_PatchFlowSchemaStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-PatchFlowSchemaStatusWithHttpMessagesAsync>d__1033")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> k8s.IFlowcontrolApiserverV1beta3Operations.PatchFlowSchemaStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReplaceFlowSchemaStatusWithHttpMessagesAsync>d__1034`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReplaceFlowSchemaStatusWithHttpMessagesAsync(V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReplaceFlowSchemaStatusWithHttpMessagesAsync>d__1035")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> k8s.IFlowcontrolApiserverV1beta3Operations.ReplaceFlowSchemaStatusWithHttpMessagesAsync(V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync>d__1036`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync>d__1037")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1beta3Operations.DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ListPriorityLevelConfigurationWithHttpMessagesAsync>d__1038`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ListPriorityLevelConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ListPriorityLevelConfigurationWithHttpMessagesAsync>d__1039")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfigurationList>> k8s.IFlowcontrolApiserverV1beta3Operations.ListPriorityLevelConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_CreatePriorityLevelConfigurationWithHttpMessagesAsync>d__1040`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_CreatePriorityLevelConfigurationWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-CreatePriorityLevelConfigurationWithHttpMessagesAsync>d__1041")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1beta3Operations.CreatePriorityLevelConfigurationWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_DeletePriorityLevelConfigurationWithHttpMessagesAsync>d__1042`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_DeletePriorityLevelConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-DeletePriorityLevelConfigurationWithHttpMessagesAsync>d__1043")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IFlowcontrolApiserverV1beta3Operations.DeletePriorityLevelConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReadPriorityLevelConfigurationWithHttpMessagesAsync>d__1044`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReadPriorityLevelConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReadPriorityLevelConfigurationWithHttpMessagesAsync>d__1045")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1beta3Operations.ReadPriorityLevelConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_PatchPriorityLevelConfigurationWithHttpMessagesAsync>d__1046`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_PatchPriorityLevelConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-PatchPriorityLevelConfigurationWithHttpMessagesAsync>d__1047")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1beta3Operations.PatchPriorityLevelConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReplacePriorityLevelConfigurationWithHttpMessagesAsync>d__1048`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReplacePriorityLevelConfigurationWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReplacePriorityLevelConfigurationWithHttpMessagesAsync>d__1049")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1beta3Operations.ReplacePriorityLevelConfigurationWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1050`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1051")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1beta3Operations.ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1052`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1053")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1beta3Operations.PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IFlowcontrolApiserverV1beta3Operations_ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1054`1")]
private Task`1<HttpOperationResponse`1<T>> IFlowcontrolApiserverV1beta3Operations_ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IFlowcontrolApiserverV1beta3Operations-ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync>d__1055")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> k8s.IFlowcontrolApiserverV1beta3Operations.ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverOperations_GetAPIGroupWithHttpMessagesAsync>d__1056`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverOperations-GetAPIGroupWithHttpMessagesAsync>d__1057")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IInternalApiserverOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1058`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1059")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IInternalApiserverV1alpha1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_DeleteCollectionStorageVersionWithHttpMessagesAsync>d__1060`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_DeleteCollectionStorageVersionWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-DeleteCollectionStorageVersionWithHttpMessagesAsync>d__1061")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IInternalApiserverV1alpha1Operations.DeleteCollectionStorageVersionWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_ListStorageVersionWithHttpMessagesAsync>d__1062`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_ListStorageVersionWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-ListStorageVersionWithHttpMessagesAsync>d__1063")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionList>> k8s.IInternalApiserverV1alpha1Operations.ListStorageVersionWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_CreateStorageVersionWithHttpMessagesAsync>d__1064`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_CreateStorageVersionWithHttpMessagesAsync(V1alpha1StorageVersion body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-CreateStorageVersionWithHttpMessagesAsync>d__1065")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> k8s.IInternalApiserverV1alpha1Operations.CreateStorageVersionWithHttpMessagesAsync(V1alpha1StorageVersion body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_DeleteStorageVersionWithHttpMessagesAsync>d__1066`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_DeleteStorageVersionWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-DeleteStorageVersionWithHttpMessagesAsync>d__1067")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IInternalApiserverV1alpha1Operations.DeleteStorageVersionWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_ReadStorageVersionWithHttpMessagesAsync>d__1068`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_ReadStorageVersionWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-ReadStorageVersionWithHttpMessagesAsync>d__1069")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> k8s.IInternalApiserverV1alpha1Operations.ReadStorageVersionWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_PatchStorageVersionWithHttpMessagesAsync>d__1070`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_PatchStorageVersionWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-PatchStorageVersionWithHttpMessagesAsync>d__1071")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> k8s.IInternalApiserverV1alpha1Operations.PatchStorageVersionWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_ReplaceStorageVersionWithHttpMessagesAsync>d__1072`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_ReplaceStorageVersionWithHttpMessagesAsync(V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-ReplaceStorageVersionWithHttpMessagesAsync>d__1073")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> k8s.IInternalApiserverV1alpha1Operations.ReplaceStorageVersionWithHttpMessagesAsync(V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_ReadStorageVersionStatusWithHttpMessagesAsync>d__1074`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_ReadStorageVersionStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-ReadStorageVersionStatusWithHttpMessagesAsync>d__1075")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> k8s.IInternalApiserverV1alpha1Operations.ReadStorageVersionStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_PatchStorageVersionStatusWithHttpMessagesAsync>d__1076`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_PatchStorageVersionStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-PatchStorageVersionStatusWithHttpMessagesAsync>d__1077")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> k8s.IInternalApiserverV1alpha1Operations.PatchStorageVersionStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IInternalApiserverV1alpha1Operations_ReplaceStorageVersionStatusWithHttpMessagesAsync>d__1078`1")]
private Task`1<HttpOperationResponse`1<T>> IInternalApiserverV1alpha1Operations_ReplaceStorageVersionStatusWithHttpMessagesAsync(V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IInternalApiserverV1alpha1Operations-ReplaceStorageVersionStatusWithHttpMessagesAsync>d__1079")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> k8s.IInternalApiserverV1alpha1Operations.ReplaceStorageVersionStatusWithHttpMessagesAsync(V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingOperations_GetAPIGroupWithHttpMessagesAsync>d__1080`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingOperations-GetAPIGroupWithHttpMessagesAsync>d__1081")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.INetworkingOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1082`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1083")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.INetworkingV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_DeleteCollectionIngressClassWithHttpMessagesAsync>d__1084`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_DeleteCollectionIngressClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-DeleteCollectionIngressClassWithHttpMessagesAsync>d__1085")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1Operations.DeleteCollectionIngressClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ListIngressClassWithHttpMessagesAsync>d__1086`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ListIngressClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ListIngressClassWithHttpMessagesAsync>d__1087")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1IngressClassList>> k8s.INetworkingV1Operations.ListIngressClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_CreateIngressClassWithHttpMessagesAsync>d__1088`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_CreateIngressClassWithHttpMessagesAsync(V1IngressClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-CreateIngressClassWithHttpMessagesAsync>d__1089")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1IngressClass>> k8s.INetworkingV1Operations.CreateIngressClassWithHttpMessagesAsync(V1IngressClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_DeleteIngressClassWithHttpMessagesAsync>d__1090`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_DeleteIngressClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-DeleteIngressClassWithHttpMessagesAsync>d__1091")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1Operations.DeleteIngressClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReadIngressClassWithHttpMessagesAsync>d__1092`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReadIngressClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReadIngressClassWithHttpMessagesAsync>d__1093")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1IngressClass>> k8s.INetworkingV1Operations.ReadIngressClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_PatchIngressClassWithHttpMessagesAsync>d__1094`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_PatchIngressClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-PatchIngressClassWithHttpMessagesAsync>d__1095")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1IngressClass>> k8s.INetworkingV1Operations.PatchIngressClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReplaceIngressClassWithHttpMessagesAsync>d__1096`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReplaceIngressClassWithHttpMessagesAsync(V1IngressClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReplaceIngressClassWithHttpMessagesAsync>d__1097")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1IngressClass>> k8s.INetworkingV1Operations.ReplaceIngressClassWithHttpMessagesAsync(V1IngressClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ListIngressForAllNamespacesWithHttpMessagesAsync>d__1098`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ListIngressForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ListIngressForAllNamespacesWithHttpMessagesAsync>d__1099")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1IngressList>> k8s.INetworkingV1Operations.ListIngressForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_DeleteCollectionNamespacedIngressWithHttpMessagesAsync>d__1100`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_DeleteCollectionNamespacedIngressWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-DeleteCollectionNamespacedIngressWithHttpMessagesAsync>d__1101")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1Operations.DeleteCollectionNamespacedIngressWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ListNamespacedIngressWithHttpMessagesAsync>d__1102`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ListNamespacedIngressWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ListNamespacedIngressWithHttpMessagesAsync>d__1103")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1IngressList>> k8s.INetworkingV1Operations.ListNamespacedIngressWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_CreateNamespacedIngressWithHttpMessagesAsync>d__1104`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_CreateNamespacedIngressWithHttpMessagesAsync(V1Ingress body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-CreateNamespacedIngressWithHttpMessagesAsync>d__1105")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Ingress>> k8s.INetworkingV1Operations.CreateNamespacedIngressWithHttpMessagesAsync(V1Ingress body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_DeleteNamespacedIngressWithHttpMessagesAsync>d__1106`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_DeleteNamespacedIngressWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-DeleteNamespacedIngressWithHttpMessagesAsync>d__1107")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1Operations.DeleteNamespacedIngressWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReadNamespacedIngressWithHttpMessagesAsync>d__1108`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReadNamespacedIngressWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReadNamespacedIngressWithHttpMessagesAsync>d__1109")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Ingress>> k8s.INetworkingV1Operations.ReadNamespacedIngressWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_PatchNamespacedIngressWithHttpMessagesAsync>d__1110`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_PatchNamespacedIngressWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-PatchNamespacedIngressWithHttpMessagesAsync>d__1111")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Ingress>> k8s.INetworkingV1Operations.PatchNamespacedIngressWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReplaceNamespacedIngressWithHttpMessagesAsync>d__1112`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReplaceNamespacedIngressWithHttpMessagesAsync(V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReplaceNamespacedIngressWithHttpMessagesAsync>d__1113")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Ingress>> k8s.INetworkingV1Operations.ReplaceNamespacedIngressWithHttpMessagesAsync(V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReadNamespacedIngressStatusWithHttpMessagesAsync>d__1114`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReadNamespacedIngressStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReadNamespacedIngressStatusWithHttpMessagesAsync>d__1115")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Ingress>> k8s.INetworkingV1Operations.ReadNamespacedIngressStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_PatchNamespacedIngressStatusWithHttpMessagesAsync>d__1116`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_PatchNamespacedIngressStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-PatchNamespacedIngressStatusWithHttpMessagesAsync>d__1117")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Ingress>> k8s.INetworkingV1Operations.PatchNamespacedIngressStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReplaceNamespacedIngressStatusWithHttpMessagesAsync>d__1118`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReplaceNamespacedIngressStatusWithHttpMessagesAsync(V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReplaceNamespacedIngressStatusWithHttpMessagesAsync>d__1119")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Ingress>> k8s.INetworkingV1Operations.ReplaceNamespacedIngressStatusWithHttpMessagesAsync(V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_DeleteCollectionNamespacedNetworkPolicyWithHttpMessagesAsync>d__1120`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_DeleteCollectionNamespacedNetworkPolicyWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-DeleteCollectionNamespacedNetworkPolicyWithHttpMessagesAsync>d__1121")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1Operations.DeleteCollectionNamespacedNetworkPolicyWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ListNamespacedNetworkPolicyWithHttpMessagesAsync>d__1122`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ListNamespacedNetworkPolicyWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ListNamespacedNetworkPolicyWithHttpMessagesAsync>d__1123")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NetworkPolicyList>> k8s.INetworkingV1Operations.ListNamespacedNetworkPolicyWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_CreateNamespacedNetworkPolicyWithHttpMessagesAsync>d__1124`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_CreateNamespacedNetworkPolicyWithHttpMessagesAsync(V1NetworkPolicy body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-CreateNamespacedNetworkPolicyWithHttpMessagesAsync>d__1125")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NetworkPolicy>> k8s.INetworkingV1Operations.CreateNamespacedNetworkPolicyWithHttpMessagesAsync(V1NetworkPolicy body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_DeleteNamespacedNetworkPolicyWithHttpMessagesAsync>d__1126`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_DeleteNamespacedNetworkPolicyWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-DeleteNamespacedNetworkPolicyWithHttpMessagesAsync>d__1127")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1Operations.DeleteNamespacedNetworkPolicyWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReadNamespacedNetworkPolicyWithHttpMessagesAsync>d__1128`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReadNamespacedNetworkPolicyWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReadNamespacedNetworkPolicyWithHttpMessagesAsync>d__1129")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NetworkPolicy>> k8s.INetworkingV1Operations.ReadNamespacedNetworkPolicyWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_PatchNamespacedNetworkPolicyWithHttpMessagesAsync>d__1130`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_PatchNamespacedNetworkPolicyWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-PatchNamespacedNetworkPolicyWithHttpMessagesAsync>d__1131")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NetworkPolicy>> k8s.INetworkingV1Operations.PatchNamespacedNetworkPolicyWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ReplaceNamespacedNetworkPolicyWithHttpMessagesAsync>d__1132`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ReplaceNamespacedNetworkPolicyWithHttpMessagesAsync(V1NetworkPolicy body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ReplaceNamespacedNetworkPolicyWithHttpMessagesAsync>d__1133")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NetworkPolicy>> k8s.INetworkingV1Operations.ReplaceNamespacedNetworkPolicyWithHttpMessagesAsync(V1NetworkPolicy body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1Operations_ListNetworkPolicyForAllNamespacesWithHttpMessagesAsync>d__1134`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1Operations_ListNetworkPolicyForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1Operations-ListNetworkPolicyForAllNamespacesWithHttpMessagesAsync>d__1135")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1NetworkPolicyList>> k8s.INetworkingV1Operations.ListNetworkPolicyForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1136`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1137")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.INetworkingV1beta1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_DeleteCollectionIPAddressWithHttpMessagesAsync>d__1138`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_DeleteCollectionIPAddressWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-DeleteCollectionIPAddressWithHttpMessagesAsync>d__1139")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1beta1Operations.DeleteCollectionIPAddressWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ListIPAddressWithHttpMessagesAsync>d__1140`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ListIPAddressWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ListIPAddressWithHttpMessagesAsync>d__1141")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1IPAddressList>> k8s.INetworkingV1beta1Operations.ListIPAddressWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_CreateIPAddressWithHttpMessagesAsync>d__1142`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_CreateIPAddressWithHttpMessagesAsync(V1beta1IPAddress body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-CreateIPAddressWithHttpMessagesAsync>d__1143")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1IPAddress>> k8s.INetworkingV1beta1Operations.CreateIPAddressWithHttpMessagesAsync(V1beta1IPAddress body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_DeleteIPAddressWithHttpMessagesAsync>d__1144`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_DeleteIPAddressWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-DeleteIPAddressWithHttpMessagesAsync>d__1145")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1beta1Operations.DeleteIPAddressWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ReadIPAddressWithHttpMessagesAsync>d__1146`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ReadIPAddressWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ReadIPAddressWithHttpMessagesAsync>d__1147")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1IPAddress>> k8s.INetworkingV1beta1Operations.ReadIPAddressWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_PatchIPAddressWithHttpMessagesAsync>d__1148`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_PatchIPAddressWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-PatchIPAddressWithHttpMessagesAsync>d__1149")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1IPAddress>> k8s.INetworkingV1beta1Operations.PatchIPAddressWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ReplaceIPAddressWithHttpMessagesAsync>d__1150`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ReplaceIPAddressWithHttpMessagesAsync(V1beta1IPAddress body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ReplaceIPAddressWithHttpMessagesAsync>d__1151")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1IPAddress>> k8s.INetworkingV1beta1Operations.ReplaceIPAddressWithHttpMessagesAsync(V1beta1IPAddress body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_DeleteCollectionServiceCIDRWithHttpMessagesAsync>d__1152`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_DeleteCollectionServiceCIDRWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-DeleteCollectionServiceCIDRWithHttpMessagesAsync>d__1153")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1beta1Operations.DeleteCollectionServiceCIDRWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ListServiceCIDRWithHttpMessagesAsync>d__1154`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ListServiceCIDRWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ListServiceCIDRWithHttpMessagesAsync>d__1155")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDRList>> k8s.INetworkingV1beta1Operations.ListServiceCIDRWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_CreateServiceCIDRWithHttpMessagesAsync>d__1156`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_CreateServiceCIDRWithHttpMessagesAsync(V1beta1ServiceCIDR body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-CreateServiceCIDRWithHttpMessagesAsync>d__1157")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> k8s.INetworkingV1beta1Operations.CreateServiceCIDRWithHttpMessagesAsync(V1beta1ServiceCIDR body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_DeleteServiceCIDRWithHttpMessagesAsync>d__1158`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_DeleteServiceCIDRWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-DeleteServiceCIDRWithHttpMessagesAsync>d__1159")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INetworkingV1beta1Operations.DeleteServiceCIDRWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ReadServiceCIDRWithHttpMessagesAsync>d__1160`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ReadServiceCIDRWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ReadServiceCIDRWithHttpMessagesAsync>d__1161")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> k8s.INetworkingV1beta1Operations.ReadServiceCIDRWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_PatchServiceCIDRWithHttpMessagesAsync>d__1162`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_PatchServiceCIDRWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-PatchServiceCIDRWithHttpMessagesAsync>d__1163")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> k8s.INetworkingV1beta1Operations.PatchServiceCIDRWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ReplaceServiceCIDRWithHttpMessagesAsync>d__1164`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ReplaceServiceCIDRWithHttpMessagesAsync(V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ReplaceServiceCIDRWithHttpMessagesAsync>d__1165")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> k8s.INetworkingV1beta1Operations.ReplaceServiceCIDRWithHttpMessagesAsync(V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ReadServiceCIDRStatusWithHttpMessagesAsync>d__1166`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ReadServiceCIDRStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ReadServiceCIDRStatusWithHttpMessagesAsync>d__1167")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> k8s.INetworkingV1beta1Operations.ReadServiceCIDRStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_PatchServiceCIDRStatusWithHttpMessagesAsync>d__1168`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_PatchServiceCIDRStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-PatchServiceCIDRStatusWithHttpMessagesAsync>d__1169")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> k8s.INetworkingV1beta1Operations.PatchServiceCIDRStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INetworkingV1beta1Operations_ReplaceServiceCIDRStatusWithHttpMessagesAsync>d__1170`1")]
private Task`1<HttpOperationResponse`1<T>> INetworkingV1beta1Operations_ReplaceServiceCIDRStatusWithHttpMessagesAsync(V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INetworkingV1beta1Operations-ReplaceServiceCIDRStatusWithHttpMessagesAsync>d__1171")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> k8s.INetworkingV1beta1Operations.ReplaceServiceCIDRStatusWithHttpMessagesAsync(V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeOperations_GetAPIGroupWithHttpMessagesAsync>d__1172`1")]
private Task`1<HttpOperationResponse`1<T>> INodeOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeOperations-GetAPIGroupWithHttpMessagesAsync>d__1173")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.INodeOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1174`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1175")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.INodeV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_DeleteCollectionRuntimeClassWithHttpMessagesAsync>d__1176`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_DeleteCollectionRuntimeClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-DeleteCollectionRuntimeClassWithHttpMessagesAsync>d__1177")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INodeV1Operations.DeleteCollectionRuntimeClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_ListRuntimeClassWithHttpMessagesAsync>d__1178`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_ListRuntimeClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-ListRuntimeClassWithHttpMessagesAsync>d__1179")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RuntimeClassList>> k8s.INodeV1Operations.ListRuntimeClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_CreateRuntimeClassWithHttpMessagesAsync>d__1180`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_CreateRuntimeClassWithHttpMessagesAsync(V1RuntimeClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-CreateRuntimeClassWithHttpMessagesAsync>d__1181")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RuntimeClass>> k8s.INodeV1Operations.CreateRuntimeClassWithHttpMessagesAsync(V1RuntimeClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_DeleteRuntimeClassWithHttpMessagesAsync>d__1182`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_DeleteRuntimeClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-DeleteRuntimeClassWithHttpMessagesAsync>d__1183")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.INodeV1Operations.DeleteRuntimeClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_ReadRuntimeClassWithHttpMessagesAsync>d__1184`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_ReadRuntimeClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-ReadRuntimeClassWithHttpMessagesAsync>d__1185")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RuntimeClass>> k8s.INodeV1Operations.ReadRuntimeClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_PatchRuntimeClassWithHttpMessagesAsync>d__1186`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_PatchRuntimeClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-PatchRuntimeClassWithHttpMessagesAsync>d__1187")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RuntimeClass>> k8s.INodeV1Operations.PatchRuntimeClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<INodeV1Operations_ReplaceRuntimeClassWithHttpMessagesAsync>d__1188`1")]
private Task`1<HttpOperationResponse`1<T>> INodeV1Operations_ReplaceRuntimeClassWithHttpMessagesAsync(V1RuntimeClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-INodeV1Operations-ReplaceRuntimeClassWithHttpMessagesAsync>d__1189")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RuntimeClass>> k8s.INodeV1Operations.ReplaceRuntimeClassWithHttpMessagesAsync(V1RuntimeClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyOperations_GetAPIGroupWithHttpMessagesAsync>d__1190`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyOperations-GetAPIGroupWithHttpMessagesAsync>d__1191")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IPolicyOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1192`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1193")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IPolicyV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_DeleteCollectionNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1194`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_DeleteCollectionNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-DeleteCollectionNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1195")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IPolicyV1Operations.DeleteCollectionNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_ListNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1196`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_ListNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-ListNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1197")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudgetList>> k8s.IPolicyV1Operations.ListNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_CreateNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1198`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_CreateNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1PodDisruptionBudget body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-CreateNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1199")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> k8s.IPolicyV1Operations.CreateNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1PodDisruptionBudget body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_DeleteNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1200`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_DeleteNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-DeleteNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1201")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IPolicyV1Operations.DeleteNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_ReadNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1202`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_ReadNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-ReadNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1203")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> k8s.IPolicyV1Operations.ReadNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_PatchNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1204`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_PatchNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-PatchNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1205")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> k8s.IPolicyV1Operations.PatchNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_ReplaceNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1206`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_ReplaceNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-ReplaceNamespacedPodDisruptionBudgetWithHttpMessagesAsync>d__1207")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> k8s.IPolicyV1Operations.ReplaceNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_ReadNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync>d__1208`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_ReadNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-ReadNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync>d__1209")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> k8s.IPolicyV1Operations.ReadNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_PatchNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync>d__1210`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_PatchNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-PatchNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync>d__1211")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> k8s.IPolicyV1Operations.PatchNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_ReplaceNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync>d__1212`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_ReplaceNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-ReplaceNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync>d__1213")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> k8s.IPolicyV1Operations.ReplaceNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IPolicyV1Operations_ListPodDisruptionBudgetForAllNamespacesWithHttpMessagesAsync>d__1214`1")]
private Task`1<HttpOperationResponse`1<T>> IPolicyV1Operations_ListPodDisruptionBudgetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IPolicyV1Operations-ListPodDisruptionBudgetForAllNamespacesWithHttpMessagesAsync>d__1215")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PodDisruptionBudgetList>> k8s.IPolicyV1Operations.ListPodDisruptionBudgetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationOperations_GetAPIGroupWithHttpMessagesAsync>d__1216`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationOperations-GetAPIGroupWithHttpMessagesAsync>d__1217")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IRbacAuthorizationOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1218`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1219")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IRbacAuthorizationV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteCollectionClusterRoleBindingWithHttpMessagesAsync>d__1220`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteCollectionClusterRoleBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteCollectionClusterRoleBindingWithHttpMessagesAsync>d__1221")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteCollectionClusterRoleBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ListClusterRoleBindingWithHttpMessagesAsync>d__1222`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ListClusterRoleBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ListClusterRoleBindingWithHttpMessagesAsync>d__1223")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRoleBindingList>> k8s.IRbacAuthorizationV1Operations.ListClusterRoleBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_CreateClusterRoleBindingWithHttpMessagesAsync>d__1224`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_CreateClusterRoleBindingWithHttpMessagesAsync(V1ClusterRoleBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-CreateClusterRoleBindingWithHttpMessagesAsync>d__1225")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> k8s.IRbacAuthorizationV1Operations.CreateClusterRoleBindingWithHttpMessagesAsync(V1ClusterRoleBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteClusterRoleBindingWithHttpMessagesAsync>d__1226`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteClusterRoleBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteClusterRoleBindingWithHttpMessagesAsync>d__1227")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteClusterRoleBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReadClusterRoleBindingWithHttpMessagesAsync>d__1228`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReadClusterRoleBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReadClusterRoleBindingWithHttpMessagesAsync>d__1229")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> k8s.IRbacAuthorizationV1Operations.ReadClusterRoleBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_PatchClusterRoleBindingWithHttpMessagesAsync>d__1230`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_PatchClusterRoleBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-PatchClusterRoleBindingWithHttpMessagesAsync>d__1231")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> k8s.IRbacAuthorizationV1Operations.PatchClusterRoleBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReplaceClusterRoleBindingWithHttpMessagesAsync>d__1232`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReplaceClusterRoleBindingWithHttpMessagesAsync(V1ClusterRoleBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReplaceClusterRoleBindingWithHttpMessagesAsync>d__1233")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> k8s.IRbacAuthorizationV1Operations.ReplaceClusterRoleBindingWithHttpMessagesAsync(V1ClusterRoleBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteCollectionClusterRoleWithHttpMessagesAsync>d__1234`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteCollectionClusterRoleWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteCollectionClusterRoleWithHttpMessagesAsync>d__1235")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteCollectionClusterRoleWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ListClusterRoleWithHttpMessagesAsync>d__1236`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ListClusterRoleWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ListClusterRoleWithHttpMessagesAsync>d__1237")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRoleList>> k8s.IRbacAuthorizationV1Operations.ListClusterRoleWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_CreateClusterRoleWithHttpMessagesAsync>d__1238`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_CreateClusterRoleWithHttpMessagesAsync(V1ClusterRole body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-CreateClusterRoleWithHttpMessagesAsync>d__1239")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRole>> k8s.IRbacAuthorizationV1Operations.CreateClusterRoleWithHttpMessagesAsync(V1ClusterRole body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteClusterRoleWithHttpMessagesAsync>d__1240`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteClusterRoleWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteClusterRoleWithHttpMessagesAsync>d__1241")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteClusterRoleWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReadClusterRoleWithHttpMessagesAsync>d__1242`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReadClusterRoleWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReadClusterRoleWithHttpMessagesAsync>d__1243")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRole>> k8s.IRbacAuthorizationV1Operations.ReadClusterRoleWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_PatchClusterRoleWithHttpMessagesAsync>d__1244`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_PatchClusterRoleWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-PatchClusterRoleWithHttpMessagesAsync>d__1245")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRole>> k8s.IRbacAuthorizationV1Operations.PatchClusterRoleWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReplaceClusterRoleWithHttpMessagesAsync>d__1246`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReplaceClusterRoleWithHttpMessagesAsync(V1ClusterRole body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReplaceClusterRoleWithHttpMessagesAsync>d__1247")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1ClusterRole>> k8s.IRbacAuthorizationV1Operations.ReplaceClusterRoleWithHttpMessagesAsync(V1ClusterRole body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteCollectionNamespacedRoleBindingWithHttpMessagesAsync>d__1248`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteCollectionNamespacedRoleBindingWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteCollectionNamespacedRoleBindingWithHttpMessagesAsync>d__1249")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteCollectionNamespacedRoleBindingWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ListNamespacedRoleBindingWithHttpMessagesAsync>d__1250`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ListNamespacedRoleBindingWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ListNamespacedRoleBindingWithHttpMessagesAsync>d__1251")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleBindingList>> k8s.IRbacAuthorizationV1Operations.ListNamespacedRoleBindingWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_CreateNamespacedRoleBindingWithHttpMessagesAsync>d__1252`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_CreateNamespacedRoleBindingWithHttpMessagesAsync(V1RoleBinding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-CreateNamespacedRoleBindingWithHttpMessagesAsync>d__1253")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleBinding>> k8s.IRbacAuthorizationV1Operations.CreateNamespacedRoleBindingWithHttpMessagesAsync(V1RoleBinding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteNamespacedRoleBindingWithHttpMessagesAsync>d__1254`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteNamespacedRoleBindingWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteNamespacedRoleBindingWithHttpMessagesAsync>d__1255")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteNamespacedRoleBindingWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReadNamespacedRoleBindingWithHttpMessagesAsync>d__1256`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReadNamespacedRoleBindingWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReadNamespacedRoleBindingWithHttpMessagesAsync>d__1257")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleBinding>> k8s.IRbacAuthorizationV1Operations.ReadNamespacedRoleBindingWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_PatchNamespacedRoleBindingWithHttpMessagesAsync>d__1258`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_PatchNamespacedRoleBindingWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-PatchNamespacedRoleBindingWithHttpMessagesAsync>d__1259")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleBinding>> k8s.IRbacAuthorizationV1Operations.PatchNamespacedRoleBindingWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReplaceNamespacedRoleBindingWithHttpMessagesAsync>d__1260`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReplaceNamespacedRoleBindingWithHttpMessagesAsync(V1RoleBinding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReplaceNamespacedRoleBindingWithHttpMessagesAsync>d__1261")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleBinding>> k8s.IRbacAuthorizationV1Operations.ReplaceNamespacedRoleBindingWithHttpMessagesAsync(V1RoleBinding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteCollectionNamespacedRoleWithHttpMessagesAsync>d__1262`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteCollectionNamespacedRoleWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteCollectionNamespacedRoleWithHttpMessagesAsync>d__1263")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteCollectionNamespacedRoleWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ListNamespacedRoleWithHttpMessagesAsync>d__1264`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ListNamespacedRoleWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ListNamespacedRoleWithHttpMessagesAsync>d__1265")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleList>> k8s.IRbacAuthorizationV1Operations.ListNamespacedRoleWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_CreateNamespacedRoleWithHttpMessagesAsync>d__1266`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_CreateNamespacedRoleWithHttpMessagesAsync(V1Role body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-CreateNamespacedRoleWithHttpMessagesAsync>d__1267")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Role>> k8s.IRbacAuthorizationV1Operations.CreateNamespacedRoleWithHttpMessagesAsync(V1Role body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_DeleteNamespacedRoleWithHttpMessagesAsync>d__1268`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_DeleteNamespacedRoleWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-DeleteNamespacedRoleWithHttpMessagesAsync>d__1269")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IRbacAuthorizationV1Operations.DeleteNamespacedRoleWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReadNamespacedRoleWithHttpMessagesAsync>d__1270`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReadNamespacedRoleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReadNamespacedRoleWithHttpMessagesAsync>d__1271")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Role>> k8s.IRbacAuthorizationV1Operations.ReadNamespacedRoleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_PatchNamespacedRoleWithHttpMessagesAsync>d__1272`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_PatchNamespacedRoleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-PatchNamespacedRoleWithHttpMessagesAsync>d__1273")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Role>> k8s.IRbacAuthorizationV1Operations.PatchNamespacedRoleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ReplaceNamespacedRoleWithHttpMessagesAsync>d__1274`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ReplaceNamespacedRoleWithHttpMessagesAsync(V1Role body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ReplaceNamespacedRoleWithHttpMessagesAsync>d__1275")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Role>> k8s.IRbacAuthorizationV1Operations.ReplaceNamespacedRoleWithHttpMessagesAsync(V1Role body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ListRoleBindingForAllNamespacesWithHttpMessagesAsync>d__1276`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ListRoleBindingForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ListRoleBindingForAllNamespacesWithHttpMessagesAsync>d__1277")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleBindingList>> k8s.IRbacAuthorizationV1Operations.ListRoleBindingForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IRbacAuthorizationV1Operations_ListRoleForAllNamespacesWithHttpMessagesAsync>d__1278`1")]
private Task`1<HttpOperationResponse`1<T>> IRbacAuthorizationV1Operations_ListRoleForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IRbacAuthorizationV1Operations-ListRoleForAllNamespacesWithHttpMessagesAsync>d__1279")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1RoleList>> k8s.IRbacAuthorizationV1Operations.ListRoleForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceOperations_GetAPIGroupWithHttpMessagesAsync>d__1280`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceOperations-GetAPIGroupWithHttpMessagesAsync>d__1281")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IResourceOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_GetAPIResourcesWithHttpMessagesAsync>d__1282`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-GetAPIResourcesWithHttpMessagesAsync>d__1283")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IResourceV1alpha3Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteCollectionDeviceClassWithHttpMessagesAsync>d__1284`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteCollectionDeviceClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteCollectionDeviceClassWithHttpMessagesAsync>d__1285")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IResourceV1alpha3Operations.DeleteCollectionDeviceClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListDeviceClassWithHttpMessagesAsync>d__1286`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListDeviceClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListDeviceClassWithHttpMessagesAsync>d__1287")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3DeviceClassList>> k8s.IResourceV1alpha3Operations.ListDeviceClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_CreateDeviceClassWithHttpMessagesAsync>d__1288`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_CreateDeviceClassWithHttpMessagesAsync(V1alpha3DeviceClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-CreateDeviceClassWithHttpMessagesAsync>d__1289")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> k8s.IResourceV1alpha3Operations.CreateDeviceClassWithHttpMessagesAsync(V1alpha3DeviceClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteDeviceClassWithHttpMessagesAsync>d__1290`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteDeviceClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteDeviceClassWithHttpMessagesAsync>d__1291")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> k8s.IResourceV1alpha3Operations.DeleteDeviceClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReadDeviceClassWithHttpMessagesAsync>d__1292`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReadDeviceClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReadDeviceClassWithHttpMessagesAsync>d__1293")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> k8s.IResourceV1alpha3Operations.ReadDeviceClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_PatchDeviceClassWithHttpMessagesAsync>d__1294`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_PatchDeviceClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-PatchDeviceClassWithHttpMessagesAsync>d__1295")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> k8s.IResourceV1alpha3Operations.PatchDeviceClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReplaceDeviceClassWithHttpMessagesAsync>d__1296`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReplaceDeviceClassWithHttpMessagesAsync(V1alpha3DeviceClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReplaceDeviceClassWithHttpMessagesAsync>d__1297")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> k8s.IResourceV1alpha3Operations.ReplaceDeviceClassWithHttpMessagesAsync(V1alpha3DeviceClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteCollectionNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1298`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteCollectionNamespacedPodSchedulingContextWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteCollectionNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1299")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IResourceV1alpha3Operations.DeleteCollectionNamespacedPodSchedulingContextWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1300`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListNamespacedPodSchedulingContextWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1301")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContextList>> k8s.IResourceV1alpha3Operations.ListNamespacedPodSchedulingContextWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_CreateNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1302`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_CreateNamespacedPodSchedulingContextWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-CreateNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1303")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.CreateNamespacedPodSchedulingContextWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1304`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteNamespacedPodSchedulingContextWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1305")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.DeleteNamespacedPodSchedulingContextWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReadNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1306`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReadNamespacedPodSchedulingContextWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReadNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1307")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.ReadNamespacedPodSchedulingContextWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_PatchNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1308`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_PatchNamespacedPodSchedulingContextWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-PatchNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1309")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.PatchNamespacedPodSchedulingContextWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReplaceNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1310`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReplaceNamespacedPodSchedulingContextWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReplaceNamespacedPodSchedulingContextWithHttpMessagesAsync>d__1311")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.ReplaceNamespacedPodSchedulingContextWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReadNamespacedPodSchedulingContextStatusWithHttpMessagesAsync>d__1312`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReadNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReadNamespacedPodSchedulingContextStatusWithHttpMessagesAsync>d__1313")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.ReadNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_PatchNamespacedPodSchedulingContextStatusWithHttpMessagesAsync>d__1314`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_PatchNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-PatchNamespacedPodSchedulingContextStatusWithHttpMessagesAsync>d__1315")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.PatchNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReplaceNamespacedPodSchedulingContextStatusWithHttpMessagesAsync>d__1316`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReplaceNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReplaceNamespacedPodSchedulingContextStatusWithHttpMessagesAsync>d__1317")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> k8s.IResourceV1alpha3Operations.ReplaceNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteCollectionNamespacedResourceClaimWithHttpMessagesAsync>d__1318`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteCollectionNamespacedResourceClaimWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteCollectionNamespacedResourceClaimWithHttpMessagesAsync>d__1319")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IResourceV1alpha3Operations.DeleteCollectionNamespacedResourceClaimWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListNamespacedResourceClaimWithHttpMessagesAsync>d__1320`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListNamespacedResourceClaimWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListNamespacedResourceClaimWithHttpMessagesAsync>d__1321")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimList>> k8s.IResourceV1alpha3Operations.ListNamespacedResourceClaimWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_CreateNamespacedResourceClaimWithHttpMessagesAsync>d__1322`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_CreateNamespacedResourceClaimWithHttpMessagesAsync(V1alpha3ResourceClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-CreateNamespacedResourceClaimWithHttpMessagesAsync>d__1323")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.CreateNamespacedResourceClaimWithHttpMessagesAsync(V1alpha3ResourceClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteNamespacedResourceClaimWithHttpMessagesAsync>d__1324`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteNamespacedResourceClaimWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteNamespacedResourceClaimWithHttpMessagesAsync>d__1325")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.DeleteNamespacedResourceClaimWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReadNamespacedResourceClaimWithHttpMessagesAsync>d__1326`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReadNamespacedResourceClaimWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReadNamespacedResourceClaimWithHttpMessagesAsync>d__1327")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.ReadNamespacedResourceClaimWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_PatchNamespacedResourceClaimWithHttpMessagesAsync>d__1328`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_PatchNamespacedResourceClaimWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-PatchNamespacedResourceClaimWithHttpMessagesAsync>d__1329")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.PatchNamespacedResourceClaimWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReplaceNamespacedResourceClaimWithHttpMessagesAsync>d__1330`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReplaceNamespacedResourceClaimWithHttpMessagesAsync(V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReplaceNamespacedResourceClaimWithHttpMessagesAsync>d__1331")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.ReplaceNamespacedResourceClaimWithHttpMessagesAsync(V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReadNamespacedResourceClaimStatusWithHttpMessagesAsync>d__1332`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReadNamespacedResourceClaimStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReadNamespacedResourceClaimStatusWithHttpMessagesAsync>d__1333")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.ReadNamespacedResourceClaimStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_PatchNamespacedResourceClaimStatusWithHttpMessagesAsync>d__1334`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_PatchNamespacedResourceClaimStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-PatchNamespacedResourceClaimStatusWithHttpMessagesAsync>d__1335")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.PatchNamespacedResourceClaimStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReplaceNamespacedResourceClaimStatusWithHttpMessagesAsync>d__1336`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReplaceNamespacedResourceClaimStatusWithHttpMessagesAsync(V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReplaceNamespacedResourceClaimStatusWithHttpMessagesAsync>d__1337")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> k8s.IResourceV1alpha3Operations.ReplaceNamespacedResourceClaimStatusWithHttpMessagesAsync(V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteCollectionNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1338`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteCollectionNamespacedResourceClaimTemplateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteCollectionNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1339")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IResourceV1alpha3Operations.DeleteCollectionNamespacedResourceClaimTemplateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1340`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListNamespacedResourceClaimTemplateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1341")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplateList>> k8s.IResourceV1alpha3Operations.ListNamespacedResourceClaimTemplateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_CreateNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1342`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_CreateNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1alpha3ResourceClaimTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-CreateNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1343")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> k8s.IResourceV1alpha3Operations.CreateNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1alpha3ResourceClaimTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1344`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteNamespacedResourceClaimTemplateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1345")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> k8s.IResourceV1alpha3Operations.DeleteNamespacedResourceClaimTemplateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReadNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1346`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReadNamespacedResourceClaimTemplateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReadNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1347")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> k8s.IResourceV1alpha3Operations.ReadNamespacedResourceClaimTemplateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_PatchNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1348`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_PatchNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-PatchNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1349")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> k8s.IResourceV1alpha3Operations.PatchNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReplaceNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1350`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReplaceNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1alpha3ResourceClaimTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReplaceNamespacedResourceClaimTemplateWithHttpMessagesAsync>d__1351")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> k8s.IResourceV1alpha3Operations.ReplaceNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1alpha3ResourceClaimTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListPodSchedulingContextForAllNamespacesWithHttpMessagesAsync>d__1352`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListPodSchedulingContextForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListPodSchedulingContextForAllNamespacesWithHttpMessagesAsync>d__1353")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContextList>> k8s.IResourceV1alpha3Operations.ListPodSchedulingContextForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListResourceClaimForAllNamespacesWithHttpMessagesAsync>d__1354`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListResourceClaimForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListResourceClaimForAllNamespacesWithHttpMessagesAsync>d__1355")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimList>> k8s.IResourceV1alpha3Operations.ListResourceClaimForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListResourceClaimTemplateForAllNamespacesWithHttpMessagesAsync>d__1356`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListResourceClaimTemplateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListResourceClaimTemplateForAllNamespacesWithHttpMessagesAsync>d__1357")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplateList>> k8s.IResourceV1alpha3Operations.ListResourceClaimTemplateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteCollectionResourceSliceWithHttpMessagesAsync>d__1358`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteCollectionResourceSliceWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteCollectionResourceSliceWithHttpMessagesAsync>d__1359")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IResourceV1alpha3Operations.DeleteCollectionResourceSliceWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ListResourceSliceWithHttpMessagesAsync>d__1360`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ListResourceSliceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ListResourceSliceWithHttpMessagesAsync>d__1361")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceSliceList>> k8s.IResourceV1alpha3Operations.ListResourceSliceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_CreateResourceSliceWithHttpMessagesAsync>d__1362`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_CreateResourceSliceWithHttpMessagesAsync(V1alpha3ResourceSlice body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-CreateResourceSliceWithHttpMessagesAsync>d__1363")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> k8s.IResourceV1alpha3Operations.CreateResourceSliceWithHttpMessagesAsync(V1alpha3ResourceSlice body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_DeleteResourceSliceWithHttpMessagesAsync>d__1364`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_DeleteResourceSliceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-DeleteResourceSliceWithHttpMessagesAsync>d__1365")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> k8s.IResourceV1alpha3Operations.DeleteResourceSliceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReadResourceSliceWithHttpMessagesAsync>d__1366`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReadResourceSliceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReadResourceSliceWithHttpMessagesAsync>d__1367")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> k8s.IResourceV1alpha3Operations.ReadResourceSliceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_PatchResourceSliceWithHttpMessagesAsync>d__1368`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_PatchResourceSliceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-PatchResourceSliceWithHttpMessagesAsync>d__1369")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> k8s.IResourceV1alpha3Operations.PatchResourceSliceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IResourceV1alpha3Operations_ReplaceResourceSliceWithHttpMessagesAsync>d__1370`1")]
private Task`1<HttpOperationResponse`1<T>> IResourceV1alpha3Operations_ReplaceResourceSliceWithHttpMessagesAsync(V1alpha3ResourceSlice body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IResourceV1alpha3Operations-ReplaceResourceSliceWithHttpMessagesAsync>d__1371")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> k8s.IResourceV1alpha3Operations.ReplaceResourceSliceWithHttpMessagesAsync(V1alpha3ResourceSlice body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingOperations_GetAPIGroupWithHttpMessagesAsync>d__1372`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingOperations-GetAPIGroupWithHttpMessagesAsync>d__1373")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.ISchedulingOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1374`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1375")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.ISchedulingV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_DeleteCollectionPriorityClassWithHttpMessagesAsync>d__1376`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_DeleteCollectionPriorityClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-DeleteCollectionPriorityClassWithHttpMessagesAsync>d__1377")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ISchedulingV1Operations.DeleteCollectionPriorityClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_ListPriorityClassWithHttpMessagesAsync>d__1378`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_ListPriorityClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-ListPriorityClassWithHttpMessagesAsync>d__1379")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityClassList>> k8s.ISchedulingV1Operations.ListPriorityClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_CreatePriorityClassWithHttpMessagesAsync>d__1380`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_CreatePriorityClassWithHttpMessagesAsync(V1PriorityClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-CreatePriorityClassWithHttpMessagesAsync>d__1381")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityClass>> k8s.ISchedulingV1Operations.CreatePriorityClassWithHttpMessagesAsync(V1PriorityClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_DeletePriorityClassWithHttpMessagesAsync>d__1382`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_DeletePriorityClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-DeletePriorityClassWithHttpMessagesAsync>d__1383")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.ISchedulingV1Operations.DeletePriorityClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_ReadPriorityClassWithHttpMessagesAsync>d__1384`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_ReadPriorityClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-ReadPriorityClassWithHttpMessagesAsync>d__1385")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityClass>> k8s.ISchedulingV1Operations.ReadPriorityClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_PatchPriorityClassWithHttpMessagesAsync>d__1386`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_PatchPriorityClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-PatchPriorityClassWithHttpMessagesAsync>d__1387")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityClass>> k8s.ISchedulingV1Operations.PatchPriorityClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ISchedulingV1Operations_ReplacePriorityClassWithHttpMessagesAsync>d__1388`1")]
private Task`1<HttpOperationResponse`1<T>> ISchedulingV1Operations_ReplacePriorityClassWithHttpMessagesAsync(V1PriorityClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ISchedulingV1Operations-ReplacePriorityClassWithHttpMessagesAsync>d__1389")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1PriorityClass>> k8s.ISchedulingV1Operations.ReplacePriorityClassWithHttpMessagesAsync(V1PriorityClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageOperations_GetAPIGroupWithHttpMessagesAsync>d__1390`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageOperations-GetAPIGroupWithHttpMessagesAsync>d__1391")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IStorageOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1392`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1393")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IStorageV1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteCollectionCSIDriverWithHttpMessagesAsync>d__1394`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteCollectionCSIDriverWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteCollectionCSIDriverWithHttpMessagesAsync>d__1395")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1Operations.DeleteCollectionCSIDriverWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ListCSIDriverWithHttpMessagesAsync>d__1396`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ListCSIDriverWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ListCSIDriverWithHttpMessagesAsync>d__1397")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIDriverList>> k8s.IStorageV1Operations.ListCSIDriverWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_CreateCSIDriverWithHttpMessagesAsync>d__1398`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_CreateCSIDriverWithHttpMessagesAsync(V1CSIDriver body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-CreateCSIDriverWithHttpMessagesAsync>d__1399")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIDriver>> k8s.IStorageV1Operations.CreateCSIDriverWithHttpMessagesAsync(V1CSIDriver body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteCSIDriverWithHttpMessagesAsync>d__1400`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteCSIDriverWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteCSIDriverWithHttpMessagesAsync>d__1401")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIDriver>> k8s.IStorageV1Operations.DeleteCSIDriverWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReadCSIDriverWithHttpMessagesAsync>d__1402`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReadCSIDriverWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReadCSIDriverWithHttpMessagesAsync>d__1403")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIDriver>> k8s.IStorageV1Operations.ReadCSIDriverWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_PatchCSIDriverWithHttpMessagesAsync>d__1404`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_PatchCSIDriverWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-PatchCSIDriverWithHttpMessagesAsync>d__1405")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIDriver>> k8s.IStorageV1Operations.PatchCSIDriverWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReplaceCSIDriverWithHttpMessagesAsync>d__1406`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReplaceCSIDriverWithHttpMessagesAsync(V1CSIDriver body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReplaceCSIDriverWithHttpMessagesAsync>d__1407")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIDriver>> k8s.IStorageV1Operations.ReplaceCSIDriverWithHttpMessagesAsync(V1CSIDriver body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteCollectionCSINodeWithHttpMessagesAsync>d__1408`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteCollectionCSINodeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteCollectionCSINodeWithHttpMessagesAsync>d__1409")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1Operations.DeleteCollectionCSINodeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ListCSINodeWithHttpMessagesAsync>d__1410`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ListCSINodeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ListCSINodeWithHttpMessagesAsync>d__1411")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSINodeList>> k8s.IStorageV1Operations.ListCSINodeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_CreateCSINodeWithHttpMessagesAsync>d__1412`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_CreateCSINodeWithHttpMessagesAsync(V1CSINode body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-CreateCSINodeWithHttpMessagesAsync>d__1413")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSINode>> k8s.IStorageV1Operations.CreateCSINodeWithHttpMessagesAsync(V1CSINode body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteCSINodeWithHttpMessagesAsync>d__1414`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteCSINodeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteCSINodeWithHttpMessagesAsync>d__1415")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSINode>> k8s.IStorageV1Operations.DeleteCSINodeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReadCSINodeWithHttpMessagesAsync>d__1416`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReadCSINodeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReadCSINodeWithHttpMessagesAsync>d__1417")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSINode>> k8s.IStorageV1Operations.ReadCSINodeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_PatchCSINodeWithHttpMessagesAsync>d__1418`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_PatchCSINodeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-PatchCSINodeWithHttpMessagesAsync>d__1419")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSINode>> k8s.IStorageV1Operations.PatchCSINodeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReplaceCSINodeWithHttpMessagesAsync>d__1420`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReplaceCSINodeWithHttpMessagesAsync(V1CSINode body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReplaceCSINodeWithHttpMessagesAsync>d__1421")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSINode>> k8s.IStorageV1Operations.ReplaceCSINodeWithHttpMessagesAsync(V1CSINode body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ListCSIStorageCapacityForAllNamespacesWithHttpMessagesAsync>d__1422`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ListCSIStorageCapacityForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ListCSIStorageCapacityForAllNamespacesWithHttpMessagesAsync>d__1423")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIStorageCapacityList>> k8s.IStorageV1Operations.ListCSIStorageCapacityForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteCollectionNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1424`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteCollectionNamespacedCSIStorageCapacityWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteCollectionNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1425")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1Operations.DeleteCollectionNamespacedCSIStorageCapacityWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ListNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1426`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ListNamespacedCSIStorageCapacityWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ListNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1427")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIStorageCapacityList>> k8s.IStorageV1Operations.ListNamespacedCSIStorageCapacityWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_CreateNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1428`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_CreateNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1CSIStorageCapacity body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-CreateNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1429")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> k8s.IStorageV1Operations.CreateNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1CSIStorageCapacity body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1430`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteNamespacedCSIStorageCapacityWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1431")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1Operations.DeleteNamespacedCSIStorageCapacityWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReadNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1432`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReadNamespacedCSIStorageCapacityWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReadNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1433")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> k8s.IStorageV1Operations.ReadNamespacedCSIStorageCapacityWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_PatchNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1434`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_PatchNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-PatchNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1435")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> k8s.IStorageV1Operations.PatchNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReplaceNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1436`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReplaceNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1CSIStorageCapacity body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReplaceNamespacedCSIStorageCapacityWithHttpMessagesAsync>d__1437")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> k8s.IStorageV1Operations.ReplaceNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1CSIStorageCapacity body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteCollectionStorageClassWithHttpMessagesAsync>d__1438`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteCollectionStorageClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteCollectionStorageClassWithHttpMessagesAsync>d__1439")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1Operations.DeleteCollectionStorageClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ListStorageClassWithHttpMessagesAsync>d__1440`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ListStorageClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ListStorageClassWithHttpMessagesAsync>d__1441")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StorageClassList>> k8s.IStorageV1Operations.ListStorageClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_CreateStorageClassWithHttpMessagesAsync>d__1442`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_CreateStorageClassWithHttpMessagesAsync(V1StorageClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-CreateStorageClassWithHttpMessagesAsync>d__1443")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StorageClass>> k8s.IStorageV1Operations.CreateStorageClassWithHttpMessagesAsync(V1StorageClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteStorageClassWithHttpMessagesAsync>d__1444`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteStorageClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteStorageClassWithHttpMessagesAsync>d__1445")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StorageClass>> k8s.IStorageV1Operations.DeleteStorageClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReadStorageClassWithHttpMessagesAsync>d__1446`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReadStorageClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReadStorageClassWithHttpMessagesAsync>d__1447")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StorageClass>> k8s.IStorageV1Operations.ReadStorageClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_PatchStorageClassWithHttpMessagesAsync>d__1448`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_PatchStorageClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-PatchStorageClassWithHttpMessagesAsync>d__1449")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StorageClass>> k8s.IStorageV1Operations.PatchStorageClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReplaceStorageClassWithHttpMessagesAsync>d__1450`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReplaceStorageClassWithHttpMessagesAsync(V1StorageClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReplaceStorageClassWithHttpMessagesAsync>d__1451")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1StorageClass>> k8s.IStorageV1Operations.ReplaceStorageClassWithHttpMessagesAsync(V1StorageClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteCollectionVolumeAttachmentWithHttpMessagesAsync>d__1452`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteCollectionVolumeAttachmentWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteCollectionVolumeAttachmentWithHttpMessagesAsync>d__1453")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1Operations.DeleteCollectionVolumeAttachmentWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ListVolumeAttachmentWithHttpMessagesAsync>d__1454`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ListVolumeAttachmentWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ListVolumeAttachmentWithHttpMessagesAsync>d__1455")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachmentList>> k8s.IStorageV1Operations.ListVolumeAttachmentWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_CreateVolumeAttachmentWithHttpMessagesAsync>d__1456`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_CreateVolumeAttachmentWithHttpMessagesAsync(V1VolumeAttachment body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-CreateVolumeAttachmentWithHttpMessagesAsync>d__1457")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.CreateVolumeAttachmentWithHttpMessagesAsync(V1VolumeAttachment body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_DeleteVolumeAttachmentWithHttpMessagesAsync>d__1458`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_DeleteVolumeAttachmentWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-DeleteVolumeAttachmentWithHttpMessagesAsync>d__1459")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.DeleteVolumeAttachmentWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReadVolumeAttachmentWithHttpMessagesAsync>d__1460`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReadVolumeAttachmentWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReadVolumeAttachmentWithHttpMessagesAsync>d__1461")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.ReadVolumeAttachmentWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_PatchVolumeAttachmentWithHttpMessagesAsync>d__1462`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_PatchVolumeAttachmentWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-PatchVolumeAttachmentWithHttpMessagesAsync>d__1463")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.PatchVolumeAttachmentWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReplaceVolumeAttachmentWithHttpMessagesAsync>d__1464`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReplaceVolumeAttachmentWithHttpMessagesAsync(V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReplaceVolumeAttachmentWithHttpMessagesAsync>d__1465")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.ReplaceVolumeAttachmentWithHttpMessagesAsync(V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReadVolumeAttachmentStatusWithHttpMessagesAsync>d__1466`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReadVolumeAttachmentStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReadVolumeAttachmentStatusWithHttpMessagesAsync>d__1467")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.ReadVolumeAttachmentStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_PatchVolumeAttachmentStatusWithHttpMessagesAsync>d__1468`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_PatchVolumeAttachmentStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-PatchVolumeAttachmentStatusWithHttpMessagesAsync>d__1469")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.PatchVolumeAttachmentStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1Operations_ReplaceVolumeAttachmentStatusWithHttpMessagesAsync>d__1470`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1Operations_ReplaceVolumeAttachmentStatusWithHttpMessagesAsync(V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1Operations-ReplaceVolumeAttachmentStatusWithHttpMessagesAsync>d__1471")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1VolumeAttachment>> k8s.IStorageV1Operations.ReplaceVolumeAttachmentStatusWithHttpMessagesAsync(V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1472`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1473")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IStorageV1alpha1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync>d__1474`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync>d__1475")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1alpha1Operations.DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_ListVolumeAttributesClassWithHttpMessagesAsync>d__1476`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_ListVolumeAttributesClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-ListVolumeAttributesClassWithHttpMessagesAsync>d__1477")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClassList>> k8s.IStorageV1alpha1Operations.ListVolumeAttributesClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_CreateVolumeAttributesClassWithHttpMessagesAsync>d__1478`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_CreateVolumeAttributesClassWithHttpMessagesAsync(V1alpha1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-CreateVolumeAttributesClassWithHttpMessagesAsync>d__1479")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> k8s.IStorageV1alpha1Operations.CreateVolumeAttributesClassWithHttpMessagesAsync(V1alpha1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_DeleteVolumeAttributesClassWithHttpMessagesAsync>d__1480`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_DeleteVolumeAttributesClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-DeleteVolumeAttributesClassWithHttpMessagesAsync>d__1481")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> k8s.IStorageV1alpha1Operations.DeleteVolumeAttributesClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_ReadVolumeAttributesClassWithHttpMessagesAsync>d__1482`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_ReadVolumeAttributesClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-ReadVolumeAttributesClassWithHttpMessagesAsync>d__1483")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> k8s.IStorageV1alpha1Operations.ReadVolumeAttributesClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_PatchVolumeAttributesClassWithHttpMessagesAsync>d__1484`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_PatchVolumeAttributesClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-PatchVolumeAttributesClassWithHttpMessagesAsync>d__1485")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> k8s.IStorageV1alpha1Operations.PatchVolumeAttributesClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1alpha1Operations_ReplaceVolumeAttributesClassWithHttpMessagesAsync>d__1486`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1alpha1Operations_ReplaceVolumeAttributesClassWithHttpMessagesAsync(V1alpha1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1alpha1Operations-ReplaceVolumeAttributesClassWithHttpMessagesAsync>d__1487")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> k8s.IStorageV1alpha1Operations.ReplaceVolumeAttributesClassWithHttpMessagesAsync(V1alpha1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1488`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1489")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IStorageV1beta1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync>d__1490`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync>d__1491")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStorageV1beta1Operations.DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_ListVolumeAttributesClassWithHttpMessagesAsync>d__1492`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_ListVolumeAttributesClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-ListVolumeAttributesClassWithHttpMessagesAsync>d__1493")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClassList>> k8s.IStorageV1beta1Operations.ListVolumeAttributesClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_CreateVolumeAttributesClassWithHttpMessagesAsync>d__1494`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_CreateVolumeAttributesClassWithHttpMessagesAsync(V1beta1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-CreateVolumeAttributesClassWithHttpMessagesAsync>d__1495")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> k8s.IStorageV1beta1Operations.CreateVolumeAttributesClassWithHttpMessagesAsync(V1beta1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_DeleteVolumeAttributesClassWithHttpMessagesAsync>d__1496`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_DeleteVolumeAttributesClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-DeleteVolumeAttributesClassWithHttpMessagesAsync>d__1497")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> k8s.IStorageV1beta1Operations.DeleteVolumeAttributesClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_ReadVolumeAttributesClassWithHttpMessagesAsync>d__1498`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_ReadVolumeAttributesClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-ReadVolumeAttributesClassWithHttpMessagesAsync>d__1499")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> k8s.IStorageV1beta1Operations.ReadVolumeAttributesClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_PatchVolumeAttributesClassWithHttpMessagesAsync>d__1500`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_PatchVolumeAttributesClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-PatchVolumeAttributesClassWithHttpMessagesAsync>d__1501")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> k8s.IStorageV1beta1Operations.PatchVolumeAttributesClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStorageV1beta1Operations_ReplaceVolumeAttributesClassWithHttpMessagesAsync>d__1502`1")]
private Task`1<HttpOperationResponse`1<T>> IStorageV1beta1Operations_ReplaceVolumeAttributesClassWithHttpMessagesAsync(V1beta1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStorageV1beta1Operations-ReplaceVolumeAttributesClassWithHttpMessagesAsync>d__1503")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> k8s.IStorageV1beta1Operations.ReplaceVolumeAttributesClassWithHttpMessagesAsync(V1beta1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationOperations_GetAPIGroupWithHttpMessagesAsync>d__1504`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationOperations_GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationOperations-GetAPIGroupWithHttpMessagesAsync>d__1505")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIGroup>> k8s.IStoragemigrationOperations.GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync>d__1506`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-GetAPIResourcesWithHttpMessagesAsync>d__1507")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.IStoragemigrationV1alpha1Operations.GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_DeleteCollectionStorageVersionMigrationWithHttpMessagesAsync>d__1508`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_DeleteCollectionStorageVersionMigrationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-DeleteCollectionStorageVersionMigrationWithHttpMessagesAsync>d__1509")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStoragemigrationV1alpha1Operations.DeleteCollectionStorageVersionMigrationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_ListStorageVersionMigrationWithHttpMessagesAsync>d__1510`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_ListStorageVersionMigrationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-ListStorageVersionMigrationWithHttpMessagesAsync>d__1511")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigrationList>> k8s.IStoragemigrationV1alpha1Operations.ListStorageVersionMigrationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_CreateStorageVersionMigrationWithHttpMessagesAsync>d__1512`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_CreateStorageVersionMigrationWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-CreateStorageVersionMigrationWithHttpMessagesAsync>d__1513")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> k8s.IStoragemigrationV1alpha1Operations.CreateStorageVersionMigrationWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_DeleteStorageVersionMigrationWithHttpMessagesAsync>d__1514`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_DeleteStorageVersionMigrationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-DeleteStorageVersionMigrationWithHttpMessagesAsync>d__1515")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1Status>> k8s.IStoragemigrationV1alpha1Operations.DeleteStorageVersionMigrationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_ReadStorageVersionMigrationWithHttpMessagesAsync>d__1516`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_ReadStorageVersionMigrationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-ReadStorageVersionMigrationWithHttpMessagesAsync>d__1517")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> k8s.IStoragemigrationV1alpha1Operations.ReadStorageVersionMigrationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_PatchStorageVersionMigrationWithHttpMessagesAsync>d__1518`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_PatchStorageVersionMigrationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-PatchStorageVersionMigrationWithHttpMessagesAsync>d__1519")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> k8s.IStoragemigrationV1alpha1Operations.PatchStorageVersionMigrationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_ReplaceStorageVersionMigrationWithHttpMessagesAsync>d__1520`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_ReplaceStorageVersionMigrationWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-ReplaceStorageVersionMigrationWithHttpMessagesAsync>d__1521")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> k8s.IStoragemigrationV1alpha1Operations.ReplaceStorageVersionMigrationWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_ReadStorageVersionMigrationStatusWithHttpMessagesAsync>d__1522`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_ReadStorageVersionMigrationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-ReadStorageVersionMigrationStatusWithHttpMessagesAsync>d__1523")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> k8s.IStoragemigrationV1alpha1Operations.ReadStorageVersionMigrationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_PatchStorageVersionMigrationStatusWithHttpMessagesAsync>d__1524`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_PatchStorageVersionMigrationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-PatchStorageVersionMigrationStatusWithHttpMessagesAsync>d__1525")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> k8s.IStoragemigrationV1alpha1Operations.PatchStorageVersionMigrationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IStoragemigrationV1alpha1Operations_ReplaceStorageVersionMigrationStatusWithHttpMessagesAsync>d__1526`1")]
private Task`1<HttpOperationResponse`1<T>> IStoragemigrationV1alpha1Operations_ReplaceStorageVersionMigrationStatusWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IStoragemigrationV1alpha1Operations-ReplaceStorageVersionMigrationStatusWithHttpMessagesAsync>d__1527")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> k8s.IStoragemigrationV1alpha1Operations.ReplaceStorageVersionMigrationStatusWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ILogsOperations_LogFileListHandlerWithHttpMessagesAsync>d__1528")]
private Task`1<HttpOperationResponse> ILogsOperations_LogFileListHandlerWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ILogsOperations-LogFileListHandlerWithHttpMessagesAsync>d__1529")]
private sealed virtual override Task`1<HttpOperationResponse> k8s.ILogsOperations.LogFileListHandlerWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ILogsOperations_LogFileHandlerWithHttpMessagesAsync>d__1530")]
private Task`1<HttpOperationResponse> ILogsOperations_LogFileHandlerWithHttpMessagesAsync(string logpath, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ILogsOperations-LogFileHandlerWithHttpMessagesAsync>d__1531")]
private sealed virtual override Task`1<HttpOperationResponse> k8s.ILogsOperations.LogFileHandlerWithHttpMessagesAsync(string logpath, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IVersionOperations_GetCodeWithHttpMessagesAsync>d__1532`1")]
private Task`1<HttpOperationResponse`1<T>> IVersionOperations_GetCodeWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IVersionOperations-GetCodeWithHttpMessagesAsync>d__1533")]
private sealed virtual override Task`1<HttpOperationResponse`1<VersionInfo>> k8s.IVersionOperations.GetCodeWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_GetAPIResourcesWithHttpMessagesAsync>d__1534`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_GetAPIResourcesWithHttpMessagesAsync(string group, string version, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetAPIResourcesWithHttpMessagesAsync>d__1535")]
private sealed virtual override Task`1<HttpOperationResponse`1<V1APIResourceList>> k8s.ICustomObjectsOperations.GetAPIResourcesWithHttpMessagesAsync(string group, string version, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ListClusterCustomObjectWithHttpMessagesAsync>d__1536`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ListClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ListClusterCustomObjectWithHttpMessagesAsync>d__1537")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ListClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ListClusterCustomObjectWithHttpMessagesAsync>d__1538`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ListClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_CreateClusterCustomObjectWithHttpMessagesAsync>d__1539`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_CreateClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-CreateClusterCustomObjectWithHttpMessagesAsync>d__1540")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.CreateClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-CreateClusterCustomObjectWithHttpMessagesAsync>d__1541`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.CreateClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_DeleteCollectionClusterCustomObjectWithHttpMessagesAsync>d__1542`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_DeleteCollectionClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteCollectionClusterCustomObjectWithHttpMessagesAsync>d__1543")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.DeleteCollectionClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteCollectionClusterCustomObjectWithHttpMessagesAsync>d__1544`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.DeleteCollectionClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ListNamespacedCustomObjectWithHttpMessagesAsync>d__1545`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ListNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ListNamespacedCustomObjectWithHttpMessagesAsync>d__1546")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ListNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ListNamespacedCustomObjectWithHttpMessagesAsync>d__1547`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ListNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_CreateNamespacedCustomObjectWithHttpMessagesAsync>d__1548`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_CreateNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-CreateNamespacedCustomObjectWithHttpMessagesAsync>d__1549")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.CreateNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-CreateNamespacedCustomObjectWithHttpMessagesAsync>d__1550`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.CreateNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync>d__1551`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync>d__1552")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync>d__1553`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_GetClusterCustomObjectWithHttpMessagesAsync>d__1554`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_GetClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetClusterCustomObjectWithHttpMessagesAsync>d__1555")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.GetClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetClusterCustomObjectWithHttpMessagesAsync>d__1556`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.GetClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_DeleteClusterCustomObjectWithHttpMessagesAsync>d__1557`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_DeleteClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteClusterCustomObjectWithHttpMessagesAsync>d__1558")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.DeleteClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteClusterCustomObjectWithHttpMessagesAsync>d__1559`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.DeleteClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_PatchClusterCustomObjectWithHttpMessagesAsync>d__1560`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_PatchClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchClusterCustomObjectWithHttpMessagesAsync>d__1561")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.PatchClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchClusterCustomObjectWithHttpMessagesAsync>d__1562`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.PatchClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ReplaceClusterCustomObjectWithHttpMessagesAsync>d__1563`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ReplaceClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceClusterCustomObjectWithHttpMessagesAsync>d__1564")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ReplaceClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceClusterCustomObjectWithHttpMessagesAsync>d__1565`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ReplaceClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_GetClusterCustomObjectStatusWithHttpMessagesAsync>d__1566`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_GetClusterCustomObjectStatusWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetClusterCustomObjectStatusWithHttpMessagesAsync>d__1567")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.GetClusterCustomObjectStatusWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetClusterCustomObjectStatusWithHttpMessagesAsync>d__1568`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.GetClusterCustomObjectStatusWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ReplaceClusterCustomObjectStatusWithHttpMessagesAsync>d__1569`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ReplaceClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceClusterCustomObjectStatusWithHttpMessagesAsync>d__1570")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ReplaceClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceClusterCustomObjectStatusWithHttpMessagesAsync>d__1571`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ReplaceClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_PatchClusterCustomObjectStatusWithHttpMessagesAsync>d__1572`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_PatchClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchClusterCustomObjectStatusWithHttpMessagesAsync>d__1573")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.PatchClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchClusterCustomObjectStatusWithHttpMessagesAsync>d__1574`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.PatchClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_GetClusterCustomObjectScaleWithHttpMessagesAsync>d__1575`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_GetClusterCustomObjectScaleWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetClusterCustomObjectScaleWithHttpMessagesAsync>d__1576")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.GetClusterCustomObjectScaleWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetClusterCustomObjectScaleWithHttpMessagesAsync>d__1577`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.GetClusterCustomObjectScaleWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ReplaceClusterCustomObjectScaleWithHttpMessagesAsync>d__1578`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ReplaceClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceClusterCustomObjectScaleWithHttpMessagesAsync>d__1579")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ReplaceClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceClusterCustomObjectScaleWithHttpMessagesAsync>d__1580`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ReplaceClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_PatchClusterCustomObjectScaleWithHttpMessagesAsync>d__1581`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_PatchClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchClusterCustomObjectScaleWithHttpMessagesAsync>d__1582")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.PatchClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchClusterCustomObjectScaleWithHttpMessagesAsync>d__1583`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.PatchClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_GetNamespacedCustomObjectWithHttpMessagesAsync>d__1584`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_GetNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetNamespacedCustomObjectWithHttpMessagesAsync>d__1585")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.GetNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetNamespacedCustomObjectWithHttpMessagesAsync>d__1586`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.GetNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_DeleteNamespacedCustomObjectWithHttpMessagesAsync>d__1587`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_DeleteNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteNamespacedCustomObjectWithHttpMessagesAsync>d__1588")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.DeleteNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-DeleteNamespacedCustomObjectWithHttpMessagesAsync>d__1589`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.DeleteNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_PatchNamespacedCustomObjectWithHttpMessagesAsync>d__1590`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_PatchNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchNamespacedCustomObjectWithHttpMessagesAsync>d__1591")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.PatchNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchNamespacedCustomObjectWithHttpMessagesAsync>d__1592`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.PatchNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ReplaceNamespacedCustomObjectWithHttpMessagesAsync>d__1593`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ReplaceNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceNamespacedCustomObjectWithHttpMessagesAsync>d__1594")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ReplaceNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceNamespacedCustomObjectWithHttpMessagesAsync>d__1595`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ReplaceNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_GetNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1596`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_GetNamespacedCustomObjectStatusWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1597")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.GetNamespacedCustomObjectStatusWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1598`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.GetNamespacedCustomObjectStatusWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1599`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1600")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1601`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_PatchNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1602`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_PatchNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1603")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.PatchNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchNamespacedCustomObjectStatusWithHttpMessagesAsync>d__1604`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.PatchNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_GetNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1605`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_GetNamespacedCustomObjectScaleWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1606")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.GetNamespacedCustomObjectScaleWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-GetNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1607`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.GetNamespacedCustomObjectScaleWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1608`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1609")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1610`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<ICustomObjectsOperations_PatchNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1611`1")]
private Task`1<HttpOperationResponse`1<T>> ICustomObjectsOperations_PatchNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1612")]
private sealed virtual override Task`1<HttpOperationResponse`1<object>> k8s.ICustomObjectsOperations.PatchNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-ICustomObjectsOperations-PatchNamespacedCustomObjectScaleWithHttpMessagesAsync>d__1613`1")]
private sealed virtual override Task`1<HttpOperationResponse`1<T>> k8s.ICustomObjectsOperations.PatchNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IWellKnownOperations_GetServiceAccountIssuerOpenIDConfigurationWithHttpMessagesAsync>d__1614`1")]
private Task`1<HttpOperationResponse`1<T>> IWellKnownOperations_GetServiceAccountIssuerOpenIDConfigurationWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IWellKnownOperations-GetServiceAccountIssuerOpenIDConfigurationWithHttpMessagesAsync>d__1615")]
private sealed virtual override Task`1<HttpOperationResponse`1<string>> k8s.IWellKnownOperations.GetServiceAccountIssuerOpenIDConfigurationWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<IOpenidOperations_GetServiceAccountIssuerOpenIDKeysetWithHttpMessagesAsync>d__1616`1")]
private Task`1<HttpOperationResponse`1<T>> IOpenidOperations_GetServiceAccountIssuerOpenIDKeysetWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.AbstractKubernetes/<k8s-IOpenidOperations-GetServiceAccountIssuerOpenIDKeysetWithHttpMessagesAsync>d__1617")]
private sealed virtual override Task`1<HttpOperationResponse`1<string>> k8s.IOpenidOperations.GetServiceAccountIssuerOpenIDKeysetWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public sealed virtual ICoreOperations get_Core();
    public sealed virtual ICoreV1Operations get_CoreV1();
    public sealed virtual IApisOperations get_Apis();
    public sealed virtual IAdmissionregistrationOperations get_Admissionregistration();
    public sealed virtual IAdmissionregistrationV1Operations get_AdmissionregistrationV1();
    public sealed virtual IAdmissionregistrationV1alpha1Operations get_AdmissionregistrationV1alpha1();
    public sealed virtual IAdmissionregistrationV1beta1Operations get_AdmissionregistrationV1beta1();
    public sealed virtual IApiextensionsOperations get_Apiextensions();
    public sealed virtual IApiextensionsV1Operations get_ApiextensionsV1();
    public sealed virtual IApiregistrationOperations get_Apiregistration();
    public sealed virtual IApiregistrationV1Operations get_ApiregistrationV1();
    public sealed virtual IAppsOperations get_Apps();
    public sealed virtual IAppsV1Operations get_AppsV1();
    public sealed virtual IAuthenticationOperations get_Authentication();
    public sealed virtual IAuthenticationV1Operations get_AuthenticationV1();
    public sealed virtual IAuthenticationV1alpha1Operations get_AuthenticationV1alpha1();
    public sealed virtual IAuthenticationV1beta1Operations get_AuthenticationV1beta1();
    public sealed virtual IAuthorizationOperations get_Authorization();
    public sealed virtual IAuthorizationV1Operations get_AuthorizationV1();
    public sealed virtual IAutoscalingOperations get_Autoscaling();
    public sealed virtual IAutoscalingV1Operations get_AutoscalingV1();
    public sealed virtual IAutoscalingV2Operations get_AutoscalingV2();
    public sealed virtual IBatchOperations get_Batch();
    public sealed virtual IBatchV1Operations get_BatchV1();
    public sealed virtual ICertificatesOperations get_Certificates();
    public sealed virtual ICertificatesV1Operations get_CertificatesV1();
    public sealed virtual ICertificatesV1alpha1Operations get_CertificatesV1alpha1();
    public sealed virtual ICoordinationOperations get_Coordination();
    public sealed virtual ICoordinationV1Operations get_CoordinationV1();
    public sealed virtual ICoordinationV1alpha1Operations get_CoordinationV1alpha1();
    public sealed virtual IDiscoveryOperations get_Discovery();
    public sealed virtual IDiscoveryV1Operations get_DiscoveryV1();
    public sealed virtual IEventsOperations get_Events();
    public sealed virtual IEventsV1Operations get_EventsV1();
    public sealed virtual IFlowcontrolApiserverOperations get_FlowcontrolApiserver();
    public sealed virtual IFlowcontrolApiserverV1Operations get_FlowcontrolApiserverV1();
    public sealed virtual IFlowcontrolApiserverV1beta3Operations get_FlowcontrolApiserverV1beta3();
    public sealed virtual IInternalApiserverOperations get_InternalApiserver();
    public sealed virtual IInternalApiserverV1alpha1Operations get_InternalApiserverV1alpha1();
    public sealed virtual INetworkingOperations get_Networking();
    public sealed virtual INetworkingV1Operations get_NetworkingV1();
    public sealed virtual INetworkingV1beta1Operations get_NetworkingV1beta1();
    public sealed virtual INodeOperations get_Node();
    public sealed virtual INodeV1Operations get_NodeV1();
    public sealed virtual IPolicyOperations get_Policy();
    public sealed virtual IPolicyV1Operations get_PolicyV1();
    public sealed virtual IRbacAuthorizationOperations get_RbacAuthorization();
    public sealed virtual IRbacAuthorizationV1Operations get_RbacAuthorizationV1();
    public sealed virtual IResourceOperations get_Resource();
    public sealed virtual IResourceV1alpha3Operations get_ResourceV1alpha3();
    public sealed virtual ISchedulingOperations get_Scheduling();
    public sealed virtual ISchedulingV1Operations get_SchedulingV1();
    public sealed virtual IStorageOperations get_Storage();
    public sealed virtual IStorageV1Operations get_StorageV1();
    public sealed virtual IStorageV1alpha1Operations get_StorageV1alpha1();
    public sealed virtual IStorageV1beta1Operations get_StorageV1beta1();
    public sealed virtual IStoragemigrationOperations get_Storagemigration();
    public sealed virtual IStoragemigrationV1alpha1Operations get_StoragemigrationV1alpha1();
    public sealed virtual ILogsOperations get_Logs();
    public sealed virtual IVersionOperations get_Version();
    public sealed virtual ICustomObjectsOperations get_CustomObjects();
    public sealed virtual IWellKnownOperations get_WellKnown();
    public sealed virtual IOpenidOperations get_Openid();
}
[ExtensionAttribute]
public static class k8s.AdmissionregistrationOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IAdmissionregistrationOperations operations);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IAdmissionregistrationOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AdmissionregistrationV1alpha1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAdmissionregistrationV1alpha1Operations operations);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAdmissionregistrationV1alpha1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionValidatingAdmissionPolicy(IAdmissionregistrationV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<DeleteCollectionValidatingAdmissionPolicyAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionValidatingAdmissionPolicyAsync(IAdmissionregistrationV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicyList ListValidatingAdmissionPolicy(IAdmissionregistrationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ListValidatingAdmissionPolicyAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicyList> ListValidatingAdmissionPolicyAsync(IAdmissionregistrationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicy CreateValidatingAdmissionPolicy(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<CreateValidatingAdmissionPolicyAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicy> CreateValidatingAdmissionPolicyAsync(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteValidatingAdmissionPolicy(IAdmissionregistrationV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<DeleteValidatingAdmissionPolicyAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteValidatingAdmissionPolicyAsync(IAdmissionregistrationV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicy ReadValidatingAdmissionPolicy(IAdmissionregistrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ReadValidatingAdmissionPolicyAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicy> ReadValidatingAdmissionPolicyAsync(IAdmissionregistrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicy PatchValidatingAdmissionPolicy(IAdmissionregistrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<PatchValidatingAdmissionPolicyAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicy> PatchValidatingAdmissionPolicyAsync(IAdmissionregistrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicy ReplaceValidatingAdmissionPolicy(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ReplaceValidatingAdmissionPolicyAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicy> ReplaceValidatingAdmissionPolicyAsync(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicy ReadValidatingAdmissionPolicyStatus(IAdmissionregistrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ReadValidatingAdmissionPolicyStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicy> ReadValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicy PatchValidatingAdmissionPolicyStatus(IAdmissionregistrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<PatchValidatingAdmissionPolicyStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicy> PatchValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicy ReplaceValidatingAdmissionPolicyStatus(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ReplaceValidatingAdmissionPolicyStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicy> ReplaceValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionValidatingAdmissionPolicyBinding(IAdmissionregistrationV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<DeleteCollectionValidatingAdmissionPolicyBindingAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicyBindingList ListValidatingAdmissionPolicyBinding(IAdmissionregistrationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ListValidatingAdmissionPolicyBindingAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicyBindingList> ListValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicyBinding CreateValidatingAdmissionPolicyBinding(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<CreateValidatingAdmissionPolicyBindingAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicyBinding> CreateValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteValidatingAdmissionPolicyBinding(IAdmissionregistrationV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<DeleteValidatingAdmissionPolicyBindingAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicyBinding ReadValidatingAdmissionPolicyBinding(IAdmissionregistrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ReadValidatingAdmissionPolicyBindingAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicyBinding> ReadValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicyBinding PatchValidatingAdmissionPolicyBinding(IAdmissionregistrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<PatchValidatingAdmissionPolicyBindingAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicyBinding> PatchValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ValidatingAdmissionPolicyBinding ReplaceValidatingAdmissionPolicyBinding(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1alpha1OperationsExtensions/<ReplaceValidatingAdmissionPolicyBindingAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1alpha1ValidatingAdmissionPolicyBinding> ReplaceValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1alpha1Operations operations, V1alpha1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AdmissionregistrationV1beta1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAdmissionregistrationV1beta1Operations operations);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAdmissionregistrationV1beta1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionValidatingAdmissionPolicy(IAdmissionregistrationV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<DeleteCollectionValidatingAdmissionPolicyAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionValidatingAdmissionPolicyAsync(IAdmissionregistrationV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicyList ListValidatingAdmissionPolicy(IAdmissionregistrationV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ListValidatingAdmissionPolicyAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicyList> ListValidatingAdmissionPolicyAsync(IAdmissionregistrationV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicy CreateValidatingAdmissionPolicy(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<CreateValidatingAdmissionPolicyAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicy> CreateValidatingAdmissionPolicyAsync(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteValidatingAdmissionPolicy(IAdmissionregistrationV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<DeleteValidatingAdmissionPolicyAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteValidatingAdmissionPolicyAsync(IAdmissionregistrationV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicy ReadValidatingAdmissionPolicy(IAdmissionregistrationV1beta1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ReadValidatingAdmissionPolicyAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicy> ReadValidatingAdmissionPolicyAsync(IAdmissionregistrationV1beta1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicy PatchValidatingAdmissionPolicy(IAdmissionregistrationV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<PatchValidatingAdmissionPolicyAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicy> PatchValidatingAdmissionPolicyAsync(IAdmissionregistrationV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicy ReplaceValidatingAdmissionPolicy(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ReplaceValidatingAdmissionPolicyAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicy> ReplaceValidatingAdmissionPolicyAsync(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicy ReadValidatingAdmissionPolicyStatus(IAdmissionregistrationV1beta1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ReadValidatingAdmissionPolicyStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicy> ReadValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1beta1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicy PatchValidatingAdmissionPolicyStatus(IAdmissionregistrationV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<PatchValidatingAdmissionPolicyStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicy> PatchValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicy ReplaceValidatingAdmissionPolicyStatus(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ReplaceValidatingAdmissionPolicyStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicy> ReplaceValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionValidatingAdmissionPolicyBinding(IAdmissionregistrationV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<DeleteCollectionValidatingAdmissionPolicyBindingAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicyBindingList ListValidatingAdmissionPolicyBinding(IAdmissionregistrationV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ListValidatingAdmissionPolicyBindingAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicyBindingList> ListValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicyBinding CreateValidatingAdmissionPolicyBinding(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<CreateValidatingAdmissionPolicyBindingAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicyBinding> CreateValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteValidatingAdmissionPolicyBinding(IAdmissionregistrationV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<DeleteValidatingAdmissionPolicyBindingAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicyBinding ReadValidatingAdmissionPolicyBinding(IAdmissionregistrationV1beta1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ReadValidatingAdmissionPolicyBindingAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicyBinding> ReadValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1beta1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicyBinding PatchValidatingAdmissionPolicyBinding(IAdmissionregistrationV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<PatchValidatingAdmissionPolicyBindingAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicyBinding> PatchValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ValidatingAdmissionPolicyBinding ReplaceValidatingAdmissionPolicyBinding(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1beta1OperationsExtensions/<ReplaceValidatingAdmissionPolicyBindingAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1beta1ValidatingAdmissionPolicyBinding> ReplaceValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1beta1Operations operations, V1beta1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AdmissionregistrationV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAdmissionregistrationV1Operations operations);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAdmissionregistrationV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionMutatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteCollectionMutatingWebhookConfigurationAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionMutatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1MutatingWebhookConfigurationList ListMutatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ListMutatingWebhookConfigurationAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1MutatingWebhookConfigurationList> ListMutatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1MutatingWebhookConfiguration CreateMutatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1MutatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<CreateMutatingWebhookConfigurationAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1MutatingWebhookConfiguration> CreateMutatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1MutatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteMutatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteMutatingWebhookConfigurationAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteMutatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1MutatingWebhookConfiguration ReadMutatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReadMutatingWebhookConfigurationAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1MutatingWebhookConfiguration> ReadMutatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1MutatingWebhookConfiguration PatchMutatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<PatchMutatingWebhookConfigurationAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1MutatingWebhookConfiguration> PatchMutatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1MutatingWebhookConfiguration ReplaceMutatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1MutatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReplaceMutatingWebhookConfigurationAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1MutatingWebhookConfiguration> ReplaceMutatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1MutatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionValidatingAdmissionPolicy(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteCollectionValidatingAdmissionPolicyAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionValidatingAdmissionPolicyAsync(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicyList ListValidatingAdmissionPolicy(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ListValidatingAdmissionPolicyAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicyList> ListValidatingAdmissionPolicyAsync(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicy CreateValidatingAdmissionPolicy(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<CreateValidatingAdmissionPolicyAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicy> CreateValidatingAdmissionPolicyAsync(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteValidatingAdmissionPolicy(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteValidatingAdmissionPolicyAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteValidatingAdmissionPolicyAsync(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicy ReadValidatingAdmissionPolicy(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReadValidatingAdmissionPolicyAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicy> ReadValidatingAdmissionPolicyAsync(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicy PatchValidatingAdmissionPolicy(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<PatchValidatingAdmissionPolicyAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicy> PatchValidatingAdmissionPolicyAsync(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicy ReplaceValidatingAdmissionPolicy(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReplaceValidatingAdmissionPolicyAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicy> ReplaceValidatingAdmissionPolicyAsync(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicy ReadValidatingAdmissionPolicyStatus(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReadValidatingAdmissionPolicyStatusAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicy> ReadValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicy PatchValidatingAdmissionPolicyStatus(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<PatchValidatingAdmissionPolicyStatusAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicy> PatchValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicy ReplaceValidatingAdmissionPolicyStatus(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReplaceValidatingAdmissionPolicyStatusAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicy> ReplaceValidatingAdmissionPolicyStatusAsync(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionValidatingAdmissionPolicyBinding(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteCollectionValidatingAdmissionPolicyBindingAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicyBindingList ListValidatingAdmissionPolicyBinding(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ListValidatingAdmissionPolicyBindingAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicyBindingList> ListValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicyBinding CreateValidatingAdmissionPolicyBinding(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<CreateValidatingAdmissionPolicyBindingAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicyBinding> CreateValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteValidatingAdmissionPolicyBinding(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteValidatingAdmissionPolicyBindingAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicyBinding ReadValidatingAdmissionPolicyBinding(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReadValidatingAdmissionPolicyBindingAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicyBinding> ReadValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicyBinding PatchValidatingAdmissionPolicyBinding(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<PatchValidatingAdmissionPolicyBindingAsync>d__47")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicyBinding> PatchValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingAdmissionPolicyBinding ReplaceValidatingAdmissionPolicyBinding(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReplaceValidatingAdmissionPolicyBindingAsync>d__49")]
[ExtensionAttribute]
public static Task`1<V1ValidatingAdmissionPolicyBinding> ReplaceValidatingAdmissionPolicyBindingAsync(IAdmissionregistrationV1Operations operations, V1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionValidatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteCollectionValidatingWebhookConfigurationAsync>d__51")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionValidatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingWebhookConfigurationList ListValidatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ListValidatingWebhookConfigurationAsync>d__53")]
[ExtensionAttribute]
public static Task`1<V1ValidatingWebhookConfigurationList> ListValidatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingWebhookConfiguration CreateValidatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1ValidatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<CreateValidatingWebhookConfigurationAsync>d__55")]
[ExtensionAttribute]
public static Task`1<V1ValidatingWebhookConfiguration> CreateValidatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1ValidatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteValidatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<DeleteValidatingWebhookConfigurationAsync>d__57")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteValidatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingWebhookConfiguration ReadValidatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReadValidatingWebhookConfigurationAsync>d__59")]
[ExtensionAttribute]
public static Task`1<V1ValidatingWebhookConfiguration> ReadValidatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingWebhookConfiguration PatchValidatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<PatchValidatingWebhookConfigurationAsync>d__61")]
[ExtensionAttribute]
public static Task`1<V1ValidatingWebhookConfiguration> PatchValidatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ValidatingWebhookConfiguration ReplaceValidatingWebhookConfiguration(IAdmissionregistrationV1Operations operations, V1ValidatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AdmissionregistrationV1OperationsExtensions/<ReplaceValidatingWebhookConfigurationAsync>d__63")]
[ExtensionAttribute]
public static Task`1<V1ValidatingWebhookConfiguration> ReplaceValidatingWebhookConfigurationAsync(IAdmissionregistrationV1Operations operations, V1ValidatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ApiextensionsOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IApiextensionsOperations operations);
    [AsyncStateMachineAttribute("k8s.ApiextensionsOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IApiextensionsOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ApiextensionsV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IApiextensionsV1Operations operations);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IApiextensionsV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionCustomResourceDefinition(IApiextensionsV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<DeleteCollectionCustomResourceDefinitionAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionCustomResourceDefinitionAsync(IApiextensionsV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinitionList ListCustomResourceDefinition(IApiextensionsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<ListCustomResourceDefinitionAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinitionList> ListCustomResourceDefinitionAsync(IApiextensionsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinition CreateCustomResourceDefinition(IApiextensionsV1Operations operations, V1CustomResourceDefinition body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<CreateCustomResourceDefinitionAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinition> CreateCustomResourceDefinitionAsync(IApiextensionsV1Operations operations, V1CustomResourceDefinition body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCustomResourceDefinition(IApiextensionsV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<DeleteCustomResourceDefinitionAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCustomResourceDefinitionAsync(IApiextensionsV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinition ReadCustomResourceDefinition(IApiextensionsV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<ReadCustomResourceDefinitionAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinition> ReadCustomResourceDefinitionAsync(IApiextensionsV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinition PatchCustomResourceDefinition(IApiextensionsV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<PatchCustomResourceDefinitionAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinition> PatchCustomResourceDefinitionAsync(IApiextensionsV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinition ReplaceCustomResourceDefinition(IApiextensionsV1Operations operations, V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<ReplaceCustomResourceDefinitionAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinition> ReplaceCustomResourceDefinitionAsync(IApiextensionsV1Operations operations, V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinition ReadCustomResourceDefinitionStatus(IApiextensionsV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<ReadCustomResourceDefinitionStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinition> ReadCustomResourceDefinitionStatusAsync(IApiextensionsV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinition PatchCustomResourceDefinitionStatus(IApiextensionsV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<PatchCustomResourceDefinitionStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinition> PatchCustomResourceDefinitionStatusAsync(IApiextensionsV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CustomResourceDefinition ReplaceCustomResourceDefinitionStatus(IApiextensionsV1Operations operations, V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiextensionsV1OperationsExtensions/<ReplaceCustomResourceDefinitionStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1CustomResourceDefinition> ReplaceCustomResourceDefinitionStatusAsync(IApiextensionsV1Operations operations, V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ApiregistrationOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IApiregistrationOperations operations);
    [AsyncStateMachineAttribute("k8s.ApiregistrationOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IApiregistrationOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ApiregistrationV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IApiregistrationV1Operations operations);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IApiregistrationV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionAPIService(IApiregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<DeleteCollectionAPIServiceAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionAPIServiceAsync(IApiregistrationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIServiceList ListAPIService(IApiregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<ListAPIServiceAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1APIServiceList> ListAPIServiceAsync(IApiregistrationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIService CreateAPIService(IApiregistrationV1Operations operations, V1APIService body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<CreateAPIServiceAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1APIService> CreateAPIServiceAsync(IApiregistrationV1Operations operations, V1APIService body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteAPIService(IApiregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<DeleteAPIServiceAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteAPIServiceAsync(IApiregistrationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIService ReadAPIService(IApiregistrationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<ReadAPIServiceAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1APIService> ReadAPIServiceAsync(IApiregistrationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIService PatchAPIService(IApiregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<PatchAPIServiceAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1APIService> PatchAPIServiceAsync(IApiregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIService ReplaceAPIService(IApiregistrationV1Operations operations, V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<ReplaceAPIServiceAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1APIService> ReplaceAPIServiceAsync(IApiregistrationV1Operations operations, V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIService ReadAPIServiceStatus(IApiregistrationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<ReadAPIServiceStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1APIService> ReadAPIServiceStatusAsync(IApiregistrationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIService PatchAPIServiceStatus(IApiregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<PatchAPIServiceStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1APIService> PatchAPIServiceStatusAsync(IApiregistrationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1APIService ReplaceAPIServiceStatus(IApiregistrationV1Operations operations, V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ApiregistrationV1OperationsExtensions/<ReplaceAPIServiceStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1APIService> ReplaceAPIServiceStatusAsync(IApiregistrationV1Operations operations, V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ApisOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroupList GetAPIVersions(IApisOperations operations);
    [AsyncStateMachineAttribute("k8s.ApisOperationsExtensions/<GetAPIVersionsAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroupList> GetAPIVersionsAsync(IApisOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AppsOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IAppsOperations operations);
    [AsyncStateMachineAttribute("k8s.AppsOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IAppsOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AppsV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAppsV1Operations operations);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAppsV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ControllerRevisionList ListControllerRevisionForAllNamespaces(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListControllerRevisionForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1ControllerRevisionList> ListControllerRevisionForAllNamespacesAsync(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSetList ListDaemonSetForAllNamespaces(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListDaemonSetForAllNamespacesAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1DaemonSetList> ListDaemonSetForAllNamespacesAsync(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DeploymentList ListDeploymentForAllNamespaces(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListDeploymentForAllNamespacesAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1DeploymentList> ListDeploymentForAllNamespacesAsync(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedControllerRevision(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteCollectionNamespacedControllerRevisionAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedControllerRevisionAsync(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ControllerRevisionList ListNamespacedControllerRevision(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListNamespacedControllerRevisionAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1ControllerRevisionList> ListNamespacedControllerRevisionAsync(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ControllerRevision CreateNamespacedControllerRevision(IAppsV1Operations operations, V1ControllerRevision body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<CreateNamespacedControllerRevisionAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1ControllerRevision> CreateNamespacedControllerRevisionAsync(IAppsV1Operations operations, V1ControllerRevision body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedControllerRevision(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteNamespacedControllerRevisionAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedControllerRevisionAsync(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ControllerRevision ReadNamespacedControllerRevision(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedControllerRevisionAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1ControllerRevision> ReadNamespacedControllerRevisionAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ControllerRevision PatchNamespacedControllerRevision(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedControllerRevisionAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1ControllerRevision> PatchNamespacedControllerRevisionAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ControllerRevision ReplaceNamespacedControllerRevision(IAppsV1Operations operations, V1ControllerRevision body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedControllerRevisionAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1ControllerRevision> ReplaceNamespacedControllerRevisionAsync(IAppsV1Operations operations, V1ControllerRevision body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedDaemonSet(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteCollectionNamespacedDaemonSetAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedDaemonSetAsync(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSetList ListNamespacedDaemonSet(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListNamespacedDaemonSetAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1DaemonSetList> ListNamespacedDaemonSetAsync(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSet CreateNamespacedDaemonSet(IAppsV1Operations operations, V1DaemonSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<CreateNamespacedDaemonSetAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1DaemonSet> CreateNamespacedDaemonSetAsync(IAppsV1Operations operations, V1DaemonSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedDaemonSet(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteNamespacedDaemonSetAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedDaemonSetAsync(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSet ReadNamespacedDaemonSet(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedDaemonSetAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1DaemonSet> ReadNamespacedDaemonSetAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSet PatchNamespacedDaemonSet(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedDaemonSetAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1DaemonSet> PatchNamespacedDaemonSetAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSet ReplaceNamespacedDaemonSet(IAppsV1Operations operations, V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedDaemonSetAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1DaemonSet> ReplaceNamespacedDaemonSetAsync(IAppsV1Operations operations, V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSet ReadNamespacedDaemonSetStatus(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedDaemonSetStatusAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1DaemonSet> ReadNamespacedDaemonSetStatusAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSet PatchNamespacedDaemonSetStatus(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedDaemonSetStatusAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1DaemonSet> PatchNamespacedDaemonSetStatusAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DaemonSet ReplaceNamespacedDaemonSetStatus(IAppsV1Operations operations, V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedDaemonSetStatusAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1DaemonSet> ReplaceNamespacedDaemonSetStatusAsync(IAppsV1Operations operations, V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedDeployment(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteCollectionNamespacedDeploymentAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedDeploymentAsync(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1DeploymentList ListNamespacedDeployment(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListNamespacedDeploymentAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1DeploymentList> ListNamespacedDeploymentAsync(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Deployment CreateNamespacedDeployment(IAppsV1Operations operations, V1Deployment body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<CreateNamespacedDeploymentAsync>d__47")]
[ExtensionAttribute]
public static Task`1<V1Deployment> CreateNamespacedDeploymentAsync(IAppsV1Operations operations, V1Deployment body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedDeployment(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteNamespacedDeploymentAsync>d__49")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedDeploymentAsync(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Deployment ReadNamespacedDeployment(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedDeploymentAsync>d__51")]
[ExtensionAttribute]
public static Task`1<V1Deployment> ReadNamespacedDeploymentAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Deployment PatchNamespacedDeployment(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedDeploymentAsync>d__53")]
[ExtensionAttribute]
public static Task`1<V1Deployment> PatchNamespacedDeploymentAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Deployment ReplaceNamespacedDeployment(IAppsV1Operations operations, V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedDeploymentAsync>d__55")]
[ExtensionAttribute]
public static Task`1<V1Deployment> ReplaceNamespacedDeploymentAsync(IAppsV1Operations operations, V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReadNamespacedDeploymentScale(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedDeploymentScaleAsync>d__57")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReadNamespacedDeploymentScaleAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale PatchNamespacedDeploymentScale(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedDeploymentScaleAsync>d__59")]
[ExtensionAttribute]
public static Task`1<V1Scale> PatchNamespacedDeploymentScaleAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReplaceNamespacedDeploymentScale(IAppsV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedDeploymentScaleAsync>d__61")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReplaceNamespacedDeploymentScaleAsync(IAppsV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Deployment ReadNamespacedDeploymentStatus(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedDeploymentStatusAsync>d__63")]
[ExtensionAttribute]
public static Task`1<V1Deployment> ReadNamespacedDeploymentStatusAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Deployment PatchNamespacedDeploymentStatus(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedDeploymentStatusAsync>d__65")]
[ExtensionAttribute]
public static Task`1<V1Deployment> PatchNamespacedDeploymentStatusAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Deployment ReplaceNamespacedDeploymentStatus(IAppsV1Operations operations, V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedDeploymentStatusAsync>d__67")]
[ExtensionAttribute]
public static Task`1<V1Deployment> ReplaceNamespacedDeploymentStatusAsync(IAppsV1Operations operations, V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedReplicaSet(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteCollectionNamespacedReplicaSetAsync>d__69")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedReplicaSetAsync(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSetList ListNamespacedReplicaSet(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListNamespacedReplicaSetAsync>d__71")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSetList> ListNamespacedReplicaSetAsync(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSet CreateNamespacedReplicaSet(IAppsV1Operations operations, V1ReplicaSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<CreateNamespacedReplicaSetAsync>d__73")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSet> CreateNamespacedReplicaSetAsync(IAppsV1Operations operations, V1ReplicaSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedReplicaSet(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteNamespacedReplicaSetAsync>d__75")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedReplicaSetAsync(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSet ReadNamespacedReplicaSet(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedReplicaSetAsync>d__77")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSet> ReadNamespacedReplicaSetAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSet PatchNamespacedReplicaSet(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedReplicaSetAsync>d__79")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSet> PatchNamespacedReplicaSetAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSet ReplaceNamespacedReplicaSet(IAppsV1Operations operations, V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedReplicaSetAsync>d__81")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSet> ReplaceNamespacedReplicaSetAsync(IAppsV1Operations operations, V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReadNamespacedReplicaSetScale(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedReplicaSetScaleAsync>d__83")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReadNamespacedReplicaSetScaleAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale PatchNamespacedReplicaSetScale(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedReplicaSetScaleAsync>d__85")]
[ExtensionAttribute]
public static Task`1<V1Scale> PatchNamespacedReplicaSetScaleAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReplaceNamespacedReplicaSetScale(IAppsV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedReplicaSetScaleAsync>d__87")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReplaceNamespacedReplicaSetScaleAsync(IAppsV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSet ReadNamespacedReplicaSetStatus(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedReplicaSetStatusAsync>d__89")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSet> ReadNamespacedReplicaSetStatusAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSet PatchNamespacedReplicaSetStatus(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedReplicaSetStatusAsync>d__91")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSet> PatchNamespacedReplicaSetStatusAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSet ReplaceNamespacedReplicaSetStatus(IAppsV1Operations operations, V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedReplicaSetStatusAsync>d__93")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSet> ReplaceNamespacedReplicaSetStatusAsync(IAppsV1Operations operations, V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedStatefulSet(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteCollectionNamespacedStatefulSetAsync>d__95")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedStatefulSetAsync(IAppsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSetList ListNamespacedStatefulSet(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListNamespacedStatefulSetAsync>d__97")]
[ExtensionAttribute]
public static Task`1<V1StatefulSetList> ListNamespacedStatefulSetAsync(IAppsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSet CreateNamespacedStatefulSet(IAppsV1Operations operations, V1StatefulSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<CreateNamespacedStatefulSetAsync>d__99")]
[ExtensionAttribute]
public static Task`1<V1StatefulSet> CreateNamespacedStatefulSetAsync(IAppsV1Operations operations, V1StatefulSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedStatefulSet(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<DeleteNamespacedStatefulSetAsync>d__101")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedStatefulSetAsync(IAppsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSet ReadNamespacedStatefulSet(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedStatefulSetAsync>d__103")]
[ExtensionAttribute]
public static Task`1<V1StatefulSet> ReadNamespacedStatefulSetAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSet PatchNamespacedStatefulSet(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedStatefulSetAsync>d__105")]
[ExtensionAttribute]
public static Task`1<V1StatefulSet> PatchNamespacedStatefulSetAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSet ReplaceNamespacedStatefulSet(IAppsV1Operations operations, V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedStatefulSetAsync>d__107")]
[ExtensionAttribute]
public static Task`1<V1StatefulSet> ReplaceNamespacedStatefulSetAsync(IAppsV1Operations operations, V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReadNamespacedStatefulSetScale(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedStatefulSetScaleAsync>d__109")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReadNamespacedStatefulSetScaleAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale PatchNamespacedStatefulSetScale(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedStatefulSetScaleAsync>d__111")]
[ExtensionAttribute]
public static Task`1<V1Scale> PatchNamespacedStatefulSetScaleAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReplaceNamespacedStatefulSetScale(IAppsV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedStatefulSetScaleAsync>d__113")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReplaceNamespacedStatefulSetScaleAsync(IAppsV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSet ReadNamespacedStatefulSetStatus(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReadNamespacedStatefulSetStatusAsync>d__115")]
[ExtensionAttribute]
public static Task`1<V1StatefulSet> ReadNamespacedStatefulSetStatusAsync(IAppsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSet PatchNamespacedStatefulSetStatus(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<PatchNamespacedStatefulSetStatusAsync>d__117")]
[ExtensionAttribute]
public static Task`1<V1StatefulSet> PatchNamespacedStatefulSetStatusAsync(IAppsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSet ReplaceNamespacedStatefulSetStatus(IAppsV1Operations operations, V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ReplaceNamespacedStatefulSetStatusAsync>d__119")]
[ExtensionAttribute]
public static Task`1<V1StatefulSet> ReplaceNamespacedStatefulSetStatusAsync(IAppsV1Operations operations, V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicaSetList ListReplicaSetForAllNamespaces(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListReplicaSetForAllNamespacesAsync>d__121")]
[ExtensionAttribute]
public static Task`1<V1ReplicaSetList> ListReplicaSetForAllNamespacesAsync(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StatefulSetList ListStatefulSetForAllNamespaces(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.AppsV1OperationsExtensions/<ListStatefulSetForAllNamespacesAsync>d__123")]
[ExtensionAttribute]
public static Task`1<V1StatefulSetList> ListStatefulSetForAllNamespacesAsync(IAppsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
}
public class k8s.Authentication.BasicAuthenticationCredentials : ServiceClientCredentials {
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    public string UserName { get; public set; }
    public string Password { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    public virtual Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class k8s.Authentication.ExecTokenProvider : object {
    private ExternalExecution exec;
    private ExecCredentialResponse response;
    public ExecTokenProvider(ExternalExecution exec);
    private bool NeedsRefresh();
    [AsyncStateMachineAttribute("k8s.Authentication.ExecTokenProvider/<GetAuthenticationHeaderAsync>d__4")]
public sealed virtual Task`1<AuthenticationHeaderValue> GetAuthenticationHeaderAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.Authentication.ExecTokenProvider/<RefreshToken>d__5")]
private Task RefreshToken();
    [CompilerGeneratedAttribute]
private ExecCredentialResponse <RefreshToken>b__5_0();
}
public interface k8s.Authentication.ITokenProvider {
    public abstract virtual Task`1<AuthenticationHeaderValue> GetAuthenticationHeaderAsync(CancellationToken cancellationToken);
}
public class k8s.Authentication.OidcTokenProvider : object {
    private OidcClient _oidcClient;
    private string _idToken;
    private string _refreshToken;
    private DateTimeOffset _expiry;
    public OidcTokenProvider(string clientId, string clientSecret, string idpIssuerUrl, string idToken, string refreshToken);
    [AsyncStateMachineAttribute("k8s.Authentication.OidcTokenProvider/<GetAuthenticationHeaderAsync>d__5")]
public sealed virtual Task`1<AuthenticationHeaderValue> GetAuthenticationHeaderAsync(CancellationToken cancellationToken);
    private DateTime getExpiryFromToken();
    private OidcClient getClient(string clientId, string clientSecret, string idpIssuerUrl);
    [AsyncStateMachineAttribute("k8s.Authentication.OidcTokenProvider/<RefreshToken>d__8")]
private Task RefreshToken();
}
public abstract class k8s.Authentication.ServiceClientCredentials : object {
    public virtual Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class k8s.Authentication.StringTokenProvider : object {
    private string _accessToken;
    private string _type;
    public string TokenType { get; }
    public StringTokenProvider(string accessToken, string tokenType);
    public string get_TokenType();
    public sealed virtual Task`1<AuthenticationHeaderValue> GetAuthenticationHeaderAsync(CancellationToken cancellationToken);
}
public class k8s.Authentication.TokenCredentials : ServiceClientCredentials {
    private static string BearerTokenType;
    [CompilerGeneratedAttribute]
private ITokenProvider <TokenProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallerId>k__BackingField;
    protected ITokenProvider TokenProvider { get; private set; }
    public string TenantId { get; private set; }
    public string CallerId { get; private set; }
    public TokenCredentials(string token);
    public TokenCredentials(string token, string tokenType);
    public TokenCredentials(ITokenProvider tokenProvider);
    public TokenCredentials(ITokenProvider tokenProvider, string tenantId, string callerId);
    [CompilerGeneratedAttribute]
protected ITokenProvider get_TokenProvider();
    [CompilerGeneratedAttribute]
private void set_TokenProvider(ITokenProvider value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
private void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_CallerId();
    [CompilerGeneratedAttribute]
private void set_CallerId(string value);
    [AsyncStateMachineAttribute("k8s.Authentication.TokenCredentials/<ProcessHttpRequestAsync>d__17")]
public virtual Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class k8s.Authentication.TokenFileAuth : object {
    private string token;
    [CompilerGeneratedAttribute]
private string <TokenFile>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TokenExpiresAt>k__BackingField;
    internal string TokenFile { get; internal set; }
    internal DateTime TokenExpiresAt { get; internal set; }
    public TokenFileAuth(string tokenFile);
    [CompilerGeneratedAttribute]
internal string get_TokenFile();
    [CompilerGeneratedAttribute]
internal void set_TokenFile(string value);
    [CompilerGeneratedAttribute]
internal DateTime get_TokenExpiresAt();
    [CompilerGeneratedAttribute]
internal void set_TokenExpiresAt(DateTime value);
    [AsyncStateMachineAttribute("k8s.Authentication.TokenFileAuth/<GetAuthenticationHeaderAsync>d__10")]
public sealed virtual Task`1<AuthenticationHeaderValue> GetAuthenticationHeaderAsync(CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AuthenticationOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IAuthenticationOperations operations);
    [AsyncStateMachineAttribute("k8s.AuthenticationOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IAuthenticationOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AuthenticationV1alpha1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAuthenticationV1alpha1Operations operations);
    [AsyncStateMachineAttribute("k8s.AuthenticationV1alpha1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAuthenticationV1alpha1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1SelfSubjectReview CreateSelfSubjectReview(IAuthenticationV1alpha1Operations operations, V1alpha1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthenticationV1alpha1OperationsExtensions/<CreateSelfSubjectReviewAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1alpha1SelfSubjectReview> CreateSelfSubjectReviewAsync(IAuthenticationV1alpha1Operations operations, V1alpha1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AuthenticationV1beta1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAuthenticationV1beta1Operations operations);
    [AsyncStateMachineAttribute("k8s.AuthenticationV1beta1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAuthenticationV1beta1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1SelfSubjectReview CreateSelfSubjectReview(IAuthenticationV1beta1Operations operations, V1beta1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthenticationV1beta1OperationsExtensions/<CreateSelfSubjectReviewAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1beta1SelfSubjectReview> CreateSelfSubjectReviewAsync(IAuthenticationV1beta1Operations operations, V1beta1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AuthenticationV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAuthenticationV1Operations operations);
    [AsyncStateMachineAttribute("k8s.AuthenticationV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAuthenticationV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1SelfSubjectReview CreateSelfSubjectReview(IAuthenticationV1Operations operations, V1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthenticationV1OperationsExtensions/<CreateSelfSubjectReviewAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1SelfSubjectReview> CreateSelfSubjectReviewAsync(IAuthenticationV1Operations operations, V1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1TokenReview CreateTokenReview(IAuthenticationV1Operations operations, V1TokenReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthenticationV1OperationsExtensions/<CreateTokenReviewAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1TokenReview> CreateTokenReviewAsync(IAuthenticationV1Operations operations, V1TokenReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AuthorizationOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IAuthorizationOperations operations);
    [AsyncStateMachineAttribute("k8s.AuthorizationOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IAuthorizationOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AuthorizationV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAuthorizationV1Operations operations);
    [AsyncStateMachineAttribute("k8s.AuthorizationV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAuthorizationV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LocalSubjectAccessReview CreateNamespacedLocalSubjectAccessReview(IAuthorizationV1Operations operations, V1LocalSubjectAccessReview body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthorizationV1OperationsExtensions/<CreateNamespacedLocalSubjectAccessReviewAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1LocalSubjectAccessReview> CreateNamespacedLocalSubjectAccessReviewAsync(IAuthorizationV1Operations operations, V1LocalSubjectAccessReview body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1SelfSubjectAccessReview CreateSelfSubjectAccessReview(IAuthorizationV1Operations operations, V1SelfSubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthorizationV1OperationsExtensions/<CreateSelfSubjectAccessReviewAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1SelfSubjectAccessReview> CreateSelfSubjectAccessReviewAsync(IAuthorizationV1Operations operations, V1SelfSubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1SelfSubjectRulesReview CreateSelfSubjectRulesReview(IAuthorizationV1Operations operations, V1SelfSubjectRulesReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthorizationV1OperationsExtensions/<CreateSelfSubjectRulesReviewAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1SelfSubjectRulesReview> CreateSelfSubjectRulesReviewAsync(IAuthorizationV1Operations operations, V1SelfSubjectRulesReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1SubjectAccessReview CreateSubjectAccessReview(IAuthorizationV1Operations operations, V1SubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AuthorizationV1OperationsExtensions/<CreateSubjectAccessReviewAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1SubjectAccessReview> CreateSubjectAccessReviewAsync(IAuthorizationV1Operations operations, V1SubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class k8s.Autorest.HttpExtensions : object {
    [ExtensionAttribute]
public static HttpHeaders GetContentHeaders(HttpRequestMessage request);
    [ExtensionAttribute]
public static HttpHeaders GetContentHeaders(HttpResponseMessage response);
}
public abstract class k8s.Autorest.HttpMessageWrapper : object {
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<string>> <Headers>k__BackingField;
    public string Content { get; public set; }
    public IDictionary`2<string, IEnumerable`1<string>> Headers { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IEnumerable`1<string>> get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(IDictionary`2<string, IEnumerable`1<string>> value);
    protected void CopyHeaders(HttpHeaders headers);
}
public class k8s.Autorest.HttpOperationException : Exception {
    [CompilerGeneratedAttribute]
private HttpRequestMessageWrapper <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseMessageWrapper <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Body>k__BackingField;
    public HttpRequestMessageWrapper Request { get; public set; }
    public HttpResponseMessageWrapper Response { get; public set; }
    public object Body { get; public set; }
    public HttpOperationException(string message);
    public HttpOperationException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public HttpRequestMessageWrapper get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(HttpRequestMessageWrapper value);
    [CompilerGeneratedAttribute]
public HttpResponseMessageWrapper get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(HttpResponseMessageWrapper value);
    [CompilerGeneratedAttribute]
public object get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(object value);
}
public class k8s.Autorest.HttpOperationResponse : object {
    private bool _disposed;
    [CompilerGeneratedAttribute]
private HttpRequestMessage <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseMessage <Response>k__BackingField;
    public HttpRequestMessage Request { get; public set; }
    public HttpResponseMessage Response { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual HttpRequestMessage get_Request();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Request(HttpRequestMessage value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpResponseMessage get_Response();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Response(HttpResponseMessage value);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public class k8s.Autorest.HttpOperationResponse`1 : HttpOperationResponse {
    [CompilerGeneratedAttribute]
private T <Body>k__BackingField;
    public T Body { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual T get_Body();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Body(T value);
}
public class k8s.Autorest.HttpRequestMessageWrapper : HttpMessageWrapper {
    [CompilerGeneratedAttribute]
private HttpMethod <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RequestUri>k__BackingField;
    public HttpMethod Method { get; protected set; }
    public Uri RequestUri { get; protected set; }
    public HttpRequestMessageWrapper(HttpRequestMessage httpRequest, string content);
    [CompilerGeneratedAttribute]
public HttpMethod get_Method();
    [CompilerGeneratedAttribute]
protected void set_Method(HttpMethod value);
    [CompilerGeneratedAttribute]
public Uri get_RequestUri();
    [CompilerGeneratedAttribute]
protected void set_RequestUri(Uri value);
}
public class k8s.Autorest.HttpResponseMessageWrapper : HttpMessageWrapper {
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReasonPhrase>k__BackingField;
    public HttpStatusCode StatusCode { get; protected set; }
    public string ReasonPhrase { get; protected set; }
    public HttpResponseMessageWrapper(HttpResponseMessage httpResponse, string content);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
protected void set_StatusCode(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public string get_ReasonPhrase();
    [CompilerGeneratedAttribute]
protected void set_ReasonPhrase(string value);
}
public interface k8s.Autorest.IHttpOperationHeaderResponse`1 {
    public T Headers { get; public set; }
    public abstract virtual T get_Headers();
    public abstract virtual void set_Headers(T value);
}
public interface k8s.Autorest.IHttpOperationResponse {
    public HttpRequestMessage Request { get; public set; }
    public HttpResponseMessage Response { get; public set; }
    public abstract virtual HttpRequestMessage get_Request();
    public abstract virtual void set_Request(HttpRequestMessage value);
    public abstract virtual HttpResponseMessage get_Response();
    public abstract virtual void set_Response(HttpResponseMessage value);
}
public interface k8s.Autorest.IHttpOperationResponse`1 {
    public T Body { get; public set; }
    public abstract virtual T get_Body();
    public abstract virtual void set_Body(T value);
}
public interface k8s.Autorest.IHttpOperationResponse`2 {
}
[ExtensionAttribute]
public static class k8s.AutoscalingOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IAutoscalingOperations operations);
    [AsyncStateMachineAttribute("k8s.AutoscalingOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IAutoscalingOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AutoscalingV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAutoscalingV1Operations operations);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAutoscalingV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscalerList ListHorizontalPodAutoscalerForAllNamespaces(IAutoscalingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<ListHorizontalPodAutoscalerForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscalerList> ListHorizontalPodAutoscalerForAllNamespacesAsync(IAutoscalingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedHorizontalPodAutoscaler(IAutoscalingV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<DeleteCollectionNamespacedHorizontalPodAutoscalerAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscalerList ListNamespacedHorizontalPodAutoscaler(IAutoscalingV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<ListNamespacedHorizontalPodAutoscalerAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscalerList> ListNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscaler CreateNamespacedHorizontalPodAutoscaler(IAutoscalingV1Operations operations, V1HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<CreateNamespacedHorizontalPodAutoscalerAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscaler> CreateNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV1Operations operations, V1HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedHorizontalPodAutoscaler(IAutoscalingV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<DeleteNamespacedHorizontalPodAutoscalerAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscaler ReadNamespacedHorizontalPodAutoscaler(IAutoscalingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<ReadNamespacedHorizontalPodAutoscalerAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscaler> ReadNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscaler PatchNamespacedHorizontalPodAutoscaler(IAutoscalingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<PatchNamespacedHorizontalPodAutoscalerAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscaler> PatchNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscaler ReplaceNamespacedHorizontalPodAutoscaler(IAutoscalingV1Operations operations, V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<ReplaceNamespacedHorizontalPodAutoscalerAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscaler> ReplaceNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV1Operations operations, V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscaler ReadNamespacedHorizontalPodAutoscalerStatus(IAutoscalingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<ReadNamespacedHorizontalPodAutoscalerStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscaler> ReadNamespacedHorizontalPodAutoscalerStatusAsync(IAutoscalingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscaler PatchNamespacedHorizontalPodAutoscalerStatus(IAutoscalingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<PatchNamespacedHorizontalPodAutoscalerStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscaler> PatchNamespacedHorizontalPodAutoscalerStatusAsync(IAutoscalingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1HorizontalPodAutoscaler ReplaceNamespacedHorizontalPodAutoscalerStatus(IAutoscalingV1Operations operations, V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV1OperationsExtensions/<ReplaceNamespacedHorizontalPodAutoscalerStatusAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1HorizontalPodAutoscaler> ReplaceNamespacedHorizontalPodAutoscalerStatusAsync(IAutoscalingV1Operations operations, V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.AutoscalingV2OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IAutoscalingV2Operations operations);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IAutoscalingV2Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscalerList ListHorizontalPodAutoscalerForAllNamespaces(IAutoscalingV2Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<ListHorizontalPodAutoscalerForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscalerList> ListHorizontalPodAutoscalerForAllNamespacesAsync(IAutoscalingV2Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedHorizontalPodAutoscaler(IAutoscalingV2Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<DeleteCollectionNamespacedHorizontalPodAutoscalerAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV2Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscalerList ListNamespacedHorizontalPodAutoscaler(IAutoscalingV2Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<ListNamespacedHorizontalPodAutoscalerAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscalerList> ListNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV2Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscaler CreateNamespacedHorizontalPodAutoscaler(IAutoscalingV2Operations operations, V2HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<CreateNamespacedHorizontalPodAutoscalerAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscaler> CreateNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV2Operations operations, V2HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedHorizontalPodAutoscaler(IAutoscalingV2Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<DeleteNamespacedHorizontalPodAutoscalerAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV2Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscaler ReadNamespacedHorizontalPodAutoscaler(IAutoscalingV2Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<ReadNamespacedHorizontalPodAutoscalerAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscaler> ReadNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV2Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscaler PatchNamespacedHorizontalPodAutoscaler(IAutoscalingV2Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<PatchNamespacedHorizontalPodAutoscalerAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscaler> PatchNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV2Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscaler ReplaceNamespacedHorizontalPodAutoscaler(IAutoscalingV2Operations operations, V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<ReplaceNamespacedHorizontalPodAutoscalerAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscaler> ReplaceNamespacedHorizontalPodAutoscalerAsync(IAutoscalingV2Operations operations, V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscaler ReadNamespacedHorizontalPodAutoscalerStatus(IAutoscalingV2Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<ReadNamespacedHorizontalPodAutoscalerStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscaler> ReadNamespacedHorizontalPodAutoscalerStatusAsync(IAutoscalingV2Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscaler PatchNamespacedHorizontalPodAutoscalerStatus(IAutoscalingV2Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<PatchNamespacedHorizontalPodAutoscalerStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscaler> PatchNamespacedHorizontalPodAutoscalerStatusAsync(IAutoscalingV2Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V2HorizontalPodAutoscaler ReplaceNamespacedHorizontalPodAutoscalerStatus(IAutoscalingV2Operations operations, V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.AutoscalingV2OperationsExtensions/<ReplaceNamespacedHorizontalPodAutoscalerStatusAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V2HorizontalPodAutoscaler> ReplaceNamespacedHorizontalPodAutoscalerStatusAsync(IAutoscalingV2Operations operations, V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.BatchOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IBatchOperations operations);
    [AsyncStateMachineAttribute("k8s.BatchOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IBatchOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.BatchV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IBatchV1Operations operations);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IBatchV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJobList ListCronJobForAllNamespaces(IBatchV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ListCronJobForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1CronJobList> ListCronJobForAllNamespacesAsync(IBatchV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1JobList ListJobForAllNamespaces(IBatchV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ListJobForAllNamespacesAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1JobList> ListJobForAllNamespacesAsync(IBatchV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedCronJob(IBatchV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<DeleteCollectionNamespacedCronJobAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedCronJobAsync(IBatchV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJobList ListNamespacedCronJob(IBatchV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ListNamespacedCronJobAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1CronJobList> ListNamespacedCronJobAsync(IBatchV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJob CreateNamespacedCronJob(IBatchV1Operations operations, V1CronJob body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<CreateNamespacedCronJobAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1CronJob> CreateNamespacedCronJobAsync(IBatchV1Operations operations, V1CronJob body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedCronJob(IBatchV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<DeleteNamespacedCronJobAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedCronJobAsync(IBatchV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJob ReadNamespacedCronJob(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReadNamespacedCronJobAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1CronJob> ReadNamespacedCronJobAsync(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJob PatchNamespacedCronJob(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<PatchNamespacedCronJobAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1CronJob> PatchNamespacedCronJobAsync(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJob ReplaceNamespacedCronJob(IBatchV1Operations operations, V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReplaceNamespacedCronJobAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1CronJob> ReplaceNamespacedCronJobAsync(IBatchV1Operations operations, V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJob ReadNamespacedCronJobStatus(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReadNamespacedCronJobStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1CronJob> ReadNamespacedCronJobStatusAsync(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJob PatchNamespacedCronJobStatus(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<PatchNamespacedCronJobStatusAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1CronJob> PatchNamespacedCronJobStatusAsync(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CronJob ReplaceNamespacedCronJobStatus(IBatchV1Operations operations, V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReplaceNamespacedCronJobStatusAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1CronJob> ReplaceNamespacedCronJobStatusAsync(IBatchV1Operations operations, V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedJob(IBatchV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<DeleteCollectionNamespacedJobAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedJobAsync(IBatchV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1JobList ListNamespacedJob(IBatchV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ListNamespacedJobAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1JobList> ListNamespacedJobAsync(IBatchV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Job CreateNamespacedJob(IBatchV1Operations operations, V1Job body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<CreateNamespacedJobAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1Job> CreateNamespacedJobAsync(IBatchV1Operations operations, V1Job body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedJob(IBatchV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<DeleteNamespacedJobAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedJobAsync(IBatchV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Job ReadNamespacedJob(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReadNamespacedJobAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1Job> ReadNamespacedJobAsync(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Job PatchNamespacedJob(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<PatchNamespacedJobAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1Job> PatchNamespacedJobAsync(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Job ReplaceNamespacedJob(IBatchV1Operations operations, V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReplaceNamespacedJobAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1Job> ReplaceNamespacedJobAsync(IBatchV1Operations operations, V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Job ReadNamespacedJobStatus(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReadNamespacedJobStatusAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1Job> ReadNamespacedJobStatusAsync(IBatchV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Job PatchNamespacedJobStatus(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<PatchNamespacedJobStatusAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1Job> PatchNamespacedJobStatusAsync(IBatchV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Job ReplaceNamespacedJobStatus(IBatchV1Operations operations, V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.BatchV1OperationsExtensions/<ReplaceNamespacedJobStatusAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1Job> ReplaceNamespacedJobStatusAsync(IBatchV1Operations operations, V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
public class k8s.ByteBuffer : object {
    private static int DefaultBufferSize;
    private static int DefaultMaximumSize;
    private int maximumSize;
    private AutoResetEvent dataAvailable;
    private object lockObject;
    private Byte[] buffer;
    private int bytesWritten;
    private int bytesRead;
    private bool endOfFile;
    private bool disposedValue;
    [CompilerGeneratedAttribute]
private int <ReadWaterMark>k__BackingField;
    [CompilerGeneratedAttribute]
private int <WriteWaterMark>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHandler OnResize;
    public int Size { get; }
    public int MaximumSize { get; }
    public int ReadWaterMark { get; private set; }
    public int WriteWaterMark { get; private set; }
    public int AvailableReadableBytes { get; }
    public int AvailableWritableBytes { get; }
    public ByteBuffer(int bufferSize, int maximumSize);
    public int get_Size();
    public int get_MaximumSize();
    [CompilerGeneratedAttribute]
public int get_ReadWaterMark();
    [CompilerGeneratedAttribute]
private void set_ReadWaterMark(int value);
    [CompilerGeneratedAttribute]
public int get_WriteWaterMark();
    [CompilerGeneratedAttribute]
private void set_WriteWaterMark(int value);
    public int get_AvailableReadableBytes();
    public int get_AvailableWritableBytes();
    public void Write(Byte[] data, int offset, int length);
    public void WriteEnd();
    public int Read(Byte[] data, int offset, int count);
    [CompilerGeneratedAttribute]
public void add_OnResize(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_OnResize(EventHandler value);
    private void Grow(int size);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
public static class k8s.CertificatesOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(ICertificatesOperations operations);
    [AsyncStateMachineAttribute("k8s.CertificatesOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(ICertificatesOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.CertificatesV1alpha1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(ICertificatesV1alpha1Operations operations);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(ICertificatesV1alpha1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionClusterTrustBundle(ICertificatesV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<DeleteCollectionClusterTrustBundleAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionClusterTrustBundleAsync(ICertificatesV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ClusterTrustBundleList ListClusterTrustBundle(ICertificatesV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<ListClusterTrustBundleAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1alpha1ClusterTrustBundleList> ListClusterTrustBundleAsync(ICertificatesV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ClusterTrustBundle CreateClusterTrustBundle(ICertificatesV1alpha1Operations operations, V1alpha1ClusterTrustBundle body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<CreateClusterTrustBundleAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1alpha1ClusterTrustBundle> CreateClusterTrustBundleAsync(ICertificatesV1alpha1Operations operations, V1alpha1ClusterTrustBundle body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteClusterTrustBundle(ICertificatesV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<DeleteClusterTrustBundleAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteClusterTrustBundleAsync(ICertificatesV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ClusterTrustBundle ReadClusterTrustBundle(ICertificatesV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<ReadClusterTrustBundleAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1alpha1ClusterTrustBundle> ReadClusterTrustBundleAsync(ICertificatesV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ClusterTrustBundle PatchClusterTrustBundle(ICertificatesV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<PatchClusterTrustBundleAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1alpha1ClusterTrustBundle> PatchClusterTrustBundleAsync(ICertificatesV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1ClusterTrustBundle ReplaceClusterTrustBundle(ICertificatesV1alpha1Operations operations, V1alpha1ClusterTrustBundle body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1alpha1OperationsExtensions/<ReplaceClusterTrustBundleAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1alpha1ClusterTrustBundle> ReplaceClusterTrustBundleAsync(ICertificatesV1alpha1Operations operations, V1alpha1ClusterTrustBundle body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.CertificatesV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(ICertificatesV1Operations operations);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(ICertificatesV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionCertificateSigningRequest(ICertificatesV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<DeleteCollectionCertificateSigningRequestAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionCertificateSigningRequestAsync(ICertificatesV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequestList ListCertificateSigningRequest(ICertificatesV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<ListCertificateSigningRequestAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequestList> ListCertificateSigningRequestAsync(ICertificatesV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest CreateCertificateSigningRequest(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<CreateCertificateSigningRequestAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> CreateCertificateSigningRequestAsync(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCertificateSigningRequest(ICertificatesV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<DeleteCertificateSigningRequestAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCertificateSigningRequestAsync(ICertificatesV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest ReadCertificateSigningRequest(ICertificatesV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<ReadCertificateSigningRequestAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> ReadCertificateSigningRequestAsync(ICertificatesV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest PatchCertificateSigningRequest(ICertificatesV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<PatchCertificateSigningRequestAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> PatchCertificateSigningRequestAsync(ICertificatesV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest ReplaceCertificateSigningRequest(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<ReplaceCertificateSigningRequestAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> ReplaceCertificateSigningRequestAsync(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest ReadCertificateSigningRequestApproval(ICertificatesV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<ReadCertificateSigningRequestApprovalAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> ReadCertificateSigningRequestApprovalAsync(ICertificatesV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest PatchCertificateSigningRequestApproval(ICertificatesV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<PatchCertificateSigningRequestApprovalAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> PatchCertificateSigningRequestApprovalAsync(ICertificatesV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest ReplaceCertificateSigningRequestApproval(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<ReplaceCertificateSigningRequestApprovalAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> ReplaceCertificateSigningRequestApprovalAsync(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest ReadCertificateSigningRequestStatus(ICertificatesV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<ReadCertificateSigningRequestStatusAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> ReadCertificateSigningRequestStatusAsync(ICertificatesV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest PatchCertificateSigningRequestStatus(ICertificatesV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<PatchCertificateSigningRequestStatusAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> PatchCertificateSigningRequestStatusAsync(ICertificatesV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CertificateSigningRequest ReplaceCertificateSigningRequestStatus(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CertificatesV1OperationsExtensions/<ReplaceCertificateSigningRequestStatusAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1CertificateSigningRequest> ReplaceCertificateSigningRequestStatusAsync(ICertificatesV1Operations operations, V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
internal static class k8s.CertUtils : object {
    public static X509Certificate2Collection LoadPemFileCert(string file);
    public static X509Certificate2 GeneratePfx(KubernetesClientConfiguration config);
    public static X509Certificate2 GetClientCert(KubernetesClientConfiguration config);
}
public enum k8s.ChannelIndex : Enum {
    public byte value__;
    public static ChannelIndex StdIn;
    public static ChannelIndex StdOut;
    public static ChannelIndex StdErr;
    public static ChannelIndex Error;
    public static ChannelIndex Resize;
}
[ExtensionAttribute]
public static class k8s.CoordinationOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(ICoordinationOperations operations);
    [AsyncStateMachineAttribute("k8s.CoordinationOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(ICoordinationOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.CoordinationV1alpha1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(ICoordinationV1alpha1Operations operations);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(ICoordinationV1alpha1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1LeaseCandidateList ListLeaseCandidateForAllNamespaces(ICoordinationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<ListLeaseCandidateForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1alpha1LeaseCandidateList> ListLeaseCandidateForAllNamespacesAsync(ICoordinationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedLeaseCandidate(ICoordinationV1alpha1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<DeleteCollectionNamespacedLeaseCandidateAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedLeaseCandidateAsync(ICoordinationV1alpha1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1LeaseCandidateList ListNamespacedLeaseCandidate(ICoordinationV1alpha1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<ListNamespacedLeaseCandidateAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1alpha1LeaseCandidateList> ListNamespacedLeaseCandidateAsync(ICoordinationV1alpha1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1LeaseCandidate CreateNamespacedLeaseCandidate(ICoordinationV1alpha1Operations operations, V1alpha1LeaseCandidate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<CreateNamespacedLeaseCandidateAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1alpha1LeaseCandidate> CreateNamespacedLeaseCandidateAsync(ICoordinationV1alpha1Operations operations, V1alpha1LeaseCandidate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedLeaseCandidate(ICoordinationV1alpha1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<DeleteNamespacedLeaseCandidateAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedLeaseCandidateAsync(ICoordinationV1alpha1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1LeaseCandidate ReadNamespacedLeaseCandidate(ICoordinationV1alpha1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<ReadNamespacedLeaseCandidateAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1alpha1LeaseCandidate> ReadNamespacedLeaseCandidateAsync(ICoordinationV1alpha1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1LeaseCandidate PatchNamespacedLeaseCandidate(ICoordinationV1alpha1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<PatchNamespacedLeaseCandidateAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1alpha1LeaseCandidate> PatchNamespacedLeaseCandidateAsync(ICoordinationV1alpha1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1LeaseCandidate ReplaceNamespacedLeaseCandidate(ICoordinationV1alpha1Operations operations, V1alpha1LeaseCandidate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1alpha1OperationsExtensions/<ReplaceNamespacedLeaseCandidateAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1alpha1LeaseCandidate> ReplaceNamespacedLeaseCandidateAsync(ICoordinationV1alpha1Operations operations, V1alpha1LeaseCandidate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.CoordinationV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(ICoordinationV1Operations operations);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(ICoordinationV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LeaseList ListLeaseForAllNamespaces(ICoordinationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<ListLeaseForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1LeaseList> ListLeaseForAllNamespacesAsync(ICoordinationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedLease(ICoordinationV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<DeleteCollectionNamespacedLeaseAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedLeaseAsync(ICoordinationV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LeaseList ListNamespacedLease(ICoordinationV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<ListNamespacedLeaseAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1LeaseList> ListNamespacedLeaseAsync(ICoordinationV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Lease CreateNamespacedLease(ICoordinationV1Operations operations, V1Lease body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<CreateNamespacedLeaseAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Lease> CreateNamespacedLeaseAsync(ICoordinationV1Operations operations, V1Lease body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedLease(ICoordinationV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<DeleteNamespacedLeaseAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedLeaseAsync(ICoordinationV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Lease ReadNamespacedLease(ICoordinationV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<ReadNamespacedLeaseAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1Lease> ReadNamespacedLeaseAsync(ICoordinationV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Lease PatchNamespacedLease(ICoordinationV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<PatchNamespacedLeaseAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1Lease> PatchNamespacedLeaseAsync(ICoordinationV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Lease ReplaceNamespacedLease(ICoordinationV1Operations operations, V1Lease body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoordinationV1OperationsExtensions/<ReplaceNamespacedLeaseAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1Lease> ReplaceNamespacedLeaseAsync(ICoordinationV1Operations operations, V1Lease body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.CoreOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIVersions GetAPIVersions(ICoreOperations operations);
    [AsyncStateMachineAttribute("k8s.CoreOperationsExtensions/<GetAPIVersionsAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIVersions> GetAPIVersionsAsync(ICoreOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.CoreV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(ICoreV1Operations operations);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(ICoreV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ComponentStatusList ListComponentStatus(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListComponentStatusAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1ComponentStatusList> ListComponentStatusAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ComponentStatus ReadComponentStatus(ICoreV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadComponentStatusAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1ComponentStatus> ReadComponentStatusAsync(ICoreV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ConfigMapList ListConfigMapForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListConfigMapForAllNamespacesAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1ConfigMapList> ListConfigMapForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointsList ListEndpointsForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListEndpointsForAllNamespacesAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1EndpointsList> ListEndpointsForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Corev1EventList ListEventForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListEventForAllNamespacesAsync>d__11")]
[ExtensionAttribute]
public static Task`1<Corev1EventList> ListEventForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LimitRangeList ListLimitRangeForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListLimitRangeForAllNamespacesAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1LimitRangeList> ListLimitRangeForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NamespaceList ListNamespace(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespaceAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1NamespaceList> ListNamespaceAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace CreateNamespace(ICoreV1Operations operations, V1Namespace body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespaceAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1Namespace> CreateNamespaceAsync(ICoreV1Operations operations, V1Namespace body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Binding CreateNamespacedBinding(ICoreV1Operations operations, V1Binding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedBindingAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1Binding> CreateNamespacedBindingAsync(ICoreV1Operations operations, V1Binding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedConfigMap(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedConfigMapAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedConfigMapAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ConfigMapList ListNamespacedConfigMap(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedConfigMapAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1ConfigMapList> ListNamespacedConfigMapAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ConfigMap CreateNamespacedConfigMap(ICoreV1Operations operations, V1ConfigMap body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedConfigMapAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1ConfigMap> CreateNamespacedConfigMapAsync(ICoreV1Operations operations, V1ConfigMap body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedConfigMap(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedConfigMapAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedConfigMapAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ConfigMap ReadNamespacedConfigMap(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedConfigMapAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1ConfigMap> ReadNamespacedConfigMapAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ConfigMap PatchNamespacedConfigMap(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedConfigMapAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1ConfigMap> PatchNamespacedConfigMapAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ConfigMap ReplaceNamespacedConfigMap(ICoreV1Operations operations, V1ConfigMap body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedConfigMapAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1ConfigMap> ReplaceNamespacedConfigMapAsync(ICoreV1Operations operations, V1ConfigMap body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedEndpoints(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedEndpointsAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedEndpointsAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointsList ListNamespacedEndpoints(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedEndpointsAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1EndpointsList> ListNamespacedEndpointsAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Endpoints CreateNamespacedEndpoints(ICoreV1Operations operations, V1Endpoints body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedEndpointsAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1Endpoints> CreateNamespacedEndpointsAsync(ICoreV1Operations operations, V1Endpoints body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedEndpoints(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedEndpointsAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedEndpointsAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Endpoints ReadNamespacedEndpoints(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedEndpointsAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1Endpoints> ReadNamespacedEndpointsAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Endpoints PatchNamespacedEndpoints(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedEndpointsAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1Endpoints> PatchNamespacedEndpointsAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Endpoints ReplaceNamespacedEndpoints(ICoreV1Operations operations, V1Endpoints body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedEndpointsAsync>d__47")]
[ExtensionAttribute]
public static Task`1<V1Endpoints> ReplaceNamespacedEndpointsAsync(ICoreV1Operations operations, V1Endpoints body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedEvent(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedEventAsync>d__49")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedEventAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Corev1EventList ListNamespacedEvent(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedEventAsync>d__51")]
[ExtensionAttribute]
public static Task`1<Corev1EventList> ListNamespacedEventAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Corev1Event CreateNamespacedEvent(ICoreV1Operations operations, Corev1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedEventAsync>d__53")]
[ExtensionAttribute]
public static Task`1<Corev1Event> CreateNamespacedEventAsync(ICoreV1Operations operations, Corev1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedEvent(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedEventAsync>d__55")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedEventAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Corev1Event ReadNamespacedEvent(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedEventAsync>d__57")]
[ExtensionAttribute]
public static Task`1<Corev1Event> ReadNamespacedEventAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Corev1Event PatchNamespacedEvent(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedEventAsync>d__59")]
[ExtensionAttribute]
public static Task`1<Corev1Event> PatchNamespacedEventAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Corev1Event ReplaceNamespacedEvent(ICoreV1Operations operations, Corev1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedEventAsync>d__61")]
[ExtensionAttribute]
public static Task`1<Corev1Event> ReplaceNamespacedEventAsync(ICoreV1Operations operations, Corev1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedLimitRange(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedLimitRangeAsync>d__63")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedLimitRangeAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LimitRangeList ListNamespacedLimitRange(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedLimitRangeAsync>d__65")]
[ExtensionAttribute]
public static Task`1<V1LimitRangeList> ListNamespacedLimitRangeAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LimitRange CreateNamespacedLimitRange(ICoreV1Operations operations, V1LimitRange body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedLimitRangeAsync>d__67")]
[ExtensionAttribute]
public static Task`1<V1LimitRange> CreateNamespacedLimitRangeAsync(ICoreV1Operations operations, V1LimitRange body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedLimitRange(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedLimitRangeAsync>d__69")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedLimitRangeAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LimitRange ReadNamespacedLimitRange(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedLimitRangeAsync>d__71")]
[ExtensionAttribute]
public static Task`1<V1LimitRange> ReadNamespacedLimitRangeAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LimitRange PatchNamespacedLimitRange(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedLimitRangeAsync>d__73")]
[ExtensionAttribute]
public static Task`1<V1LimitRange> PatchNamespacedLimitRangeAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1LimitRange ReplaceNamespacedLimitRange(ICoreV1Operations operations, V1LimitRange body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedLimitRangeAsync>d__75")]
[ExtensionAttribute]
public static Task`1<V1LimitRange> ReplaceNamespacedLimitRangeAsync(ICoreV1Operations operations, V1LimitRange body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedPersistentVolumeClaim(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedPersistentVolumeClaimAsync>d__77")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedPersistentVolumeClaimAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaimList ListNamespacedPersistentVolumeClaim(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedPersistentVolumeClaimAsync>d__79")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaimList> ListNamespacedPersistentVolumeClaimAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim CreateNamespacedPersistentVolumeClaim(ICoreV1Operations operations, V1PersistentVolumeClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedPersistentVolumeClaimAsync>d__81")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> CreateNamespacedPersistentVolumeClaimAsync(ICoreV1Operations operations, V1PersistentVolumeClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim DeleteNamespacedPersistentVolumeClaim(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedPersistentVolumeClaimAsync>d__83")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> DeleteNamespacedPersistentVolumeClaimAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim ReadNamespacedPersistentVolumeClaim(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedPersistentVolumeClaimAsync>d__85")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> ReadNamespacedPersistentVolumeClaimAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim PatchNamespacedPersistentVolumeClaim(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedPersistentVolumeClaimAsync>d__87")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> PatchNamespacedPersistentVolumeClaimAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim ReplaceNamespacedPersistentVolumeClaim(ICoreV1Operations operations, V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedPersistentVolumeClaimAsync>d__89")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> ReplaceNamespacedPersistentVolumeClaimAsync(ICoreV1Operations operations, V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim ReadNamespacedPersistentVolumeClaimStatus(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedPersistentVolumeClaimStatusAsync>d__91")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> ReadNamespacedPersistentVolumeClaimStatusAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim PatchNamespacedPersistentVolumeClaimStatus(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedPersistentVolumeClaimStatusAsync>d__93")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> PatchNamespacedPersistentVolumeClaimStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaim ReplaceNamespacedPersistentVolumeClaimStatus(ICoreV1Operations operations, V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedPersistentVolumeClaimStatusAsync>d__95")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaim> ReplaceNamespacedPersistentVolumeClaimStatusAsync(ICoreV1Operations operations, V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedPod(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedPodAsync>d__97")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedPodAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodList ListNamespacedPod(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedPodAsync>d__99")]
[ExtensionAttribute]
public static Task`1<V1PodList> ListNamespacedPodAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod CreateNamespacedPod(ICoreV1Operations operations, V1Pod body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedPodAsync>d__101")]
[ExtensionAttribute]
public static Task`1<V1Pod> CreateNamespacedPodAsync(ICoreV1Operations operations, V1Pod body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod DeleteNamespacedPod(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedPodAsync>d__103")]
[ExtensionAttribute]
public static Task`1<V1Pod> DeleteNamespacedPodAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod ReadNamespacedPod(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedPodAsync>d__105")]
[ExtensionAttribute]
public static Task`1<V1Pod> ReadNamespacedPodAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod PatchNamespacedPod(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedPodAsync>d__107")]
[ExtensionAttribute]
public static Task`1<V1Pod> PatchNamespacedPodAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod ReplaceNamespacedPod(ICoreV1Operations operations, V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedPodAsync>d__109")]
[ExtensionAttribute]
public static Task`1<V1Pod> ReplaceNamespacedPodAsync(ICoreV1Operations operations, V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNamespacedPodAttach(ICoreV1Operations operations, string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNamespacedPodAttachAsync>d__111")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNamespacedPodAttachAsync(ICoreV1Operations operations, string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNamespacedPodAttach(ICoreV1Operations operations, string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNamespacedPodAttachAsync>d__113")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNamespacedPodAttachAsync(ICoreV1Operations operations, string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Binding CreateNamespacedPodBinding(ICoreV1Operations operations, V1Binding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedPodBindingAsync>d__115")]
[ExtensionAttribute]
public static Task`1<V1Binding> CreateNamespacedPodBindingAsync(ICoreV1Operations operations, V1Binding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod ReadNamespacedPodEphemeralcontainers(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedPodEphemeralcontainersAsync>d__117")]
[ExtensionAttribute]
public static Task`1<V1Pod> ReadNamespacedPodEphemeralcontainersAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod PatchNamespacedPodEphemeralcontainers(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedPodEphemeralcontainersAsync>d__119")]
[ExtensionAttribute]
public static Task`1<V1Pod> PatchNamespacedPodEphemeralcontainersAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod ReplaceNamespacedPodEphemeralcontainers(ICoreV1Operations operations, V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedPodEphemeralcontainersAsync>d__121")]
[ExtensionAttribute]
public static Task`1<V1Pod> ReplaceNamespacedPodEphemeralcontainersAsync(ICoreV1Operations operations, V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Eviction CreateNamespacedPodEviction(ICoreV1Operations operations, V1Eviction body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedPodEvictionAsync>d__123")]
[ExtensionAttribute]
public static Task`1<V1Eviction> CreateNamespacedPodEvictionAsync(ICoreV1Operations operations, V1Eviction body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNamespacedPodExec(ICoreV1Operations operations, string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNamespacedPodExecAsync>d__125")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNamespacedPodExecAsync(ICoreV1Operations operations, string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNamespacedPodExec(ICoreV1Operations operations, string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNamespacedPodExecAsync>d__127")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNamespacedPodExecAsync(ICoreV1Operations operations, string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ReadNamespacedPodLog(ICoreV1Operations operations, string name, string namespaceParameter, string container, Nullable`1<bool> follow, Nullable`1<bool> insecureSkipTLSVerifyBackend, Nullable`1<int> limitBytes, Nullable`1<bool> pretty, Nullable`1<bool> previous, Nullable`1<int> sinceSeconds, Nullable`1<int> tailLines, Nullable`1<bool> timestamps);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedPodLogAsync>d__129")]
[ExtensionAttribute]
public static Task`1<Stream> ReadNamespacedPodLogAsync(ICoreV1Operations operations, string name, string namespaceParameter, string container, Nullable`1<bool> follow, Nullable`1<bool> insecureSkipTLSVerifyBackend, Nullable`1<int> limitBytes, Nullable`1<bool> pretty, Nullable`1<bool> previous, Nullable`1<int> sinceSeconds, Nullable`1<int> tailLines, Nullable`1<bool> timestamps, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNamespacedPodPortforward(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<int> ports);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNamespacedPodPortforwardAsync>d__131")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNamespacedPodPortforwardAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<int> ports, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNamespacedPodPortforward(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<int> ports);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNamespacedPodPortforwardAsync>d__133")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNamespacedPodPortforwardAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<int> ports, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectDeleteNamespacedPodProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectDeleteNamespacedPodProxyAsync>d__135")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectDeleteNamespacedPodProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNamespacedPodProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNamespacedPodProxyAsync>d__137")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNamespacedPodProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectHeadNamespacedPodProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectHeadNamespacedPodProxyAsync>d__139")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectHeadNamespacedPodProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPatchNamespacedPodProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPatchNamespacedPodProxyAsync>d__141")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPatchNamespacedPodProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNamespacedPodProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNamespacedPodProxyAsync>d__143")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNamespacedPodProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPutNamespacedPodProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPutNamespacedPodProxyAsync>d__145")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPutNamespacedPodProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectDeleteNamespacedPodProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectDeleteNamespacedPodProxyWithPathAsync>d__147")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectDeleteNamespacedPodProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNamespacedPodProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNamespacedPodProxyWithPathAsync>d__149")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNamespacedPodProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectHeadNamespacedPodProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectHeadNamespacedPodProxyWithPathAsync>d__151")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectHeadNamespacedPodProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPatchNamespacedPodProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPatchNamespacedPodProxyWithPathAsync>d__153")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPatchNamespacedPodProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNamespacedPodProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNamespacedPodProxyWithPathAsync>d__155")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNamespacedPodProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPutNamespacedPodProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPutNamespacedPodProxyWithPathAsync>d__157")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPutNamespacedPodProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod ReadNamespacedPodStatus(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedPodStatusAsync>d__159")]
[ExtensionAttribute]
public static Task`1<V1Pod> ReadNamespacedPodStatusAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod PatchNamespacedPodStatus(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedPodStatusAsync>d__161")]
[ExtensionAttribute]
public static Task`1<V1Pod> PatchNamespacedPodStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Pod ReplaceNamespacedPodStatus(ICoreV1Operations operations, V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedPodStatusAsync>d__163")]
[ExtensionAttribute]
public static Task`1<V1Pod> ReplaceNamespacedPodStatusAsync(ICoreV1Operations operations, V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedPodTemplate(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedPodTemplateAsync>d__165")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedPodTemplateAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodTemplateList ListNamespacedPodTemplate(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedPodTemplateAsync>d__167")]
[ExtensionAttribute]
public static Task`1<V1PodTemplateList> ListNamespacedPodTemplateAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodTemplate CreateNamespacedPodTemplate(ICoreV1Operations operations, V1PodTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedPodTemplateAsync>d__169")]
[ExtensionAttribute]
public static Task`1<V1PodTemplate> CreateNamespacedPodTemplateAsync(ICoreV1Operations operations, V1PodTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodTemplate DeleteNamespacedPodTemplate(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedPodTemplateAsync>d__171")]
[ExtensionAttribute]
public static Task`1<V1PodTemplate> DeleteNamespacedPodTemplateAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodTemplate ReadNamespacedPodTemplate(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedPodTemplateAsync>d__173")]
[ExtensionAttribute]
public static Task`1<V1PodTemplate> ReadNamespacedPodTemplateAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodTemplate PatchNamespacedPodTemplate(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedPodTemplateAsync>d__175")]
[ExtensionAttribute]
public static Task`1<V1PodTemplate> PatchNamespacedPodTemplateAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodTemplate ReplaceNamespacedPodTemplate(ICoreV1Operations operations, V1PodTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedPodTemplateAsync>d__177")]
[ExtensionAttribute]
public static Task`1<V1PodTemplate> ReplaceNamespacedPodTemplateAsync(ICoreV1Operations operations, V1PodTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedReplicationController(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedReplicationControllerAsync>d__179")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedReplicationControllerAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationControllerList ListNamespacedReplicationController(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedReplicationControllerAsync>d__181")]
[ExtensionAttribute]
public static Task`1<V1ReplicationControllerList> ListNamespacedReplicationControllerAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationController CreateNamespacedReplicationController(ICoreV1Operations operations, V1ReplicationController body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedReplicationControllerAsync>d__183")]
[ExtensionAttribute]
public static Task`1<V1ReplicationController> CreateNamespacedReplicationControllerAsync(ICoreV1Operations operations, V1ReplicationController body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedReplicationController(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedReplicationControllerAsync>d__185")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedReplicationControllerAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationController ReadNamespacedReplicationController(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedReplicationControllerAsync>d__187")]
[ExtensionAttribute]
public static Task`1<V1ReplicationController> ReadNamespacedReplicationControllerAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationController PatchNamespacedReplicationController(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedReplicationControllerAsync>d__189")]
[ExtensionAttribute]
public static Task`1<V1ReplicationController> PatchNamespacedReplicationControllerAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationController ReplaceNamespacedReplicationController(ICoreV1Operations operations, V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedReplicationControllerAsync>d__191")]
[ExtensionAttribute]
public static Task`1<V1ReplicationController> ReplaceNamespacedReplicationControllerAsync(ICoreV1Operations operations, V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReadNamespacedReplicationControllerScale(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedReplicationControllerScaleAsync>d__193")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReadNamespacedReplicationControllerScaleAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale PatchNamespacedReplicationControllerScale(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedReplicationControllerScaleAsync>d__195")]
[ExtensionAttribute]
public static Task`1<V1Scale> PatchNamespacedReplicationControllerScaleAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Scale ReplaceNamespacedReplicationControllerScale(ICoreV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedReplicationControllerScaleAsync>d__197")]
[ExtensionAttribute]
public static Task`1<V1Scale> ReplaceNamespacedReplicationControllerScaleAsync(ICoreV1Operations operations, V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationController ReadNamespacedReplicationControllerStatus(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedReplicationControllerStatusAsync>d__199")]
[ExtensionAttribute]
public static Task`1<V1ReplicationController> ReadNamespacedReplicationControllerStatusAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationController PatchNamespacedReplicationControllerStatus(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedReplicationControllerStatusAsync>d__201")]
[ExtensionAttribute]
public static Task`1<V1ReplicationController> PatchNamespacedReplicationControllerStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationController ReplaceNamespacedReplicationControllerStatus(ICoreV1Operations operations, V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedReplicationControllerStatusAsync>d__203")]
[ExtensionAttribute]
public static Task`1<V1ReplicationController> ReplaceNamespacedReplicationControllerStatusAsync(ICoreV1Operations operations, V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedResourceQuota(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedResourceQuotaAsync>d__205")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedResourceQuotaAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuotaList ListNamespacedResourceQuota(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedResourceQuotaAsync>d__207")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuotaList> ListNamespacedResourceQuotaAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota CreateNamespacedResourceQuota(ICoreV1Operations operations, V1ResourceQuota body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedResourceQuotaAsync>d__209")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> CreateNamespacedResourceQuotaAsync(ICoreV1Operations operations, V1ResourceQuota body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota DeleteNamespacedResourceQuota(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedResourceQuotaAsync>d__211")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> DeleteNamespacedResourceQuotaAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota ReadNamespacedResourceQuota(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedResourceQuotaAsync>d__213")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> ReadNamespacedResourceQuotaAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota PatchNamespacedResourceQuota(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedResourceQuotaAsync>d__215")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> PatchNamespacedResourceQuotaAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota ReplaceNamespacedResourceQuota(ICoreV1Operations operations, V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedResourceQuotaAsync>d__217")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> ReplaceNamespacedResourceQuotaAsync(ICoreV1Operations operations, V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota ReadNamespacedResourceQuotaStatus(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedResourceQuotaStatusAsync>d__219")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> ReadNamespacedResourceQuotaStatusAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota PatchNamespacedResourceQuotaStatus(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedResourceQuotaStatusAsync>d__221")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> PatchNamespacedResourceQuotaStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuota ReplaceNamespacedResourceQuotaStatus(ICoreV1Operations operations, V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedResourceQuotaStatusAsync>d__223")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuota> ReplaceNamespacedResourceQuotaStatusAsync(ICoreV1Operations operations, V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedSecret(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedSecretAsync>d__225")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedSecretAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1SecretList ListNamespacedSecret(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedSecretAsync>d__227")]
[ExtensionAttribute]
public static Task`1<V1SecretList> ListNamespacedSecretAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Secret CreateNamespacedSecret(ICoreV1Operations operations, V1Secret body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedSecretAsync>d__229")]
[ExtensionAttribute]
public static Task`1<V1Secret> CreateNamespacedSecretAsync(ICoreV1Operations operations, V1Secret body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedSecret(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedSecretAsync>d__231")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedSecretAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Secret ReadNamespacedSecret(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedSecretAsync>d__233")]
[ExtensionAttribute]
public static Task`1<V1Secret> ReadNamespacedSecretAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Secret PatchNamespacedSecret(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedSecretAsync>d__235")]
[ExtensionAttribute]
public static Task`1<V1Secret> PatchNamespacedSecretAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Secret ReplaceNamespacedSecret(ICoreV1Operations operations, V1Secret body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedSecretAsync>d__237")]
[ExtensionAttribute]
public static Task`1<V1Secret> ReplaceNamespacedSecretAsync(ICoreV1Operations operations, V1Secret body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedServiceAccount(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedServiceAccountAsync>d__239")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedServiceAccountAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceAccountList ListNamespacedServiceAccount(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedServiceAccountAsync>d__241")]
[ExtensionAttribute]
public static Task`1<V1ServiceAccountList> ListNamespacedServiceAccountAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceAccount CreateNamespacedServiceAccount(ICoreV1Operations operations, V1ServiceAccount body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedServiceAccountAsync>d__243")]
[ExtensionAttribute]
public static Task`1<V1ServiceAccount> CreateNamespacedServiceAccountAsync(ICoreV1Operations operations, V1ServiceAccount body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceAccount DeleteNamespacedServiceAccount(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedServiceAccountAsync>d__245")]
[ExtensionAttribute]
public static Task`1<V1ServiceAccount> DeleteNamespacedServiceAccountAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceAccount ReadNamespacedServiceAccount(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedServiceAccountAsync>d__247")]
[ExtensionAttribute]
public static Task`1<V1ServiceAccount> ReadNamespacedServiceAccountAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceAccount PatchNamespacedServiceAccount(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedServiceAccountAsync>d__249")]
[ExtensionAttribute]
public static Task`1<V1ServiceAccount> PatchNamespacedServiceAccountAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceAccount ReplaceNamespacedServiceAccount(ICoreV1Operations operations, V1ServiceAccount body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedServiceAccountAsync>d__251")]
[ExtensionAttribute]
public static Task`1<V1ServiceAccount> ReplaceNamespacedServiceAccountAsync(ICoreV1Operations operations, V1ServiceAccount body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Authenticationv1TokenRequest CreateNamespacedServiceAccountToken(ICoreV1Operations operations, Authenticationv1TokenRequest body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedServiceAccountTokenAsync>d__253")]
[ExtensionAttribute]
public static Task`1<Authenticationv1TokenRequest> CreateNamespacedServiceAccountTokenAsync(ICoreV1Operations operations, Authenticationv1TokenRequest body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedService(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNamespacedServiceAsync>d__255")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedServiceAsync(ICoreV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceList ListNamespacedService(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNamespacedServiceAsync>d__257")]
[ExtensionAttribute]
public static Task`1<V1ServiceList> ListNamespacedServiceAsync(ICoreV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service CreateNamespacedService(ICoreV1Operations operations, V1Service body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNamespacedServiceAsync>d__259")]
[ExtensionAttribute]
public static Task`1<V1Service> CreateNamespacedServiceAsync(ICoreV1Operations operations, V1Service body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service DeleteNamespacedService(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespacedServiceAsync>d__261")]
[ExtensionAttribute]
public static Task`1<V1Service> DeleteNamespacedServiceAsync(ICoreV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service ReadNamespacedService(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedServiceAsync>d__263")]
[ExtensionAttribute]
public static Task`1<V1Service> ReadNamespacedServiceAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service PatchNamespacedService(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedServiceAsync>d__265")]
[ExtensionAttribute]
public static Task`1<V1Service> PatchNamespacedServiceAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service ReplaceNamespacedService(ICoreV1Operations operations, V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedServiceAsync>d__267")]
[ExtensionAttribute]
public static Task`1<V1Service> ReplaceNamespacedServiceAsync(ICoreV1Operations operations, V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectDeleteNamespacedServiceProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectDeleteNamespacedServiceProxyAsync>d__269")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectDeleteNamespacedServiceProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNamespacedServiceProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNamespacedServiceProxyAsync>d__271")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNamespacedServiceProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectHeadNamespacedServiceProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectHeadNamespacedServiceProxyAsync>d__273")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectHeadNamespacedServiceProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPatchNamespacedServiceProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPatchNamespacedServiceProxyAsync>d__275")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPatchNamespacedServiceProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNamespacedServiceProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNamespacedServiceProxyAsync>d__277")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNamespacedServiceProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPutNamespacedServiceProxy(ICoreV1Operations operations, string name, string namespaceParameter, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPutNamespacedServiceProxyAsync>d__279")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPutNamespacedServiceProxyAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectDeleteNamespacedServiceProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectDeleteNamespacedServiceProxyWithPathAsync>d__281")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectDeleteNamespacedServiceProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNamespacedServiceProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNamespacedServiceProxyWithPathAsync>d__283")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNamespacedServiceProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectHeadNamespacedServiceProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectHeadNamespacedServiceProxyWithPathAsync>d__285")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectHeadNamespacedServiceProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPatchNamespacedServiceProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPatchNamespacedServiceProxyWithPathAsync>d__287")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPatchNamespacedServiceProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNamespacedServiceProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNamespacedServiceProxyWithPathAsync>d__289")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNamespacedServiceProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPutNamespacedServiceProxyWithPath(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPutNamespacedServiceProxyWithPathAsync>d__291")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPutNamespacedServiceProxyWithPathAsync(ICoreV1Operations operations, string name, string namespaceParameter, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service ReadNamespacedServiceStatus(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespacedServiceStatusAsync>d__293")]
[ExtensionAttribute]
public static Task`1<V1Service> ReadNamespacedServiceStatusAsync(ICoreV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service PatchNamespacedServiceStatus(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespacedServiceStatusAsync>d__295")]
[ExtensionAttribute]
public static Task`1<V1Service> PatchNamespacedServiceStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Service ReplaceNamespacedServiceStatus(ICoreV1Operations operations, V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespacedServiceStatusAsync>d__297")]
[ExtensionAttribute]
public static Task`1<V1Service> ReplaceNamespacedServiceStatusAsync(ICoreV1Operations operations, V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespace(ICoreV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNamespaceAsync>d__299")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespaceAsync(ICoreV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace ReadNamespace(ICoreV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespaceAsync>d__301")]
[ExtensionAttribute]
public static Task`1<V1Namespace> ReadNamespaceAsync(ICoreV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace PatchNamespace(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespaceAsync>d__303")]
[ExtensionAttribute]
public static Task`1<V1Namespace> PatchNamespaceAsync(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace ReplaceNamespace(ICoreV1Operations operations, V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespaceAsync>d__305")]
[ExtensionAttribute]
public static Task`1<V1Namespace> ReplaceNamespaceAsync(ICoreV1Operations operations, V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace ReplaceNamespaceFinalize(ICoreV1Operations operations, V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespaceFinalizeAsync>d__307")]
[ExtensionAttribute]
public static Task`1<V1Namespace> ReplaceNamespaceFinalizeAsync(ICoreV1Operations operations, V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace ReadNamespaceStatus(ICoreV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNamespaceStatusAsync>d__309")]
[ExtensionAttribute]
public static Task`1<V1Namespace> ReadNamespaceStatusAsync(ICoreV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace PatchNamespaceStatus(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNamespaceStatusAsync>d__311")]
[ExtensionAttribute]
public static Task`1<V1Namespace> PatchNamespaceStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Namespace ReplaceNamespaceStatus(ICoreV1Operations operations, V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNamespaceStatusAsync>d__313")]
[ExtensionAttribute]
public static Task`1<V1Namespace> ReplaceNamespaceStatusAsync(ICoreV1Operations operations, V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNode(ICoreV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionNodeAsync>d__315")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNodeAsync(ICoreV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NodeList ListNode(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListNodeAsync>d__317")]
[ExtensionAttribute]
public static Task`1<V1NodeList> ListNodeAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Node CreateNode(ICoreV1Operations operations, V1Node body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreateNodeAsync>d__319")]
[ExtensionAttribute]
public static Task`1<V1Node> CreateNodeAsync(ICoreV1Operations operations, V1Node body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNode(ICoreV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteNodeAsync>d__321")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNodeAsync(ICoreV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Node ReadNode(ICoreV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNodeAsync>d__323")]
[ExtensionAttribute]
public static Task`1<V1Node> ReadNodeAsync(ICoreV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Node PatchNode(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNodeAsync>d__325")]
[ExtensionAttribute]
public static Task`1<V1Node> PatchNodeAsync(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Node ReplaceNode(ICoreV1Operations operations, V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNodeAsync>d__327")]
[ExtensionAttribute]
public static Task`1<V1Node> ReplaceNodeAsync(ICoreV1Operations operations, V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectDeleteNodeProxy(ICoreV1Operations operations, string name, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectDeleteNodeProxyAsync>d__329")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectDeleteNodeProxyAsync(ICoreV1Operations operations, string name, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNodeProxy(ICoreV1Operations operations, string name, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNodeProxyAsync>d__331")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNodeProxyAsync(ICoreV1Operations operations, string name, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectHeadNodeProxy(ICoreV1Operations operations, string name, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectHeadNodeProxyAsync>d__333")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectHeadNodeProxyAsync(ICoreV1Operations operations, string name, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPatchNodeProxy(ICoreV1Operations operations, string name, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPatchNodeProxyAsync>d__335")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPatchNodeProxyAsync(ICoreV1Operations operations, string name, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNodeProxy(ICoreV1Operations operations, string name, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNodeProxyAsync>d__337")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNodeProxyAsync(ICoreV1Operations operations, string name, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPutNodeProxy(ICoreV1Operations operations, string name, string path);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPutNodeProxyAsync>d__339")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPutNodeProxyAsync(ICoreV1Operations operations, string name, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectDeleteNodeProxyWithPath(ICoreV1Operations operations, string name, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectDeleteNodeProxyWithPathAsync>d__341")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectDeleteNodeProxyWithPathAsync(ICoreV1Operations operations, string name, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectGetNodeProxyWithPath(ICoreV1Operations operations, string name, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectGetNodeProxyWithPathAsync>d__343")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectGetNodeProxyWithPathAsync(ICoreV1Operations operations, string name, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectHeadNodeProxyWithPath(ICoreV1Operations operations, string name, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectHeadNodeProxyWithPathAsync>d__345")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectHeadNodeProxyWithPathAsync(ICoreV1Operations operations, string name, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPatchNodeProxyWithPath(ICoreV1Operations operations, string name, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPatchNodeProxyWithPathAsync>d__347")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPatchNodeProxyWithPathAsync(ICoreV1Operations operations, string name, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPostNodeProxyWithPath(ICoreV1Operations operations, string name, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPostNodeProxyWithPathAsync>d__349")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPostNodeProxyWithPathAsync(ICoreV1Operations operations, string name, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream ConnectPutNodeProxyWithPath(ICoreV1Operations operations, string name, string path, string path1);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ConnectPutNodeProxyWithPathAsync>d__351")]
[ExtensionAttribute]
public static Task`1<Stream> ConnectPutNodeProxyWithPathAsync(ICoreV1Operations operations, string name, string path, string path1, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Node ReadNodeStatus(ICoreV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadNodeStatusAsync>d__353")]
[ExtensionAttribute]
public static Task`1<V1Node> ReadNodeStatusAsync(ICoreV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Node PatchNodeStatus(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchNodeStatusAsync>d__355")]
[ExtensionAttribute]
public static Task`1<V1Node> PatchNodeStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Node ReplaceNodeStatus(ICoreV1Operations operations, V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplaceNodeStatusAsync>d__357")]
[ExtensionAttribute]
public static Task`1<V1Node> ReplaceNodeStatusAsync(ICoreV1Operations operations, V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeClaimList ListPersistentVolumeClaimForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListPersistentVolumeClaimForAllNamespacesAsync>d__359")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeClaimList> ListPersistentVolumeClaimForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionPersistentVolume(ICoreV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeleteCollectionPersistentVolumeAsync>d__361")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionPersistentVolumeAsync(ICoreV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolumeList ListPersistentVolume(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListPersistentVolumeAsync>d__363")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolumeList> ListPersistentVolumeAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume CreatePersistentVolume(ICoreV1Operations operations, V1PersistentVolume body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<CreatePersistentVolumeAsync>d__365")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> CreatePersistentVolumeAsync(ICoreV1Operations operations, V1PersistentVolume body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume DeletePersistentVolume(ICoreV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<DeletePersistentVolumeAsync>d__367")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> DeletePersistentVolumeAsync(ICoreV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume ReadPersistentVolume(ICoreV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadPersistentVolumeAsync>d__369")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> ReadPersistentVolumeAsync(ICoreV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume PatchPersistentVolume(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchPersistentVolumeAsync>d__371")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> PatchPersistentVolumeAsync(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume ReplacePersistentVolume(ICoreV1Operations operations, V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplacePersistentVolumeAsync>d__373")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> ReplacePersistentVolumeAsync(ICoreV1Operations operations, V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume ReadPersistentVolumeStatus(ICoreV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReadPersistentVolumeStatusAsync>d__375")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> ReadPersistentVolumeStatusAsync(ICoreV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume PatchPersistentVolumeStatus(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<PatchPersistentVolumeStatusAsync>d__377")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> PatchPersistentVolumeStatusAsync(ICoreV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PersistentVolume ReplacePersistentVolumeStatus(ICoreV1Operations operations, V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ReplacePersistentVolumeStatusAsync>d__379")]
[ExtensionAttribute]
public static Task`1<V1PersistentVolume> ReplacePersistentVolumeStatusAsync(ICoreV1Operations operations, V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodList ListPodForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListPodForAllNamespacesAsync>d__381")]
[ExtensionAttribute]
public static Task`1<V1PodList> ListPodForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodTemplateList ListPodTemplateForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListPodTemplateForAllNamespacesAsync>d__383")]
[ExtensionAttribute]
public static Task`1<V1PodTemplateList> ListPodTemplateForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ReplicationControllerList ListReplicationControllerForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListReplicationControllerForAllNamespacesAsync>d__385")]
[ExtensionAttribute]
public static Task`1<V1ReplicationControllerList> ListReplicationControllerForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ResourceQuotaList ListResourceQuotaForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListResourceQuotaForAllNamespacesAsync>d__387")]
[ExtensionAttribute]
public static Task`1<V1ResourceQuotaList> ListResourceQuotaForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1SecretList ListSecretForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListSecretForAllNamespacesAsync>d__389")]
[ExtensionAttribute]
public static Task`1<V1SecretList> ListSecretForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceAccountList ListServiceAccountForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListServiceAccountForAllNamespacesAsync>d__391")]
[ExtensionAttribute]
public static Task`1<V1ServiceAccountList> ListServiceAccountForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ServiceList ListServiceForAllNamespaces(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.CoreV1OperationsExtensions/<ListServiceForAllNamespacesAsync>d__393")]
[ExtensionAttribute]
public static Task`1<V1ServiceList> ListServiceForAllNamespacesAsync(ICoreV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.CustomObjectsOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(ICustomObjectsOperations operations, string group, string version);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(ICustomObjectsOperations operations, string group, string version, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ListClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [ExtensionAttribute]
public static T ListClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ListClusterCustomObjectAsync>d__4")]
[ExtensionAttribute]
public static Task`1<object> ListClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ListClusterCustomObjectAsync>d__5`1")]
[ExtensionAttribute]
public static Task`1<T> ListClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object CreateClusterCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [ExtensionAttribute]
public static T CreateClusterCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<CreateClusterCustomObjectAsync>d__8")]
[ExtensionAttribute]
public static Task`1<object> CreateClusterCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<CreateClusterCustomObjectAsync>d__9`1")]
[ExtensionAttribute]
public static Task`1<T> CreateClusterCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object DeleteCollectionClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty);
    [ExtensionAttribute]
public static T DeleteCollectionClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteCollectionClusterCustomObjectAsync>d__12")]
[ExtensionAttribute]
public static Task`1<object> DeleteCollectionClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteCollectionClusterCustomObjectAsync>d__13`1")]
[ExtensionAttribute]
public static Task`1<T> DeleteCollectionClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ListNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [ExtensionAttribute]
public static T ListNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ListNamespacedCustomObjectAsync>d__16")]
[ExtensionAttribute]
public static Task`1<object> ListNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ListNamespacedCustomObjectAsync>d__17`1")]
[ExtensionAttribute]
public static Task`1<T> ListNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object CreateNamespacedCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [ExtensionAttribute]
public static T CreateNamespacedCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<CreateNamespacedCustomObjectAsync>d__20")]
[ExtensionAttribute]
public static Task`1<object> CreateNamespacedCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<CreateNamespacedCustomObjectAsync>d__21`1")]
[ExtensionAttribute]
public static Task`1<T> CreateNamespacedCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object DeleteCollectionNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty);
    [ExtensionAttribute]
public static T DeleteCollectionNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteCollectionNamespacedCustomObjectAsync>d__24")]
[ExtensionAttribute]
public static Task`1<object> DeleteCollectionNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteCollectionNamespacedCustomObjectAsync>d__25`1")]
[ExtensionAttribute]
public static Task`1<T> DeleteCollectionNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object GetClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, string name);
    [ExtensionAttribute]
public static T GetClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, string name);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetClusterCustomObjectAsync>d__28")]
[ExtensionAttribute]
public static Task`1<object> GetClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetClusterCustomObjectAsync>d__29`1")]
[ExtensionAttribute]
public static Task`1<T> GetClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object DeleteClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun);
    [ExtensionAttribute]
public static T DeleteClusterCustomObject(ICustomObjectsOperations operations, string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteClusterCustomObjectAsync>d__32")]
[ExtensionAttribute]
public static Task`1<object> DeleteClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteClusterCustomObjectAsync>d__33`1")]
[ExtensionAttribute]
public static Task`1<T> DeleteClusterCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object PatchClusterCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [ExtensionAttribute]
public static T PatchClusterCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchClusterCustomObjectAsync>d__36")]
[ExtensionAttribute]
public static Task`1<object> PatchClusterCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchClusterCustomObjectAsync>d__37`1")]
[ExtensionAttribute]
public static Task`1<T> PatchClusterCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ReplaceClusterCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [ExtensionAttribute]
public static T ReplaceClusterCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceClusterCustomObjectAsync>d__40")]
[ExtensionAttribute]
public static Task`1<object> ReplaceClusterCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceClusterCustomObjectAsync>d__41`1")]
[ExtensionAttribute]
public static Task`1<T> ReplaceClusterCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object GetClusterCustomObjectStatus(ICustomObjectsOperations operations, string group, string version, string plural, string name);
    [ExtensionAttribute]
public static T GetClusterCustomObjectStatus(ICustomObjectsOperations operations, string group, string version, string plural, string name);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetClusterCustomObjectStatusAsync>d__44")]
[ExtensionAttribute]
public static Task`1<object> GetClusterCustomObjectStatusAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetClusterCustomObjectStatusAsync>d__45`1")]
[ExtensionAttribute]
public static Task`1<T> GetClusterCustomObjectStatusAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ReplaceClusterCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [ExtensionAttribute]
public static T ReplaceClusterCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceClusterCustomObjectStatusAsync>d__48")]
[ExtensionAttribute]
public static Task`1<object> ReplaceClusterCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceClusterCustomObjectStatusAsync>d__49`1")]
[ExtensionAttribute]
public static Task`1<T> ReplaceClusterCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object PatchClusterCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [ExtensionAttribute]
public static T PatchClusterCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchClusterCustomObjectStatusAsync>d__52")]
[ExtensionAttribute]
public static Task`1<object> PatchClusterCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchClusterCustomObjectStatusAsync>d__53`1")]
[ExtensionAttribute]
public static Task`1<T> PatchClusterCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object GetClusterCustomObjectScale(ICustomObjectsOperations operations, string group, string version, string plural, string name);
    [ExtensionAttribute]
public static T GetClusterCustomObjectScale(ICustomObjectsOperations operations, string group, string version, string plural, string name);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetClusterCustomObjectScaleAsync>d__56")]
[ExtensionAttribute]
public static Task`1<object> GetClusterCustomObjectScaleAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetClusterCustomObjectScaleAsync>d__57`1")]
[ExtensionAttribute]
public static Task`1<T> GetClusterCustomObjectScaleAsync(ICustomObjectsOperations operations, string group, string version, string plural, string name, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ReplaceClusterCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [ExtensionAttribute]
public static T ReplaceClusterCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceClusterCustomObjectScaleAsync>d__60")]
[ExtensionAttribute]
public static Task`1<object> ReplaceClusterCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceClusterCustomObjectScaleAsync>d__61`1")]
[ExtensionAttribute]
public static Task`1<T> ReplaceClusterCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object PatchClusterCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [ExtensionAttribute]
public static T PatchClusterCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchClusterCustomObjectScaleAsync>d__64")]
[ExtensionAttribute]
public static Task`1<object> PatchClusterCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchClusterCustomObjectScaleAsync>d__65`1")]
[ExtensionAttribute]
public static Task`1<T> PatchClusterCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object GetNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name);
    [ExtensionAttribute]
public static T GetNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetNamespacedCustomObjectAsync>d__68")]
[ExtensionAttribute]
public static Task`1<object> GetNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetNamespacedCustomObjectAsync>d__69`1")]
[ExtensionAttribute]
public static Task`1<T> GetNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object DeleteNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun);
    [ExtensionAttribute]
public static T DeleteNamespacedCustomObject(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteNamespacedCustomObjectAsync>d__72")]
[ExtensionAttribute]
public static Task`1<object> DeleteNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<DeleteNamespacedCustomObjectAsync>d__73`1")]
[ExtensionAttribute]
public static Task`1<T> DeleteNamespacedCustomObjectAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object PatchNamespacedCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [ExtensionAttribute]
public static T PatchNamespacedCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchNamespacedCustomObjectAsync>d__76")]
[ExtensionAttribute]
public static Task`1<object> PatchNamespacedCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchNamespacedCustomObjectAsync>d__77`1")]
[ExtensionAttribute]
public static Task`1<T> PatchNamespacedCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ReplaceNamespacedCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [ExtensionAttribute]
public static T ReplaceNamespacedCustomObject(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceNamespacedCustomObjectAsync>d__80")]
[ExtensionAttribute]
public static Task`1<object> ReplaceNamespacedCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceNamespacedCustomObjectAsync>d__81`1")]
[ExtensionAttribute]
public static Task`1<T> ReplaceNamespacedCustomObjectAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object GetNamespacedCustomObjectStatus(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name);
    [ExtensionAttribute]
public static T GetNamespacedCustomObjectStatus(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetNamespacedCustomObjectStatusAsync>d__84")]
[ExtensionAttribute]
public static Task`1<object> GetNamespacedCustomObjectStatusAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetNamespacedCustomObjectStatusAsync>d__85`1")]
[ExtensionAttribute]
public static Task`1<T> GetNamespacedCustomObjectStatusAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ReplaceNamespacedCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [ExtensionAttribute]
public static T ReplaceNamespacedCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceNamespacedCustomObjectStatusAsync>d__88")]
[ExtensionAttribute]
public static Task`1<object> ReplaceNamespacedCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceNamespacedCustomObjectStatusAsync>d__89`1")]
[ExtensionAttribute]
public static Task`1<T> ReplaceNamespacedCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object PatchNamespacedCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [ExtensionAttribute]
public static T PatchNamespacedCustomObjectStatus(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchNamespacedCustomObjectStatusAsync>d__92")]
[ExtensionAttribute]
public static Task`1<object> PatchNamespacedCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchNamespacedCustomObjectStatusAsync>d__93`1")]
[ExtensionAttribute]
public static Task`1<T> PatchNamespacedCustomObjectStatusAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object GetNamespacedCustomObjectScale(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name);
    [ExtensionAttribute]
public static T GetNamespacedCustomObjectScale(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetNamespacedCustomObjectScaleAsync>d__96")]
[ExtensionAttribute]
public static Task`1<object> GetNamespacedCustomObjectScaleAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<GetNamespacedCustomObjectScaleAsync>d__97`1")]
[ExtensionAttribute]
public static Task`1<T> GetNamespacedCustomObjectScaleAsync(ICustomObjectsOperations operations, string group, string version, string namespaceParameter, string plural, string name, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ReplaceNamespacedCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [ExtensionAttribute]
public static T ReplaceNamespacedCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceNamespacedCustomObjectScaleAsync>d__100")]
[ExtensionAttribute]
public static Task`1<object> ReplaceNamespacedCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<ReplaceNamespacedCustomObjectScaleAsync>d__101`1")]
[ExtensionAttribute]
public static Task`1<T> ReplaceNamespacedCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object PatchNamespacedCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [ExtensionAttribute]
public static T PatchNamespacedCustomObjectScale(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchNamespacedCustomObjectScaleAsync>d__104")]
[ExtensionAttribute]
public static Task`1<object> PatchNamespacedCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.CustomObjectsOperationsExtensions/<PatchNamespacedCustomObjectScaleAsync>d__105`1")]
[ExtensionAttribute]
public static Task`1<T> PatchNamespacedCustomObjectScaleAsync(ICustomObjectsOperations operations, object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.DiscoveryOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IDiscoveryOperations operations);
    [AsyncStateMachineAttribute("k8s.DiscoveryOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IDiscoveryOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.DiscoveryV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IDiscoveryV1Operations operations);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IDiscoveryV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointSliceList ListEndpointSliceForAllNamespaces(IDiscoveryV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<ListEndpointSliceForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1EndpointSliceList> ListEndpointSliceForAllNamespacesAsync(IDiscoveryV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedEndpointSlice(IDiscoveryV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<DeleteCollectionNamespacedEndpointSliceAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedEndpointSliceAsync(IDiscoveryV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointSliceList ListNamespacedEndpointSlice(IDiscoveryV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<ListNamespacedEndpointSliceAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1EndpointSliceList> ListNamespacedEndpointSliceAsync(IDiscoveryV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointSlice CreateNamespacedEndpointSlice(IDiscoveryV1Operations operations, V1EndpointSlice body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<CreateNamespacedEndpointSliceAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1EndpointSlice> CreateNamespacedEndpointSliceAsync(IDiscoveryV1Operations operations, V1EndpointSlice body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedEndpointSlice(IDiscoveryV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<DeleteNamespacedEndpointSliceAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedEndpointSliceAsync(IDiscoveryV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointSlice ReadNamespacedEndpointSlice(IDiscoveryV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<ReadNamespacedEndpointSliceAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1EndpointSlice> ReadNamespacedEndpointSliceAsync(IDiscoveryV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointSlice PatchNamespacedEndpointSlice(IDiscoveryV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<PatchNamespacedEndpointSliceAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1EndpointSlice> PatchNamespacedEndpointSliceAsync(IDiscoveryV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1EndpointSlice ReplaceNamespacedEndpointSlice(IDiscoveryV1Operations operations, V1EndpointSlice body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.DiscoveryV1OperationsExtensions/<ReplaceNamespacedEndpointSliceAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1EndpointSlice> ReplaceNamespacedEndpointSliceAsync(IDiscoveryV1Operations operations, V1EndpointSlice body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.EventsOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IEventsOperations operations);
    [AsyncStateMachineAttribute("k8s.EventsOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IEventsOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.EventsV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IEventsV1Operations operations);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IEventsV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Eventsv1EventList ListEventForAllNamespaces(IEventsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<ListEventForAllNamespacesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<Eventsv1EventList> ListEventForAllNamespacesAsync(IEventsV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedEvent(IEventsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<DeleteCollectionNamespacedEventAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedEventAsync(IEventsV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Eventsv1EventList ListNamespacedEvent(IEventsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<ListNamespacedEventAsync>d__7")]
[ExtensionAttribute]
public static Task`1<Eventsv1EventList> ListNamespacedEventAsync(IEventsV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Eventsv1Event CreateNamespacedEvent(IEventsV1Operations operations, Eventsv1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<CreateNamespacedEventAsync>d__9")]
[ExtensionAttribute]
public static Task`1<Eventsv1Event> CreateNamespacedEventAsync(IEventsV1Operations operations, Eventsv1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedEvent(IEventsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<DeleteNamespacedEventAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedEventAsync(IEventsV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Eventsv1Event ReadNamespacedEvent(IEventsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<ReadNamespacedEventAsync>d__13")]
[ExtensionAttribute]
public static Task`1<Eventsv1Event> ReadNamespacedEventAsync(IEventsV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Eventsv1Event PatchNamespacedEvent(IEventsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<PatchNamespacedEventAsync>d__15")]
[ExtensionAttribute]
public static Task`1<Eventsv1Event> PatchNamespacedEventAsync(IEventsV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Eventsv1Event ReplaceNamespacedEvent(IEventsV1Operations operations, Eventsv1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.EventsV1OperationsExtensions/<ReplaceNamespacedEventAsync>d__17")]
[ExtensionAttribute]
public static Task`1<Eventsv1Event> ReplaceNamespacedEventAsync(IEventsV1Operations operations, Eventsv1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
public class k8s.Exceptions.KubeConfigException : Exception {
    public KubeConfigException(string message);
    public KubeConfigException(string message, Exception inner);
}
public class k8s.Exceptions.KubernetesClientException : Exception {
    public KubernetesClientException(string message);
    public KubernetesClientException(string message, Exception inner);
}
public class k8s.ExecAsyncCallback : MulticastDelegate {
    public ExecAsyncCallback(object object, IntPtr method);
    public virtual Task Invoke(Stream stdIn, Stream stdOut, Stream stdErr);
    public virtual IAsyncResult BeginInvoke(Stream stdIn, Stream stdOut, Stream stdErr, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[ExtensionAttribute]
public static class k8s.Extensions : object {
    [ExtensionAttribute]
public static KubernetesEntityAttribute GetKubernetesTypeMetadata(T obj);
    [ExtensionAttribute]
public static KubernetesEntityAttribute GetKubernetesTypeMetadata(Type currentType);
    [ExtensionAttribute]
public static T Initialize(T obj);
    [ExtensionAttribute]
internal static bool IsValidKubernetesName(string value);
}
internal static class k8s.FileSystem : object {
    [CompilerGeneratedAttribute]
private static IFileSystem <Current>k__BackingField;
    public static IFileSystem Current { get; private set; }
    private static FileSystem();
    [CompilerGeneratedAttribute]
public static IFileSystem get_Current();
    [CompilerGeneratedAttribute]
private static void set_Current(IFileSystem value);
    public static IDisposable With(IFileSystem fileSystem);
}
internal class k8s.FloatEmitter : ChainedEventEmitter {
    public FloatEmitter(IEventEmitter nextEmitter);
    public virtual void Emit(ScalarEventInfo eventInfo, IEmitter emitter);
}
[ExtensionAttribute]
public static class k8s.FlowcontrolApiserverOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IFlowcontrolApiserverOperations operations);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IFlowcontrolApiserverOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.FlowcontrolApiserverV1beta3OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IFlowcontrolApiserverV1beta3Operations operations);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IFlowcontrolApiserverV1beta3Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionFlowSchema(IFlowcontrolApiserverV1beta3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<DeleteCollectionFlowSchemaAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionFlowSchemaAsync(IFlowcontrolApiserverV1beta3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchemaList ListFlowSchema(IFlowcontrolApiserverV1beta3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ListFlowSchemaAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchemaList> ListFlowSchemaAsync(IFlowcontrolApiserverV1beta3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchema CreateFlowSchema(IFlowcontrolApiserverV1beta3Operations operations, V1beta3FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<CreateFlowSchemaAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchema> CreateFlowSchemaAsync(IFlowcontrolApiserverV1beta3Operations operations, V1beta3FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteFlowSchema(IFlowcontrolApiserverV1beta3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<DeleteFlowSchemaAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteFlowSchemaAsync(IFlowcontrolApiserverV1beta3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchema ReadFlowSchema(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReadFlowSchemaAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchema> ReadFlowSchemaAsync(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchema PatchFlowSchema(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<PatchFlowSchemaAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchema> PatchFlowSchemaAsync(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchema ReplaceFlowSchema(IFlowcontrolApiserverV1beta3Operations operations, V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReplaceFlowSchemaAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchema> ReplaceFlowSchemaAsync(IFlowcontrolApiserverV1beta3Operations operations, V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchema ReadFlowSchemaStatus(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReadFlowSchemaStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchema> ReadFlowSchemaStatusAsync(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchema PatchFlowSchemaStatus(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<PatchFlowSchemaStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchema> PatchFlowSchemaStatusAsync(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3FlowSchema ReplaceFlowSchemaStatus(IFlowcontrolApiserverV1beta3Operations operations, V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReplaceFlowSchemaStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1beta3FlowSchema> ReplaceFlowSchemaStatusAsync(IFlowcontrolApiserverV1beta3Operations operations, V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionPriorityLevelConfiguration(IFlowcontrolApiserverV1beta3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<DeleteCollectionPriorityLevelConfigurationAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1beta3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfigurationList ListPriorityLevelConfiguration(IFlowcontrolApiserverV1beta3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ListPriorityLevelConfigurationAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfigurationList> ListPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1beta3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfiguration CreatePriorityLevelConfiguration(IFlowcontrolApiserverV1beta3Operations operations, V1beta3PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<CreatePriorityLevelConfigurationAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfiguration> CreatePriorityLevelConfigurationAsync(IFlowcontrolApiserverV1beta3Operations operations, V1beta3PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeletePriorityLevelConfiguration(IFlowcontrolApiserverV1beta3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<DeletePriorityLevelConfigurationAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1Status> DeletePriorityLevelConfigurationAsync(IFlowcontrolApiserverV1beta3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfiguration ReadPriorityLevelConfiguration(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReadPriorityLevelConfigurationAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfiguration> ReadPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfiguration PatchPriorityLevelConfiguration(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<PatchPriorityLevelConfigurationAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfiguration> PatchPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfiguration ReplacePriorityLevelConfiguration(IFlowcontrolApiserverV1beta3Operations operations, V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReplacePriorityLevelConfigurationAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfiguration> ReplacePriorityLevelConfigurationAsync(IFlowcontrolApiserverV1beta3Operations operations, V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfiguration ReadPriorityLevelConfigurationStatus(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReadPriorityLevelConfigurationStatusAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfiguration> ReadPriorityLevelConfigurationStatusAsync(IFlowcontrolApiserverV1beta3Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfiguration PatchPriorityLevelConfigurationStatus(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<PatchPriorityLevelConfigurationStatusAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfiguration> PatchPriorityLevelConfigurationStatusAsync(IFlowcontrolApiserverV1beta3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta3PriorityLevelConfiguration ReplacePriorityLevelConfigurationStatus(IFlowcontrolApiserverV1beta3Operations operations, V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1beta3OperationsExtensions/<ReplacePriorityLevelConfigurationStatusAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1beta3PriorityLevelConfiguration> ReplacePriorityLevelConfigurationStatusAsync(IFlowcontrolApiserverV1beta3Operations operations, V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.FlowcontrolApiserverV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IFlowcontrolApiserverV1Operations operations);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IFlowcontrolApiserverV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionFlowSchema(IFlowcontrolApiserverV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<DeleteCollectionFlowSchemaAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionFlowSchemaAsync(IFlowcontrolApiserverV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchemaList ListFlowSchema(IFlowcontrolApiserverV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ListFlowSchemaAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1FlowSchemaList> ListFlowSchemaAsync(IFlowcontrolApiserverV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchema CreateFlowSchema(IFlowcontrolApiserverV1Operations operations, V1FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<CreateFlowSchemaAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1FlowSchema> CreateFlowSchemaAsync(IFlowcontrolApiserverV1Operations operations, V1FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteFlowSchema(IFlowcontrolApiserverV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<DeleteFlowSchemaAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteFlowSchemaAsync(IFlowcontrolApiserverV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchema ReadFlowSchema(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReadFlowSchemaAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1FlowSchema> ReadFlowSchemaAsync(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchema PatchFlowSchema(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<PatchFlowSchemaAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1FlowSchema> PatchFlowSchemaAsync(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchema ReplaceFlowSchema(IFlowcontrolApiserverV1Operations operations, V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReplaceFlowSchemaAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1FlowSchema> ReplaceFlowSchemaAsync(IFlowcontrolApiserverV1Operations operations, V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchema ReadFlowSchemaStatus(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReadFlowSchemaStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1FlowSchema> ReadFlowSchemaStatusAsync(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchema PatchFlowSchemaStatus(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<PatchFlowSchemaStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1FlowSchema> PatchFlowSchemaStatusAsync(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1FlowSchema ReplaceFlowSchemaStatus(IFlowcontrolApiserverV1Operations operations, V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReplaceFlowSchemaStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1FlowSchema> ReplaceFlowSchemaStatusAsync(IFlowcontrolApiserverV1Operations operations, V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionPriorityLevelConfiguration(IFlowcontrolApiserverV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<DeleteCollectionPriorityLevelConfigurationAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfigurationList ListPriorityLevelConfiguration(IFlowcontrolApiserverV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ListPriorityLevelConfigurationAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfigurationList> ListPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfiguration CreatePriorityLevelConfiguration(IFlowcontrolApiserverV1Operations operations, V1PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<CreatePriorityLevelConfigurationAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfiguration> CreatePriorityLevelConfigurationAsync(IFlowcontrolApiserverV1Operations operations, V1PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeletePriorityLevelConfiguration(IFlowcontrolApiserverV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<DeletePriorityLevelConfigurationAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1Status> DeletePriorityLevelConfigurationAsync(IFlowcontrolApiserverV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfiguration ReadPriorityLevelConfiguration(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReadPriorityLevelConfigurationAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfiguration> ReadPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfiguration PatchPriorityLevelConfiguration(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<PatchPriorityLevelConfigurationAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfiguration> PatchPriorityLevelConfigurationAsync(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfiguration ReplacePriorityLevelConfiguration(IFlowcontrolApiserverV1Operations operations, V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReplacePriorityLevelConfigurationAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfiguration> ReplacePriorityLevelConfigurationAsync(IFlowcontrolApiserverV1Operations operations, V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfiguration ReadPriorityLevelConfigurationStatus(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReadPriorityLevelConfigurationStatusAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfiguration> ReadPriorityLevelConfigurationStatusAsync(IFlowcontrolApiserverV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfiguration PatchPriorityLevelConfigurationStatus(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<PatchPriorityLevelConfigurationStatusAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfiguration> PatchPriorityLevelConfigurationStatusAsync(IFlowcontrolApiserverV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityLevelConfiguration ReplacePriorityLevelConfigurationStatus(IFlowcontrolApiserverV1Operations operations, V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.FlowcontrolApiserverV1OperationsExtensions/<ReplacePriorityLevelConfigurationStatusAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1PriorityLevelConfiguration> ReplacePriorityLevelConfigurationStatusAsync(IFlowcontrolApiserverV1Operations operations, V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
public static class k8s.GeneratedApiVersion : object {
    public static string AssemblyVersion;
    public static string SwaggerVersion;
}
public class k8s.GenericClient : object {
    private IKubernetes kubernetes;
    private string group;
    private string version;
    private string plural;
    private bool disposeClient;
    [ObsoleteAttribute]
public GenericClient(KubernetesClientConfiguration config, string group, string version, string plural);
    public GenericClient(IKubernetes kubernetes, string version, string plural, bool disposeClient);
    public GenericClient(IKubernetes kubernetes, string group, string version, string plural, bool disposeClient);
    [AsyncStateMachineAttribute("k8s.GenericClient/<CreateAsync>d__8`1")]
public Task`1<T> CreateAsync(T obj, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<CreateNamespacedAsync>d__9`1")]
public Task`1<T> CreateNamespacedAsync(T obj, string ns, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<ListAsync>d__10`1")]
public Task`1<T> ListAsync(CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<ListNamespacedAsync>d__11`1")]
public Task`1<T> ListNamespacedAsync(string ns, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<ReadNamespacedAsync>d__12`1")]
public Task`1<T> ReadNamespacedAsync(string ns, string name, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<ReadAsync>d__13`1")]
public Task`1<T> ReadAsync(string name, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<DeleteAsync>d__14`1")]
public Task`1<T> DeleteAsync(string name, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<DeleteNamespacedAsync>d__15`1")]
public Task`1<T> DeleteNamespacedAsync(string ns, string name, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<PatchAsync>d__16`1")]
public Task`1<T> PatchAsync(V1Patch patch, string name, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<PatchNamespacedAsync>d__17`1")]
public Task`1<T> PatchNamespacedAsync(V1Patch patch, string ns, string name, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<ReplaceAsync>d__18`1")]
public Task`1<T> ReplaceAsync(T obj, string name, CancellationToken cancel);
    [AsyncStateMachineAttribute("k8s.GenericClient/<ReplaceNamespacedAsync>d__19`1")]
public Task`1<T> ReplaceNamespacedAsync(T obj, string ns, string name, CancellationToken cancel);
    public IAsyncEnumerable`1<ValueTuple`2<WatchEventType, T>> WatchAsync(Action`1<Exception> onError, CancellationToken cancel);
    public IAsyncEnumerable`1<ValueTuple`2<WatchEventType, T>> WatchNamespacedAsync(string ns, Action`1<Exception> onError, CancellationToken cancel);
    public Watcher`1<T> Watch(Action`2<WatchEventType, T> onEvent, Action`1<Exception> onError, Action onClosed);
    public Watcher`1<T> WatchNamespaced(string ns, Action`2<WatchEventType, T> onEvent, Action`1<Exception> onError, Action onClosed);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public interface k8s.IAdmissionregistrationOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAdmissionregistrationV1alpha1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyList>> ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicy>> ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBindingList>> ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ValidatingAdmissionPolicyBinding>> ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1alpha1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAdmissionregistrationV1beta1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyList>> ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicy>> ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBindingList>> ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ValidatingAdmissionPolicyBinding>> ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1beta1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAdmissionregistrationV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionMutatingWebhookConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1MutatingWebhookConfigurationList>> ListMutatingWebhookConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> CreateMutatingWebhookConfigurationWithHttpMessagesAsync(V1MutatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteMutatingWebhookConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> ReadMutatingWebhookConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> PatchMutatingWebhookConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1MutatingWebhookConfiguration>> ReplaceMutatingWebhookConfigurationWithHttpMessagesAsync(V1MutatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionValidatingAdmissionPolicyWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyList>> ListValidatingAdmissionPolicyWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> CreateValidatingAdmissionPolicyWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteValidatingAdmissionPolicyWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> ReadValidatingAdmissionPolicyWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> PatchValidatingAdmissionPolicyWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> ReplaceValidatingAdmissionPolicyWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> ReadValidatingAdmissionPolicyStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> PatchValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicy>> ReplaceValidatingAdmissionPolicyStatusWithHttpMessagesAsync(V1ValidatingAdmissionPolicy body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBindingList>> ListValidatingAdmissionPolicyBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> CreateValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1ValidatingAdmissionPolicyBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> ReadValidatingAdmissionPolicyBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> PatchValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingAdmissionPolicyBinding>> ReplaceValidatingAdmissionPolicyBindingWithHttpMessagesAsync(V1ValidatingAdmissionPolicyBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionValidatingWebhookConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfigurationList>> ListValidatingWebhookConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> CreateValidatingWebhookConfigurationWithHttpMessagesAsync(V1ValidatingWebhookConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteValidatingWebhookConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> ReadValidatingWebhookConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> PatchValidatingWebhookConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ValidatingWebhookConfiguration>> ReplaceValidatingWebhookConfigurationWithHttpMessagesAsync(V1ValidatingWebhookConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IApiextensionsOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IApiextensionsV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionCustomResourceDefinitionWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinitionList>> ListCustomResourceDefinitionWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> CreateCustomResourceDefinitionWithHttpMessagesAsync(V1CustomResourceDefinition body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCustomResourceDefinitionWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> ReadCustomResourceDefinitionWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> PatchCustomResourceDefinitionWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> ReplaceCustomResourceDefinitionWithHttpMessagesAsync(V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> ReadCustomResourceDefinitionStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> PatchCustomResourceDefinitionStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CustomResourceDefinition>> ReplaceCustomResourceDefinitionStatusWithHttpMessagesAsync(V1CustomResourceDefinition body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IApiregistrationOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IApiregistrationV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionAPIServiceWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIServiceList>> ListAPIServiceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIService>> CreateAPIServiceWithHttpMessagesAsync(V1APIService body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteAPIServiceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIService>> ReadAPIServiceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIService>> PatchAPIServiceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIService>> ReplaceAPIServiceWithHttpMessagesAsync(V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIService>> ReadAPIServiceStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIService>> PatchAPIServiceStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIService>> ReplaceAPIServiceStatusWithHttpMessagesAsync(V1APIService body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IApisOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroupList>> GetAPIVersionsWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAppsOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAppsV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ControllerRevisionList>> ListControllerRevisionForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSetList>> ListDaemonSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DeploymentList>> ListDeploymentForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedControllerRevisionWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ControllerRevisionList>> ListNamespacedControllerRevisionWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ControllerRevision>> CreateNamespacedControllerRevisionWithHttpMessagesAsync(V1ControllerRevision body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedControllerRevisionWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ControllerRevision>> ReadNamespacedControllerRevisionWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ControllerRevision>> PatchNamespacedControllerRevisionWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ControllerRevision>> ReplaceNamespacedControllerRevisionWithHttpMessagesAsync(V1ControllerRevision body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedDaemonSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSetList>> ListNamespacedDaemonSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSet>> CreateNamespacedDaemonSetWithHttpMessagesAsync(V1DaemonSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedDaemonSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSet>> ReadNamespacedDaemonSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSet>> PatchNamespacedDaemonSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSet>> ReplaceNamespacedDaemonSetWithHttpMessagesAsync(V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSet>> ReadNamespacedDaemonSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSet>> PatchNamespacedDaemonSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DaemonSet>> ReplaceNamespacedDaemonSetStatusWithHttpMessagesAsync(V1DaemonSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedDeploymentWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1DeploymentList>> ListNamespacedDeploymentWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Deployment>> CreateNamespacedDeploymentWithHttpMessagesAsync(V1Deployment body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedDeploymentWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Deployment>> ReadNamespacedDeploymentWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Deployment>> PatchNamespacedDeploymentWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Deployment>> ReplaceNamespacedDeploymentWithHttpMessagesAsync(V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReadNamespacedDeploymentScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> PatchNamespacedDeploymentScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReplaceNamespacedDeploymentScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Deployment>> ReadNamespacedDeploymentStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Deployment>> PatchNamespacedDeploymentStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Deployment>> ReplaceNamespacedDeploymentStatusWithHttpMessagesAsync(V1Deployment body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedReplicaSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSetList>> ListNamespacedReplicaSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSet>> CreateNamespacedReplicaSetWithHttpMessagesAsync(V1ReplicaSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedReplicaSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSet>> ReadNamespacedReplicaSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSet>> PatchNamespacedReplicaSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSet>> ReplaceNamespacedReplicaSetWithHttpMessagesAsync(V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReadNamespacedReplicaSetScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> PatchNamespacedReplicaSetScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReplaceNamespacedReplicaSetScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSet>> ReadNamespacedReplicaSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSet>> PatchNamespacedReplicaSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSet>> ReplaceNamespacedReplicaSetStatusWithHttpMessagesAsync(V1ReplicaSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedStatefulSetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSetList>> ListNamespacedStatefulSetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSet>> CreateNamespacedStatefulSetWithHttpMessagesAsync(V1StatefulSet body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedStatefulSetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSet>> ReadNamespacedStatefulSetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSet>> PatchNamespacedStatefulSetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSet>> ReplaceNamespacedStatefulSetWithHttpMessagesAsync(V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReadNamespacedStatefulSetScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> PatchNamespacedStatefulSetScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReplaceNamespacedStatefulSetScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSet>> ReadNamespacedStatefulSetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSet>> PatchNamespacedStatefulSetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSet>> ReplaceNamespacedStatefulSetStatusWithHttpMessagesAsync(V1StatefulSet body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicaSetList>> ListReplicaSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StatefulSetList>> ListStatefulSetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAuthenticationOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAuthenticationV1alpha1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1SelfSubjectReview>> CreateSelfSubjectReviewWithHttpMessagesAsync(V1alpha1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAuthenticationV1beta1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1SelfSubjectReview>> CreateSelfSubjectReviewWithHttpMessagesAsync(V1beta1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAuthenticationV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1SelfSubjectReview>> CreateSelfSubjectReviewWithHttpMessagesAsync(V1SelfSubjectReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1TokenReview>> CreateTokenReviewWithHttpMessagesAsync(V1TokenReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAuthorizationOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAuthorizationV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LocalSubjectAccessReview>> CreateNamespacedLocalSubjectAccessReviewWithHttpMessagesAsync(V1LocalSubjectAccessReview body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1SelfSubjectAccessReview>> CreateSelfSubjectAccessReviewWithHttpMessagesAsync(V1SelfSubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1SelfSubjectRulesReview>> CreateSelfSubjectRulesReviewWithHttpMessagesAsync(V1SelfSubjectRulesReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1SubjectAccessReview>> CreateSubjectAccessReviewWithHttpMessagesAsync(V1SubjectAccessReview body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAutoscalingOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAutoscalingV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscalerList>> ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscalerList>> ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1HorizontalPodAutoscaler>> ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IAutoscalingV2Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscalerList>> ListHorizontalPodAutoscalerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscalerList>> ListNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> CreateNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> ReadNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> PatchNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> ReplaceNamespacedHorizontalPodAutoscalerWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> ReadNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> PatchNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V2HorizontalPodAutoscaler>> ReplaceNamespacedHorizontalPodAutoscalerStatusWithHttpMessagesAsync(V2HorizontalPodAutoscaler body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IBasicKubernetes {
    public ICoreOperations Core { get; }
    public ICoreV1Operations CoreV1 { get; }
    public IApisOperations Apis { get; }
    public IAdmissionregistrationOperations Admissionregistration { get; }
    public IAdmissionregistrationV1Operations AdmissionregistrationV1 { get; }
    public IAdmissionregistrationV1alpha1Operations AdmissionregistrationV1alpha1 { get; }
    public IAdmissionregistrationV1beta1Operations AdmissionregistrationV1beta1 { get; }
    public IApiextensionsOperations Apiextensions { get; }
    public IApiextensionsV1Operations ApiextensionsV1 { get; }
    public IApiregistrationOperations Apiregistration { get; }
    public IApiregistrationV1Operations ApiregistrationV1 { get; }
    public IAppsOperations Apps { get; }
    public IAppsV1Operations AppsV1 { get; }
    public IAuthenticationOperations Authentication { get; }
    public IAuthenticationV1Operations AuthenticationV1 { get; }
    public IAuthenticationV1alpha1Operations AuthenticationV1alpha1 { get; }
    public IAuthenticationV1beta1Operations AuthenticationV1beta1 { get; }
    public IAuthorizationOperations Authorization { get; }
    public IAuthorizationV1Operations AuthorizationV1 { get; }
    public IAutoscalingOperations Autoscaling { get; }
    public IAutoscalingV1Operations AutoscalingV1 { get; }
    public IAutoscalingV2Operations AutoscalingV2 { get; }
    public IBatchOperations Batch { get; }
    public IBatchV1Operations BatchV1 { get; }
    public ICertificatesOperations Certificates { get; }
    public ICertificatesV1Operations CertificatesV1 { get; }
    public ICertificatesV1alpha1Operations CertificatesV1alpha1 { get; }
    public ICoordinationOperations Coordination { get; }
    public ICoordinationV1Operations CoordinationV1 { get; }
    public ICoordinationV1alpha1Operations CoordinationV1alpha1 { get; }
    public IDiscoveryOperations Discovery { get; }
    public IDiscoveryV1Operations DiscoveryV1 { get; }
    public IEventsOperations Events { get; }
    public IEventsV1Operations EventsV1 { get; }
    public IFlowcontrolApiserverOperations FlowcontrolApiserver { get; }
    public IFlowcontrolApiserverV1Operations FlowcontrolApiserverV1 { get; }
    public IFlowcontrolApiserverV1beta3Operations FlowcontrolApiserverV1beta3 { get; }
    public IInternalApiserverOperations InternalApiserver { get; }
    public IInternalApiserverV1alpha1Operations InternalApiserverV1alpha1 { get; }
    public INetworkingOperations Networking { get; }
    public INetworkingV1Operations NetworkingV1 { get; }
    public INetworkingV1beta1Operations NetworkingV1beta1 { get; }
    public INodeOperations Node { get; }
    public INodeV1Operations NodeV1 { get; }
    public IPolicyOperations Policy { get; }
    public IPolicyV1Operations PolicyV1 { get; }
    public IRbacAuthorizationOperations RbacAuthorization { get; }
    public IRbacAuthorizationV1Operations RbacAuthorizationV1 { get; }
    public IResourceOperations Resource { get; }
    public IResourceV1alpha3Operations ResourceV1alpha3 { get; }
    public ISchedulingOperations Scheduling { get; }
    public ISchedulingV1Operations SchedulingV1 { get; }
    public IStorageOperations Storage { get; }
    public IStorageV1Operations StorageV1 { get; }
    public IStorageV1alpha1Operations StorageV1alpha1 { get; }
    public IStorageV1beta1Operations StorageV1beta1 { get; }
    public IStoragemigrationOperations Storagemigration { get; }
    public IStoragemigrationV1alpha1Operations StoragemigrationV1alpha1 { get; }
    public ILogsOperations Logs { get; }
    public IVersionOperations Version { get; }
    public ICustomObjectsOperations CustomObjects { get; }
    public IWellKnownOperations WellKnown { get; }
    public IOpenidOperations Openid { get; }
    public abstract virtual ICoreOperations get_Core();
    public abstract virtual ICoreV1Operations get_CoreV1();
    public abstract virtual IApisOperations get_Apis();
    public abstract virtual IAdmissionregistrationOperations get_Admissionregistration();
    public abstract virtual IAdmissionregistrationV1Operations get_AdmissionregistrationV1();
    public abstract virtual IAdmissionregistrationV1alpha1Operations get_AdmissionregistrationV1alpha1();
    public abstract virtual IAdmissionregistrationV1beta1Operations get_AdmissionregistrationV1beta1();
    public abstract virtual IApiextensionsOperations get_Apiextensions();
    public abstract virtual IApiextensionsV1Operations get_ApiextensionsV1();
    public abstract virtual IApiregistrationOperations get_Apiregistration();
    public abstract virtual IApiregistrationV1Operations get_ApiregistrationV1();
    public abstract virtual IAppsOperations get_Apps();
    public abstract virtual IAppsV1Operations get_AppsV1();
    public abstract virtual IAuthenticationOperations get_Authentication();
    public abstract virtual IAuthenticationV1Operations get_AuthenticationV1();
    public abstract virtual IAuthenticationV1alpha1Operations get_AuthenticationV1alpha1();
    public abstract virtual IAuthenticationV1beta1Operations get_AuthenticationV1beta1();
    public abstract virtual IAuthorizationOperations get_Authorization();
    public abstract virtual IAuthorizationV1Operations get_AuthorizationV1();
    public abstract virtual IAutoscalingOperations get_Autoscaling();
    public abstract virtual IAutoscalingV1Operations get_AutoscalingV1();
    public abstract virtual IAutoscalingV2Operations get_AutoscalingV2();
    public abstract virtual IBatchOperations get_Batch();
    public abstract virtual IBatchV1Operations get_BatchV1();
    public abstract virtual ICertificatesOperations get_Certificates();
    public abstract virtual ICertificatesV1Operations get_CertificatesV1();
    public abstract virtual ICertificatesV1alpha1Operations get_CertificatesV1alpha1();
    public abstract virtual ICoordinationOperations get_Coordination();
    public abstract virtual ICoordinationV1Operations get_CoordinationV1();
    public abstract virtual ICoordinationV1alpha1Operations get_CoordinationV1alpha1();
    public abstract virtual IDiscoveryOperations get_Discovery();
    public abstract virtual IDiscoveryV1Operations get_DiscoveryV1();
    public abstract virtual IEventsOperations get_Events();
    public abstract virtual IEventsV1Operations get_EventsV1();
    public abstract virtual IFlowcontrolApiserverOperations get_FlowcontrolApiserver();
    public abstract virtual IFlowcontrolApiserverV1Operations get_FlowcontrolApiserverV1();
    public abstract virtual IFlowcontrolApiserverV1beta3Operations get_FlowcontrolApiserverV1beta3();
    public abstract virtual IInternalApiserverOperations get_InternalApiserver();
    public abstract virtual IInternalApiserverV1alpha1Operations get_InternalApiserverV1alpha1();
    public abstract virtual INetworkingOperations get_Networking();
    public abstract virtual INetworkingV1Operations get_NetworkingV1();
    public abstract virtual INetworkingV1beta1Operations get_NetworkingV1beta1();
    public abstract virtual INodeOperations get_Node();
    public abstract virtual INodeV1Operations get_NodeV1();
    public abstract virtual IPolicyOperations get_Policy();
    public abstract virtual IPolicyV1Operations get_PolicyV1();
    public abstract virtual IRbacAuthorizationOperations get_RbacAuthorization();
    public abstract virtual IRbacAuthorizationV1Operations get_RbacAuthorizationV1();
    public abstract virtual IResourceOperations get_Resource();
    public abstract virtual IResourceV1alpha3Operations get_ResourceV1alpha3();
    public abstract virtual ISchedulingOperations get_Scheduling();
    public abstract virtual ISchedulingV1Operations get_SchedulingV1();
    public abstract virtual IStorageOperations get_Storage();
    public abstract virtual IStorageV1Operations get_StorageV1();
    public abstract virtual IStorageV1alpha1Operations get_StorageV1alpha1();
    public abstract virtual IStorageV1beta1Operations get_StorageV1beta1();
    public abstract virtual IStoragemigrationOperations get_Storagemigration();
    public abstract virtual IStoragemigrationV1alpha1Operations get_StoragemigrationV1alpha1();
    public abstract virtual ILogsOperations get_Logs();
    public abstract virtual IVersionOperations get_Version();
    public abstract virtual ICustomObjectsOperations get_CustomObjects();
    public abstract virtual IWellKnownOperations get_WellKnown();
    public abstract virtual IOpenidOperations get_Openid();
}
public interface k8s.IBatchOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IBatchV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJobList>> ListCronJobForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1JobList>> ListJobForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedCronJobWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJobList>> ListNamespacedCronJobWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJob>> CreateNamespacedCronJobWithHttpMessagesAsync(V1CronJob body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedCronJobWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJob>> ReadNamespacedCronJobWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJob>> PatchNamespacedCronJobWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJob>> ReplaceNamespacedCronJobWithHttpMessagesAsync(V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJob>> ReadNamespacedCronJobStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJob>> PatchNamespacedCronJobStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CronJob>> ReplaceNamespacedCronJobStatusWithHttpMessagesAsync(V1CronJob body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedJobWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1JobList>> ListNamespacedJobWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Job>> CreateNamespacedJobWithHttpMessagesAsync(V1Job body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedJobWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Job>> ReadNamespacedJobWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Job>> PatchNamespacedJobWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Job>> ReplaceNamespacedJobWithHttpMessagesAsync(V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Job>> ReadNamespacedJobStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Job>> PatchNamespacedJobStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Job>> ReplaceNamespacedJobStatusWithHttpMessagesAsync(V1Job body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICertificatesOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICertificatesV1alpha1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionClusterTrustBundleWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundleList>> ListClusterTrustBundleWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> CreateClusterTrustBundleWithHttpMessagesAsync(V1alpha1ClusterTrustBundle body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteClusterTrustBundleWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> ReadClusterTrustBundleWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> PatchClusterTrustBundleWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1ClusterTrustBundle>> ReplaceClusterTrustBundleWithHttpMessagesAsync(V1alpha1ClusterTrustBundle body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICertificatesV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionCertificateSigningRequestWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequestList>> ListCertificateSigningRequestWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> CreateCertificateSigningRequestWithHttpMessagesAsync(V1CertificateSigningRequest body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCertificateSigningRequestWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> ReadCertificateSigningRequestWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> PatchCertificateSigningRequestWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> ReplaceCertificateSigningRequestWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> ReadCertificateSigningRequestApprovalWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> PatchCertificateSigningRequestApprovalWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> ReplaceCertificateSigningRequestApprovalWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> ReadCertificateSigningRequestStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> PatchCertificateSigningRequestStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CertificateSigningRequest>> ReplaceCertificateSigningRequestStatusWithHttpMessagesAsync(V1CertificateSigningRequest body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICoordinationOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICoordinationV1alpha1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidateList>> ListLeaseCandidateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedLeaseCandidateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidateList>> ListNamespacedLeaseCandidateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> CreateNamespacedLeaseCandidateWithHttpMessagesAsync(V1alpha1LeaseCandidate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedLeaseCandidateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> ReadNamespacedLeaseCandidateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> PatchNamespacedLeaseCandidateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1LeaseCandidate>> ReplaceNamespacedLeaseCandidateWithHttpMessagesAsync(V1alpha1LeaseCandidate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICoordinationV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LeaseList>> ListLeaseForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedLeaseWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LeaseList>> ListNamespacedLeaseWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Lease>> CreateNamespacedLeaseWithHttpMessagesAsync(V1Lease body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedLeaseWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Lease>> ReadNamespacedLeaseWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Lease>> PatchNamespacedLeaseWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Lease>> ReplaceNamespacedLeaseWithHttpMessagesAsync(V1Lease body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICoreOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIVersions>> GetAPIVersionsWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICoreV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ComponentStatusList>> ListComponentStatusWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ComponentStatus>> ReadComponentStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ConfigMapList>> ListConfigMapForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointsList>> ListEndpointsForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Corev1EventList>> ListEventForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LimitRangeList>> ListLimitRangeForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NamespaceList>> ListNamespaceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> CreateNamespaceWithHttpMessagesAsync(V1Namespace body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Binding>> CreateNamespacedBindingWithHttpMessagesAsync(V1Binding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedConfigMapWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ConfigMapList>> ListNamespacedConfigMapWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ConfigMap>> CreateNamespacedConfigMapWithHttpMessagesAsync(V1ConfigMap body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedConfigMapWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ConfigMap>> ReadNamespacedConfigMapWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ConfigMap>> PatchNamespacedConfigMapWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ConfigMap>> ReplaceNamespacedConfigMapWithHttpMessagesAsync(V1ConfigMap body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedEndpointsWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointsList>> ListNamespacedEndpointsWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Endpoints>> CreateNamespacedEndpointsWithHttpMessagesAsync(V1Endpoints body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedEndpointsWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Endpoints>> ReadNamespacedEndpointsWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Endpoints>> PatchNamespacedEndpointsWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Endpoints>> ReplaceNamespacedEndpointsWithHttpMessagesAsync(V1Endpoints body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedEventWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Corev1EventList>> ListNamespacedEventWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Corev1Event>> CreateNamespacedEventWithHttpMessagesAsync(Corev1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Corev1Event>> ReadNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Corev1Event>> PatchNamespacedEventWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Corev1Event>> ReplaceNamespacedEventWithHttpMessagesAsync(Corev1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedLimitRangeWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LimitRangeList>> ListNamespacedLimitRangeWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LimitRange>> CreateNamespacedLimitRangeWithHttpMessagesAsync(V1LimitRange body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedLimitRangeWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LimitRange>> ReadNamespacedLimitRangeWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LimitRange>> PatchNamespacedLimitRangeWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1LimitRange>> ReplaceNamespacedLimitRangeWithHttpMessagesAsync(V1LimitRange body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaimList>> ListNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> CreateNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1PersistentVolumeClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> DeleteNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> ReadNamespacedPersistentVolumeClaimWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> PatchNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> ReplaceNamespacedPersistentVolumeClaimWithHttpMessagesAsync(V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> ReadNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> PatchNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaim>> ReplaceNamespacedPersistentVolumeClaimStatusWithHttpMessagesAsync(V1PersistentVolumeClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedPodWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodList>> ListNamespacedPodWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> CreateNamespacedPodWithHttpMessagesAsync(V1Pod body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> DeleteNamespacedPodWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> ReadNamespacedPodWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> PatchNamespacedPodWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> ReplaceNamespacedPodWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNamespacedPodAttachWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNamespacedPodAttachWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Binding>> CreateNamespacedPodBindingWithHttpMessagesAsync(V1Binding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> ReadNamespacedPodEphemeralcontainersWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> PatchNamespacedPodEphemeralcontainersWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> ReplaceNamespacedPodEphemeralcontainersWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Eviction>> CreateNamespacedPodEvictionWithHttpMessagesAsync(V1Eviction body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNamespacedPodExecWithHttpMessagesAsync(string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNamespacedPodExecWithHttpMessagesAsync(string name, string namespaceParameter, string command, string container, Nullable`1<bool> stderr, Nullable`1<bool> stdin, Nullable`1<bool> stdout, Nullable`1<bool> tty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ReadNamespacedPodLogWithHttpMessagesAsync(string name, string namespaceParameter, string container, Nullable`1<bool> follow, Nullable`1<bool> insecureSkipTLSVerifyBackend, Nullable`1<int> limitBytes, Nullable`1<bool> pretty, Nullable`1<bool> previous, Nullable`1<int> sinceSeconds, Nullable`1<int> tailLines, Nullable`1<bool> timestamps, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNamespacedPodPortforwardWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<int> ports, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNamespacedPodPortforwardWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<int> ports, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectDeleteNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectHeadNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPatchNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPutNamespacedPodProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectDeleteNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectHeadNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPatchNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPutNamespacedPodProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> ReadNamespacedPodStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> PatchNamespacedPodStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Pod>> ReplaceNamespacedPodStatusWithHttpMessagesAsync(V1Pod body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedPodTemplateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodTemplateList>> ListNamespacedPodTemplateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodTemplate>> CreateNamespacedPodTemplateWithHttpMessagesAsync(V1PodTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodTemplate>> DeleteNamespacedPodTemplateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodTemplate>> ReadNamespacedPodTemplateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodTemplate>> PatchNamespacedPodTemplateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodTemplate>> ReplaceNamespacedPodTemplateWithHttpMessagesAsync(V1PodTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedReplicationControllerWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationControllerList>> ListNamespacedReplicationControllerWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationController>> CreateNamespacedReplicationControllerWithHttpMessagesAsync(V1ReplicationController body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedReplicationControllerWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationController>> ReadNamespacedReplicationControllerWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationController>> PatchNamespacedReplicationControllerWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationController>> ReplaceNamespacedReplicationControllerWithHttpMessagesAsync(V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReadNamespacedReplicationControllerScaleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> PatchNamespacedReplicationControllerScaleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Scale>> ReplaceNamespacedReplicationControllerScaleWithHttpMessagesAsync(V1Scale body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationController>> ReadNamespacedReplicationControllerStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationController>> PatchNamespacedReplicationControllerStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationController>> ReplaceNamespacedReplicationControllerStatusWithHttpMessagesAsync(V1ReplicationController body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedResourceQuotaWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuotaList>> ListNamespacedResourceQuotaWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> CreateNamespacedResourceQuotaWithHttpMessagesAsync(V1ResourceQuota body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> DeleteNamespacedResourceQuotaWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> ReadNamespacedResourceQuotaWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> PatchNamespacedResourceQuotaWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> ReplaceNamespacedResourceQuotaWithHttpMessagesAsync(V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> ReadNamespacedResourceQuotaStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> PatchNamespacedResourceQuotaStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuota>> ReplaceNamespacedResourceQuotaStatusWithHttpMessagesAsync(V1ResourceQuota body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedSecretWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1SecretList>> ListNamespacedSecretWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Secret>> CreateNamespacedSecretWithHttpMessagesAsync(V1Secret body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedSecretWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Secret>> ReadNamespacedSecretWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Secret>> PatchNamespacedSecretWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Secret>> ReplaceNamespacedSecretWithHttpMessagesAsync(V1Secret body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedServiceAccountWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceAccountList>> ListNamespacedServiceAccountWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceAccount>> CreateNamespacedServiceAccountWithHttpMessagesAsync(V1ServiceAccount body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceAccount>> DeleteNamespacedServiceAccountWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceAccount>> ReadNamespacedServiceAccountWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceAccount>> PatchNamespacedServiceAccountWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceAccount>> ReplaceNamespacedServiceAccountWithHttpMessagesAsync(V1ServiceAccount body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Authenticationv1TokenRequest>> CreateNamespacedServiceAccountTokenWithHttpMessagesAsync(Authenticationv1TokenRequest body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedServiceWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceList>> ListNamespacedServiceWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> CreateNamespacedServiceWithHttpMessagesAsync(V1Service body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> DeleteNamespacedServiceWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> ReadNamespacedServiceWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> PatchNamespacedServiceWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> ReplaceNamespacedServiceWithHttpMessagesAsync(V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectDeleteNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectHeadNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPatchNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPutNamespacedServiceProxyWithHttpMessagesAsync(string name, string namespaceParameter, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectDeleteNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectHeadNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPatchNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPutNamespacedServiceProxyWithPathWithHttpMessagesAsync(string name, string namespaceParameter, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> ReadNamespacedServiceStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> PatchNamespacedServiceStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Service>> ReplaceNamespacedServiceStatusWithHttpMessagesAsync(V1Service body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespaceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> ReadNamespaceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> PatchNamespaceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> ReplaceNamespaceWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> ReplaceNamespaceFinalizeWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> ReadNamespaceStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> PatchNamespaceStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Namespace>> ReplaceNamespaceStatusWithHttpMessagesAsync(V1Namespace body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNodeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NodeList>> ListNodeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Node>> CreateNodeWithHttpMessagesAsync(V1Node body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNodeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Node>> ReadNodeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Node>> PatchNodeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Node>> ReplaceNodeWithHttpMessagesAsync(V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectDeleteNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectHeadNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPatchNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPutNodeProxyWithHttpMessagesAsync(string name, string path, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectDeleteNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectGetNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectHeadNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPatchNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPostNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Stream>> ConnectPutNodeProxyWithPathWithHttpMessagesAsync(string name, string path, string path1, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Node>> ReadNodeStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Node>> PatchNodeStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Node>> ReplaceNodeStatusWithHttpMessagesAsync(V1Node body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeClaimList>> ListPersistentVolumeClaimForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionPersistentVolumeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolumeList>> ListPersistentVolumeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> CreatePersistentVolumeWithHttpMessagesAsync(V1PersistentVolume body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> DeletePersistentVolumeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> ReadPersistentVolumeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> PatchPersistentVolumeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> ReplacePersistentVolumeWithHttpMessagesAsync(V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> ReadPersistentVolumeStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> PatchPersistentVolumeStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PersistentVolume>> ReplacePersistentVolumeStatusWithHttpMessagesAsync(V1PersistentVolume body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodList>> ListPodForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodTemplateList>> ListPodTemplateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ReplicationControllerList>> ListReplicationControllerForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ResourceQuotaList>> ListResourceQuotaForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1SecretList>> ListSecretForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceAccountList>> ListServiceAccountForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ServiceList>> ListServiceForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ICustomObjectsOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(string group, string version, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ListClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ListClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> CreateClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> CreateClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> DeleteCollectionClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> DeleteCollectionClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ListNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ListNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> CreateNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> CreateNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> DeleteCollectionNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, V1DeleteOptions body, string labelSelector, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> GetClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> GetClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> DeleteClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> DeleteClusterCustomObjectWithHttpMessagesAsync(string group, string version, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> PatchClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> PatchClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ReplaceClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ReplaceClusterCustomObjectWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> GetClusterCustomObjectStatusWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> GetClusterCustomObjectStatusWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ReplaceClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ReplaceClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> PatchClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> PatchClusterCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> GetClusterCustomObjectScaleWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> GetClusterCustomObjectScaleWithHttpMessagesAsync(string group, string version, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ReplaceClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ReplaceClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> PatchClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> PatchClusterCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> GetNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> GetNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> DeleteNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> DeleteNamespacedCustomObjectWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, V1DeleteOptions body, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, string dryRun, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> PatchNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> PatchNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ReplaceNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ReplaceNamespacedCustomObjectWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> GetNamespacedCustomObjectStatusWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> GetNamespacedCustomObjectStatusWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ReplaceNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> PatchNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> PatchNamespacedCustomObjectStatusWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> GetNamespacedCustomObjectScaleWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> GetNamespacedCustomObjectScaleWithHttpMessagesAsync(string group, string version, string namespaceParameter, string plural, string name, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> ReplaceNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<object>> PatchNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<T>> PatchNamespacedCustomObjectScaleWithHttpMessagesAsync(object body, string group, string version, string namespaceParameter, string plural, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IDiscoveryOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IDiscoveryV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointSliceList>> ListEndpointSliceForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedEndpointSliceWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointSliceList>> ListNamespacedEndpointSliceWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointSlice>> CreateNamespacedEndpointSliceWithHttpMessagesAsync(V1EndpointSlice body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedEndpointSliceWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointSlice>> ReadNamespacedEndpointSliceWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointSlice>> PatchNamespacedEndpointSliceWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1EndpointSlice>> ReplaceNamespacedEndpointSliceWithHttpMessagesAsync(V1EndpointSlice body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IEventsOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IEventsV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Eventsv1EventList>> ListEventForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedEventWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Eventsv1EventList>> ListNamespacedEventWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Eventsv1Event>> CreateNamespacedEventWithHttpMessagesAsync(Eventsv1Event body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Eventsv1Event>> ReadNamespacedEventWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Eventsv1Event>> PatchNamespacedEventWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<Eventsv1Event>> ReplaceNamespacedEventWithHttpMessagesAsync(Eventsv1Event body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IFlowcontrolApiserverOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IFlowcontrolApiserverV1beta3Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionFlowSchemaWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchemaList>> ListFlowSchemaWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> CreateFlowSchemaWithHttpMessagesAsync(V1beta3FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteFlowSchemaWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> ReadFlowSchemaWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> PatchFlowSchemaWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> ReplaceFlowSchemaWithHttpMessagesAsync(V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> ReadFlowSchemaStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> PatchFlowSchemaStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3FlowSchema>> ReplaceFlowSchemaStatusWithHttpMessagesAsync(V1beta3FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfigurationList>> ListPriorityLevelConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> CreatePriorityLevelConfigurationWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeletePriorityLevelConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> ReadPriorityLevelConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> PatchPriorityLevelConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> ReplacePriorityLevelConfigurationWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta3PriorityLevelConfiguration>> ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync(V1beta3PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IFlowcontrolApiserverV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionFlowSchemaWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchemaList>> ListFlowSchemaWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchema>> CreateFlowSchemaWithHttpMessagesAsync(V1FlowSchema body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteFlowSchemaWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchema>> ReadFlowSchemaWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchema>> PatchFlowSchemaWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchema>> ReplaceFlowSchemaWithHttpMessagesAsync(V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchema>> ReadFlowSchemaStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchema>> PatchFlowSchemaStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1FlowSchema>> ReplaceFlowSchemaStatusWithHttpMessagesAsync(V1FlowSchema body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionPriorityLevelConfigurationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfigurationList>> ListPriorityLevelConfigurationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> CreatePriorityLevelConfigurationWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeletePriorityLevelConfigurationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> ReadPriorityLevelConfigurationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> PatchPriorityLevelConfigurationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> ReplacePriorityLevelConfigurationWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> ReadPriorityLevelConfigurationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> PatchPriorityLevelConfigurationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityLevelConfiguration>> ReplacePriorityLevelConfigurationStatusWithHttpMessagesAsync(V1PriorityLevelConfiguration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IInternalApiserverOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IInternalApiserverV1alpha1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionStorageVersionWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionList>> ListStorageVersionWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> CreateStorageVersionWithHttpMessagesAsync(V1alpha1StorageVersion body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteStorageVersionWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> ReadStorageVersionWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> PatchStorageVersionWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> ReplaceStorageVersionWithHttpMessagesAsync(V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> ReadStorageVersionStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> PatchStorageVersionStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersion>> ReplaceStorageVersionStatusWithHttpMessagesAsync(V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IItems`1 {
    public IList`1<T> Items { get; public set; }
    public abstract virtual IList`1<T> get_Items();
    public abstract virtual void set_Items(IList`1<T> value);
}
public interface k8s.IKubernetes {
    public Uri BaseUri { get; public set; }
    public abstract virtual Uri get_BaseUri();
    public abstract virtual void set_BaseUri(Uri value);
    public abstract virtual Task`1<int> NamespacedPodExecAsync(string name, string namespace, string container, IEnumerable`1<string> command, bool tty, ExecAsyncCallback action, CancellationToken cancellationToken);
    public abstract virtual Task`1<WebSocket> WebSocketNamespacedPodExecAsync(string name, string namespace, string command, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtocol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<WebSocket> WebSocketNamespacedPodExecAsync(string name, string namespace, IEnumerable`1<string> command, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtocol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<IStreamDemuxer> MuxedStreamNamespacedPodExecAsync(string name, string namespace, IEnumerable`1<string> command, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtocol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<WebSocket> WebSocketNamespacedPodPortForwardAsync(string name, string namespace, IEnumerable`1<int> ports, string webSocketSubProtocol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<WebSocket> WebSocketNamespacedPodAttachAsync(string name, string namespace, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtocol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IKubernetesObject {
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    public abstract virtual string get_ApiVersion();
    public abstract virtual void set_ApiVersion(string value);
    public abstract virtual string get_Kind();
    public abstract virtual void set_Kind(string value);
}
public interface k8s.IKubernetesObject`1 {
}
public interface k8s.ILogsOperations {
    public abstract virtual Task`1<HttpOperationResponse> LogFileListHandlerWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse> LogFileHandlerWithHttpMessagesAsync(string logpath, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IMetadata`1 {
    public T Metadata { get; public set; }
    public abstract virtual T get_Metadata();
    public abstract virtual void set_Metadata(T value);
}
public interface k8s.INetworkingOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.INetworkingV1beta1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionIPAddressWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1IPAddressList>> ListIPAddressWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1IPAddress>> CreateIPAddressWithHttpMessagesAsync(V1beta1IPAddress body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteIPAddressWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1IPAddress>> ReadIPAddressWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1IPAddress>> PatchIPAddressWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1IPAddress>> ReplaceIPAddressWithHttpMessagesAsync(V1beta1IPAddress body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionServiceCIDRWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDRList>> ListServiceCIDRWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> CreateServiceCIDRWithHttpMessagesAsync(V1beta1ServiceCIDR body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteServiceCIDRWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> ReadServiceCIDRWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> PatchServiceCIDRWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> ReplaceServiceCIDRWithHttpMessagesAsync(V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> ReadServiceCIDRStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> PatchServiceCIDRStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1ServiceCIDR>> ReplaceServiceCIDRStatusWithHttpMessagesAsync(V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.INetworkingV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionIngressClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1IngressClassList>> ListIngressClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1IngressClass>> CreateIngressClassWithHttpMessagesAsync(V1IngressClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteIngressClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1IngressClass>> ReadIngressClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1IngressClass>> PatchIngressClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1IngressClass>> ReplaceIngressClassWithHttpMessagesAsync(V1IngressClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1IngressList>> ListIngressForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedIngressWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1IngressList>> ListNamespacedIngressWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Ingress>> CreateNamespacedIngressWithHttpMessagesAsync(V1Ingress body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedIngressWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Ingress>> ReadNamespacedIngressWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Ingress>> PatchNamespacedIngressWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Ingress>> ReplaceNamespacedIngressWithHttpMessagesAsync(V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Ingress>> ReadNamespacedIngressStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Ingress>> PatchNamespacedIngressStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Ingress>> ReplaceNamespacedIngressStatusWithHttpMessagesAsync(V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedNetworkPolicyWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NetworkPolicyList>> ListNamespacedNetworkPolicyWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NetworkPolicy>> CreateNamespacedNetworkPolicyWithHttpMessagesAsync(V1NetworkPolicy body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedNetworkPolicyWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NetworkPolicy>> ReadNamespacedNetworkPolicyWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NetworkPolicy>> PatchNamespacedNetworkPolicyWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NetworkPolicy>> ReplaceNamespacedNetworkPolicyWithHttpMessagesAsync(V1NetworkPolicy body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1NetworkPolicyList>> ListNetworkPolicyForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.INodeOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.INodeV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionRuntimeClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RuntimeClassList>> ListRuntimeClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RuntimeClass>> CreateRuntimeClassWithHttpMessagesAsync(V1RuntimeClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteRuntimeClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RuntimeClass>> ReadRuntimeClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RuntimeClass>> PatchRuntimeClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RuntimeClass>> ReplaceRuntimeClassWithHttpMessagesAsync(V1RuntimeClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.InternalApiserverOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IInternalApiserverOperations operations);
    [AsyncStateMachineAttribute("k8s.InternalApiserverOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IInternalApiserverOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.InternalApiserverV1alpha1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IInternalApiserverV1alpha1Operations operations);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IInternalApiserverV1alpha1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionStorageVersion(IInternalApiserverV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<DeleteCollectionStorageVersionAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionStorageVersionAsync(IInternalApiserverV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionList ListStorageVersion(IInternalApiserverV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<ListStorageVersionAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionList> ListStorageVersionAsync(IInternalApiserverV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersion CreateStorageVersion(IInternalApiserverV1alpha1Operations operations, V1alpha1StorageVersion body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<CreateStorageVersionAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersion> CreateStorageVersionAsync(IInternalApiserverV1alpha1Operations operations, V1alpha1StorageVersion body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteStorageVersion(IInternalApiserverV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<DeleteStorageVersionAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteStorageVersionAsync(IInternalApiserverV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersion ReadStorageVersion(IInternalApiserverV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<ReadStorageVersionAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersion> ReadStorageVersionAsync(IInternalApiserverV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersion PatchStorageVersion(IInternalApiserverV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<PatchStorageVersionAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersion> PatchStorageVersionAsync(IInternalApiserverV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersion ReplaceStorageVersion(IInternalApiserverV1alpha1Operations operations, V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<ReplaceStorageVersionAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersion> ReplaceStorageVersionAsync(IInternalApiserverV1alpha1Operations operations, V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersion ReadStorageVersionStatus(IInternalApiserverV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<ReadStorageVersionStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersion> ReadStorageVersionStatusAsync(IInternalApiserverV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersion PatchStorageVersionStatus(IInternalApiserverV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<PatchStorageVersionStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersion> PatchStorageVersionStatusAsync(IInternalApiserverV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersion ReplaceStorageVersionStatus(IInternalApiserverV1alpha1Operations operations, V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.InternalApiserverV1alpha1OperationsExtensions/<ReplaceStorageVersionStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersion> ReplaceStorageVersionStatusAsync(IInternalApiserverV1alpha1Operations operations, V1alpha1StorageVersion body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
public interface k8s.IOpenidOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<string>> GetServiceAccountIssuerOpenIDKeysetWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IPolicyOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IPolicyV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudgetList>> ListNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> CreateNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1PodDisruptionBudget body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> ReadNamespacedPodDisruptionBudgetWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> PatchNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> ReplaceNamespacedPodDisruptionBudgetWithHttpMessagesAsync(V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> ReadNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> PatchNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudget>> ReplaceNamespacedPodDisruptionBudgetStatusWithHttpMessagesAsync(V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PodDisruptionBudgetList>> ListPodDisruptionBudgetForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IRbacAuthorizationOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IRbacAuthorizationV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionClusterRoleBindingWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRoleBindingList>> ListClusterRoleBindingWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> CreateClusterRoleBindingWithHttpMessagesAsync(V1ClusterRoleBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteClusterRoleBindingWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> ReadClusterRoleBindingWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> PatchClusterRoleBindingWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRoleBinding>> ReplaceClusterRoleBindingWithHttpMessagesAsync(V1ClusterRoleBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionClusterRoleWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRoleList>> ListClusterRoleWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRole>> CreateClusterRoleWithHttpMessagesAsync(V1ClusterRole body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteClusterRoleWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRole>> ReadClusterRoleWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRole>> PatchClusterRoleWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1ClusterRole>> ReplaceClusterRoleWithHttpMessagesAsync(V1ClusterRole body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedRoleBindingWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleBindingList>> ListNamespacedRoleBindingWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleBinding>> CreateNamespacedRoleBindingWithHttpMessagesAsync(V1RoleBinding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedRoleBindingWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleBinding>> ReadNamespacedRoleBindingWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleBinding>> PatchNamespacedRoleBindingWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleBinding>> ReplaceNamespacedRoleBindingWithHttpMessagesAsync(V1RoleBinding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedRoleWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleList>> ListNamespacedRoleWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Role>> CreateNamespacedRoleWithHttpMessagesAsync(V1Role body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedRoleWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Role>> ReadNamespacedRoleWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Role>> PatchNamespacedRoleWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Role>> ReplaceNamespacedRoleWithHttpMessagesAsync(V1Role body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleBindingList>> ListRoleBindingForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1RoleList>> ListRoleForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IResourceOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IResourceV1alpha3Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionDeviceClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3DeviceClassList>> ListDeviceClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> CreateDeviceClassWithHttpMessagesAsync(V1alpha3DeviceClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> DeleteDeviceClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> ReadDeviceClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> PatchDeviceClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3DeviceClass>> ReplaceDeviceClassWithHttpMessagesAsync(V1alpha3DeviceClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedPodSchedulingContextWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContextList>> ListNamespacedPodSchedulingContextWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> CreateNamespacedPodSchedulingContextWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> DeleteNamespacedPodSchedulingContextWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> ReadNamespacedPodSchedulingContextWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> PatchNamespacedPodSchedulingContextWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> ReplaceNamespacedPodSchedulingContextWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> ReadNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> PatchNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContext>> ReplaceNamespacedPodSchedulingContextStatusWithHttpMessagesAsync(V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedResourceClaimWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimList>> ListNamespacedResourceClaimWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> CreateNamespacedResourceClaimWithHttpMessagesAsync(V1alpha3ResourceClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> DeleteNamespacedResourceClaimWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> ReadNamespacedResourceClaimWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> PatchNamespacedResourceClaimWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> ReplaceNamespacedResourceClaimWithHttpMessagesAsync(V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> ReadNamespacedResourceClaimStatusWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> PatchNamespacedResourceClaimStatusWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaim>> ReplaceNamespacedResourceClaimStatusWithHttpMessagesAsync(V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedResourceClaimTemplateWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplateList>> ListNamespacedResourceClaimTemplateWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> CreateNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1alpha3ResourceClaimTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> DeleteNamespacedResourceClaimTemplateWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> ReadNamespacedResourceClaimTemplateWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> PatchNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplate>> ReplaceNamespacedResourceClaimTemplateWithHttpMessagesAsync(V1alpha3ResourceClaimTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3PodSchedulingContextList>> ListPodSchedulingContextForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimList>> ListResourceClaimForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceClaimTemplateList>> ListResourceClaimTemplateForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionResourceSliceWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceSliceList>> ListResourceSliceWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> CreateResourceSliceWithHttpMessagesAsync(V1alpha3ResourceSlice body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> DeleteResourceSliceWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> ReadResourceSliceWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> PatchResourceSliceWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha3ResourceSlice>> ReplaceResourceSliceWithHttpMessagesAsync(V1alpha3ResourceSlice body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ISchedulingOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ISchedulingV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionPriorityClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityClassList>> ListPriorityClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityClass>> CreatePriorityClassWithHttpMessagesAsync(V1PriorityClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeletePriorityClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityClass>> ReadPriorityClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityClass>> PatchPriorityClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1PriorityClass>> ReplacePriorityClassWithHttpMessagesAsync(V1PriorityClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.ISpec`1 {
    public T Spec { get; public set; }
    public abstract virtual T get_Spec();
    public abstract virtual void set_Spec(T value);
}
public interface k8s.IStatus`1 {
    public T Status { get; public set; }
    public abstract virtual T get_Status();
    public abstract virtual void set_Status(T value);
}
public interface k8s.IStoragemigrationOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IStoragemigrationV1alpha1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionStorageVersionMigrationWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigrationList>> ListStorageVersionMigrationWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> CreateStorageVersionMigrationWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteStorageVersionMigrationWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> ReadStorageVersionMigrationWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> PatchStorageVersionMigrationWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> ReplaceStorageVersionMigrationWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> ReadStorageVersionMigrationStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> PatchStorageVersionMigrationStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1StorageVersionMigration>> ReplaceStorageVersionMigrationStatusWithHttpMessagesAsync(V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IStorageOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIGroup>> GetAPIGroupWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IStorageV1alpha1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClassList>> ListVolumeAttributesClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> CreateVolumeAttributesClassWithHttpMessagesAsync(V1alpha1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> DeleteVolumeAttributesClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> ReadVolumeAttributesClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> PatchVolumeAttributesClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1alpha1VolumeAttributesClass>> ReplaceVolumeAttributesClassWithHttpMessagesAsync(V1alpha1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IStorageV1beta1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionVolumeAttributesClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClassList>> ListVolumeAttributesClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> CreateVolumeAttributesClassWithHttpMessagesAsync(V1beta1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> DeleteVolumeAttributesClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> ReadVolumeAttributesClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> PatchVolumeAttributesClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1beta1VolumeAttributesClass>> ReplaceVolumeAttributesClassWithHttpMessagesAsync(V1beta1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IStorageV1Operations {
    public abstract virtual Task`1<HttpOperationResponse`1<V1APIResourceList>> GetAPIResourcesWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionCSIDriverWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIDriverList>> ListCSIDriverWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIDriver>> CreateCSIDriverWithHttpMessagesAsync(V1CSIDriver body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIDriver>> DeleteCSIDriverWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIDriver>> ReadCSIDriverWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIDriver>> PatchCSIDriverWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIDriver>> ReplaceCSIDriverWithHttpMessagesAsync(V1CSIDriver body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionCSINodeWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSINodeList>> ListCSINodeWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSINode>> CreateCSINodeWithHttpMessagesAsync(V1CSINode body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSINode>> DeleteCSINodeWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSINode>> ReadCSINodeWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSINode>> PatchCSINodeWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSINode>> ReplaceCSINodeWithHttpMessagesAsync(V1CSINode body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIStorageCapacityList>> ListCSIStorageCapacityForAllNamespacesWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionNamespacedCSIStorageCapacityWithHttpMessagesAsync(string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIStorageCapacityList>> ListNamespacedCSIStorageCapacityWithHttpMessagesAsync(string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> CreateNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1CSIStorageCapacity body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteNamespacedCSIStorageCapacityWithHttpMessagesAsync(string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> ReadNamespacedCSIStorageCapacityWithHttpMessagesAsync(string name, string namespaceParameter, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> PatchNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1CSIStorageCapacity>> ReplaceNamespacedCSIStorageCapacityWithHttpMessagesAsync(V1CSIStorageCapacity body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionStorageClassWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StorageClassList>> ListStorageClassWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StorageClass>> CreateStorageClassWithHttpMessagesAsync(V1StorageClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StorageClass>> DeleteStorageClassWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StorageClass>> ReadStorageClassWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StorageClass>> PatchStorageClassWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1StorageClass>> ReplaceStorageClassWithHttpMessagesAsync(V1StorageClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1Status>> DeleteCollectionVolumeAttachmentWithHttpMessagesAsync(V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachmentList>> ListVolumeAttachmentWithHttpMessagesAsync(Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> CreateVolumeAttachmentWithHttpMessagesAsync(V1VolumeAttachment body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> DeleteVolumeAttachmentWithHttpMessagesAsync(string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> ReadVolumeAttachmentWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> PatchVolumeAttachmentWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> ReplaceVolumeAttachmentWithHttpMessagesAsync(V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> ReadVolumeAttachmentStatusWithHttpMessagesAsync(string name, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> PatchVolumeAttachmentStatusWithHttpMessagesAsync(V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`1<V1VolumeAttachment>> ReplaceVolumeAttachmentStatusWithHttpMessagesAsync(V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IStreamDemuxer {
    public abstract virtual void Start();
    public abstract virtual Stream GetStream(Nullable`1<ChannelIndex> inputIndex, Nullable`1<ChannelIndex> outputIndex);
    public abstract virtual Stream GetStream(Nullable`1<byte> inputIndex, Nullable`1<byte> outputIndex);
    public abstract virtual Task Write(ChannelIndex index, Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public abstract virtual Task Write(byte index, Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ItemsExt : object {
    [ExtensionAttribute]
public static IEnumerator`1<T> GetEnumerator(IItems`1<T> items);
}
public interface k8s.IValidate {
    public abstract virtual void Validate();
}
public interface k8s.IVersionOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<VersionInfo>> GetCodeWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface k8s.IWellKnownOperations {
    public abstract virtual Task`1<HttpOperationResponse`1<string>> GetServiceAccountIssuerOpenIDConfigurationWithHttpMessagesAsync(IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, CancellationToken cancellationToken);
}
public class k8s.KubeConfigModels.AuthProvider : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Config>k__BackingField;
    [YamlMemberAttribute]
public string Name { get; public set; }
    [YamlMemberAttribute]
public Dictionary`2<string, string> Config { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(Dictionary`2<string, string> value);
}
public class k8s.KubeConfigModels.Cluster : object {
    [CompilerGeneratedAttribute]
private ClusterEndpoint <ClusterEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [YamlMemberAttribute]
public ClusterEndpoint ClusterEndpoint { get; public set; }
    [YamlMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public ClusterEndpoint get_ClusterEndpoint();
    [CompilerGeneratedAttribute]
public void set_ClusterEndpoint(ClusterEndpoint value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class k8s.KubeConfigModels.ClusterEndpoint : object {
    [CompilerGeneratedAttribute]
private string <CertificateAuthority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateAuthorityData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Server>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TlsServerName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipTlsVerify>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<NamedExtension> <Extensions>k__BackingField;
    [YamlMemberAttribute]
public string CertificateAuthority { get; public set; }
    [YamlMemberAttribute]
public string CertificateAuthorityData { get; public set; }
    [YamlMemberAttribute]
public string Server { get; public set; }
    [YamlMemberAttribute]
public string TlsServerName { get; public set; }
    [YamlMemberAttribute]
public bool SkipTlsVerify { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<NamedExtension> Extensions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CertificateAuthority();
    [CompilerGeneratedAttribute]
public void set_CertificateAuthority(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateAuthorityData();
    [CompilerGeneratedAttribute]
public void set_CertificateAuthorityData(string value);
    [CompilerGeneratedAttribute]
public string get_Server();
    [CompilerGeneratedAttribute]
public void set_Server(string value);
    [CompilerGeneratedAttribute]
public string get_TlsServerName();
    [CompilerGeneratedAttribute]
public void set_TlsServerName(string value);
    [CompilerGeneratedAttribute]
public bool get_SkipTlsVerify();
    [CompilerGeneratedAttribute]
public void set_SkipTlsVerify(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<NamedExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(IEnumerable`1<NamedExtension> value);
}
public class k8s.KubeConfigModels.Context : object {
    [CompilerGeneratedAttribute]
private ContextDetails <ContextDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<NamedExtension> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [YamlMemberAttribute]
public ContextDetails ContextDetails { get; public set; }
    [YamlMemberAttribute]
public string Name { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<NamedExtension> Extensions { get; public set; }
    [ObsoleteAttribute("This property is not set by the YAML config. Use ContextDetails.Namespace instead.")]
[YamlMemberAttribute]
public string Namespace { get; public set; }
    [CompilerGeneratedAttribute]
public ContextDetails get_ContextDetails();
    [CompilerGeneratedAttribute]
public void set_ContextDetails(ContextDetails value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<NamedExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(IEnumerable`1<NamedExtension> value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
}
public class k8s.KubeConfigModels.ContextDetails : object {
    [CompilerGeneratedAttribute]
private string <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<NamedExtension> <Extensions>k__BackingField;
    [YamlMemberAttribute]
public string Cluster { get; public set; }
    [YamlMemberAttribute]
public string User { get; public set; }
    [YamlMemberAttribute]
public string Namespace { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<NamedExtension> Extensions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Cluster();
    [CompilerGeneratedAttribute]
public void set_Cluster(string value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<NamedExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(IEnumerable`1<NamedExtension> value);
}
public class k8s.KubeConfigModels.ExecCredentialResponse : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private ExecStatus <Status>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("status")]
public ExecStatus Status { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public ExecStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(ExecStatus value);
}
public class k8s.KubeConfigModels.ExternalExecution : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Dictionary`2<string, string>> <EnvironmentVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstallHint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProvideClusterInfo>k__BackingField;
    [YamlMemberAttribute]
public string ApiVersion { get; public set; }
    [YamlMemberAttribute]
public string Command { get; public set; }
    [YamlMemberAttribute]
public IList`1<Dictionary`2<string, string>> EnvironmentVariables { get; public set; }
    [YamlMemberAttribute]
public IList`1<string> Arguments { get; public set; }
    [YamlMemberAttribute]
public string InstallHint { get; public set; }
    [YamlMemberAttribute]
public bool ProvideClusterInfo { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(string value);
    [CompilerGeneratedAttribute]
public IList`1<Dictionary`2<string, string>> get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(IList`1<Dictionary`2<string, string>> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_InstallHint();
    [CompilerGeneratedAttribute]
public void set_InstallHint(string value);
    [CompilerGeneratedAttribute]
public bool get_ProvideClusterInfo();
    [CompilerGeneratedAttribute]
public void set_ProvideClusterInfo(bool value);
}
public class k8s.KubeConfigModels.K8SConfiguration : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Preferences>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Context> <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Cluster> <Clusters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<User> <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<NamedExtension> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [YamlMemberAttribute]
public IDictionary`2<string, object> Preferences { get; public set; }
    [YamlMemberAttribute]
public string ApiVersion { get; public set; }
    [YamlMemberAttribute]
public string Kind { get; public set; }
    [YamlMemberAttribute]
public string CurrentContext { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<Context> Contexts { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<Cluster> Clusters { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<User> Users { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<NamedExtension> Extensions { get; public set; }
    [YamlIgnoreAttribute]
public string FileName { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Preferences();
    [CompilerGeneratedAttribute]
public void set_Preferences(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentContext();
    [CompilerGeneratedAttribute]
public void set_CurrentContext(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Context> get_Contexts();
    [CompilerGeneratedAttribute]
public void set_Contexts(IEnumerable`1<Context> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Cluster> get_Clusters();
    [CompilerGeneratedAttribute]
public void set_Clusters(IEnumerable`1<Cluster> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<User> get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(IEnumerable`1<User> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<NamedExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(IEnumerable`1<NamedExtension> value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
}
public class k8s.KubeConfigModels.NamedExtension : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Extension>k__BackingField;
    [YamlMemberAttribute]
public string Name { get; public set; }
    [DynamicAttribute]
[YamlMemberAttribute]
public object Extension { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Extension();
    [CompilerGeneratedAttribute]
public void set_Extension(object value);
}
public class k8s.KubeConfigModels.User : object {
    [CompilerGeneratedAttribute]
private UserCredentials <UserCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [YamlMemberAttribute]
public UserCredentials UserCredentials { get; public set; }
    [YamlMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public UserCredentials get_UserCredentials();
    [CompilerGeneratedAttribute]
public void set_UserCredentials(UserCredentials value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class k8s.KubeConfigModels.UserCredentials : object {
    [CompilerGeneratedAttribute]
private string <ClientCertificateData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientKeyData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Impersonate>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ImpersonateGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ImpersonateUserExtra>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthProvider <AuthProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<NamedExtension> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalExecution <ExternalExecution>k__BackingField;
    [YamlMemberAttribute]
public string ClientCertificateData { get; public set; }
    [YamlMemberAttribute]
public string ClientCertificate { get; public set; }
    [YamlMemberAttribute]
public string ClientKeyData { get; public set; }
    [YamlMemberAttribute]
public string ClientKey { get; public set; }
    [YamlMemberAttribute]
public string Token { get; public set; }
    [YamlMemberAttribute]
public string Impersonate { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<string> ImpersonateGroups { get; public set; }
    [YamlMemberAttribute]
public Dictionary`2<string, string> ImpersonateUserExtra { get; public set; }
    [YamlMemberAttribute]
public string UserName { get; public set; }
    [YamlMemberAttribute]
public string Password { get; public set; }
    [YamlMemberAttribute]
public AuthProvider AuthProvider { get; public set; }
    [YamlMemberAttribute]
public IEnumerable`1<NamedExtension> Extensions { get; public set; }
    [YamlMemberAttribute]
public ExternalExecution ExternalExecution { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientCertificateData();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateData(string value);
    [CompilerGeneratedAttribute]
public string get_ClientCertificate();
    [CompilerGeneratedAttribute]
public void set_ClientCertificate(string value);
    [CompilerGeneratedAttribute]
public string get_ClientKeyData();
    [CompilerGeneratedAttribute]
public void set_ClientKeyData(string value);
    [CompilerGeneratedAttribute]
public string get_ClientKey();
    [CompilerGeneratedAttribute]
public void set_ClientKey(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_Impersonate();
    [CompilerGeneratedAttribute]
public void set_Impersonate(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ImpersonateGroups();
    [CompilerGeneratedAttribute]
public void set_ImpersonateGroups(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ImpersonateUserExtra();
    [CompilerGeneratedAttribute]
public void set_ImpersonateUserExtra(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public AuthProvider get_AuthProvider();
    [CompilerGeneratedAttribute]
public void set_AuthProvider(AuthProvider value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<NamedExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(IEnumerable`1<NamedExtension> value);
    [CompilerGeneratedAttribute]
public ExternalExecution get_ExternalExecution();
    [CompilerGeneratedAttribute]
public void set_ExternalExecution(ExternalExecution value);
}
public class k8s.Kubernetes : AbstractKubernetes {
    private JsonSerializerOptions jsonSerializerOptions;
    [CompilerGeneratedAttribute]
private X509Certificate2Collection <CaCerts>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2 <ClientCert>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipTlsVerify>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TlsServerName>k__BackingField;
    private Uri baseuri;
    [CompilerGeneratedAttribute]
private ServiceClientCredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMessageHandler <FirstMessageHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private SocketsHttpHandler <HttpClientHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableHttp2>k__BackingField;
    private bool _disposed;
    [CompilerGeneratedAttribute]
private Func`1<WebSocketBuilder> <CreateWebSocketBuilder>k__BackingField;
    private X509Certificate2Collection CaCerts { get; }
    private X509Certificate2 ClientCert { get; private set; }
    private bool SkipTlsVerify { get; }
    private string TlsServerName { get; }
    public Uri BaseUri { get; public set; }
    public ServiceClientCredentials Credentials { get; private set; }
    public HttpClient HttpClient { get; protected set; }
    private HttpMessageHandler FirstMessageHandler { get; private set; }
    private SocketsHttpHandler HttpClientHandler { get; private set; }
    private bool DisableHttp2 { get; private set; }
    public Func`1<WebSocketBuilder> CreateWebSocketBuilder { get; public set; }
    public Kubernetes(KubernetesClientConfiguration config, DelegatingHandler[] handlers);
    private void ValidateConfig(KubernetesClientConfiguration config);
    private void InitializeFromConfig(KubernetesClientConfiguration config);
    [CompilerGeneratedAttribute]
private X509Certificate2Collection get_CaCerts();
    [CompilerGeneratedAttribute]
private X509Certificate2 get_ClientCert();
    [CompilerGeneratedAttribute]
private void set_ClientCert(X509Certificate2 value);
    [CompilerGeneratedAttribute]
private bool get_SkipTlsVerify();
    [CompilerGeneratedAttribute]
private string get_TlsServerName();
    private void CreateHttpClient(DelegatingHandler[] handlers, KubernetesClientConfiguration config);
    private void SetCredentials(KubernetesClientConfiguration config);
    public static bool CertificateValidationCallBack(object sender, X509Certificate2Collection caCerts, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);
    public static ServiceClientCredentials CreateCredentials(KubernetesClientConfiguration config);
    public sealed virtual Uri get_BaseUri();
    public sealed virtual void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public ServiceClientCredentials get_Credentials();
    [CompilerGeneratedAttribute]
private void set_Credentials(ServiceClientCredentials value);
    [CompilerGeneratedAttribute]
public HttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
protected void set_HttpClient(HttpClient value);
    [CompilerGeneratedAttribute]
private HttpMessageHandler get_FirstMessageHandler();
    [CompilerGeneratedAttribute]
private void set_FirstMessageHandler(HttpMessageHandler value);
    [CompilerGeneratedAttribute]
private SocketsHttpHandler get_HttpClientHandler();
    [CompilerGeneratedAttribute]
private void set_HttpClientHandler(SocketsHttpHandler value);
    [CompilerGeneratedAttribute]
private bool get_DisableHttp2();
    [CompilerGeneratedAttribute]
private void set_DisableHttp2(bool value);
    private void Initialize();
    [AsyncStateMachineAttribute("k8s.Kubernetes/<CreateResultAsync>d__46`1")]
protected virtual Task`1<HttpOperationResponse`1<T>> CreateResultAsync(HttpRequestMessage httpRequest, HttpResponseMessage httpResponse, Nullable`1<bool> watch, CancellationToken cancellationToken);
    protected virtual Task`1<HttpResponseMessage> SendRequest(string relativeUri, HttpMethod method, IReadOnlyDictionary`2<string, IReadOnlyList`1<string>> customHeaders, T body, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.Kubernetes/<SendRequestRaw>d__48")]
protected virtual Task`1<HttpResponseMessage> SendRequestRaw(string requestContent, HttpRequestMessage httpRequest, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("k8s.Kubernetes/<NamespacedPodExecAsync>d__52")]
public sealed virtual Task`1<int> NamespacedPodExecAsync(string name, string namespace, string container, IEnumerable`1<string> command, bool tty, ExecAsyncCallback action, CancellationToken cancellationToken);
    public static int GetExitCodeOrThrow(V1Status status);
    [CompilerGeneratedAttribute]
public Func`1<WebSocketBuilder> get_CreateWebSocketBuilder();
    [CompilerGeneratedAttribute]
public void set_CreateWebSocketBuilder(Func`1<WebSocketBuilder> value);
    public sealed virtual Task`1<WebSocket> WebSocketNamespacedPodExecAsync(string name, string namespace, string command, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.Kubernetes/<MuxedStreamNamespacedPodExecAsync>d__59")]
public virtual Task`1<IStreamDemuxer> MuxedStreamNamespacedPodExecAsync(string name, string namespace, IEnumerable`1<string> command, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public virtual Task`1<WebSocket> WebSocketNamespacedPodExecAsync(string name, string namespace, IEnumerable`1<string> command, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public sealed virtual Task`1<WebSocket> WebSocketNamespacedPodPortForwardAsync(string name, string namespace, IEnumerable`1<int> ports, string webSocketSubProtocol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public sealed virtual Task`1<WebSocket> WebSocketNamespacedPodAttachAsync(string name, string namespace, string container, bool stderr, bool stdin, bool stdout, bool tty, string webSocketSubProtol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.Kubernetes/<StreamConnectAsync>d__65")]
protected Task`1<WebSocket> StreamConnectAsync(Uri uri, string webSocketSubProtocol, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private bool <InitializeFromConfig>b__3_1(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private X509Certificate <InitializeFromConfig>b__3_2(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers);
}
public class k8s.KubernetesClientConfiguration : object {
    public static string KubeConfigDefaultLocation;
    [CompilerGeneratedAttribute]
private string <CurrentContext>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <KubeConfigEnvironmentVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private static TimeSpan <ExecTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHandler`1<DataReceivedEventArgs> ExecStdError;
    private JsonSerializerOptions jsonSerializerOptions;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2Collection <SslCaCerts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertificateData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertificateKeyData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertificateFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<X509KeyStorageFlags> <ClientCertificateKeyStoreFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientKeyFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipTlsVerify>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TlsServerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenProvider <TokenProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <HttpClientTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<SocketsHttpHandler> <FirstMessageHandlerSetup>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableHttp2>k__BackingField;
    internal static string ServiceAccountPath;
    internal static string ServiceAccountTokenKeyFileName;
    internal static string ServiceAccountRootCAKeyFileName;
    internal static string ServiceAccountNamespaceFileName;
    public string CurrentContext { get; private set; }
    internal static string KubeConfigEnvironmentVariable { get; internal set; }
    public static TimeSpan ExecTimeout { get; public set; }
    public string Namespace { get; public set; }
    public string Host { get; public set; }
    public X509Certificate2Collection SslCaCerts { get; public set; }
    public string ClientCertificateData { get; public set; }
    public string ClientCertificateKeyData { get; public set; }
    public string ClientCertificateFilePath { get; public set; }
    public Nullable`1<X509KeyStorageFlags> ClientCertificateKeyStoreFlags { get; public set; }
    public string ClientKeyFilePath { get; public set; }
    public bool SkipTlsVerify { get; public set; }
    public string TlsServerName { get; public set; }
    public string UserAgent { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public string AccessToken { get; public set; }
    public ITokenProvider TokenProvider { get; public set; }
    public TimeSpan HttpClientTimeout { get; public set; }
    public Action`1<SocketsHttpHandler> FirstMessageHandlerSetup { get; public set; }
    public bool DisableHttp2 { get; public set; }
    public JsonSerializerOptions JsonSerializerOptions { get; private set; }
    private static KubernetesClientConfiguration();
    [CompilerGeneratedAttribute]
public string get_CurrentContext();
    [CompilerGeneratedAttribute]
private void set_CurrentContext(string value);
    [CompilerGeneratedAttribute]
internal static string get_KubeConfigEnvironmentVariable();
    [CompilerGeneratedAttribute]
internal static void set_KubeConfigEnvironmentVariable(string value);
    [CompilerGeneratedAttribute]
public static TimeSpan get_ExecTimeout();
    [CompilerGeneratedAttribute]
public static void set_ExecTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public static void add_ExecStdError(EventHandler`1<DataReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public static void remove_ExecStdError(EventHandler`1<DataReceivedEventArgs> value);
    public static KubernetesClientConfiguration BuildDefaultConfig();
    public static KubernetesClientConfiguration BuildConfigFromConfigFile(string kubeconfigPath, string currentContext, string masterUrl, bool useRelativePaths);
    public static KubernetesClientConfiguration BuildConfigFromConfigFile(FileInfo kubeconfig, string currentContext, string masterUrl, bool useRelativePaths);
    [AsyncStateMachineAttribute("k8s.KubernetesClientConfiguration/<BuildConfigFromConfigFileAsync>d__19")]
public static Task`1<KubernetesClientConfiguration> BuildConfigFromConfigFileAsync(FileInfo kubeconfig, string currentContext, string masterUrl, bool useRelativePaths);
    public static KubernetesClientConfiguration BuildConfigFromConfigFile(Stream kubeconfig, string currentContext, string masterUrl);
    [AsyncStateMachineAttribute("k8s.KubernetesClientConfiguration/<BuildConfigFromConfigFileAsync>d__21")]
public static Task`1<KubernetesClientConfiguration> BuildConfigFromConfigFileAsync(Stream kubeconfig, string currentContext, string masterUrl);
    public static KubernetesClientConfiguration BuildConfigFromConfigObject(K8SConfiguration k8SConfig, string currentContext, string masterUrl);
    private static KubernetesClientConfiguration GetKubernetesClientConfiguration(string currentContext, string masterUrl, K8SConfiguration k8SConfig);
    private void InitializeContext(K8SConfiguration k8SConfig, string currentContext);
    private void SetClusterDetails(K8SConfiguration k8SConfig, Context activeContext);
    private void SetUserDetails(K8SConfiguration k8SConfig, Context activeContext);
    public static Process CreateRunnableExternalProcess(ExternalExecution config, EventHandler`1<DataReceivedEventArgs> captureStdError);
    public static ExecCredentialResponse ExecuteExternalCommand(ExternalExecution config);
    [AsyncStateMachineAttribute("k8s.KubernetesClientConfiguration/<LoadKubeConfigAsync>d__29")]
public static Task`1<K8SConfiguration> LoadKubeConfigAsync(string kubeconfigPath, bool useRelativePaths);
    public static K8SConfiguration LoadKubeConfig(string kubeconfigPath, bool useRelativePaths);
    [AsyncStateMachineAttribute("k8s.KubernetesClientConfiguration/<LoadKubeConfigAsync>d__31")]
public static Task`1<K8SConfiguration> LoadKubeConfigAsync(FileInfo kubeconfig, bool useRelativePaths);
    public static K8SConfiguration LoadKubeConfig(FileInfo kubeconfig, bool useRelativePaths);
    [AsyncStateMachineAttribute("k8s.KubernetesClientConfiguration/<LoadKubeConfigAsync>d__33")]
public static Task`1<K8SConfiguration> LoadKubeConfigAsync(Stream kubeconfigStream);
    public static K8SConfiguration LoadKubeConfig(Stream kubeconfigStream);
    internal static K8SConfiguration LoadKubeConfig(FileInfo[] kubeConfigs, bool useRelativePaths);
    [AsyncStateMachineAttribute("k8s.KubernetesClientConfiguration/<LoadKubeConfigAsync>d__36")]
internal static Task`1<K8SConfiguration> LoadKubeConfigAsync(FileInfo[] kubeConfigs, bool useRelativePaths);
    private static string GetFullPath(K8SConfiguration configuration, string path);
    private static void MergeKubeConfig(K8SConfiguration basek8SConfig, K8SConfiguration mergek8SConfig);
    private static IEnumerable`1<T> MergeLists(IEnumerable`1<T> baseList, IEnumerable`1<T> mergeList, Func`2<T, string> getNameFunc);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public X509Certificate2Collection get_SslCaCerts();
    [CompilerGeneratedAttribute]
public void set_SslCaCerts(X509Certificate2Collection value);
    [CompilerGeneratedAttribute]
public string get_ClientCertificateData();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateData(string value);
    [CompilerGeneratedAttribute]
public string get_ClientCertificateKeyData();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateKeyData(string value);
    [CompilerGeneratedAttribute]
public string get_ClientCertificateFilePath();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateFilePath(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<X509KeyStorageFlags> get_ClientCertificateKeyStoreFlags();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateKeyStoreFlags(Nullable`1<X509KeyStorageFlags> value);
    [CompilerGeneratedAttribute]
public string get_ClientKeyFilePath();
    [CompilerGeneratedAttribute]
public void set_ClientKeyFilePath(string value);
    [CompilerGeneratedAttribute]
public bool get_SkipTlsVerify();
    [CompilerGeneratedAttribute]
public void set_SkipTlsVerify(bool value);
    [CompilerGeneratedAttribute]
public string get_TlsServerName();
    [CompilerGeneratedAttribute]
public void set_TlsServerName(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public ITokenProvider get_TokenProvider();
    [CompilerGeneratedAttribute]
public void set_TokenProvider(ITokenProvider value);
    [CompilerGeneratedAttribute]
public TimeSpan get_HttpClientTimeout();
    [CompilerGeneratedAttribute]
public void set_HttpClientTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public Action`1<SocketsHttpHandler> get_FirstMessageHandlerSetup();
    [CompilerGeneratedAttribute]
public void set_FirstMessageHandlerSetup(Action`1<SocketsHttpHandler> value);
    [CompilerGeneratedAttribute]
public bool get_DisableHttp2();
    [CompilerGeneratedAttribute]
public void set_DisableHttp2(bool value);
    public JsonSerializerOptions get_JsonSerializerOptions();
    private void set_JsonSerializerOptions(JsonSerializerOptions value);
    public void AddJsonOptions(Action`1<JsonSerializerOptions> configure);
    public static bool IsInCluster();
    public static KubernetesClientConfiguration InClusterConfig();
    [CompilerGeneratedAttribute]
private void <get_JsonSerializerOptions>b__114_0(JsonSerializerOptions options);
}
public class k8s.KubernetesException : Exception {
    [CompilerGeneratedAttribute]
private V1Status <Status>k__BackingField;
    public V1Status Status { get; private set; }
    public KubernetesException(V1Status status);
    public KubernetesException(V1Status status, Exception innerException);
    public KubernetesException(string message);
    public KubernetesException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public V1Status get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(V1Status value);
}
public static class k8s.KubernetesJson : object {
    private static JsonSerializerOptions JsonSerializerOptions;
    private static KubernetesJson();
    public static void AddJsonOptions(Action`1<JsonSerializerOptions> configure);
    public static TValue Deserialize(string json, JsonSerializerOptions jsonSerializerOptions);
    public static TValue Deserialize(Stream json, JsonSerializerOptions jsonSerializerOptions);
    public static string Serialize(object value, JsonSerializerOptions jsonSerializerOptions);
}
[ExtensionAttribute]
public static class k8s.KubernetesMetricsExtensions : object {
    [AsyncStateMachineAttribute("k8s.KubernetesMetricsExtensions/<GetKubernetesNodesMetricsAsync>d__0")]
[ExtensionAttribute]
public static Task`1<NodeMetricsList> GetKubernetesNodesMetricsAsync(IKubernetes kubernetes);
    [AsyncStateMachineAttribute("k8s.KubernetesMetricsExtensions/<GetKubernetesPodsMetricsAsync>d__1")]
[ExtensionAttribute]
public static Task`1<PodMetricsList> GetKubernetesPodsMetricsAsync(IKubernetes kubernetes);
    [AsyncStateMachineAttribute("k8s.KubernetesMetricsExtensions/<GetKubernetesPodsMetricsByNamespaceAsync>d__2")]
[ExtensionAttribute]
public static Task`1<PodMetricsList> GetKubernetesPodsMetricsByNamespaceAsync(IKubernetes kubernetes, string namespaceParameter);
}
public class k8s.KubernetesObject : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
}
internal class k8s.KubernetesRequestDigest : object {
    private static Regex ResourcePattern;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNonResourceRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verb>k__BackingField;
    public string Path { get; }
    public bool IsNonResourceRequest { get; }
    public string ApiGroup { get; }
    public string ApiVersion { get; }
    public string Kind { get; }
    public string Verb { get; }
    public KubernetesRequestDigest(string urlPath, bool isNonResourceRequest, string apiGroup, string apiVersion, string kind, string verb);
    private static KubernetesRequestDigest();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public bool get_IsNonResourceRequest();
    [CompilerGeneratedAttribute]
public string get_ApiGroup();
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public string get_Verb();
    public static KubernetesRequestDigest Parse(HttpRequestMessage request);
    private static KubernetesRequestDigest NonResource(string urlPath);
    public static bool IsResourceRequest(string urlPath);
    private static bool HasWatchParameter(HttpRequestMessage request);
}
[ExtensionAttribute]
public static class k8s.KubernetesYaml : object {
    private static object DeserializerLockObject;
    private static object SerializerLockObject;
    private static IDeserializer StrictDeserializer;
    private static IDeserializer Deserializer;
    private static IValueSerializer Serializer;
    private static IDictionary`2<string, Type> ModelTypeMap;
    private static DeserializerBuilder CommonDeserializerBuilder { get; }
    private static KubernetesYaml();
    private static DeserializerBuilder get_CommonDeserializerBuilder();
    private static IDeserializer GetDeserializer(bool strict);
    [AsyncStateMachineAttribute("k8s.KubernetesYaml/<LoadAllFromStreamAsync>d__10")]
public static Task`1<List`1<object>> LoadAllFromStreamAsync(Stream stream, IDictionary`2<string, Type> typeMap, bool strict);
    [AsyncStateMachineAttribute("k8s.KubernetesYaml/<LoadAllFromFileAsync>d__11")]
public static Task`1<List`1<object>> LoadAllFromFileAsync(string fileName, IDictionary`2<string, Type> typeMap, bool strict);
    public static List`1<object> LoadAllFromString(string content, IDictionary`2<string, Type> typeMap, bool strict);
    [AsyncStateMachineAttribute("k8s.KubernetesYaml/<LoadFromStreamAsync>d__13`1")]
public static Task`1<T> LoadFromStreamAsync(Stream stream, bool strict);
    [AsyncStateMachineAttribute("k8s.KubernetesYaml/<LoadFromFileAsync>d__14`1")]
public static Task`1<T> LoadFromFileAsync(string file, bool strict);
    [ObsoleteAttribute("use Deserialize")]
public static T LoadFromString(string content, bool strict);
    [ObsoleteAttribute("use Serialize")]
public static string SaveToString(T value);
    public static TValue Deserialize(string yaml, bool strict);
    public static TValue Deserialize(Stream yaml, bool strict);
    public static string SerializeAll(IEnumerable`1<object> values);
    public static string Serialize(object value);
    [ExtensionAttribute]
private static TBuilder WithOverridesFromJsonPropertyAttributes(TBuilder builder);
}
public interface k8s.LeaderElection.ILock {
    public string Identity { get; }
    public abstract virtual Task`1<LeaderElectionRecord> GetAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> CreateAsync(LeaderElectionRecord record, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> UpdateAsync(LeaderElectionRecord record, CancellationToken cancellationToken);
    public abstract virtual string get_Identity();
    public abstract virtual string Describe();
}
public class k8s.LeaderElection.LeaderElectionConfig : object {
    [CompilerGeneratedAttribute]
private ILock <Lock>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LeaseDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RenewDeadline>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RetryPeriod>k__BackingField;
    public ILock Lock { get; public set; }
    public TimeSpan LeaseDuration { get; public set; }
    public TimeSpan RenewDeadline { get; public set; }
    public TimeSpan RetryPeriod { get; public set; }
    public LeaderElectionConfig(ILock lock);
    [CompilerGeneratedAttribute]
public ILock get_Lock();
    [CompilerGeneratedAttribute]
public void set_Lock(ILock value);
    [CompilerGeneratedAttribute]
public TimeSpan get_LeaseDuration();
    [CompilerGeneratedAttribute]
public void set_LeaseDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RenewDeadline();
    [CompilerGeneratedAttribute]
public void set_RenewDeadline(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RetryPeriod();
    [CompilerGeneratedAttribute]
public void set_RetryPeriod(TimeSpan value);
}
public class k8s.LeaderElection.LeaderElectionRecord : object {
    [CompilerGeneratedAttribute]
private string <HolderIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LeaseDurationSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <AcquireTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <RenewTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LeaderTransitions>k__BackingField;
    public string HolderIdentity { get; public set; }
    public int LeaseDurationSeconds { get; public set; }
    public Nullable`1<DateTime> AcquireTime { get; public set; }
    public Nullable`1<DateTime> RenewTime { get; public set; }
    public int LeaderTransitions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HolderIdentity();
    [CompilerGeneratedAttribute]
public void set_HolderIdentity(string value);
    [CompilerGeneratedAttribute]
public int get_LeaseDurationSeconds();
    [CompilerGeneratedAttribute]
public void set_LeaseDurationSeconds(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_AcquireTime();
    [CompilerGeneratedAttribute]
public void set_AcquireTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_RenewTime();
    [CompilerGeneratedAttribute]
public void set_RenewTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public int get_LeaderTransitions();
    [CompilerGeneratedAttribute]
public void set_LeaderTransitions(int value);
    protected bool Equals(LeaderElectionRecord other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class k8s.LeaderElection.LeaderElector : object {
    private static double JitterFactor;
    private LeaderElectionConfig config;
    [CompilerGeneratedAttribute]
private Action OnStartedLeading;
    [CompilerGeneratedAttribute]
private Action OnStoppedLeading;
    [CompilerGeneratedAttribute]
private Action`1<string> OnNewLeader;
    [CompilerGeneratedAttribute]
private Action`1<Exception> OnError;
    private LeaderElectionRecord modreq(System.Runtime.CompilerServices.IsVolatile) observedRecord;
    private DateTimeOffset observedTime;
    private string reportedLeader;
    public LeaderElector(LeaderElectionConfig config);
    [CompilerGeneratedAttribute]
public void add_OnStartedLeading(Action value);
    [CompilerGeneratedAttribute]
public void remove_OnStartedLeading(Action value);
    [CompilerGeneratedAttribute]
public void add_OnStoppedLeading(Action value);
    [CompilerGeneratedAttribute]
public void remove_OnStoppedLeading(Action value);
    [CompilerGeneratedAttribute]
public void add_OnNewLeader(Action`1<string> value);
    [CompilerGeneratedAttribute]
public void remove_OnNewLeader(Action`1<string> value);
    [CompilerGeneratedAttribute]
public void add_OnError(Action`1<Exception> value);
    [CompilerGeneratedAttribute]
public void remove_OnError(Action`1<Exception> value);
    public bool IsLeader();
    public string GetLeader();
    [AsyncStateMachineAttribute("k8s.LeaderElection.LeaderElector/<RunUntilLeadershipLostAsync>d__20")]
public Task RunUntilLeadershipLostAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.LeaderElection.LeaderElector/<RunAndTryToHoldLeadershipForeverAsync>d__21")]
public Task RunAndTryToHoldLeadershipForeverAsync(CancellationToken cancellationToken);
    [ObsoleteAttribute("Replaced by RunUntilLeadershipLostAsync to encode behavior in method name.")]
public Task RunAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.LeaderElection.LeaderElector/<TryAcquireOrRenew>d__23")]
private Task`1<bool> TryAcquireOrRenew(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.LeaderElection.LeaderElector/<AcquireAsync>d__24")]
private Task AcquireAsync(CancellationToken cancellationToken);
    private void MaybeReportTransition();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void <AcquireAsync>b__24_0(Task`1<bool> t);
}
public class k8s.LeaderElection.ResourceLock.ConfigMapLock : MetaObjectAnnotationLock`1<V1ConfigMap> {
    public ConfigMapLock(IKubernetes client, string namespace, string name, string identity);
    protected virtual Task`1<V1ConfigMap> ReadMetaObjectAsync(IKubernetes client, string name, string namespaceParameter, CancellationToken cancellationToken);
    protected virtual Task`1<V1ConfigMap> CreateMetaObjectAsync(IKubernetes client, V1ConfigMap obj, string namespaceParameter, CancellationToken cancellationToken);
    protected virtual Task`1<V1ConfigMap> ReplaceMetaObjectAsync(IKubernetes client, V1ConfigMap obj, string name, string namespaceParameter, CancellationToken cancellationToken);
}
public class k8s.LeaderElection.ResourceLock.EndpointsLock : MetaObjectAnnotationLock`1<V1Endpoints> {
    public EndpointsLock(IKubernetes client, string namespace, string name, string identity);
    protected virtual Task`1<V1Endpoints> ReadMetaObjectAsync(IKubernetes client, string name, string namespaceParameter, CancellationToken cancellationToken);
    protected virtual Task`1<V1Endpoints> CreateMetaObjectAsync(IKubernetes client, V1Endpoints obj, string namespaceParameter, CancellationToken cancellationToken);
    protected virtual Task`1<V1Endpoints> ReplaceMetaObjectAsync(IKubernetes client, V1Endpoints obj, string name, string namespaceParameter, CancellationToken cancellationToken);
}
public class k8s.LeaderElection.ResourceLock.LeaseLock : MetaObjectLock`1<V1Lease> {
    public LeaseLock(IKubernetes client, string namespace, string name, string identity);
    protected virtual Task`1<V1Lease> ReadMetaObjectAsync(IKubernetes client, string name, string namespaceParameter, CancellationToken cancellationToken);
    protected virtual LeaderElectionRecord GetLeaderElectionRecord(V1Lease obj);
    protected virtual V1Lease SetLeaderElectionRecord(LeaderElectionRecord record, V1Lease metaObj);
    protected virtual Task`1<V1Lease> CreateMetaObjectAsync(IKubernetes client, V1Lease obj, string namespaceParameter, CancellationToken cancellationToken);
    protected virtual Task`1<V1Lease> ReplaceMetaObjectAsync(IKubernetes client, V1Lease obj, string name, string namespaceParameter, CancellationToken cancellationToken);
}
public abstract class k8s.LeaderElection.ResourceLock.MetaObjectAnnotationLock`1 : MetaObjectLock`1<T> {
    private static string LeaderElectionRecordAnnotationKey;
    protected MetaObjectAnnotationLock`1(IKubernetes client, string namespace, string name, string identity);
    protected virtual LeaderElectionRecord GetLeaderElectionRecord(T obj);
    protected virtual T SetLeaderElectionRecord(LeaderElectionRecord record, T metaObj);
}
public abstract class k8s.LeaderElection.ResourceLock.MetaObjectLock`1 : object {
    private IKubernetes client;
    private string ns;
    private string name;
    private string identity;
    private T metaObjCache;
    public string Identity { get; }
    protected MetaObjectLock`1(IKubernetes client, string namespace, string name, string identity);
    public sealed virtual string get_Identity();
    [AsyncStateMachineAttribute("k8s.LeaderElection.ResourceLock.MetaObjectLock`1/<GetAsync>d__8")]
public sealed virtual Task`1<LeaderElectionRecord> GetAsync(CancellationToken cancellationToken);
    protected abstract virtual Task`1<T> ReadMetaObjectAsync(IKubernetes client, string name, string namespaceParameter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.LeaderElection.ResourceLock.MetaObjectLock`1/<CreateAsync>d__10")]
public sealed virtual Task`1<bool> CreateAsync(LeaderElectionRecord record, CancellationToken cancellationToken);
    protected abstract virtual LeaderElectionRecord GetLeaderElectionRecord(T obj);
    protected abstract virtual T SetLeaderElectionRecord(LeaderElectionRecord record, T metaObj);
    protected abstract virtual Task`1<T> CreateMetaObjectAsync(IKubernetes client, T obj, string namespaceParameter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.LeaderElection.ResourceLock.MetaObjectLock`1/<UpdateAsync>d__14")]
public sealed virtual Task`1<bool> UpdateAsync(LeaderElectionRecord record, CancellationToken cancellationToken);
    protected abstract virtual Task`1<T> ReplaceMetaObjectAsync(IKubernetes client, T obj, string name, string namespaceParameter, CancellationToken cancellationToken);
    public sealed virtual string Describe();
}
public class k8s.LeaderElection.ResourceLock.MultiLock : object {
    private ILock primary;
    private ILock secondary;
    public string Identity { get; }
    public MultiLock(ILock primary, ILock secondary);
    public sealed virtual Task`1<LeaderElectionRecord> GetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.LeaderElection.ResourceLock.MultiLock/<CreateAsync>d__4")]
public sealed virtual Task`1<bool> CreateAsync(LeaderElectionRecord record, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.LeaderElection.ResourceLock.MultiLock/<UpdateAsync>d__5")]
public sealed virtual Task`1<bool> UpdateAsync(LeaderElectionRecord record, CancellationToken cancellationToken);
    public sealed virtual string get_Identity();
    public sealed virtual string Describe();
}
internal class k8s.LineSeparatedHttpContent : HttpContent {
    private HttpContent _originContent;
    private CancellationToken _cancellationToken;
    private Stream _originStream;
    [CompilerGeneratedAttribute]
private TextReader <StreamReader>k__BackingField;
    public TextReader StreamReader { get; private set; }
    public LineSeparatedHttpContent(HttpContent originContent, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public TextReader get_StreamReader();
    [CompilerGeneratedAttribute]
private void set_StreamReader(TextReader value);
    [AsyncStateMachineAttribute("k8s.LineSeparatedHttpContent/<SerializeToStreamAsync>d__8")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual bool TryComputeLength(Int64& length);
}
[ExtensionAttribute]
public static class k8s.LogsOperationsExtensions : object {
    [ExtensionAttribute]
public static void LogFileListHandler(ILogsOperations operations);
    [AsyncStateMachineAttribute("k8s.LogsOperationsExtensions/<LogFileListHandlerAsync>d__1")]
[ExtensionAttribute]
public static Task LogFileListHandlerAsync(ILogsOperations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static void LogFileHandler(ILogsOperations operations, string logpath);
    [AsyncStateMachineAttribute("k8s.LogsOperationsExtensions/<LogFileHandlerAsync>d__3")]
[ExtensionAttribute]
public static Task LogFileHandlerAsync(ILogsOperations operations, string logpath, CancellationToken cancellationToken);
}
public class k8s.Models.Admissionregistrationv1ServiceReference : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("port")]
public Nullable`1<int> Port { get; public set; }
    public Admissionregistrationv1ServiceReference(string name, string namespaceProperty, string path, Nullable`1<int> port);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.Admissionregistrationv1WebhookClientConfig : object {
    [CompilerGeneratedAttribute]
private Byte[] <CaBundle>k__BackingField;
    [CompilerGeneratedAttribute]
private Admissionregistrationv1ServiceReference <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [JsonPropertyNameAttribute("caBundle")]
public Byte[] CaBundle { get; public set; }
    [JsonPropertyNameAttribute("service")]
public Admissionregistrationv1ServiceReference Service { get; public set; }
    [JsonPropertyNameAttribute("url")]
public string Url { get; public set; }
    public Admissionregistrationv1WebhookClientConfig(Byte[] caBundle, Admissionregistrationv1ServiceReference service, string url);
    [CompilerGeneratedAttribute]
public Byte[] get_CaBundle();
    [CompilerGeneratedAttribute]
public void set_CaBundle(Byte[] value);
    [CompilerGeneratedAttribute]
public Admissionregistrationv1ServiceReference get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(Admissionregistrationv1ServiceReference value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    public virtual void Validate();
}
public class k8s.Models.Apiextensionsv1ServiceReference : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("port")]
public Nullable`1<int> Port { get; public set; }
    public Apiextensionsv1ServiceReference(string name, string namespaceProperty, string path, Nullable`1<int> port);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.Apiextensionsv1WebhookClientConfig : object {
    [CompilerGeneratedAttribute]
private Byte[] <CaBundle>k__BackingField;
    [CompilerGeneratedAttribute]
private Apiextensionsv1ServiceReference <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [JsonPropertyNameAttribute("caBundle")]
public Byte[] CaBundle { get; public set; }
    [JsonPropertyNameAttribute("service")]
public Apiextensionsv1ServiceReference Service { get; public set; }
    [JsonPropertyNameAttribute("url")]
public string Url { get; public set; }
    public Apiextensionsv1WebhookClientConfig(Byte[] caBundle, Apiextensionsv1ServiceReference service, string url);
    [CompilerGeneratedAttribute]
public Byte[] get_CaBundle();
    [CompilerGeneratedAttribute]
public void set_CaBundle(Byte[] value);
    [CompilerGeneratedAttribute]
public Apiextensionsv1ServiceReference get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(Apiextensionsv1ServiceReference value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    public virtual void Validate();
}
public class k8s.Models.Apiregistrationv1ServiceReference : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("port")]
public Nullable`1<int> Port { get; public set; }
    public Apiregistrationv1ServiceReference(string name, string namespaceProperty, Nullable`1<int> port);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.Authenticationv1TokenRequest : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TokenRequestSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TokenRequestStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1TokenRequestSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1TokenRequestStatus Status { get; public set; }
    public Authenticationv1TokenRequest(V1TokenRequestSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1TokenRequestStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1TokenRequestSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1TokenRequestSpec value);
    [CompilerGeneratedAttribute]
public V1TokenRequestStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1TokenRequestStatus value);
    public virtual void Validate();
}
public class k8s.Models.ContainerMetrics : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Usage>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("usage")]
public IDictionary`2<string, ResourceQuantity> Usage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(IDictionary`2<string, ResourceQuantity> value);
}
public class k8s.Models.Corev1EndpointPort : object {
    [CompilerGeneratedAttribute]
private string <AppProtocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [JsonPropertyNameAttribute("appProtocol")]
public string AppProtocol { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("port")]
public int Port { get; public set; }
    [JsonPropertyNameAttribute("protocol")]
public string Protocol { get; public set; }
    public Corev1EndpointPort(int port, string appProtocol, string name, string protocol);
    [CompilerGeneratedAttribute]
public string get_AppProtocol();
    [CompilerGeneratedAttribute]
public void set_AppProtocol(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.Corev1Event : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EventTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <FirstTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <InvolvedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <Related>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReportingComponent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReportingInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private Corev1EventSeries <Series>k__BackingField;
    [CompilerGeneratedAttribute]
private V1EventSource <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("action")]
public string Action { get; public set; }
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("count")]
public Nullable`1<int> Count { get; public set; }
    [JsonPropertyNameAttribute("eventTime")]
public Nullable`1<DateTime> EventTime { get; public set; }
    [JsonPropertyNameAttribute("firstTimestamp")]
public Nullable`1<DateTime> FirstTimestamp { get; public set; }
    [JsonPropertyNameAttribute("involvedObject")]
public V1ObjectReference InvolvedObject { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("lastTimestamp")]
public Nullable`1<DateTime> LastTimestamp { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("related")]
public V1ObjectReference Related { get; public set; }
    [JsonPropertyNameAttribute("reportingComponent")]
public string ReportingComponent { get; public set; }
    [JsonPropertyNameAttribute("reportingInstance")]
public string ReportingInstance { get; public set; }
    [JsonPropertyNameAttribute("series")]
public Corev1EventSeries Series { get; public set; }
    [JsonPropertyNameAttribute("source")]
public V1EventSource Source { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public Corev1Event(V1ObjectReference involvedObject, V1ObjectMeta metadata, string action, string apiVersion, Nullable`1<int> count, Nullable`1<DateTime> eventTime, Nullable`1<DateTime> firstTimestamp, string kind, Nullable`1<DateTime> lastTimestamp, string message, string reason, V1ObjectReference related, string reportingComponent, string reportingInstance, Corev1EventSeries series, V1EventSource source, string type);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EventTime();
    [CompilerGeneratedAttribute]
public void set_EventTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_FirstTimestamp();
    [CompilerGeneratedAttribute]
public void set_FirstTimestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_InvolvedObject();
    [CompilerGeneratedAttribute]
public void set_InvolvedObject(V1ObjectReference value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTimestamp();
    [CompilerGeneratedAttribute]
public void set_LastTimestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_Related();
    [CompilerGeneratedAttribute]
public void set_Related(V1ObjectReference value);
    [CompilerGeneratedAttribute]
public string get_ReportingComponent();
    [CompilerGeneratedAttribute]
public void set_ReportingComponent(string value);
    [CompilerGeneratedAttribute]
public string get_ReportingInstance();
    [CompilerGeneratedAttribute]
public void set_ReportingInstance(string value);
    [CompilerGeneratedAttribute]
public Corev1EventSeries get_Series();
    [CompilerGeneratedAttribute]
public void set_Series(Corev1EventSeries value);
    [CompilerGeneratedAttribute]
public V1EventSource get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(V1EventSource value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.Corev1EventList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Corev1Event> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<Corev1Event> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public Corev1EventList(IList`1<Corev1Event> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<Corev1Event> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<Corev1Event> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.Corev1EventSeries : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastObservedTime>k__BackingField;
    [JsonPropertyNameAttribute("count")]
public Nullable`1<int> Count { get; public set; }
    [JsonPropertyNameAttribute("lastObservedTime")]
public Nullable`1<DateTime> LastObservedTime { get; public set; }
    public Corev1EventSeries(Nullable`1<int> count, Nullable`1<DateTime> lastObservedTime);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastObservedTime();
    [CompilerGeneratedAttribute]
public void set_LastObservedTime(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class k8s.Models.Discoveryv1EndpointPort : object {
    [CompilerGeneratedAttribute]
private string <AppProtocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [JsonPropertyNameAttribute("appProtocol")]
public string AppProtocol { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("port")]
public Nullable`1<int> Port { get; public set; }
    [JsonPropertyNameAttribute("protocol")]
public string Protocol { get; public set; }
    public Discoveryv1EndpointPort(string appProtocol, string name, Nullable`1<int> port, string protocol);
    [CompilerGeneratedAttribute]
public string get_AppProtocol();
    [CompilerGeneratedAttribute]
public void set_AppProtocol(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.Eventsv1Event : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DeprecatedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeprecatedFirstTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeprecatedLastTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private V1EventSource <DeprecatedSource>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EventTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Note>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <Regarding>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <Related>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReportingController>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReportingInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private Eventsv1EventSeries <Series>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("action")]
public string Action { get; public set; }
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("deprecatedCount")]
public Nullable`1<int> DeprecatedCount { get; public set; }
    [JsonPropertyNameAttribute("deprecatedFirstTimestamp")]
public Nullable`1<DateTime> DeprecatedFirstTimestamp { get; public set; }
    [JsonPropertyNameAttribute("deprecatedLastTimestamp")]
public Nullable`1<DateTime> DeprecatedLastTimestamp { get; public set; }
    [JsonPropertyNameAttribute("deprecatedSource")]
public V1EventSource DeprecatedSource { get; public set; }
    [JsonPropertyNameAttribute("eventTime")]
public Nullable`1<DateTime> EventTime { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("note")]
public string Note { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("regarding")]
public V1ObjectReference Regarding { get; public set; }
    [JsonPropertyNameAttribute("related")]
public V1ObjectReference Related { get; public set; }
    [JsonPropertyNameAttribute("reportingController")]
public string ReportingController { get; public set; }
    [JsonPropertyNameAttribute("reportingInstance")]
public string ReportingInstance { get; public set; }
    [JsonPropertyNameAttribute("series")]
public Eventsv1EventSeries Series { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public Eventsv1Event(Nullable`1<DateTime> eventTime, string action, string apiVersion, Nullable`1<int> deprecatedCount, Nullable`1<DateTime> deprecatedFirstTimestamp, Nullable`1<DateTime> deprecatedLastTimestamp, V1EventSource deprecatedSource, string kind, V1ObjectMeta metadata, string note, string reason, V1ObjectReference regarding, V1ObjectReference related, string reportingController, string reportingInstance, Eventsv1EventSeries series, string type);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DeprecatedCount();
    [CompilerGeneratedAttribute]
public void set_DeprecatedCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_DeprecatedFirstTimestamp();
    [CompilerGeneratedAttribute]
public void set_DeprecatedFirstTimestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_DeprecatedLastTimestamp();
    [CompilerGeneratedAttribute]
public void set_DeprecatedLastTimestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public V1EventSource get_DeprecatedSource();
    [CompilerGeneratedAttribute]
public void set_DeprecatedSource(V1EventSource value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EventTime();
    [CompilerGeneratedAttribute]
public void set_EventTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public string get_Note();
    [CompilerGeneratedAttribute]
public void set_Note(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_Regarding();
    [CompilerGeneratedAttribute]
public void set_Regarding(V1ObjectReference value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_Related();
    [CompilerGeneratedAttribute]
public void set_Related(V1ObjectReference value);
    [CompilerGeneratedAttribute]
public string get_ReportingController();
    [CompilerGeneratedAttribute]
public void set_ReportingController(string value);
    [CompilerGeneratedAttribute]
public string get_ReportingInstance();
    [CompilerGeneratedAttribute]
public void set_ReportingInstance(string value);
    [CompilerGeneratedAttribute]
public Eventsv1EventSeries get_Series();
    [CompilerGeneratedAttribute]
public void set_Series(Eventsv1EventSeries value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.Eventsv1EventList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Eventsv1Event> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<Eventsv1Event> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public Eventsv1EventList(IList`1<Eventsv1Event> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<Eventsv1Event> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<Eventsv1Event> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.Eventsv1EventSeries : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastObservedTime>k__BackingField;
    [JsonPropertyNameAttribute("count")]
public int Count { get; public set; }
    [JsonPropertyNameAttribute("lastObservedTime")]
public DateTime LastObservedTime { get; public set; }
    public Eventsv1EventSeries(int count, DateTime lastObservedTime);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public DateTime get_LastObservedTime();
    [CompilerGeneratedAttribute]
public void set_LastObservedTime(DateTime value);
    public virtual void Validate();
}
public class k8s.Models.Flowcontrolv1Subject : object {
    [CompilerGeneratedAttribute]
private V1GroupSubject <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ServiceAccountSubject <ServiceAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private V1UserSubject <User>k__BackingField;
    [JsonPropertyNameAttribute("group")]
public V1GroupSubject Group { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("serviceAccount")]
public V1ServiceAccountSubject ServiceAccount { get; public set; }
    [JsonPropertyNameAttribute("user")]
public V1UserSubject User { get; public set; }
    public Flowcontrolv1Subject(string kind, V1GroupSubject group, V1ServiceAccountSubject serviceAccount, V1UserSubject user);
    [CompilerGeneratedAttribute]
public V1GroupSubject get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(V1GroupSubject value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public V1ServiceAccountSubject get_ServiceAccount();
    [CompilerGeneratedAttribute]
public void set_ServiceAccount(V1ServiceAccountSubject value);
    [CompilerGeneratedAttribute]
public V1UserSubject get_User();
    [CompilerGeneratedAttribute]
public void set_User(V1UserSubject value);
    public virtual void Validate();
}
public static class k8s.Models.GeneratedModelVersion : object {
    public static string AssemblyVersion;
    public static string SwaggerVersion;
}
internal class k8s.Models.IntOrStringJsonConverter : JsonConverter`1<IntstrIntOrString> {
    public virtual IntstrIntOrString Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, IntstrIntOrString value, JsonSerializerOptions options);
}
public class k8s.Models.IntOrStringYamlConverter : object {
    public sealed virtual bool Accepts(Type type);
    public sealed virtual object ReadYaml(IParser parser, Type type, ObjectDeserializer rootDeserializer);
    public sealed virtual void WriteYaml(IEmitter emitter, object value, Type type, ObjectSerializer serializer);
}
[JsonConverterAttribute("k8s.Models.IntOrStringJsonConverter")]
public class k8s.Models.IntstrIntOrString : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    public IntstrIntOrString(string value);
    public static IntstrIntOrString op_Implicit(int v);
    public static IntstrIntOrString op_Implicit(long v);
    public static string op_Implicit(IntstrIntOrString v);
    public static IntstrIntOrString op_Implicit(string v);
    protected bool Equals(IntstrIntOrString other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
[AttributeUsageAttribute("4")]
public class k8s.Models.KubernetesEntityAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PluralName>k__BackingField;
    public string Kind { get; public set; }
    public string Group { get; public set; }
    public string ApiVersion { get; public set; }
    public string PluralName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_PluralName();
    [CompilerGeneratedAttribute]
public void set_PluralName(string value);
}
public class k8s.Models.KubernetesList`1 : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<T> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<T> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public KubernetesList`1(IList`1<T> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<T> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<T> value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public void Validate();
}
[ExtensionAttribute]
public static class k8s.Models.ModelExtensions : object {
    [ExtensionAttribute]
public static bool AddFinalizer(IMetadata`1<V1ObjectMeta> obj, string finalizer);
    [ExtensionAttribute]
public static string ApiGroup(IKubernetesObject obj);
    [ExtensionAttribute]
public static string ApiGroupVersion(IKubernetesObject obj);
    [ExtensionAttribute]
public static ValueTuple`2<string, string> ApiGroupAndVersion(IKubernetesObject obj);
    [ExtensionAttribute]
public static void GetApiGroupAndVersion(IKubernetesObject obj, String& group, String& version);
    [ExtensionAttribute]
public static string Continue(IMetadata`1<V1ListMeta> list);
    [ExtensionAttribute]
public static V1ListMeta EnsureMetadata(IMetadata`1<V1ListMeta> obj);
    [ExtensionAttribute]
public static string ResourceVersion(IMetadata`1<V1ListMeta> list);
    [ExtensionAttribute]
public static void AddOwnerReference(IMetadata`1<V1ObjectMeta> obj, V1OwnerReference ownerRef);
    [ExtensionAttribute]
public static IDictionary`2<string, string> Annotations(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static Nullable`1<DateTime> CreationTimestamp(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static Nullable`1<DateTime> DeletionTimestamp(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static V1ObjectMeta EnsureMetadata(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static IList`1<string> Finalizers(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static int FindOwnerReference(IMetadata`1<V1ObjectMeta> obj, IKubernetesObject`1<V1ObjectMeta> owner);
    [ExtensionAttribute]
public static int FindOwnerReference(IMetadata`1<V1ObjectMeta> obj, Predicate`1<V1OwnerReference> predicate);
    [ExtensionAttribute]
public static Nullable`1<long> Generation(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static string GetAnnotation(IMetadata`1<V1ObjectMeta> obj, string key);
    [ExtensionAttribute]
public static V1OwnerReference GetController(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static string GetLabel(IMetadata`1<V1ObjectMeta> obj, string key);
    [ExtensionAttribute]
public static V1OwnerReference GetOwnerReference(IMetadata`1<V1ObjectMeta> obj, IKubernetesObject`1<V1ObjectMeta> owner);
    [ExtensionAttribute]
public static V1OwnerReference GetOwnerReference(IMetadata`1<V1ObjectMeta> obj, Predicate`1<V1OwnerReference> predicate);
    [ExtensionAttribute]
public static bool HasFinalizer(IMetadata`1<V1ObjectMeta> obj, string finalizer);
    [ExtensionAttribute]
public static bool IsOwnedBy(IMetadata`1<V1ObjectMeta> obj, IKubernetesObject`1<V1ObjectMeta> owner);
    [ExtensionAttribute]
public static IDictionary`2<string, string> Labels(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static string Name(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static string Namespace(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static IList`1<V1OwnerReference> OwnerReferences(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static bool RemoveFinalizer(IMetadata`1<V1ObjectMeta> obj, string finalizer);
    [ExtensionAttribute]
public static V1OwnerReference RemoveOwnerReference(IMetadata`1<V1ObjectMeta> obj, IKubernetesObject`1<V1ObjectMeta> owner);
    [ExtensionAttribute]
public static bool RemoveOwnerReferences(IMetadata`1<V1ObjectMeta> obj, Predicate`1<V1OwnerReference> predicate);
    [ExtensionAttribute]
public static bool RemoveOwnerReferences(IMetadata`1<V1ObjectMeta> obj, IKubernetesObject`1<V1ObjectMeta> owner);
    [ExtensionAttribute]
public static string ResourceVersion(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static void SetAnnotation(IMetadata`1<V1ObjectMeta> obj, string key, string value);
    [ExtensionAttribute]
public static void SetLabel(IMetadata`1<V1ObjectMeta> obj, string key, string value);
    [ExtensionAttribute]
public static string Uid(IMetadata`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static IDictionary`2<string, string> EnsureAnnotations(V1ObjectMeta meta);
    [ExtensionAttribute]
public static IList`1<string> EnsureFinalizers(V1ObjectMeta meta);
    [ExtensionAttribute]
public static IDictionary`2<string, string> EnsureLabels(V1ObjectMeta meta);
    [ExtensionAttribute]
public static string Namespace(V1ObjectMeta meta);
    [ExtensionAttribute]
public static void SetNamespace(V1ObjectMeta meta, string ns);
    [ExtensionAttribute]
public static bool Matches(V1ObjectReference objref, IKubernetesObject`1<V1ObjectMeta> obj);
    [ExtensionAttribute]
public static bool Matches(V1OwnerReference owner, IKubernetesObject`1<V1ObjectMeta> obj);
}
public static class k8s.Models.ModelVersionConverter : object {
    [CompilerGeneratedAttribute]
private static IModelVersionConverter <Converter>k__BackingField;
    public static IModelVersionConverter Converter { get; public set; }
    [CompilerGeneratedAttribute]
public static IModelVersionConverter get_Converter();
    [CompilerGeneratedAttribute]
public static void set_Converter(IModelVersionConverter value);
    internal static TTo Convert(TFrom from);
}
public class k8s.Models.NodeMetrics : object {
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Window>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Usage>k__BackingField;
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("timestamp")]
public Nullable`1<DateTime> Timestamp { get; public set; }
    [JsonPropertyNameAttribute("window")]
public string Window { get; public set; }
    [JsonPropertyNameAttribute("usage")]
public IDictionary`2<string, ResourceQuantity> Usage { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Window();
    [CompilerGeneratedAttribute]
public void set_Window(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(IDictionary`2<string, ResourceQuantity> value);
}
public class k8s.Models.NodeMetricsList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<NodeMetrics> <Items>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IEnumerable`1<NodeMetrics> Items { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<NodeMetrics> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<NodeMetrics> value);
}
public class k8s.Models.PodMetrics : object {
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Window>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ContainerMetrics> <Containers>k__BackingField;
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("timestamp")]
public Nullable`1<DateTime> Timestamp { get; public set; }
    [JsonPropertyNameAttribute("window")]
public string Window { get; public set; }
    [JsonPropertyNameAttribute("containers")]
public List`1<ContainerMetrics> Containers { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Window();
    [CompilerGeneratedAttribute]
public void set_Window(string value);
    [CompilerGeneratedAttribute]
public List`1<ContainerMetrics> get_Containers();
    [CompilerGeneratedAttribute]
public void set_Containers(List`1<ContainerMetrics> value);
}
public class k8s.Models.PodMetricsList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<PodMetrics> <Items>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IEnumerable`1<PodMetrics> Items { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<PodMetrics> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<PodMetrics> value);
}
public class k8s.Models.Rbacv1Subject : object {
    [CompilerGeneratedAttribute]
private string <ApiGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [JsonPropertyNameAttribute("apiGroup")]
public string ApiGroup { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    public Rbacv1Subject(string kind, string name, string apiGroup, string namespaceProperty);
    [CompilerGeneratedAttribute]
public string get_ApiGroup();
    [CompilerGeneratedAttribute]
public void set_ApiGroup(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    public virtual void Validate();
}
[JsonConverterAttribute("k8s.Models.ResourceQuantityJsonConverter")]
public class k8s.Models.ResourceQuantity : object {
    public static decimal MaxAllowed;
    private static Char[] SuffixChars;
    private Fraction _unitlessValue;
    [CompilerGeneratedAttribute]
private SuffixFormat <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public SuffixFormat Format { get; private set; }
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    public ResourceQuantity(decimal n, int exp, SuffixFormat format);
    public ResourceQuantity(string value);
    private static ResourceQuantity();
    [CompilerGeneratedAttribute]
public SuffixFormat get_Format();
    [CompilerGeneratedAttribute]
private void set_Format(SuffixFormat value);
    public string CanonicalizeString();
    public virtual string ToString();
    protected bool Equals(ResourceQuantity other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public string CanonicalizeString(SuffixFormat suffixFormat);
    private static bool HasMantissa(Fraction value);
    public static decimal op_Implicit(ResourceQuantity v);
    public static ResourceQuantity op_Implicit(decimal v);
    public int ToInt32();
    public long ToInt64();
    public UInt32 ToUInt32();
    public ulong ToUInt64();
    public BigInteger ToBigInteger();
    public decimal ToDecimal();
    public double ToDouble();
    private void CustomInit();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
internal class k8s.Models.ResourceQuantityJsonConverter : JsonConverter`1<ResourceQuantity> {
    public virtual ResourceQuantity Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, ResourceQuantity value, JsonSerializerOptions options);
}
public class k8s.Models.ResourceQuantityYamlConverter : object {
    public sealed virtual bool Accepts(Type type);
    public sealed virtual object ReadYaml(IParser parser, Type type, ObjectDeserializer rootDeserializer);
    public sealed virtual void WriteYaml(IEmitter emitter, object value, Type type, ObjectSerializer serializer);
}
public class k8s.Models.Storagev1TokenRequest : object {
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ExpirationSeconds>k__BackingField;
    [JsonPropertyNameAttribute("audience")]
public string Audience { get; public set; }
    [JsonPropertyNameAttribute("expirationSeconds")]
public Nullable`1<long> ExpirationSeconds { get; public set; }
    public Storagev1TokenRequest(string audience, Nullable`1<long> expirationSeconds);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ExpirationSeconds();
    [CompilerGeneratedAttribute]
public void set_ExpirationSeconds(Nullable`1<long> value);
    public virtual void Validate();
}
public class k8s.Models.V1Affinity : object {
    [CompilerGeneratedAttribute]
private V1NodeAffinity <NodeAffinity>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodAffinity <PodAffinity>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodAntiAffinity <PodAntiAffinity>k__BackingField;
    [JsonPropertyNameAttribute("nodeAffinity")]
public V1NodeAffinity NodeAffinity { get; public set; }
    [JsonPropertyNameAttribute("podAffinity")]
public V1PodAffinity PodAffinity { get; public set; }
    [JsonPropertyNameAttribute("podAntiAffinity")]
public V1PodAntiAffinity PodAntiAffinity { get; public set; }
    public V1Affinity(V1NodeAffinity nodeAffinity, V1PodAffinity podAffinity, V1PodAntiAffinity podAntiAffinity);
    [CompilerGeneratedAttribute]
public V1NodeAffinity get_NodeAffinity();
    [CompilerGeneratedAttribute]
public void set_NodeAffinity(V1NodeAffinity value);
    [CompilerGeneratedAttribute]
public V1PodAffinity get_PodAffinity();
    [CompilerGeneratedAttribute]
public void set_PodAffinity(V1PodAffinity value);
    [CompilerGeneratedAttribute]
public V1PodAntiAffinity get_PodAntiAffinity();
    [CompilerGeneratedAttribute]
public void set_PodAntiAffinity(V1PodAntiAffinity value);
    public virtual void Validate();
}
public class k8s.Models.V1AggregationRule : object {
    [CompilerGeneratedAttribute]
private IList`1<V1LabelSelector> <ClusterRoleSelectors>k__BackingField;
    [JsonPropertyNameAttribute("clusterRoleSelectors")]
public IList`1<V1LabelSelector> ClusterRoleSelectors { get; public set; }
    public V1AggregationRule(IList`1<V1LabelSelector> clusterRoleSelectors);
    [CompilerGeneratedAttribute]
public IList`1<V1LabelSelector> get_ClusterRoleSelectors();
    [CompilerGeneratedAttribute]
public void set_ClusterRoleSelectors(IList`1<V1LabelSelector> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1AuditAnnotation : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueExpression>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("valueExpression")]
public string ValueExpression { get; public set; }
    public V1alpha1AuditAnnotation(string key, string valueExpression);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_ValueExpression();
    [CompilerGeneratedAttribute]
public void set_ValueExpression(string value);
    public virtual void Validate();
    public static V1alpha1AuditAnnotation op_Explicit(V1AuditAnnotation s);
    public static V1alpha1AuditAnnotation op_Explicit(V1beta1AuditAnnotation s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1ClusterTrustBundle : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1ClusterTrustBundleSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha1ClusterTrustBundleSpec Spec { get; public set; }
    public V1alpha1ClusterTrustBundle(V1alpha1ClusterTrustBundleSpec spec, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha1ClusterTrustBundleSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha1ClusterTrustBundleSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1ClusterTrustBundleList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1ClusterTrustBundle> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha1ClusterTrustBundle> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha1ClusterTrustBundleList(IList`1<V1alpha1ClusterTrustBundle> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha1ClusterTrustBundle> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha1ClusterTrustBundle> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1ClusterTrustBundleSpec : object {
    [CompilerGeneratedAttribute]
private string <SignerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrustBundle>k__BackingField;
    [JsonPropertyNameAttribute("signerName")]
public string SignerName { get; public set; }
    [JsonPropertyNameAttribute("trustBundle")]
public string TrustBundle { get; public set; }
    public V1alpha1ClusterTrustBundleSpec(string trustBundle, string signerName);
    [CompilerGeneratedAttribute]
public string get_SignerName();
    [CompilerGeneratedAttribute]
public void set_SignerName(string value);
    [CompilerGeneratedAttribute]
public string get_TrustBundle();
    [CompilerGeneratedAttribute]
public void set_TrustBundle(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1ExpressionWarning : object {
    [CompilerGeneratedAttribute]
private string <FieldRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Warning>k__BackingField;
    [JsonPropertyNameAttribute("fieldRef")]
public string FieldRef { get; public set; }
    [JsonPropertyNameAttribute("warning")]
public string Warning { get; public set; }
    public V1alpha1ExpressionWarning(string fieldRef, string warning);
    [CompilerGeneratedAttribute]
public string get_FieldRef();
    [CompilerGeneratedAttribute]
public void set_FieldRef(string value);
    [CompilerGeneratedAttribute]
public string get_Warning();
    [CompilerGeneratedAttribute]
public void set_Warning(string value);
    public virtual void Validate();
    public static V1alpha1ExpressionWarning op_Explicit(V1beta1ExpressionWarning s);
    public static V1alpha1ExpressionWarning op_Explicit(V1ExpressionWarning s);
}
public class k8s.Models.V1alpha1GroupVersionResource : object {
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public string Resource { get; public set; }
    [JsonPropertyNameAttribute("version")]
public string Version { get; public set; }
    public V1alpha1GroupVersionResource(string group, string resource, string version);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1LeaseCandidate : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1LeaseCandidateSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha1LeaseCandidateSpec Spec { get; public set; }
    public V1alpha1LeaseCandidate(string apiVersion, string kind, V1ObjectMeta metadata, V1alpha1LeaseCandidateSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha1LeaseCandidateSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha1LeaseCandidateSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1LeaseCandidateList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1LeaseCandidate> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha1LeaseCandidate> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha1LeaseCandidateList(IList`1<V1alpha1LeaseCandidate> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha1LeaseCandidate> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha1LeaseCandidate> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1LeaseCandidateSpec : object {
    [CompilerGeneratedAttribute]
private string <BinaryVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmulationVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LeaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <PingTime>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <PreferredStrategies>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <RenewTime>k__BackingField;
    [JsonPropertyNameAttribute("binaryVersion")]
public string BinaryVersion { get; public set; }
    [JsonPropertyNameAttribute("emulationVersion")]
public string EmulationVersion { get; public set; }
    [JsonPropertyNameAttribute("leaseName")]
public string LeaseName { get; public set; }
    [JsonPropertyNameAttribute("pingTime")]
public Nullable`1<DateTime> PingTime { get; public set; }
    [JsonPropertyNameAttribute("preferredStrategies")]
public IList`1<string> PreferredStrategies { get; public set; }
    [JsonPropertyNameAttribute("renewTime")]
public Nullable`1<DateTime> RenewTime { get; public set; }
    public V1alpha1LeaseCandidateSpec(string leaseName, IList`1<string> preferredStrategies, string binaryVersion, string emulationVersion, Nullable`1<DateTime> pingTime, Nullable`1<DateTime> renewTime);
    [CompilerGeneratedAttribute]
public string get_BinaryVersion();
    [CompilerGeneratedAttribute]
public void set_BinaryVersion(string value);
    [CompilerGeneratedAttribute]
public string get_EmulationVersion();
    [CompilerGeneratedAttribute]
public void set_EmulationVersion(string value);
    [CompilerGeneratedAttribute]
public string get_LeaseName();
    [CompilerGeneratedAttribute]
public void set_LeaseName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_PingTime();
    [CompilerGeneratedAttribute]
public void set_PingTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_PreferredStrategies();
    [CompilerGeneratedAttribute]
public void set_PreferredStrategies(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_RenewTime();
    [CompilerGeneratedAttribute]
public void set_RenewTime(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1MatchCondition : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1alpha1MatchCondition(string expression, string name);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1alpha1MatchCondition op_Explicit(V1beta1MatchCondition s);
    public static V1alpha1MatchCondition op_Explicit(V1MatchCondition s);
}
public class k8s.Models.V1alpha1MatchResources : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1NamedRuleWithOperations> <ExcludeResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MatchPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NamespaceSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <ObjectSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1NamedRuleWithOperations> <ResourceRules>k__BackingField;
    [JsonPropertyNameAttribute("excludeResourceRules")]
public IList`1<V1alpha1NamedRuleWithOperations> ExcludeResourceRules { get; public set; }
    [JsonPropertyNameAttribute("matchPolicy")]
public string MatchPolicy { get; public set; }
    [JsonPropertyNameAttribute("namespaceSelector")]
public V1LabelSelector NamespaceSelector { get; public set; }
    [JsonPropertyNameAttribute("objectSelector")]
public V1LabelSelector ObjectSelector { get; public set; }
    [JsonPropertyNameAttribute("resourceRules")]
public IList`1<V1alpha1NamedRuleWithOperations> ResourceRules { get; public set; }
    public V1alpha1MatchResources(IList`1<V1alpha1NamedRuleWithOperations> excludeResourceRules, string matchPolicy, V1LabelSelector namespaceSelector, V1LabelSelector objectSelector, IList`1<V1alpha1NamedRuleWithOperations> resourceRules);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1NamedRuleWithOperations> get_ExcludeResourceRules();
    [CompilerGeneratedAttribute]
public void set_ExcludeResourceRules(IList`1<V1alpha1NamedRuleWithOperations> value);
    [CompilerGeneratedAttribute]
public string get_MatchPolicy();
    [CompilerGeneratedAttribute]
public void set_MatchPolicy(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NamespaceSelector();
    [CompilerGeneratedAttribute]
public void set_NamespaceSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_ObjectSelector();
    [CompilerGeneratedAttribute]
public void set_ObjectSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1NamedRuleWithOperations> get_ResourceRules();
    [CompilerGeneratedAttribute]
public void set_ResourceRules(IList`1<V1alpha1NamedRuleWithOperations> value);
    public virtual void Validate();
    public static V1alpha1MatchResources op_Explicit(V1beta1MatchResources s);
    public static V1alpha1MatchResources op_Explicit(V1MatchResources s);
}
public class k8s.Models.V1alpha1MigrationCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastUpdateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastUpdateTime")]
public Nullable`1<DateTime> LastUpdateTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1alpha1MigrationCondition(string status, string type, Nullable`1<DateTime> lastUpdateTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastUpdateTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdateTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1NamedRuleWithOperations : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ResourceNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("apiVersions")]
public IList`1<string> ApiVersions { get; public set; }
    [JsonPropertyNameAttribute("operations")]
public IList`1<string> Operations { get; public set; }
    [JsonPropertyNameAttribute("resourceNames")]
public IList`1<string> ResourceNames { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("scope")]
public string Scope { get; public set; }
    public V1alpha1NamedRuleWithOperations(IList`1<string> apiGroups, IList`1<string> apiVersions, IList`1<string> operations, IList`1<string> resourceNames, IList`1<string> resources, string scope);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiVersions();
    [CompilerGeneratedAttribute]
public void set_ApiVersions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ResourceNames();
    [CompilerGeneratedAttribute]
public void set_ResourceNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public virtual void Validate();
    public static V1alpha1NamedRuleWithOperations op_Explicit(V1beta1NamedRuleWithOperations s);
    public static V1alpha1NamedRuleWithOperations op_Explicit(V1NamedRuleWithOperations s);
}
public class k8s.Models.V1alpha1ParamKind : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    public V1alpha1ParamKind(string apiVersion, string kind);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    public virtual void Validate();
    public static V1alpha1ParamKind op_Explicit(V1beta1ParamKind s);
    public static V1alpha1ParamKind op_Explicit(V1ParamKind s);
}
public class k8s.Models.V1alpha1ParamRef : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterNotFoundAction>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("parameterNotFoundAction")]
public string ParameterNotFoundAction { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    public V1alpha1ParamRef(string name, string namespaceProperty, string parameterNotFoundAction, V1LabelSelector selector);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_ParameterNotFoundAction();
    [CompilerGeneratedAttribute]
public void set_ParameterNotFoundAction(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    public virtual void Validate();
    public static V1alpha1ParamRef op_Explicit(V1beta1ParamRef s);
    public static V1alpha1ParamRef op_Explicit(V1ParamRef s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1SelfSubjectReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1SelfSubjectReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1alpha1SelfSubjectReviewStatus Status { get; public set; }
    public V1alpha1SelfSubjectReview(string apiVersion, string kind, V1ObjectMeta metadata, V1alpha1SelfSubjectReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1alpha1SelfSubjectReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1alpha1SelfSubjectReviewStatus value);
    public virtual void Validate();
    public static V1alpha1SelfSubjectReview op_Explicit(V1beta1SelfSubjectReview s);
    public static V1alpha1SelfSubjectReview op_Explicit(V1SelfSubjectReview s);
}
public class k8s.Models.V1alpha1SelfSubjectReviewStatus : object {
    [CompilerGeneratedAttribute]
private V1UserInfo <UserInfo>k__BackingField;
    [JsonPropertyNameAttribute("userInfo")]
public V1UserInfo UserInfo { get; public set; }
    public V1alpha1SelfSubjectReviewStatus(V1UserInfo userInfo);
    [CompilerGeneratedAttribute]
public V1UserInfo get_UserInfo();
    [CompilerGeneratedAttribute]
public void set_UserInfo(V1UserInfo value);
    public virtual void Validate();
    public static V1alpha1SelfSubjectReviewStatus op_Explicit(V1beta1SelfSubjectReviewStatus s);
    public static V1alpha1SelfSubjectReviewStatus op_Explicit(V1SelfSubjectReviewStatus s);
}
public class k8s.Models.V1alpha1ServerStorageVersion : object {
    [CompilerGeneratedAttribute]
private string <ApiServerID>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <DecodableVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EncodingVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ServedVersions>k__BackingField;
    [JsonPropertyNameAttribute("apiServerID")]
public string ApiServerID { get; public set; }
    [JsonPropertyNameAttribute("decodableVersions")]
public IList`1<string> DecodableVersions { get; public set; }
    [JsonPropertyNameAttribute("encodingVersion")]
public string EncodingVersion { get; public set; }
    [JsonPropertyNameAttribute("servedVersions")]
public IList`1<string> ServedVersions { get; public set; }
    public V1alpha1ServerStorageVersion(string apiServerID, IList`1<string> decodableVersions, string encodingVersion, IList`1<string> servedVersions);
    [CompilerGeneratedAttribute]
public string get_ApiServerID();
    [CompilerGeneratedAttribute]
public void set_ApiServerID(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DecodableVersions();
    [CompilerGeneratedAttribute]
public void set_DecodableVersions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_EncodingVersion();
    [CompilerGeneratedAttribute]
public void set_EncodingVersion(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ServedVersions();
    [CompilerGeneratedAttribute]
public void set_ServedVersions(IList`1<string> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1StorageVersion : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1StorageVersionStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public object Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1alpha1StorageVersionStatus Status { get; public set; }
    public V1alpha1StorageVersion(object spec, V1alpha1StorageVersionStatus status, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public object get_Spec();
    [CompilerGeneratedAttribute]
public void set_Spec(object value);
    [CompilerGeneratedAttribute]
public V1alpha1StorageVersionStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1alpha1StorageVersionStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1StorageVersionCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1alpha1StorageVersionCondition(string message, string reason, string status, string type, Nullable`1<DateTime> lastTransitionTime, Nullable`1<long> observedGeneration);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1StorageVersionList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1StorageVersion> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha1StorageVersion> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha1StorageVersionList(IList`1<V1alpha1StorageVersion> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha1StorageVersion> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha1StorageVersion> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1StorageVersionMigration : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1StorageVersionMigrationSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1StorageVersionMigrationStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha1StorageVersionMigrationSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1alpha1StorageVersionMigrationStatus Status { get; public set; }
    public V1alpha1StorageVersionMigration(string apiVersion, string kind, V1ObjectMeta metadata, V1alpha1StorageVersionMigrationSpec spec, V1alpha1StorageVersionMigrationStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha1StorageVersionMigrationSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha1StorageVersionMigrationSpec value);
    [CompilerGeneratedAttribute]
public V1alpha1StorageVersionMigrationStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1alpha1StorageVersionMigrationStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1StorageVersionMigrationList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1StorageVersionMigration> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha1StorageVersionMigration> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha1StorageVersionMigrationList(IList`1<V1alpha1StorageVersionMigration> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha1StorageVersionMigration> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha1StorageVersionMigration> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1StorageVersionMigrationSpec : object {
    [CompilerGeneratedAttribute]
private string <ContinueToken>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1GroupVersionResource <Resource>k__BackingField;
    [JsonPropertyNameAttribute("continueToken")]
public string ContinueToken { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public V1alpha1GroupVersionResource Resource { get; public set; }
    public V1alpha1StorageVersionMigrationSpec(V1alpha1GroupVersionResource resource, string continueToken);
    [CompilerGeneratedAttribute]
public string get_ContinueToken();
    [CompilerGeneratedAttribute]
public void set_ContinueToken(string value);
    [CompilerGeneratedAttribute]
public V1alpha1GroupVersionResource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(V1alpha1GroupVersionResource value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1StorageVersionMigrationStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1MigrationCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceVersion>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1alpha1MigrationCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("resourceVersion")]
public string ResourceVersion { get; public set; }
    public V1alpha1StorageVersionMigrationStatus(IList`1<V1alpha1MigrationCondition> conditions, string resourceVersion);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1MigrationCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1alpha1MigrationCondition> value);
    [CompilerGeneratedAttribute]
public string get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1StorageVersionStatus : object {
    [CompilerGeneratedAttribute]
private string <CommonEncodingVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1StorageVersionCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1ServerStorageVersion> <StorageVersions>k__BackingField;
    [JsonPropertyNameAttribute("commonEncodingVersion")]
public string CommonEncodingVersion { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1alpha1StorageVersionCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("storageVersions")]
public IList`1<V1alpha1ServerStorageVersion> StorageVersions { get; public set; }
    public V1alpha1StorageVersionStatus(string commonEncodingVersion, IList`1<V1alpha1StorageVersionCondition> conditions, IList`1<V1alpha1ServerStorageVersion> storageVersions);
    [CompilerGeneratedAttribute]
public string get_CommonEncodingVersion();
    [CompilerGeneratedAttribute]
public void set_CommonEncodingVersion(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1StorageVersionCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1alpha1StorageVersionCondition> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1ServerStorageVersion> get_StorageVersions();
    [CompilerGeneratedAttribute]
public void set_StorageVersions(IList`1<V1alpha1ServerStorageVersion> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha1TypeChecking : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1ExpressionWarning> <ExpressionWarnings>k__BackingField;
    [JsonPropertyNameAttribute("expressionWarnings")]
public IList`1<V1alpha1ExpressionWarning> ExpressionWarnings { get; public set; }
    public V1alpha1TypeChecking(IList`1<V1alpha1ExpressionWarning> expressionWarnings);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1ExpressionWarning> get_ExpressionWarnings();
    [CompilerGeneratedAttribute]
public void set_ExpressionWarnings(IList`1<V1alpha1ExpressionWarning> value);
    public virtual void Validate();
    public static V1alpha1TypeChecking op_Explicit(V1beta1TypeChecking s);
    public static V1alpha1TypeChecking op_Explicit(V1TypeChecking s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1ValidatingAdmissionPolicy : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1ValidatingAdmissionPolicySpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1ValidatingAdmissionPolicyStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha1ValidatingAdmissionPolicySpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1alpha1ValidatingAdmissionPolicyStatus Status { get; public set; }
    public V1alpha1ValidatingAdmissionPolicy(string apiVersion, string kind, V1ObjectMeta metadata, V1alpha1ValidatingAdmissionPolicySpec spec, V1alpha1ValidatingAdmissionPolicyStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha1ValidatingAdmissionPolicySpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha1ValidatingAdmissionPolicySpec value);
    [CompilerGeneratedAttribute]
public V1alpha1ValidatingAdmissionPolicyStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1alpha1ValidatingAdmissionPolicyStatus value);
    public virtual void Validate();
    public static V1alpha1ValidatingAdmissionPolicy op_Explicit(V1beta1ValidatingAdmissionPolicy s);
    public static V1alpha1ValidatingAdmissionPolicy op_Explicit(V1ValidatingAdmissionPolicy s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1ValidatingAdmissionPolicyBinding : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1ValidatingAdmissionPolicyBindingSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha1ValidatingAdmissionPolicyBindingSpec Spec { get; public set; }
    public V1alpha1ValidatingAdmissionPolicyBinding(string apiVersion, string kind, V1ObjectMeta metadata, V1alpha1ValidatingAdmissionPolicyBindingSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha1ValidatingAdmissionPolicyBindingSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha1ValidatingAdmissionPolicyBindingSpec value);
    public virtual void Validate();
    public static V1alpha1ValidatingAdmissionPolicyBinding op_Explicit(V1beta1ValidatingAdmissionPolicyBinding s);
    public static V1alpha1ValidatingAdmissionPolicyBinding op_Explicit(V1ValidatingAdmissionPolicyBinding s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1ValidatingAdmissionPolicyBindingList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1ValidatingAdmissionPolicyBinding> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha1ValidatingAdmissionPolicyBinding> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha1ValidatingAdmissionPolicyBindingList(IList`1<V1alpha1ValidatingAdmissionPolicyBinding> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha1ValidatingAdmissionPolicyBinding> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha1ValidatingAdmissionPolicyBinding> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1alpha1ValidatingAdmissionPolicyBindingList op_Explicit(V1beta1ValidatingAdmissionPolicyBindingList s);
    public static V1alpha1ValidatingAdmissionPolicyBindingList op_Explicit(V1ValidatingAdmissionPolicyBindingList s);
}
public class k8s.Models.V1alpha1ValidatingAdmissionPolicyBindingSpec : object {
    [CompilerGeneratedAttribute]
private V1alpha1MatchResources <MatchResources>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1ParamRef <ParamRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ValidationActions>k__BackingField;
    [JsonPropertyNameAttribute("matchResources")]
public V1alpha1MatchResources MatchResources { get; public set; }
    [JsonPropertyNameAttribute("paramRef")]
public V1alpha1ParamRef ParamRef { get; public set; }
    [JsonPropertyNameAttribute("policyName")]
public string PolicyName { get; public set; }
    [JsonPropertyNameAttribute("validationActions")]
public IList`1<string> ValidationActions { get; public set; }
    public V1alpha1ValidatingAdmissionPolicyBindingSpec(V1alpha1MatchResources matchResources, V1alpha1ParamRef paramRef, string policyName, IList`1<string> validationActions);
    [CompilerGeneratedAttribute]
public V1alpha1MatchResources get_MatchResources();
    [CompilerGeneratedAttribute]
public void set_MatchResources(V1alpha1MatchResources value);
    [CompilerGeneratedAttribute]
public V1alpha1ParamRef get_ParamRef();
    [CompilerGeneratedAttribute]
public void set_ParamRef(V1alpha1ParamRef value);
    [CompilerGeneratedAttribute]
public string get_PolicyName();
    [CompilerGeneratedAttribute]
public void set_PolicyName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ValidationActions();
    [CompilerGeneratedAttribute]
public void set_ValidationActions(IList`1<string> value);
    public virtual void Validate();
    public static V1alpha1ValidatingAdmissionPolicyBindingSpec op_Explicit(V1beta1ValidatingAdmissionPolicyBindingSpec s);
    public static V1alpha1ValidatingAdmissionPolicyBindingSpec op_Explicit(V1ValidatingAdmissionPolicyBindingSpec s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1ValidatingAdmissionPolicyList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1ValidatingAdmissionPolicy> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha1ValidatingAdmissionPolicy> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha1ValidatingAdmissionPolicyList(IList`1<V1alpha1ValidatingAdmissionPolicy> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha1ValidatingAdmissionPolicy> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha1ValidatingAdmissionPolicy> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1alpha1ValidatingAdmissionPolicyList op_Explicit(V1beta1ValidatingAdmissionPolicyList s);
    public static V1alpha1ValidatingAdmissionPolicyList op_Explicit(V1ValidatingAdmissionPolicyList s);
}
public class k8s.Models.V1alpha1ValidatingAdmissionPolicySpec : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1AuditAnnotation> <AuditAnnotations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1MatchCondition> <MatchConditions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1MatchResources <MatchConstraints>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1ParamKind <ParamKind>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1Validation> <Validations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1Variable> <Variables>k__BackingField;
    [JsonPropertyNameAttribute("auditAnnotations")]
public IList`1<V1alpha1AuditAnnotation> AuditAnnotations { get; public set; }
    [JsonPropertyNameAttribute("failurePolicy")]
public string FailurePolicy { get; public set; }
    [JsonPropertyNameAttribute("matchConditions")]
public IList`1<V1alpha1MatchCondition> MatchConditions { get; public set; }
    [JsonPropertyNameAttribute("matchConstraints")]
public V1alpha1MatchResources MatchConstraints { get; public set; }
    [JsonPropertyNameAttribute("paramKind")]
public V1alpha1ParamKind ParamKind { get; public set; }
    [JsonPropertyNameAttribute("validations")]
public IList`1<V1alpha1Validation> Validations { get; public set; }
    [JsonPropertyNameAttribute("variables")]
public IList`1<V1alpha1Variable> Variables { get; public set; }
    public V1alpha1ValidatingAdmissionPolicySpec(IList`1<V1alpha1AuditAnnotation> auditAnnotations, string failurePolicy, IList`1<V1alpha1MatchCondition> matchConditions, V1alpha1MatchResources matchConstraints, V1alpha1ParamKind paramKind, IList`1<V1alpha1Validation> validations, IList`1<V1alpha1Variable> variables);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1AuditAnnotation> get_AuditAnnotations();
    [CompilerGeneratedAttribute]
public void set_AuditAnnotations(IList`1<V1alpha1AuditAnnotation> value);
    [CompilerGeneratedAttribute]
public string get_FailurePolicy();
    [CompilerGeneratedAttribute]
public void set_FailurePolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1MatchCondition> get_MatchConditions();
    [CompilerGeneratedAttribute]
public void set_MatchConditions(IList`1<V1alpha1MatchCondition> value);
    [CompilerGeneratedAttribute]
public V1alpha1MatchResources get_MatchConstraints();
    [CompilerGeneratedAttribute]
public void set_MatchConstraints(V1alpha1MatchResources value);
    [CompilerGeneratedAttribute]
public V1alpha1ParamKind get_ParamKind();
    [CompilerGeneratedAttribute]
public void set_ParamKind(V1alpha1ParamKind value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1Validation> get_Validations();
    [CompilerGeneratedAttribute]
public void set_Validations(IList`1<V1alpha1Validation> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha1Variable> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(IList`1<V1alpha1Variable> value);
    public virtual void Validate();
    public static V1alpha1ValidatingAdmissionPolicySpec op_Explicit(V1beta1ValidatingAdmissionPolicySpec s);
    public static V1alpha1ValidatingAdmissionPolicySpec op_Explicit(V1ValidatingAdmissionPolicySpec s);
}
public class k8s.Models.V1alpha1ValidatingAdmissionPolicyStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha1TypeChecking <TypeChecking>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1Condition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("typeChecking")]
public V1alpha1TypeChecking TypeChecking { get; public set; }
    public V1alpha1ValidatingAdmissionPolicyStatus(IList`1<V1Condition> conditions, Nullable`1<long> observedGeneration, V1alpha1TypeChecking typeChecking);
    [CompilerGeneratedAttribute]
public IList`1<V1Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1Condition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public V1alpha1TypeChecking get_TypeChecking();
    [CompilerGeneratedAttribute]
public void set_TypeChecking(V1alpha1TypeChecking value);
    public virtual void Validate();
    public static V1alpha1ValidatingAdmissionPolicyStatus op_Explicit(V1beta1ValidatingAdmissionPolicyStatus s);
    public static V1alpha1ValidatingAdmissionPolicyStatus op_Explicit(V1ValidatingAdmissionPolicyStatus s);
}
public class k8s.Models.V1alpha1Validation : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("messageExpression")]
public string MessageExpression { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    public V1alpha1Validation(string expression, string message, string messageExpression, string reason);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_MessageExpression();
    [CompilerGeneratedAttribute]
public void set_MessageExpression(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual void Validate();
    public static V1alpha1Validation op_Explicit(V1beta1Validation s);
    public static V1alpha1Validation op_Explicit(V1Validation s);
}
public class k8s.Models.V1alpha1Variable : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1alpha1Variable(string expression, string name);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1alpha1Variable op_Explicit(V1beta1Variable s);
    public static V1alpha1Variable op_Explicit(V1Variable s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1VolumeAttributesClass : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DriverName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Parameters>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("driverName")]
public string DriverName { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("parameters")]
public IDictionary`2<string, string> Parameters { get; public set; }
    public V1alpha1VolumeAttributesClass(string driverName, string apiVersion, string kind, V1ObjectMeta metadata, IDictionary`2<string, string> parameters);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_DriverName();
    [CompilerGeneratedAttribute]
public void set_DriverName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IDictionary`2<string, string> value);
    public virtual void Validate();
    public static V1alpha1VolumeAttributesClass op_Explicit(V1beta1VolumeAttributesClass s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha1VolumeAttributesClassList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha1VolumeAttributesClass> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha1VolumeAttributesClass> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha1VolumeAttributesClassList(IList`1<V1alpha1VolumeAttributesClass> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha1VolumeAttributesClass> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha1VolumeAttributesClass> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1alpha1VolumeAttributesClassList op_Explicit(V1beta1VolumeAttributesClassList s);
}
public class k8s.Models.V1alpha3AllocationResult : object {
    [CompilerGeneratedAttribute]
private string <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3DeviceAllocationResult <Devices>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeSelector <NodeSelector>k__BackingField;
    [JsonPropertyNameAttribute("controller")]
public string Controller { get; public set; }
    [JsonPropertyNameAttribute("devices")]
public V1alpha3DeviceAllocationResult Devices { get; public set; }
    [JsonPropertyNameAttribute("nodeSelector")]
public V1NodeSelector NodeSelector { get; public set; }
    public V1alpha3AllocationResult(string controller, V1alpha3DeviceAllocationResult devices, V1NodeSelector nodeSelector);
    [CompilerGeneratedAttribute]
public string get_Controller();
    [CompilerGeneratedAttribute]
public void set_Controller(string value);
    [CompilerGeneratedAttribute]
public V1alpha3DeviceAllocationResult get_Devices();
    [CompilerGeneratedAttribute]
public void set_Devices(V1alpha3DeviceAllocationResult value);
    [CompilerGeneratedAttribute]
public V1NodeSelector get_NodeSelector();
    [CompilerGeneratedAttribute]
public void set_NodeSelector(V1NodeSelector value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3BasicDevice : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, V1alpha3DeviceAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Capacity>k__BackingField;
    [JsonPropertyNameAttribute("attributes")]
public IDictionary`2<string, V1alpha3DeviceAttribute> Attributes { get; public set; }
    [JsonPropertyNameAttribute("capacity")]
public IDictionary`2<string, ResourceQuantity> Capacity { get; public set; }
    public V1alpha3BasicDevice(IDictionary`2<string, V1alpha3DeviceAttribute> attributes, IDictionary`2<string, ResourceQuantity> capacity);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, V1alpha3DeviceAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IDictionary`2<string, V1alpha3DeviceAttribute> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(IDictionary`2<string, ResourceQuantity> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3CELDeviceSelector : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    public V1alpha3CELDeviceSelector(string expression);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3Device : object {
    [CompilerGeneratedAttribute]
private V1alpha3BasicDevice <Basic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("basic")]
public V1alpha3BasicDevice Basic { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1alpha3Device(string name, V1alpha3BasicDevice basic);
    [CompilerGeneratedAttribute]
public V1alpha3BasicDevice get_Basic();
    [CompilerGeneratedAttribute]
public void set_Basic(V1alpha3BasicDevice value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceAllocationConfiguration : object {
    [CompilerGeneratedAttribute]
private V1alpha3OpaqueDeviceConfiguration <Opaque>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Requests>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [JsonPropertyNameAttribute("opaque")]
public V1alpha3OpaqueDeviceConfiguration Opaque { get; public set; }
    [JsonPropertyNameAttribute("requests")]
public IList`1<string> Requests { get; public set; }
    [JsonPropertyNameAttribute("source")]
public string Source { get; public set; }
    public V1alpha3DeviceAllocationConfiguration(string source, V1alpha3OpaqueDeviceConfiguration opaque, IList`1<string> requests);
    [CompilerGeneratedAttribute]
public V1alpha3OpaqueDeviceConfiguration get_Opaque();
    [CompilerGeneratedAttribute]
public void set_Opaque(V1alpha3OpaqueDeviceConfiguration value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Requests();
    [CompilerGeneratedAttribute]
public void set_Requests(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceAllocationResult : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceAllocationConfiguration> <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceRequestAllocationResult> <Results>k__BackingField;
    [JsonPropertyNameAttribute("config")]
public IList`1<V1alpha3DeviceAllocationConfiguration> Config { get; public set; }
    [JsonPropertyNameAttribute("results")]
public IList`1<V1alpha3DeviceRequestAllocationResult> Results { get; public set; }
    public V1alpha3DeviceAllocationResult(IList`1<V1alpha3DeviceAllocationConfiguration> config, IList`1<V1alpha3DeviceRequestAllocationResult> results);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceAllocationConfiguration> get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(IList`1<V1alpha3DeviceAllocationConfiguration> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceRequestAllocationResult> get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(IList`1<V1alpha3DeviceRequestAllocationResult> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceAttribute : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BoolValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IntValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyNameAttribute("bool")]
public Nullable`1<bool> BoolValue { get; public set; }
    [JsonPropertyNameAttribute("int")]
public Nullable`1<long> IntValue { get; public set; }
    [JsonPropertyNameAttribute("string")]
public string StringValue { get; public set; }
    [JsonPropertyNameAttribute("version")]
public string Version { get; public set; }
    public V1alpha3DeviceAttribute(Nullable`1<bool> boolValue, Nullable`1<long> intValue, string stringValue, string version);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BoolValue();
    [CompilerGeneratedAttribute]
public void set_BoolValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IntValue();
    [CompilerGeneratedAttribute]
public void set_IntValue(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_StringValue();
    [CompilerGeneratedAttribute]
public void set_StringValue(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceClaim : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceClaimConfiguration> <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceConstraint> <Constraints>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceRequest> <Requests>k__BackingField;
    [JsonPropertyNameAttribute("config")]
public IList`1<V1alpha3DeviceClaimConfiguration> Config { get; public set; }
    [JsonPropertyNameAttribute("constraints")]
public IList`1<V1alpha3DeviceConstraint> Constraints { get; public set; }
    [JsonPropertyNameAttribute("requests")]
public IList`1<V1alpha3DeviceRequest> Requests { get; public set; }
    public V1alpha3DeviceClaim(IList`1<V1alpha3DeviceClaimConfiguration> config, IList`1<V1alpha3DeviceConstraint> constraints, IList`1<V1alpha3DeviceRequest> requests);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceClaimConfiguration> get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(IList`1<V1alpha3DeviceClaimConfiguration> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceConstraint> get_Constraints();
    [CompilerGeneratedAttribute]
public void set_Constraints(IList`1<V1alpha3DeviceConstraint> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceRequest> get_Requests();
    [CompilerGeneratedAttribute]
public void set_Requests(IList`1<V1alpha3DeviceRequest> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceClaimConfiguration : object {
    [CompilerGeneratedAttribute]
private V1alpha3OpaqueDeviceConfiguration <Opaque>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Requests>k__BackingField;
    [JsonPropertyNameAttribute("opaque")]
public V1alpha3OpaqueDeviceConfiguration Opaque { get; public set; }
    [JsonPropertyNameAttribute("requests")]
public IList`1<string> Requests { get; public set; }
    public V1alpha3DeviceClaimConfiguration(V1alpha3OpaqueDeviceConfiguration opaque, IList`1<string> requests);
    [CompilerGeneratedAttribute]
public V1alpha3OpaqueDeviceConfiguration get_Opaque();
    [CompilerGeneratedAttribute]
public void set_Opaque(V1alpha3OpaqueDeviceConfiguration value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Requests();
    [CompilerGeneratedAttribute]
public void set_Requests(IList`1<string> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3DeviceClass : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3DeviceClassSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha3DeviceClassSpec Spec { get; public set; }
    public V1alpha3DeviceClass(V1alpha3DeviceClassSpec spec, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha3DeviceClassSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha3DeviceClassSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceClassConfiguration : object {
    [CompilerGeneratedAttribute]
private V1alpha3OpaqueDeviceConfiguration <Opaque>k__BackingField;
    [JsonPropertyNameAttribute("opaque")]
public V1alpha3OpaqueDeviceConfiguration Opaque { get; public set; }
    public V1alpha3DeviceClassConfiguration(V1alpha3OpaqueDeviceConfiguration opaque);
    [CompilerGeneratedAttribute]
public V1alpha3OpaqueDeviceConfiguration get_Opaque();
    [CompilerGeneratedAttribute]
public void set_Opaque(V1alpha3OpaqueDeviceConfiguration value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3DeviceClassList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceClass> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha3DeviceClass> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha3DeviceClassList(IList`1<V1alpha3DeviceClass> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha3DeviceClass> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha3DeviceClass> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceClassSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceClassConfiguration> <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceSelector> <Selectors>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeSelector <SuitableNodes>k__BackingField;
    [JsonPropertyNameAttribute("config")]
public IList`1<V1alpha3DeviceClassConfiguration> Config { get; public set; }
    [JsonPropertyNameAttribute("selectors")]
public IList`1<V1alpha3DeviceSelector> Selectors { get; public set; }
    [JsonPropertyNameAttribute("suitableNodes")]
public V1NodeSelector SuitableNodes { get; public set; }
    public V1alpha3DeviceClassSpec(IList`1<V1alpha3DeviceClassConfiguration> config, IList`1<V1alpha3DeviceSelector> selectors, V1NodeSelector suitableNodes);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceClassConfiguration> get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(IList`1<V1alpha3DeviceClassConfiguration> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceSelector> get_Selectors();
    [CompilerGeneratedAttribute]
public void set_Selectors(IList`1<V1alpha3DeviceSelector> value);
    [CompilerGeneratedAttribute]
public V1NodeSelector get_SuitableNodes();
    [CompilerGeneratedAttribute]
public void set_SuitableNodes(V1NodeSelector value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceConstraint : object {
    [CompilerGeneratedAttribute]
private string <MatchAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Requests>k__BackingField;
    [JsonPropertyNameAttribute("matchAttribute")]
public string MatchAttribute { get; public set; }
    [JsonPropertyNameAttribute("requests")]
public IList`1<string> Requests { get; public set; }
    public V1alpha3DeviceConstraint(string matchAttribute, IList`1<string> requests);
    [CompilerGeneratedAttribute]
public string get_MatchAttribute();
    [CompilerGeneratedAttribute]
public void set_MatchAttribute(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Requests();
    [CompilerGeneratedAttribute]
public void set_Requests(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceRequest : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AdminAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AllocationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3DeviceSelector> <Selectors>k__BackingField;
    [JsonPropertyNameAttribute("adminAccess")]
public Nullable`1<bool> AdminAccess { get; public set; }
    [JsonPropertyNameAttribute("allocationMode")]
public string AllocationMode { get; public set; }
    [JsonPropertyNameAttribute("count")]
public Nullable`1<long> Count { get; public set; }
    [JsonPropertyNameAttribute("deviceClassName")]
public string DeviceClassName { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("selectors")]
public IList`1<V1alpha3DeviceSelector> Selectors { get; public set; }
    public V1alpha3DeviceRequest(string deviceClassName, string name, Nullable`1<bool> adminAccess, string allocationMode, Nullable`1<long> count, IList`1<V1alpha3DeviceSelector> selectors);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AdminAccess();
    [CompilerGeneratedAttribute]
public void set_AdminAccess(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_AllocationMode();
    [CompilerGeneratedAttribute]
public void set_AllocationMode(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_DeviceClassName();
    [CompilerGeneratedAttribute]
public void set_DeviceClassName(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3DeviceSelector> get_Selectors();
    [CompilerGeneratedAttribute]
public void set_Selectors(IList`1<V1alpha3DeviceSelector> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceRequestAllocationResult : object {
    [CompilerGeneratedAttribute]
private string <Device>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pool>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Request>k__BackingField;
    [JsonPropertyNameAttribute("device")]
public string Device { get; public set; }
    [JsonPropertyNameAttribute("driver")]
public string Driver { get; public set; }
    [JsonPropertyNameAttribute("pool")]
public string Pool { get; public set; }
    [JsonPropertyNameAttribute("request")]
public string Request { get; public set; }
    public V1alpha3DeviceRequestAllocationResult(string device, string driver, string pool, string request);
    [CompilerGeneratedAttribute]
public string get_Device();
    [CompilerGeneratedAttribute]
public void set_Device(string value);
    [CompilerGeneratedAttribute]
public string get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(string value);
    [CompilerGeneratedAttribute]
public string get_Pool();
    [CompilerGeneratedAttribute]
public void set_Pool(string value);
    [CompilerGeneratedAttribute]
public string get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3DeviceSelector : object {
    [CompilerGeneratedAttribute]
private V1alpha3CELDeviceSelector <Cel>k__BackingField;
    [JsonPropertyNameAttribute("cel")]
public V1alpha3CELDeviceSelector Cel { get; public set; }
    public V1alpha3DeviceSelector(V1alpha3CELDeviceSelector cel);
    [CompilerGeneratedAttribute]
public V1alpha3CELDeviceSelector get_Cel();
    [CompilerGeneratedAttribute]
public void set_Cel(V1alpha3CELDeviceSelector value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3OpaqueDeviceConfiguration : object {
    [CompilerGeneratedAttribute]
private string <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Parameters>k__BackingField;
    [JsonPropertyNameAttribute("driver")]
public string Driver { get; public set; }
    [JsonPropertyNameAttribute("parameters")]
public object Parameters { get; public set; }
    public V1alpha3OpaqueDeviceConfiguration(string driver, object parameters);
    [CompilerGeneratedAttribute]
public string get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(string value);
    [CompilerGeneratedAttribute]
public object get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(object value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3PodSchedulingContext : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3PodSchedulingContextSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3PodSchedulingContextStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha3PodSchedulingContextSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1alpha3PodSchedulingContextStatus Status { get; public set; }
    public V1alpha3PodSchedulingContext(V1alpha3PodSchedulingContextSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1alpha3PodSchedulingContextStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha3PodSchedulingContextSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha3PodSchedulingContextSpec value);
    [CompilerGeneratedAttribute]
public V1alpha3PodSchedulingContextStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1alpha3PodSchedulingContextStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3PodSchedulingContextList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3PodSchedulingContext> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha3PodSchedulingContext> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha3PodSchedulingContextList(IList`1<V1alpha3PodSchedulingContext> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha3PodSchedulingContext> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha3PodSchedulingContext> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3PodSchedulingContextSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <PotentialNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SelectedNode>k__BackingField;
    [JsonPropertyNameAttribute("potentialNodes")]
public IList`1<string> PotentialNodes { get; public set; }
    [JsonPropertyNameAttribute("selectedNode")]
public string SelectedNode { get; public set; }
    public V1alpha3PodSchedulingContextSpec(IList`1<string> potentialNodes, string selectedNode);
    [CompilerGeneratedAttribute]
public IList`1<string> get_PotentialNodes();
    [CompilerGeneratedAttribute]
public void set_PotentialNodes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SelectedNode();
    [CompilerGeneratedAttribute]
public void set_SelectedNode(string value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3PodSchedulingContextStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3ResourceClaimSchedulingStatus> <ResourceClaims>k__BackingField;
    [JsonPropertyNameAttribute("resourceClaims")]
public IList`1<V1alpha3ResourceClaimSchedulingStatus> ResourceClaims { get; public set; }
    public V1alpha3PodSchedulingContextStatus(IList`1<V1alpha3ResourceClaimSchedulingStatus> resourceClaims);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3ResourceClaimSchedulingStatus> get_ResourceClaims();
    [CompilerGeneratedAttribute]
public void set_ResourceClaims(IList`1<V1alpha3ResourceClaimSchedulingStatus> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3ResourceClaim : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3ResourceClaimSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3ResourceClaimStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha3ResourceClaimSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1alpha3ResourceClaimStatus Status { get; public set; }
    public V1alpha3ResourceClaim(V1alpha3ResourceClaimSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1alpha3ResourceClaimStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha3ResourceClaimSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha3ResourceClaimSpec value);
    [CompilerGeneratedAttribute]
public V1alpha3ResourceClaimStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1alpha3ResourceClaimStatus value);
    public virtual void Validate();
    public static V1alpha3ResourceClaim op_Explicit(V1ResourceClaim s);
}
public class k8s.Models.V1alpha3ResourceClaimConsumerReference : object {
    [CompilerGeneratedAttribute]
private string <ApiGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("apiGroup")]
public string ApiGroup { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public string Resource { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1alpha3ResourceClaimConsumerReference(string name, string resource, string uid, string apiGroup);
    [CompilerGeneratedAttribute]
public string get_ApiGroup();
    [CompilerGeneratedAttribute]
public void set_ApiGroup(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3ResourceClaimList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3ResourceClaim> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha3ResourceClaim> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha3ResourceClaimList(IList`1<V1alpha3ResourceClaim> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha3ResourceClaim> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha3ResourceClaim> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3ResourceClaimSchedulingStatus : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <UnsuitableNodes>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("unsuitableNodes")]
public IList`1<string> UnsuitableNodes { get; public set; }
    public V1alpha3ResourceClaimSchedulingStatus(string name, IList`1<string> unsuitableNodes);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_UnsuitableNodes();
    [CompilerGeneratedAttribute]
public void set_UnsuitableNodes(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3ResourceClaimSpec : object {
    [CompilerGeneratedAttribute]
private string <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3DeviceClaim <Devices>k__BackingField;
    [JsonPropertyNameAttribute("controller")]
public string Controller { get; public set; }
    [JsonPropertyNameAttribute("devices")]
public V1alpha3DeviceClaim Devices { get; public set; }
    public V1alpha3ResourceClaimSpec(string controller, V1alpha3DeviceClaim devices);
    [CompilerGeneratedAttribute]
public string get_Controller();
    [CompilerGeneratedAttribute]
public void set_Controller(string value);
    [CompilerGeneratedAttribute]
public V1alpha3DeviceClaim get_Devices();
    [CompilerGeneratedAttribute]
public void set_Devices(V1alpha3DeviceClaim value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3ResourceClaimStatus : object {
    [CompilerGeneratedAttribute]
private V1alpha3AllocationResult <Allocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DeallocationRequested>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3ResourceClaimConsumerReference> <ReservedFor>k__BackingField;
    [JsonPropertyNameAttribute("allocation")]
public V1alpha3AllocationResult Allocation { get; public set; }
    [JsonPropertyNameAttribute("deallocationRequested")]
public Nullable`1<bool> DeallocationRequested { get; public set; }
    [JsonPropertyNameAttribute("reservedFor")]
public IList`1<V1alpha3ResourceClaimConsumerReference> ReservedFor { get; public set; }
    public V1alpha3ResourceClaimStatus(V1alpha3AllocationResult allocation, Nullable`1<bool> deallocationRequested, IList`1<V1alpha3ResourceClaimConsumerReference> reservedFor);
    [CompilerGeneratedAttribute]
public V1alpha3AllocationResult get_Allocation();
    [CompilerGeneratedAttribute]
public void set_Allocation(V1alpha3AllocationResult value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DeallocationRequested();
    [CompilerGeneratedAttribute]
public void set_DeallocationRequested(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3ResourceClaimConsumerReference> get_ReservedFor();
    [CompilerGeneratedAttribute]
public void set_ReservedFor(IList`1<V1alpha3ResourceClaimConsumerReference> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3ResourceClaimTemplate : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3ResourceClaimTemplateSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha3ResourceClaimTemplateSpec Spec { get; public set; }
    public V1alpha3ResourceClaimTemplate(V1alpha3ResourceClaimTemplateSpec spec, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha3ResourceClaimTemplateSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha3ResourceClaimTemplateSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3ResourceClaimTemplateList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3ResourceClaimTemplate> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha3ResourceClaimTemplate> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1alpha3ResourceClaimTemplateList(IList`1<V1alpha3ResourceClaimTemplate> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha3ResourceClaimTemplate> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha3ResourceClaimTemplate> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3ResourceClaimTemplateSpec : object {
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3ResourceClaimSpec <Spec>k__BackingField;
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha3ResourceClaimSpec Spec { get; public set; }
    public V1alpha3ResourceClaimTemplateSpec(V1alpha3ResourceClaimSpec spec, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1alpha3ResourceClaimSpec get_Spec();
    [CompilerGeneratedAttribute]
public void set_Spec(V1alpha3ResourceClaimSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3ResourcePool : object {
    [CompilerGeneratedAttribute]
private long <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ResourceSliceCount>k__BackingField;
    [JsonPropertyNameAttribute("generation")]
public long Generation { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("resourceSliceCount")]
public long ResourceSliceCount { get; public set; }
    public V1alpha3ResourcePool(long generation, string name, long resourceSliceCount);
    [CompilerGeneratedAttribute]
public long get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(long value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_ResourceSliceCount();
    [CompilerGeneratedAttribute]
public void set_ResourceSliceCount(long value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3ResourceSlice : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3ResourceSliceSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1alpha3ResourceSliceSpec Spec { get; public set; }
    public V1alpha3ResourceSlice(V1alpha3ResourceSliceSpec spec, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1alpha3ResourceSliceSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1alpha3ResourceSliceSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1alpha3ResourceSliceList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3ResourceSlice> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <ListMeta>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1alpha3ResourceSlice> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("listMeta")]
public V1ListMeta ListMeta { get; public set; }
    public V1alpha3ResourceSliceList(IList`1<V1alpha3ResourceSlice> items, string apiVersion, string kind, V1ListMeta listMeta);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1alpha3ResourceSlice> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1alpha3ResourceSlice> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public V1ListMeta get_ListMeta();
    [CompilerGeneratedAttribute]
public void set_ListMeta(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1alpha3ResourceSliceSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1alpha3Device> <Devices>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeSelector <NodeSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1alpha3ResourcePool <Pool>k__BackingField;
    [JsonPropertyNameAttribute("allNodes")]
public Nullable`1<bool> AllNodes { get; public set; }
    [JsonPropertyNameAttribute("devices")]
public IList`1<V1alpha3Device> Devices { get; public set; }
    [JsonPropertyNameAttribute("driver")]
public string Driver { get; public set; }
    [JsonPropertyNameAttribute("nodeName")]
public string NodeName { get; public set; }
    [JsonPropertyNameAttribute("nodeSelector")]
public V1NodeSelector NodeSelector { get; public set; }
    [JsonPropertyNameAttribute("pool")]
public V1alpha3ResourcePool Pool { get; public set; }
    public V1alpha3ResourceSliceSpec(string driver, V1alpha3ResourcePool pool, Nullable`1<bool> allNodes, IList`1<V1alpha3Device> devices, string nodeName, V1NodeSelector nodeSelector);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllNodes();
    [CompilerGeneratedAttribute]
public void set_AllNodes(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1alpha3Device> get_Devices();
    [CompilerGeneratedAttribute]
public void set_Devices(IList`1<V1alpha3Device> value);
    [CompilerGeneratedAttribute]
public string get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(string value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
public void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public V1NodeSelector get_NodeSelector();
    [CompilerGeneratedAttribute]
public void set_NodeSelector(V1NodeSelector value);
    [CompilerGeneratedAttribute]
public V1alpha3ResourcePool get_Pool();
    [CompilerGeneratedAttribute]
public void set_Pool(V1alpha3ResourcePool value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1APIGroup : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V1GroupVersionForDiscovery <PreferredVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ServerAddressByClientCIDR> <ServerAddressByClientCIDRs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1GroupVersionForDiscovery> <Versions>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("preferredVersion")]
public V1GroupVersionForDiscovery PreferredVersion { get; public set; }
    [JsonPropertyNameAttribute("serverAddressByClientCIDRs")]
public IList`1<V1ServerAddressByClientCIDR> ServerAddressByClientCIDRs { get; public set; }
    [JsonPropertyNameAttribute("versions")]
public IList`1<V1GroupVersionForDiscovery> Versions { get; public set; }
    public V1APIGroup(string name, IList`1<V1GroupVersionForDiscovery> versions, string apiVersion, string kind, V1GroupVersionForDiscovery preferredVersion, IList`1<V1ServerAddressByClientCIDR> serverAddressByClientCIDRs);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V1GroupVersionForDiscovery get_PreferredVersion();
    [CompilerGeneratedAttribute]
public void set_PreferredVersion(V1GroupVersionForDiscovery value);
    [CompilerGeneratedAttribute]
public IList`1<V1ServerAddressByClientCIDR> get_ServerAddressByClientCIDRs();
    [CompilerGeneratedAttribute]
public void set_ServerAddressByClientCIDRs(IList`1<V1ServerAddressByClientCIDR> value);
    [CompilerGeneratedAttribute]
public IList`1<V1GroupVersionForDiscovery> get_Versions();
    [CompilerGeneratedAttribute]
public void set_Versions(IList`1<V1GroupVersionForDiscovery> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1APIGroupList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1APIGroup> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("groups")]
public IList`1<V1APIGroup> Groups { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    public V1APIGroupList(IList`1<V1APIGroup> groups, string apiVersion, string kind);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1APIGroup> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(IList`1<V1APIGroup> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    public virtual void Validate();
}
public class k8s.Models.V1APIResource : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Namespaced>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ShortNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SingularName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageVersionHash>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyNameAttribute("categories")]
public IList`1<string> Categories { get; public set; }
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespaced")]
public bool Namespaced { get; public set; }
    [JsonPropertyNameAttribute("shortNames")]
public IList`1<string> ShortNames { get; public set; }
    [JsonPropertyNameAttribute("singularName")]
public string SingularName { get; public set; }
    [JsonPropertyNameAttribute("storageVersionHash")]
public string StorageVersionHash { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    [JsonPropertyNameAttribute("version")]
public string Version { get; public set; }
    public V1APIResource(string kind, string name, bool namespaced, string singularName, IList`1<string> verbs, IList`1<string> categories, string group, IList`1<string> shortNames, string storageVersionHash, string version);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Namespaced();
    [CompilerGeneratedAttribute]
public void set_Namespaced(bool value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ShortNames();
    [CompilerGeneratedAttribute]
public void set_ShortNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SingularName();
    [CompilerGeneratedAttribute]
public void set_SingularName(string value);
    [CompilerGeneratedAttribute]
public string get_StorageVersionHash();
    [CompilerGeneratedAttribute]
public void set_StorageVersionHash(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1APIResourceList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1APIResource> <Resources>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("groupVersion")]
public string GroupVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<V1APIResource> Resources { get; public set; }
    public V1APIResourceList(string groupVersion, IList`1<V1APIResource> resources, string apiVersion, string kind);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_GroupVersion();
    [CompilerGeneratedAttribute]
public void set_GroupVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1APIResource> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<V1APIResource> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1APIService : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1APIServiceSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1APIServiceStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1APIServiceSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1APIServiceStatus Status { get; public set; }
    public V1APIService(string apiVersion, string kind, V1ObjectMeta metadata, V1APIServiceSpec spec, V1APIServiceStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1APIServiceSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1APIServiceSpec value);
    [CompilerGeneratedAttribute]
public V1APIServiceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1APIServiceStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1APIServiceCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1APIServiceCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1APIServiceList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1APIService> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1APIService> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1APIServiceList(IList`1<V1APIService> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1APIService> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1APIService> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1APIServiceSpec : object {
    [CompilerGeneratedAttribute]
private Byte[] <CaBundle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GroupPriorityMinimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <InsecureSkipTLSVerify>k__BackingField;
    [CompilerGeneratedAttribute]
private Apiregistrationv1ServiceReference <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VersionPriority>k__BackingField;
    [JsonPropertyNameAttribute("caBundle")]
public Byte[] CaBundle { get; public set; }
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("groupPriorityMinimum")]
public int GroupPriorityMinimum { get; public set; }
    [JsonPropertyNameAttribute("insecureSkipTLSVerify")]
public Nullable`1<bool> InsecureSkipTLSVerify { get; public set; }
    [JsonPropertyNameAttribute("service")]
public Apiregistrationv1ServiceReference Service { get; public set; }
    [JsonPropertyNameAttribute("version")]
public string Version { get; public set; }
    [JsonPropertyNameAttribute("versionPriority")]
public int VersionPriority { get; public set; }
    public V1APIServiceSpec(int groupPriorityMinimum, int versionPriority, Byte[] caBundle, string group, Nullable`1<bool> insecureSkipTLSVerify, Apiregistrationv1ServiceReference service, string version);
    [CompilerGeneratedAttribute]
public Byte[] get_CaBundle();
    [CompilerGeneratedAttribute]
public void set_CaBundle(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public int get_GroupPriorityMinimum();
    [CompilerGeneratedAttribute]
public void set_GroupPriorityMinimum(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_InsecureSkipTLSVerify();
    [CompilerGeneratedAttribute]
public void set_InsecureSkipTLSVerify(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Apiregistrationv1ServiceReference get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(Apiregistrationv1ServiceReference value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public int get_VersionPriority();
    [CompilerGeneratedAttribute]
public void set_VersionPriority(int value);
    public virtual void Validate();
}
public class k8s.Models.V1APIServiceStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1APIServiceCondition> <Conditions>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1APIServiceCondition> Conditions { get; public set; }
    public V1APIServiceStatus(IList`1<V1APIServiceCondition> conditions);
    [CompilerGeneratedAttribute]
public IList`1<V1APIServiceCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1APIServiceCondition> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1APIVersions : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ServerAddressByClientCIDR> <ServerAddressByClientCIDRs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Versions>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("serverAddressByClientCIDRs")]
public IList`1<V1ServerAddressByClientCIDR> ServerAddressByClientCIDRs { get; public set; }
    [JsonPropertyNameAttribute("versions")]
public IList`1<string> Versions { get; public set; }
    public V1APIVersions(IList`1<V1ServerAddressByClientCIDR> serverAddressByClientCIDRs, IList`1<string> versions, string apiVersion, string kind);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1ServerAddressByClientCIDR> get_ServerAddressByClientCIDRs();
    [CompilerGeneratedAttribute]
public void set_ServerAddressByClientCIDRs(IList`1<V1ServerAddressByClientCIDR> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Versions();
    [CompilerGeneratedAttribute]
public void set_Versions(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1AppArmorProfile : object {
    [CompilerGeneratedAttribute]
private string <LocalhostProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("localhostProfile")]
public string LocalhostProfile { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1AppArmorProfile(string type, string localhostProfile);
    [CompilerGeneratedAttribute]
public string get_LocalhostProfile();
    [CompilerGeneratedAttribute]
public void set_LocalhostProfile(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1AttachedVolume : object {
    [CompilerGeneratedAttribute]
private string <DevicePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("devicePath")]
public string DevicePath { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1AttachedVolume(string devicePath, string name);
    [CompilerGeneratedAttribute]
public string get_DevicePath();
    [CompilerGeneratedAttribute]
public void set_DevicePath(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1AuditAnnotation : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueExpression>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("valueExpression")]
public string ValueExpression { get; public set; }
    public V1AuditAnnotation(string key, string valueExpression);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_ValueExpression();
    [CompilerGeneratedAttribute]
public void set_ValueExpression(string value);
    public virtual void Validate();
    public static V1AuditAnnotation op_Explicit(V1beta1AuditAnnotation s);
    public static V1AuditAnnotation op_Explicit(V1alpha1AuditAnnotation s);
}
public class k8s.Models.V1AWSElasticBlockStoreVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeID>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("partition")]
public Nullable`1<int> Partition { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("volumeID")]
public string VolumeID { get; public set; }
    public V1AWSElasticBlockStoreVolumeSource(string volumeID, string fsType, Nullable`1<int> partition, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_VolumeID();
    [CompilerGeneratedAttribute]
public void set_VolumeID(string value);
    public virtual void Validate();
}
public class k8s.Models.V1AzureDiskVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <CachingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DiskName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DiskURI>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [JsonPropertyNameAttribute("cachingMode")]
public string CachingMode { get; public set; }
    [JsonPropertyNameAttribute("diskName")]
public string DiskName { get; public set; }
    [JsonPropertyNameAttribute("diskURI")]
public string DiskURI { get; public set; }
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    public V1AzureDiskVolumeSource(string diskName, string diskURI, string cachingMode, string fsType, string kind, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_CachingMode();
    [CompilerGeneratedAttribute]
public void set_CachingMode(string value);
    [CompilerGeneratedAttribute]
public string get_DiskName();
    [CompilerGeneratedAttribute]
public void set_DiskName(string value);
    [CompilerGeneratedAttribute]
public string get_DiskURI();
    [CompilerGeneratedAttribute]
public void set_DiskURI(string value);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1AzureFilePersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShareName>k__BackingField;
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretName")]
public string SecretName { get; public set; }
    [JsonPropertyNameAttribute("secretNamespace")]
public string SecretNamespace { get; public set; }
    [JsonPropertyNameAttribute("shareName")]
public string ShareName { get; public set; }
    public V1AzureFilePersistentVolumeSource(string secretName, string shareName, Nullable`1<bool> readOnlyProperty, string secretNamespace);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SecretName();
    [CompilerGeneratedAttribute]
public void set_SecretName(string value);
    [CompilerGeneratedAttribute]
public string get_SecretNamespace();
    [CompilerGeneratedAttribute]
public void set_SecretNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_ShareName();
    [CompilerGeneratedAttribute]
public void set_ShareName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1AzureFileVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShareName>k__BackingField;
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretName")]
public string SecretName { get; public set; }
    [JsonPropertyNameAttribute("shareName")]
public string ShareName { get; public set; }
    public V1AzureFileVolumeSource(string secretName, string shareName, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SecretName();
    [CompilerGeneratedAttribute]
public void set_SecretName(string value);
    [CompilerGeneratedAttribute]
public string get_ShareName();
    [CompilerGeneratedAttribute]
public void set_ShareName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1beta1AuditAnnotation : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueExpression>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("valueExpression")]
public string ValueExpression { get; public set; }
    public V1beta1AuditAnnotation(string key, string valueExpression);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_ValueExpression();
    [CompilerGeneratedAttribute]
public void set_ValueExpression(string value);
    public virtual void Validate();
    public static V1beta1AuditAnnotation op_Explicit(V1AuditAnnotation s);
    public static V1beta1AuditAnnotation op_Explicit(V1alpha1AuditAnnotation s);
}
public class k8s.Models.V1beta1ExpressionWarning : object {
    [CompilerGeneratedAttribute]
private string <FieldRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Warning>k__BackingField;
    [JsonPropertyNameAttribute("fieldRef")]
public string FieldRef { get; public set; }
    [JsonPropertyNameAttribute("warning")]
public string Warning { get; public set; }
    public V1beta1ExpressionWarning(string fieldRef, string warning);
    [CompilerGeneratedAttribute]
public string get_FieldRef();
    [CompilerGeneratedAttribute]
public void set_FieldRef(string value);
    [CompilerGeneratedAttribute]
public string get_Warning();
    [CompilerGeneratedAttribute]
public void set_Warning(string value);
    public virtual void Validate();
    public static V1beta1ExpressionWarning op_Explicit(V1alpha1ExpressionWarning s);
    public static V1beta1ExpressionWarning op_Explicit(V1ExpressionWarning s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1IPAddress : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1IPAddressSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1beta1IPAddressSpec Spec { get; public set; }
    public V1beta1IPAddress(string apiVersion, string kind, V1ObjectMeta metadata, V1beta1IPAddressSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1beta1IPAddressSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1beta1IPAddressSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1IPAddressList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1IPAddress> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1beta1IPAddress> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1beta1IPAddressList(IList`1<V1beta1IPAddress> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1beta1IPAddress> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1beta1IPAddress> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1beta1IPAddressSpec : object {
    [CompilerGeneratedAttribute]
private V1beta1ParentReference <ParentRef>k__BackingField;
    [JsonPropertyNameAttribute("parentRef")]
public V1beta1ParentReference ParentRef { get; public set; }
    public V1beta1IPAddressSpec(V1beta1ParentReference parentRef);
    [CompilerGeneratedAttribute]
public V1beta1ParentReference get_ParentRef();
    [CompilerGeneratedAttribute]
public void set_ParentRef(V1beta1ParentReference value);
    public virtual void Validate();
}
public class k8s.Models.V1beta1MatchCondition : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1beta1MatchCondition(string expression, string name);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1beta1MatchCondition op_Explicit(V1alpha1MatchCondition s);
    public static V1beta1MatchCondition op_Explicit(V1MatchCondition s);
}
public class k8s.Models.V1beta1MatchResources : object {
    [CompilerGeneratedAttribute]
private IList`1<V1beta1NamedRuleWithOperations> <ExcludeResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MatchPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NamespaceSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <ObjectSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1NamedRuleWithOperations> <ResourceRules>k__BackingField;
    [JsonPropertyNameAttribute("excludeResourceRules")]
public IList`1<V1beta1NamedRuleWithOperations> ExcludeResourceRules { get; public set; }
    [JsonPropertyNameAttribute("matchPolicy")]
public string MatchPolicy { get; public set; }
    [JsonPropertyNameAttribute("namespaceSelector")]
public V1LabelSelector NamespaceSelector { get; public set; }
    [JsonPropertyNameAttribute("objectSelector")]
public V1LabelSelector ObjectSelector { get; public set; }
    [JsonPropertyNameAttribute("resourceRules")]
public IList`1<V1beta1NamedRuleWithOperations> ResourceRules { get; public set; }
    public V1beta1MatchResources(IList`1<V1beta1NamedRuleWithOperations> excludeResourceRules, string matchPolicy, V1LabelSelector namespaceSelector, V1LabelSelector objectSelector, IList`1<V1beta1NamedRuleWithOperations> resourceRules);
    [CompilerGeneratedAttribute]
public IList`1<V1beta1NamedRuleWithOperations> get_ExcludeResourceRules();
    [CompilerGeneratedAttribute]
public void set_ExcludeResourceRules(IList`1<V1beta1NamedRuleWithOperations> value);
    [CompilerGeneratedAttribute]
public string get_MatchPolicy();
    [CompilerGeneratedAttribute]
public void set_MatchPolicy(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NamespaceSelector();
    [CompilerGeneratedAttribute]
public void set_NamespaceSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_ObjectSelector();
    [CompilerGeneratedAttribute]
public void set_ObjectSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<V1beta1NamedRuleWithOperations> get_ResourceRules();
    [CompilerGeneratedAttribute]
public void set_ResourceRules(IList`1<V1beta1NamedRuleWithOperations> value);
    public virtual void Validate();
    public static V1beta1MatchResources op_Explicit(V1alpha1MatchResources s);
    public static V1beta1MatchResources op_Explicit(V1MatchResources s);
}
public class k8s.Models.V1beta1NamedRuleWithOperations : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ResourceNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("apiVersions")]
public IList`1<string> ApiVersions { get; public set; }
    [JsonPropertyNameAttribute("operations")]
public IList`1<string> Operations { get; public set; }
    [JsonPropertyNameAttribute("resourceNames")]
public IList`1<string> ResourceNames { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("scope")]
public string Scope { get; public set; }
    public V1beta1NamedRuleWithOperations(IList`1<string> apiGroups, IList`1<string> apiVersions, IList`1<string> operations, IList`1<string> resourceNames, IList`1<string> resources, string scope);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiVersions();
    [CompilerGeneratedAttribute]
public void set_ApiVersions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ResourceNames();
    [CompilerGeneratedAttribute]
public void set_ResourceNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public virtual void Validate();
    public static V1beta1NamedRuleWithOperations op_Explicit(V1alpha1NamedRuleWithOperations s);
    public static V1beta1NamedRuleWithOperations op_Explicit(V1NamedRuleWithOperations s);
}
public class k8s.Models.V1beta1ParamKind : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    public V1beta1ParamKind(string apiVersion, string kind);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    public virtual void Validate();
    public static V1beta1ParamKind op_Explicit(V1alpha1ParamKind s);
    public static V1beta1ParamKind op_Explicit(V1ParamKind s);
}
public class k8s.Models.V1beta1ParamRef : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterNotFoundAction>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("parameterNotFoundAction")]
public string ParameterNotFoundAction { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    public V1beta1ParamRef(string name, string namespaceProperty, string parameterNotFoundAction, V1LabelSelector selector);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_ParameterNotFoundAction();
    [CompilerGeneratedAttribute]
public void set_ParameterNotFoundAction(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    public virtual void Validate();
    public static V1beta1ParamRef op_Explicit(V1alpha1ParamRef s);
    public static V1beta1ParamRef op_Explicit(V1ParamRef s);
}
public class k8s.Models.V1beta1ParentReference : object {
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public string Resource { get; public set; }
    public V1beta1ParentReference(string name, string resource, string group, string namespaceProperty);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1SelfSubjectReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1SelfSubjectReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1beta1SelfSubjectReviewStatus Status { get; public set; }
    public V1beta1SelfSubjectReview(string apiVersion, string kind, V1ObjectMeta metadata, V1beta1SelfSubjectReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1beta1SelfSubjectReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1beta1SelfSubjectReviewStatus value);
    public virtual void Validate();
    public static V1beta1SelfSubjectReview op_Explicit(V1alpha1SelfSubjectReview s);
    public static V1beta1SelfSubjectReview op_Explicit(V1SelfSubjectReview s);
}
public class k8s.Models.V1beta1SelfSubjectReviewStatus : object {
    [CompilerGeneratedAttribute]
private V1UserInfo <UserInfo>k__BackingField;
    [JsonPropertyNameAttribute("userInfo")]
public V1UserInfo UserInfo { get; public set; }
    public V1beta1SelfSubjectReviewStatus(V1UserInfo userInfo);
    [CompilerGeneratedAttribute]
public V1UserInfo get_UserInfo();
    [CompilerGeneratedAttribute]
public void set_UserInfo(V1UserInfo value);
    public virtual void Validate();
    public static V1beta1SelfSubjectReviewStatus op_Explicit(V1alpha1SelfSubjectReviewStatus s);
    public static V1beta1SelfSubjectReviewStatus op_Explicit(V1SelfSubjectReviewStatus s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1ServiceCIDR : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1ServiceCIDRSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1ServiceCIDRStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1beta1ServiceCIDRSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1beta1ServiceCIDRStatus Status { get; public set; }
    public V1beta1ServiceCIDR(string apiVersion, string kind, V1ObjectMeta metadata, V1beta1ServiceCIDRSpec spec, V1beta1ServiceCIDRStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1beta1ServiceCIDRSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1beta1ServiceCIDRSpec value);
    [CompilerGeneratedAttribute]
public V1beta1ServiceCIDRStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1beta1ServiceCIDRStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1ServiceCIDRList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1ServiceCIDR> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1beta1ServiceCIDR> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1beta1ServiceCIDRList(IList`1<V1beta1ServiceCIDR> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1beta1ServiceCIDR> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1beta1ServiceCIDR> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1beta1ServiceCIDRSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Cidrs>k__BackingField;
    [JsonPropertyNameAttribute("cidrs")]
public IList`1<string> Cidrs { get; public set; }
    public V1beta1ServiceCIDRSpec(IList`1<string> cidrs);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Cidrs();
    [CompilerGeneratedAttribute]
public void set_Cidrs(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1beta1ServiceCIDRStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1Condition> <Conditions>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1Condition> Conditions { get; public set; }
    public V1beta1ServiceCIDRStatus(IList`1<V1Condition> conditions);
    [CompilerGeneratedAttribute]
public IList`1<V1Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1Condition> value);
    public virtual void Validate();
}
public class k8s.Models.V1beta1TypeChecking : object {
    [CompilerGeneratedAttribute]
private IList`1<V1beta1ExpressionWarning> <ExpressionWarnings>k__BackingField;
    [JsonPropertyNameAttribute("expressionWarnings")]
public IList`1<V1beta1ExpressionWarning> ExpressionWarnings { get; public set; }
    public V1beta1TypeChecking(IList`1<V1beta1ExpressionWarning> expressionWarnings);
    [CompilerGeneratedAttribute]
public IList`1<V1beta1ExpressionWarning> get_ExpressionWarnings();
    [CompilerGeneratedAttribute]
public void set_ExpressionWarnings(IList`1<V1beta1ExpressionWarning> value);
    public virtual void Validate();
    public static V1beta1TypeChecking op_Explicit(V1alpha1TypeChecking s);
    public static V1beta1TypeChecking op_Explicit(V1TypeChecking s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1ValidatingAdmissionPolicy : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1ValidatingAdmissionPolicySpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1ValidatingAdmissionPolicyStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1beta1ValidatingAdmissionPolicySpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1beta1ValidatingAdmissionPolicyStatus Status { get; public set; }
    public V1beta1ValidatingAdmissionPolicy(string apiVersion, string kind, V1ObjectMeta metadata, V1beta1ValidatingAdmissionPolicySpec spec, V1beta1ValidatingAdmissionPolicyStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1beta1ValidatingAdmissionPolicySpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1beta1ValidatingAdmissionPolicySpec value);
    [CompilerGeneratedAttribute]
public V1beta1ValidatingAdmissionPolicyStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1beta1ValidatingAdmissionPolicyStatus value);
    public virtual void Validate();
    public static V1beta1ValidatingAdmissionPolicy op_Explicit(V1alpha1ValidatingAdmissionPolicy s);
    public static V1beta1ValidatingAdmissionPolicy op_Explicit(V1ValidatingAdmissionPolicy s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1ValidatingAdmissionPolicyBinding : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1ValidatingAdmissionPolicyBindingSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1beta1ValidatingAdmissionPolicyBindingSpec Spec { get; public set; }
    public V1beta1ValidatingAdmissionPolicyBinding(string apiVersion, string kind, V1ObjectMeta metadata, V1beta1ValidatingAdmissionPolicyBindingSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1beta1ValidatingAdmissionPolicyBindingSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1beta1ValidatingAdmissionPolicyBindingSpec value);
    public virtual void Validate();
    public static V1beta1ValidatingAdmissionPolicyBinding op_Explicit(V1alpha1ValidatingAdmissionPolicyBinding s);
    public static V1beta1ValidatingAdmissionPolicyBinding op_Explicit(V1ValidatingAdmissionPolicyBinding s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1ValidatingAdmissionPolicyBindingList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1ValidatingAdmissionPolicyBinding> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1beta1ValidatingAdmissionPolicyBinding> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1beta1ValidatingAdmissionPolicyBindingList(IList`1<V1beta1ValidatingAdmissionPolicyBinding> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1beta1ValidatingAdmissionPolicyBinding> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1beta1ValidatingAdmissionPolicyBinding> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1beta1ValidatingAdmissionPolicyBindingList op_Explicit(V1alpha1ValidatingAdmissionPolicyBindingList s);
    public static V1beta1ValidatingAdmissionPolicyBindingList op_Explicit(V1ValidatingAdmissionPolicyBindingList s);
}
public class k8s.Models.V1beta1ValidatingAdmissionPolicyBindingSpec : object {
    [CompilerGeneratedAttribute]
private V1beta1MatchResources <MatchResources>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1ParamRef <ParamRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ValidationActions>k__BackingField;
    [JsonPropertyNameAttribute("matchResources")]
public V1beta1MatchResources MatchResources { get; public set; }
    [JsonPropertyNameAttribute("paramRef")]
public V1beta1ParamRef ParamRef { get; public set; }
    [JsonPropertyNameAttribute("policyName")]
public string PolicyName { get; public set; }
    [JsonPropertyNameAttribute("validationActions")]
public IList`1<string> ValidationActions { get; public set; }
    public V1beta1ValidatingAdmissionPolicyBindingSpec(V1beta1MatchResources matchResources, V1beta1ParamRef paramRef, string policyName, IList`1<string> validationActions);
    [CompilerGeneratedAttribute]
public V1beta1MatchResources get_MatchResources();
    [CompilerGeneratedAttribute]
public void set_MatchResources(V1beta1MatchResources value);
    [CompilerGeneratedAttribute]
public V1beta1ParamRef get_ParamRef();
    [CompilerGeneratedAttribute]
public void set_ParamRef(V1beta1ParamRef value);
    [CompilerGeneratedAttribute]
public string get_PolicyName();
    [CompilerGeneratedAttribute]
public void set_PolicyName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ValidationActions();
    [CompilerGeneratedAttribute]
public void set_ValidationActions(IList`1<string> value);
    public virtual void Validate();
    public static V1beta1ValidatingAdmissionPolicyBindingSpec op_Explicit(V1alpha1ValidatingAdmissionPolicyBindingSpec s);
    public static V1beta1ValidatingAdmissionPolicyBindingSpec op_Explicit(V1ValidatingAdmissionPolicyBindingSpec s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1ValidatingAdmissionPolicyList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1ValidatingAdmissionPolicy> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1beta1ValidatingAdmissionPolicy> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1beta1ValidatingAdmissionPolicyList(IList`1<V1beta1ValidatingAdmissionPolicy> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1beta1ValidatingAdmissionPolicy> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1beta1ValidatingAdmissionPolicy> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1beta1ValidatingAdmissionPolicyList op_Explicit(V1alpha1ValidatingAdmissionPolicyList s);
    public static V1beta1ValidatingAdmissionPolicyList op_Explicit(V1ValidatingAdmissionPolicyList s);
}
public class k8s.Models.V1beta1ValidatingAdmissionPolicySpec : object {
    [CompilerGeneratedAttribute]
private IList`1<V1beta1AuditAnnotation> <AuditAnnotations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1MatchCondition> <MatchConditions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1MatchResources <MatchConstraints>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1ParamKind <ParamKind>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1Validation> <Validations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1Variable> <Variables>k__BackingField;
    [JsonPropertyNameAttribute("auditAnnotations")]
public IList`1<V1beta1AuditAnnotation> AuditAnnotations { get; public set; }
    [JsonPropertyNameAttribute("failurePolicy")]
public string FailurePolicy { get; public set; }
    [JsonPropertyNameAttribute("matchConditions")]
public IList`1<V1beta1MatchCondition> MatchConditions { get; public set; }
    [JsonPropertyNameAttribute("matchConstraints")]
public V1beta1MatchResources MatchConstraints { get; public set; }
    [JsonPropertyNameAttribute("paramKind")]
public V1beta1ParamKind ParamKind { get; public set; }
    [JsonPropertyNameAttribute("validations")]
public IList`1<V1beta1Validation> Validations { get; public set; }
    [JsonPropertyNameAttribute("variables")]
public IList`1<V1beta1Variable> Variables { get; public set; }
    public V1beta1ValidatingAdmissionPolicySpec(IList`1<V1beta1AuditAnnotation> auditAnnotations, string failurePolicy, IList`1<V1beta1MatchCondition> matchConditions, V1beta1MatchResources matchConstraints, V1beta1ParamKind paramKind, IList`1<V1beta1Validation> validations, IList`1<V1beta1Variable> variables);
    [CompilerGeneratedAttribute]
public IList`1<V1beta1AuditAnnotation> get_AuditAnnotations();
    [CompilerGeneratedAttribute]
public void set_AuditAnnotations(IList`1<V1beta1AuditAnnotation> value);
    [CompilerGeneratedAttribute]
public string get_FailurePolicy();
    [CompilerGeneratedAttribute]
public void set_FailurePolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1beta1MatchCondition> get_MatchConditions();
    [CompilerGeneratedAttribute]
public void set_MatchConditions(IList`1<V1beta1MatchCondition> value);
    [CompilerGeneratedAttribute]
public V1beta1MatchResources get_MatchConstraints();
    [CompilerGeneratedAttribute]
public void set_MatchConstraints(V1beta1MatchResources value);
    [CompilerGeneratedAttribute]
public V1beta1ParamKind get_ParamKind();
    [CompilerGeneratedAttribute]
public void set_ParamKind(V1beta1ParamKind value);
    [CompilerGeneratedAttribute]
public IList`1<V1beta1Validation> get_Validations();
    [CompilerGeneratedAttribute]
public void set_Validations(IList`1<V1beta1Validation> value);
    [CompilerGeneratedAttribute]
public IList`1<V1beta1Variable> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(IList`1<V1beta1Variable> value);
    public virtual void Validate();
    public static V1beta1ValidatingAdmissionPolicySpec op_Explicit(V1alpha1ValidatingAdmissionPolicySpec s);
    public static V1beta1ValidatingAdmissionPolicySpec op_Explicit(V1ValidatingAdmissionPolicySpec s);
}
public class k8s.Models.V1beta1ValidatingAdmissionPolicyStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta1TypeChecking <TypeChecking>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1Condition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("typeChecking")]
public V1beta1TypeChecking TypeChecking { get; public set; }
    public V1beta1ValidatingAdmissionPolicyStatus(IList`1<V1Condition> conditions, Nullable`1<long> observedGeneration, V1beta1TypeChecking typeChecking);
    [CompilerGeneratedAttribute]
public IList`1<V1Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1Condition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public V1beta1TypeChecking get_TypeChecking();
    [CompilerGeneratedAttribute]
public void set_TypeChecking(V1beta1TypeChecking value);
    public virtual void Validate();
    public static V1beta1ValidatingAdmissionPolicyStatus op_Explicit(V1alpha1ValidatingAdmissionPolicyStatus s);
    public static V1beta1ValidatingAdmissionPolicyStatus op_Explicit(V1ValidatingAdmissionPolicyStatus s);
}
public class k8s.Models.V1beta1Validation : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("messageExpression")]
public string MessageExpression { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    public V1beta1Validation(string expression, string message, string messageExpression, string reason);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_MessageExpression();
    [CompilerGeneratedAttribute]
public void set_MessageExpression(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual void Validate();
    public static V1beta1Validation op_Explicit(V1alpha1Validation s);
    public static V1beta1Validation op_Explicit(V1Validation s);
}
public class k8s.Models.V1beta1Variable : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1beta1Variable(string expression, string name);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1beta1Variable op_Explicit(V1alpha1Variable s);
    public static V1beta1Variable op_Explicit(V1Variable s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1VolumeAttributesClass : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DriverName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Parameters>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("driverName")]
public string DriverName { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("parameters")]
public IDictionary`2<string, string> Parameters { get; public set; }
    public V1beta1VolumeAttributesClass(string driverName, string apiVersion, string kind, V1ObjectMeta metadata, IDictionary`2<string, string> parameters);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_DriverName();
    [CompilerGeneratedAttribute]
public void set_DriverName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IDictionary`2<string, string> value);
    public virtual void Validate();
    public static V1beta1VolumeAttributesClass op_Explicit(V1alpha1VolumeAttributesClass s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta1VolumeAttributesClassList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta1VolumeAttributesClass> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1beta1VolumeAttributesClass> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1beta1VolumeAttributesClassList(IList`1<V1beta1VolumeAttributesClass> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1beta1VolumeAttributesClass> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1beta1VolumeAttributesClass> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1beta1VolumeAttributesClassList op_Explicit(V1alpha1VolumeAttributesClassList s);
}
public class k8s.Models.V1beta3ExemptPriorityLevelConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LendablePercent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NominalConcurrencyShares>k__BackingField;
    [JsonPropertyNameAttribute("lendablePercent")]
public Nullable`1<int> LendablePercent { get; public set; }
    [JsonPropertyNameAttribute("nominalConcurrencyShares")]
public Nullable`1<int> NominalConcurrencyShares { get; public set; }
    public V1beta3ExemptPriorityLevelConfiguration(Nullable`1<int> lendablePercent, Nullable`1<int> nominalConcurrencyShares);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LendablePercent();
    [CompilerGeneratedAttribute]
public void set_LendablePercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NominalConcurrencyShares();
    [CompilerGeneratedAttribute]
public void set_NominalConcurrencyShares(Nullable`1<int> value);
    public virtual void Validate();
    public static V1beta3ExemptPriorityLevelConfiguration op_Explicit(V1ExemptPriorityLevelConfiguration s);
}
public class k8s.Models.V1beta3FlowDistinguisherMethod : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1beta3FlowDistinguisherMethod(string type);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1beta3FlowDistinguisherMethod op_Explicit(V1FlowDistinguisherMethod s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta3FlowSchema : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3FlowSchemaSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3FlowSchemaStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1beta3FlowSchemaSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1beta3FlowSchemaStatus Status { get; public set; }
    public V1beta3FlowSchema(string apiVersion, string kind, V1ObjectMeta metadata, V1beta3FlowSchemaSpec spec, V1beta3FlowSchemaStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1beta3FlowSchemaSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1beta3FlowSchemaSpec value);
    [CompilerGeneratedAttribute]
public V1beta3FlowSchemaStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1beta3FlowSchemaStatus value);
    public virtual void Validate();
    public static V1beta3FlowSchema op_Explicit(V1FlowSchema s);
}
public class k8s.Models.V1beta3FlowSchemaCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1beta3FlowSchemaCondition(Nullable`1<DateTime> lastTransitionTime, string message, string reason, string status, string type);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1beta3FlowSchemaCondition op_Explicit(V1FlowSchemaCondition s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta3FlowSchemaList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta3FlowSchema> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1beta3FlowSchema> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1beta3FlowSchemaList(IList`1<V1beta3FlowSchema> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1beta3FlowSchema> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1beta3FlowSchema> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1beta3FlowSchemaList op_Explicit(V1FlowSchemaList s);
}
public class k8s.Models.V1beta3FlowSchemaSpec : object {
    [CompilerGeneratedAttribute]
private V1beta3FlowDistinguisherMethod <DistinguisherMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MatchingPrecedence>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3PriorityLevelConfigurationReference <PriorityLevelConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta3PolicyRulesWithSubjects> <Rules>k__BackingField;
    [JsonPropertyNameAttribute("distinguisherMethod")]
public V1beta3FlowDistinguisherMethod DistinguisherMethod { get; public set; }
    [JsonPropertyNameAttribute("matchingPrecedence")]
public Nullable`1<int> MatchingPrecedence { get; public set; }
    [JsonPropertyNameAttribute("priorityLevelConfiguration")]
public V1beta3PriorityLevelConfigurationReference PriorityLevelConfiguration { get; public set; }
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1beta3PolicyRulesWithSubjects> Rules { get; public set; }
    public V1beta3FlowSchemaSpec(V1beta3PriorityLevelConfigurationReference priorityLevelConfiguration, V1beta3FlowDistinguisherMethod distinguisherMethod, Nullable`1<int> matchingPrecedence, IList`1<V1beta3PolicyRulesWithSubjects> rules);
    [CompilerGeneratedAttribute]
public V1beta3FlowDistinguisherMethod get_DistinguisherMethod();
    [CompilerGeneratedAttribute]
public void set_DistinguisherMethod(V1beta3FlowDistinguisherMethod value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MatchingPrecedence();
    [CompilerGeneratedAttribute]
public void set_MatchingPrecedence(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1beta3PriorityLevelConfigurationReference get_PriorityLevelConfiguration();
    [CompilerGeneratedAttribute]
public void set_PriorityLevelConfiguration(V1beta3PriorityLevelConfigurationReference value);
    [CompilerGeneratedAttribute]
public IList`1<V1beta3PolicyRulesWithSubjects> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1beta3PolicyRulesWithSubjects> value);
    public virtual void Validate();
    public static V1beta3FlowSchemaSpec op_Explicit(V1FlowSchemaSpec s);
}
public class k8s.Models.V1beta3FlowSchemaStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1beta3FlowSchemaCondition> <Conditions>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1beta3FlowSchemaCondition> Conditions { get; public set; }
    public V1beta3FlowSchemaStatus(IList`1<V1beta3FlowSchemaCondition> conditions);
    [CompilerGeneratedAttribute]
public IList`1<V1beta3FlowSchemaCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1beta3FlowSchemaCondition> value);
    public virtual void Validate();
    public static V1beta3FlowSchemaStatus op_Explicit(V1FlowSchemaStatus s);
}
public class k8s.Models.V1beta3GroupSubject : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1beta3GroupSubject(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1beta3GroupSubject op_Explicit(V1GroupSubject s);
}
public class k8s.Models.V1beta3LimitedPriorityLevelConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BorrowingLimitPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LendablePercent>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3LimitResponse <LimitResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NominalConcurrencyShares>k__BackingField;
    [JsonPropertyNameAttribute("borrowingLimitPercent")]
public Nullable`1<int> BorrowingLimitPercent { get; public set; }
    [JsonPropertyNameAttribute("lendablePercent")]
public Nullable`1<int> LendablePercent { get; public set; }
    [JsonPropertyNameAttribute("limitResponse")]
public V1beta3LimitResponse LimitResponse { get; public set; }
    [JsonPropertyNameAttribute("nominalConcurrencyShares")]
public Nullable`1<int> NominalConcurrencyShares { get; public set; }
    public V1beta3LimitedPriorityLevelConfiguration(Nullable`1<int> borrowingLimitPercent, Nullable`1<int> lendablePercent, V1beta3LimitResponse limitResponse, Nullable`1<int> nominalConcurrencyShares);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BorrowingLimitPercent();
    [CompilerGeneratedAttribute]
public void set_BorrowingLimitPercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LendablePercent();
    [CompilerGeneratedAttribute]
public void set_LendablePercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1beta3LimitResponse get_LimitResponse();
    [CompilerGeneratedAttribute]
public void set_LimitResponse(V1beta3LimitResponse value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NominalConcurrencyShares();
    [CompilerGeneratedAttribute]
public void set_NominalConcurrencyShares(Nullable`1<int> value);
    public virtual void Validate();
    public static V1beta3LimitedPriorityLevelConfiguration op_Explicit(V1LimitedPriorityLevelConfiguration s);
}
public class k8s.Models.V1beta3LimitResponse : object {
    [CompilerGeneratedAttribute]
private V1beta3QueuingConfiguration <Queuing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("queuing")]
public V1beta3QueuingConfiguration Queuing { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1beta3LimitResponse(string type, V1beta3QueuingConfiguration queuing);
    [CompilerGeneratedAttribute]
public V1beta3QueuingConfiguration get_Queuing();
    [CompilerGeneratedAttribute]
public void set_Queuing(V1beta3QueuingConfiguration value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1beta3LimitResponse op_Explicit(V1LimitResponse s);
}
public class k8s.Models.V1beta3NonResourcePolicyRule : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <NonResourceURLs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [JsonPropertyNameAttribute("nonResourceURLs")]
public IList`1<string> NonResourceURLs { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    public V1beta3NonResourcePolicyRule(IList`1<string> nonResourceURLs, IList`1<string> verbs);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NonResourceURLs();
    [CompilerGeneratedAttribute]
public void set_NonResourceURLs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    public virtual void Validate();
    public static V1beta3NonResourcePolicyRule op_Explicit(V1NonResourcePolicyRule s);
}
public class k8s.Models.V1beta3PolicyRulesWithSubjects : object {
    [CompilerGeneratedAttribute]
private IList`1<V1beta3NonResourcePolicyRule> <NonResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta3ResourcePolicyRule> <ResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta3Subject> <Subjects>k__BackingField;
    [JsonPropertyNameAttribute("nonResourceRules")]
public IList`1<V1beta3NonResourcePolicyRule> NonResourceRules { get; public set; }
    [JsonPropertyNameAttribute("resourceRules")]
public IList`1<V1beta3ResourcePolicyRule> ResourceRules { get; public set; }
    [JsonPropertyNameAttribute("subjects")]
public IList`1<V1beta3Subject> Subjects { get; public set; }
    public V1beta3PolicyRulesWithSubjects(IList`1<V1beta3Subject> subjects, IList`1<V1beta3NonResourcePolicyRule> nonResourceRules, IList`1<V1beta3ResourcePolicyRule> resourceRules);
    [CompilerGeneratedAttribute]
public IList`1<V1beta3NonResourcePolicyRule> get_NonResourceRules();
    [CompilerGeneratedAttribute]
public void set_NonResourceRules(IList`1<V1beta3NonResourcePolicyRule> value);
    [CompilerGeneratedAttribute]
public IList`1<V1beta3ResourcePolicyRule> get_ResourceRules();
    [CompilerGeneratedAttribute]
public void set_ResourceRules(IList`1<V1beta3ResourcePolicyRule> value);
    [CompilerGeneratedAttribute]
public IList`1<V1beta3Subject> get_Subjects();
    [CompilerGeneratedAttribute]
public void set_Subjects(IList`1<V1beta3Subject> value);
    public virtual void Validate();
    public static V1beta3PolicyRulesWithSubjects op_Explicit(V1PolicyRulesWithSubjects s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta3PriorityLevelConfiguration : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3PriorityLevelConfigurationSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3PriorityLevelConfigurationStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1beta3PriorityLevelConfigurationSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1beta3PriorityLevelConfigurationStatus Status { get; public set; }
    public V1beta3PriorityLevelConfiguration(string apiVersion, string kind, V1ObjectMeta metadata, V1beta3PriorityLevelConfigurationSpec spec, V1beta3PriorityLevelConfigurationStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1beta3PriorityLevelConfigurationSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1beta3PriorityLevelConfigurationSpec value);
    [CompilerGeneratedAttribute]
public V1beta3PriorityLevelConfigurationStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1beta3PriorityLevelConfigurationStatus value);
    public virtual void Validate();
    public static V1beta3PriorityLevelConfiguration op_Explicit(V1PriorityLevelConfiguration s);
}
public class k8s.Models.V1beta3PriorityLevelConfigurationCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1beta3PriorityLevelConfigurationCondition(Nullable`1<DateTime> lastTransitionTime, string message, string reason, string status, string type);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1beta3PriorityLevelConfigurationCondition op_Explicit(V1PriorityLevelConfigurationCondition s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1beta3PriorityLevelConfigurationList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1beta3PriorityLevelConfiguration> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1beta3PriorityLevelConfiguration> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1beta3PriorityLevelConfigurationList(IList`1<V1beta3PriorityLevelConfiguration> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1beta3PriorityLevelConfiguration> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1beta3PriorityLevelConfiguration> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1beta3PriorityLevelConfigurationList op_Explicit(V1PriorityLevelConfigurationList s);
}
public class k8s.Models.V1beta3PriorityLevelConfigurationReference : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1beta3PriorityLevelConfigurationReference(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1beta3PriorityLevelConfigurationReference op_Explicit(V1PriorityLevelConfigurationReference s);
}
public class k8s.Models.V1beta3PriorityLevelConfigurationSpec : object {
    [CompilerGeneratedAttribute]
private V1beta3ExemptPriorityLevelConfiguration <Exempt>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3LimitedPriorityLevelConfiguration <Limited>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("exempt")]
public V1beta3ExemptPriorityLevelConfiguration Exempt { get; public set; }
    [JsonPropertyNameAttribute("limited")]
public V1beta3LimitedPriorityLevelConfiguration Limited { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1beta3PriorityLevelConfigurationSpec(string type, V1beta3ExemptPriorityLevelConfiguration exempt, V1beta3LimitedPriorityLevelConfiguration limited);
    [CompilerGeneratedAttribute]
public V1beta3ExemptPriorityLevelConfiguration get_Exempt();
    [CompilerGeneratedAttribute]
public void set_Exempt(V1beta3ExemptPriorityLevelConfiguration value);
    [CompilerGeneratedAttribute]
public V1beta3LimitedPriorityLevelConfiguration get_Limited();
    [CompilerGeneratedAttribute]
public void set_Limited(V1beta3LimitedPriorityLevelConfiguration value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1beta3PriorityLevelConfigurationSpec op_Explicit(V1PriorityLevelConfigurationSpec s);
}
public class k8s.Models.V1beta3PriorityLevelConfigurationStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1beta3PriorityLevelConfigurationCondition> <Conditions>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1beta3PriorityLevelConfigurationCondition> Conditions { get; public set; }
    public V1beta3PriorityLevelConfigurationStatus(IList`1<V1beta3PriorityLevelConfigurationCondition> conditions);
    [CompilerGeneratedAttribute]
public IList`1<V1beta3PriorityLevelConfigurationCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1beta3PriorityLevelConfigurationCondition> value);
    public virtual void Validate();
    public static V1beta3PriorityLevelConfigurationStatus op_Explicit(V1PriorityLevelConfigurationStatus s);
}
public class k8s.Models.V1beta3QueuingConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <HandSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueueLengthLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Queues>k__BackingField;
    [JsonPropertyNameAttribute("handSize")]
public Nullable`1<int> HandSize { get; public set; }
    [JsonPropertyNameAttribute("queueLengthLimit")]
public Nullable`1<int> QueueLengthLimit { get; public set; }
    [JsonPropertyNameAttribute("queues")]
public Nullable`1<int> Queues { get; public set; }
    public V1beta3QueuingConfiguration(Nullable`1<int> handSize, Nullable`1<int> queueLengthLimit, Nullable`1<int> queues);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_HandSize();
    [CompilerGeneratedAttribute]
public void set_HandSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueueLengthLimit();
    [CompilerGeneratedAttribute]
public void set_QueueLengthLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Queues();
    [CompilerGeneratedAttribute]
public void set_Queues(Nullable`1<int> value);
    public virtual void Validate();
    public static V1beta3QueuingConfiguration op_Explicit(V1QueuingConfiguration s);
}
public class k8s.Models.V1beta3ResourcePolicyRule : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ClusterScope>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Namespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("clusterScope")]
public Nullable`1<bool> ClusterScope { get; public set; }
    [JsonPropertyNameAttribute("namespaces")]
public IList`1<string> Namespaces { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    public V1beta3ResourcePolicyRule(IList`1<string> apiGroups, IList`1<string> resources, IList`1<string> verbs, Nullable`1<bool> clusterScope, IList`1<string> namespaces);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ClusterScope();
    [CompilerGeneratedAttribute]
public void set_ClusterScope(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Namespaces();
    [CompilerGeneratedAttribute]
public void set_Namespaces(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    public virtual void Validate();
    public static V1beta3ResourcePolicyRule op_Explicit(V1ResourcePolicyRule s);
}
public class k8s.Models.V1beta3ServiceAccountSubject : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    public V1beta3ServiceAccountSubject(string name, string namespaceProperty);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    public virtual void Validate();
    public static V1beta3ServiceAccountSubject op_Explicit(V1ServiceAccountSubject s);
}
public class k8s.Models.V1beta3Subject : object {
    [CompilerGeneratedAttribute]
private V1beta3GroupSubject <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3ServiceAccountSubject <ServiceAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private V1beta3UserSubject <User>k__BackingField;
    [JsonPropertyNameAttribute("group")]
public V1beta3GroupSubject Group { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("serviceAccount")]
public V1beta3ServiceAccountSubject ServiceAccount { get; public set; }
    [JsonPropertyNameAttribute("user")]
public V1beta3UserSubject User { get; public set; }
    public V1beta3Subject(string kind, V1beta3GroupSubject group, V1beta3ServiceAccountSubject serviceAccount, V1beta3UserSubject user);
    [CompilerGeneratedAttribute]
public V1beta3GroupSubject get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(V1beta3GroupSubject value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public V1beta3ServiceAccountSubject get_ServiceAccount();
    [CompilerGeneratedAttribute]
public void set_ServiceAccount(V1beta3ServiceAccountSubject value);
    [CompilerGeneratedAttribute]
public V1beta3UserSubject get_User();
    [CompilerGeneratedAttribute]
public void set_User(V1beta3UserSubject value);
    public virtual void Validate();
}
public class k8s.Models.V1beta3UserSubject : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1beta3UserSubject(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1beta3UserSubject op_Explicit(V1UserSubject s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Binding : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <Target>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("target")]
public V1ObjectReference Target { get; public set; }
    public V1Binding(V1ObjectReference target, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(V1ObjectReference value);
    public virtual void Validate();
}
public class k8s.Models.V1BoundObjectReference : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1BoundObjectReference(string apiVersion, string kind, string name, string uid);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Capabilities : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Add>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Drop>k__BackingField;
    [JsonPropertyNameAttribute("add")]
public IList`1<string> Add { get; public set; }
    [JsonPropertyNameAttribute("drop")]
public IList`1<string> Drop { get; public set; }
    public V1Capabilities(IList`1<string> add, IList`1<string> drop);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Add();
    [CompilerGeneratedAttribute]
public void set_Add(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Drop();
    [CompilerGeneratedAttribute]
public void set_Drop(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1CephFSPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Monitors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretFile>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [JsonPropertyNameAttribute("monitors")]
public IList`1<string> Monitors { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretFile")]
public string SecretFile { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1SecretReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("user")]
public string User { get; public set; }
    public V1CephFSPersistentVolumeSource(IList`1<string> monitors, string path, Nullable`1<bool> readOnlyProperty, string secretFile, V1SecretReference secretRef, string user);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Monitors();
    [CompilerGeneratedAttribute]
public void set_Monitors(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SecretFile();
    [CompilerGeneratedAttribute]
public void set_SecretFile(string value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    public virtual void Validate();
}
public class k8s.Models.V1CephFSVolumeSource : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Monitors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretFile>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [JsonPropertyNameAttribute("monitors")]
public IList`1<string> Monitors { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretFile")]
public string SecretFile { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1LocalObjectReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("user")]
public string User { get; public set; }
    public V1CephFSVolumeSource(IList`1<string> monitors, string path, Nullable`1<bool> readOnlyProperty, string secretFile, V1LocalObjectReference secretRef, string user);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Monitors();
    [CompilerGeneratedAttribute]
public void set_Monitors(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SecretFile();
    [CompilerGeneratedAttribute]
public void set_SecretFile(string value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1LocalObjectReference value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CertificateSigningRequest : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CertificateSigningRequestSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CertificateSigningRequestStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1CertificateSigningRequestSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1CertificateSigningRequestStatus Status { get; public set; }
    public V1CertificateSigningRequest(V1CertificateSigningRequestSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1CertificateSigningRequestStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1CertificateSigningRequestSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1CertificateSigningRequestSpec value);
    [CompilerGeneratedAttribute]
public V1CertificateSigningRequestStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1CertificateSigningRequestStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1CertificateSigningRequestCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastUpdateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("lastUpdateTime")]
public Nullable`1<DateTime> LastUpdateTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1CertificateSigningRequestCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, Nullable`1<DateTime> lastUpdateTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastUpdateTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdateTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CertificateSigningRequestList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CertificateSigningRequest> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1CertificateSigningRequest> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1CertificateSigningRequestList(IList`1<V1CertificateSigningRequest> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1CertificateSigningRequest> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1CertificateSigningRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1CertificateSigningRequestSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExpirationSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IList`1<string>> <Extra>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Usages>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [JsonPropertyNameAttribute("expirationSeconds")]
public Nullable`1<int> ExpirationSeconds { get; public set; }
    [JsonPropertyNameAttribute("extra")]
public IDictionary`2<string, IList`1<string>> Extra { get; public set; }
    [JsonPropertyNameAttribute("groups")]
public IList`1<string> Groups { get; public set; }
    [JsonPropertyNameAttribute("request")]
public Byte[] Request { get; public set; }
    [JsonPropertyNameAttribute("signerName")]
public string SignerName { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    [JsonPropertyNameAttribute("usages")]
public IList`1<string> Usages { get; public set; }
    [JsonPropertyNameAttribute("username")]
public string Username { get; public set; }
    public V1CertificateSigningRequestSpec(Byte[] request, string signerName, Nullable`1<int> expirationSeconds, IDictionary`2<string, IList`1<string>> extra, IList`1<string> groups, string uid, IList`1<string> usages, string username);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ExpirationSeconds();
    [CompilerGeneratedAttribute]
public void set_ExpirationSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IList`1<string>> get_Extra();
    [CompilerGeneratedAttribute]
public void set_Extra(IDictionary`2<string, IList`1<string>> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Byte[] get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_SignerName();
    [CompilerGeneratedAttribute]
public void set_SignerName(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Usages();
    [CompilerGeneratedAttribute]
public void set_Usages(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    public virtual void Validate();
}
public class k8s.Models.V1CertificateSigningRequestStatus : object {
    [CompilerGeneratedAttribute]
private Byte[] <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CertificateSigningRequestCondition> <Conditions>k__BackingField;
    [JsonPropertyNameAttribute("certificate")]
public Byte[] Certificate { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1CertificateSigningRequestCondition> Conditions { get; public set; }
    public V1CertificateSigningRequestStatus(Byte[] certificate, IList`1<V1CertificateSigningRequestCondition> conditions);
    [CompilerGeneratedAttribute]
public Byte[] get_Certificate();
    [CompilerGeneratedAttribute]
public void set_Certificate(Byte[] value);
    [CompilerGeneratedAttribute]
public IList`1<V1CertificateSigningRequestCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1CertificateSigningRequestCondition> value);
    public virtual void Validate();
}
public class k8s.Models.V1CinderPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeID>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1SecretReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("volumeID")]
public string VolumeID { get; public set; }
    public V1CinderPersistentVolumeSource(string volumeID, string fsType, Nullable`1<bool> readOnlyProperty, V1SecretReference secretRef);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public string get_VolumeID();
    [CompilerGeneratedAttribute]
public void set_VolumeID(string value);
    public virtual void Validate();
}
public class k8s.Models.V1CinderVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeID>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1LocalObjectReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("volumeID")]
public string VolumeID { get; public set; }
    public V1CinderVolumeSource(string volumeID, string fsType, Nullable`1<bool> readOnlyProperty, V1LocalObjectReference secretRef);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1LocalObjectReference value);
    [CompilerGeneratedAttribute]
public string get_VolumeID();
    [CompilerGeneratedAttribute]
public void set_VolumeID(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ClientIPConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TimeoutSeconds>k__BackingField;
    [JsonPropertyNameAttribute("timeoutSeconds")]
public Nullable`1<int> TimeoutSeconds { get; public set; }
    public V1ClientIPConfig(Nullable`1<int> timeoutSeconds);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TimeoutSeconds();
    [CompilerGeneratedAttribute]
public void set_TimeoutSeconds(Nullable`1<int> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ClusterRole : object {
    [CompilerGeneratedAttribute]
private V1AggregationRule <AggregationRule>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PolicyRule> <Rules>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("aggregationRule")]
public V1AggregationRule AggregationRule { get; public set; }
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1PolicyRule> Rules { get; public set; }
    public V1ClusterRole(V1AggregationRule aggregationRule, string apiVersion, string kind, V1ObjectMeta metadata, IList`1<V1PolicyRule> rules);
    [CompilerGeneratedAttribute]
public V1AggregationRule get_AggregationRule();
    [CompilerGeneratedAttribute]
public void set_AggregationRule(V1AggregationRule value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<V1PolicyRule> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1PolicyRule> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ClusterRoleBinding : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1RoleRef <RoleRef>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Rbacv1Subject> <Subjects>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("roleRef")]
public V1RoleRef RoleRef { get; public set; }
    [JsonPropertyNameAttribute("subjects")]
public IList`1<Rbacv1Subject> Subjects { get; public set; }
    public V1ClusterRoleBinding(V1RoleRef roleRef, string apiVersion, string kind, V1ObjectMeta metadata, IList`1<Rbacv1Subject> subjects);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1RoleRef get_RoleRef();
    [CompilerGeneratedAttribute]
public void set_RoleRef(V1RoleRef value);
    [CompilerGeneratedAttribute]
public IList`1<Rbacv1Subject> get_Subjects();
    [CompilerGeneratedAttribute]
public void set_Subjects(IList`1<Rbacv1Subject> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ClusterRoleBindingList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ClusterRoleBinding> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ClusterRoleBinding> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ClusterRoleBindingList(IList`1<V1ClusterRoleBinding> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ClusterRoleBinding> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ClusterRoleBinding> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ClusterRoleList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ClusterRole> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ClusterRole> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ClusterRoleList(IList`1<V1ClusterRole> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ClusterRole> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ClusterRole> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ClusterTrustBundleProjection : object {
    [CompilerGeneratedAttribute]
private V1LabelSelector <LabelSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignerName>k__BackingField;
    [JsonPropertyNameAttribute("labelSelector")]
public V1LabelSelector LabelSelector { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("signerName")]
public string SignerName { get; public set; }
    public V1ClusterTrustBundleProjection(string path, V1LabelSelector labelSelector, string name, Nullable`1<bool> optional, string signerName);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_LabelSelector();
    [CompilerGeneratedAttribute]
public void set_LabelSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_SignerName();
    [CompilerGeneratedAttribute]
public void set_SignerName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ComponentCondition : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("error")]
public string Error { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1ComponentCondition(string status, string type, string error, string message);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ComponentStatus : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ComponentCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1ComponentCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    public V1ComponentStatus(string apiVersion, IList`1<V1ComponentCondition> conditions, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1ComponentCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1ComponentCondition> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ComponentStatusList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ComponentStatus> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ComponentStatus> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ComponentStatusList(IList`1<V1ComponentStatus> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ComponentStatus> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ComponentStatus> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1Condition : object {
    [CompilerGeneratedAttribute]
private DateTime <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public DateTime LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1Condition(DateTime lastTransitionTime, string message, string reason, string status, string type, Nullable`1<long> observedGeneration);
    [CompilerGeneratedAttribute]
public DateTime get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ConfigMap : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Byte[]> <BinaryData>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Immutable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("binaryData")]
public IDictionary`2<string, Byte[]> BinaryData { get; public set; }
    [JsonPropertyNameAttribute("data")]
public IDictionary`2<string, string> Data { get; public set; }
    [JsonPropertyNameAttribute("immutable")]
public Nullable`1<bool> Immutable { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    public V1ConfigMap(string apiVersion, IDictionary`2<string, Byte[]> binaryData, IDictionary`2<string, string> data, Nullable`1<bool> immutable, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, Byte[]> get_BinaryData();
    [CompilerGeneratedAttribute]
public void set_BinaryData(IDictionary`2<string, Byte[]> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Immutable();
    [CompilerGeneratedAttribute]
public void set_Immutable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ConfigMapEnvSource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    public V1ConfigMapEnvSource(string name, Nullable`1<bool> optional);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1ConfigMapKeySelector : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    public V1ConfigMapKeySelector(string key, string name, Nullable`1<bool> optional);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ConfigMapList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ConfigMap> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ConfigMap> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ConfigMapList(IList`1<V1ConfigMap> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ConfigMap> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ConfigMap> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ConfigMapNodeConfigSource : object {
    [CompilerGeneratedAttribute]
private string <KubeletConfigKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("kubeletConfigKey")]
public string KubeletConfigKey { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("resourceVersion")]
public string ResourceVersion { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1ConfigMapNodeConfigSource(string kubeletConfigKey, string name, string namespaceProperty, string resourceVersion, string uid);
    [CompilerGeneratedAttribute]
public string get_KubeletConfigKey();
    [CompilerGeneratedAttribute]
public void set_KubeletConfigKey(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ConfigMapProjection : object {
    [CompilerGeneratedAttribute]
private IList`1<V1KeyToPath> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [JsonPropertyNameAttribute("items")]
public IList`1<V1KeyToPath> Items { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    public V1ConfigMapProjection(IList`1<V1KeyToPath> items, string name, Nullable`1<bool> optional);
    [CompilerGeneratedAttribute]
public IList`1<V1KeyToPath> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<V1KeyToPath> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1ConfigMapVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DefaultMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1KeyToPath> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [JsonPropertyNameAttribute("defaultMode")]
public Nullable`1<int> DefaultMode { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1KeyToPath> Items { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    public V1ConfigMapVolumeSource(Nullable`1<int> defaultMode, IList`1<V1KeyToPath> items, string name, Nullable`1<bool> optional);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DefaultMode();
    [CompilerGeneratedAttribute]
public void set_DefaultMode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1KeyToPath> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<V1KeyToPath> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1Container : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Args>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EnvVar> <Env>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EnvFromSource> <EnvFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImagePullPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Lifecycle <Lifecycle>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Probe <LivenessProbe>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerPort> <Ports>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Probe <ReadinessProbe>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerResizePolicy> <ResizePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceRequirements <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RestartPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecurityContext <SecurityContext>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Probe <StartupProbe>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Stdin>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StdinOnce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TerminationMessagePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TerminationMessagePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Tty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1VolumeDevice> <VolumeDevices>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1VolumeMount> <VolumeMounts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkingDir>k__BackingField;
    [JsonPropertyNameAttribute("args")]
public IList`1<string> Args { get; public set; }
    [JsonPropertyNameAttribute("command")]
public IList`1<string> Command { get; public set; }
    [JsonPropertyNameAttribute("env")]
public IList`1<V1EnvVar> Env { get; public set; }
    [JsonPropertyNameAttribute("envFrom")]
public IList`1<V1EnvFromSource> EnvFrom { get; public set; }
    [JsonPropertyNameAttribute("image")]
public string Image { get; public set; }
    [JsonPropertyNameAttribute("imagePullPolicy")]
public string ImagePullPolicy { get; public set; }
    [JsonPropertyNameAttribute("lifecycle")]
public V1Lifecycle Lifecycle { get; public set; }
    [JsonPropertyNameAttribute("livenessProbe")]
public V1Probe LivenessProbe { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<V1ContainerPort> Ports { get; public set; }
    [JsonPropertyNameAttribute("readinessProbe")]
public V1Probe ReadinessProbe { get; public set; }
    [JsonPropertyNameAttribute("resizePolicy")]
public IList`1<V1ContainerResizePolicy> ResizePolicy { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public V1ResourceRequirements Resources { get; public set; }
    [JsonPropertyNameAttribute("restartPolicy")]
public string RestartPolicy { get; public set; }
    [JsonPropertyNameAttribute("securityContext")]
public V1SecurityContext SecurityContext { get; public set; }
    [JsonPropertyNameAttribute("startupProbe")]
public V1Probe StartupProbe { get; public set; }
    [JsonPropertyNameAttribute("stdin")]
public Nullable`1<bool> Stdin { get; public set; }
    [JsonPropertyNameAttribute("stdinOnce")]
public Nullable`1<bool> StdinOnce { get; public set; }
    [JsonPropertyNameAttribute("terminationMessagePath")]
public string TerminationMessagePath { get; public set; }
    [JsonPropertyNameAttribute("terminationMessagePolicy")]
public string TerminationMessagePolicy { get; public set; }
    [JsonPropertyNameAttribute("tty")]
public Nullable`1<bool> Tty { get; public set; }
    [JsonPropertyNameAttribute("volumeDevices")]
public IList`1<V1VolumeDevice> VolumeDevices { get; public set; }
    [JsonPropertyNameAttribute("volumeMounts")]
public IList`1<V1VolumeMount> VolumeMounts { get; public set; }
    [JsonPropertyNameAttribute("workingDir")]
public string WorkingDir { get; public set; }
    public V1Container(string name, IList`1<string> args, IList`1<string> command, IList`1<V1EnvVar> env, IList`1<V1EnvFromSource> envFrom, string image, string imagePullPolicy, V1Lifecycle lifecycle, V1Probe livenessProbe, IList`1<V1ContainerPort> ports, V1Probe readinessProbe, IList`1<V1ContainerResizePolicy> resizePolicy, V1ResourceRequirements resources, string restartPolicy, V1SecurityContext securityContext, V1Probe startupProbe, Nullable`1<bool> stdin, Nullable`1<bool> stdinOnce, string terminationMessagePath, string terminationMessagePolicy, Nullable`1<bool> tty, IList`1<V1VolumeDevice> volumeDevices, IList`1<V1VolumeMount> volumeMounts, string workingDir);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Args();
    [CompilerGeneratedAttribute]
public void set_Args(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<V1EnvVar> get_Env();
    [CompilerGeneratedAttribute]
public void set_Env(IList`1<V1EnvVar> value);
    [CompilerGeneratedAttribute]
public IList`1<V1EnvFromSource> get_EnvFrom();
    [CompilerGeneratedAttribute]
public void set_EnvFrom(IList`1<V1EnvFromSource> value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_ImagePullPolicy();
    [CompilerGeneratedAttribute]
public void set_ImagePullPolicy(string value);
    [CompilerGeneratedAttribute]
public V1Lifecycle get_Lifecycle();
    [CompilerGeneratedAttribute]
public void set_Lifecycle(V1Lifecycle value);
    [CompilerGeneratedAttribute]
public V1Probe get_LivenessProbe();
    [CompilerGeneratedAttribute]
public void set_LivenessProbe(V1Probe value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerPort> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<V1ContainerPort> value);
    [CompilerGeneratedAttribute]
public V1Probe get_ReadinessProbe();
    [CompilerGeneratedAttribute]
public void set_ReadinessProbe(V1Probe value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerResizePolicy> get_ResizePolicy();
    [CompilerGeneratedAttribute]
public void set_ResizePolicy(IList`1<V1ContainerResizePolicy> value);
    [CompilerGeneratedAttribute]
public V1ResourceRequirements get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(V1ResourceRequirements value);
    [CompilerGeneratedAttribute]
public string get_RestartPolicy();
    [CompilerGeneratedAttribute]
public void set_RestartPolicy(string value);
    [CompilerGeneratedAttribute]
public V1SecurityContext get_SecurityContext();
    [CompilerGeneratedAttribute]
public void set_SecurityContext(V1SecurityContext value);
    [CompilerGeneratedAttribute]
public V1Probe get_StartupProbe();
    [CompilerGeneratedAttribute]
public void set_StartupProbe(V1Probe value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Stdin();
    [CompilerGeneratedAttribute]
public void set_Stdin(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_StdinOnce();
    [CompilerGeneratedAttribute]
public void set_StdinOnce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TerminationMessagePath();
    [CompilerGeneratedAttribute]
public void set_TerminationMessagePath(string value);
    [CompilerGeneratedAttribute]
public string get_TerminationMessagePolicy();
    [CompilerGeneratedAttribute]
public void set_TerminationMessagePolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Tty();
    [CompilerGeneratedAttribute]
public void set_Tty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1VolumeDevice> get_VolumeDevices();
    [CompilerGeneratedAttribute]
public void set_VolumeDevices(IList`1<V1VolumeDevice> value);
    [CompilerGeneratedAttribute]
public IList`1<V1VolumeMount> get_VolumeMounts();
    [CompilerGeneratedAttribute]
public void set_VolumeMounts(IList`1<V1VolumeMount> value);
    [CompilerGeneratedAttribute]
public string get_WorkingDir();
    [CompilerGeneratedAttribute]
public void set_WorkingDir(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerImage : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Names>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SizeBytes>k__BackingField;
    [JsonPropertyNameAttribute("names")]
public IList`1<string> Names { get; public set; }
    [JsonPropertyNameAttribute("sizeBytes")]
public Nullable`1<long> SizeBytes { get; public set; }
    public V1ContainerImage(IList`1<string> names, Nullable`1<long> sizeBytes);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Names();
    [CompilerGeneratedAttribute]
public void set_Names(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SizeBytes();
    [CompilerGeneratedAttribute]
public void set_SizeBytes(Nullable`1<long> value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerPort : object {
    [CompilerGeneratedAttribute]
private int <ContainerPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostIP>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <HostPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [JsonPropertyNameAttribute("containerPort")]
public int ContainerPort { get; public set; }
    [JsonPropertyNameAttribute("hostIP")]
public string HostIP { get; public set; }
    [JsonPropertyNameAttribute("hostPort")]
public Nullable`1<int> HostPort { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("protocol")]
public string Protocol { get; public set; }
    public V1ContainerPort(int containerPort, string hostIP, Nullable`1<int> hostPort, string name, string protocol);
    [CompilerGeneratedAttribute]
public int get_ContainerPort();
    [CompilerGeneratedAttribute]
public void set_ContainerPort(int value);
    [CompilerGeneratedAttribute]
public string get_HostIP();
    [CompilerGeneratedAttribute]
public void set_HostIP(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_HostPort();
    [CompilerGeneratedAttribute]
public void set_HostPort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerResizePolicy : object {
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RestartPolicy>k__BackingField;
    [JsonPropertyNameAttribute("resourceName")]
public string ResourceName { get; public set; }
    [JsonPropertyNameAttribute("restartPolicy")]
public string RestartPolicy { get; public set; }
    public V1ContainerResizePolicy(string resourceName, string restartPolicy);
    [CompilerGeneratedAttribute]
public string get_ResourceName();
    [CompilerGeneratedAttribute]
public void set_ResourceName(string value);
    [CompilerGeneratedAttribute]
public string get_RestartPolicy();
    [CompilerGeneratedAttribute]
public void set_RestartPolicy(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerState : object {
    [CompilerGeneratedAttribute]
private V1ContainerStateRunning <Running>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ContainerStateTerminated <Terminated>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ContainerStateWaiting <Waiting>k__BackingField;
    [JsonPropertyNameAttribute("running")]
public V1ContainerStateRunning Running { get; public set; }
    [JsonPropertyNameAttribute("terminated")]
public V1ContainerStateTerminated Terminated { get; public set; }
    [JsonPropertyNameAttribute("waiting")]
public V1ContainerStateWaiting Waiting { get; public set; }
    public V1ContainerState(V1ContainerStateRunning running, V1ContainerStateTerminated terminated, V1ContainerStateWaiting waiting);
    [CompilerGeneratedAttribute]
public V1ContainerStateRunning get_Running();
    [CompilerGeneratedAttribute]
public void set_Running(V1ContainerStateRunning value);
    [CompilerGeneratedAttribute]
public V1ContainerStateTerminated get_Terminated();
    [CompilerGeneratedAttribute]
public void set_Terminated(V1ContainerStateTerminated value);
    [CompilerGeneratedAttribute]
public V1ContainerStateWaiting get_Waiting();
    [CompilerGeneratedAttribute]
public void set_Waiting(V1ContainerStateWaiting value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerStateRunning : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartedAt>k__BackingField;
    [JsonPropertyNameAttribute("startedAt")]
public Nullable`1<DateTime> StartedAt { get; public set; }
    public V1ContainerStateRunning(Nullable`1<DateTime> startedAt);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartedAt();
    [CompilerGeneratedAttribute]
public void set_StartedAt(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerStateTerminated : object {
    [CompilerGeneratedAttribute]
private string <ContainerID>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExitCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <FinishedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Signal>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartedAt>k__BackingField;
    [JsonPropertyNameAttribute("containerID")]
public string ContainerID { get; public set; }
    [JsonPropertyNameAttribute("exitCode")]
public int ExitCode { get; public set; }
    [JsonPropertyNameAttribute("finishedAt")]
public Nullable`1<DateTime> FinishedAt { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("signal")]
public Nullable`1<int> Signal { get; public set; }
    [JsonPropertyNameAttribute("startedAt")]
public Nullable`1<DateTime> StartedAt { get; public set; }
    public V1ContainerStateTerminated(int exitCode, string containerID, Nullable`1<DateTime> finishedAt, string message, string reason, Nullable`1<int> signal, Nullable`1<DateTime> startedAt);
    [CompilerGeneratedAttribute]
public string get_ContainerID();
    [CompilerGeneratedAttribute]
public void set_ContainerID(string value);
    [CompilerGeneratedAttribute]
public int get_ExitCode();
    [CompilerGeneratedAttribute]
public void set_ExitCode(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_FinishedAt();
    [CompilerGeneratedAttribute]
public void set_FinishedAt(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Signal();
    [CompilerGeneratedAttribute]
public void set_Signal(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartedAt();
    [CompilerGeneratedAttribute]
public void set_StartedAt(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerStateWaiting : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    public V1ContainerStateWaiting(string message, string reason);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerStatus : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <AllocatedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ResourceStatus> <AllocatedResourcesStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageID>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ContainerState <LastState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ready>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceRequirements <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RestartCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Started>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ContainerState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ContainerUser <User>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1VolumeMountStatus> <VolumeMounts>k__BackingField;
    [JsonPropertyNameAttribute("allocatedResources")]
public IDictionary`2<string, ResourceQuantity> AllocatedResources { get; public set; }
    [JsonPropertyNameAttribute("allocatedResourcesStatus")]
public IList`1<V1ResourceStatus> AllocatedResourcesStatus { get; public set; }
    [JsonPropertyNameAttribute("containerID")]
public string ContainerID { get; public set; }
    [JsonPropertyNameAttribute("image")]
public string Image { get; public set; }
    [JsonPropertyNameAttribute("imageID")]
public string ImageID { get; public set; }
    [JsonPropertyNameAttribute("lastState")]
public V1ContainerState LastState { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("ready")]
public bool Ready { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public V1ResourceRequirements Resources { get; public set; }
    [JsonPropertyNameAttribute("restartCount")]
public int RestartCount { get; public set; }
    [JsonPropertyNameAttribute("started")]
public Nullable`1<bool> Started { get; public set; }
    [JsonPropertyNameAttribute("state")]
public V1ContainerState State { get; public set; }
    [JsonPropertyNameAttribute("user")]
public V1ContainerUser User { get; public set; }
    [JsonPropertyNameAttribute("volumeMounts")]
public IList`1<V1VolumeMountStatus> VolumeMounts { get; public set; }
    public V1ContainerStatus(string image, string imageID, string name, bool ready, int restartCount, IDictionary`2<string, ResourceQuantity> allocatedResources, IList`1<V1ResourceStatus> allocatedResourcesStatus, string containerID, V1ContainerState lastState, V1ResourceRequirements resources, Nullable`1<bool> started, V1ContainerState state, V1ContainerUser user, IList`1<V1VolumeMountStatus> volumeMounts);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_AllocatedResources();
    [CompilerGeneratedAttribute]
public void set_AllocatedResources(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ResourceStatus> get_AllocatedResourcesStatus();
    [CompilerGeneratedAttribute]
public void set_AllocatedResourcesStatus(IList`1<V1ResourceStatus> value);
    [CompilerGeneratedAttribute]
public string get_ContainerID();
    [CompilerGeneratedAttribute]
public void set_ContainerID(string value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_ImageID();
    [CompilerGeneratedAttribute]
public void set_ImageID(string value);
    [CompilerGeneratedAttribute]
public V1ContainerState get_LastState();
    [CompilerGeneratedAttribute]
public void set_LastState(V1ContainerState value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Ready();
    [CompilerGeneratedAttribute]
public void set_Ready(bool value);
    [CompilerGeneratedAttribute]
public V1ResourceRequirements get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(V1ResourceRequirements value);
    [CompilerGeneratedAttribute]
public int get_RestartCount();
    [CompilerGeneratedAttribute]
public void set_RestartCount(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Started();
    [CompilerGeneratedAttribute]
public void set_Started(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1ContainerState get_State();
    [CompilerGeneratedAttribute]
public void set_State(V1ContainerState value);
    [CompilerGeneratedAttribute]
public V1ContainerUser get_User();
    [CompilerGeneratedAttribute]
public void set_User(V1ContainerUser value);
    [CompilerGeneratedAttribute]
public IList`1<V1VolumeMountStatus> get_VolumeMounts();
    [CompilerGeneratedAttribute]
public void set_VolumeMounts(IList`1<V1VolumeMountStatus> value);
    public virtual void Validate();
}
public class k8s.Models.V1ContainerUser : object {
    [CompilerGeneratedAttribute]
private V1LinuxContainerUser <Linux>k__BackingField;
    [JsonPropertyNameAttribute("linux")]
public V1LinuxContainerUser Linux { get; public set; }
    public V1ContainerUser(V1LinuxContainerUser linux);
    [CompilerGeneratedAttribute]
public V1LinuxContainerUser get_Linux();
    [CompilerGeneratedAttribute]
public void set_Linux(V1LinuxContainerUser value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ControllerRevision : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Revision>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("data")]
public object Data { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("revision")]
public long Revision { get; public set; }
    public V1ControllerRevision(long revision, string apiVersion, object data, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public long get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(long value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ControllerRevisionList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ControllerRevision> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ControllerRevision> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ControllerRevisionList(IList`1<V1ControllerRevision> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ControllerRevision> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ControllerRevision> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CronJob : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CronJobSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CronJobStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1CronJobSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1CronJobStatus Status { get; public set; }
    public V1CronJob(string apiVersion, string kind, V1ObjectMeta metadata, V1CronJobSpec spec, V1CronJobStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1CronJobSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1CronJobSpec value);
    [CompilerGeneratedAttribute]
public V1CronJobStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1CronJobStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CronJobList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CronJob> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1CronJob> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1CronJobList(IList`1<V1CronJob> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1CronJob> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1CronJob> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1CronJobSpec : object {
    [CompilerGeneratedAttribute]
private string <ConcurrencyPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FailedJobsHistoryLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private V1JobTemplateSpec <JobTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Schedule>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <StartingDeadlineSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SuccessfulJobsHistoryLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Suspend>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    [JsonPropertyNameAttribute("concurrencyPolicy")]
public string ConcurrencyPolicy { get; public set; }
    [JsonPropertyNameAttribute("failedJobsHistoryLimit")]
public Nullable`1<int> FailedJobsHistoryLimit { get; public set; }
    [JsonPropertyNameAttribute("jobTemplate")]
public V1JobTemplateSpec JobTemplate { get; public set; }
    [JsonPropertyNameAttribute("schedule")]
public string Schedule { get; public set; }
    [JsonPropertyNameAttribute("startingDeadlineSeconds")]
public Nullable`1<long> StartingDeadlineSeconds { get; public set; }
    [JsonPropertyNameAttribute("successfulJobsHistoryLimit")]
public Nullable`1<int> SuccessfulJobsHistoryLimit { get; public set; }
    [JsonPropertyNameAttribute("suspend")]
public Nullable`1<bool> Suspend { get; public set; }
    [JsonPropertyNameAttribute("timeZone")]
public string TimeZone { get; public set; }
    public V1CronJobSpec(V1JobTemplateSpec jobTemplate, string schedule, string concurrencyPolicy, Nullable`1<int> failedJobsHistoryLimit, Nullable`1<long> startingDeadlineSeconds, Nullable`1<int> successfulJobsHistoryLimit, Nullable`1<bool> suspend, string timeZone);
    [CompilerGeneratedAttribute]
public string get_ConcurrencyPolicy();
    [CompilerGeneratedAttribute]
public void set_ConcurrencyPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FailedJobsHistoryLimit();
    [CompilerGeneratedAttribute]
public void set_FailedJobsHistoryLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1JobTemplateSpec get_JobTemplate();
    [CompilerGeneratedAttribute]
public void set_JobTemplate(V1JobTemplateSpec value);
    [CompilerGeneratedAttribute]
public string get_Schedule();
    [CompilerGeneratedAttribute]
public void set_Schedule(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_StartingDeadlineSeconds();
    [CompilerGeneratedAttribute]
public void set_StartingDeadlineSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SuccessfulJobsHistoryLimit();
    [CompilerGeneratedAttribute]
public void set_SuccessfulJobsHistoryLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Suspend();
    [CompilerGeneratedAttribute]
public void set_Suspend(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TimeZone();
    [CompilerGeneratedAttribute]
public void set_TimeZone(string value);
    public virtual void Validate();
}
public class k8s.Models.V1CronJobStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1ObjectReference> <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastScheduleTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastSuccessfulTime>k__BackingField;
    [JsonPropertyNameAttribute("active")]
public IList`1<V1ObjectReference> Active { get; public set; }
    [JsonPropertyNameAttribute("lastScheduleTime")]
public Nullable`1<DateTime> LastScheduleTime { get; public set; }
    [JsonPropertyNameAttribute("lastSuccessfulTime")]
public Nullable`1<DateTime> LastSuccessfulTime { get; public set; }
    public V1CronJobStatus(IList`1<V1ObjectReference> active, Nullable`1<DateTime> lastScheduleTime, Nullable`1<DateTime> lastSuccessfulTime);
    [CompilerGeneratedAttribute]
public IList`1<V1ObjectReference> get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(IList`1<V1ObjectReference> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastScheduleTime();
    [CompilerGeneratedAttribute]
public void set_LastScheduleTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastSuccessfulTime();
    [CompilerGeneratedAttribute]
public void set_LastSuccessfulTime(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class k8s.Models.V1CrossVersionObjectReference : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1CrossVersionObjectReference(string kind, string name, string apiVersion);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1CrossVersionObjectReference op_Explicit(V2CrossVersionObjectReference s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CSIDriver : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CSIDriverSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1CSIDriverSpec Spec { get; public set; }
    public V1CSIDriver(V1CSIDriverSpec spec, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1CSIDriverSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1CSIDriverSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CSIDriverList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CSIDriver> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1CSIDriver> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1CSIDriverList(IList`1<V1CSIDriver> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1CSIDriver> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1CSIDriver> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1CSIDriverSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AttachRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsGroupPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PodInfoOnMount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RequiresRepublish>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SeLinuxMount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StorageCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Storagev1TokenRequest> <TokenRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <VolumeLifecycleModes>k__BackingField;
    [JsonPropertyNameAttribute("attachRequired")]
public Nullable`1<bool> AttachRequired { get; public set; }
    [JsonPropertyNameAttribute("fsGroupPolicy")]
public string FsGroupPolicy { get; public set; }
    [JsonPropertyNameAttribute("podInfoOnMount")]
public Nullable`1<bool> PodInfoOnMount { get; public set; }
    [JsonPropertyNameAttribute("requiresRepublish")]
public Nullable`1<bool> RequiresRepublish { get; public set; }
    [JsonPropertyNameAttribute("seLinuxMount")]
public Nullable`1<bool> SeLinuxMount { get; public set; }
    [JsonPropertyNameAttribute("storageCapacity")]
public Nullable`1<bool> StorageCapacity { get; public set; }
    [JsonPropertyNameAttribute("tokenRequests")]
public IList`1<Storagev1TokenRequest> TokenRequests { get; public set; }
    [JsonPropertyNameAttribute("volumeLifecycleModes")]
public IList`1<string> VolumeLifecycleModes { get; public set; }
    public V1CSIDriverSpec(Nullable`1<bool> attachRequired, string fsGroupPolicy, Nullable`1<bool> podInfoOnMount, Nullable`1<bool> requiresRepublish, Nullable`1<bool> seLinuxMount, Nullable`1<bool> storageCapacity, IList`1<Storagev1TokenRequest> tokenRequests, IList`1<string> volumeLifecycleModes);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AttachRequired();
    [CompilerGeneratedAttribute]
public void set_AttachRequired(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_FsGroupPolicy();
    [CompilerGeneratedAttribute]
public void set_FsGroupPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PodInfoOnMount();
    [CompilerGeneratedAttribute]
public void set_PodInfoOnMount(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RequiresRepublish();
    [CompilerGeneratedAttribute]
public void set_RequiresRepublish(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SeLinuxMount();
    [CompilerGeneratedAttribute]
public void set_SeLinuxMount(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_StorageCapacity();
    [CompilerGeneratedAttribute]
public void set_StorageCapacity(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<Storagev1TokenRequest> get_TokenRequests();
    [CompilerGeneratedAttribute]
public void set_TokenRequests(IList`1<Storagev1TokenRequest> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_VolumeLifecycleModes();
    [CompilerGeneratedAttribute]
public void set_VolumeLifecycleModes(IList`1<string> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CSINode : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CSINodeSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1CSINodeSpec Spec { get; public set; }
    public V1CSINode(V1CSINodeSpec spec, string apiVersion, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1CSINodeSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1CSINodeSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1CSINodeDriver : object {
    [CompilerGeneratedAttribute]
private V1VolumeNodeResources <Allocatable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeID>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <TopologyKeys>k__BackingField;
    [JsonPropertyNameAttribute("allocatable")]
public V1VolumeNodeResources Allocatable { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("nodeID")]
public string NodeID { get; public set; }
    [JsonPropertyNameAttribute("topologyKeys")]
public IList`1<string> TopologyKeys { get; public set; }
    public V1CSINodeDriver(string name, string nodeID, V1VolumeNodeResources allocatable, IList`1<string> topologyKeys);
    [CompilerGeneratedAttribute]
public V1VolumeNodeResources get_Allocatable();
    [CompilerGeneratedAttribute]
public void set_Allocatable(V1VolumeNodeResources value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NodeID();
    [CompilerGeneratedAttribute]
public void set_NodeID(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_TopologyKeys();
    [CompilerGeneratedAttribute]
public void set_TopologyKeys(IList`1<string> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CSINodeList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CSINode> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1CSINode> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1CSINodeList(IList`1<V1CSINode> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1CSINode> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1CSINode> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1CSINodeSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<V1CSINodeDriver> <Drivers>k__BackingField;
    [JsonPropertyNameAttribute("drivers")]
public IList`1<V1CSINodeDriver> Drivers { get; public set; }
    public V1CSINodeSpec(IList`1<V1CSINodeDriver> drivers);
    [CompilerGeneratedAttribute]
public IList`1<V1CSINodeDriver> get_Drivers();
    [CompilerGeneratedAttribute]
public void set_Drivers(IList`1<V1CSINodeDriver> value);
    public virtual void Validate();
}
public class k8s.Models.V1CSIPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private V1SecretReference <ControllerExpandSecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <ControllerPublishSecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <NodeExpandSecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <NodePublishSecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <NodeStageSecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <VolumeAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeHandle>k__BackingField;
    [JsonPropertyNameAttribute("controllerExpandSecretRef")]
public V1SecretReference ControllerExpandSecretRef { get; public set; }
    [JsonPropertyNameAttribute("controllerPublishSecretRef")]
public V1SecretReference ControllerPublishSecretRef { get; public set; }
    [JsonPropertyNameAttribute("driver")]
public string Driver { get; public set; }
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("nodeExpandSecretRef")]
public V1SecretReference NodeExpandSecretRef { get; public set; }
    [JsonPropertyNameAttribute("nodePublishSecretRef")]
public V1SecretReference NodePublishSecretRef { get; public set; }
    [JsonPropertyNameAttribute("nodeStageSecretRef")]
public V1SecretReference NodeStageSecretRef { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("volumeAttributes")]
public IDictionary`2<string, string> VolumeAttributes { get; public set; }
    [JsonPropertyNameAttribute("volumeHandle")]
public string VolumeHandle { get; public set; }
    public V1CSIPersistentVolumeSource(string driver, string volumeHandle, V1SecretReference controllerExpandSecretRef, V1SecretReference controllerPublishSecretRef, string fsType, V1SecretReference nodeExpandSecretRef, V1SecretReference nodePublishSecretRef, V1SecretReference nodeStageSecretRef, Nullable`1<bool> readOnlyProperty, IDictionary`2<string, string> volumeAttributes);
    [CompilerGeneratedAttribute]
public V1SecretReference get_ControllerExpandSecretRef();
    [CompilerGeneratedAttribute]
public void set_ControllerExpandSecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_ControllerPublishSecretRef();
    [CompilerGeneratedAttribute]
public void set_ControllerPublishSecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public string get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(string value);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_NodeExpandSecretRef();
    [CompilerGeneratedAttribute]
public void set_NodeExpandSecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_NodePublishSecretRef();
    [CompilerGeneratedAttribute]
public void set_NodePublishSecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_NodeStageSecretRef();
    [CompilerGeneratedAttribute]
public void set_NodeStageSecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_VolumeAttributes();
    [CompilerGeneratedAttribute]
public void set_VolumeAttributes(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_VolumeHandle();
    [CompilerGeneratedAttribute]
public void set_VolumeHandle(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CSIStorageCapacity : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <Capacity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <MaximumVolumeSize>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NodeTopology>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageClassName>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("capacity")]
public ResourceQuantity Capacity { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("maximumVolumeSize")]
public ResourceQuantity MaximumVolumeSize { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("nodeTopology")]
public V1LabelSelector NodeTopology { get; public set; }
    [JsonPropertyNameAttribute("storageClassName")]
public string StorageClassName { get; public set; }
    public V1CSIStorageCapacity(string storageClassName, string apiVersion, ResourceQuantity capacity, string kind, ResourceQuantity maximumVolumeSize, V1ObjectMeta metadata, V1LabelSelector nodeTopology);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(ResourceQuantity value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_MaximumVolumeSize();
    [CompilerGeneratedAttribute]
public void set_MaximumVolumeSize(ResourceQuantity value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NodeTopology();
    [CompilerGeneratedAttribute]
public void set_NodeTopology(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public string get_StorageClassName();
    [CompilerGeneratedAttribute]
public void set_StorageClassName(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CSIStorageCapacityList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CSIStorageCapacity> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1CSIStorageCapacity> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1CSIStorageCapacityList(IList`1<V1CSIStorageCapacity> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1CSIStorageCapacity> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1CSIStorageCapacity> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1CSIVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <NodePublishSecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <VolumeAttributes>k__BackingField;
    [JsonPropertyNameAttribute("driver")]
public string Driver { get; public set; }
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("nodePublishSecretRef")]
public V1LocalObjectReference NodePublishSecretRef { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("volumeAttributes")]
public IDictionary`2<string, string> VolumeAttributes { get; public set; }
    public V1CSIVolumeSource(string driver, string fsType, V1LocalObjectReference nodePublishSecretRef, Nullable`1<bool> readOnlyProperty, IDictionary`2<string, string> volumeAttributes);
    [CompilerGeneratedAttribute]
public string get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(string value);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_NodePublishSecretRef();
    [CompilerGeneratedAttribute]
public void set_NodePublishSecretRef(V1LocalObjectReference value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_VolumeAttributes();
    [CompilerGeneratedAttribute]
public void set_VolumeAttributes(IDictionary`2<string, string> value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceColumnDefinition : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyNameAttribute("format")]
public string Format { get; public set; }
    [JsonPropertyNameAttribute("jsonPath")]
public string JsonPath { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("priority")]
public Nullable`1<int> Priority { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1CustomResourceColumnDefinition(string jsonPath, string name, string type, string description, string format, Nullable`1<int> priority);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    [CompilerGeneratedAttribute]
public string get_JsonPath();
    [CompilerGeneratedAttribute]
public void set_JsonPath(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceConversion : object {
    [CompilerGeneratedAttribute]
private string <Strategy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1WebhookConversion <Webhook>k__BackingField;
    [JsonPropertyNameAttribute("strategy")]
public string Strategy { get; public set; }
    [JsonPropertyNameAttribute("webhook")]
public V1WebhookConversion Webhook { get; public set; }
    public V1CustomResourceConversion(string strategy, V1WebhookConversion webhook);
    [CompilerGeneratedAttribute]
public string get_Strategy();
    [CompilerGeneratedAttribute]
public void set_Strategy(string value);
    [CompilerGeneratedAttribute]
public V1WebhookConversion get_Webhook();
    [CompilerGeneratedAttribute]
public void set_Webhook(V1WebhookConversion value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CustomResourceDefinition : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CustomResourceDefinitionSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CustomResourceDefinitionStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1CustomResourceDefinitionSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1CustomResourceDefinitionStatus Status { get; public set; }
    public V1CustomResourceDefinition(V1CustomResourceDefinitionSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1CustomResourceDefinitionStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1CustomResourceDefinitionSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1CustomResourceDefinitionSpec value);
    [CompilerGeneratedAttribute]
public V1CustomResourceDefinitionStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1CustomResourceDefinitionStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceDefinitionCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1CustomResourceDefinitionCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1CustomResourceDefinitionList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CustomResourceDefinition> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1CustomResourceDefinition> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1CustomResourceDefinitionList(IList`1<V1CustomResourceDefinition> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1CustomResourceDefinition> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1CustomResourceDefinition> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceDefinitionNames : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ListKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Plural>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ShortNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Singular>k__BackingField;
    [JsonPropertyNameAttribute("categories")]
public IList`1<string> Categories { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("listKind")]
public string ListKind { get; public set; }
    [JsonPropertyNameAttribute("plural")]
public string Plural { get; public set; }
    [JsonPropertyNameAttribute("shortNames")]
public IList`1<string> ShortNames { get; public set; }
    [JsonPropertyNameAttribute("singular")]
public string Singular { get; public set; }
    public V1CustomResourceDefinitionNames(string kind, string plural, IList`1<string> categories, string listKind, IList`1<string> shortNames, string singular);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_ListKind();
    [CompilerGeneratedAttribute]
public void set_ListKind(string value);
    [CompilerGeneratedAttribute]
public string get_Plural();
    [CompilerGeneratedAttribute]
public void set_Plural(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ShortNames();
    [CompilerGeneratedAttribute]
public void set_ShortNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Singular();
    [CompilerGeneratedAttribute]
public void set_Singular(string value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceDefinitionSpec : object {
    [CompilerGeneratedAttribute]
private V1CustomResourceConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CustomResourceDefinitionNames <Names>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveUnknownFields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CustomResourceDefinitionVersion> <Versions>k__BackingField;
    [JsonPropertyNameAttribute("conversion")]
public V1CustomResourceConversion Conversion { get; public set; }
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("names")]
public V1CustomResourceDefinitionNames Names { get; public set; }
    [JsonPropertyNameAttribute("preserveUnknownFields")]
public Nullable`1<bool> PreserveUnknownFields { get; public set; }
    [JsonPropertyNameAttribute("scope")]
public string Scope { get; public set; }
    [JsonPropertyNameAttribute("versions")]
public IList`1<V1CustomResourceDefinitionVersion> Versions { get; public set; }
    public V1CustomResourceDefinitionSpec(string group, V1CustomResourceDefinitionNames names, string scope, IList`1<V1CustomResourceDefinitionVersion> versions, V1CustomResourceConversion conversion, Nullable`1<bool> preserveUnknownFields);
    [CompilerGeneratedAttribute]
public V1CustomResourceConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(V1CustomResourceConversion value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public V1CustomResourceDefinitionNames get_Names();
    [CompilerGeneratedAttribute]
public void set_Names(V1CustomResourceDefinitionNames value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PreserveUnknownFields();
    [CompilerGeneratedAttribute]
public void set_PreserveUnknownFields(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1CustomResourceDefinitionVersion> get_Versions();
    [CompilerGeneratedAttribute]
public void set_Versions(IList`1<V1CustomResourceDefinitionVersion> value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceDefinitionStatus : object {
    [CompilerGeneratedAttribute]
private V1CustomResourceDefinitionNames <AcceptedNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1CustomResourceDefinitionCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <StoredVersions>k__BackingField;
    [JsonPropertyNameAttribute("acceptedNames")]
public V1CustomResourceDefinitionNames AcceptedNames { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1CustomResourceDefinitionCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("storedVersions")]
public IList`1<string> StoredVersions { get; public set; }
    public V1CustomResourceDefinitionStatus(V1CustomResourceDefinitionNames acceptedNames, IList`1<V1CustomResourceDefinitionCondition> conditions, IList`1<string> storedVersions);
    [CompilerGeneratedAttribute]
public V1CustomResourceDefinitionNames get_AcceptedNames();
    [CompilerGeneratedAttribute]
public void set_AcceptedNames(V1CustomResourceDefinitionNames value);
    [CompilerGeneratedAttribute]
public IList`1<V1CustomResourceDefinitionCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1CustomResourceDefinitionCondition> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_StoredVersions();
    [CompilerGeneratedAttribute]
public void set_StoredVersions(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceDefinitionVersion : object {
    [CompilerGeneratedAttribute]
private IList`1<V1CustomResourceColumnDefinition> <AdditionalPrinterColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Deprecated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeprecationWarning>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CustomResourceValidation <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1SelectableField> <SelectableFields>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Served>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Storage>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CustomResourceSubresources <Subresources>k__BackingField;
    [JsonPropertyNameAttribute("additionalPrinterColumns")]
public IList`1<V1CustomResourceColumnDefinition> AdditionalPrinterColumns { get; public set; }
    [JsonPropertyNameAttribute("deprecated")]
public Nullable`1<bool> Deprecated { get; public set; }
    [JsonPropertyNameAttribute("deprecationWarning")]
public string DeprecationWarning { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("schema")]
public V1CustomResourceValidation Schema { get; public set; }
    [JsonPropertyNameAttribute("selectableFields")]
public IList`1<V1SelectableField> SelectableFields { get; public set; }
    [JsonPropertyNameAttribute("served")]
public bool Served { get; public set; }
    [JsonPropertyNameAttribute("storage")]
public bool Storage { get; public set; }
    [JsonPropertyNameAttribute("subresources")]
public V1CustomResourceSubresources Subresources { get; public set; }
    public V1CustomResourceDefinitionVersion(string name, bool served, bool storage, IList`1<V1CustomResourceColumnDefinition> additionalPrinterColumns, Nullable`1<bool> deprecated, string deprecationWarning, V1CustomResourceValidation schema, IList`1<V1SelectableField> selectableFields, V1CustomResourceSubresources subresources);
    [CompilerGeneratedAttribute]
public IList`1<V1CustomResourceColumnDefinition> get_AdditionalPrinterColumns();
    [CompilerGeneratedAttribute]
public void set_AdditionalPrinterColumns(IList`1<V1CustomResourceColumnDefinition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Deprecated();
    [CompilerGeneratedAttribute]
public void set_Deprecated(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_DeprecationWarning();
    [CompilerGeneratedAttribute]
public void set_DeprecationWarning(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V1CustomResourceValidation get_Schema();
    [CompilerGeneratedAttribute]
public void set_Schema(V1CustomResourceValidation value);
    [CompilerGeneratedAttribute]
public IList`1<V1SelectableField> get_SelectableFields();
    [CompilerGeneratedAttribute]
public void set_SelectableFields(IList`1<V1SelectableField> value);
    [CompilerGeneratedAttribute]
public bool get_Served();
    [CompilerGeneratedAttribute]
public void set_Served(bool value);
    [CompilerGeneratedAttribute]
public bool get_Storage();
    [CompilerGeneratedAttribute]
public void set_Storage(bool value);
    [CompilerGeneratedAttribute]
public V1CustomResourceSubresources get_Subresources();
    [CompilerGeneratedAttribute]
public void set_Subresources(V1CustomResourceSubresources value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceSubresources : object {
    [CompilerGeneratedAttribute]
private V1CustomResourceSubresourceScale <Scale>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Status>k__BackingField;
    [JsonPropertyNameAttribute("scale")]
public V1CustomResourceSubresourceScale Scale { get; public set; }
    [JsonPropertyNameAttribute("status")]
public object Status { get; public set; }
    public V1CustomResourceSubresources(V1CustomResourceSubresourceScale scale, object status);
    [CompilerGeneratedAttribute]
public V1CustomResourceSubresourceScale get_Scale();
    [CompilerGeneratedAttribute]
public void set_Scale(V1CustomResourceSubresourceScale value);
    [CompilerGeneratedAttribute]
public object get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(object value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceSubresourceScale : object {
    [CompilerGeneratedAttribute]
private string <LabelSelectorPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpecReplicasPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusReplicasPath>k__BackingField;
    [JsonPropertyNameAttribute("labelSelectorPath")]
public string LabelSelectorPath { get; public set; }
    [JsonPropertyNameAttribute("specReplicasPath")]
public string SpecReplicasPath { get; public set; }
    [JsonPropertyNameAttribute("statusReplicasPath")]
public string StatusReplicasPath { get; public set; }
    public V1CustomResourceSubresourceScale(string specReplicasPath, string statusReplicasPath, string labelSelectorPath);
    [CompilerGeneratedAttribute]
public string get_LabelSelectorPath();
    [CompilerGeneratedAttribute]
public void set_LabelSelectorPath(string value);
    [CompilerGeneratedAttribute]
public string get_SpecReplicasPath();
    [CompilerGeneratedAttribute]
public void set_SpecReplicasPath(string value);
    [CompilerGeneratedAttribute]
public string get_StatusReplicasPath();
    [CompilerGeneratedAttribute]
public void set_StatusReplicasPath(string value);
    public virtual void Validate();
}
public class k8s.Models.V1CustomResourceValidation : object {
    [CompilerGeneratedAttribute]
private V1JSONSchemaProps <OpenAPIV3Schema>k__BackingField;
    [JsonPropertyNameAttribute("openAPIV3Schema")]
public V1JSONSchemaProps OpenAPIV3Schema { get; public set; }
    public V1CustomResourceValidation(V1JSONSchemaProps openAPIV3Schema);
    [CompilerGeneratedAttribute]
public V1JSONSchemaProps get_OpenAPIV3Schema();
    [CompilerGeneratedAttribute]
public void set_OpenAPIV3Schema(V1JSONSchemaProps value);
    public virtual void Validate();
}
public class k8s.Models.V1DaemonEndpoint : object {
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [JsonPropertyNameAttribute("Port")]
public int Port { get; public set; }
    public V1DaemonEndpoint(int port);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1DaemonSet : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DaemonSetSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DaemonSetStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1DaemonSetSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1DaemonSetStatus Status { get; public set; }
    public V1DaemonSet(string apiVersion, string kind, V1ObjectMeta metadata, V1DaemonSetSpec spec, V1DaemonSetStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1DaemonSetSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1DaemonSetSpec value);
    [CompilerGeneratedAttribute]
public V1DaemonSetStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1DaemonSetStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1DaemonSetCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1DaemonSetCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1DaemonSetList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1DaemonSet> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1DaemonSet> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1DaemonSetList(IList`1<V1DaemonSet> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1DaemonSet> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1DaemonSet> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1DaemonSetSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinReadySeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RevisionHistoryLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodTemplateSpec <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DaemonSetUpdateStrategy <UpdateStrategy>k__BackingField;
    [JsonPropertyNameAttribute("minReadySeconds")]
public Nullable`1<int> MinReadySeconds { get; public set; }
    [JsonPropertyNameAttribute("revisionHistoryLimit")]
public Nullable`1<int> RevisionHistoryLimit { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    [JsonPropertyNameAttribute("template")]
public V1PodTemplateSpec Template { get; public set; }
    [JsonPropertyNameAttribute("updateStrategy")]
public V1DaemonSetUpdateStrategy UpdateStrategy { get; public set; }
    public V1DaemonSetSpec(V1LabelSelector selector, V1PodTemplateSpec template, Nullable`1<int> minReadySeconds, Nullable`1<int> revisionHistoryLimit, V1DaemonSetUpdateStrategy updateStrategy);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinReadySeconds();
    [CompilerGeneratedAttribute]
public void set_MinReadySeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RevisionHistoryLimit();
    [CompilerGeneratedAttribute]
public void set_RevisionHistoryLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1PodTemplateSpec get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(V1PodTemplateSpec value);
    [CompilerGeneratedAttribute]
public V1DaemonSetUpdateStrategy get_UpdateStrategy();
    [CompilerGeneratedAttribute]
public void set_UpdateStrategy(V1DaemonSetUpdateStrategy value);
    public virtual void Validate();
}
public class k8s.Models.V1DaemonSetStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CollisionCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1DaemonSetCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentNumberScheduled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DesiredNumberScheduled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberMisscheduled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberReady>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UpdatedNumberScheduled>k__BackingField;
    [JsonPropertyNameAttribute("collisionCount")]
public Nullable`1<int> CollisionCount { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1DaemonSetCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("currentNumberScheduled")]
public int CurrentNumberScheduled { get; public set; }
    [JsonPropertyNameAttribute("desiredNumberScheduled")]
public int DesiredNumberScheduled { get; public set; }
    [JsonPropertyNameAttribute("numberAvailable")]
public Nullable`1<int> NumberAvailable { get; public set; }
    [JsonPropertyNameAttribute("numberMisscheduled")]
public int NumberMisscheduled { get; public set; }
    [JsonPropertyNameAttribute("numberReady")]
public int NumberReady { get; public set; }
    [JsonPropertyNameAttribute("numberUnavailable")]
public Nullable`1<int> NumberUnavailable { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("updatedNumberScheduled")]
public Nullable`1<int> UpdatedNumberScheduled { get; public set; }
    public V1DaemonSetStatus(int currentNumberScheduled, int desiredNumberScheduled, int numberMisscheduled, int numberReady, Nullable`1<int> collisionCount, IList`1<V1DaemonSetCondition> conditions, Nullable`1<int> numberAvailable, Nullable`1<int> numberUnavailable, Nullable`1<long> observedGeneration, Nullable`1<int> updatedNumberScheduled);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CollisionCount();
    [CompilerGeneratedAttribute]
public void set_CollisionCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1DaemonSetCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1DaemonSetCondition> value);
    [CompilerGeneratedAttribute]
public int get_CurrentNumberScheduled();
    [CompilerGeneratedAttribute]
public void set_CurrentNumberScheduled(int value);
    [CompilerGeneratedAttribute]
public int get_DesiredNumberScheduled();
    [CompilerGeneratedAttribute]
public void set_DesiredNumberScheduled(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NumberAvailable();
    [CompilerGeneratedAttribute]
public void set_NumberAvailable(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_NumberMisscheduled();
    [CompilerGeneratedAttribute]
public void set_NumberMisscheduled(int value);
    [CompilerGeneratedAttribute]
public int get_NumberReady();
    [CompilerGeneratedAttribute]
public void set_NumberReady(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NumberUnavailable();
    [CompilerGeneratedAttribute]
public void set_NumberUnavailable(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UpdatedNumberScheduled();
    [CompilerGeneratedAttribute]
public void set_UpdatedNumberScheduled(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1DaemonSetUpdateStrategy : object {
    [CompilerGeneratedAttribute]
private V1RollingUpdateDaemonSet <RollingUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("rollingUpdate")]
public V1RollingUpdateDaemonSet RollingUpdate { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1DaemonSetUpdateStrategy(V1RollingUpdateDaemonSet rollingUpdate, string type);
    [CompilerGeneratedAttribute]
public V1RollingUpdateDaemonSet get_RollingUpdate();
    [CompilerGeneratedAttribute]
public void set_RollingUpdate(V1RollingUpdateDaemonSet value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1DeleteOptions : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <DryRun>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <GracePeriodSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OrphanDependents>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Preconditions <Preconditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropagationPolicy>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("dryRun")]
public IList`1<string> DryRun { get; public set; }
    [JsonPropertyNameAttribute("gracePeriodSeconds")]
public Nullable`1<long> GracePeriodSeconds { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("orphanDependents")]
public Nullable`1<bool> OrphanDependents { get; public set; }
    [JsonPropertyNameAttribute("preconditions")]
public V1Preconditions Preconditions { get; public set; }
    [JsonPropertyNameAttribute("propagationPolicy")]
public string PropagationPolicy { get; public set; }
    public V1DeleteOptions(string apiVersion, IList`1<string> dryRun, Nullable`1<long> gracePeriodSeconds, string kind, Nullable`1<bool> orphanDependents, V1Preconditions preconditions, string propagationPolicy);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DryRun();
    [CompilerGeneratedAttribute]
public void set_DryRun(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_GracePeriodSeconds();
    [CompilerGeneratedAttribute]
public void set_GracePeriodSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_OrphanDependents();
    [CompilerGeneratedAttribute]
public void set_OrphanDependents(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1Preconditions get_Preconditions();
    [CompilerGeneratedAttribute]
public void set_Preconditions(V1Preconditions value);
    [CompilerGeneratedAttribute]
public string get_PropagationPolicy();
    [CompilerGeneratedAttribute]
public void set_PropagationPolicy(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Deployment : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DeploymentSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DeploymentStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1DeploymentSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1DeploymentStatus Status { get; public set; }
    public V1Deployment(string apiVersion, string kind, V1ObjectMeta metadata, V1DeploymentSpec spec, V1DeploymentStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1DeploymentSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1DeploymentSpec value);
    [CompilerGeneratedAttribute]
public V1DeploymentStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1DeploymentStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1DeploymentCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastUpdateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("lastUpdateTime")]
public Nullable`1<DateTime> LastUpdateTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1DeploymentCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, Nullable`1<DateTime> lastUpdateTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastUpdateTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdateTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1DeploymentList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Deployment> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Deployment> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1DeploymentList(IList`1<V1Deployment> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Deployment> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Deployment> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1DeploymentSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinReadySeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Paused>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProgressDeadlineSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Replicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RevisionHistoryLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DeploymentStrategy <Strategy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodTemplateSpec <Template>k__BackingField;
    [JsonPropertyNameAttribute("minReadySeconds")]
public Nullable`1<int> MinReadySeconds { get; public set; }
    [JsonPropertyNameAttribute("paused")]
public Nullable`1<bool> Paused { get; public set; }
    [JsonPropertyNameAttribute("progressDeadlineSeconds")]
public Nullable`1<int> ProgressDeadlineSeconds { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public Nullable`1<int> Replicas { get; public set; }
    [JsonPropertyNameAttribute("revisionHistoryLimit")]
public Nullable`1<int> RevisionHistoryLimit { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    [JsonPropertyNameAttribute("strategy")]
public V1DeploymentStrategy Strategy { get; public set; }
    [JsonPropertyNameAttribute("template")]
public V1PodTemplateSpec Template { get; public set; }
    public V1DeploymentSpec(V1LabelSelector selector, V1PodTemplateSpec template, Nullable`1<int> minReadySeconds, Nullable`1<bool> paused, Nullable`1<int> progressDeadlineSeconds, Nullable`1<int> replicas, Nullable`1<int> revisionHistoryLimit, V1DeploymentStrategy strategy);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinReadySeconds();
    [CompilerGeneratedAttribute]
public void set_MinReadySeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Paused();
    [CompilerGeneratedAttribute]
public void set_Paused(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProgressDeadlineSeconds();
    [CompilerGeneratedAttribute]
public void set_ProgressDeadlineSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RevisionHistoryLimit();
    [CompilerGeneratedAttribute]
public void set_RevisionHistoryLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1DeploymentStrategy get_Strategy();
    [CompilerGeneratedAttribute]
public void set_Strategy(V1DeploymentStrategy value);
    [CompilerGeneratedAttribute]
public V1PodTemplateSpec get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(V1PodTemplateSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1DeploymentStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AvailableReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CollisionCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1DeploymentCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadyReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Replicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UnavailableReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UpdatedReplicas>k__BackingField;
    [JsonPropertyNameAttribute("availableReplicas")]
public Nullable`1<int> AvailableReplicas { get; public set; }
    [JsonPropertyNameAttribute("collisionCount")]
public Nullable`1<int> CollisionCount { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1DeploymentCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("readyReplicas")]
public Nullable`1<int> ReadyReplicas { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public Nullable`1<int> Replicas { get; public set; }
    [JsonPropertyNameAttribute("unavailableReplicas")]
public Nullable`1<int> UnavailableReplicas { get; public set; }
    [JsonPropertyNameAttribute("updatedReplicas")]
public Nullable`1<int> UpdatedReplicas { get; public set; }
    public V1DeploymentStatus(Nullable`1<int> availableReplicas, Nullable`1<int> collisionCount, IList`1<V1DeploymentCondition> conditions, Nullable`1<long> observedGeneration, Nullable`1<int> readyReplicas, Nullable`1<int> replicas, Nullable`1<int> unavailableReplicas, Nullable`1<int> updatedReplicas);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AvailableReplicas();
    [CompilerGeneratedAttribute]
public void set_AvailableReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CollisionCount();
    [CompilerGeneratedAttribute]
public void set_CollisionCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1DeploymentCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1DeploymentCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadyReplicas();
    [CompilerGeneratedAttribute]
public void set_ReadyReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UnavailableReplicas();
    [CompilerGeneratedAttribute]
public void set_UnavailableReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UpdatedReplicas();
    [CompilerGeneratedAttribute]
public void set_UpdatedReplicas(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1DeploymentStrategy : object {
    [CompilerGeneratedAttribute]
private V1RollingUpdateDeployment <RollingUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("rollingUpdate")]
public V1RollingUpdateDeployment RollingUpdate { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1DeploymentStrategy(V1RollingUpdateDeployment rollingUpdate, string type);
    [CompilerGeneratedAttribute]
public V1RollingUpdateDeployment get_RollingUpdate();
    [CompilerGeneratedAttribute]
public void set_RollingUpdate(V1RollingUpdateDeployment value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1DownwardAPIProjection : object {
    [CompilerGeneratedAttribute]
private IList`1<V1DownwardAPIVolumeFile> <Items>k__BackingField;
    [JsonPropertyNameAttribute("items")]
public IList`1<V1DownwardAPIVolumeFile> Items { get; public set; }
    public V1DownwardAPIProjection(IList`1<V1DownwardAPIVolumeFile> items);
    [CompilerGeneratedAttribute]
public IList`1<V1DownwardAPIVolumeFile> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<V1DownwardAPIVolumeFile> value);
    public virtual void Validate();
}
public class k8s.Models.V1DownwardAPIVolumeFile : object {
    [CompilerGeneratedAttribute]
private V1ObjectFieldSelector <FieldRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceFieldSelector <ResourceFieldRef>k__BackingField;
    [JsonPropertyNameAttribute("fieldRef")]
public V1ObjectFieldSelector FieldRef { get; public set; }
    [JsonPropertyNameAttribute("mode")]
public Nullable`1<int> Mode { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("resourceFieldRef")]
public V1ResourceFieldSelector ResourceFieldRef { get; public set; }
    public V1DownwardAPIVolumeFile(string path, V1ObjectFieldSelector fieldRef, Nullable`1<int> mode, V1ResourceFieldSelector resourceFieldRef);
    [CompilerGeneratedAttribute]
public V1ObjectFieldSelector get_FieldRef();
    [CompilerGeneratedAttribute]
public void set_FieldRef(V1ObjectFieldSelector value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public V1ResourceFieldSelector get_ResourceFieldRef();
    [CompilerGeneratedAttribute]
public void set_ResourceFieldRef(V1ResourceFieldSelector value);
    public virtual void Validate();
}
public class k8s.Models.V1DownwardAPIVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DefaultMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1DownwardAPIVolumeFile> <Items>k__BackingField;
    [JsonPropertyNameAttribute("defaultMode")]
public Nullable`1<int> DefaultMode { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1DownwardAPIVolumeFile> Items { get; public set; }
    public V1DownwardAPIVolumeSource(Nullable`1<int> defaultMode, IList`1<V1DownwardAPIVolumeFile> items);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DefaultMode();
    [CompilerGeneratedAttribute]
public void set_DefaultMode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1DownwardAPIVolumeFile> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<V1DownwardAPIVolumeFile> value);
    public virtual void Validate();
}
public class k8s.Models.V1EmptyDirVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Medium>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <SizeLimit>k__BackingField;
    [JsonPropertyNameAttribute("medium")]
public string Medium { get; public set; }
    [JsonPropertyNameAttribute("sizeLimit")]
public ResourceQuantity SizeLimit { get; public set; }
    public V1EmptyDirVolumeSource(string medium, ResourceQuantity sizeLimit);
    [CompilerGeneratedAttribute]
public string get_Medium();
    [CompilerGeneratedAttribute]
public void set_Medium(string value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_SizeLimit();
    [CompilerGeneratedAttribute]
public void set_SizeLimit(ResourceQuantity value);
    public virtual void Validate();
}
public class k8s.Models.V1Endpoint : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Addresses>k__BackingField;
    [CompilerGeneratedAttribute]
private V1EndpointConditions <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <DeprecatedTopology>k__BackingField;
    [CompilerGeneratedAttribute]
private V1EndpointHints <Hints>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <TargetRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Zone>k__BackingField;
    [JsonPropertyNameAttribute("addresses")]
public IList`1<string> Addresses { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public V1EndpointConditions Conditions { get; public set; }
    [JsonPropertyNameAttribute("deprecatedTopology")]
public IDictionary`2<string, string> DeprecatedTopology { get; public set; }
    [JsonPropertyNameAttribute("hints")]
public V1EndpointHints Hints { get; public set; }
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("nodeName")]
public string NodeName { get; public set; }
    [JsonPropertyNameAttribute("targetRef")]
public V1ObjectReference TargetRef { get; public set; }
    [JsonPropertyNameAttribute("zone")]
public string Zone { get; public set; }
    public V1Endpoint(IList`1<string> addresses, V1EndpointConditions conditions, IDictionary`2<string, string> deprecatedTopology, V1EndpointHints hints, string hostname, string nodeName, V1ObjectReference targetRef, string zone);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Addresses();
    [CompilerGeneratedAttribute]
public void set_Addresses(IList`1<string> value);
    [CompilerGeneratedAttribute]
public V1EndpointConditions get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(V1EndpointConditions value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_DeprecatedTopology();
    [CompilerGeneratedAttribute]
public void set_DeprecatedTopology(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public V1EndpointHints get_Hints();
    [CompilerGeneratedAttribute]
public void set_Hints(V1EndpointHints value);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
public void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_TargetRef();
    [CompilerGeneratedAttribute]
public void set_TargetRef(V1ObjectReference value);
    [CompilerGeneratedAttribute]
public string get_Zone();
    [CompilerGeneratedAttribute]
public void set_Zone(string value);
    public virtual void Validate();
}
public class k8s.Models.V1EndpointAddress : object {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <TargetRef>k__BackingField;
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("ip")]
public string Ip { get; public set; }
    [JsonPropertyNameAttribute("nodeName")]
public string NodeName { get; public set; }
    [JsonPropertyNameAttribute("targetRef")]
public V1ObjectReference TargetRef { get; public set; }
    public V1EndpointAddress(string ip, string hostname, string nodeName, V1ObjectReference targetRef);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
public void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_TargetRef();
    [CompilerGeneratedAttribute]
public void set_TargetRef(V1ObjectReference value);
    public virtual void Validate();
}
public class k8s.Models.V1EndpointConditions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Ready>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Serving>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Terminating>k__BackingField;
    [JsonPropertyNameAttribute("ready")]
public Nullable`1<bool> Ready { get; public set; }
    [JsonPropertyNameAttribute("serving")]
public Nullable`1<bool> Serving { get; public set; }
    [JsonPropertyNameAttribute("terminating")]
public Nullable`1<bool> Terminating { get; public set; }
    public V1EndpointConditions(Nullable`1<bool> ready, Nullable`1<bool> serving, Nullable`1<bool> terminating);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Ready();
    [CompilerGeneratedAttribute]
public void set_Ready(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Serving();
    [CompilerGeneratedAttribute]
public void set_Serving(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Terminating();
    [CompilerGeneratedAttribute]
public void set_Terminating(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1EndpointHints : object {
    [CompilerGeneratedAttribute]
private IList`1<V1ForZone> <ForZones>k__BackingField;
    [JsonPropertyNameAttribute("forZones")]
public IList`1<V1ForZone> ForZones { get; public set; }
    public V1EndpointHints(IList`1<V1ForZone> forZones);
    [CompilerGeneratedAttribute]
public IList`1<V1ForZone> get_ForZones();
    [CompilerGeneratedAttribute]
public void set_ForZones(IList`1<V1ForZone> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Endpoints : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EndpointSubset> <Subsets>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("subsets")]
public IList`1<V1EndpointSubset> Subsets { get; public set; }
    public V1Endpoints(string apiVersion, string kind, V1ObjectMeta metadata, IList`1<V1EndpointSubset> subsets);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<V1EndpointSubset> get_Subsets();
    [CompilerGeneratedAttribute]
public void set_Subsets(IList`1<V1EndpointSubset> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1EndpointSlice : object {
    [CompilerGeneratedAttribute]
private string <AddressType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Endpoint> <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Discoveryv1EndpointPort> <Ports>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("addressType")]
public string AddressType { get; public set; }
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("endpoints")]
public IList`1<V1Endpoint> Endpoints { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<Discoveryv1EndpointPort> Ports { get; public set; }
    public V1EndpointSlice(string addressType, IList`1<V1Endpoint> endpoints, string apiVersion, string kind, V1ObjectMeta metadata, IList`1<Discoveryv1EndpointPort> ports);
    [CompilerGeneratedAttribute]
public string get_AddressType();
    [CompilerGeneratedAttribute]
public void set_AddressType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1Endpoint> get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(IList`1<V1Endpoint> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<Discoveryv1EndpointPort> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<Discoveryv1EndpointPort> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1EndpointSliceList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EndpointSlice> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1EndpointSlice> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1EndpointSliceList(IList`1<V1EndpointSlice> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1EndpointSlice> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1EndpointSlice> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1EndpointsList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Endpoints> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Endpoints> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1EndpointsList(IList`1<V1Endpoints> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Endpoints> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Endpoints> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1EndpointSubset : object {
    [CompilerGeneratedAttribute]
private IList`1<V1EndpointAddress> <Addresses>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EndpointAddress> <NotReadyAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Corev1EndpointPort> <Ports>k__BackingField;
    [JsonPropertyNameAttribute("addresses")]
public IList`1<V1EndpointAddress> Addresses { get; public set; }
    [JsonPropertyNameAttribute("notReadyAddresses")]
public IList`1<V1EndpointAddress> NotReadyAddresses { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<Corev1EndpointPort> Ports { get; public set; }
    public V1EndpointSubset(IList`1<V1EndpointAddress> addresses, IList`1<V1EndpointAddress> notReadyAddresses, IList`1<Corev1EndpointPort> ports);
    [CompilerGeneratedAttribute]
public IList`1<V1EndpointAddress> get_Addresses();
    [CompilerGeneratedAttribute]
public void set_Addresses(IList`1<V1EndpointAddress> value);
    [CompilerGeneratedAttribute]
public IList`1<V1EndpointAddress> get_NotReadyAddresses();
    [CompilerGeneratedAttribute]
public void set_NotReadyAddresses(IList`1<V1EndpointAddress> value);
    [CompilerGeneratedAttribute]
public IList`1<Corev1EndpointPort> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<Corev1EndpointPort> value);
    public virtual void Validate();
}
public class k8s.Models.V1EnvFromSource : object {
    [CompilerGeneratedAttribute]
private V1ConfigMapEnvSource <ConfigMapRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretEnvSource <SecretRef>k__BackingField;
    [JsonPropertyNameAttribute("configMapRef")]
public V1ConfigMapEnvSource ConfigMapRef { get; public set; }
    [JsonPropertyNameAttribute("prefix")]
public string Prefix { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1SecretEnvSource SecretRef { get; public set; }
    public V1EnvFromSource(V1ConfigMapEnvSource configMapRef, string prefix, V1SecretEnvSource secretRef);
    [CompilerGeneratedAttribute]
public V1ConfigMapEnvSource get_ConfigMapRef();
    [CompilerGeneratedAttribute]
public void set_ConfigMapRef(V1ConfigMapEnvSource value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public V1SecretEnvSource get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1SecretEnvSource value);
    public virtual void Validate();
}
public class k8s.Models.V1EnvVar : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private V1EnvVarSource <ValueFrom>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    [JsonPropertyNameAttribute("valueFrom")]
public V1EnvVarSource ValueFrom { get; public set; }
    public V1EnvVar(string name, string value, V1EnvVarSource valueFrom);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public V1EnvVarSource get_ValueFrom();
    [CompilerGeneratedAttribute]
public void set_ValueFrom(V1EnvVarSource value);
    public virtual void Validate();
}
public class k8s.Models.V1EnvVarSource : object {
    [CompilerGeneratedAttribute]
private V1ConfigMapKeySelector <ConfigMapKeyRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectFieldSelector <FieldRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceFieldSelector <ResourceFieldRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretKeySelector <SecretKeyRef>k__BackingField;
    [JsonPropertyNameAttribute("configMapKeyRef")]
public V1ConfigMapKeySelector ConfigMapKeyRef { get; public set; }
    [JsonPropertyNameAttribute("fieldRef")]
public V1ObjectFieldSelector FieldRef { get; public set; }
    [JsonPropertyNameAttribute("resourceFieldRef")]
public V1ResourceFieldSelector ResourceFieldRef { get; public set; }
    [JsonPropertyNameAttribute("secretKeyRef")]
public V1SecretKeySelector SecretKeyRef { get; public set; }
    public V1EnvVarSource(V1ConfigMapKeySelector configMapKeyRef, V1ObjectFieldSelector fieldRef, V1ResourceFieldSelector resourceFieldRef, V1SecretKeySelector secretKeyRef);
    [CompilerGeneratedAttribute]
public V1ConfigMapKeySelector get_ConfigMapKeyRef();
    [CompilerGeneratedAttribute]
public void set_ConfigMapKeyRef(V1ConfigMapKeySelector value);
    [CompilerGeneratedAttribute]
public V1ObjectFieldSelector get_FieldRef();
    [CompilerGeneratedAttribute]
public void set_FieldRef(V1ObjectFieldSelector value);
    [CompilerGeneratedAttribute]
public V1ResourceFieldSelector get_ResourceFieldRef();
    [CompilerGeneratedAttribute]
public void set_ResourceFieldRef(V1ResourceFieldSelector value);
    [CompilerGeneratedAttribute]
public V1SecretKeySelector get_SecretKeyRef();
    [CompilerGeneratedAttribute]
public void set_SecretKeyRef(V1SecretKeySelector value);
    public virtual void Validate();
}
public class k8s.Models.V1EphemeralContainer : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Args>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EnvVar> <Env>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EnvFromSource> <EnvFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImagePullPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Lifecycle <Lifecycle>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Probe <LivenessProbe>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerPort> <Ports>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Probe <ReadinessProbe>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerResizePolicy> <ResizePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceRequirements <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RestartPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecurityContext <SecurityContext>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Probe <StartupProbe>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Stdin>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StdinOnce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetContainerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TerminationMessagePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TerminationMessagePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Tty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1VolumeDevice> <VolumeDevices>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1VolumeMount> <VolumeMounts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkingDir>k__BackingField;
    [JsonPropertyNameAttribute("args")]
public IList`1<string> Args { get; public set; }
    [JsonPropertyNameAttribute("command")]
public IList`1<string> Command { get; public set; }
    [JsonPropertyNameAttribute("env")]
public IList`1<V1EnvVar> Env { get; public set; }
    [JsonPropertyNameAttribute("envFrom")]
public IList`1<V1EnvFromSource> EnvFrom { get; public set; }
    [JsonPropertyNameAttribute("image")]
public string Image { get; public set; }
    [JsonPropertyNameAttribute("imagePullPolicy")]
public string ImagePullPolicy { get; public set; }
    [JsonPropertyNameAttribute("lifecycle")]
public V1Lifecycle Lifecycle { get; public set; }
    [JsonPropertyNameAttribute("livenessProbe")]
public V1Probe LivenessProbe { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<V1ContainerPort> Ports { get; public set; }
    [JsonPropertyNameAttribute("readinessProbe")]
public V1Probe ReadinessProbe { get; public set; }
    [JsonPropertyNameAttribute("resizePolicy")]
public IList`1<V1ContainerResizePolicy> ResizePolicy { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public V1ResourceRequirements Resources { get; public set; }
    [JsonPropertyNameAttribute("restartPolicy")]
public string RestartPolicy { get; public set; }
    [JsonPropertyNameAttribute("securityContext")]
public V1SecurityContext SecurityContext { get; public set; }
    [JsonPropertyNameAttribute("startupProbe")]
public V1Probe StartupProbe { get; public set; }
    [JsonPropertyNameAttribute("stdin")]
public Nullable`1<bool> Stdin { get; public set; }
    [JsonPropertyNameAttribute("stdinOnce")]
public Nullable`1<bool> StdinOnce { get; public set; }
    [JsonPropertyNameAttribute("targetContainerName")]
public string TargetContainerName { get; public set; }
    [JsonPropertyNameAttribute("terminationMessagePath")]
public string TerminationMessagePath { get; public set; }
    [JsonPropertyNameAttribute("terminationMessagePolicy")]
public string TerminationMessagePolicy { get; public set; }
    [JsonPropertyNameAttribute("tty")]
public Nullable`1<bool> Tty { get; public set; }
    [JsonPropertyNameAttribute("volumeDevices")]
public IList`1<V1VolumeDevice> VolumeDevices { get; public set; }
    [JsonPropertyNameAttribute("volumeMounts")]
public IList`1<V1VolumeMount> VolumeMounts { get; public set; }
    [JsonPropertyNameAttribute("workingDir")]
public string WorkingDir { get; public set; }
    public V1EphemeralContainer(string name, IList`1<string> args, IList`1<string> command, IList`1<V1EnvVar> env, IList`1<V1EnvFromSource> envFrom, string image, string imagePullPolicy, V1Lifecycle lifecycle, V1Probe livenessProbe, IList`1<V1ContainerPort> ports, V1Probe readinessProbe, IList`1<V1ContainerResizePolicy> resizePolicy, V1ResourceRequirements resources, string restartPolicy, V1SecurityContext securityContext, V1Probe startupProbe, Nullable`1<bool> stdin, Nullable`1<bool> stdinOnce, string targetContainerName, string terminationMessagePath, string terminationMessagePolicy, Nullable`1<bool> tty, IList`1<V1VolumeDevice> volumeDevices, IList`1<V1VolumeMount> volumeMounts, string workingDir);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Args();
    [CompilerGeneratedAttribute]
public void set_Args(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<V1EnvVar> get_Env();
    [CompilerGeneratedAttribute]
public void set_Env(IList`1<V1EnvVar> value);
    [CompilerGeneratedAttribute]
public IList`1<V1EnvFromSource> get_EnvFrom();
    [CompilerGeneratedAttribute]
public void set_EnvFrom(IList`1<V1EnvFromSource> value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_ImagePullPolicy();
    [CompilerGeneratedAttribute]
public void set_ImagePullPolicy(string value);
    [CompilerGeneratedAttribute]
public V1Lifecycle get_Lifecycle();
    [CompilerGeneratedAttribute]
public void set_Lifecycle(V1Lifecycle value);
    [CompilerGeneratedAttribute]
public V1Probe get_LivenessProbe();
    [CompilerGeneratedAttribute]
public void set_LivenessProbe(V1Probe value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerPort> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<V1ContainerPort> value);
    [CompilerGeneratedAttribute]
public V1Probe get_ReadinessProbe();
    [CompilerGeneratedAttribute]
public void set_ReadinessProbe(V1Probe value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerResizePolicy> get_ResizePolicy();
    [CompilerGeneratedAttribute]
public void set_ResizePolicy(IList`1<V1ContainerResizePolicy> value);
    [CompilerGeneratedAttribute]
public V1ResourceRequirements get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(V1ResourceRequirements value);
    [CompilerGeneratedAttribute]
public string get_RestartPolicy();
    [CompilerGeneratedAttribute]
public void set_RestartPolicy(string value);
    [CompilerGeneratedAttribute]
public V1SecurityContext get_SecurityContext();
    [CompilerGeneratedAttribute]
public void set_SecurityContext(V1SecurityContext value);
    [CompilerGeneratedAttribute]
public V1Probe get_StartupProbe();
    [CompilerGeneratedAttribute]
public void set_StartupProbe(V1Probe value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Stdin();
    [CompilerGeneratedAttribute]
public void set_Stdin(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_StdinOnce();
    [CompilerGeneratedAttribute]
public void set_StdinOnce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TargetContainerName();
    [CompilerGeneratedAttribute]
public void set_TargetContainerName(string value);
    [CompilerGeneratedAttribute]
public string get_TerminationMessagePath();
    [CompilerGeneratedAttribute]
public void set_TerminationMessagePath(string value);
    [CompilerGeneratedAttribute]
public string get_TerminationMessagePolicy();
    [CompilerGeneratedAttribute]
public void set_TerminationMessagePolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Tty();
    [CompilerGeneratedAttribute]
public void set_Tty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1VolumeDevice> get_VolumeDevices();
    [CompilerGeneratedAttribute]
public void set_VolumeDevices(IList`1<V1VolumeDevice> value);
    [CompilerGeneratedAttribute]
public IList`1<V1VolumeMount> get_VolumeMounts();
    [CompilerGeneratedAttribute]
public void set_VolumeMounts(IList`1<V1VolumeMount> value);
    [CompilerGeneratedAttribute]
public string get_WorkingDir();
    [CompilerGeneratedAttribute]
public void set_WorkingDir(string value);
    public virtual void Validate();
}
public class k8s.Models.V1EphemeralVolumeSource : object {
    [CompilerGeneratedAttribute]
private V1PersistentVolumeClaimTemplate <VolumeClaimTemplate>k__BackingField;
    [JsonPropertyNameAttribute("volumeClaimTemplate")]
public V1PersistentVolumeClaimTemplate VolumeClaimTemplate { get; public set; }
    public V1EphemeralVolumeSource(V1PersistentVolumeClaimTemplate volumeClaimTemplate);
    [CompilerGeneratedAttribute]
public V1PersistentVolumeClaimTemplate get_VolumeClaimTemplate();
    [CompilerGeneratedAttribute]
public void set_VolumeClaimTemplate(V1PersistentVolumeClaimTemplate value);
    public virtual void Validate();
}
public class k8s.Models.V1EventSource : object {
    [CompilerGeneratedAttribute]
private string <Component>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [JsonPropertyNameAttribute("component")]
public string Component { get; public set; }
    [JsonPropertyNameAttribute("host")]
public string Host { get; public set; }
    public V1EventSource(string component, string host);
    [CompilerGeneratedAttribute]
public string get_Component();
    [CompilerGeneratedAttribute]
public void set_Component(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Eviction : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DeleteOptions <DeleteOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("deleteOptions")]
public V1DeleteOptions DeleteOptions { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    public V1Eviction(string apiVersion, V1DeleteOptions deleteOptions, string kind, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public V1DeleteOptions get_DeleteOptions();
    [CompilerGeneratedAttribute]
public void set_DeleteOptions(V1DeleteOptions value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ExecAction : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Command>k__BackingField;
    [JsonPropertyNameAttribute("command")]
public IList`1<string> Command { get; public set; }
    public V1ExecAction(IList`1<string> command);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1ExemptPriorityLevelConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LendablePercent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NominalConcurrencyShares>k__BackingField;
    [JsonPropertyNameAttribute("lendablePercent")]
public Nullable`1<int> LendablePercent { get; public set; }
    [JsonPropertyNameAttribute("nominalConcurrencyShares")]
public Nullable`1<int> NominalConcurrencyShares { get; public set; }
    public V1ExemptPriorityLevelConfiguration(Nullable`1<int> lendablePercent, Nullable`1<int> nominalConcurrencyShares);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LendablePercent();
    [CompilerGeneratedAttribute]
public void set_LendablePercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NominalConcurrencyShares();
    [CompilerGeneratedAttribute]
public void set_NominalConcurrencyShares(Nullable`1<int> value);
    public virtual void Validate();
    public static V1ExemptPriorityLevelConfiguration op_Explicit(V1beta3ExemptPriorityLevelConfiguration s);
}
public class k8s.Models.V1ExpressionWarning : object {
    [CompilerGeneratedAttribute]
private string <FieldRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Warning>k__BackingField;
    [JsonPropertyNameAttribute("fieldRef")]
public string FieldRef { get; public set; }
    [JsonPropertyNameAttribute("warning")]
public string Warning { get; public set; }
    public V1ExpressionWarning(string fieldRef, string warning);
    [CompilerGeneratedAttribute]
public string get_FieldRef();
    [CompilerGeneratedAttribute]
public void set_FieldRef(string value);
    [CompilerGeneratedAttribute]
public string get_Warning();
    [CompilerGeneratedAttribute]
public void set_Warning(string value);
    public virtual void Validate();
    public static V1ExpressionWarning op_Explicit(V1alpha1ExpressionWarning s);
    public static V1ExpressionWarning op_Explicit(V1beta1ExpressionWarning s);
}
public class k8s.Models.V1ExternalDocumentation : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [JsonPropertyNameAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyNameAttribute("url")]
public string Url { get; public set; }
    public V1ExternalDocumentation(string description, string url);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    public virtual void Validate();
}
public class k8s.Models.V1FCVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Lun>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <TargetWWNs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Wwids>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("lun")]
public Nullable`1<int> Lun { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("targetWWNs")]
public IList`1<string> TargetWWNs { get; public set; }
    [JsonPropertyNameAttribute("wwids")]
public IList`1<string> Wwids { get; public set; }
    public V1FCVolumeSource(string fsType, Nullable`1<int> lun, Nullable`1<bool> readOnlyProperty, IList`1<string> targetWWNs, IList`1<string> wwids);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Lun();
    [CompilerGeneratedAttribute]
public void set_Lun(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_TargetWWNs();
    [CompilerGeneratedAttribute]
public void set_TargetWWNs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Wwids();
    [CompilerGeneratedAttribute]
public void set_Wwids(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1FieldSelectorAttributes : object {
    [CompilerGeneratedAttribute]
private string <RawSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1FieldSelectorRequirement> <Requirements>k__BackingField;
    [JsonPropertyNameAttribute("rawSelector")]
public string RawSelector { get; public set; }
    [JsonPropertyNameAttribute("requirements")]
public IList`1<V1FieldSelectorRequirement> Requirements { get; public set; }
    public V1FieldSelectorAttributes(string rawSelector, IList`1<V1FieldSelectorRequirement> requirements);
    [CompilerGeneratedAttribute]
public string get_RawSelector();
    [CompilerGeneratedAttribute]
public void set_RawSelector(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1FieldSelectorRequirement> get_Requirements();
    [CompilerGeneratedAttribute]
public void set_Requirements(IList`1<V1FieldSelectorRequirement> value);
    public virtual void Validate();
}
public class k8s.Models.V1FieldSelectorRequirement : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatorProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Values>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("operator")]
public string OperatorProperty { get; public set; }
    [JsonPropertyNameAttribute("values")]
public IList`1<string> Values { get; public set; }
    public V1FieldSelectorRequirement(string key, string operatorProperty, IList`1<string> values);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_OperatorProperty();
    [CompilerGeneratedAttribute]
public void set_OperatorProperty(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1FlexPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <SecretRef>k__BackingField;
    [JsonPropertyNameAttribute("driver")]
public string Driver { get; public set; }
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("options")]
public IDictionary`2<string, string> Options { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1SecretReference SecretRef { get; public set; }
    public V1FlexPersistentVolumeSource(string driver, string fsType, IDictionary`2<string, string> options, Nullable`1<bool> readOnlyProperty, V1SecretReference secretRef);
    [CompilerGeneratedAttribute]
public string get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(string value);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1SecretReference value);
    public virtual void Validate();
}
public class k8s.Models.V1FlexVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <SecretRef>k__BackingField;
    [JsonPropertyNameAttribute("driver")]
public string Driver { get; public set; }
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("options")]
public IDictionary`2<string, string> Options { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1LocalObjectReference SecretRef { get; public set; }
    public V1FlexVolumeSource(string driver, string fsType, IDictionary`2<string, string> options, Nullable`1<bool> readOnlyProperty, V1LocalObjectReference secretRef);
    [CompilerGeneratedAttribute]
public string get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(string value);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1LocalObjectReference value);
    public virtual void Validate();
}
public class k8s.Models.V1FlockerVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <DatasetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DatasetUUID>k__BackingField;
    [JsonPropertyNameAttribute("datasetName")]
public string DatasetName { get; public set; }
    [JsonPropertyNameAttribute("datasetUUID")]
public string DatasetUUID { get; public set; }
    public V1FlockerVolumeSource(string datasetName, string datasetUUID);
    [CompilerGeneratedAttribute]
public string get_DatasetName();
    [CompilerGeneratedAttribute]
public void set_DatasetName(string value);
    [CompilerGeneratedAttribute]
public string get_DatasetUUID();
    [CompilerGeneratedAttribute]
public void set_DatasetUUID(string value);
    public virtual void Validate();
}
public class k8s.Models.V1FlowDistinguisherMethod : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1FlowDistinguisherMethod(string type);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1FlowDistinguisherMethod op_Explicit(V1beta3FlowDistinguisherMethod s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1FlowSchema : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FlowSchemaSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FlowSchemaStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1FlowSchemaSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1FlowSchemaStatus Status { get; public set; }
    public V1FlowSchema(string apiVersion, string kind, V1ObjectMeta metadata, V1FlowSchemaSpec spec, V1FlowSchemaStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1FlowSchemaSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1FlowSchemaSpec value);
    [CompilerGeneratedAttribute]
public V1FlowSchemaStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1FlowSchemaStatus value);
    public virtual void Validate();
    public static V1FlowSchema op_Explicit(V1beta3FlowSchema s);
}
public class k8s.Models.V1FlowSchemaCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1FlowSchemaCondition(Nullable`1<DateTime> lastTransitionTime, string message, string reason, string status, string type);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1FlowSchemaCondition op_Explicit(V1beta3FlowSchemaCondition s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1FlowSchemaList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1FlowSchema> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1FlowSchema> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1FlowSchemaList(IList`1<V1FlowSchema> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1FlowSchema> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1FlowSchema> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1FlowSchemaList op_Explicit(V1beta3FlowSchemaList s);
}
public class k8s.Models.V1FlowSchemaSpec : object {
    [CompilerGeneratedAttribute]
private V1FlowDistinguisherMethod <DistinguisherMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MatchingPrecedence>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PriorityLevelConfigurationReference <PriorityLevelConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PolicyRulesWithSubjects> <Rules>k__BackingField;
    [JsonPropertyNameAttribute("distinguisherMethod")]
public V1FlowDistinguisherMethod DistinguisherMethod { get; public set; }
    [JsonPropertyNameAttribute("matchingPrecedence")]
public Nullable`1<int> MatchingPrecedence { get; public set; }
    [JsonPropertyNameAttribute("priorityLevelConfiguration")]
public V1PriorityLevelConfigurationReference PriorityLevelConfiguration { get; public set; }
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1PolicyRulesWithSubjects> Rules { get; public set; }
    public V1FlowSchemaSpec(V1PriorityLevelConfigurationReference priorityLevelConfiguration, V1FlowDistinguisherMethod distinguisherMethod, Nullable`1<int> matchingPrecedence, IList`1<V1PolicyRulesWithSubjects> rules);
    [CompilerGeneratedAttribute]
public V1FlowDistinguisherMethod get_DistinguisherMethod();
    [CompilerGeneratedAttribute]
public void set_DistinguisherMethod(V1FlowDistinguisherMethod value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MatchingPrecedence();
    [CompilerGeneratedAttribute]
public void set_MatchingPrecedence(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1PriorityLevelConfigurationReference get_PriorityLevelConfiguration();
    [CompilerGeneratedAttribute]
public void set_PriorityLevelConfiguration(V1PriorityLevelConfigurationReference value);
    [CompilerGeneratedAttribute]
public IList`1<V1PolicyRulesWithSubjects> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1PolicyRulesWithSubjects> value);
    public virtual void Validate();
    public static V1FlowSchemaSpec op_Explicit(V1beta3FlowSchemaSpec s);
}
public class k8s.Models.V1FlowSchemaStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1FlowSchemaCondition> <Conditions>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1FlowSchemaCondition> Conditions { get; public set; }
    public V1FlowSchemaStatus(IList`1<V1FlowSchemaCondition> conditions);
    [CompilerGeneratedAttribute]
public IList`1<V1FlowSchemaCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1FlowSchemaCondition> value);
    public virtual void Validate();
    public static V1FlowSchemaStatus op_Explicit(V1beta3FlowSchemaStatus s);
}
public class k8s.Models.V1ForZone : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1ForZone(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1GCEPersistentDiskVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PdName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("partition")]
public Nullable`1<int> Partition { get; public set; }
    [JsonPropertyNameAttribute("pdName")]
public string PdName { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    public V1GCEPersistentDiskVolumeSource(string pdName, string fsType, Nullable`1<int> partition, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PdName();
    [CompilerGeneratedAttribute]
public void set_PdName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1GitRepoVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Directory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Revision>k__BackingField;
    [JsonPropertyNameAttribute("directory")]
public string Directory { get; public set; }
    [JsonPropertyNameAttribute("repository")]
public string Repository { get; public set; }
    [JsonPropertyNameAttribute("revision")]
public string Revision { get; public set; }
    public V1GitRepoVolumeSource(string repository, string directory, string revision);
    [CompilerGeneratedAttribute]
public string get_Directory();
    [CompilerGeneratedAttribute]
public void set_Directory(string value);
    [CompilerGeneratedAttribute]
public string get_Repository();
    [CompilerGeneratedAttribute]
public void set_Repository(string value);
    [CompilerGeneratedAttribute]
public string get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(string value);
    public virtual void Validate();
}
public class k8s.Models.V1GlusterfsPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointsNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [JsonPropertyNameAttribute("endpoints")]
public string Endpoints { get; public set; }
    [JsonPropertyNameAttribute("endpointsNamespace")]
public string EndpointsNamespace { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    public V1GlusterfsPersistentVolumeSource(string endpoints, string path, string endpointsNamespace, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(string value);
    [CompilerGeneratedAttribute]
public string get_EndpointsNamespace();
    [CompilerGeneratedAttribute]
public void set_EndpointsNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1GlusterfsVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [JsonPropertyNameAttribute("endpoints")]
public string Endpoints { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    public V1GlusterfsVolumeSource(string endpoints, string path, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1GroupSubject : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1GroupSubject(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1GroupSubject op_Explicit(V1beta3GroupSubject s);
}
public class k8s.Models.V1GroupVersionForDiscovery : object {
    [CompilerGeneratedAttribute]
private string <GroupVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyNameAttribute("groupVersion")]
public string GroupVersion { get; public set; }
    [JsonPropertyNameAttribute("version")]
public string Version { get; public set; }
    public V1GroupVersionForDiscovery(string groupVersion, string version);
    [CompilerGeneratedAttribute]
public string get_GroupVersion();
    [CompilerGeneratedAttribute]
public void set_GroupVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual void Validate();
}
public class k8s.Models.V1GRPCAction : object {
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [JsonPropertyNameAttribute("port")]
public int Port { get; public set; }
    [JsonPropertyNameAttribute("service")]
public string Service { get; public set; }
    public V1GRPCAction(int port, string service);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1HorizontalPodAutoscaler : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1HorizontalPodAutoscalerSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1HorizontalPodAutoscalerStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1HorizontalPodAutoscalerSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1HorizontalPodAutoscalerStatus Status { get; public set; }
    public V1HorizontalPodAutoscaler(string apiVersion, string kind, V1ObjectMeta metadata, V1HorizontalPodAutoscalerSpec spec, V1HorizontalPodAutoscalerStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1HorizontalPodAutoscalerSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1HorizontalPodAutoscalerSpec value);
    [CompilerGeneratedAttribute]
public V1HorizontalPodAutoscalerStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1HorizontalPodAutoscalerStatus value);
    public virtual void Validate();
    public static V1HorizontalPodAutoscaler op_Explicit(V2HorizontalPodAutoscaler s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1HorizontalPodAutoscalerList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1HorizontalPodAutoscaler> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1HorizontalPodAutoscaler> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1HorizontalPodAutoscalerList(IList`1<V1HorizontalPodAutoscaler> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1HorizontalPodAutoscaler> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1HorizontalPodAutoscaler> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1HorizontalPodAutoscalerList op_Explicit(V2HorizontalPodAutoscalerList s);
}
public class k8s.Models.V1HorizontalPodAutoscalerSpec : object {
    [CompilerGeneratedAttribute]
private int <MaxReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CrossVersionObjectReference <ScaleTargetRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TargetCPUUtilizationPercentage>k__BackingField;
    [JsonPropertyNameAttribute("maxReplicas")]
public int MaxReplicas { get; public set; }
    [JsonPropertyNameAttribute("minReplicas")]
public Nullable`1<int> MinReplicas { get; public set; }
    [JsonPropertyNameAttribute("scaleTargetRef")]
public V1CrossVersionObjectReference ScaleTargetRef { get; public set; }
    [JsonPropertyNameAttribute("targetCPUUtilizationPercentage")]
public Nullable`1<int> TargetCPUUtilizationPercentage { get; public set; }
    public V1HorizontalPodAutoscalerSpec(int maxReplicas, V1CrossVersionObjectReference scaleTargetRef, Nullable`1<int> minReplicas, Nullable`1<int> targetCPUUtilizationPercentage);
    [CompilerGeneratedAttribute]
public int get_MaxReplicas();
    [CompilerGeneratedAttribute]
public void set_MaxReplicas(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinReplicas();
    [CompilerGeneratedAttribute]
public void set_MinReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1CrossVersionObjectReference get_ScaleTargetRef();
    [CompilerGeneratedAttribute]
public void set_ScaleTargetRef(V1CrossVersionObjectReference value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TargetCPUUtilizationPercentage();
    [CompilerGeneratedAttribute]
public void set_TargetCPUUtilizationPercentage(Nullable`1<int> value);
    public virtual void Validate();
    public static V1HorizontalPodAutoscalerSpec op_Explicit(V2HorizontalPodAutoscalerSpec s);
}
public class k8s.Models.V1HorizontalPodAutoscalerStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CurrentCPUUtilizationPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DesiredReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastScaleTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [JsonPropertyNameAttribute("currentCPUUtilizationPercentage")]
public Nullable`1<int> CurrentCPUUtilizationPercentage { get; public set; }
    [JsonPropertyNameAttribute("currentReplicas")]
public int CurrentReplicas { get; public set; }
    [JsonPropertyNameAttribute("desiredReplicas")]
public int DesiredReplicas { get; public set; }
    [JsonPropertyNameAttribute("lastScaleTime")]
public Nullable`1<DateTime> LastScaleTime { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    public V1HorizontalPodAutoscalerStatus(int currentReplicas, int desiredReplicas, Nullable`1<int> currentCPUUtilizationPercentage, Nullable`1<DateTime> lastScaleTime, Nullable`1<long> observedGeneration);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CurrentCPUUtilizationPercentage();
    [CompilerGeneratedAttribute]
public void set_CurrentCPUUtilizationPercentage(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_CurrentReplicas();
    [CompilerGeneratedAttribute]
public void set_CurrentReplicas(int value);
    [CompilerGeneratedAttribute]
public int get_DesiredReplicas();
    [CompilerGeneratedAttribute]
public void set_DesiredReplicas(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastScaleTime();
    [CompilerGeneratedAttribute]
public void set_LastScaleTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    public virtual void Validate();
    public static V1HorizontalPodAutoscalerStatus op_Explicit(V2HorizontalPodAutoscalerStatus s);
}
public class k8s.Models.V1HostAlias : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Hostnames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [JsonPropertyNameAttribute("hostnames")]
public IList`1<string> Hostnames { get; public set; }
    [JsonPropertyNameAttribute("ip")]
public string Ip { get; public set; }
    public V1HostAlias(string ip, IList`1<string> hostnames);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Hostnames();
    [CompilerGeneratedAttribute]
public void set_Hostnames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    public virtual void Validate();
}
public class k8s.Models.V1HostIP : object {
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [JsonPropertyNameAttribute("ip")]
public string Ip { get; public set; }
    public V1HostIP(string ip);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    public virtual void Validate();
}
public class k8s.Models.V1HostPathVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1HostPathVolumeSource(string path, string type);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1HTTPGetAction : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1HTTPHeader> <HttpHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private IntstrIntOrString <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [JsonPropertyNameAttribute("host")]
public string Host { get; public set; }
    [JsonPropertyNameAttribute("httpHeaders")]
public IList`1<V1HTTPHeader> HttpHeaders { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("port")]
public IntstrIntOrString Port { get; public set; }
    [JsonPropertyNameAttribute("scheme")]
public string Scheme { get; public set; }
    public V1HTTPGetAction(IntstrIntOrString port, string host, IList`1<V1HTTPHeader> httpHeaders, string path, string scheme);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1HTTPHeader> get_HttpHeaders();
    [CompilerGeneratedAttribute]
public void set_HttpHeaders(IList`1<V1HTTPHeader> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(IntstrIntOrString value);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    public virtual void Validate();
}
public class k8s.Models.V1HTTPHeader : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    public V1HTTPHeader(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
public class k8s.Models.V1HTTPIngressPath : object {
    [CompilerGeneratedAttribute]
private V1IngressBackend <Backend>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathType>k__BackingField;
    [JsonPropertyNameAttribute("backend")]
public V1IngressBackend Backend { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("pathType")]
public string PathType { get; public set; }
    public V1HTTPIngressPath(V1IngressBackend backend, string pathType, string path);
    [CompilerGeneratedAttribute]
public V1IngressBackend get_Backend();
    [CompilerGeneratedAttribute]
public void set_Backend(V1IngressBackend value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_PathType();
    [CompilerGeneratedAttribute]
public void set_PathType(string value);
    public virtual void Validate();
}
public class k8s.Models.V1HTTPIngressRuleValue : object {
    [CompilerGeneratedAttribute]
private IList`1<V1HTTPIngressPath> <Paths>k__BackingField;
    [JsonPropertyNameAttribute("paths")]
public IList`1<V1HTTPIngressPath> Paths { get; public set; }
    public V1HTTPIngressRuleValue(IList`1<V1HTTPIngressPath> paths);
    [CompilerGeneratedAttribute]
public IList`1<V1HTTPIngressPath> get_Paths();
    [CompilerGeneratedAttribute]
public void set_Paths(IList`1<V1HTTPIngressPath> value);
    public virtual void Validate();
}
public class k8s.Models.V1ImageVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <PullPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reference>k__BackingField;
    [JsonPropertyNameAttribute("pullPolicy")]
public string PullPolicy { get; public set; }
    [JsonPropertyNameAttribute("reference")]
public string Reference { get; public set; }
    public V1ImageVolumeSource(string pullPolicy, string reference);
    [CompilerGeneratedAttribute]
public string get_PullPolicy();
    [CompilerGeneratedAttribute]
public void set_PullPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_Reference();
    [CompilerGeneratedAttribute]
public void set_Reference(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Ingress : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1IngressSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1IngressStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1IngressSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1IngressStatus Status { get; public set; }
    public V1Ingress(string apiVersion, string kind, V1ObjectMeta metadata, V1IngressSpec spec, V1IngressStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1IngressSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1IngressSpec value);
    [CompilerGeneratedAttribute]
public V1IngressStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1IngressStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressBackend : object {
    [CompilerGeneratedAttribute]
private V1TypedLocalObjectReference <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private V1IngressServiceBackend <Service>k__BackingField;
    [JsonPropertyNameAttribute("resource")]
public V1TypedLocalObjectReference Resource { get; public set; }
    [JsonPropertyNameAttribute("service")]
public V1IngressServiceBackend Service { get; public set; }
    public V1IngressBackend(V1TypedLocalObjectReference resource, V1IngressServiceBackend service);
    [CompilerGeneratedAttribute]
public V1TypedLocalObjectReference get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(V1TypedLocalObjectReference value);
    [CompilerGeneratedAttribute]
public V1IngressServiceBackend get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(V1IngressServiceBackend value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1IngressClass : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1IngressClassSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1IngressClassSpec Spec { get; public set; }
    public V1IngressClass(string apiVersion, string kind, V1ObjectMeta metadata, V1IngressClassSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1IngressClassSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1IngressClassSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1IngressClassList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1IngressClass> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1IngressClass> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1IngressClassList(IList`1<V1IngressClass> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1IngressClass> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1IngressClass> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressClassParametersReference : object {
    [CompilerGeneratedAttribute]
private string <ApiGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonPropertyNameAttribute("apiGroup")]
public string ApiGroup { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("scope")]
public string Scope { get; public set; }
    public V1IngressClassParametersReference(string kind, string name, string apiGroup, string namespaceProperty, string scope);
    [CompilerGeneratedAttribute]
public string get_ApiGroup();
    [CompilerGeneratedAttribute]
public void set_ApiGroup(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressClassSpec : object {
    [CompilerGeneratedAttribute]
private string <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private V1IngressClassParametersReference <Parameters>k__BackingField;
    [JsonPropertyNameAttribute("controller")]
public string Controller { get; public set; }
    [JsonPropertyNameAttribute("parameters")]
public V1IngressClassParametersReference Parameters { get; public set; }
    public V1IngressClassSpec(string controller, V1IngressClassParametersReference parameters);
    [CompilerGeneratedAttribute]
public string get_Controller();
    [CompilerGeneratedAttribute]
public void set_Controller(string value);
    [CompilerGeneratedAttribute]
public V1IngressClassParametersReference get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(V1IngressClassParametersReference value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1IngressList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Ingress> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Ingress> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1IngressList(IList`1<V1Ingress> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Ingress> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Ingress> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressLoadBalancerIngress : object {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1IngressPortStatus> <Ports>k__BackingField;
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("ip")]
public string Ip { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<V1IngressPortStatus> Ports { get; public set; }
    public V1IngressLoadBalancerIngress(string hostname, string ip, IList`1<V1IngressPortStatus> ports);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1IngressPortStatus> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<V1IngressPortStatus> value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressLoadBalancerStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1IngressLoadBalancerIngress> <Ingress>k__BackingField;
    [JsonPropertyNameAttribute("ingress")]
public IList`1<V1IngressLoadBalancerIngress> Ingress { get; public set; }
    public V1IngressLoadBalancerStatus(IList`1<V1IngressLoadBalancerIngress> ingress);
    [CompilerGeneratedAttribute]
public IList`1<V1IngressLoadBalancerIngress> get_Ingress();
    [CompilerGeneratedAttribute]
public void set_Ingress(IList`1<V1IngressLoadBalancerIngress> value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressPortStatus : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [JsonPropertyNameAttribute("error")]
public string Error { get; public set; }
    [JsonPropertyNameAttribute("port")]
public int Port { get; public set; }
    [JsonPropertyNameAttribute("protocol")]
public string Protocol { get; public set; }
    public V1IngressPortStatus(int port, string protocol, string error);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressRule : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private V1HTTPIngressRuleValue <Http>k__BackingField;
    [JsonPropertyNameAttribute("host")]
public string Host { get; public set; }
    [JsonPropertyNameAttribute("http")]
public V1HTTPIngressRuleValue Http { get; public set; }
    public V1IngressRule(string host, V1HTTPIngressRuleValue http);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public V1HTTPIngressRuleValue get_Http();
    [CompilerGeneratedAttribute]
public void set_Http(V1HTTPIngressRuleValue value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressServiceBackend : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ServiceBackendPort <Port>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("port")]
public V1ServiceBackendPort Port { get; public set; }
    public V1IngressServiceBackend(string name, V1ServiceBackendPort port);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V1ServiceBackendPort get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(V1ServiceBackendPort value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressSpec : object {
    [CompilerGeneratedAttribute]
private V1IngressBackend <DefaultBackend>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IngressClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1IngressRule> <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1IngressTLS> <Tls>k__BackingField;
    [JsonPropertyNameAttribute("defaultBackend")]
public V1IngressBackend DefaultBackend { get; public set; }
    [JsonPropertyNameAttribute("ingressClassName")]
public string IngressClassName { get; public set; }
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1IngressRule> Rules { get; public set; }
    [JsonPropertyNameAttribute("tls")]
public IList`1<V1IngressTLS> Tls { get; public set; }
    public V1IngressSpec(V1IngressBackend defaultBackend, string ingressClassName, IList`1<V1IngressRule> rules, IList`1<V1IngressTLS> tls);
    [CompilerGeneratedAttribute]
public V1IngressBackend get_DefaultBackend();
    [CompilerGeneratedAttribute]
public void set_DefaultBackend(V1IngressBackend value);
    [CompilerGeneratedAttribute]
public string get_IngressClassName();
    [CompilerGeneratedAttribute]
public void set_IngressClassName(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1IngressRule> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1IngressRule> value);
    [CompilerGeneratedAttribute]
public IList`1<V1IngressTLS> get_Tls();
    [CompilerGeneratedAttribute]
public void set_Tls(IList`1<V1IngressTLS> value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressStatus : object {
    [CompilerGeneratedAttribute]
private V1IngressLoadBalancerStatus <LoadBalancer>k__BackingField;
    [JsonPropertyNameAttribute("loadBalancer")]
public V1IngressLoadBalancerStatus LoadBalancer { get; public set; }
    public V1IngressStatus(V1IngressLoadBalancerStatus loadBalancer);
    [CompilerGeneratedAttribute]
public V1IngressLoadBalancerStatus get_LoadBalancer();
    [CompilerGeneratedAttribute]
public void set_LoadBalancer(V1IngressLoadBalancerStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1IngressTLS : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Hosts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretName>k__BackingField;
    [JsonPropertyNameAttribute("hosts")]
public IList`1<string> Hosts { get; public set; }
    [JsonPropertyNameAttribute("secretName")]
public string SecretName { get; public set; }
    public V1IngressTLS(IList`1<string> hosts, string secretName);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Hosts();
    [CompilerGeneratedAttribute]
public void set_Hosts(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SecretName();
    [CompilerGeneratedAttribute]
public void set_SecretName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1IPBlock : object {
    [CompilerGeneratedAttribute]
private string <Cidr>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Except>k__BackingField;
    [JsonPropertyNameAttribute("cidr")]
public string Cidr { get; public set; }
    [JsonPropertyNameAttribute("except")]
public IList`1<string> Except { get; public set; }
    public V1IPBlock(string cidr, IList`1<string> except);
    [CompilerGeneratedAttribute]
public string get_Cidr();
    [CompilerGeneratedAttribute]
public void set_Cidr(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Except();
    [CompilerGeneratedAttribute]
public void set_Except(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1ISCSIPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ChapAuthDiscovery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ChapAuthSession>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitiatorName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Iqn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IscsiInterface>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lun>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Portals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetPortal>k__BackingField;
    [JsonPropertyNameAttribute("chapAuthDiscovery")]
public Nullable`1<bool> ChapAuthDiscovery { get; public set; }
    [JsonPropertyNameAttribute("chapAuthSession")]
public Nullable`1<bool> ChapAuthSession { get; public set; }
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("initiatorName")]
public string InitiatorName { get; public set; }
    [JsonPropertyNameAttribute("iqn")]
public string Iqn { get; public set; }
    [JsonPropertyNameAttribute("iscsiInterface")]
public string IscsiInterface { get; public set; }
    [JsonPropertyNameAttribute("lun")]
public int Lun { get; public set; }
    [JsonPropertyNameAttribute("portals")]
public IList`1<string> Portals { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1SecretReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("targetPortal")]
public string TargetPortal { get; public set; }
    public V1ISCSIPersistentVolumeSource(string iqn, int lun, string targetPortal, Nullable`1<bool> chapAuthDiscovery, Nullable`1<bool> chapAuthSession, string fsType, string initiatorName, string iscsiInterface, IList`1<string> portals, Nullable`1<bool> readOnlyProperty, V1SecretReference secretRef);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ChapAuthDiscovery();
    [CompilerGeneratedAttribute]
public void set_ChapAuthDiscovery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ChapAuthSession();
    [CompilerGeneratedAttribute]
public void set_ChapAuthSession(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_InitiatorName();
    [CompilerGeneratedAttribute]
public void set_InitiatorName(string value);
    [CompilerGeneratedAttribute]
public string get_Iqn();
    [CompilerGeneratedAttribute]
public void set_Iqn(string value);
    [CompilerGeneratedAttribute]
public string get_IscsiInterface();
    [CompilerGeneratedAttribute]
public void set_IscsiInterface(string value);
    [CompilerGeneratedAttribute]
public int get_Lun();
    [CompilerGeneratedAttribute]
public void set_Lun(int value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Portals();
    [CompilerGeneratedAttribute]
public void set_Portals(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public string get_TargetPortal();
    [CompilerGeneratedAttribute]
public void set_TargetPortal(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ISCSIVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ChapAuthDiscovery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ChapAuthSession>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitiatorName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Iqn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IscsiInterface>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lun>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Portals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetPortal>k__BackingField;
    [JsonPropertyNameAttribute("chapAuthDiscovery")]
public Nullable`1<bool> ChapAuthDiscovery { get; public set; }
    [JsonPropertyNameAttribute("chapAuthSession")]
public Nullable`1<bool> ChapAuthSession { get; public set; }
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("initiatorName")]
public string InitiatorName { get; public set; }
    [JsonPropertyNameAttribute("iqn")]
public string Iqn { get; public set; }
    [JsonPropertyNameAttribute("iscsiInterface")]
public string IscsiInterface { get; public set; }
    [JsonPropertyNameAttribute("lun")]
public int Lun { get; public set; }
    [JsonPropertyNameAttribute("portals")]
public IList`1<string> Portals { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1LocalObjectReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("targetPortal")]
public string TargetPortal { get; public set; }
    public V1ISCSIVolumeSource(string iqn, int lun, string targetPortal, Nullable`1<bool> chapAuthDiscovery, Nullable`1<bool> chapAuthSession, string fsType, string initiatorName, string iscsiInterface, IList`1<string> portals, Nullable`1<bool> readOnlyProperty, V1LocalObjectReference secretRef);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ChapAuthDiscovery();
    [CompilerGeneratedAttribute]
public void set_ChapAuthDiscovery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ChapAuthSession();
    [CompilerGeneratedAttribute]
public void set_ChapAuthSession(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_InitiatorName();
    [CompilerGeneratedAttribute]
public void set_InitiatorName(string value);
    [CompilerGeneratedAttribute]
public string get_Iqn();
    [CompilerGeneratedAttribute]
public void set_Iqn(string value);
    [CompilerGeneratedAttribute]
public string get_IscsiInterface();
    [CompilerGeneratedAttribute]
public void set_IscsiInterface(string value);
    [CompilerGeneratedAttribute]
public int get_Lun();
    [CompilerGeneratedAttribute]
public void set_Lun(int value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Portals();
    [CompilerGeneratedAttribute]
public void set_Portals(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1LocalObjectReference value);
    [CompilerGeneratedAttribute]
public string get_TargetPortal();
    [CompilerGeneratedAttribute]
public void set_TargetPortal(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Job : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1JobSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1JobStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1JobSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1JobStatus Status { get; public set; }
    public V1Job(string apiVersion, string kind, V1ObjectMeta metadata, V1JobSpec spec, V1JobStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1JobSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1JobSpec value);
    [CompilerGeneratedAttribute]
public V1JobStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1JobStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1JobCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastProbeTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastProbeTime")]
public Nullable`1<DateTime> LastProbeTime { get; public set; }
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1JobCondition(string status, string type, Nullable`1<DateTime> lastProbeTime, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastProbeTime();
    [CompilerGeneratedAttribute]
public void set_LastProbeTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1JobList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Job> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Job> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1JobList(IList`1<V1Job> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Job> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Job> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1JobSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ActiveDeadlineSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BackoffLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BackoffLimitPerIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CompletionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Completions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManagedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ManualSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxFailedIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Parallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodFailurePolicy <PodFailurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PodReplacementPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SuccessPolicy <SuccessPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Suspend>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodTemplateSpec <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TtlSecondsAfterFinished>k__BackingField;
    [JsonPropertyNameAttribute("activeDeadlineSeconds")]
public Nullable`1<long> ActiveDeadlineSeconds { get; public set; }
    [JsonPropertyNameAttribute("backoffLimit")]
public Nullable`1<int> BackoffLimit { get; public set; }
    [JsonPropertyNameAttribute("backoffLimitPerIndex")]
public Nullable`1<int> BackoffLimitPerIndex { get; public set; }
    [JsonPropertyNameAttribute("completionMode")]
public string CompletionMode { get; public set; }
    [JsonPropertyNameAttribute("completions")]
public Nullable`1<int> Completions { get; public set; }
    [JsonPropertyNameAttribute("managedBy")]
public string ManagedBy { get; public set; }
    [JsonPropertyNameAttribute("manualSelector")]
public Nullable`1<bool> ManualSelector { get; public set; }
    [JsonPropertyNameAttribute("maxFailedIndexes")]
public Nullable`1<int> MaxFailedIndexes { get; public set; }
    [JsonPropertyNameAttribute("parallelism")]
public Nullable`1<int> Parallelism { get; public set; }
    [JsonPropertyNameAttribute("podFailurePolicy")]
public V1PodFailurePolicy PodFailurePolicy { get; public set; }
    [JsonPropertyNameAttribute("podReplacementPolicy")]
public string PodReplacementPolicy { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    [JsonPropertyNameAttribute("successPolicy")]
public V1SuccessPolicy SuccessPolicy { get; public set; }
    [JsonPropertyNameAttribute("suspend")]
public Nullable`1<bool> Suspend { get; public set; }
    [JsonPropertyNameAttribute("template")]
public V1PodTemplateSpec Template { get; public set; }
    [JsonPropertyNameAttribute("ttlSecondsAfterFinished")]
public Nullable`1<int> TtlSecondsAfterFinished { get; public set; }
    public V1JobSpec(V1PodTemplateSpec template, Nullable`1<long> activeDeadlineSeconds, Nullable`1<int> backoffLimit, Nullable`1<int> backoffLimitPerIndex, string completionMode, Nullable`1<int> completions, string managedBy, Nullable`1<bool> manualSelector, Nullable`1<int> maxFailedIndexes, Nullable`1<int> parallelism, V1PodFailurePolicy podFailurePolicy, string podReplacementPolicy, V1LabelSelector selector, V1SuccessPolicy successPolicy, Nullable`1<bool> suspend, Nullable`1<int> ttlSecondsAfterFinished);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ActiveDeadlineSeconds();
    [CompilerGeneratedAttribute]
public void set_ActiveDeadlineSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BackoffLimit();
    [CompilerGeneratedAttribute]
public void set_BackoffLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BackoffLimitPerIndex();
    [CompilerGeneratedAttribute]
public void set_BackoffLimitPerIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_CompletionMode();
    [CompilerGeneratedAttribute]
public void set_CompletionMode(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Completions();
    [CompilerGeneratedAttribute]
public void set_Completions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ManagedBy();
    [CompilerGeneratedAttribute]
public void set_ManagedBy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ManualSelector();
    [CompilerGeneratedAttribute]
public void set_ManualSelector(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxFailedIndexes();
    [CompilerGeneratedAttribute]
public void set_MaxFailedIndexes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Parallelism();
    [CompilerGeneratedAttribute]
public void set_Parallelism(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1PodFailurePolicy get_PodFailurePolicy();
    [CompilerGeneratedAttribute]
public void set_PodFailurePolicy(V1PodFailurePolicy value);
    [CompilerGeneratedAttribute]
public string get_PodReplacementPolicy();
    [CompilerGeneratedAttribute]
public void set_PodReplacementPolicy(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1SuccessPolicy get_SuccessPolicy();
    [CompilerGeneratedAttribute]
public void set_SuccessPolicy(V1SuccessPolicy value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Suspend();
    [CompilerGeneratedAttribute]
public void set_Suspend(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1PodTemplateSpec get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(V1PodTemplateSpec value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TtlSecondsAfterFinished();
    [CompilerGeneratedAttribute]
public void set_TtlSecondsAfterFinished(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1JobStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CompletedIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CompletionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1JobCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailedIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Ready>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Terminating>k__BackingField;
    [CompilerGeneratedAttribute]
private V1UncountedTerminatedPods <UncountedTerminatedPods>k__BackingField;
    [JsonPropertyNameAttribute("active")]
public Nullable`1<int> Active { get; public set; }
    [JsonPropertyNameAttribute("completedIndexes")]
public string CompletedIndexes { get; public set; }
    [JsonPropertyNameAttribute("completionTime")]
public Nullable`1<DateTime> CompletionTime { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1JobCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("failed")]
public Nullable`1<int> Failed { get; public set; }
    [JsonPropertyNameAttribute("failedIndexes")]
public string FailedIndexes { get; public set; }
    [JsonPropertyNameAttribute("ready")]
public Nullable`1<int> Ready { get; public set; }
    [JsonPropertyNameAttribute("startTime")]
public Nullable`1<DateTime> StartTime { get; public set; }
    [JsonPropertyNameAttribute("succeeded")]
public Nullable`1<int> Succeeded { get; public set; }
    [JsonPropertyNameAttribute("terminating")]
public Nullable`1<int> Terminating { get; public set; }
    [JsonPropertyNameAttribute("uncountedTerminatedPods")]
public V1UncountedTerminatedPods UncountedTerminatedPods { get; public set; }
    public V1JobStatus(Nullable`1<int> active, string completedIndexes, Nullable`1<DateTime> completionTime, IList`1<V1JobCondition> conditions, Nullable`1<int> failed, string failedIndexes, Nullable`1<int> ready, Nullable`1<DateTime> startTime, Nullable`1<int> succeeded, Nullable`1<int> terminating, V1UncountedTerminatedPods uncountedTerminatedPods);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_CompletedIndexes();
    [CompilerGeneratedAttribute]
public void set_CompletedIndexes(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CompletionTime();
    [CompilerGeneratedAttribute]
public void set_CompletionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public IList`1<V1JobCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1JobCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Failed();
    [CompilerGeneratedAttribute]
public void set_Failed(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_FailedIndexes();
    [CompilerGeneratedAttribute]
public void set_FailedIndexes(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Ready();
    [CompilerGeneratedAttribute]
public void set_Ready(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Succeeded();
    [CompilerGeneratedAttribute]
public void set_Succeeded(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Terminating();
    [CompilerGeneratedAttribute]
public void set_Terminating(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1UncountedTerminatedPods get_UncountedTerminatedPods();
    [CompilerGeneratedAttribute]
public void set_UncountedTerminatedPods(V1UncountedTerminatedPods value);
    public virtual void Validate();
}
public class k8s.Models.V1JobTemplateSpec : object {
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1JobSpec <Spec>k__BackingField;
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1JobSpec Spec { get; public set; }
    public V1JobTemplateSpec(V1ObjectMeta metadata, V1JobSpec spec);
    [CompilerGeneratedAttribute]
public V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1JobSpec get_Spec();
    [CompilerGeneratedAttribute]
public void set_Spec(V1JobSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1JSONSchemaProps : object {
    [CompilerGeneratedAttribute]
private string <RefProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private object <AdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private object <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1JSONSchemaProps> <AllOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1JSONSchemaProps> <AnyOf>k__BackingField;
    [CompilerGeneratedAttribute]
private object <DefaultProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, V1JSONSchemaProps> <Definitions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Dependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<object> <EnumProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Example>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExclusiveMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExclusiveMinimum>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ExternalDocumentation <ExternalDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MultipleOf>k__BackingField;
    [CompilerGeneratedAttribute]
private V1JSONSchemaProps <Not>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Nullable>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1JSONSchemaProps> <OneOf>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, V1JSONSchemaProps> <PatternProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, V1JSONSchemaProps> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UniqueItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <XKubernetesEmbeddedResource>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <XKubernetesIntOrString>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <XKubernetesListMapKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XKubernetesListType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XKubernetesMapType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <XKubernetesPreserveUnknownFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ValidationRule> <XKubernetesValidations>k__BackingField;
    [JsonPropertyNameAttribute("$ref")]
public string RefProperty { get; public set; }
    [JsonPropertyNameAttribute("$schema")]
public string Schema { get; public set; }
    [JsonPropertyNameAttribute("additionalItems")]
public object AdditionalItems { get; public set; }
    [JsonPropertyNameAttribute("additionalProperties")]
public object AdditionalProperties { get; public set; }
    [JsonPropertyNameAttribute("allOf")]
public IList`1<V1JSONSchemaProps> AllOf { get; public set; }
    [JsonPropertyNameAttribute("anyOf")]
public IList`1<V1JSONSchemaProps> AnyOf { get; public set; }
    [JsonPropertyNameAttribute("default")]
public object DefaultProperty { get; public set; }
    [JsonPropertyNameAttribute("definitions")]
public IDictionary`2<string, V1JSONSchemaProps> Definitions { get; public set; }
    [JsonPropertyNameAttribute("dependencies")]
public IDictionary`2<string, object> Dependencies { get; public set; }
    [JsonPropertyNameAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyNameAttribute("enum")]
public IList`1<object> EnumProperty { get; public set; }
    [JsonPropertyNameAttribute("example")]
public object Example { get; public set; }
    [JsonPropertyNameAttribute("exclusiveMaximum")]
public Nullable`1<bool> ExclusiveMaximum { get; public set; }
    [JsonPropertyNameAttribute("exclusiveMinimum")]
public Nullable`1<bool> ExclusiveMinimum { get; public set; }
    [JsonPropertyNameAttribute("externalDocs")]
public V1ExternalDocumentation ExternalDocs { get; public set; }
    [JsonPropertyNameAttribute("format")]
public string Format { get; public set; }
    [JsonPropertyNameAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyNameAttribute("items")]
public object Items { get; public set; }
    [JsonPropertyNameAttribute("maxItems")]
public Nullable`1<long> MaxItems { get; public set; }
    [JsonPropertyNameAttribute("maxLength")]
public Nullable`1<long> MaxLength { get; public set; }
    [JsonPropertyNameAttribute("maxProperties")]
public Nullable`1<long> MaxProperties { get; public set; }
    [JsonPropertyNameAttribute("maximum")]
public Nullable`1<double> Maximum { get; public set; }
    [JsonPropertyNameAttribute("minItems")]
public Nullable`1<long> MinItems { get; public set; }
    [JsonPropertyNameAttribute("minLength")]
public Nullable`1<long> MinLength { get; public set; }
    [JsonPropertyNameAttribute("minProperties")]
public Nullable`1<long> MinProperties { get; public set; }
    [JsonPropertyNameAttribute("minimum")]
public Nullable`1<double> Minimum { get; public set; }
    [JsonPropertyNameAttribute("multipleOf")]
public Nullable`1<double> MultipleOf { get; public set; }
    [JsonPropertyNameAttribute("not")]
public V1JSONSchemaProps Not { get; public set; }
    [JsonPropertyNameAttribute("nullable")]
public Nullable`1<bool> Nullable { get; public set; }
    [JsonPropertyNameAttribute("oneOf")]
public IList`1<V1JSONSchemaProps> OneOf { get; public set; }
    [JsonPropertyNameAttribute("pattern")]
public string Pattern { get; public set; }
    [JsonPropertyNameAttribute("patternProperties")]
public IDictionary`2<string, V1JSONSchemaProps> PatternProperties { get; public set; }
    [JsonPropertyNameAttribute("properties")]
public IDictionary`2<string, V1JSONSchemaProps> Properties { get; public set; }
    [JsonPropertyNameAttribute("required")]
public IList`1<string> Required { get; public set; }
    [JsonPropertyNameAttribute("title")]
public string Title { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyNameAttribute("uniqueItems")]
public Nullable`1<bool> UniqueItems { get; public set; }
    [JsonPropertyNameAttribute("x-kubernetes-embedded-resource")]
public Nullable`1<bool> XKubernetesEmbeddedResource { get; public set; }
    [JsonPropertyNameAttribute("x-kubernetes-int-or-string")]
public Nullable`1<bool> XKubernetesIntOrString { get; public set; }
    [JsonPropertyNameAttribute("x-kubernetes-list-map-keys")]
public IList`1<string> XKubernetesListMapKeys { get; public set; }
    [JsonPropertyNameAttribute("x-kubernetes-list-type")]
public string XKubernetesListType { get; public set; }
    [JsonPropertyNameAttribute("x-kubernetes-map-type")]
public string XKubernetesMapType { get; public set; }
    [JsonPropertyNameAttribute("x-kubernetes-preserve-unknown-fields")]
public Nullable`1<bool> XKubernetesPreserveUnknownFields { get; public set; }
    [JsonPropertyNameAttribute("x-kubernetes-validations")]
public IList`1<V1ValidationRule> XKubernetesValidations { get; public set; }
    public V1JSONSchemaProps(string refProperty, string schema, object additionalItems, object additionalProperties, IList`1<V1JSONSchemaProps> allOf, IList`1<V1JSONSchemaProps> anyOf, object defaultProperty, IDictionary`2<string, V1JSONSchemaProps> definitions, IDictionary`2<string, object> dependencies, string description, IList`1<object> enumProperty, object example, Nullable`1<bool> exclusiveMaximum, Nullable`1<bool> exclusiveMinimum, V1ExternalDocumentation externalDocs, string format, string id, object items, Nullable`1<long> maxItems, Nullable`1<long> maxLength, Nullable`1<long> maxProperties, Nullable`1<double> maximum, Nullable`1<long> minItems, Nullable`1<long> minLength, Nullable`1<long> minProperties, Nullable`1<double> minimum, Nullable`1<double> multipleOf, V1JSONSchemaProps not, Nullable`1<bool> nullable, IList`1<V1JSONSchemaProps> oneOf, string pattern, IDictionary`2<string, V1JSONSchemaProps> patternProperties, IDictionary`2<string, V1JSONSchemaProps> properties, IList`1<string> required, string title, string type, Nullable`1<bool> uniqueItems, Nullable`1<bool> xKubernetesEmbeddedResource, Nullable`1<bool> xKubernetesIntOrString, IList`1<string> xKubernetesListMapKeys, string xKubernetesListType, string xKubernetesMapType, Nullable`1<bool> xKubernetesPreserveUnknownFields, IList`1<V1ValidationRule> xKubernetesValidations);
    [CompilerGeneratedAttribute]
public string get_RefProperty();
    [CompilerGeneratedAttribute]
public void set_RefProperty(string value);
    [CompilerGeneratedAttribute]
public string get_Schema();
    [CompilerGeneratedAttribute]
public void set_Schema(string value);
    [CompilerGeneratedAttribute]
public object get_AdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AdditionalItems(object value);
    [CompilerGeneratedAttribute]
public object get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(object value);
    [CompilerGeneratedAttribute]
public IList`1<V1JSONSchemaProps> get_AllOf();
    [CompilerGeneratedAttribute]
public void set_AllOf(IList`1<V1JSONSchemaProps> value);
    [CompilerGeneratedAttribute]
public IList`1<V1JSONSchemaProps> get_AnyOf();
    [CompilerGeneratedAttribute]
public void set_AnyOf(IList`1<V1JSONSchemaProps> value);
    [CompilerGeneratedAttribute]
public object get_DefaultProperty();
    [CompilerGeneratedAttribute]
public void set_DefaultProperty(object value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, V1JSONSchemaProps> get_Definitions();
    [CompilerGeneratedAttribute]
public void set_Definitions(IDictionary`2<string, V1JSONSchemaProps> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Dependencies();
    [CompilerGeneratedAttribute]
public void set_Dependencies(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IList`1<object> get_EnumProperty();
    [CompilerGeneratedAttribute]
public void set_EnumProperty(IList`1<object> value);
    [CompilerGeneratedAttribute]
public object get_Example();
    [CompilerGeneratedAttribute]
public void set_Example(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExclusiveMaximum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMaximum(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExclusiveMinimum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMinimum(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1ExternalDocumentation get_ExternalDocs();
    [CompilerGeneratedAttribute]
public void set_ExternalDocs(V1ExternalDocumentation value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public object get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxItems();
    [CompilerGeneratedAttribute]
public void set_MaxItems(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxLength();
    [CompilerGeneratedAttribute]
public void set_MaxLength(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxProperties();
    [CompilerGeneratedAttribute]
public void set_MaxProperties(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinItems();
    [CompilerGeneratedAttribute]
public void set_MinItems(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinLength();
    [CompilerGeneratedAttribute]
public void set_MinLength(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinProperties();
    [CompilerGeneratedAttribute]
public void set_MinProperties(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MultipleOf();
    [CompilerGeneratedAttribute]
public void set_MultipleOf(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public V1JSONSchemaProps get_Not();
    [CompilerGeneratedAttribute]
public void set_Not(V1JSONSchemaProps value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Nullable();
    [CompilerGeneratedAttribute]
public void set_Nullable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1JSONSchemaProps> get_OneOf();
    [CompilerGeneratedAttribute]
public void set_OneOf(IList`1<V1JSONSchemaProps> value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, V1JSONSchemaProps> get_PatternProperties();
    [CompilerGeneratedAttribute]
public void set_PatternProperties(IDictionary`2<string, V1JSONSchemaProps> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, V1JSONSchemaProps> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, V1JSONSchemaProps> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UniqueItems();
    [CompilerGeneratedAttribute]
public void set_UniqueItems(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_XKubernetesEmbeddedResource();
    [CompilerGeneratedAttribute]
public void set_XKubernetesEmbeddedResource(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_XKubernetesIntOrString();
    [CompilerGeneratedAttribute]
public void set_XKubernetesIntOrString(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_XKubernetesListMapKeys();
    [CompilerGeneratedAttribute]
public void set_XKubernetesListMapKeys(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_XKubernetesListType();
    [CompilerGeneratedAttribute]
public void set_XKubernetesListType(string value);
    [CompilerGeneratedAttribute]
public string get_XKubernetesMapType();
    [CompilerGeneratedAttribute]
public void set_XKubernetesMapType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_XKubernetesPreserveUnknownFields();
    [CompilerGeneratedAttribute]
public void set_XKubernetesPreserveUnknownFields(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ValidationRule> get_XKubernetesValidations();
    [CompilerGeneratedAttribute]
public void set_XKubernetesValidations(IList`1<V1ValidationRule> value);
    public virtual void Validate();
}
public class k8s.Models.V1KeyToPath : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("mode")]
public Nullable`1<int> Mode { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    public V1KeyToPath(string key, string path, Nullable`1<int> mode);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public virtual void Validate();
}
public class k8s.Models.V1LabelSelector : object {
    [CompilerGeneratedAttribute]
private IList`1<V1LabelSelectorRequirement> <MatchExpressions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <MatchLabels>k__BackingField;
    [JsonPropertyNameAttribute("matchExpressions")]
public IList`1<V1LabelSelectorRequirement> MatchExpressions { get; public set; }
    [JsonPropertyNameAttribute("matchLabels")]
public IDictionary`2<string, string> MatchLabels { get; public set; }
    public V1LabelSelector(IList`1<V1LabelSelectorRequirement> matchExpressions, IDictionary`2<string, string> matchLabels);
    [CompilerGeneratedAttribute]
public IList`1<V1LabelSelectorRequirement> get_MatchExpressions();
    [CompilerGeneratedAttribute]
public void set_MatchExpressions(IList`1<V1LabelSelectorRequirement> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_MatchLabels();
    [CompilerGeneratedAttribute]
public void set_MatchLabels(IDictionary`2<string, string> value);
    public virtual void Validate();
}
public class k8s.Models.V1LabelSelectorAttributes : object {
    [CompilerGeneratedAttribute]
private string <RawSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1LabelSelectorRequirement> <Requirements>k__BackingField;
    [JsonPropertyNameAttribute("rawSelector")]
public string RawSelector { get; public set; }
    [JsonPropertyNameAttribute("requirements")]
public IList`1<V1LabelSelectorRequirement> Requirements { get; public set; }
    public V1LabelSelectorAttributes(string rawSelector, IList`1<V1LabelSelectorRequirement> requirements);
    [CompilerGeneratedAttribute]
public string get_RawSelector();
    [CompilerGeneratedAttribute]
public void set_RawSelector(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1LabelSelectorRequirement> get_Requirements();
    [CompilerGeneratedAttribute]
public void set_Requirements(IList`1<V1LabelSelectorRequirement> value);
    public virtual void Validate();
}
public class k8s.Models.V1LabelSelectorRequirement : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatorProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Values>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("operator")]
public string OperatorProperty { get; public set; }
    [JsonPropertyNameAttribute("values")]
public IList`1<string> Values { get; public set; }
    public V1LabelSelectorRequirement(string key, string operatorProperty, IList`1<string> values);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_OperatorProperty();
    [CompilerGeneratedAttribute]
public void set_OperatorProperty(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IList`1<string> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Lease : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LeaseSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1LeaseSpec Spec { get; public set; }
    public V1Lease(string apiVersion, string kind, V1ObjectMeta metadata, V1LeaseSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1LeaseSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1LeaseSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1LeaseList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Lease> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Lease> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1LeaseList(IList`1<V1Lease> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Lease> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Lease> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1LeaseSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <AcquireTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HolderIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LeaseDurationSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LeaseTransitions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreferredHolder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <RenewTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Strategy>k__BackingField;
    [JsonPropertyNameAttribute("acquireTime")]
public Nullable`1<DateTime> AcquireTime { get; public set; }
    [JsonPropertyNameAttribute("holderIdentity")]
public string HolderIdentity { get; public set; }
    [JsonPropertyNameAttribute("leaseDurationSeconds")]
public Nullable`1<int> LeaseDurationSeconds { get; public set; }
    [JsonPropertyNameAttribute("leaseTransitions")]
public Nullable`1<int> LeaseTransitions { get; public set; }
    [JsonPropertyNameAttribute("preferredHolder")]
public string PreferredHolder { get; public set; }
    [JsonPropertyNameAttribute("renewTime")]
public Nullable`1<DateTime> RenewTime { get; public set; }
    [JsonPropertyNameAttribute("strategy")]
public string Strategy { get; public set; }
    public V1LeaseSpec(Nullable`1<DateTime> acquireTime, string holderIdentity, Nullable`1<int> leaseDurationSeconds, Nullable`1<int> leaseTransitions, string preferredHolder, Nullable`1<DateTime> renewTime, string strategy);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_AcquireTime();
    [CompilerGeneratedAttribute]
public void set_AcquireTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_HolderIdentity();
    [CompilerGeneratedAttribute]
public void set_HolderIdentity(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LeaseDurationSeconds();
    [CompilerGeneratedAttribute]
public void set_LeaseDurationSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LeaseTransitions();
    [CompilerGeneratedAttribute]
public void set_LeaseTransitions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PreferredHolder();
    [CompilerGeneratedAttribute]
public void set_PreferredHolder(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_RenewTime();
    [CompilerGeneratedAttribute]
public void set_RenewTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Strategy();
    [CompilerGeneratedAttribute]
public void set_Strategy(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Lifecycle : object {
    [CompilerGeneratedAttribute]
private V1LifecycleHandler <PostStart>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LifecycleHandler <PreStop>k__BackingField;
    [JsonPropertyNameAttribute("postStart")]
public V1LifecycleHandler PostStart { get; public set; }
    [JsonPropertyNameAttribute("preStop")]
public V1LifecycleHandler PreStop { get; public set; }
    public V1Lifecycle(V1LifecycleHandler postStart, V1LifecycleHandler preStop);
    [CompilerGeneratedAttribute]
public V1LifecycleHandler get_PostStart();
    [CompilerGeneratedAttribute]
public void set_PostStart(V1LifecycleHandler value);
    [CompilerGeneratedAttribute]
public V1LifecycleHandler get_PreStop();
    [CompilerGeneratedAttribute]
public void set_PreStop(V1LifecycleHandler value);
    public virtual void Validate();
}
public class k8s.Models.V1LifecycleHandler : object {
    [CompilerGeneratedAttribute]
private V1ExecAction <Exec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1HTTPGetAction <HttpGet>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SleepAction <Sleep>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TCPSocketAction <TcpSocket>k__BackingField;
    [JsonPropertyNameAttribute("exec")]
public V1ExecAction Exec { get; public set; }
    [JsonPropertyNameAttribute("httpGet")]
public V1HTTPGetAction HttpGet { get; public set; }
    [JsonPropertyNameAttribute("sleep")]
public V1SleepAction Sleep { get; public set; }
    [JsonPropertyNameAttribute("tcpSocket")]
public V1TCPSocketAction TcpSocket { get; public set; }
    public V1LifecycleHandler(V1ExecAction exec, V1HTTPGetAction httpGet, V1SleepAction sleep, V1TCPSocketAction tcpSocket);
    [CompilerGeneratedAttribute]
public V1ExecAction get_Exec();
    [CompilerGeneratedAttribute]
public void set_Exec(V1ExecAction value);
    [CompilerGeneratedAttribute]
public V1HTTPGetAction get_HttpGet();
    [CompilerGeneratedAttribute]
public void set_HttpGet(V1HTTPGetAction value);
    [CompilerGeneratedAttribute]
public V1SleepAction get_Sleep();
    [CompilerGeneratedAttribute]
public void set_Sleep(V1SleepAction value);
    [CompilerGeneratedAttribute]
public V1TCPSocketAction get_TcpSocket();
    [CompilerGeneratedAttribute]
public void set_TcpSocket(V1TCPSocketAction value);
    public virtual void Validate();
}
public class k8s.Models.V1LimitedPriorityLevelConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BorrowingLimitPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LendablePercent>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LimitResponse <LimitResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NominalConcurrencyShares>k__BackingField;
    [JsonPropertyNameAttribute("borrowingLimitPercent")]
public Nullable`1<int> BorrowingLimitPercent { get; public set; }
    [JsonPropertyNameAttribute("lendablePercent")]
public Nullable`1<int> LendablePercent { get; public set; }
    [JsonPropertyNameAttribute("limitResponse")]
public V1LimitResponse LimitResponse { get; public set; }
    [JsonPropertyNameAttribute("nominalConcurrencyShares")]
public Nullable`1<int> NominalConcurrencyShares { get; public set; }
    public V1LimitedPriorityLevelConfiguration(Nullable`1<int> borrowingLimitPercent, Nullable`1<int> lendablePercent, V1LimitResponse limitResponse, Nullable`1<int> nominalConcurrencyShares);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BorrowingLimitPercent();
    [CompilerGeneratedAttribute]
public void set_BorrowingLimitPercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LendablePercent();
    [CompilerGeneratedAttribute]
public void set_LendablePercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1LimitResponse get_LimitResponse();
    [CompilerGeneratedAttribute]
public void set_LimitResponse(V1LimitResponse value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NominalConcurrencyShares();
    [CompilerGeneratedAttribute]
public void set_NominalConcurrencyShares(Nullable`1<int> value);
    public virtual void Validate();
    public static V1LimitedPriorityLevelConfiguration op_Explicit(V1beta3LimitedPriorityLevelConfiguration s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1LimitRange : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LimitRangeSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1LimitRangeSpec Spec { get; public set; }
    public V1LimitRange(string apiVersion, string kind, V1ObjectMeta metadata, V1LimitRangeSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1LimitRangeSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1LimitRangeSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1LimitRangeItem : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <DefaultProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <DefaultRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <MaxLimitRequestRatio>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("default")]
public IDictionary`2<string, ResourceQuantity> DefaultProperty { get; public set; }
    [JsonPropertyNameAttribute("defaultRequest")]
public IDictionary`2<string, ResourceQuantity> DefaultRequest { get; public set; }
    [JsonPropertyNameAttribute("max")]
public IDictionary`2<string, ResourceQuantity> Max { get; public set; }
    [JsonPropertyNameAttribute("maxLimitRequestRatio")]
public IDictionary`2<string, ResourceQuantity> MaxLimitRequestRatio { get; public set; }
    [JsonPropertyNameAttribute("min")]
public IDictionary`2<string, ResourceQuantity> Min { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1LimitRangeItem(string type, IDictionary`2<string, ResourceQuantity> defaultProperty, IDictionary`2<string, ResourceQuantity> defaultRequest, IDictionary`2<string, ResourceQuantity> max, IDictionary`2<string, ResourceQuantity> maxLimitRequestRatio, IDictionary`2<string, ResourceQuantity> min);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_DefaultProperty();
    [CompilerGeneratedAttribute]
public void set_DefaultProperty(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_DefaultRequest();
    [CompilerGeneratedAttribute]
public void set_DefaultRequest(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_MaxLimitRequestRatio();
    [CompilerGeneratedAttribute]
public void set_MaxLimitRequestRatio(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1LimitRangeList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1LimitRange> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1LimitRange> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1LimitRangeList(IList`1<V1LimitRange> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1LimitRange> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1LimitRange> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1LimitRangeSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<V1LimitRangeItem> <Limits>k__BackingField;
    [JsonPropertyNameAttribute("limits")]
public IList`1<V1LimitRangeItem> Limits { get; public set; }
    public V1LimitRangeSpec(IList`1<V1LimitRangeItem> limits);
    [CompilerGeneratedAttribute]
public IList`1<V1LimitRangeItem> get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(IList`1<V1LimitRangeItem> value);
    public virtual void Validate();
}
public class k8s.Models.V1LimitResponse : object {
    [CompilerGeneratedAttribute]
private V1QueuingConfiguration <Queuing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("queuing")]
public V1QueuingConfiguration Queuing { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1LimitResponse(string type, V1QueuingConfiguration queuing);
    [CompilerGeneratedAttribute]
public V1QueuingConfiguration get_Queuing();
    [CompilerGeneratedAttribute]
public void set_Queuing(V1QueuingConfiguration value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1LimitResponse op_Explicit(V1beta3LimitResponse s);
}
public class k8s.Models.V1LinuxContainerUser : object {
    [CompilerGeneratedAttribute]
private long <Gid>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Nullable`1<long>> <SupplementalGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Uid>k__BackingField;
    [JsonPropertyNameAttribute("gid")]
public long Gid { get; public set; }
    [JsonPropertyNameAttribute("supplementalGroups")]
public IList`1<Nullable`1<long>> SupplementalGroups { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public long Uid { get; public set; }
    public V1LinuxContainerUser(long gid, long uid, IList`1<Nullable`1<long>> supplementalGroups);
    [CompilerGeneratedAttribute]
public long get_Gid();
    [CompilerGeneratedAttribute]
public void set_Gid(long value);
    [CompilerGeneratedAttribute]
public IList`1<Nullable`1<long>> get_SupplementalGroups();
    [CompilerGeneratedAttribute]
public void set_SupplementalGroups(IList`1<Nullable`1<long>> value);
    [CompilerGeneratedAttribute]
public long get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(long value);
    public virtual void Validate();
}
public class k8s.Models.V1ListMeta : object {
    [CompilerGeneratedAttribute]
private string <ContinueProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RemainingItemCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SelfLink>k__BackingField;
    [JsonPropertyNameAttribute("continue")]
public string ContinueProperty { get; public set; }
    [JsonPropertyNameAttribute("remainingItemCount")]
public Nullable`1<long> RemainingItemCount { get; public set; }
    [JsonPropertyNameAttribute("resourceVersion")]
public string ResourceVersion { get; public set; }
    [JsonPropertyNameAttribute("selfLink")]
public string SelfLink { get; public set; }
    public V1ListMeta(string continueProperty, Nullable`1<long> remainingItemCount, string resourceVersion, string selfLink);
    [CompilerGeneratedAttribute]
public string get_ContinueProperty();
    [CompilerGeneratedAttribute]
public void set_ContinueProperty(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RemainingItemCount();
    [CompilerGeneratedAttribute]
public void set_RemainingItemCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(string value);
    [CompilerGeneratedAttribute]
public string get_SelfLink();
    [CompilerGeneratedAttribute]
public void set_SelfLink(string value);
    public virtual void Validate();
}
public class k8s.Models.V1LoadBalancerIngress : object {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IpMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PortStatus> <Ports>k__BackingField;
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("ip")]
public string Ip { get; public set; }
    [JsonPropertyNameAttribute("ipMode")]
public string IpMode { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<V1PortStatus> Ports { get; public set; }
    public V1LoadBalancerIngress(string hostname, string ip, string ipMode, IList`1<V1PortStatus> ports);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_IpMode();
    [CompilerGeneratedAttribute]
public void set_IpMode(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1PortStatus> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<V1PortStatus> value);
    public virtual void Validate();
}
public class k8s.Models.V1LoadBalancerStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1LoadBalancerIngress> <Ingress>k__BackingField;
    [JsonPropertyNameAttribute("ingress")]
public IList`1<V1LoadBalancerIngress> Ingress { get; public set; }
    public V1LoadBalancerStatus(IList`1<V1LoadBalancerIngress> ingress);
    [CompilerGeneratedAttribute]
public IList`1<V1LoadBalancerIngress> get_Ingress();
    [CompilerGeneratedAttribute]
public void set_Ingress(IList`1<V1LoadBalancerIngress> value);
    public virtual void Validate();
}
public class k8s.Models.V1LocalObjectReference : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1LocalObjectReference(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1LocalSubjectAccessReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SubjectAccessReviewSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SubjectAccessReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1SubjectAccessReviewSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1SubjectAccessReviewStatus Status { get; public set; }
    public V1LocalSubjectAccessReview(V1SubjectAccessReviewSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1SubjectAccessReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1SubjectAccessReviewSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1SubjectAccessReviewSpec value);
    [CompilerGeneratedAttribute]
public V1SubjectAccessReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1SubjectAccessReviewStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1LocalVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    public V1LocalVolumeSource(string path, string fsType);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ManagedFieldsEntry : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldsType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <FieldsV1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Manager>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subresource>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Time>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("fieldsType")]
public string FieldsType { get; public set; }
    [JsonPropertyNameAttribute("fieldsV1")]
public object FieldsV1 { get; public set; }
    [JsonPropertyNameAttribute("manager")]
public string Manager { get; public set; }
    [JsonPropertyNameAttribute("operation")]
public string Operation { get; public set; }
    [JsonPropertyNameAttribute("subresource")]
public string Subresource { get; public set; }
    [JsonPropertyNameAttribute("time")]
public Nullable`1<DateTime> Time { get; public set; }
    public V1ManagedFieldsEntry(string apiVersion, string fieldsType, object fieldsV1, string manager, string operation, string subresource, Nullable`1<DateTime> time);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_FieldsType();
    [CompilerGeneratedAttribute]
public void set_FieldsType(string value);
    [CompilerGeneratedAttribute]
public object get_FieldsV1();
    [CompilerGeneratedAttribute]
public void set_FieldsV1(object value);
    [CompilerGeneratedAttribute]
public string get_Manager();
    [CompilerGeneratedAttribute]
public void set_Manager(string value);
    [CompilerGeneratedAttribute]
public string get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(string value);
    [CompilerGeneratedAttribute]
public string get_Subresource();
    [CompilerGeneratedAttribute]
public void set_Subresource(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class k8s.Models.V1MatchCondition : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1MatchCondition(string expression, string name);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1MatchCondition op_Explicit(V1alpha1MatchCondition s);
    public static V1MatchCondition op_Explicit(V1beta1MatchCondition s);
}
public class k8s.Models.V1MatchResources : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NamedRuleWithOperations> <ExcludeResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MatchPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NamespaceSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <ObjectSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NamedRuleWithOperations> <ResourceRules>k__BackingField;
    [JsonPropertyNameAttribute("excludeResourceRules")]
public IList`1<V1NamedRuleWithOperations> ExcludeResourceRules { get; public set; }
    [JsonPropertyNameAttribute("matchPolicy")]
public string MatchPolicy { get; public set; }
    [JsonPropertyNameAttribute("namespaceSelector")]
public V1LabelSelector NamespaceSelector { get; public set; }
    [JsonPropertyNameAttribute("objectSelector")]
public V1LabelSelector ObjectSelector { get; public set; }
    [JsonPropertyNameAttribute("resourceRules")]
public IList`1<V1NamedRuleWithOperations> ResourceRules { get; public set; }
    public V1MatchResources(IList`1<V1NamedRuleWithOperations> excludeResourceRules, string matchPolicy, V1LabelSelector namespaceSelector, V1LabelSelector objectSelector, IList`1<V1NamedRuleWithOperations> resourceRules);
    [CompilerGeneratedAttribute]
public IList`1<V1NamedRuleWithOperations> get_ExcludeResourceRules();
    [CompilerGeneratedAttribute]
public void set_ExcludeResourceRules(IList`1<V1NamedRuleWithOperations> value);
    [CompilerGeneratedAttribute]
public string get_MatchPolicy();
    [CompilerGeneratedAttribute]
public void set_MatchPolicy(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NamespaceSelector();
    [CompilerGeneratedAttribute]
public void set_NamespaceSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_ObjectSelector();
    [CompilerGeneratedAttribute]
public void set_ObjectSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<V1NamedRuleWithOperations> get_ResourceRules();
    [CompilerGeneratedAttribute]
public void set_ResourceRules(IList`1<V1NamedRuleWithOperations> value);
    public virtual void Validate();
    public static V1MatchResources op_Explicit(V1alpha1MatchResources s);
    public static V1MatchResources op_Explicit(V1beta1MatchResources s);
}
public class k8s.Models.V1ModifyVolumeStatus : object {
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetVolumeAttributesClassName>k__BackingField;
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("targetVolumeAttributesClassName")]
public string TargetVolumeAttributesClassName { get; public set; }
    public V1ModifyVolumeStatus(string status, string targetVolumeAttributesClassName);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_TargetVolumeAttributesClassName();
    [CompilerGeneratedAttribute]
public void set_TargetVolumeAttributesClassName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1MutatingWebhook : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <AdmissionReviewVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private Admissionregistrationv1WebhookClientConfig <ClientConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1MatchCondition> <MatchConditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MatchPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NamespaceSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <ObjectSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReinvocationPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1RuleWithOperations> <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SideEffects>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TimeoutSeconds>k__BackingField;
    [JsonPropertyNameAttribute("admissionReviewVersions")]
public IList`1<string> AdmissionReviewVersions { get; public set; }
    [JsonPropertyNameAttribute("clientConfig")]
public Admissionregistrationv1WebhookClientConfig ClientConfig { get; public set; }
    [JsonPropertyNameAttribute("failurePolicy")]
public string FailurePolicy { get; public set; }
    [JsonPropertyNameAttribute("matchConditions")]
public IList`1<V1MatchCondition> MatchConditions { get; public set; }
    [JsonPropertyNameAttribute("matchPolicy")]
public string MatchPolicy { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespaceSelector")]
public V1LabelSelector NamespaceSelector { get; public set; }
    [JsonPropertyNameAttribute("objectSelector")]
public V1LabelSelector ObjectSelector { get; public set; }
    [JsonPropertyNameAttribute("reinvocationPolicy")]
public string ReinvocationPolicy { get; public set; }
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1RuleWithOperations> Rules { get; public set; }
    [JsonPropertyNameAttribute("sideEffects")]
public string SideEffects { get; public set; }
    [JsonPropertyNameAttribute("timeoutSeconds")]
public Nullable`1<int> TimeoutSeconds { get; public set; }
    public V1MutatingWebhook(IList`1<string> admissionReviewVersions, Admissionregistrationv1WebhookClientConfig clientConfig, string name, string sideEffects, string failurePolicy, IList`1<V1MatchCondition> matchConditions, string matchPolicy, V1LabelSelector namespaceSelector, V1LabelSelector objectSelector, string reinvocationPolicy, IList`1<V1RuleWithOperations> rules, Nullable`1<int> timeoutSeconds);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AdmissionReviewVersions();
    [CompilerGeneratedAttribute]
public void set_AdmissionReviewVersions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Admissionregistrationv1WebhookClientConfig get_ClientConfig();
    [CompilerGeneratedAttribute]
public void set_ClientConfig(Admissionregistrationv1WebhookClientConfig value);
    [CompilerGeneratedAttribute]
public string get_FailurePolicy();
    [CompilerGeneratedAttribute]
public void set_FailurePolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1MatchCondition> get_MatchConditions();
    [CompilerGeneratedAttribute]
public void set_MatchConditions(IList`1<V1MatchCondition> value);
    [CompilerGeneratedAttribute]
public string get_MatchPolicy();
    [CompilerGeneratedAttribute]
public void set_MatchPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NamespaceSelector();
    [CompilerGeneratedAttribute]
public void set_NamespaceSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_ObjectSelector();
    [CompilerGeneratedAttribute]
public void set_ObjectSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public string get_ReinvocationPolicy();
    [CompilerGeneratedAttribute]
public void set_ReinvocationPolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1RuleWithOperations> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1RuleWithOperations> value);
    [CompilerGeneratedAttribute]
public string get_SideEffects();
    [CompilerGeneratedAttribute]
public void set_SideEffects(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TimeoutSeconds();
    [CompilerGeneratedAttribute]
public void set_TimeoutSeconds(Nullable`1<int> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1MutatingWebhookConfiguration : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1MutatingWebhook> <Webhooks>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("webhooks")]
public IList`1<V1MutatingWebhook> Webhooks { get; public set; }
    public V1MutatingWebhookConfiguration(string apiVersion, string kind, V1ObjectMeta metadata, IList`1<V1MutatingWebhook> webhooks);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<V1MutatingWebhook> get_Webhooks();
    [CompilerGeneratedAttribute]
public void set_Webhooks(IList`1<V1MutatingWebhook> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1MutatingWebhookConfigurationList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1MutatingWebhookConfiguration> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1MutatingWebhookConfiguration> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1MutatingWebhookConfigurationList(IList`1<V1MutatingWebhookConfiguration> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1MutatingWebhookConfiguration> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1MutatingWebhookConfiguration> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1NamedRuleWithOperations : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ResourceNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("apiVersions")]
public IList`1<string> ApiVersions { get; public set; }
    [JsonPropertyNameAttribute("operations")]
public IList`1<string> Operations { get; public set; }
    [JsonPropertyNameAttribute("resourceNames")]
public IList`1<string> ResourceNames { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("scope")]
public string Scope { get; public set; }
    public V1NamedRuleWithOperations(IList`1<string> apiGroups, IList`1<string> apiVersions, IList`1<string> operations, IList`1<string> resourceNames, IList`1<string> resources, string scope);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiVersions();
    [CompilerGeneratedAttribute]
public void set_ApiVersions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ResourceNames();
    [CompilerGeneratedAttribute]
public void set_ResourceNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public virtual void Validate();
    public static V1NamedRuleWithOperations op_Explicit(V1alpha1NamedRuleWithOperations s);
    public static V1NamedRuleWithOperations op_Explicit(V1beta1NamedRuleWithOperations s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Namespace : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NamespaceSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NamespaceStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1NamespaceSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1NamespaceStatus Status { get; public set; }
    public V1Namespace(string apiVersion, string kind, V1ObjectMeta metadata, V1NamespaceSpec spec, V1NamespaceStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1NamespaceSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1NamespaceSpec value);
    [CompilerGeneratedAttribute]
public V1NamespaceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1NamespaceStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1NamespaceCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1NamespaceCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1NamespaceList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Namespace> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Namespace> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1NamespaceList(IList`1<V1Namespace> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Namespace> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Namespace> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1NamespaceSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Finalizers>k__BackingField;
    [JsonPropertyNameAttribute("finalizers")]
public IList`1<string> Finalizers { get; public set; }
    public V1NamespaceSpec(IList`1<string> finalizers);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Finalizers();
    [CompilerGeneratedAttribute]
public void set_Finalizers(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1NamespaceStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NamespaceCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Phase>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1NamespaceCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("phase")]
public string Phase { get; public set; }
    public V1NamespaceStatus(IList`1<V1NamespaceCondition> conditions, string phase);
    [CompilerGeneratedAttribute]
public IList`1<V1NamespaceCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1NamespaceCondition> value);
    [CompilerGeneratedAttribute]
public string get_Phase();
    [CompilerGeneratedAttribute]
public void set_Phase(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1NetworkPolicy : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NetworkPolicySpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1NetworkPolicySpec Spec { get; public set; }
    public V1NetworkPolicy(string apiVersion, string kind, V1ObjectMeta metadata, V1NetworkPolicySpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1NetworkPolicySpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1NetworkPolicySpec value);
    public virtual void Validate();
}
public class k8s.Models.V1NetworkPolicyEgressRule : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NetworkPolicyPort> <Ports>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NetworkPolicyPeer> <To>k__BackingField;
    [JsonPropertyNameAttribute("ports")]
public IList`1<V1NetworkPolicyPort> Ports { get; public set; }
    [JsonPropertyNameAttribute("to")]
public IList`1<V1NetworkPolicyPeer> To { get; public set; }
    public V1NetworkPolicyEgressRule(IList`1<V1NetworkPolicyPort> ports, IList`1<V1NetworkPolicyPeer> to);
    [CompilerGeneratedAttribute]
public IList`1<V1NetworkPolicyPort> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<V1NetworkPolicyPort> value);
    [CompilerGeneratedAttribute]
public IList`1<V1NetworkPolicyPeer> get_To();
    [CompilerGeneratedAttribute]
public void set_To(IList`1<V1NetworkPolicyPeer> value);
    public virtual void Validate();
}
public class k8s.Models.V1NetworkPolicyIngressRule : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NetworkPolicyPeer> <FromProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NetworkPolicyPort> <Ports>k__BackingField;
    [JsonPropertyNameAttribute("from")]
public IList`1<V1NetworkPolicyPeer> FromProperty { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<V1NetworkPolicyPort> Ports { get; public set; }
    public V1NetworkPolicyIngressRule(IList`1<V1NetworkPolicyPeer> fromProperty, IList`1<V1NetworkPolicyPort> ports);
    [CompilerGeneratedAttribute]
public IList`1<V1NetworkPolicyPeer> get_FromProperty();
    [CompilerGeneratedAttribute]
public void set_FromProperty(IList`1<V1NetworkPolicyPeer> value);
    [CompilerGeneratedAttribute]
public IList`1<V1NetworkPolicyPort> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<V1NetworkPolicyPort> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1NetworkPolicyList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NetworkPolicy> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1NetworkPolicy> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1NetworkPolicyList(IList`1<V1NetworkPolicy> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1NetworkPolicy> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1NetworkPolicy> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1NetworkPolicyPeer : object {
    [CompilerGeneratedAttribute]
private V1IPBlock <IpBlock>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NamespaceSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <PodSelector>k__BackingField;
    [JsonPropertyNameAttribute("ipBlock")]
public V1IPBlock IpBlock { get; public set; }
    [JsonPropertyNameAttribute("namespaceSelector")]
public V1LabelSelector NamespaceSelector { get; public set; }
    [JsonPropertyNameAttribute("podSelector")]
public V1LabelSelector PodSelector { get; public set; }
    public V1NetworkPolicyPeer(V1IPBlock ipBlock, V1LabelSelector namespaceSelector, V1LabelSelector podSelector);
    [CompilerGeneratedAttribute]
public V1IPBlock get_IpBlock();
    [CompilerGeneratedAttribute]
public void set_IpBlock(V1IPBlock value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NamespaceSelector();
    [CompilerGeneratedAttribute]
public void set_NamespaceSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_PodSelector();
    [CompilerGeneratedAttribute]
public void set_PodSelector(V1LabelSelector value);
    public virtual void Validate();
}
public class k8s.Models.V1NetworkPolicyPort : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EndPort>k__BackingField;
    [CompilerGeneratedAttribute]
private IntstrIntOrString <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [JsonPropertyNameAttribute("endPort")]
public Nullable`1<int> EndPort { get; public set; }
    [JsonPropertyNameAttribute("port")]
public IntstrIntOrString Port { get; public set; }
    [JsonPropertyNameAttribute("protocol")]
public string Protocol { get; public set; }
    public V1NetworkPolicyPort(Nullable`1<int> endPort, IntstrIntOrString port, string protocol);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_EndPort();
    [CompilerGeneratedAttribute]
public void set_EndPort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(IntstrIntOrString value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    public virtual void Validate();
}
public class k8s.Models.V1NetworkPolicySpec : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NetworkPolicyEgressRule> <Egress>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NetworkPolicyIngressRule> <Ingress>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <PodSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <PolicyTypes>k__BackingField;
    [JsonPropertyNameAttribute("egress")]
public IList`1<V1NetworkPolicyEgressRule> Egress { get; public set; }
    [JsonPropertyNameAttribute("ingress")]
public IList`1<V1NetworkPolicyIngressRule> Ingress { get; public set; }
    [JsonPropertyNameAttribute("podSelector")]
public V1LabelSelector PodSelector { get; public set; }
    [JsonPropertyNameAttribute("policyTypes")]
public IList`1<string> PolicyTypes { get; public set; }
    public V1NetworkPolicySpec(V1LabelSelector podSelector, IList`1<V1NetworkPolicyEgressRule> egress, IList`1<V1NetworkPolicyIngressRule> ingress, IList`1<string> policyTypes);
    [CompilerGeneratedAttribute]
public IList`1<V1NetworkPolicyEgressRule> get_Egress();
    [CompilerGeneratedAttribute]
public void set_Egress(IList`1<V1NetworkPolicyEgressRule> value);
    [CompilerGeneratedAttribute]
public IList`1<V1NetworkPolicyIngressRule> get_Ingress();
    [CompilerGeneratedAttribute]
public void set_Ingress(IList`1<V1NetworkPolicyIngressRule> value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_PodSelector();
    [CompilerGeneratedAttribute]
public void set_PodSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_PolicyTypes();
    [CompilerGeneratedAttribute]
public void set_PolicyTypes(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1NFSVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Server>k__BackingField;
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("server")]
public string Server { get; public set; }
    public V1NFSVolumeSource(string path, string server, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Server();
    [CompilerGeneratedAttribute]
public void set_Server(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Node : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1NodeSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1NodeStatus Status { get; public set; }
    public V1Node(string apiVersion, string kind, V1ObjectMeta metadata, V1NodeSpec spec, V1NodeStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1NodeSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1NodeSpec value);
    [CompilerGeneratedAttribute]
public V1NodeStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1NodeStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeAddress : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("address")]
public string Address { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1NodeAddress(string address, string type);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeAffinity : object {
    [CompilerGeneratedAttribute]
private IList`1<V1PreferredSchedulingTerm> <PreferredDuringSchedulingIgnoredDuringExecution>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeSelector <RequiredDuringSchedulingIgnoredDuringExecution>k__BackingField;
    [JsonPropertyNameAttribute("preferredDuringSchedulingIgnoredDuringExecution")]
public IList`1<V1PreferredSchedulingTerm> PreferredDuringSchedulingIgnoredDuringExecution { get; public set; }
    [JsonPropertyNameAttribute("requiredDuringSchedulingIgnoredDuringExecution")]
public V1NodeSelector RequiredDuringSchedulingIgnoredDuringExecution { get; public set; }
    public V1NodeAffinity(IList`1<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution, V1NodeSelector requiredDuringSchedulingIgnoredDuringExecution);
    [CompilerGeneratedAttribute]
public IList`1<V1PreferredSchedulingTerm> get_PreferredDuringSchedulingIgnoredDuringExecution();
    [CompilerGeneratedAttribute]
public void set_PreferredDuringSchedulingIgnoredDuringExecution(IList`1<V1PreferredSchedulingTerm> value);
    [CompilerGeneratedAttribute]
public V1NodeSelector get_RequiredDuringSchedulingIgnoredDuringExecution();
    [CompilerGeneratedAttribute]
public void set_RequiredDuringSchedulingIgnoredDuringExecution(V1NodeSelector value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastHeartbeatTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastHeartbeatTime")]
public Nullable`1<DateTime> LastHeartbeatTime { get; public set; }
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1NodeCondition(string status, string type, Nullable`1<DateTime> lastHeartbeatTime, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastHeartbeatTime();
    [CompilerGeneratedAttribute]
public void set_LastHeartbeatTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeConfigSource : object {
    [CompilerGeneratedAttribute]
private V1ConfigMapNodeConfigSource <ConfigMap>k__BackingField;
    [JsonPropertyNameAttribute("configMap")]
public V1ConfigMapNodeConfigSource ConfigMap { get; public set; }
    public V1NodeConfigSource(V1ConfigMapNodeConfigSource configMap);
    [CompilerGeneratedAttribute]
public V1ConfigMapNodeConfigSource get_ConfigMap();
    [CompilerGeneratedAttribute]
public void set_ConfigMap(V1ConfigMapNodeConfigSource value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeConfigStatus : object {
    [CompilerGeneratedAttribute]
private V1NodeConfigSource <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeConfigSource <Assigned>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeConfigSource <LastKnownGood>k__BackingField;
    [JsonPropertyNameAttribute("active")]
public V1NodeConfigSource Active { get; public set; }
    [JsonPropertyNameAttribute("assigned")]
public V1NodeConfigSource Assigned { get; public set; }
    [JsonPropertyNameAttribute("error")]
public string Error { get; public set; }
    [JsonPropertyNameAttribute("lastKnownGood")]
public V1NodeConfigSource LastKnownGood { get; public set; }
    public V1NodeConfigStatus(V1NodeConfigSource active, V1NodeConfigSource assigned, string error, V1NodeConfigSource lastKnownGood);
    [CompilerGeneratedAttribute]
public V1NodeConfigSource get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(V1NodeConfigSource value);
    [CompilerGeneratedAttribute]
public V1NodeConfigSource get_Assigned();
    [CompilerGeneratedAttribute]
public void set_Assigned(V1NodeConfigSource value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public V1NodeConfigSource get_LastKnownGood();
    [CompilerGeneratedAttribute]
public void set_LastKnownGood(V1NodeConfigSource value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeDaemonEndpoints : object {
    [CompilerGeneratedAttribute]
private V1DaemonEndpoint <KubeletEndpoint>k__BackingField;
    [JsonPropertyNameAttribute("kubeletEndpoint")]
public V1DaemonEndpoint KubeletEndpoint { get; public set; }
    public V1NodeDaemonEndpoints(V1DaemonEndpoint kubeletEndpoint);
    [CompilerGeneratedAttribute]
public V1DaemonEndpoint get_KubeletEndpoint();
    [CompilerGeneratedAttribute]
public void set_KubeletEndpoint(V1DaemonEndpoint value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeFeatures : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SupplementalGroupsPolicy>k__BackingField;
    [JsonPropertyNameAttribute("supplementalGroupsPolicy")]
public Nullable`1<bool> SupplementalGroupsPolicy { get; public set; }
    public V1NodeFeatures(Nullable`1<bool> supplementalGroupsPolicy);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SupplementalGroupsPolicy();
    [CompilerGeneratedAttribute]
public void set_SupplementalGroupsPolicy(Nullable`1<bool> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1NodeList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Node> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Node> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1NodeList(IList`1<V1Node> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Node> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Node> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeRuntimeHandler : object {
    [CompilerGeneratedAttribute]
private V1NodeRuntimeHandlerFeatures <Features>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("features")]
public V1NodeRuntimeHandlerFeatures Features { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1NodeRuntimeHandler(V1NodeRuntimeHandlerFeatures features, string name);
    [CompilerGeneratedAttribute]
public V1NodeRuntimeHandlerFeatures get_Features();
    [CompilerGeneratedAttribute]
public void set_Features(V1NodeRuntimeHandlerFeatures value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeRuntimeHandlerFeatures : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RecursiveReadOnlyMounts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UserNamespaces>k__BackingField;
    [JsonPropertyNameAttribute("recursiveReadOnlyMounts")]
public Nullable`1<bool> RecursiveReadOnlyMounts { get; public set; }
    [JsonPropertyNameAttribute("userNamespaces")]
public Nullable`1<bool> UserNamespaces { get; public set; }
    public V1NodeRuntimeHandlerFeatures(Nullable`1<bool> recursiveReadOnlyMounts, Nullable`1<bool> userNamespaces);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RecursiveReadOnlyMounts();
    [CompilerGeneratedAttribute]
public void set_RecursiveReadOnlyMounts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UserNamespaces();
    [CompilerGeneratedAttribute]
public void set_UserNamespaces(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeSelector : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NodeSelectorTerm> <NodeSelectorTerms>k__BackingField;
    [JsonPropertyNameAttribute("nodeSelectorTerms")]
public IList`1<V1NodeSelectorTerm> NodeSelectorTerms { get; public set; }
    public V1NodeSelector(IList`1<V1NodeSelectorTerm> nodeSelectorTerms);
    [CompilerGeneratedAttribute]
public IList`1<V1NodeSelectorTerm> get_NodeSelectorTerms();
    [CompilerGeneratedAttribute]
public void set_NodeSelectorTerms(IList`1<V1NodeSelectorTerm> value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeSelectorRequirement : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatorProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Values>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("operator")]
public string OperatorProperty { get; public set; }
    [JsonPropertyNameAttribute("values")]
public IList`1<string> Values { get; public set; }
    public V1NodeSelectorRequirement(string key, string operatorProperty, IList`1<string> values);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_OperatorProperty();
    [CompilerGeneratedAttribute]
public void set_OperatorProperty(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeSelectorTerm : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NodeSelectorRequirement> <MatchExpressions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NodeSelectorRequirement> <MatchFields>k__BackingField;
    [JsonPropertyNameAttribute("matchExpressions")]
public IList`1<V1NodeSelectorRequirement> MatchExpressions { get; public set; }
    [JsonPropertyNameAttribute("matchFields")]
public IList`1<V1NodeSelectorRequirement> MatchFields { get; public set; }
    public V1NodeSelectorTerm(IList`1<V1NodeSelectorRequirement> matchExpressions, IList`1<V1NodeSelectorRequirement> matchFields);
    [CompilerGeneratedAttribute]
public IList`1<V1NodeSelectorRequirement> get_MatchExpressions();
    [CompilerGeneratedAttribute]
public void set_MatchExpressions(IList`1<V1NodeSelectorRequirement> value);
    [CompilerGeneratedAttribute]
public IList`1<V1NodeSelectorRequirement> get_MatchFields();
    [CompilerGeneratedAttribute]
public void set_MatchFields(IList`1<V1NodeSelectorRequirement> value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeSpec : object {
    [CompilerGeneratedAttribute]
private V1NodeConfigSource <ConfigSource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PodCIDR>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <PodCIDRs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderID>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Taint> <Taints>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Unschedulable>k__BackingField;
    [JsonPropertyNameAttribute("configSource")]
public V1NodeConfigSource ConfigSource { get; public set; }
    [JsonPropertyNameAttribute("externalID")]
public string ExternalID { get; public set; }
    [JsonPropertyNameAttribute("podCIDR")]
public string PodCIDR { get; public set; }
    [JsonPropertyNameAttribute("podCIDRs")]
public IList`1<string> PodCIDRs { get; public set; }
    [JsonPropertyNameAttribute("providerID")]
public string ProviderID { get; public set; }
    [JsonPropertyNameAttribute("taints")]
public IList`1<V1Taint> Taints { get; public set; }
    [JsonPropertyNameAttribute("unschedulable")]
public Nullable`1<bool> Unschedulable { get; public set; }
    public V1NodeSpec(V1NodeConfigSource configSource, string externalID, string podCIDR, IList`1<string> podCIDRs, string providerID, IList`1<V1Taint> taints, Nullable`1<bool> unschedulable);
    [CompilerGeneratedAttribute]
public V1NodeConfigSource get_ConfigSource();
    [CompilerGeneratedAttribute]
public void set_ConfigSource(V1NodeConfigSource value);
    [CompilerGeneratedAttribute]
public string get_ExternalID();
    [CompilerGeneratedAttribute]
public void set_ExternalID(string value);
    [CompilerGeneratedAttribute]
public string get_PodCIDR();
    [CompilerGeneratedAttribute]
public void set_PodCIDR(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_PodCIDRs();
    [CompilerGeneratedAttribute]
public void set_PodCIDRs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_ProviderID();
    [CompilerGeneratedAttribute]
public void set_ProviderID(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1Taint> get_Taints();
    [CompilerGeneratedAttribute]
public void set_Taints(IList`1<V1Taint> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Unschedulable();
    [CompilerGeneratedAttribute]
public void set_Unschedulable(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NodeAddress> <Addresses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Allocatable>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Capacity>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NodeCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeConfigStatus <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeDaemonEndpoints <DaemonEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeFeatures <Features>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerImage> <Images>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NodeSystemInfo <NodeInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Phase>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NodeRuntimeHandler> <RuntimeHandlers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1AttachedVolume> <VolumesAttached>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <VolumesInUse>k__BackingField;
    [JsonPropertyNameAttribute("addresses")]
public IList`1<V1NodeAddress> Addresses { get; public set; }
    [JsonPropertyNameAttribute("allocatable")]
public IDictionary`2<string, ResourceQuantity> Allocatable { get; public set; }
    [JsonPropertyNameAttribute("capacity")]
public IDictionary`2<string, ResourceQuantity> Capacity { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1NodeCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("config")]
public V1NodeConfigStatus Config { get; public set; }
    [JsonPropertyNameAttribute("daemonEndpoints")]
public V1NodeDaemonEndpoints DaemonEndpoints { get; public set; }
    [JsonPropertyNameAttribute("features")]
public V1NodeFeatures Features { get; public set; }
    [JsonPropertyNameAttribute("images")]
public IList`1<V1ContainerImage> Images { get; public set; }
    [JsonPropertyNameAttribute("nodeInfo")]
public V1NodeSystemInfo NodeInfo { get; public set; }
    [JsonPropertyNameAttribute("phase")]
public string Phase { get; public set; }
    [JsonPropertyNameAttribute("runtimeHandlers")]
public IList`1<V1NodeRuntimeHandler> RuntimeHandlers { get; public set; }
    [JsonPropertyNameAttribute("volumesAttached")]
public IList`1<V1AttachedVolume> VolumesAttached { get; public set; }
    [JsonPropertyNameAttribute("volumesInUse")]
public IList`1<string> VolumesInUse { get; public set; }
    public V1NodeStatus(IList`1<V1NodeAddress> addresses, IDictionary`2<string, ResourceQuantity> allocatable, IDictionary`2<string, ResourceQuantity> capacity, IList`1<V1NodeCondition> conditions, V1NodeConfigStatus config, V1NodeDaemonEndpoints daemonEndpoints, V1NodeFeatures features, IList`1<V1ContainerImage> images, V1NodeSystemInfo nodeInfo, string phase, IList`1<V1NodeRuntimeHandler> runtimeHandlers, IList`1<V1AttachedVolume> volumesAttached, IList`1<string> volumesInUse);
    [CompilerGeneratedAttribute]
public IList`1<V1NodeAddress> get_Addresses();
    [CompilerGeneratedAttribute]
public void set_Addresses(IList`1<V1NodeAddress> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Allocatable();
    [CompilerGeneratedAttribute]
public void set_Allocatable(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IList`1<V1NodeCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1NodeCondition> value);
    [CompilerGeneratedAttribute]
public V1NodeConfigStatus get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(V1NodeConfigStatus value);
    [CompilerGeneratedAttribute]
public V1NodeDaemonEndpoints get_DaemonEndpoints();
    [CompilerGeneratedAttribute]
public void set_DaemonEndpoints(V1NodeDaemonEndpoints value);
    [CompilerGeneratedAttribute]
public V1NodeFeatures get_Features();
    [CompilerGeneratedAttribute]
public void set_Features(V1NodeFeatures value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerImage> get_Images();
    [CompilerGeneratedAttribute]
public void set_Images(IList`1<V1ContainerImage> value);
    [CompilerGeneratedAttribute]
public V1NodeSystemInfo get_NodeInfo();
    [CompilerGeneratedAttribute]
public void set_NodeInfo(V1NodeSystemInfo value);
    [CompilerGeneratedAttribute]
public string get_Phase();
    [CompilerGeneratedAttribute]
public void set_Phase(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1NodeRuntimeHandler> get_RuntimeHandlers();
    [CompilerGeneratedAttribute]
public void set_RuntimeHandlers(IList`1<V1NodeRuntimeHandler> value);
    [CompilerGeneratedAttribute]
public IList`1<V1AttachedVolume> get_VolumesAttached();
    [CompilerGeneratedAttribute]
public void set_VolumesAttached(IList`1<V1AttachedVolume> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_VolumesInUse();
    [CompilerGeneratedAttribute]
public void set_VolumesInUse(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1NodeSystemInfo : object {
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BootID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerRuntimeVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KernelVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KubeProxyVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KubeletVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MachineID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatingSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OsImage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SystemUUID>k__BackingField;
    [JsonPropertyNameAttribute("architecture")]
public string Architecture { get; public set; }
    [JsonPropertyNameAttribute("bootID")]
public string BootID { get; public set; }
    [JsonPropertyNameAttribute("containerRuntimeVersion")]
public string ContainerRuntimeVersion { get; public set; }
    [JsonPropertyNameAttribute("kernelVersion")]
public string KernelVersion { get; public set; }
    [JsonPropertyNameAttribute("kubeProxyVersion")]
public string KubeProxyVersion { get; public set; }
    [JsonPropertyNameAttribute("kubeletVersion")]
public string KubeletVersion { get; public set; }
    [JsonPropertyNameAttribute("machineID")]
public string MachineID { get; public set; }
    [JsonPropertyNameAttribute("operatingSystem")]
public string OperatingSystem { get; public set; }
    [JsonPropertyNameAttribute("osImage")]
public string OsImage { get; public set; }
    [JsonPropertyNameAttribute("systemUUID")]
public string SystemUUID { get; public set; }
    public V1NodeSystemInfo(string architecture, string bootID, string containerRuntimeVersion, string kernelVersion, string kubeProxyVersion, string kubeletVersion, string machineID, string operatingSystem, string osImage, string systemUUID);
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
    [CompilerGeneratedAttribute]
public string get_BootID();
    [CompilerGeneratedAttribute]
public void set_BootID(string value);
    [CompilerGeneratedAttribute]
public string get_ContainerRuntimeVersion();
    [CompilerGeneratedAttribute]
public void set_ContainerRuntimeVersion(string value);
    [CompilerGeneratedAttribute]
public string get_KernelVersion();
    [CompilerGeneratedAttribute]
public void set_KernelVersion(string value);
    [CompilerGeneratedAttribute]
public string get_KubeProxyVersion();
    [CompilerGeneratedAttribute]
public void set_KubeProxyVersion(string value);
    [CompilerGeneratedAttribute]
public string get_KubeletVersion();
    [CompilerGeneratedAttribute]
public void set_KubeletVersion(string value);
    [CompilerGeneratedAttribute]
public string get_MachineID();
    [CompilerGeneratedAttribute]
public void set_MachineID(string value);
    [CompilerGeneratedAttribute]
public string get_OperatingSystem();
    [CompilerGeneratedAttribute]
public void set_OperatingSystem(string value);
    [CompilerGeneratedAttribute]
public string get_OsImage();
    [CompilerGeneratedAttribute]
public void set_OsImage(string value);
    [CompilerGeneratedAttribute]
public string get_SystemUUID();
    [CompilerGeneratedAttribute]
public void set_SystemUUID(string value);
    public virtual void Validate();
}
public class k8s.Models.V1NonResourceAttributes : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verb>k__BackingField;
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    [JsonPropertyNameAttribute("verb")]
public string Verb { get; public set; }
    public V1NonResourceAttributes(string path, string verb);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Verb();
    [CompilerGeneratedAttribute]
public void set_Verb(string value);
    public virtual void Validate();
}
public class k8s.Models.V1NonResourcePolicyRule : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <NonResourceURLs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [JsonPropertyNameAttribute("nonResourceURLs")]
public IList`1<string> NonResourceURLs { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    public V1NonResourcePolicyRule(IList`1<string> nonResourceURLs, IList`1<string> verbs);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NonResourceURLs();
    [CompilerGeneratedAttribute]
public void set_NonResourceURLs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    public virtual void Validate();
    public static V1NonResourcePolicyRule op_Explicit(V1beta3NonResourcePolicyRule s);
}
public class k8s.Models.V1NonResourceRule : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <NonResourceURLs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [JsonPropertyNameAttribute("nonResourceURLs")]
public IList`1<string> NonResourceURLs { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    public V1NonResourceRule(IList`1<string> verbs, IList`1<string> nonResourceURLs);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NonResourceURLs();
    [CompilerGeneratedAttribute]
public void set_NonResourceURLs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1ObjectFieldSelector : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldPath>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("fieldPath")]
public string FieldPath { get; public set; }
    public V1ObjectFieldSelector(string fieldPath, string apiVersion);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_FieldPath();
    [CompilerGeneratedAttribute]
public void set_FieldPath(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ObjectMeta : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Annotations>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreationTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DeletionGracePeriodSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeletionTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Finalizers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GenerateName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Labels>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ManagedFieldsEntry> <ManagedFields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1OwnerReference> <OwnerReferences>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SelfLink>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("annotations")]
public IDictionary`2<string, string> Annotations { get; public set; }
    [JsonPropertyNameAttribute("creationTimestamp")]
public Nullable`1<DateTime> CreationTimestamp { get; public set; }
    [JsonPropertyNameAttribute("deletionGracePeriodSeconds")]
public Nullable`1<long> DeletionGracePeriodSeconds { get; public set; }
    [JsonPropertyNameAttribute("deletionTimestamp")]
public Nullable`1<DateTime> DeletionTimestamp { get; public set; }
    [JsonPropertyNameAttribute("finalizers")]
public IList`1<string> Finalizers { get; public set; }
    [JsonPropertyNameAttribute("generateName")]
public string GenerateName { get; public set; }
    [JsonPropertyNameAttribute("generation")]
public Nullable`1<long> Generation { get; public set; }
    [JsonPropertyNameAttribute("labels")]
public IDictionary`2<string, string> Labels { get; public set; }
    [JsonPropertyNameAttribute("managedFields")]
public IList`1<V1ManagedFieldsEntry> ManagedFields { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("ownerReferences")]
public IList`1<V1OwnerReference> OwnerReferences { get; public set; }
    [JsonPropertyNameAttribute("resourceVersion")]
public string ResourceVersion { get; public set; }
    [JsonPropertyNameAttribute("selfLink")]
public string SelfLink { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1ObjectMeta(IDictionary`2<string, string> annotations, Nullable`1<DateTime> creationTimestamp, Nullable`1<long> deletionGracePeriodSeconds, Nullable`1<DateTime> deletionTimestamp, IList`1<string> finalizers, string generateName, Nullable`1<long> generation, IDictionary`2<string, string> labels, IList`1<V1ManagedFieldsEntry> managedFields, string name, string namespaceProperty, IList`1<V1OwnerReference> ownerReferences, string resourceVersion, string selfLink, string uid);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Annotations();
    [CompilerGeneratedAttribute]
public void set_Annotations(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreationTimestamp();
    [CompilerGeneratedAttribute]
public void set_CreationTimestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DeletionGracePeriodSeconds();
    [CompilerGeneratedAttribute]
public void set_DeletionGracePeriodSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_DeletionTimestamp();
    [CompilerGeneratedAttribute]
public void set_DeletionTimestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Finalizers();
    [CompilerGeneratedAttribute]
public void set_Finalizers(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_GenerateName();
    [CompilerGeneratedAttribute]
public void set_GenerateName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ManagedFieldsEntry> get_ManagedFields();
    [CompilerGeneratedAttribute]
public void set_ManagedFields(IList`1<V1ManagedFieldsEntry> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1OwnerReference> get_OwnerReferences();
    [CompilerGeneratedAttribute]
public void set_OwnerReferences(IList`1<V1OwnerReference> value);
    [CompilerGeneratedAttribute]
public string get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(string value);
    [CompilerGeneratedAttribute]
public string get_SelfLink();
    [CompilerGeneratedAttribute]
public void set_SelfLink(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ObjectReference : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("fieldPath")]
public string FieldPath { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("resourceVersion")]
public string ResourceVersion { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1ObjectReference(string apiVersion, string fieldPath, string kind, string name, string namespaceProperty, string resourceVersion, string uid);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_FieldPath();
    [CompilerGeneratedAttribute]
public void set_FieldPath(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Overhead : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <PodFixed>k__BackingField;
    [JsonPropertyNameAttribute("podFixed")]
public IDictionary`2<string, ResourceQuantity> PodFixed { get; public set; }
    public V1Overhead(IDictionary`2<string, ResourceQuantity> podFixed);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_PodFixed();
    [CompilerGeneratedAttribute]
public void set_PodFixed(IDictionary`2<string, ResourceQuantity> value);
    public virtual void Validate();
}
public class k8s.Models.V1OwnerReference : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BlockOwnerDeletion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("blockOwnerDeletion")]
public Nullable`1<bool> BlockOwnerDeletion { get; public set; }
    [JsonPropertyNameAttribute("controller")]
public Nullable`1<bool> Controller { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1OwnerReference(string apiVersion, string kind, string name, string uid, Nullable`1<bool> blockOwnerDeletion, Nullable`1<bool> controller);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BlockOwnerDeletion();
    [CompilerGeneratedAttribute]
public void set_BlockOwnerDeletion(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Controller();
    [CompilerGeneratedAttribute]
public void set_Controller(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ParamKind : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    public V1ParamKind(string apiVersion, string kind);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    public virtual void Validate();
    public static V1ParamKind op_Explicit(V1alpha1ParamKind s);
    public static V1ParamKind op_Explicit(V1beta1ParamKind s);
}
public class k8s.Models.V1ParamRef : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterNotFoundAction>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("parameterNotFoundAction")]
public string ParameterNotFoundAction { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    public V1ParamRef(string name, string namespaceProperty, string parameterNotFoundAction, V1LabelSelector selector);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_ParameterNotFoundAction();
    [CompilerGeneratedAttribute]
public void set_ParameterNotFoundAction(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    public virtual void Validate();
    public static V1ParamRef op_Explicit(V1alpha1ParamRef s);
    public static V1ParamRef op_Explicit(V1beta1ParamRef s);
}
[JsonConverterAttribute("k8s.Models.V1PatchJsonConverter")]
public class k8s.Models.V1Patch : object {
    [CompilerGeneratedAttribute]
private PatchType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Content>k__BackingField;
    public PatchType Type { get; private set; }
    [JsonPropertyNameAttribute("content")]
public object Content { get; public set; }
    public V1Patch(object body, PatchType type);
    public V1Patch(object content);
    [CompilerGeneratedAttribute]
public PatchType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(PatchType value);
    private void CustomInit();
    [CompilerGeneratedAttribute]
public object get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(object value);
    public virtual void Validate();
}
internal class k8s.Models.V1PatchJsonConverter : JsonConverter`1<V1Patch> {
    public virtual V1Patch Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, V1Patch value, JsonSerializerOptions options);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PersistentVolume : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PersistentVolumeSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PersistentVolumeStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1PersistentVolumeSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1PersistentVolumeStatus Status { get; public set; }
    public V1PersistentVolume(string apiVersion, string kind, V1ObjectMeta metadata, V1PersistentVolumeSpec spec, V1PersistentVolumeStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1PersistentVolumeSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1PersistentVolumeSpec value);
    [CompilerGeneratedAttribute]
public V1PersistentVolumeStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1PersistentVolumeStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PersistentVolumeClaim : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PersistentVolumeClaimSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PersistentVolumeClaimStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1PersistentVolumeClaimSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1PersistentVolumeClaimStatus Status { get; public set; }
    public V1PersistentVolumeClaim(string apiVersion, string kind, V1ObjectMeta metadata, V1PersistentVolumeClaimSpec spec, V1PersistentVolumeClaimStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1PersistentVolumeClaimSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1PersistentVolumeClaimSpec value);
    [CompilerGeneratedAttribute]
public V1PersistentVolumeClaimStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1PersistentVolumeClaimStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1PersistentVolumeClaimCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastProbeTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastProbeTime")]
public Nullable`1<DateTime> LastProbeTime { get; public set; }
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1PersistentVolumeClaimCondition(string status, string type, Nullable`1<DateTime> lastProbeTime, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastProbeTime();
    [CompilerGeneratedAttribute]
public void set_LastProbeTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PersistentVolumeClaimList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PersistentVolumeClaim> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1PersistentVolumeClaim> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1PersistentVolumeClaimList(IList`1<V1PersistentVolumeClaim> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1PersistentVolumeClaim> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1PersistentVolumeClaim> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1PersistentVolumeClaimSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <AccessModes>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TypedLocalObjectReference <DataSource>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TypedObjectReference <DataSourceRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VolumeResourceRequirements <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeAttributesClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeName>k__BackingField;
    [JsonPropertyNameAttribute("accessModes")]
public IList`1<string> AccessModes { get; public set; }
    [JsonPropertyNameAttribute("dataSource")]
public V1TypedLocalObjectReference DataSource { get; public set; }
    [JsonPropertyNameAttribute("dataSourceRef")]
public V1TypedObjectReference DataSourceRef { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public V1VolumeResourceRequirements Resources { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    [JsonPropertyNameAttribute("storageClassName")]
public string StorageClassName { get; public set; }
    [JsonPropertyNameAttribute("volumeAttributesClassName")]
public string VolumeAttributesClassName { get; public set; }
    [JsonPropertyNameAttribute("volumeMode")]
public string VolumeMode { get; public set; }
    [JsonPropertyNameAttribute("volumeName")]
public string VolumeName { get; public set; }
    public V1PersistentVolumeClaimSpec(IList`1<string> accessModes, V1TypedLocalObjectReference dataSource, V1TypedObjectReference dataSourceRef, V1VolumeResourceRequirements resources, V1LabelSelector selector, string storageClassName, string volumeAttributesClassName, string volumeMode, string volumeName);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AccessModes();
    [CompilerGeneratedAttribute]
public void set_AccessModes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public V1TypedLocalObjectReference get_DataSource();
    [CompilerGeneratedAttribute]
public void set_DataSource(V1TypedLocalObjectReference value);
    [CompilerGeneratedAttribute]
public V1TypedObjectReference get_DataSourceRef();
    [CompilerGeneratedAttribute]
public void set_DataSourceRef(V1TypedObjectReference value);
    [CompilerGeneratedAttribute]
public V1VolumeResourceRequirements get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(V1VolumeResourceRequirements value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public string get_StorageClassName();
    [CompilerGeneratedAttribute]
public void set_StorageClassName(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeAttributesClassName();
    [CompilerGeneratedAttribute]
public void set_VolumeAttributesClassName(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeMode();
    [CompilerGeneratedAttribute]
public void set_VolumeMode(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeName();
    [CompilerGeneratedAttribute]
public void set_VolumeName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PersistentVolumeClaimStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <AccessModes>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <AllocatedResourceStatuses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <AllocatedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Capacity>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PersistentVolumeClaimCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentVolumeAttributesClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ModifyVolumeStatus <ModifyVolumeStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Phase>k__BackingField;
    [JsonPropertyNameAttribute("accessModes")]
public IList`1<string> AccessModes { get; public set; }
    [JsonPropertyNameAttribute("allocatedResourceStatuses")]
public IDictionary`2<string, string> AllocatedResourceStatuses { get; public set; }
    [JsonPropertyNameAttribute("allocatedResources")]
public IDictionary`2<string, ResourceQuantity> AllocatedResources { get; public set; }
    [JsonPropertyNameAttribute("capacity")]
public IDictionary`2<string, ResourceQuantity> Capacity { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1PersistentVolumeClaimCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("currentVolumeAttributesClassName")]
public string CurrentVolumeAttributesClassName { get; public set; }
    [JsonPropertyNameAttribute("modifyVolumeStatus")]
public V1ModifyVolumeStatus ModifyVolumeStatus { get; public set; }
    [JsonPropertyNameAttribute("phase")]
public string Phase { get; public set; }
    public V1PersistentVolumeClaimStatus(IList`1<string> accessModes, IDictionary`2<string, string> allocatedResourceStatuses, IDictionary`2<string, ResourceQuantity> allocatedResources, IDictionary`2<string, ResourceQuantity> capacity, IList`1<V1PersistentVolumeClaimCondition> conditions, string currentVolumeAttributesClassName, V1ModifyVolumeStatus modifyVolumeStatus, string phase);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AccessModes();
    [CompilerGeneratedAttribute]
public void set_AccessModes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_AllocatedResourceStatuses();
    [CompilerGeneratedAttribute]
public void set_AllocatedResourceStatuses(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_AllocatedResources();
    [CompilerGeneratedAttribute]
public void set_AllocatedResources(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IList`1<V1PersistentVolumeClaimCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1PersistentVolumeClaimCondition> value);
    [CompilerGeneratedAttribute]
public string get_CurrentVolumeAttributesClassName();
    [CompilerGeneratedAttribute]
public void set_CurrentVolumeAttributesClassName(string value);
    [CompilerGeneratedAttribute]
public V1ModifyVolumeStatus get_ModifyVolumeStatus();
    [CompilerGeneratedAttribute]
public void set_ModifyVolumeStatus(V1ModifyVolumeStatus value);
    [CompilerGeneratedAttribute]
public string get_Phase();
    [CompilerGeneratedAttribute]
public void set_Phase(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PersistentVolumeClaimTemplate : object {
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PersistentVolumeClaimSpec <Spec>k__BackingField;
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1PersistentVolumeClaimSpec Spec { get; public set; }
    public V1PersistentVolumeClaimTemplate(V1PersistentVolumeClaimSpec spec, V1ObjectMeta metadata);
    [CompilerGeneratedAttribute]
public V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1PersistentVolumeClaimSpec get_Spec();
    [CompilerGeneratedAttribute]
public void set_Spec(V1PersistentVolumeClaimSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1PersistentVolumeClaimVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <ClaimName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [JsonPropertyNameAttribute("claimName")]
public string ClaimName { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    public V1PersistentVolumeClaimVolumeSource(string claimName, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_ClaimName();
    [CompilerGeneratedAttribute]
public void set_ClaimName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PersistentVolumeList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PersistentVolume> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1PersistentVolume> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1PersistentVolumeList(IList`1<V1PersistentVolume> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1PersistentVolume> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1PersistentVolume> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1PersistentVolumeSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <AccessModes>k__BackingField;
    [CompilerGeneratedAttribute]
private V1AWSElasticBlockStoreVolumeSource <AwsElasticBlockStore>k__BackingField;
    [CompilerGeneratedAttribute]
private V1AzureDiskVolumeSource <AzureDisk>k__BackingField;
    [CompilerGeneratedAttribute]
private V1AzureFilePersistentVolumeSource <AzureFile>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Capacity>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CephFSPersistentVolumeSource <Cephfs>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CinderPersistentVolumeSource <Cinder>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <ClaimRef>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CSIPersistentVolumeSource <Csi>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FCVolumeSource <Fc>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FlexPersistentVolumeSource <FlexVolume>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FlockerVolumeSource <Flocker>k__BackingField;
    [CompilerGeneratedAttribute]
private V1GCEPersistentDiskVolumeSource <GcePersistentDisk>k__BackingField;
    [CompilerGeneratedAttribute]
private V1GlusterfsPersistentVolumeSource <Glusterfs>k__BackingField;
    [CompilerGeneratedAttribute]
private V1HostPathVolumeSource <HostPath>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ISCSIPersistentVolumeSource <Iscsi>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalVolumeSource <Local>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <MountOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NFSVolumeSource <Nfs>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VolumeNodeAffinity <NodeAffinity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PersistentVolumeReclaimPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PhotonPersistentDiskVolumeSource <PhotonPersistentDisk>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PortworxVolumeSource <PortworxVolume>k__BackingField;
    [CompilerGeneratedAttribute]
private V1QuobyteVolumeSource <Quobyte>k__BackingField;
    [CompilerGeneratedAttribute]
private V1RBDPersistentVolumeSource <Rbd>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ScaleIOPersistentVolumeSource <ScaleIO>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StorageOSPersistentVolumeSource <Storageos>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeAttributesClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeMode>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VsphereVirtualDiskVolumeSource <VsphereVolume>k__BackingField;
    [JsonPropertyNameAttribute("accessModes")]
public IList`1<string> AccessModes { get; public set; }
    [JsonPropertyNameAttribute("awsElasticBlockStore")]
public V1AWSElasticBlockStoreVolumeSource AwsElasticBlockStore { get; public set; }
    [JsonPropertyNameAttribute("azureDisk")]
public V1AzureDiskVolumeSource AzureDisk { get; public set; }
    [JsonPropertyNameAttribute("azureFile")]
public V1AzureFilePersistentVolumeSource AzureFile { get; public set; }
    [JsonPropertyNameAttribute("capacity")]
public IDictionary`2<string, ResourceQuantity> Capacity { get; public set; }
    [JsonPropertyNameAttribute("cephfs")]
public V1CephFSPersistentVolumeSource Cephfs { get; public set; }
    [JsonPropertyNameAttribute("cinder")]
public V1CinderPersistentVolumeSource Cinder { get; public set; }
    [JsonPropertyNameAttribute("claimRef")]
public V1ObjectReference ClaimRef { get; public set; }
    [JsonPropertyNameAttribute("csi")]
public V1CSIPersistentVolumeSource Csi { get; public set; }
    [JsonPropertyNameAttribute("fc")]
public V1FCVolumeSource Fc { get; public set; }
    [JsonPropertyNameAttribute("flexVolume")]
public V1FlexPersistentVolumeSource FlexVolume { get; public set; }
    [JsonPropertyNameAttribute("flocker")]
public V1FlockerVolumeSource Flocker { get; public set; }
    [JsonPropertyNameAttribute("gcePersistentDisk")]
public V1GCEPersistentDiskVolumeSource GcePersistentDisk { get; public set; }
    [JsonPropertyNameAttribute("glusterfs")]
public V1GlusterfsPersistentVolumeSource Glusterfs { get; public set; }
    [JsonPropertyNameAttribute("hostPath")]
public V1HostPathVolumeSource HostPath { get; public set; }
    [JsonPropertyNameAttribute("iscsi")]
public V1ISCSIPersistentVolumeSource Iscsi { get; public set; }
    [JsonPropertyNameAttribute("local")]
public V1LocalVolumeSource Local { get; public set; }
    [JsonPropertyNameAttribute("mountOptions")]
public IList`1<string> MountOptions { get; public set; }
    [JsonPropertyNameAttribute("nfs")]
public V1NFSVolumeSource Nfs { get; public set; }
    [JsonPropertyNameAttribute("nodeAffinity")]
public V1VolumeNodeAffinity NodeAffinity { get; public set; }
    [JsonPropertyNameAttribute("persistentVolumeReclaimPolicy")]
public string PersistentVolumeReclaimPolicy { get; public set; }
    [JsonPropertyNameAttribute("photonPersistentDisk")]
public V1PhotonPersistentDiskVolumeSource PhotonPersistentDisk { get; public set; }
    [JsonPropertyNameAttribute("portworxVolume")]
public V1PortworxVolumeSource PortworxVolume { get; public set; }
    [JsonPropertyNameAttribute("quobyte")]
public V1QuobyteVolumeSource Quobyte { get; public set; }
    [JsonPropertyNameAttribute("rbd")]
public V1RBDPersistentVolumeSource Rbd { get; public set; }
    [JsonPropertyNameAttribute("scaleIO")]
public V1ScaleIOPersistentVolumeSource ScaleIO { get; public set; }
    [JsonPropertyNameAttribute("storageClassName")]
public string StorageClassName { get; public set; }
    [JsonPropertyNameAttribute("storageos")]
public V1StorageOSPersistentVolumeSource Storageos { get; public set; }
    [JsonPropertyNameAttribute("volumeAttributesClassName")]
public string VolumeAttributesClassName { get; public set; }
    [JsonPropertyNameAttribute("volumeMode")]
public string VolumeMode { get; public set; }
    [JsonPropertyNameAttribute("vsphereVolume")]
public V1VsphereVirtualDiskVolumeSource VsphereVolume { get; public set; }
    public V1PersistentVolumeSpec(IList`1<string> accessModes, V1AWSElasticBlockStoreVolumeSource awsElasticBlockStore, V1AzureDiskVolumeSource azureDisk, V1AzureFilePersistentVolumeSource azureFile, IDictionary`2<string, ResourceQuantity> capacity, V1CephFSPersistentVolumeSource cephfs, V1CinderPersistentVolumeSource cinder, V1ObjectReference claimRef, V1CSIPersistentVolumeSource csi, V1FCVolumeSource fc, V1FlexPersistentVolumeSource flexVolume, V1FlockerVolumeSource flocker, V1GCEPersistentDiskVolumeSource gcePersistentDisk, V1GlusterfsPersistentVolumeSource glusterfs, V1HostPathVolumeSource hostPath, V1ISCSIPersistentVolumeSource iscsi, V1LocalVolumeSource local, IList`1<string> mountOptions, V1NFSVolumeSource nfs, V1VolumeNodeAffinity nodeAffinity, string persistentVolumeReclaimPolicy, V1PhotonPersistentDiskVolumeSource photonPersistentDisk, V1PortworxVolumeSource portworxVolume, V1QuobyteVolumeSource quobyte, V1RBDPersistentVolumeSource rbd, V1ScaleIOPersistentVolumeSource scaleIO, string storageClassName, V1StorageOSPersistentVolumeSource storageos, string volumeAttributesClassName, string volumeMode, V1VsphereVirtualDiskVolumeSource vsphereVolume);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AccessModes();
    [CompilerGeneratedAttribute]
public void set_AccessModes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public V1AWSElasticBlockStoreVolumeSource get_AwsElasticBlockStore();
    [CompilerGeneratedAttribute]
public void set_AwsElasticBlockStore(V1AWSElasticBlockStoreVolumeSource value);
    [CompilerGeneratedAttribute]
public V1AzureDiskVolumeSource get_AzureDisk();
    [CompilerGeneratedAttribute]
public void set_AzureDisk(V1AzureDiskVolumeSource value);
    [CompilerGeneratedAttribute]
public V1AzureFilePersistentVolumeSource get_AzureFile();
    [CompilerGeneratedAttribute]
public void set_AzureFile(V1AzureFilePersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public V1CephFSPersistentVolumeSource get_Cephfs();
    [CompilerGeneratedAttribute]
public void set_Cephfs(V1CephFSPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public V1CinderPersistentVolumeSource get_Cinder();
    [CompilerGeneratedAttribute]
public void set_Cinder(V1CinderPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_ClaimRef();
    [CompilerGeneratedAttribute]
public void set_ClaimRef(V1ObjectReference value);
    [CompilerGeneratedAttribute]
public V1CSIPersistentVolumeSource get_Csi();
    [CompilerGeneratedAttribute]
public void set_Csi(V1CSIPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public V1FCVolumeSource get_Fc();
    [CompilerGeneratedAttribute]
public void set_Fc(V1FCVolumeSource value);
    [CompilerGeneratedAttribute]
public V1FlexPersistentVolumeSource get_FlexVolume();
    [CompilerGeneratedAttribute]
public void set_FlexVolume(V1FlexPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public V1FlockerVolumeSource get_Flocker();
    [CompilerGeneratedAttribute]
public void set_Flocker(V1FlockerVolumeSource value);
    [CompilerGeneratedAttribute]
public V1GCEPersistentDiskVolumeSource get_GcePersistentDisk();
    [CompilerGeneratedAttribute]
public void set_GcePersistentDisk(V1GCEPersistentDiskVolumeSource value);
    [CompilerGeneratedAttribute]
public V1GlusterfsPersistentVolumeSource get_Glusterfs();
    [CompilerGeneratedAttribute]
public void set_Glusterfs(V1GlusterfsPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public V1HostPathVolumeSource get_HostPath();
    [CompilerGeneratedAttribute]
public void set_HostPath(V1HostPathVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ISCSIPersistentVolumeSource get_Iscsi();
    [CompilerGeneratedAttribute]
public void set_Iscsi(V1ISCSIPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public V1LocalVolumeSource get_Local();
    [CompilerGeneratedAttribute]
public void set_Local(V1LocalVolumeSource value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_MountOptions();
    [CompilerGeneratedAttribute]
public void set_MountOptions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public V1NFSVolumeSource get_Nfs();
    [CompilerGeneratedAttribute]
public void set_Nfs(V1NFSVolumeSource value);
    [CompilerGeneratedAttribute]
public V1VolumeNodeAffinity get_NodeAffinity();
    [CompilerGeneratedAttribute]
public void set_NodeAffinity(V1VolumeNodeAffinity value);
    [CompilerGeneratedAttribute]
public string get_PersistentVolumeReclaimPolicy();
    [CompilerGeneratedAttribute]
public void set_PersistentVolumeReclaimPolicy(string value);
    [CompilerGeneratedAttribute]
public V1PhotonPersistentDiskVolumeSource get_PhotonPersistentDisk();
    [CompilerGeneratedAttribute]
public void set_PhotonPersistentDisk(V1PhotonPersistentDiskVolumeSource value);
    [CompilerGeneratedAttribute]
public V1PortworxVolumeSource get_PortworxVolume();
    [CompilerGeneratedAttribute]
public void set_PortworxVolume(V1PortworxVolumeSource value);
    [CompilerGeneratedAttribute]
public V1QuobyteVolumeSource get_Quobyte();
    [CompilerGeneratedAttribute]
public void set_Quobyte(V1QuobyteVolumeSource value);
    [CompilerGeneratedAttribute]
public V1RBDPersistentVolumeSource get_Rbd();
    [CompilerGeneratedAttribute]
public void set_Rbd(V1RBDPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ScaleIOPersistentVolumeSource get_ScaleIO();
    [CompilerGeneratedAttribute]
public void set_ScaleIO(V1ScaleIOPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public string get_StorageClassName();
    [CompilerGeneratedAttribute]
public void set_StorageClassName(string value);
    [CompilerGeneratedAttribute]
public V1StorageOSPersistentVolumeSource get_Storageos();
    [CompilerGeneratedAttribute]
public void set_Storageos(V1StorageOSPersistentVolumeSource value);
    [CompilerGeneratedAttribute]
public string get_VolumeAttributesClassName();
    [CompilerGeneratedAttribute]
public void set_VolumeAttributesClassName(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeMode();
    [CompilerGeneratedAttribute]
public void set_VolumeMode(string value);
    [CompilerGeneratedAttribute]
public V1VsphereVirtualDiskVolumeSource get_VsphereVolume();
    [CompilerGeneratedAttribute]
public void set_VsphereVolume(V1VsphereVirtualDiskVolumeSource value);
    public virtual void Validate();
}
public class k8s.Models.V1PersistentVolumeStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastPhaseTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Phase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyNameAttribute("lastPhaseTransitionTime")]
public Nullable`1<DateTime> LastPhaseTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("phase")]
public string Phase { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    public V1PersistentVolumeStatus(Nullable`1<DateTime> lastPhaseTransitionTime, string message, string phase, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastPhaseTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastPhaseTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Phase();
    [CompilerGeneratedAttribute]
public void set_Phase(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PhotonPersistentDiskVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PdID>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("pdID")]
public string PdID { get; public set; }
    public V1PhotonPersistentDiskVolumeSource(string pdID, string fsType);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_PdID();
    [CompilerGeneratedAttribute]
public void set_PdID(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Pod : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1PodSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1PodStatus Status { get; public set; }
    public V1Pod(string apiVersion, string kind, V1ObjectMeta metadata, V1PodSpec spec, V1PodStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1PodSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1PodSpec value);
    [CompilerGeneratedAttribute]
public V1PodStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1PodStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1PodAffinity : object {
    [CompilerGeneratedAttribute]
private IList`1<V1WeightedPodAffinityTerm> <PreferredDuringSchedulingIgnoredDuringExecution>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodAffinityTerm> <RequiredDuringSchedulingIgnoredDuringExecution>k__BackingField;
    [JsonPropertyNameAttribute("preferredDuringSchedulingIgnoredDuringExecution")]
public IList`1<V1WeightedPodAffinityTerm> PreferredDuringSchedulingIgnoredDuringExecution { get; public set; }
    [JsonPropertyNameAttribute("requiredDuringSchedulingIgnoredDuringExecution")]
public IList`1<V1PodAffinityTerm> RequiredDuringSchedulingIgnoredDuringExecution { get; public set; }
    public V1PodAffinity(IList`1<V1WeightedPodAffinityTerm> preferredDuringSchedulingIgnoredDuringExecution, IList`1<V1PodAffinityTerm> requiredDuringSchedulingIgnoredDuringExecution);
    [CompilerGeneratedAttribute]
public IList`1<V1WeightedPodAffinityTerm> get_PreferredDuringSchedulingIgnoredDuringExecution();
    [CompilerGeneratedAttribute]
public void set_PreferredDuringSchedulingIgnoredDuringExecution(IList`1<V1WeightedPodAffinityTerm> value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodAffinityTerm> get_RequiredDuringSchedulingIgnoredDuringExecution();
    [CompilerGeneratedAttribute]
public void set_RequiredDuringSchedulingIgnoredDuringExecution(IList`1<V1PodAffinityTerm> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodAffinityTerm : object {
    [CompilerGeneratedAttribute]
private V1LabelSelector <LabelSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <MatchLabelKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <MismatchLabelKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NamespaceSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Namespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TopologyKey>k__BackingField;
    [JsonPropertyNameAttribute("labelSelector")]
public V1LabelSelector LabelSelector { get; public set; }
    [JsonPropertyNameAttribute("matchLabelKeys")]
public IList`1<string> MatchLabelKeys { get; public set; }
    [JsonPropertyNameAttribute("mismatchLabelKeys")]
public IList`1<string> MismatchLabelKeys { get; public set; }
    [JsonPropertyNameAttribute("namespaceSelector")]
public V1LabelSelector NamespaceSelector { get; public set; }
    [JsonPropertyNameAttribute("namespaces")]
public IList`1<string> Namespaces { get; public set; }
    [JsonPropertyNameAttribute("topologyKey")]
public string TopologyKey { get; public set; }
    public V1PodAffinityTerm(string topologyKey, V1LabelSelector labelSelector, IList`1<string> matchLabelKeys, IList`1<string> mismatchLabelKeys, V1LabelSelector namespaceSelector, IList`1<string> namespaces);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_LabelSelector();
    [CompilerGeneratedAttribute]
public void set_LabelSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_MatchLabelKeys();
    [CompilerGeneratedAttribute]
public void set_MatchLabelKeys(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_MismatchLabelKeys();
    [CompilerGeneratedAttribute]
public void set_MismatchLabelKeys(IList`1<string> value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NamespaceSelector();
    [CompilerGeneratedAttribute]
public void set_NamespaceSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Namespaces();
    [CompilerGeneratedAttribute]
public void set_Namespaces(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_TopologyKey();
    [CompilerGeneratedAttribute]
public void set_TopologyKey(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodAntiAffinity : object {
    [CompilerGeneratedAttribute]
private IList`1<V1WeightedPodAffinityTerm> <PreferredDuringSchedulingIgnoredDuringExecution>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodAffinityTerm> <RequiredDuringSchedulingIgnoredDuringExecution>k__BackingField;
    [JsonPropertyNameAttribute("preferredDuringSchedulingIgnoredDuringExecution")]
public IList`1<V1WeightedPodAffinityTerm> PreferredDuringSchedulingIgnoredDuringExecution { get; public set; }
    [JsonPropertyNameAttribute("requiredDuringSchedulingIgnoredDuringExecution")]
public IList`1<V1PodAffinityTerm> RequiredDuringSchedulingIgnoredDuringExecution { get; public set; }
    public V1PodAntiAffinity(IList`1<V1WeightedPodAffinityTerm> preferredDuringSchedulingIgnoredDuringExecution, IList`1<V1PodAffinityTerm> requiredDuringSchedulingIgnoredDuringExecution);
    [CompilerGeneratedAttribute]
public IList`1<V1WeightedPodAffinityTerm> get_PreferredDuringSchedulingIgnoredDuringExecution();
    [CompilerGeneratedAttribute]
public void set_PreferredDuringSchedulingIgnoredDuringExecution(IList`1<V1WeightedPodAffinityTerm> value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodAffinityTerm> get_RequiredDuringSchedulingIgnoredDuringExecution();
    [CompilerGeneratedAttribute]
public void set_RequiredDuringSchedulingIgnoredDuringExecution(IList`1<V1PodAffinityTerm> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastProbeTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastProbeTime")]
public Nullable`1<DateTime> LastProbeTime { get; public set; }
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1PodCondition(string status, string type, Nullable`1<DateTime> lastProbeTime, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastProbeTime();
    [CompilerGeneratedAttribute]
public void set_LastProbeTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PodDisruptionBudget : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodDisruptionBudgetSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodDisruptionBudgetStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1PodDisruptionBudgetSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1PodDisruptionBudgetStatus Status { get; public set; }
    public V1PodDisruptionBudget(string apiVersion, string kind, V1ObjectMeta metadata, V1PodDisruptionBudgetSpec spec, V1PodDisruptionBudgetStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1PodDisruptionBudgetSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1PodDisruptionBudgetSpec value);
    [CompilerGeneratedAttribute]
public V1PodDisruptionBudgetStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1PodDisruptionBudgetStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PodDisruptionBudgetList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodDisruptionBudget> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1PodDisruptionBudget> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1PodDisruptionBudgetList(IList`1<V1PodDisruptionBudget> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1PodDisruptionBudget> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1PodDisruptionBudget> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1PodDisruptionBudgetSpec : object {
    [CompilerGeneratedAttribute]
private IntstrIntOrString <MaxUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private IntstrIntOrString <MinAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnhealthyPodEvictionPolicy>k__BackingField;
    [JsonPropertyNameAttribute("maxUnavailable")]
public IntstrIntOrString MaxUnavailable { get; public set; }
    [JsonPropertyNameAttribute("minAvailable")]
public IntstrIntOrString MinAvailable { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    [JsonPropertyNameAttribute("unhealthyPodEvictionPolicy")]
public string UnhealthyPodEvictionPolicy { get; public set; }
    public V1PodDisruptionBudgetSpec(IntstrIntOrString maxUnavailable, IntstrIntOrString minAvailable, V1LabelSelector selector, string unhealthyPodEvictionPolicy);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_MaxUnavailable();
    [CompilerGeneratedAttribute]
public void set_MaxUnavailable(IntstrIntOrString value);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_MinAvailable();
    [CompilerGeneratedAttribute]
public void set_MinAvailable(IntstrIntOrString value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public string get_UnhealthyPodEvictionPolicy();
    [CompilerGeneratedAttribute]
public void set_UnhealthyPodEvictionPolicy(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodDisruptionBudgetStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentHealthy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DesiredHealthy>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Nullable`1<DateTime>> <DisruptedPods>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DisruptionsAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExpectedPods>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1Condition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("currentHealthy")]
public int CurrentHealthy { get; public set; }
    [JsonPropertyNameAttribute("desiredHealthy")]
public int DesiredHealthy { get; public set; }
    [JsonPropertyNameAttribute("disruptedPods")]
public IDictionary`2<string, Nullable`1<DateTime>> DisruptedPods { get; public set; }
    [JsonPropertyNameAttribute("disruptionsAllowed")]
public int DisruptionsAllowed { get; public set; }
    [JsonPropertyNameAttribute("expectedPods")]
public int ExpectedPods { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    public V1PodDisruptionBudgetStatus(int currentHealthy, int desiredHealthy, int disruptionsAllowed, int expectedPods, IList`1<V1Condition> conditions, IDictionary`2<string, Nullable`1<DateTime>> disruptedPods, Nullable`1<long> observedGeneration);
    [CompilerGeneratedAttribute]
public IList`1<V1Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1Condition> value);
    [CompilerGeneratedAttribute]
public int get_CurrentHealthy();
    [CompilerGeneratedAttribute]
public void set_CurrentHealthy(int value);
    [CompilerGeneratedAttribute]
public int get_DesiredHealthy();
    [CompilerGeneratedAttribute]
public void set_DesiredHealthy(int value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, Nullable`1<DateTime>> get_DisruptedPods();
    [CompilerGeneratedAttribute]
public void set_DisruptedPods(IDictionary`2<string, Nullable`1<DateTime>> value);
    [CompilerGeneratedAttribute]
public int get_DisruptionsAllowed();
    [CompilerGeneratedAttribute]
public void set_DisruptionsAllowed(int value);
    [CompilerGeneratedAttribute]
public int get_ExpectedPods();
    [CompilerGeneratedAttribute]
public void set_ExpectedPods(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodDNSConfig : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Nameservers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodDNSConfigOption> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Searches>k__BackingField;
    [JsonPropertyNameAttribute("nameservers")]
public IList`1<string> Nameservers { get; public set; }
    [JsonPropertyNameAttribute("options")]
public IList`1<V1PodDNSConfigOption> Options { get; public set; }
    [JsonPropertyNameAttribute("searches")]
public IList`1<string> Searches { get; public set; }
    public V1PodDNSConfig(IList`1<string> nameservers, IList`1<V1PodDNSConfigOption> options, IList`1<string> searches);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Nameservers();
    [CompilerGeneratedAttribute]
public void set_Nameservers(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodDNSConfigOption> get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(IList`1<V1PodDNSConfigOption> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Searches();
    [CompilerGeneratedAttribute]
public void set_Searches(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodDNSConfigOption : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    public V1PodDNSConfigOption(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodFailurePolicy : object {
    [CompilerGeneratedAttribute]
private IList`1<V1PodFailurePolicyRule> <Rules>k__BackingField;
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1PodFailurePolicyRule> Rules { get; public set; }
    public V1PodFailurePolicy(IList`1<V1PodFailurePolicyRule> rules);
    [CompilerGeneratedAttribute]
public IList`1<V1PodFailurePolicyRule> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1PodFailurePolicyRule> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodFailurePolicyOnExitCodesRequirement : object {
    [CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatorProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<int> <Values>k__BackingField;
    [JsonPropertyNameAttribute("containerName")]
public string ContainerName { get; public set; }
    [JsonPropertyNameAttribute("operator")]
public string OperatorProperty { get; public set; }
    [JsonPropertyNameAttribute("values")]
public IList`1<int> Values { get; public set; }
    public V1PodFailurePolicyOnExitCodesRequirement(string operatorProperty, IList`1<int> values, string containerName);
    [CompilerGeneratedAttribute]
public string get_ContainerName();
    [CompilerGeneratedAttribute]
public void set_ContainerName(string value);
    [CompilerGeneratedAttribute]
public string get_OperatorProperty();
    [CompilerGeneratedAttribute]
public void set_OperatorProperty(string value);
    [CompilerGeneratedAttribute]
public IList`1<int> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IList`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodFailurePolicyOnPodConditionsPattern : object {
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1PodFailurePolicyOnPodConditionsPattern(string status, string type);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodFailurePolicyRule : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodFailurePolicyOnExitCodesRequirement <OnExitCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodFailurePolicyOnPodConditionsPattern> <OnPodConditions>k__BackingField;
    [JsonPropertyNameAttribute("action")]
public string Action { get; public set; }
    [JsonPropertyNameAttribute("onExitCodes")]
public V1PodFailurePolicyOnExitCodesRequirement OnExitCodes { get; public set; }
    [JsonPropertyNameAttribute("onPodConditions")]
public IList`1<V1PodFailurePolicyOnPodConditionsPattern> OnPodConditions { get; public set; }
    public V1PodFailurePolicyRule(string action, V1PodFailurePolicyOnExitCodesRequirement onExitCodes, IList`1<V1PodFailurePolicyOnPodConditionsPattern> onPodConditions);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public V1PodFailurePolicyOnExitCodesRequirement get_OnExitCodes();
    [CompilerGeneratedAttribute]
public void set_OnExitCodes(V1PodFailurePolicyOnExitCodesRequirement value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodFailurePolicyOnPodConditionsPattern> get_OnPodConditions();
    [CompilerGeneratedAttribute]
public void set_OnPodConditions(IList`1<V1PodFailurePolicyOnPodConditionsPattern> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodIP : object {
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [JsonPropertyNameAttribute("ip")]
public string Ip { get; public set; }
    public V1PodIP(string ip);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PodList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Pod> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Pod> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1PodList(IList`1<V1Pod> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Pod> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Pod> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1PodOS : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1PodOS(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodReadinessGate : object {
    [CompilerGeneratedAttribute]
private string <ConditionType>k__BackingField;
    [JsonPropertyNameAttribute("conditionType")]
public string ConditionType { get; public set; }
    public V1PodReadinessGate(string conditionType);
    [CompilerGeneratedAttribute]
public string get_ConditionType();
    [CompilerGeneratedAttribute]
public void set_ConditionType(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodResourceClaim : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceClaimName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceClaimTemplateName>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("resourceClaimName")]
public string ResourceClaimName { get; public set; }
    [JsonPropertyNameAttribute("resourceClaimTemplateName")]
public string ResourceClaimTemplateName { get; public set; }
    public V1PodResourceClaim(string name, string resourceClaimName, string resourceClaimTemplateName);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceClaimName();
    [CompilerGeneratedAttribute]
public void set_ResourceClaimName(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceClaimTemplateName();
    [CompilerGeneratedAttribute]
public void set_ResourceClaimTemplateName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodResourceClaimStatus : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceClaimName>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("resourceClaimName")]
public string ResourceClaimName { get; public set; }
    public V1PodResourceClaimStatus(string name, string resourceClaimName);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceClaimName();
    [CompilerGeneratedAttribute]
public void set_ResourceClaimName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodSchedulingGate : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1PodSchedulingGate(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PodSecurityContext : object {
    [CompilerGeneratedAttribute]
private V1AppArmorProfile <AppArmorProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <FsGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FsGroupChangePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RunAsGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RunAsNonRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RunAsUser>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SELinuxOptions <SeLinuxOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SeccompProfile <SeccompProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Nullable`1<long>> <SupplementalGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SupplementalGroupsPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Sysctl> <Sysctls>k__BackingField;
    [CompilerGeneratedAttribute]
private V1WindowsSecurityContextOptions <WindowsOptions>k__BackingField;
    [JsonPropertyNameAttribute("appArmorProfile")]
public V1AppArmorProfile AppArmorProfile { get; public set; }
    [JsonPropertyNameAttribute("fsGroup")]
public Nullable`1<long> FsGroup { get; public set; }
    [JsonPropertyNameAttribute("fsGroupChangePolicy")]
public string FsGroupChangePolicy { get; public set; }
    [JsonPropertyNameAttribute("runAsGroup")]
public Nullable`1<long> RunAsGroup { get; public set; }
    [JsonPropertyNameAttribute("runAsNonRoot")]
public Nullable`1<bool> RunAsNonRoot { get; public set; }
    [JsonPropertyNameAttribute("runAsUser")]
public Nullable`1<long> RunAsUser { get; public set; }
    [JsonPropertyNameAttribute("seLinuxOptions")]
public V1SELinuxOptions SeLinuxOptions { get; public set; }
    [JsonPropertyNameAttribute("seccompProfile")]
public V1SeccompProfile SeccompProfile { get; public set; }
    [JsonPropertyNameAttribute("supplementalGroups")]
public IList`1<Nullable`1<long>> SupplementalGroups { get; public set; }
    [JsonPropertyNameAttribute("supplementalGroupsPolicy")]
public string SupplementalGroupsPolicy { get; public set; }
    [JsonPropertyNameAttribute("sysctls")]
public IList`1<V1Sysctl> Sysctls { get; public set; }
    [JsonPropertyNameAttribute("windowsOptions")]
public V1WindowsSecurityContextOptions WindowsOptions { get; public set; }
    public V1PodSecurityContext(V1AppArmorProfile appArmorProfile, Nullable`1<long> fsGroup, string fsGroupChangePolicy, Nullable`1<long> runAsGroup, Nullable`1<bool> runAsNonRoot, Nullable`1<long> runAsUser, V1SELinuxOptions seLinuxOptions, V1SeccompProfile seccompProfile, IList`1<Nullable`1<long>> supplementalGroups, string supplementalGroupsPolicy, IList`1<V1Sysctl> sysctls, V1WindowsSecurityContextOptions windowsOptions);
    [CompilerGeneratedAttribute]
public V1AppArmorProfile get_AppArmorProfile();
    [CompilerGeneratedAttribute]
public void set_AppArmorProfile(V1AppArmorProfile value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_FsGroup();
    [CompilerGeneratedAttribute]
public void set_FsGroup(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_FsGroupChangePolicy();
    [CompilerGeneratedAttribute]
public void set_FsGroupChangePolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RunAsGroup();
    [CompilerGeneratedAttribute]
public void set_RunAsGroup(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RunAsNonRoot();
    [CompilerGeneratedAttribute]
public void set_RunAsNonRoot(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RunAsUser();
    [CompilerGeneratedAttribute]
public void set_RunAsUser(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public V1SELinuxOptions get_SeLinuxOptions();
    [CompilerGeneratedAttribute]
public void set_SeLinuxOptions(V1SELinuxOptions value);
    [CompilerGeneratedAttribute]
public V1SeccompProfile get_SeccompProfile();
    [CompilerGeneratedAttribute]
public void set_SeccompProfile(V1SeccompProfile value);
    [CompilerGeneratedAttribute]
public IList`1<Nullable`1<long>> get_SupplementalGroups();
    [CompilerGeneratedAttribute]
public void set_SupplementalGroups(IList`1<Nullable`1<long>> value);
    [CompilerGeneratedAttribute]
public string get_SupplementalGroupsPolicy();
    [CompilerGeneratedAttribute]
public void set_SupplementalGroupsPolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1Sysctl> get_Sysctls();
    [CompilerGeneratedAttribute]
public void set_Sysctls(IList`1<V1Sysctl> value);
    [CompilerGeneratedAttribute]
public V1WindowsSecurityContextOptions get_WindowsOptions();
    [CompilerGeneratedAttribute]
public void set_WindowsOptions(V1WindowsSecurityContextOptions value);
    public virtual void Validate();
}
public class k8s.Models.V1PodSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ActiveDeadlineSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Affinity <Affinity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutomountServiceAccountToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Container> <Containers>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodDNSConfig <DnsConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DnsPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableServiceLinks>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1EphemeralContainer> <EphemeralContainers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1HostAlias> <HostAliases>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HostIPC>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HostNetwork>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HostPID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HostUsers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1LocalObjectReference> <ImagePullSecrets>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Container> <InitContainers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <NodeSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodOS <Os>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Overhead>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreemptionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PriorityClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodReadinessGate> <ReadinessGates>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodResourceClaim> <ResourceClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RestartPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuntimeClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SchedulerName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodSchedulingGate> <SchedulingGates>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodSecurityContext <SecurityContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceAccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SetHostnameAsFQDN>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShareProcessNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subdomain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TerminationGracePeriodSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Toleration> <Tolerations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1TopologySpreadConstraint> <TopologySpreadConstraints>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Volume> <Volumes>k__BackingField;
    [JsonPropertyNameAttribute("activeDeadlineSeconds")]
public Nullable`1<long> ActiveDeadlineSeconds { get; public set; }
    [JsonPropertyNameAttribute("affinity")]
public V1Affinity Affinity { get; public set; }
    [JsonPropertyNameAttribute("automountServiceAccountToken")]
public Nullable`1<bool> AutomountServiceAccountToken { get; public set; }
    [JsonPropertyNameAttribute("containers")]
public IList`1<V1Container> Containers { get; public set; }
    [JsonPropertyNameAttribute("dnsConfig")]
public V1PodDNSConfig DnsConfig { get; public set; }
    [JsonPropertyNameAttribute("dnsPolicy")]
public string DnsPolicy { get; public set; }
    [JsonPropertyNameAttribute("enableServiceLinks")]
public Nullable`1<bool> EnableServiceLinks { get; public set; }
    [JsonPropertyNameAttribute("ephemeralContainers")]
public IList`1<V1EphemeralContainer> EphemeralContainers { get; public set; }
    [JsonPropertyNameAttribute("hostAliases")]
public IList`1<V1HostAlias> HostAliases { get; public set; }
    [JsonPropertyNameAttribute("hostIPC")]
public Nullable`1<bool> HostIPC { get; public set; }
    [JsonPropertyNameAttribute("hostNetwork")]
public Nullable`1<bool> HostNetwork { get; public set; }
    [JsonPropertyNameAttribute("hostPID")]
public Nullable`1<bool> HostPID { get; public set; }
    [JsonPropertyNameAttribute("hostUsers")]
public Nullable`1<bool> HostUsers { get; public set; }
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("imagePullSecrets")]
public IList`1<V1LocalObjectReference> ImagePullSecrets { get; public set; }
    [JsonPropertyNameAttribute("initContainers")]
public IList`1<V1Container> InitContainers { get; public set; }
    [JsonPropertyNameAttribute("nodeName")]
public string NodeName { get; public set; }
    [JsonPropertyNameAttribute("nodeSelector")]
public IDictionary`2<string, string> NodeSelector { get; public set; }
    [JsonPropertyNameAttribute("os")]
public V1PodOS Os { get; public set; }
    [JsonPropertyNameAttribute("overhead")]
public IDictionary`2<string, ResourceQuantity> Overhead { get; public set; }
    [JsonPropertyNameAttribute("preemptionPolicy")]
public string PreemptionPolicy { get; public set; }
    [JsonPropertyNameAttribute("priority")]
public Nullable`1<int> Priority { get; public set; }
    [JsonPropertyNameAttribute("priorityClassName")]
public string PriorityClassName { get; public set; }
    [JsonPropertyNameAttribute("readinessGates")]
public IList`1<V1PodReadinessGate> ReadinessGates { get; public set; }
    [JsonPropertyNameAttribute("resourceClaims")]
public IList`1<V1PodResourceClaim> ResourceClaims { get; public set; }
    [JsonPropertyNameAttribute("restartPolicy")]
public string RestartPolicy { get; public set; }
    [JsonPropertyNameAttribute("runtimeClassName")]
public string RuntimeClassName { get; public set; }
    [JsonPropertyNameAttribute("schedulerName")]
public string SchedulerName { get; public set; }
    [JsonPropertyNameAttribute("schedulingGates")]
public IList`1<V1PodSchedulingGate> SchedulingGates { get; public set; }
    [JsonPropertyNameAttribute("securityContext")]
public V1PodSecurityContext SecurityContext { get; public set; }
    [JsonPropertyNameAttribute("serviceAccount")]
public string ServiceAccount { get; public set; }
    [JsonPropertyNameAttribute("serviceAccountName")]
public string ServiceAccountName { get; public set; }
    [JsonPropertyNameAttribute("setHostnameAsFQDN")]
public Nullable`1<bool> SetHostnameAsFQDN { get; public set; }
    [JsonPropertyNameAttribute("shareProcessNamespace")]
public Nullable`1<bool> ShareProcessNamespace { get; public set; }
    [JsonPropertyNameAttribute("subdomain")]
public string Subdomain { get; public set; }
    [JsonPropertyNameAttribute("terminationGracePeriodSeconds")]
public Nullable`1<long> TerminationGracePeriodSeconds { get; public set; }
    [JsonPropertyNameAttribute("tolerations")]
public IList`1<V1Toleration> Tolerations { get; public set; }
    [JsonPropertyNameAttribute("topologySpreadConstraints")]
public IList`1<V1TopologySpreadConstraint> TopologySpreadConstraints { get; public set; }
    [JsonPropertyNameAttribute("volumes")]
public IList`1<V1Volume> Volumes { get; public set; }
    public V1PodSpec(IList`1<V1Container> containers, Nullable`1<long> activeDeadlineSeconds, V1Affinity affinity, Nullable`1<bool> automountServiceAccountToken, V1PodDNSConfig dnsConfig, string dnsPolicy, Nullable`1<bool> enableServiceLinks, IList`1<V1EphemeralContainer> ephemeralContainers, IList`1<V1HostAlias> hostAliases, Nullable`1<bool> hostIPC, Nullable`1<bool> hostNetwork, Nullable`1<bool> hostPID, Nullable`1<bool> hostUsers, string hostname, IList`1<V1LocalObjectReference> imagePullSecrets, IList`1<V1Container> initContainers, string nodeName, IDictionary`2<string, string> nodeSelector, V1PodOS os, IDictionary`2<string, ResourceQuantity> overhead, string preemptionPolicy, Nullable`1<int> priority, string priorityClassName, IList`1<V1PodReadinessGate> readinessGates, IList`1<V1PodResourceClaim> resourceClaims, string restartPolicy, string runtimeClassName, string schedulerName, IList`1<V1PodSchedulingGate> schedulingGates, V1PodSecurityContext securityContext, string serviceAccount, string serviceAccountName, Nullable`1<bool> setHostnameAsFQDN, Nullable`1<bool> shareProcessNamespace, string subdomain, Nullable`1<long> terminationGracePeriodSeconds, IList`1<V1Toleration> tolerations, IList`1<V1TopologySpreadConstraint> topologySpreadConstraints, IList`1<V1Volume> volumes);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ActiveDeadlineSeconds();
    [CompilerGeneratedAttribute]
public void set_ActiveDeadlineSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public V1Affinity get_Affinity();
    [CompilerGeneratedAttribute]
public void set_Affinity(V1Affinity value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutomountServiceAccountToken();
    [CompilerGeneratedAttribute]
public void set_AutomountServiceAccountToken(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1Container> get_Containers();
    [CompilerGeneratedAttribute]
public void set_Containers(IList`1<V1Container> value);
    [CompilerGeneratedAttribute]
public V1PodDNSConfig get_DnsConfig();
    [CompilerGeneratedAttribute]
public void set_DnsConfig(V1PodDNSConfig value);
    [CompilerGeneratedAttribute]
public string get_DnsPolicy();
    [CompilerGeneratedAttribute]
public void set_DnsPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableServiceLinks();
    [CompilerGeneratedAttribute]
public void set_EnableServiceLinks(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1EphemeralContainer> get_EphemeralContainers();
    [CompilerGeneratedAttribute]
public void set_EphemeralContainers(IList`1<V1EphemeralContainer> value);
    [CompilerGeneratedAttribute]
public IList`1<V1HostAlias> get_HostAliases();
    [CompilerGeneratedAttribute]
public void set_HostAliases(IList`1<V1HostAlias> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HostIPC();
    [CompilerGeneratedAttribute]
public void set_HostIPC(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HostNetwork();
    [CompilerGeneratedAttribute]
public void set_HostNetwork(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HostPID();
    [CompilerGeneratedAttribute]
public void set_HostPID(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HostUsers();
    [CompilerGeneratedAttribute]
public void set_HostUsers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1LocalObjectReference> get_ImagePullSecrets();
    [CompilerGeneratedAttribute]
public void set_ImagePullSecrets(IList`1<V1LocalObjectReference> value);
    [CompilerGeneratedAttribute]
public IList`1<V1Container> get_InitContainers();
    [CompilerGeneratedAttribute]
public void set_InitContainers(IList`1<V1Container> value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
public void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_NodeSelector();
    [CompilerGeneratedAttribute]
public void set_NodeSelector(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public V1PodOS get_Os();
    [CompilerGeneratedAttribute]
public void set_Os(V1PodOS value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Overhead();
    [CompilerGeneratedAttribute]
public void set_Overhead(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public string get_PreemptionPolicy();
    [CompilerGeneratedAttribute]
public void set_PreemptionPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PriorityClassName();
    [CompilerGeneratedAttribute]
public void set_PriorityClassName(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodReadinessGate> get_ReadinessGates();
    [CompilerGeneratedAttribute]
public void set_ReadinessGates(IList`1<V1PodReadinessGate> value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodResourceClaim> get_ResourceClaims();
    [CompilerGeneratedAttribute]
public void set_ResourceClaims(IList`1<V1PodResourceClaim> value);
    [CompilerGeneratedAttribute]
public string get_RestartPolicy();
    [CompilerGeneratedAttribute]
public void set_RestartPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_RuntimeClassName();
    [CompilerGeneratedAttribute]
public void set_RuntimeClassName(string value);
    [CompilerGeneratedAttribute]
public string get_SchedulerName();
    [CompilerGeneratedAttribute]
public void set_SchedulerName(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodSchedulingGate> get_SchedulingGates();
    [CompilerGeneratedAttribute]
public void set_SchedulingGates(IList`1<V1PodSchedulingGate> value);
    [CompilerGeneratedAttribute]
public V1PodSecurityContext get_SecurityContext();
    [CompilerGeneratedAttribute]
public void set_SecurityContext(V1PodSecurityContext value);
    [CompilerGeneratedAttribute]
public string get_ServiceAccount();
    [CompilerGeneratedAttribute]
public void set_ServiceAccount(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceAccountName();
    [CompilerGeneratedAttribute]
public void set_ServiceAccountName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SetHostnameAsFQDN();
    [CompilerGeneratedAttribute]
public void set_SetHostnameAsFQDN(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ShareProcessNamespace();
    [CompilerGeneratedAttribute]
public void set_ShareProcessNamespace(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Subdomain();
    [CompilerGeneratedAttribute]
public void set_Subdomain(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TerminationGracePeriodSeconds();
    [CompilerGeneratedAttribute]
public void set_TerminationGracePeriodSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IList`1<V1Toleration> get_Tolerations();
    [CompilerGeneratedAttribute]
public void set_Tolerations(IList`1<V1Toleration> value);
    [CompilerGeneratedAttribute]
public IList`1<V1TopologySpreadConstraint> get_TopologySpreadConstraints();
    [CompilerGeneratedAttribute]
public void set_TopologySpreadConstraints(IList`1<V1TopologySpreadConstraint> value);
    [CompilerGeneratedAttribute]
public IList`1<V1Volume> get_Volumes();
    [CompilerGeneratedAttribute]
public void set_Volumes(IList`1<V1Volume> value);
    public virtual void Validate();
}
public class k8s.Models.V1PodStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1PodCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerStatus> <ContainerStatuses>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerStatus> <EphemeralContainerStatuses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostIP>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1HostIP> <HostIPs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ContainerStatus> <InitContainerStatuses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NominatedNodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Phase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PodIP>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodIP> <PodIPs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QosClass>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resize>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodResourceClaimStatus> <ResourceClaimStatuses>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1PodCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("containerStatuses")]
public IList`1<V1ContainerStatus> ContainerStatuses { get; public set; }
    [JsonPropertyNameAttribute("ephemeralContainerStatuses")]
public IList`1<V1ContainerStatus> EphemeralContainerStatuses { get; public set; }
    [JsonPropertyNameAttribute("hostIP")]
public string HostIP { get; public set; }
    [JsonPropertyNameAttribute("hostIPs")]
public IList`1<V1HostIP> HostIPs { get; public set; }
    [JsonPropertyNameAttribute("initContainerStatuses")]
public IList`1<V1ContainerStatus> InitContainerStatuses { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("nominatedNodeName")]
public string NominatedNodeName { get; public set; }
    [JsonPropertyNameAttribute("phase")]
public string Phase { get; public set; }
    [JsonPropertyNameAttribute("podIP")]
public string PodIP { get; public set; }
    [JsonPropertyNameAttribute("podIPs")]
public IList`1<V1PodIP> PodIPs { get; public set; }
    [JsonPropertyNameAttribute("qosClass")]
public string QosClass { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("resize")]
public string Resize { get; public set; }
    [JsonPropertyNameAttribute("resourceClaimStatuses")]
public IList`1<V1PodResourceClaimStatus> ResourceClaimStatuses { get; public set; }
    [JsonPropertyNameAttribute("startTime")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public V1PodStatus(IList`1<V1PodCondition> conditions, IList`1<V1ContainerStatus> containerStatuses, IList`1<V1ContainerStatus> ephemeralContainerStatuses, string hostIP, IList`1<V1HostIP> hostIPs, IList`1<V1ContainerStatus> initContainerStatuses, string message, string nominatedNodeName, string phase, string podIP, IList`1<V1PodIP> podIPs, string qosClass, string reason, string resize, IList`1<V1PodResourceClaimStatus> resourceClaimStatuses, Nullable`1<DateTime> startTime);
    [CompilerGeneratedAttribute]
public IList`1<V1PodCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1PodCondition> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerStatus> get_ContainerStatuses();
    [CompilerGeneratedAttribute]
public void set_ContainerStatuses(IList`1<V1ContainerStatus> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerStatus> get_EphemeralContainerStatuses();
    [CompilerGeneratedAttribute]
public void set_EphemeralContainerStatuses(IList`1<V1ContainerStatus> value);
    [CompilerGeneratedAttribute]
public string get_HostIP();
    [CompilerGeneratedAttribute]
public void set_HostIP(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1HostIP> get_HostIPs();
    [CompilerGeneratedAttribute]
public void set_HostIPs(IList`1<V1HostIP> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ContainerStatus> get_InitContainerStatuses();
    [CompilerGeneratedAttribute]
public void set_InitContainerStatuses(IList`1<V1ContainerStatus> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_NominatedNodeName();
    [CompilerGeneratedAttribute]
public void set_NominatedNodeName(string value);
    [CompilerGeneratedAttribute]
public string get_Phase();
    [CompilerGeneratedAttribute]
public void set_Phase(string value);
    [CompilerGeneratedAttribute]
public string get_PodIP();
    [CompilerGeneratedAttribute]
public void set_PodIP(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodIP> get_PodIPs();
    [CompilerGeneratedAttribute]
public void set_PodIPs(IList`1<V1PodIP> value);
    [CompilerGeneratedAttribute]
public string get_QosClass();
    [CompilerGeneratedAttribute]
public void set_QosClass(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Resize();
    [CompilerGeneratedAttribute]
public void set_Resize(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1PodResourceClaimStatus> get_ResourceClaimStatuses();
    [CompilerGeneratedAttribute]
public void set_ResourceClaimStatuses(IList`1<V1PodResourceClaimStatus> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTime> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PodTemplate : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodTemplateSpec <Template>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("template")]
public V1PodTemplateSpec Template { get; public set; }
    public V1PodTemplate(string apiVersion, string kind, V1ObjectMeta metadata, V1PodTemplateSpec template);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1PodTemplateSpec get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(V1PodTemplateSpec value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PodTemplateList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PodTemplate> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1PodTemplate> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1PodTemplateList(IList`1<V1PodTemplate> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1PodTemplate> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1PodTemplate> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1PodTemplateSpec : object {
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodSpec <Spec>k__BackingField;
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1PodSpec Spec { get; public set; }
    public V1PodTemplateSpec(V1ObjectMeta metadata, V1PodSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1PodSpec get_Spec();
    [CompilerGeneratedAttribute]
public void set_Spec(V1PodSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1PolicyRule : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <NonResourceURLs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ResourceNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("nonResourceURLs")]
public IList`1<string> NonResourceURLs { get; public set; }
    [JsonPropertyNameAttribute("resourceNames")]
public IList`1<string> ResourceNames { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    public V1PolicyRule(IList`1<string> verbs, IList`1<string> apiGroups, IList`1<string> nonResourceURLs, IList`1<string> resourceNames, IList`1<string> resources);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NonResourceURLs();
    [CompilerGeneratedAttribute]
public void set_NonResourceURLs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ResourceNames();
    [CompilerGeneratedAttribute]
public void set_ResourceNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1PolicyRulesWithSubjects : object {
    [CompilerGeneratedAttribute]
private IList`1<V1NonResourcePolicyRule> <NonResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ResourcePolicyRule> <ResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Flowcontrolv1Subject> <Subjects>k__BackingField;
    [JsonPropertyNameAttribute("nonResourceRules")]
public IList`1<V1NonResourcePolicyRule> NonResourceRules { get; public set; }
    [JsonPropertyNameAttribute("resourceRules")]
public IList`1<V1ResourcePolicyRule> ResourceRules { get; public set; }
    [JsonPropertyNameAttribute("subjects")]
public IList`1<Flowcontrolv1Subject> Subjects { get; public set; }
    public V1PolicyRulesWithSubjects(IList`1<Flowcontrolv1Subject> subjects, IList`1<V1NonResourcePolicyRule> nonResourceRules, IList`1<V1ResourcePolicyRule> resourceRules);
    [CompilerGeneratedAttribute]
public IList`1<V1NonResourcePolicyRule> get_NonResourceRules();
    [CompilerGeneratedAttribute]
public void set_NonResourceRules(IList`1<V1NonResourcePolicyRule> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ResourcePolicyRule> get_ResourceRules();
    [CompilerGeneratedAttribute]
public void set_ResourceRules(IList`1<V1ResourcePolicyRule> value);
    [CompilerGeneratedAttribute]
public IList`1<Flowcontrolv1Subject> get_Subjects();
    [CompilerGeneratedAttribute]
public void set_Subjects(IList`1<Flowcontrolv1Subject> value);
    public virtual void Validate();
    public static V1PolicyRulesWithSubjects op_Explicit(V1beta3PolicyRulesWithSubjects s);
}
public class k8s.Models.V1PortStatus : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [JsonPropertyNameAttribute("error")]
public string Error { get; public set; }
    [JsonPropertyNameAttribute("port")]
public int Port { get; public set; }
    [JsonPropertyNameAttribute("protocol")]
public string Protocol { get; public set; }
    public V1PortStatus(int port, string protocol, string error);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PortworxVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeID>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("volumeID")]
public string VolumeID { get; public set; }
    public V1PortworxVolumeSource(string volumeID, string fsType, Nullable`1<bool> readOnlyProperty);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_VolumeID();
    [CompilerGeneratedAttribute]
public void set_VolumeID(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Preconditions : object {
    [CompilerGeneratedAttribute]
private string <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("resourceVersion")]
public string ResourceVersion { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1Preconditions(string resourceVersion, string uid);
    [CompilerGeneratedAttribute]
public string get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
public class k8s.Models.V1PreferredSchedulingTerm : object {
    [CompilerGeneratedAttribute]
private V1NodeSelectorTerm <Preference>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Weight>k__BackingField;
    [JsonPropertyNameAttribute("preference")]
public V1NodeSelectorTerm Preference { get; public set; }
    [JsonPropertyNameAttribute("weight")]
public int Weight { get; public set; }
    public V1PreferredSchedulingTerm(V1NodeSelectorTerm preference, int weight);
    [CompilerGeneratedAttribute]
public V1NodeSelectorTerm get_Preference();
    [CompilerGeneratedAttribute]
public void set_Preference(V1NodeSelectorTerm value);
    [CompilerGeneratedAttribute]
public int get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(int value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PriorityClass : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GlobalDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreemptionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Value>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyNameAttribute("globalDefault")]
public Nullable`1<bool> GlobalDefault { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("preemptionPolicy")]
public string PreemptionPolicy { get; public set; }
    [JsonPropertyNameAttribute("value")]
public int Value { get; public set; }
    public V1PriorityClass(int value, string apiVersion, string description, Nullable`1<bool> globalDefault, string kind, V1ObjectMeta metadata, string preemptionPolicy);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_GlobalDefault();
    [CompilerGeneratedAttribute]
public void set_GlobalDefault(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public string get_PreemptionPolicy();
    [CompilerGeneratedAttribute]
public void set_PreemptionPolicy(string value);
    [CompilerGeneratedAttribute]
public int get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(int value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PriorityClassList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PriorityClass> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1PriorityClass> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1PriorityClassList(IList`1<V1PriorityClass> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1PriorityClass> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1PriorityClass> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PriorityLevelConfiguration : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PriorityLevelConfigurationSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PriorityLevelConfigurationStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1PriorityLevelConfigurationSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1PriorityLevelConfigurationStatus Status { get; public set; }
    public V1PriorityLevelConfiguration(string apiVersion, string kind, V1ObjectMeta metadata, V1PriorityLevelConfigurationSpec spec, V1PriorityLevelConfigurationStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1PriorityLevelConfigurationSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1PriorityLevelConfigurationSpec value);
    [CompilerGeneratedAttribute]
public V1PriorityLevelConfigurationStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1PriorityLevelConfigurationStatus value);
    public virtual void Validate();
    public static V1PriorityLevelConfiguration op_Explicit(V1beta3PriorityLevelConfiguration s);
}
public class k8s.Models.V1PriorityLevelConfigurationCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1PriorityLevelConfigurationCondition(Nullable`1<DateTime> lastTransitionTime, string message, string reason, string status, string type);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1PriorityLevelConfigurationCondition op_Explicit(V1beta3PriorityLevelConfigurationCondition s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1PriorityLevelConfigurationList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PriorityLevelConfiguration> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1PriorityLevelConfiguration> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1PriorityLevelConfigurationList(IList`1<V1PriorityLevelConfiguration> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1PriorityLevelConfiguration> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1PriorityLevelConfiguration> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1PriorityLevelConfigurationList op_Explicit(V1beta3PriorityLevelConfigurationList s);
}
public class k8s.Models.V1PriorityLevelConfigurationReference : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1PriorityLevelConfigurationReference(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1PriorityLevelConfigurationReference op_Explicit(V1beta3PriorityLevelConfigurationReference s);
}
public class k8s.Models.V1PriorityLevelConfigurationSpec : object {
    [CompilerGeneratedAttribute]
private V1ExemptPriorityLevelConfiguration <Exempt>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LimitedPriorityLevelConfiguration <Limited>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("exempt")]
public V1ExemptPriorityLevelConfiguration Exempt { get; public set; }
    [JsonPropertyNameAttribute("limited")]
public V1LimitedPriorityLevelConfiguration Limited { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1PriorityLevelConfigurationSpec(string type, V1ExemptPriorityLevelConfiguration exempt, V1LimitedPriorityLevelConfiguration limited);
    [CompilerGeneratedAttribute]
public V1ExemptPriorityLevelConfiguration get_Exempt();
    [CompilerGeneratedAttribute]
public void set_Exempt(V1ExemptPriorityLevelConfiguration value);
    [CompilerGeneratedAttribute]
public V1LimitedPriorityLevelConfiguration get_Limited();
    [CompilerGeneratedAttribute]
public void set_Limited(V1LimitedPriorityLevelConfiguration value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
    public static V1PriorityLevelConfigurationSpec op_Explicit(V1beta3PriorityLevelConfigurationSpec s);
}
public class k8s.Models.V1PriorityLevelConfigurationStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1PriorityLevelConfigurationCondition> <Conditions>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1PriorityLevelConfigurationCondition> Conditions { get; public set; }
    public V1PriorityLevelConfigurationStatus(IList`1<V1PriorityLevelConfigurationCondition> conditions);
    [CompilerGeneratedAttribute]
public IList`1<V1PriorityLevelConfigurationCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1PriorityLevelConfigurationCondition> value);
    public virtual void Validate();
    public static V1PriorityLevelConfigurationStatus op_Explicit(V1beta3PriorityLevelConfigurationStatus s);
}
public class k8s.Models.V1Probe : object {
    [CompilerGeneratedAttribute]
private V1ExecAction <Exec>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FailureThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private V1GRPCAction <Grpc>k__BackingField;
    [CompilerGeneratedAttribute]
private V1HTTPGetAction <HttpGet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <InitialDelaySeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PeriodSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SuccessThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TCPSocketAction <TcpSocket>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TerminationGracePeriodSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TimeoutSeconds>k__BackingField;
    [JsonPropertyNameAttribute("exec")]
public V1ExecAction Exec { get; public set; }
    [JsonPropertyNameAttribute("failureThreshold")]
public Nullable`1<int> FailureThreshold { get; public set; }
    [JsonPropertyNameAttribute("grpc")]
public V1GRPCAction Grpc { get; public set; }
    [JsonPropertyNameAttribute("httpGet")]
public V1HTTPGetAction HttpGet { get; public set; }
    [JsonPropertyNameAttribute("initialDelaySeconds")]
public Nullable`1<int> InitialDelaySeconds { get; public set; }
    [JsonPropertyNameAttribute("periodSeconds")]
public Nullable`1<int> PeriodSeconds { get; public set; }
    [JsonPropertyNameAttribute("successThreshold")]
public Nullable`1<int> SuccessThreshold { get; public set; }
    [JsonPropertyNameAttribute("tcpSocket")]
public V1TCPSocketAction TcpSocket { get; public set; }
    [JsonPropertyNameAttribute("terminationGracePeriodSeconds")]
public Nullable`1<long> TerminationGracePeriodSeconds { get; public set; }
    [JsonPropertyNameAttribute("timeoutSeconds")]
public Nullable`1<int> TimeoutSeconds { get; public set; }
    public V1Probe(V1ExecAction exec, Nullable`1<int> failureThreshold, V1GRPCAction grpc, V1HTTPGetAction httpGet, Nullable`1<int> initialDelaySeconds, Nullable`1<int> periodSeconds, Nullable`1<int> successThreshold, V1TCPSocketAction tcpSocket, Nullable`1<long> terminationGracePeriodSeconds, Nullable`1<int> timeoutSeconds);
    [CompilerGeneratedAttribute]
public V1ExecAction get_Exec();
    [CompilerGeneratedAttribute]
public void set_Exec(V1ExecAction value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FailureThreshold();
    [CompilerGeneratedAttribute]
public void set_FailureThreshold(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1GRPCAction get_Grpc();
    [CompilerGeneratedAttribute]
public void set_Grpc(V1GRPCAction value);
    [CompilerGeneratedAttribute]
public V1HTTPGetAction get_HttpGet();
    [CompilerGeneratedAttribute]
public void set_HttpGet(V1HTTPGetAction value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_InitialDelaySeconds();
    [CompilerGeneratedAttribute]
public void set_InitialDelaySeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PeriodSeconds();
    [CompilerGeneratedAttribute]
public void set_PeriodSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SuccessThreshold();
    [CompilerGeneratedAttribute]
public void set_SuccessThreshold(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1TCPSocketAction get_TcpSocket();
    [CompilerGeneratedAttribute]
public void set_TcpSocket(V1TCPSocketAction value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TerminationGracePeriodSeconds();
    [CompilerGeneratedAttribute]
public void set_TerminationGracePeriodSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TimeoutSeconds();
    [CompilerGeneratedAttribute]
public void set_TimeoutSeconds(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1ProjectedVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DefaultMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1VolumeProjection> <Sources>k__BackingField;
    [JsonPropertyNameAttribute("defaultMode")]
public Nullable`1<int> DefaultMode { get; public set; }
    [JsonPropertyNameAttribute("sources")]
public IList`1<V1VolumeProjection> Sources { get; public set; }
    public V1ProjectedVolumeSource(Nullable`1<int> defaultMode, IList`1<V1VolumeProjection> sources);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DefaultMode();
    [CompilerGeneratedAttribute]
public void set_DefaultMode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1VolumeProjection> get_Sources();
    [CompilerGeneratedAttribute]
public void set_Sources(IList`1<V1VolumeProjection> value);
    public virtual void Validate();
}
public class k8s.Models.V1QueuingConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <HandSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueueLengthLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Queues>k__BackingField;
    [JsonPropertyNameAttribute("handSize")]
public Nullable`1<int> HandSize { get; public set; }
    [JsonPropertyNameAttribute("queueLengthLimit")]
public Nullable`1<int> QueueLengthLimit { get; public set; }
    [JsonPropertyNameAttribute("queues")]
public Nullable`1<int> Queues { get; public set; }
    public V1QueuingConfiguration(Nullable`1<int> handSize, Nullable`1<int> queueLengthLimit, Nullable`1<int> queues);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_HandSize();
    [CompilerGeneratedAttribute]
public void set_HandSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueueLengthLimit();
    [CompilerGeneratedAttribute]
public void set_QueueLengthLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Queues();
    [CompilerGeneratedAttribute]
public void set_Queues(Nullable`1<int> value);
    public virtual void Validate();
    public static V1QueuingConfiguration op_Explicit(V1beta3QueuingConfiguration s);
}
public class k8s.Models.V1QuobyteVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Registry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Volume>k__BackingField;
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("registry")]
public string Registry { get; public set; }
    [JsonPropertyNameAttribute("tenant")]
public string Tenant { get; public set; }
    [JsonPropertyNameAttribute("user")]
public string User { get; public set; }
    [JsonPropertyNameAttribute("volume")]
public string Volume { get; public set; }
    public V1QuobyteVolumeSource(string registry, string volume, string group, Nullable`1<bool> readOnlyProperty, string tenant, string user);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Registry();
    [CompilerGeneratedAttribute]
public void set_Registry(string value);
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    [CompilerGeneratedAttribute]
public string get_Volume();
    [CompilerGeneratedAttribute]
public void set_Volume(string value);
    public virtual void Validate();
}
public class k8s.Models.V1RBDPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyring>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Monitors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pool>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("image")]
public string Image { get; public set; }
    [JsonPropertyNameAttribute("keyring")]
public string Keyring { get; public set; }
    [JsonPropertyNameAttribute("monitors")]
public IList`1<string> Monitors { get; public set; }
    [JsonPropertyNameAttribute("pool")]
public string Pool { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1SecretReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("user")]
public string User { get; public set; }
    public V1RBDPersistentVolumeSource(string image, IList`1<string> monitors, string fsType, string keyring, string pool, Nullable`1<bool> readOnlyProperty, V1SecretReference secretRef, string user);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_Keyring();
    [CompilerGeneratedAttribute]
public void set_Keyring(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Monitors();
    [CompilerGeneratedAttribute]
public void set_Monitors(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Pool();
    [CompilerGeneratedAttribute]
public void set_Pool(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    public virtual void Validate();
}
public class k8s.Models.V1RBDVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyring>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Monitors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pool>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("image")]
public string Image { get; public set; }
    [JsonPropertyNameAttribute("keyring")]
public string Keyring { get; public set; }
    [JsonPropertyNameAttribute("monitors")]
public IList`1<string> Monitors { get; public set; }
    [JsonPropertyNameAttribute("pool")]
public string Pool { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1LocalObjectReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("user")]
public string User { get; public set; }
    public V1RBDVolumeSource(string image, IList`1<string> monitors, string fsType, string keyring, string pool, Nullable`1<bool> readOnlyProperty, V1LocalObjectReference secretRef, string user);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_Keyring();
    [CompilerGeneratedAttribute]
public void set_Keyring(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Monitors();
    [CompilerGeneratedAttribute]
public void set_Monitors(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Pool();
    [CompilerGeneratedAttribute]
public void set_Pool(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1LocalObjectReference value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ReplicaSet : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ReplicaSetSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ReplicaSetStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1ReplicaSetSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1ReplicaSetStatus Status { get; public set; }
    public V1ReplicaSet(string apiVersion, string kind, V1ObjectMeta metadata, V1ReplicaSetSpec spec, V1ReplicaSetStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ReplicaSetSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1ReplicaSetSpec value);
    [CompilerGeneratedAttribute]
public V1ReplicaSetStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1ReplicaSetStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1ReplicaSetCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1ReplicaSetCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ReplicaSetList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ReplicaSet> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ReplicaSet> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ReplicaSetList(IList`1<V1ReplicaSet> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ReplicaSet> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ReplicaSet> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ReplicaSetSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinReadySeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Replicas>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodTemplateSpec <Template>k__BackingField;
    [JsonPropertyNameAttribute("minReadySeconds")]
public Nullable`1<int> MinReadySeconds { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public Nullable`1<int> Replicas { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    [JsonPropertyNameAttribute("template")]
public V1PodTemplateSpec Template { get; public set; }
    public V1ReplicaSetSpec(V1LabelSelector selector, Nullable`1<int> minReadySeconds, Nullable`1<int> replicas, V1PodTemplateSpec template);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinReadySeconds();
    [CompilerGeneratedAttribute]
public void set_MinReadySeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1PodTemplateSpec get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(V1PodTemplateSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1ReplicaSetStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AvailableReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ReplicaSetCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FullyLabeledReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadyReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Replicas>k__BackingField;
    [JsonPropertyNameAttribute("availableReplicas")]
public Nullable`1<int> AvailableReplicas { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1ReplicaSetCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("fullyLabeledReplicas")]
public Nullable`1<int> FullyLabeledReplicas { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("readyReplicas")]
public Nullable`1<int> ReadyReplicas { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public int Replicas { get; public set; }
    public V1ReplicaSetStatus(int replicas, Nullable`1<int> availableReplicas, IList`1<V1ReplicaSetCondition> conditions, Nullable`1<int> fullyLabeledReplicas, Nullable`1<long> observedGeneration, Nullable`1<int> readyReplicas);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AvailableReplicas();
    [CompilerGeneratedAttribute]
public void set_AvailableReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ReplicaSetCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1ReplicaSetCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FullyLabeledReplicas();
    [CompilerGeneratedAttribute]
public void set_FullyLabeledReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadyReplicas();
    [CompilerGeneratedAttribute]
public void set_ReadyReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(int value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ReplicationController : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ReplicationControllerSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ReplicationControllerStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1ReplicationControllerSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1ReplicationControllerStatus Status { get; public set; }
    public V1ReplicationController(string apiVersion, string kind, V1ObjectMeta metadata, V1ReplicationControllerSpec spec, V1ReplicationControllerStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ReplicationControllerSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1ReplicationControllerSpec value);
    [CompilerGeneratedAttribute]
public V1ReplicationControllerStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1ReplicationControllerStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1ReplicationControllerCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1ReplicationControllerCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ReplicationControllerList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ReplicationController> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ReplicationController> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ReplicationControllerList(IList`1<V1ReplicationController> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ReplicationController> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ReplicationController> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ReplicationControllerSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinReadySeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Replicas>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodTemplateSpec <Template>k__BackingField;
    [JsonPropertyNameAttribute("minReadySeconds")]
public Nullable`1<int> MinReadySeconds { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public Nullable`1<int> Replicas { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public IDictionary`2<string, string> Selector { get; public set; }
    [JsonPropertyNameAttribute("template")]
public V1PodTemplateSpec Template { get; public set; }
    public V1ReplicationControllerSpec(Nullable`1<int> minReadySeconds, Nullable`1<int> replicas, IDictionary`2<string, string> selector, V1PodTemplateSpec template);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinReadySeconds();
    [CompilerGeneratedAttribute]
public void set_MinReadySeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public V1PodTemplateSpec get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(V1PodTemplateSpec value);
    public virtual void Validate();
}
public class k8s.Models.V1ReplicationControllerStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AvailableReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ReplicationControllerCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FullyLabeledReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadyReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Replicas>k__BackingField;
    [JsonPropertyNameAttribute("availableReplicas")]
public Nullable`1<int> AvailableReplicas { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1ReplicationControllerCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("fullyLabeledReplicas")]
public Nullable`1<int> FullyLabeledReplicas { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("readyReplicas")]
public Nullable`1<int> ReadyReplicas { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public int Replicas { get; public set; }
    public V1ReplicationControllerStatus(int replicas, Nullable`1<int> availableReplicas, IList`1<V1ReplicationControllerCondition> conditions, Nullable`1<int> fullyLabeledReplicas, Nullable`1<long> observedGeneration, Nullable`1<int> readyReplicas);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AvailableReplicas();
    [CompilerGeneratedAttribute]
public void set_AvailableReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ReplicationControllerCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1ReplicationControllerCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FullyLabeledReplicas();
    [CompilerGeneratedAttribute]
public void set_FullyLabeledReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadyReplicas();
    [CompilerGeneratedAttribute]
public void set_ReadyReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(int value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceAttributes : object {
    [CompilerGeneratedAttribute]
private V1FieldSelectorAttributes <FieldSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelectorAttributes <LabelSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subresource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verb>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyNameAttribute("fieldSelector")]
public V1FieldSelectorAttributes FieldSelector { get; public set; }
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("labelSelector")]
public V1LabelSelectorAttributes LabelSelector { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public string Resource { get; public set; }
    [JsonPropertyNameAttribute("subresource")]
public string Subresource { get; public set; }
    [JsonPropertyNameAttribute("verb")]
public string Verb { get; public set; }
    [JsonPropertyNameAttribute("version")]
public string Version { get; public set; }
    public V1ResourceAttributes(V1FieldSelectorAttributes fieldSelector, string group, V1LabelSelectorAttributes labelSelector, string name, string namespaceProperty, string resource, string subresource, string verb, string version);
    [CompilerGeneratedAttribute]
public V1FieldSelectorAttributes get_FieldSelector();
    [CompilerGeneratedAttribute]
public void set_FieldSelector(V1FieldSelectorAttributes value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelectorAttributes get_LabelSelector();
    [CompilerGeneratedAttribute]
public void set_LabelSelector(V1LabelSelectorAttributes value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(string value);
    [CompilerGeneratedAttribute]
public string get_Subresource();
    [CompilerGeneratedAttribute]
public void set_Subresource(string value);
    [CompilerGeneratedAttribute]
public string get_Verb();
    [CompilerGeneratedAttribute]
public void set_Verb(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceClaim : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Request>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("request")]
public string Request { get; public set; }
    public V1ResourceClaim(string name, string request);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(string value);
    public virtual void Validate();
    public static V1ResourceClaim op_Explicit(V1alpha3ResourceClaim s);
}
public class k8s.Models.V1ResourceFieldSelector : object {
    [CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <Divisor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [JsonPropertyNameAttribute("containerName")]
public string ContainerName { get; public set; }
    [JsonPropertyNameAttribute("divisor")]
public ResourceQuantity Divisor { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public string Resource { get; public set; }
    public V1ResourceFieldSelector(string resource, string containerName, ResourceQuantity divisor);
    [CompilerGeneratedAttribute]
public string get_ContainerName();
    [CompilerGeneratedAttribute]
public void set_ContainerName(string value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_Divisor();
    [CompilerGeneratedAttribute]
public void set_Divisor(ResourceQuantity value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceHealth : object {
    [CompilerGeneratedAttribute]
private string <Health>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceID>k__BackingField;
    [JsonPropertyNameAttribute("health")]
public string Health { get; public set; }
    [JsonPropertyNameAttribute("resourceID")]
public string ResourceID { get; public set; }
    public V1ResourceHealth(string resourceID, string health);
    [CompilerGeneratedAttribute]
public string get_Health();
    [CompilerGeneratedAttribute]
public void set_Health(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceID();
    [CompilerGeneratedAttribute]
public void set_ResourceID(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourcePolicyRule : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ClusterScope>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Namespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("clusterScope")]
public Nullable`1<bool> ClusterScope { get; public set; }
    [JsonPropertyNameAttribute("namespaces")]
public IList`1<string> Namespaces { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    public V1ResourcePolicyRule(IList`1<string> apiGroups, IList`1<string> resources, IList`1<string> verbs, Nullable`1<bool> clusterScope, IList`1<string> namespaces);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ClusterScope();
    [CompilerGeneratedAttribute]
public void set_ClusterScope(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Namespaces();
    [CompilerGeneratedAttribute]
public void set_Namespaces(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    public virtual void Validate();
    public static V1ResourcePolicyRule op_Explicit(V1beta3ResourcePolicyRule s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ResourceQuota : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceQuotaSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceQuotaStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1ResourceQuotaSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1ResourceQuotaStatus Status { get; public set; }
    public V1ResourceQuota(string apiVersion, string kind, V1ObjectMeta metadata, V1ResourceQuotaSpec spec, V1ResourceQuotaStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ResourceQuotaSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1ResourceQuotaSpec value);
    [CompilerGeneratedAttribute]
public V1ResourceQuotaStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1ResourceQuotaStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ResourceQuotaList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ResourceQuota> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ResourceQuota> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ResourceQuotaList(IList`1<V1ResourceQuota> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ResourceQuota> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ResourceQuota> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceQuotaSpec : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Hard>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ScopeSelector <ScopeSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Scopes>k__BackingField;
    [JsonPropertyNameAttribute("hard")]
public IDictionary`2<string, ResourceQuantity> Hard { get; public set; }
    [JsonPropertyNameAttribute("scopeSelector")]
public V1ScopeSelector ScopeSelector { get; public set; }
    [JsonPropertyNameAttribute("scopes")]
public IList`1<string> Scopes { get; public set; }
    public V1ResourceQuotaSpec(IDictionary`2<string, ResourceQuantity> hard, V1ScopeSelector scopeSelector, IList`1<string> scopes);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Hard();
    [CompilerGeneratedAttribute]
public void set_Hard(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public V1ScopeSelector get_ScopeSelector();
    [CompilerGeneratedAttribute]
public void set_ScopeSelector(V1ScopeSelector value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceQuotaStatus : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Hard>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Used>k__BackingField;
    [JsonPropertyNameAttribute("hard")]
public IDictionary`2<string, ResourceQuantity> Hard { get; public set; }
    [JsonPropertyNameAttribute("used")]
public IDictionary`2<string, ResourceQuantity> Used { get; public set; }
    public V1ResourceQuotaStatus(IDictionary`2<string, ResourceQuantity> hard, IDictionary`2<string, ResourceQuantity> used);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Hard();
    [CompilerGeneratedAttribute]
public void set_Hard(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Used();
    [CompilerGeneratedAttribute]
public void set_Used(IDictionary`2<string, ResourceQuantity> value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceRequirements : object {
    [CompilerGeneratedAttribute]
private IList`1<V1ResourceClaim> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Limits>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Requests>k__BackingField;
    [JsonPropertyNameAttribute("claims")]
public IList`1<V1ResourceClaim> Claims { get; public set; }
    [JsonPropertyNameAttribute("limits")]
public IDictionary`2<string, ResourceQuantity> Limits { get; public set; }
    [JsonPropertyNameAttribute("requests")]
public IDictionary`2<string, ResourceQuantity> Requests { get; public set; }
    public V1ResourceRequirements(IList`1<V1ResourceClaim> claims, IDictionary`2<string, ResourceQuantity> limits, IDictionary`2<string, ResourceQuantity> requests);
    [CompilerGeneratedAttribute]
public IList`1<V1ResourceClaim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IList`1<V1ResourceClaim> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Requests();
    [CompilerGeneratedAttribute]
public void set_Requests(IDictionary`2<string, ResourceQuantity> value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceRule : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ResourceNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Verbs>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("resourceNames")]
public IList`1<string> ResourceNames { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("verbs")]
public IList`1<string> Verbs { get; public set; }
    public V1ResourceRule(IList`1<string> verbs, IList`1<string> apiGroups, IList`1<string> resourceNames, IList`1<string> resources);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ResourceNames();
    [CompilerGeneratedAttribute]
public void set_ResourceNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Verbs();
    [CompilerGeneratedAttribute]
public void set_Verbs(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1ResourceStatus : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ResourceHealth> <Resources>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<V1ResourceHealth> Resources { get; public set; }
    public V1ResourceStatus(string name, IList`1<V1ResourceHealth> resources);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1ResourceHealth> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<V1ResourceHealth> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Role : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PolicyRule> <Rules>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1PolicyRule> Rules { get; public set; }
    public V1Role(string apiVersion, string kind, V1ObjectMeta metadata, IList`1<V1PolicyRule> rules);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<V1PolicyRule> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1PolicyRule> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1RoleBinding : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1RoleRef <RoleRef>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Rbacv1Subject> <Subjects>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("roleRef")]
public V1RoleRef RoleRef { get; public set; }
    [JsonPropertyNameAttribute("subjects")]
public IList`1<Rbacv1Subject> Subjects { get; public set; }
    public V1RoleBinding(V1RoleRef roleRef, string apiVersion, string kind, V1ObjectMeta metadata, IList`1<Rbacv1Subject> subjects);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1RoleRef get_RoleRef();
    [CompilerGeneratedAttribute]
public void set_RoleRef(V1RoleRef value);
    [CompilerGeneratedAttribute]
public IList`1<Rbacv1Subject> get_Subjects();
    [CompilerGeneratedAttribute]
public void set_Subjects(IList`1<Rbacv1Subject> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1RoleBindingList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1RoleBinding> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1RoleBinding> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1RoleBindingList(IList`1<V1RoleBinding> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1RoleBinding> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1RoleBinding> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1RoleList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Role> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Role> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1RoleList(IList`1<V1Role> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Role> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Role> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1RoleRef : object {
    [CompilerGeneratedAttribute]
private string <ApiGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("apiGroup")]
public string ApiGroup { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1RoleRef(string apiGroup, string kind, string name);
    [CompilerGeneratedAttribute]
public string get_ApiGroup();
    [CompilerGeneratedAttribute]
public void set_ApiGroup(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1RollingUpdateDaemonSet : object {
    [CompilerGeneratedAttribute]
private IntstrIntOrString <MaxSurge>k__BackingField;
    [CompilerGeneratedAttribute]
private IntstrIntOrString <MaxUnavailable>k__BackingField;
    [JsonPropertyNameAttribute("maxSurge")]
public IntstrIntOrString MaxSurge { get; public set; }
    [JsonPropertyNameAttribute("maxUnavailable")]
public IntstrIntOrString MaxUnavailable { get; public set; }
    public V1RollingUpdateDaemonSet(IntstrIntOrString maxSurge, IntstrIntOrString maxUnavailable);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_MaxSurge();
    [CompilerGeneratedAttribute]
public void set_MaxSurge(IntstrIntOrString value);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_MaxUnavailable();
    [CompilerGeneratedAttribute]
public void set_MaxUnavailable(IntstrIntOrString value);
    public virtual void Validate();
}
public class k8s.Models.V1RollingUpdateDeployment : object {
    [CompilerGeneratedAttribute]
private IntstrIntOrString <MaxSurge>k__BackingField;
    [CompilerGeneratedAttribute]
private IntstrIntOrString <MaxUnavailable>k__BackingField;
    [JsonPropertyNameAttribute("maxSurge")]
public IntstrIntOrString MaxSurge { get; public set; }
    [JsonPropertyNameAttribute("maxUnavailable")]
public IntstrIntOrString MaxUnavailable { get; public set; }
    public V1RollingUpdateDeployment(IntstrIntOrString maxSurge, IntstrIntOrString maxUnavailable);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_MaxSurge();
    [CompilerGeneratedAttribute]
public void set_MaxSurge(IntstrIntOrString value);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_MaxUnavailable();
    [CompilerGeneratedAttribute]
public void set_MaxUnavailable(IntstrIntOrString value);
    public virtual void Validate();
}
public class k8s.Models.V1RollingUpdateStatefulSetStrategy : object {
    [CompilerGeneratedAttribute]
private IntstrIntOrString <MaxUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Partition>k__BackingField;
    [JsonPropertyNameAttribute("maxUnavailable")]
public IntstrIntOrString MaxUnavailable { get; public set; }
    [JsonPropertyNameAttribute("partition")]
public Nullable`1<int> Partition { get; public set; }
    public V1RollingUpdateStatefulSetStrategy(IntstrIntOrString maxUnavailable, Nullable`1<int> partition);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_MaxUnavailable();
    [CompilerGeneratedAttribute]
public void set_MaxUnavailable(IntstrIntOrString value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1RuleWithOperations : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ApiVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonPropertyNameAttribute("apiGroups")]
public IList`1<string> ApiGroups { get; public set; }
    [JsonPropertyNameAttribute("apiVersions")]
public IList`1<string> ApiVersions { get; public set; }
    [JsonPropertyNameAttribute("operations")]
public IList`1<string> Operations { get; public set; }
    [JsonPropertyNameAttribute("resources")]
public IList`1<string> Resources { get; public set; }
    [JsonPropertyNameAttribute("scope")]
public string Scope { get; public set; }
    public V1RuleWithOperations(IList`1<string> apiGroups, IList`1<string> apiVersions, IList`1<string> operations, IList`1<string> resources, string scope);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiGroups();
    [CompilerGeneratedAttribute]
public void set_ApiGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ApiVersions();
    [CompilerGeneratedAttribute]
public void set_ApiVersions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1RuntimeClass : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Handler>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Overhead <Overhead>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Scheduling <Scheduling>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("handler")]
public string Handler { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("overhead")]
public V1Overhead Overhead { get; public set; }
    [JsonPropertyNameAttribute("scheduling")]
public V1Scheduling Scheduling { get; public set; }
    public V1RuntimeClass(string handler, string apiVersion, string kind, V1ObjectMeta metadata, V1Overhead overhead, V1Scheduling scheduling);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Handler();
    [CompilerGeneratedAttribute]
public void set_Handler(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1Overhead get_Overhead();
    [CompilerGeneratedAttribute]
public void set_Overhead(V1Overhead value);
    [CompilerGeneratedAttribute]
public V1Scheduling get_Scheduling();
    [CompilerGeneratedAttribute]
public void set_Scheduling(V1Scheduling value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1RuntimeClassList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1RuntimeClass> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1RuntimeClass> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1RuntimeClassList(IList`1<V1RuntimeClass> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1RuntimeClass> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1RuntimeClass> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Scale : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ScaleSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ScaleStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1ScaleSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1ScaleStatus Status { get; public set; }
    public V1Scale(string apiVersion, string kind, V1ObjectMeta metadata, V1ScaleSpec spec, V1ScaleStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ScaleSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1ScaleSpec value);
    [CompilerGeneratedAttribute]
public V1ScaleStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1ScaleStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1ScaleIOPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Gateway>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtectionDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SslEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StoragePool>k__BackingField;
    [CompilerGeneratedAttribute]
private string <System>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeName>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("gateway")]
public string Gateway { get; public set; }
    [JsonPropertyNameAttribute("protectionDomain")]
public string ProtectionDomain { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1SecretReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("sslEnabled")]
public Nullable`1<bool> SslEnabled { get; public set; }
    [JsonPropertyNameAttribute("storageMode")]
public string StorageMode { get; public set; }
    [JsonPropertyNameAttribute("storagePool")]
public string StoragePool { get; public set; }
    [JsonPropertyNameAttribute("system")]
public string System { get; public set; }
    [JsonPropertyNameAttribute("volumeName")]
public string VolumeName { get; public set; }
    public V1ScaleIOPersistentVolumeSource(string gateway, V1SecretReference secretRef, string system, string fsType, string protectionDomain, Nullable`1<bool> readOnlyProperty, Nullable`1<bool> sslEnabled, string storageMode, string storagePool, string volumeName);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_Gateway();
    [CompilerGeneratedAttribute]
public void set_Gateway(string value);
    [CompilerGeneratedAttribute]
public string get_ProtectionDomain();
    [CompilerGeneratedAttribute]
public void set_ProtectionDomain(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1SecretReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1SecretReference value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SslEnabled();
    [CompilerGeneratedAttribute]
public void set_SslEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_StorageMode();
    [CompilerGeneratedAttribute]
public void set_StorageMode(string value);
    [CompilerGeneratedAttribute]
public string get_StoragePool();
    [CompilerGeneratedAttribute]
public void set_StoragePool(string value);
    [CompilerGeneratedAttribute]
public string get_System();
    [CompilerGeneratedAttribute]
public void set_System(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeName();
    [CompilerGeneratedAttribute]
public void set_VolumeName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ScaleIOVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Gateway>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtectionDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SslEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StoragePool>k__BackingField;
    [CompilerGeneratedAttribute]
private string <System>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeName>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("gateway")]
public string Gateway { get; public set; }
    [JsonPropertyNameAttribute("protectionDomain")]
public string ProtectionDomain { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1LocalObjectReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("sslEnabled")]
public Nullable`1<bool> SslEnabled { get; public set; }
    [JsonPropertyNameAttribute("storageMode")]
public string StorageMode { get; public set; }
    [JsonPropertyNameAttribute("storagePool")]
public string StoragePool { get; public set; }
    [JsonPropertyNameAttribute("system")]
public string System { get; public set; }
    [JsonPropertyNameAttribute("volumeName")]
public string VolumeName { get; public set; }
    public V1ScaleIOVolumeSource(string gateway, V1LocalObjectReference secretRef, string system, string fsType, string protectionDomain, Nullable`1<bool> readOnlyProperty, Nullable`1<bool> sslEnabled, string storageMode, string storagePool, string volumeName);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_Gateway();
    [CompilerGeneratedAttribute]
public void set_Gateway(string value);
    [CompilerGeneratedAttribute]
public string get_ProtectionDomain();
    [CompilerGeneratedAttribute]
public void set_ProtectionDomain(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1LocalObjectReference value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SslEnabled();
    [CompilerGeneratedAttribute]
public void set_SslEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_StorageMode();
    [CompilerGeneratedAttribute]
public void set_StorageMode(string value);
    [CompilerGeneratedAttribute]
public string get_StoragePool();
    [CompilerGeneratedAttribute]
public void set_StoragePool(string value);
    [CompilerGeneratedAttribute]
public string get_System();
    [CompilerGeneratedAttribute]
public void set_System(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeName();
    [CompilerGeneratedAttribute]
public void set_VolumeName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ScaleSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Replicas>k__BackingField;
    [JsonPropertyNameAttribute("replicas")]
public Nullable`1<int> Replicas { get; public set; }
    public V1ScaleSpec(Nullable`1<int> replicas);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1ScaleStatus : object {
    [CompilerGeneratedAttribute]
private int <Replicas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Selector>k__BackingField;
    [JsonPropertyNameAttribute("replicas")]
public int Replicas { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public string Selector { get; public set; }
    public V1ScaleStatus(int replicas, string selector);
    [CompilerGeneratedAttribute]
public int get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(int value);
    [CompilerGeneratedAttribute]
public string get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Scheduling : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <NodeSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Toleration> <Tolerations>k__BackingField;
    [JsonPropertyNameAttribute("nodeSelector")]
public IDictionary`2<string, string> NodeSelector { get; public set; }
    [JsonPropertyNameAttribute("tolerations")]
public IList`1<V1Toleration> Tolerations { get; public set; }
    public V1Scheduling(IDictionary`2<string, string> nodeSelector, IList`1<V1Toleration> tolerations);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_NodeSelector();
    [CompilerGeneratedAttribute]
public void set_NodeSelector(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IList`1<V1Toleration> get_Tolerations();
    [CompilerGeneratedAttribute]
public void set_Tolerations(IList`1<V1Toleration> value);
    public virtual void Validate();
}
public class k8s.Models.V1ScopedResourceSelectorRequirement : object {
    [CompilerGeneratedAttribute]
private string <OperatorProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Values>k__BackingField;
    [JsonPropertyNameAttribute("operator")]
public string OperatorProperty { get; public set; }
    [JsonPropertyNameAttribute("scopeName")]
public string ScopeName { get; public set; }
    [JsonPropertyNameAttribute("values")]
public IList`1<string> Values { get; public set; }
    public V1ScopedResourceSelectorRequirement(string operatorProperty, string scopeName, IList`1<string> values);
    [CompilerGeneratedAttribute]
public string get_OperatorProperty();
    [CompilerGeneratedAttribute]
public void set_OperatorProperty(string value);
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
public void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1ScopeSelector : object {
    [CompilerGeneratedAttribute]
private IList`1<V1ScopedResourceSelectorRequirement> <MatchExpressions>k__BackingField;
    [JsonPropertyNameAttribute("matchExpressions")]
public IList`1<V1ScopedResourceSelectorRequirement> MatchExpressions { get; public set; }
    public V1ScopeSelector(IList`1<V1ScopedResourceSelectorRequirement> matchExpressions);
    [CompilerGeneratedAttribute]
public IList`1<V1ScopedResourceSelectorRequirement> get_MatchExpressions();
    [CompilerGeneratedAttribute]
public void set_MatchExpressions(IList`1<V1ScopedResourceSelectorRequirement> value);
    public virtual void Validate();
}
public class k8s.Models.V1SeccompProfile : object {
    [CompilerGeneratedAttribute]
private string <LocalhostProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("localhostProfile")]
public string LocalhostProfile { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1SeccompProfile(string type, string localhostProfile);
    [CompilerGeneratedAttribute]
public string get_LocalhostProfile();
    [CompilerGeneratedAttribute]
public void set_LocalhostProfile(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Secret : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Byte[]> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Immutable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <StringData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("data")]
public IDictionary`2<string, Byte[]> Data { get; public set; }
    [JsonPropertyNameAttribute("immutable")]
public Nullable`1<bool> Immutable { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("stringData")]
public IDictionary`2<string, string> StringData { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1Secret(string apiVersion, IDictionary`2<string, Byte[]> data, Nullable`1<bool> immutable, string kind, V1ObjectMeta metadata, IDictionary`2<string, string> stringData, string type);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, Byte[]> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary`2<string, Byte[]> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Immutable();
    [CompilerGeneratedAttribute]
public void set_Immutable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_StringData();
    [CompilerGeneratedAttribute]
public void set_StringData(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1SecretEnvSource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    public V1SecretEnvSource(string name, Nullable`1<bool> optional);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1SecretKeySelector : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    public V1SecretKeySelector(string key, string name, Nullable`1<bool> optional);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1SecretList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Secret> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Secret> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1SecretList(IList`1<V1Secret> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Secret> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Secret> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1SecretProjection : object {
    [CompilerGeneratedAttribute]
private IList`1<V1KeyToPath> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [JsonPropertyNameAttribute("items")]
public IList`1<V1KeyToPath> Items { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    public V1SecretProjection(IList`1<V1KeyToPath> items, string name, Nullable`1<bool> optional);
    [CompilerGeneratedAttribute]
public IList`1<V1KeyToPath> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<V1KeyToPath> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    public virtual void Validate();
}
public class k8s.Models.V1SecretReference : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    public V1SecretReference(string name, string namespaceProperty);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    public virtual void Validate();
}
public class k8s.Models.V1SecretVolumeSource : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DefaultMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1KeyToPath> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretName>k__BackingField;
    [JsonPropertyNameAttribute("defaultMode")]
public Nullable`1<int> DefaultMode { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1KeyToPath> Items { get; public set; }
    [JsonPropertyNameAttribute("optional")]
public Nullable`1<bool> Optional { get; public set; }
    [JsonPropertyNameAttribute("secretName")]
public string SecretName { get; public set; }
    public V1SecretVolumeSource(Nullable`1<int> defaultMode, IList`1<V1KeyToPath> items, Nullable`1<bool> optional, string secretName);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DefaultMode();
    [CompilerGeneratedAttribute]
public void set_DefaultMode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1KeyToPath> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<V1KeyToPath> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SecretName();
    [CompilerGeneratedAttribute]
public void set_SecretName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1SecurityContext : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPrivilegeEscalation>k__BackingField;
    [CompilerGeneratedAttribute]
private V1AppArmorProfile <AppArmorProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private V1Capabilities <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Privileged>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcMount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyRootFilesystem>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RunAsGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RunAsNonRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RunAsUser>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SELinuxOptions <SeLinuxOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SeccompProfile <SeccompProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private V1WindowsSecurityContextOptions <WindowsOptions>k__BackingField;
    [JsonPropertyNameAttribute("allowPrivilegeEscalation")]
public Nullable`1<bool> AllowPrivilegeEscalation { get; public set; }
    [JsonPropertyNameAttribute("appArmorProfile")]
public V1AppArmorProfile AppArmorProfile { get; public set; }
    [JsonPropertyNameAttribute("capabilities")]
public V1Capabilities Capabilities { get; public set; }
    [JsonPropertyNameAttribute("privileged")]
public Nullable`1<bool> Privileged { get; public set; }
    [JsonPropertyNameAttribute("procMount")]
public string ProcMount { get; public set; }
    [JsonPropertyNameAttribute("readOnlyRootFilesystem")]
public Nullable`1<bool> ReadOnlyRootFilesystem { get; public set; }
    [JsonPropertyNameAttribute("runAsGroup")]
public Nullable`1<long> RunAsGroup { get; public set; }
    [JsonPropertyNameAttribute("runAsNonRoot")]
public Nullable`1<bool> RunAsNonRoot { get; public set; }
    [JsonPropertyNameAttribute("runAsUser")]
public Nullable`1<long> RunAsUser { get; public set; }
    [JsonPropertyNameAttribute("seLinuxOptions")]
public V1SELinuxOptions SeLinuxOptions { get; public set; }
    [JsonPropertyNameAttribute("seccompProfile")]
public V1SeccompProfile SeccompProfile { get; public set; }
    [JsonPropertyNameAttribute("windowsOptions")]
public V1WindowsSecurityContextOptions WindowsOptions { get; public set; }
    public V1SecurityContext(Nullable`1<bool> allowPrivilegeEscalation, V1AppArmorProfile appArmorProfile, V1Capabilities capabilities, Nullable`1<bool> privileged, string procMount, Nullable`1<bool> readOnlyRootFilesystem, Nullable`1<long> runAsGroup, Nullable`1<bool> runAsNonRoot, Nullable`1<long> runAsUser, V1SELinuxOptions seLinuxOptions, V1SeccompProfile seccompProfile, V1WindowsSecurityContextOptions windowsOptions);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowPrivilegeEscalation();
    [CompilerGeneratedAttribute]
public void set_AllowPrivilegeEscalation(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1AppArmorProfile get_AppArmorProfile();
    [CompilerGeneratedAttribute]
public void set_AppArmorProfile(V1AppArmorProfile value);
    [CompilerGeneratedAttribute]
public V1Capabilities get_Capabilities();
    [CompilerGeneratedAttribute]
public void set_Capabilities(V1Capabilities value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Privileged();
    [CompilerGeneratedAttribute]
public void set_Privileged(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_ProcMount();
    [CompilerGeneratedAttribute]
public void set_ProcMount(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyRootFilesystem();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyRootFilesystem(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RunAsGroup();
    [CompilerGeneratedAttribute]
public void set_RunAsGroup(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RunAsNonRoot();
    [CompilerGeneratedAttribute]
public void set_RunAsNonRoot(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RunAsUser();
    [CompilerGeneratedAttribute]
public void set_RunAsUser(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public V1SELinuxOptions get_SeLinuxOptions();
    [CompilerGeneratedAttribute]
public void set_SeLinuxOptions(V1SELinuxOptions value);
    [CompilerGeneratedAttribute]
public V1SeccompProfile get_SeccompProfile();
    [CompilerGeneratedAttribute]
public void set_SeccompProfile(V1SeccompProfile value);
    [CompilerGeneratedAttribute]
public V1WindowsSecurityContextOptions get_WindowsOptions();
    [CompilerGeneratedAttribute]
public void set_WindowsOptions(V1WindowsSecurityContextOptions value);
    public virtual void Validate();
}
public class k8s.Models.V1SelectableField : object {
    [CompilerGeneratedAttribute]
private string <JsonPath>k__BackingField;
    [JsonPropertyNameAttribute("jsonPath")]
public string JsonPath { get; public set; }
    public V1SelectableField(string jsonPath);
    [CompilerGeneratedAttribute]
public string get_JsonPath();
    [CompilerGeneratedAttribute]
public void set_JsonPath(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1SelfSubjectAccessReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SelfSubjectAccessReviewSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SubjectAccessReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1SelfSubjectAccessReviewSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1SubjectAccessReviewStatus Status { get; public set; }
    public V1SelfSubjectAccessReview(V1SelfSubjectAccessReviewSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1SubjectAccessReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1SelfSubjectAccessReviewSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1SelfSubjectAccessReviewSpec value);
    [CompilerGeneratedAttribute]
public V1SubjectAccessReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1SubjectAccessReviewStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1SelfSubjectAccessReviewSpec : object {
    [CompilerGeneratedAttribute]
private V1NonResourceAttributes <NonResourceAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceAttributes <ResourceAttributes>k__BackingField;
    [JsonPropertyNameAttribute("nonResourceAttributes")]
public V1NonResourceAttributes NonResourceAttributes { get; public set; }
    [JsonPropertyNameAttribute("resourceAttributes")]
public V1ResourceAttributes ResourceAttributes { get; public set; }
    public V1SelfSubjectAccessReviewSpec(V1NonResourceAttributes nonResourceAttributes, V1ResourceAttributes resourceAttributes);
    [CompilerGeneratedAttribute]
public V1NonResourceAttributes get_NonResourceAttributes();
    [CompilerGeneratedAttribute]
public void set_NonResourceAttributes(V1NonResourceAttributes value);
    [CompilerGeneratedAttribute]
public V1ResourceAttributes get_ResourceAttributes();
    [CompilerGeneratedAttribute]
public void set_ResourceAttributes(V1ResourceAttributes value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1SelfSubjectReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SelfSubjectReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1SelfSubjectReviewStatus Status { get; public set; }
    public V1SelfSubjectReview(string apiVersion, string kind, V1ObjectMeta metadata, V1SelfSubjectReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public V1SelfSubjectReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1SelfSubjectReviewStatus value);
    public virtual void Validate();
    public static V1SelfSubjectReview op_Explicit(V1alpha1SelfSubjectReview s);
    public static V1SelfSubjectReview op_Explicit(V1beta1SelfSubjectReview s);
}
public class k8s.Models.V1SelfSubjectReviewStatus : object {
    [CompilerGeneratedAttribute]
private V1UserInfo <UserInfo>k__BackingField;
    [JsonPropertyNameAttribute("userInfo")]
public V1UserInfo UserInfo { get; public set; }
    public V1SelfSubjectReviewStatus(V1UserInfo userInfo);
    [CompilerGeneratedAttribute]
public V1UserInfo get_UserInfo();
    [CompilerGeneratedAttribute]
public void set_UserInfo(V1UserInfo value);
    public virtual void Validate();
    public static V1SelfSubjectReviewStatus op_Explicit(V1alpha1SelfSubjectReviewStatus s);
    public static V1SelfSubjectReviewStatus op_Explicit(V1beta1SelfSubjectReviewStatus s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1SelfSubjectRulesReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SelfSubjectRulesReviewSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SubjectRulesReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1SelfSubjectRulesReviewSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1SubjectRulesReviewStatus Status { get; public set; }
    public V1SelfSubjectRulesReview(V1SelfSubjectRulesReviewSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1SubjectRulesReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1SelfSubjectRulesReviewSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1SelfSubjectRulesReviewSpec value);
    [CompilerGeneratedAttribute]
public V1SubjectRulesReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1SubjectRulesReviewStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1SelfSubjectRulesReviewSpec : object {
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    public V1SelfSubjectRulesReviewSpec(string namespaceProperty);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    public virtual void Validate();
}
public class k8s.Models.V1SELinuxOptions : object {
    [CompilerGeneratedAttribute]
private string <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [JsonPropertyNameAttribute("level")]
public string Level { get; public set; }
    [JsonPropertyNameAttribute("role")]
public string Role { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyNameAttribute("user")]
public string User { get; public set; }
    public V1SELinuxOptions(string level, string role, string type, string user);
    [CompilerGeneratedAttribute]
public string get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(string value);
    [CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ServerAddressByClientCIDR : object {
    [CompilerGeneratedAttribute]
private string <ClientCIDR>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerAddress>k__BackingField;
    [JsonPropertyNameAttribute("clientCIDR")]
public string ClientCIDR { get; public set; }
    [JsonPropertyNameAttribute("serverAddress")]
public string ServerAddress { get; public set; }
    public V1ServerAddressByClientCIDR(string clientCIDR, string serverAddress);
    [CompilerGeneratedAttribute]
public string get_ClientCIDR();
    [CompilerGeneratedAttribute]
public void set_ClientCIDR(string value);
    [CompilerGeneratedAttribute]
public string get_ServerAddress();
    [CompilerGeneratedAttribute]
public void set_ServerAddress(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Service : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ServiceSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ServiceStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1ServiceSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1ServiceStatus Status { get; public set; }
    public V1Service(string apiVersion, string kind, V1ObjectMeta metadata, V1ServiceSpec spec, V1ServiceStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ServiceSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1ServiceSpec value);
    [CompilerGeneratedAttribute]
public V1ServiceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1ServiceStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ServiceAccount : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutomountServiceAccountToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1LocalObjectReference> <ImagePullSecrets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ObjectReference> <Secrets>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("automountServiceAccountToken")]
public Nullable`1<bool> AutomountServiceAccountToken { get; public set; }
    [JsonPropertyNameAttribute("imagePullSecrets")]
public IList`1<V1LocalObjectReference> ImagePullSecrets { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("secrets")]
public IList`1<V1ObjectReference> Secrets { get; public set; }
    public V1ServiceAccount(string apiVersion, Nullable`1<bool> automountServiceAccountToken, IList`1<V1LocalObjectReference> imagePullSecrets, string kind, V1ObjectMeta metadata, IList`1<V1ObjectReference> secrets);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutomountServiceAccountToken();
    [CompilerGeneratedAttribute]
public void set_AutomountServiceAccountToken(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1LocalObjectReference> get_ImagePullSecrets();
    [CompilerGeneratedAttribute]
public void set_ImagePullSecrets(IList`1<V1LocalObjectReference> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<V1ObjectReference> get_Secrets();
    [CompilerGeneratedAttribute]
public void set_Secrets(IList`1<V1ObjectReference> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ServiceAccountList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ServiceAccount> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ServiceAccount> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ServiceAccountList(IList`1<V1ServiceAccount> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ServiceAccount> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ServiceAccount> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ServiceAccountSubject : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    public V1ServiceAccountSubject(string name, string namespaceProperty);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    public virtual void Validate();
    public static V1ServiceAccountSubject op_Explicit(V1beta3ServiceAccountSubject s);
}
public class k8s.Models.V1ServiceAccountTokenProjection : object {
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ExpirationSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [JsonPropertyNameAttribute("audience")]
public string Audience { get; public set; }
    [JsonPropertyNameAttribute("expirationSeconds")]
public Nullable`1<long> ExpirationSeconds { get; public set; }
    [JsonPropertyNameAttribute("path")]
public string Path { get; public set; }
    public V1ServiceAccountTokenProjection(string path, string audience, Nullable`1<long> expirationSeconds);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ExpirationSeconds();
    [CompilerGeneratedAttribute]
public void set_ExpirationSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ServiceBackendPort : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Number>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("number")]
public Nullable`1<int> Number { get; public set; }
    public V1ServiceBackendPort(string name, Nullable`1<int> number);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Number();
    [CompilerGeneratedAttribute]
public void set_Number(Nullable`1<int> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ServiceList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Service> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1Service> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ServiceList(IList`1<V1Service> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1Service> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1Service> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1ServicePort : object {
    [CompilerGeneratedAttribute]
private string <AppProtocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NodePort>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private IntstrIntOrString <TargetPort>k__BackingField;
    [JsonPropertyNameAttribute("appProtocol")]
public string AppProtocol { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("nodePort")]
public Nullable`1<int> NodePort { get; public set; }
    [JsonPropertyNameAttribute("port")]
public int Port { get; public set; }
    [JsonPropertyNameAttribute("protocol")]
public string Protocol { get; public set; }
    [JsonPropertyNameAttribute("targetPort")]
public IntstrIntOrString TargetPort { get; public set; }
    public V1ServicePort(int port, string appProtocol, string name, Nullable`1<int> nodePort, string protocol, IntstrIntOrString targetPort);
    [CompilerGeneratedAttribute]
public string get_AppProtocol();
    [CompilerGeneratedAttribute]
public void set_AppProtocol(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NodePort();
    [CompilerGeneratedAttribute]
public void set_NodePort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_TargetPort();
    [CompilerGeneratedAttribute]
public void set_TargetPort(IntstrIntOrString value);
    public virtual void Validate();
}
public class k8s.Models.V1ServiceSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllocateLoadBalancerNodePorts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterIP>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ClusterIPs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ExternalIPs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalTrafficPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <HealthCheckNodePort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalTrafficPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <IpFamilies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IpFamilyPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoadBalancerClass>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoadBalancerIP>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <LoadBalancerSourceRanges>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ServicePort> <Ports>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PublishNotReadyAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionAffinity>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SessionAffinityConfig <SessionAffinityConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrafficDistribution>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("allocateLoadBalancerNodePorts")]
public Nullable`1<bool> AllocateLoadBalancerNodePorts { get; public set; }
    [JsonPropertyNameAttribute("clusterIP")]
public string ClusterIP { get; public set; }
    [JsonPropertyNameAttribute("clusterIPs")]
public IList`1<string> ClusterIPs { get; public set; }
    [JsonPropertyNameAttribute("externalIPs")]
public IList`1<string> ExternalIPs { get; public set; }
    [JsonPropertyNameAttribute("externalName")]
public string ExternalName { get; public set; }
    [JsonPropertyNameAttribute("externalTrafficPolicy")]
public string ExternalTrafficPolicy { get; public set; }
    [JsonPropertyNameAttribute("healthCheckNodePort")]
public Nullable`1<int> HealthCheckNodePort { get; public set; }
    [JsonPropertyNameAttribute("internalTrafficPolicy")]
public string InternalTrafficPolicy { get; public set; }
    [JsonPropertyNameAttribute("ipFamilies")]
public IList`1<string> IpFamilies { get; public set; }
    [JsonPropertyNameAttribute("ipFamilyPolicy")]
public string IpFamilyPolicy { get; public set; }
    [JsonPropertyNameAttribute("loadBalancerClass")]
public string LoadBalancerClass { get; public set; }
    [JsonPropertyNameAttribute("loadBalancerIP")]
public string LoadBalancerIP { get; public set; }
    [JsonPropertyNameAttribute("loadBalancerSourceRanges")]
public IList`1<string> LoadBalancerSourceRanges { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public IList`1<V1ServicePort> Ports { get; public set; }
    [JsonPropertyNameAttribute("publishNotReadyAddresses")]
public Nullable`1<bool> PublishNotReadyAddresses { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public IDictionary`2<string, string> Selector { get; public set; }
    [JsonPropertyNameAttribute("sessionAffinity")]
public string SessionAffinity { get; public set; }
    [JsonPropertyNameAttribute("sessionAffinityConfig")]
public V1SessionAffinityConfig SessionAffinityConfig { get; public set; }
    [JsonPropertyNameAttribute("trafficDistribution")]
public string TrafficDistribution { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1ServiceSpec(Nullable`1<bool> allocateLoadBalancerNodePorts, string clusterIP, IList`1<string> clusterIPs, IList`1<string> externalIPs, string externalName, string externalTrafficPolicy, Nullable`1<int> healthCheckNodePort, string internalTrafficPolicy, IList`1<string> ipFamilies, string ipFamilyPolicy, string loadBalancerClass, string loadBalancerIP, IList`1<string> loadBalancerSourceRanges, IList`1<V1ServicePort> ports, Nullable`1<bool> publishNotReadyAddresses, IDictionary`2<string, string> selector, string sessionAffinity, V1SessionAffinityConfig sessionAffinityConfig, string trafficDistribution, string type);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllocateLoadBalancerNodePorts();
    [CompilerGeneratedAttribute]
public void set_AllocateLoadBalancerNodePorts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_ClusterIP();
    [CompilerGeneratedAttribute]
public void set_ClusterIP(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ClusterIPs();
    [CompilerGeneratedAttribute]
public void set_ClusterIPs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ExternalIPs();
    [CompilerGeneratedAttribute]
public void set_ExternalIPs(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_ExternalName();
    [CompilerGeneratedAttribute]
public void set_ExternalName(string value);
    [CompilerGeneratedAttribute]
public string get_ExternalTrafficPolicy();
    [CompilerGeneratedAttribute]
public void set_ExternalTrafficPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_HealthCheckNodePort();
    [CompilerGeneratedAttribute]
public void set_HealthCheckNodePort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_InternalTrafficPolicy();
    [CompilerGeneratedAttribute]
public void set_InternalTrafficPolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_IpFamilies();
    [CompilerGeneratedAttribute]
public void set_IpFamilies(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_IpFamilyPolicy();
    [CompilerGeneratedAttribute]
public void set_IpFamilyPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_LoadBalancerClass();
    [CompilerGeneratedAttribute]
public void set_LoadBalancerClass(string value);
    [CompilerGeneratedAttribute]
public string get_LoadBalancerIP();
    [CompilerGeneratedAttribute]
public void set_LoadBalancerIP(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_LoadBalancerSourceRanges();
    [CompilerGeneratedAttribute]
public void set_LoadBalancerSourceRanges(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ServicePort> get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(IList`1<V1ServicePort> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PublishNotReadyAddresses();
    [CompilerGeneratedAttribute]
public void set_PublishNotReadyAddresses(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_SessionAffinity();
    [CompilerGeneratedAttribute]
public void set_SessionAffinity(string value);
    [CompilerGeneratedAttribute]
public V1SessionAffinityConfig get_SessionAffinityConfig();
    [CompilerGeneratedAttribute]
public void set_SessionAffinityConfig(V1SessionAffinityConfig value);
    [CompilerGeneratedAttribute]
public string get_TrafficDistribution();
    [CompilerGeneratedAttribute]
public void set_TrafficDistribution(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1ServiceStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LoadBalancerStatus <LoadBalancer>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1Condition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("loadBalancer")]
public V1LoadBalancerStatus LoadBalancer { get; public set; }
    public V1ServiceStatus(IList`1<V1Condition> conditions, V1LoadBalancerStatus loadBalancer);
    [CompilerGeneratedAttribute]
public IList`1<V1Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1Condition> value);
    [CompilerGeneratedAttribute]
public V1LoadBalancerStatus get_LoadBalancer();
    [CompilerGeneratedAttribute]
public void set_LoadBalancer(V1LoadBalancerStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1SessionAffinityConfig : object {
    [CompilerGeneratedAttribute]
private V1ClientIPConfig <ClientIP>k__BackingField;
    [JsonPropertyNameAttribute("clientIP")]
public V1ClientIPConfig ClientIP { get; public set; }
    public V1SessionAffinityConfig(V1ClientIPConfig clientIP);
    [CompilerGeneratedAttribute]
public V1ClientIPConfig get_ClientIP();
    [CompilerGeneratedAttribute]
public void set_ClientIP(V1ClientIPConfig value);
    public virtual void Validate();
}
public class k8s.Models.V1SleepAction : object {
    [CompilerGeneratedAttribute]
private long <Seconds>k__BackingField;
    [JsonPropertyNameAttribute("seconds")]
public long Seconds { get; public set; }
    public V1SleepAction(long seconds);
    [CompilerGeneratedAttribute]
public long get_Seconds();
    [CompilerGeneratedAttribute]
public void set_Seconds(long value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1StatefulSet : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StatefulSetSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StatefulSetStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1StatefulSetSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1StatefulSetStatus Status { get; public set; }
    public V1StatefulSet(string apiVersion, string kind, V1ObjectMeta metadata, V1StatefulSetSpec spec, V1StatefulSetStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1StatefulSetSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1StatefulSetSpec value);
    [CompilerGeneratedAttribute]
public V1StatefulSetStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1StatefulSetStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1StatefulSetCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1StatefulSetCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1StatefulSetList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1StatefulSet> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1StatefulSet> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1StatefulSetList(IList`1<V1StatefulSet> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1StatefulSet> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1StatefulSet> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1StatefulSetOrdinals : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Start>k__BackingField;
    [JsonPropertyNameAttribute("start")]
public Nullable`1<int> Start { get; public set; }
    public V1StatefulSetOrdinals(Nullable`1<int> start);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1StatefulSetPersistentVolumeClaimRetentionPolicy : object {
    [CompilerGeneratedAttribute]
private string <WhenDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WhenScaled>k__BackingField;
    [JsonPropertyNameAttribute("whenDeleted")]
public string WhenDeleted { get; public set; }
    [JsonPropertyNameAttribute("whenScaled")]
public string WhenScaled { get; public set; }
    public V1StatefulSetPersistentVolumeClaimRetentionPolicy(string whenDeleted, string whenScaled);
    [CompilerGeneratedAttribute]
public string get_WhenDeleted();
    [CompilerGeneratedAttribute]
public void set_WhenDeleted(string value);
    [CompilerGeneratedAttribute]
public string get_WhenScaled();
    [CompilerGeneratedAttribute]
public void set_WhenScaled(string value);
    public virtual void Validate();
}
public class k8s.Models.V1StatefulSetSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinReadySeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StatefulSetOrdinals <Ordinals>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StatefulSetPersistentVolumeClaimRetentionPolicy <PersistentVolumeClaimRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PodManagementPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Replicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RevisionHistoryLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PodTemplateSpec <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StatefulSetUpdateStrategy <UpdateStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1PersistentVolumeClaim> <VolumeClaimTemplates>k__BackingField;
    [JsonPropertyNameAttribute("minReadySeconds")]
public Nullable`1<int> MinReadySeconds { get; public set; }
    [JsonPropertyNameAttribute("ordinals")]
public V1StatefulSetOrdinals Ordinals { get; public set; }
    [JsonPropertyNameAttribute("persistentVolumeClaimRetentionPolicy")]
public V1StatefulSetPersistentVolumeClaimRetentionPolicy PersistentVolumeClaimRetentionPolicy { get; public set; }
    [JsonPropertyNameAttribute("podManagementPolicy")]
public string PodManagementPolicy { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public Nullable`1<int> Replicas { get; public set; }
    [JsonPropertyNameAttribute("revisionHistoryLimit")]
public Nullable`1<int> RevisionHistoryLimit { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    [JsonPropertyNameAttribute("serviceName")]
public string ServiceName { get; public set; }
    [JsonPropertyNameAttribute("template")]
public V1PodTemplateSpec Template { get; public set; }
    [JsonPropertyNameAttribute("updateStrategy")]
public V1StatefulSetUpdateStrategy UpdateStrategy { get; public set; }
    [JsonPropertyNameAttribute("volumeClaimTemplates")]
public IList`1<V1PersistentVolumeClaim> VolumeClaimTemplates { get; public set; }
    public V1StatefulSetSpec(V1LabelSelector selector, string serviceName, V1PodTemplateSpec template, Nullable`1<int> minReadySeconds, V1StatefulSetOrdinals ordinals, V1StatefulSetPersistentVolumeClaimRetentionPolicy persistentVolumeClaimRetentionPolicy, string podManagementPolicy, Nullable`1<int> replicas, Nullable`1<int> revisionHistoryLimit, V1StatefulSetUpdateStrategy updateStrategy, IList`1<V1PersistentVolumeClaim> volumeClaimTemplates);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinReadySeconds();
    [CompilerGeneratedAttribute]
public void set_MinReadySeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1StatefulSetOrdinals get_Ordinals();
    [CompilerGeneratedAttribute]
public void set_Ordinals(V1StatefulSetOrdinals value);
    [CompilerGeneratedAttribute]
public V1StatefulSetPersistentVolumeClaimRetentionPolicy get_PersistentVolumeClaimRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_PersistentVolumeClaimRetentionPolicy(V1StatefulSetPersistentVolumeClaimRetentionPolicy value);
    [CompilerGeneratedAttribute]
public string get_PodManagementPolicy();
    [CompilerGeneratedAttribute]
public void set_PodManagementPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RevisionHistoryLimit();
    [CompilerGeneratedAttribute]
public void set_RevisionHistoryLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public V1PodTemplateSpec get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(V1PodTemplateSpec value);
    [CompilerGeneratedAttribute]
public V1StatefulSetUpdateStrategy get_UpdateStrategy();
    [CompilerGeneratedAttribute]
public void set_UpdateStrategy(V1StatefulSetUpdateStrategy value);
    [CompilerGeneratedAttribute]
public IList`1<V1PersistentVolumeClaim> get_VolumeClaimTemplates();
    [CompilerGeneratedAttribute]
public void set_VolumeClaimTemplates(IList`1<V1PersistentVolumeClaim> value);
    public virtual void Validate();
}
public class k8s.Models.V1StatefulSetStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AvailableReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CollisionCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1StatefulSetCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CurrentReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentRevision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadyReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Replicas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UpdateRevision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UpdatedReplicas>k__BackingField;
    [JsonPropertyNameAttribute("availableReplicas")]
public Nullable`1<int> AvailableReplicas { get; public set; }
    [JsonPropertyNameAttribute("collisionCount")]
public Nullable`1<int> CollisionCount { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1StatefulSetCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("currentReplicas")]
public Nullable`1<int> CurrentReplicas { get; public set; }
    [JsonPropertyNameAttribute("currentRevision")]
public string CurrentRevision { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("readyReplicas")]
public Nullable`1<int> ReadyReplicas { get; public set; }
    [JsonPropertyNameAttribute("replicas")]
public int Replicas { get; public set; }
    [JsonPropertyNameAttribute("updateRevision")]
public string UpdateRevision { get; public set; }
    [JsonPropertyNameAttribute("updatedReplicas")]
public Nullable`1<int> UpdatedReplicas { get; public set; }
    public V1StatefulSetStatus(int replicas, Nullable`1<int> availableReplicas, Nullable`1<int> collisionCount, IList`1<V1StatefulSetCondition> conditions, Nullable`1<int> currentReplicas, string currentRevision, Nullable`1<long> observedGeneration, Nullable`1<int> readyReplicas, string updateRevision, Nullable`1<int> updatedReplicas);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AvailableReplicas();
    [CompilerGeneratedAttribute]
public void set_AvailableReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CollisionCount();
    [CompilerGeneratedAttribute]
public void set_CollisionCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<V1StatefulSetCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1StatefulSetCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CurrentReplicas();
    [CompilerGeneratedAttribute]
public void set_CurrentReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_CurrentRevision();
    [CompilerGeneratedAttribute]
public void set_CurrentRevision(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadyReplicas();
    [CompilerGeneratedAttribute]
public void set_ReadyReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_Replicas();
    [CompilerGeneratedAttribute]
public void set_Replicas(int value);
    [CompilerGeneratedAttribute]
public string get_UpdateRevision();
    [CompilerGeneratedAttribute]
public void set_UpdateRevision(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UpdatedReplicas();
    [CompilerGeneratedAttribute]
public void set_UpdatedReplicas(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1StatefulSetUpdateStrategy : object {
    [CompilerGeneratedAttribute]
private V1RollingUpdateStatefulSetStrategy <RollingUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("rollingUpdate")]
public V1RollingUpdateStatefulSetStrategy RollingUpdate { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1StatefulSetUpdateStrategy(V1RollingUpdateStatefulSetStrategy rollingUpdate, string type);
    [CompilerGeneratedAttribute]
public V1RollingUpdateStatefulSetStrategy get_RollingUpdate();
    [CompilerGeneratedAttribute]
public void set_RollingUpdate(V1RollingUpdateStatefulSetStrategy value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1Status : object {
    private JsonElement _original;
    [CompilerGeneratedAttribute]
private bool <HasObject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StatusDetails <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    public bool HasObject { get; private set; }
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("code")]
public Nullable`1<int> Code { get; public set; }
    [JsonPropertyNameAttribute("details")]
public V1StatusDetails Details { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    public V1Status(string apiVersion, Nullable`1<int> code, V1StatusDetails details, string kind, string message, V1ListMeta metadata, string reason, string status);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public bool get_HasObject();
    [CompilerGeneratedAttribute]
private void set_HasObject(bool value);
    public T ObjectView();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V1StatusDetails get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(V1StatusDetails value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    public virtual void Validate();
}
public class k8s.Models.V1StatusCause : object {
    [CompilerGeneratedAttribute]
private string <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyNameAttribute("field")]
public string Field { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    public V1StatusCause(string field, string message, string reason);
    [CompilerGeneratedAttribute]
public string get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual void Validate();
}
public class k8s.Models.V1StatusDetails : object {
    [CompilerGeneratedAttribute]
private IList`1<V1StatusCause> <Causes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RetryAfterSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [JsonPropertyNameAttribute("causes")]
public IList`1<V1StatusCause> Causes { get; public set; }
    [JsonPropertyNameAttribute("group")]
public string Group { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("retryAfterSeconds")]
public Nullable`1<int> RetryAfterSeconds { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    public V1StatusDetails(IList`1<V1StatusCause> causes, string group, string kind, string name, Nullable`1<int> retryAfterSeconds, string uid);
    [CompilerGeneratedAttribute]
public IList`1<V1StatusCause> get_Causes();
    [CompilerGeneratedAttribute]
public void set_Causes(IList`1<V1StatusCause> value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RetryAfterSeconds();
    [CompilerGeneratedAttribute]
public void set_RetryAfterSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1StorageClass : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowVolumeExpansion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1TopologySelectorTerm> <AllowedTopologies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <MountOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Provisioner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReclaimPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeBindingMode>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("allowVolumeExpansion")]
public Nullable`1<bool> AllowVolumeExpansion { get; public set; }
    [JsonPropertyNameAttribute("allowedTopologies")]
public IList`1<V1TopologySelectorTerm> AllowedTopologies { get; public set; }
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("mountOptions")]
public IList`1<string> MountOptions { get; public set; }
    [JsonPropertyNameAttribute("parameters")]
public IDictionary`2<string, string> Parameters { get; public set; }
    [JsonPropertyNameAttribute("provisioner")]
public string Provisioner { get; public set; }
    [JsonPropertyNameAttribute("reclaimPolicy")]
public string ReclaimPolicy { get; public set; }
    [JsonPropertyNameAttribute("volumeBindingMode")]
public string VolumeBindingMode { get; public set; }
    public V1StorageClass(string provisioner, Nullable`1<bool> allowVolumeExpansion, IList`1<V1TopologySelectorTerm> allowedTopologies, string apiVersion, string kind, V1ObjectMeta metadata, IList`1<string> mountOptions, IDictionary`2<string, string> parameters, string reclaimPolicy, string volumeBindingMode);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowVolumeExpansion();
    [CompilerGeneratedAttribute]
public void set_AllowVolumeExpansion(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<V1TopologySelectorTerm> get_AllowedTopologies();
    [CompilerGeneratedAttribute]
public void set_AllowedTopologies(IList`1<V1TopologySelectorTerm> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_MountOptions();
    [CompilerGeneratedAttribute]
public void set_MountOptions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Provisioner();
    [CompilerGeneratedAttribute]
public void set_Provisioner(string value);
    [CompilerGeneratedAttribute]
public string get_ReclaimPolicy();
    [CompilerGeneratedAttribute]
public void set_ReclaimPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeBindingMode();
    [CompilerGeneratedAttribute]
public void set_VolumeBindingMode(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1StorageClassList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1StorageClass> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1StorageClass> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1StorageClassList(IList`1<V1StorageClass> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1StorageClass> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1StorageClass> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1StorageOSPersistentVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeNamespace>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1ObjectReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("volumeName")]
public string VolumeName { get; public set; }
    [JsonPropertyNameAttribute("volumeNamespace")]
public string VolumeNamespace { get; public set; }
    public V1StorageOSPersistentVolumeSource(string fsType, Nullable`1<bool> readOnlyProperty, V1ObjectReference secretRef, string volumeName, string volumeNamespace);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1ObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1ObjectReference value);
    [CompilerGeneratedAttribute]
public string get_VolumeName();
    [CompilerGeneratedAttribute]
public void set_VolumeName(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeNamespace();
    [CompilerGeneratedAttribute]
public void set_VolumeNamespace(string value);
    public virtual void Validate();
}
public class k8s.Models.V1StorageOSVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LocalObjectReference <SecretRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumeNamespace>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("secretRef")]
public V1LocalObjectReference SecretRef { get; public set; }
    [JsonPropertyNameAttribute("volumeName")]
public string VolumeName { get; public set; }
    [JsonPropertyNameAttribute("volumeNamespace")]
public string VolumeNamespace { get; public set; }
    public V1StorageOSVolumeSource(string fsType, Nullable`1<bool> readOnlyProperty, V1LocalObjectReference secretRef, string volumeName, string volumeNamespace);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public V1LocalObjectReference get_SecretRef();
    [CompilerGeneratedAttribute]
public void set_SecretRef(V1LocalObjectReference value);
    [CompilerGeneratedAttribute]
public string get_VolumeName();
    [CompilerGeneratedAttribute]
public void set_VolumeName(string value);
    [CompilerGeneratedAttribute]
public string get_VolumeNamespace();
    [CompilerGeneratedAttribute]
public void set_VolumeNamespace(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1SubjectAccessReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SubjectAccessReviewSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SubjectAccessReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1SubjectAccessReviewSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1SubjectAccessReviewStatus Status { get; public set; }
    public V1SubjectAccessReview(V1SubjectAccessReviewSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1SubjectAccessReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1SubjectAccessReviewSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1SubjectAccessReviewSpec value);
    [CompilerGeneratedAttribute]
public V1SubjectAccessReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1SubjectAccessReviewStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1SubjectAccessReviewSpec : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IList`1<string>> <Extra>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NonResourceAttributes <NonResourceAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ResourceAttributes <ResourceAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [JsonPropertyNameAttribute("extra")]
public IDictionary`2<string, IList`1<string>> Extra { get; public set; }
    [JsonPropertyNameAttribute("groups")]
public IList`1<string> Groups { get; public set; }
    [JsonPropertyNameAttribute("nonResourceAttributes")]
public V1NonResourceAttributes NonResourceAttributes { get; public set; }
    [JsonPropertyNameAttribute("resourceAttributes")]
public V1ResourceAttributes ResourceAttributes { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    [JsonPropertyNameAttribute("user")]
public string User { get; public set; }
    public V1SubjectAccessReviewSpec(IDictionary`2<string, IList`1<string>> extra, IList`1<string> groups, V1NonResourceAttributes nonResourceAttributes, V1ResourceAttributes resourceAttributes, string uid, string user);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IList`1<string>> get_Extra();
    [CompilerGeneratedAttribute]
public void set_Extra(IDictionary`2<string, IList`1<string>> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public V1NonResourceAttributes get_NonResourceAttributes();
    [CompilerGeneratedAttribute]
public void set_NonResourceAttributes(V1NonResourceAttributes value);
    [CompilerGeneratedAttribute]
public V1ResourceAttributes get_ResourceAttributes();
    [CompilerGeneratedAttribute]
public void set_ResourceAttributes(V1ResourceAttributes value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    public virtual void Validate();
}
public class k8s.Models.V1SubjectAccessReviewStatus : object {
    [CompilerGeneratedAttribute]
private bool <Allowed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Denied>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EvaluationError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyNameAttribute("allowed")]
public bool Allowed { get; public set; }
    [JsonPropertyNameAttribute("denied")]
public Nullable`1<bool> Denied { get; public set; }
    [JsonPropertyNameAttribute("evaluationError")]
public string EvaluationError { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    public V1SubjectAccessReviewStatus(bool allowed, Nullable`1<bool> denied, string evaluationError, string reason);
    [CompilerGeneratedAttribute]
public bool get_Allowed();
    [CompilerGeneratedAttribute]
public void set_Allowed(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Denied();
    [CompilerGeneratedAttribute]
public void set_Denied(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_EvaluationError();
    [CompilerGeneratedAttribute]
public void set_EvaluationError(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual void Validate();
}
public class k8s.Models.V1SubjectRulesReviewStatus : object {
    [CompilerGeneratedAttribute]
private string <EvaluationError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Incomplete>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1NonResourceRule> <NonResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ResourceRule> <ResourceRules>k__BackingField;
    [JsonPropertyNameAttribute("evaluationError")]
public string EvaluationError { get; public set; }
    [JsonPropertyNameAttribute("incomplete")]
public bool Incomplete { get; public set; }
    [JsonPropertyNameAttribute("nonResourceRules")]
public IList`1<V1NonResourceRule> NonResourceRules { get; public set; }
    [JsonPropertyNameAttribute("resourceRules")]
public IList`1<V1ResourceRule> ResourceRules { get; public set; }
    public V1SubjectRulesReviewStatus(bool incomplete, IList`1<V1NonResourceRule> nonResourceRules, IList`1<V1ResourceRule> resourceRules, string evaluationError);
    [CompilerGeneratedAttribute]
public string get_EvaluationError();
    [CompilerGeneratedAttribute]
public void set_EvaluationError(string value);
    [CompilerGeneratedAttribute]
public bool get_Incomplete();
    [CompilerGeneratedAttribute]
public void set_Incomplete(bool value);
    [CompilerGeneratedAttribute]
public IList`1<V1NonResourceRule> get_NonResourceRules();
    [CompilerGeneratedAttribute]
public void set_NonResourceRules(IList`1<V1NonResourceRule> value);
    [CompilerGeneratedAttribute]
public IList`1<V1ResourceRule> get_ResourceRules();
    [CompilerGeneratedAttribute]
public void set_ResourceRules(IList`1<V1ResourceRule> value);
    public virtual void Validate();
}
public class k8s.Models.V1SuccessPolicy : object {
    [CompilerGeneratedAttribute]
private IList`1<V1SuccessPolicyRule> <Rules>k__BackingField;
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1SuccessPolicyRule> Rules { get; public set; }
    public V1SuccessPolicy(IList`1<V1SuccessPolicyRule> rules);
    [CompilerGeneratedAttribute]
public IList`1<V1SuccessPolicyRule> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1SuccessPolicyRule> value);
    public virtual void Validate();
}
public class k8s.Models.V1SuccessPolicyRule : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SucceededCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SucceededIndexes>k__BackingField;
    [JsonPropertyNameAttribute("succeededCount")]
public Nullable`1<int> SucceededCount { get; public set; }
    [JsonPropertyNameAttribute("succeededIndexes")]
public string SucceededIndexes { get; public set; }
    public V1SuccessPolicyRule(Nullable`1<int> succeededCount, string succeededIndexes);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SucceededCount();
    [CompilerGeneratedAttribute]
public void set_SucceededCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_SucceededIndexes();
    [CompilerGeneratedAttribute]
public void set_SucceededIndexes(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Sysctl : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    public V1Sysctl(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Taint : object {
    [CompilerGeneratedAttribute]
private string <Effect>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <TimeAdded>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyNameAttribute("effect")]
public string Effect { get; public set; }
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("timeAdded")]
public Nullable`1<DateTime> TimeAdded { get; public set; }
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    public V1Taint(string effect, string key, Nullable`1<DateTime> timeAdded, string value);
    [CompilerGeneratedAttribute]
public string get_Effect();
    [CompilerGeneratedAttribute]
public void set_Effect(string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_TimeAdded();
    [CompilerGeneratedAttribute]
public void set_TimeAdded(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
public class k8s.Models.V1TCPSocketAction : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private IntstrIntOrString <Port>k__BackingField;
    [JsonPropertyNameAttribute("host")]
public string Host { get; public set; }
    [JsonPropertyNameAttribute("port")]
public IntstrIntOrString Port { get; public set; }
    public V1TCPSocketAction(IntstrIntOrString port, string host);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public IntstrIntOrString get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(IntstrIntOrString value);
    public virtual void Validate();
}
public class k8s.Models.V1TokenRequestSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Audiences>k__BackingField;
    [CompilerGeneratedAttribute]
private V1BoundObjectReference <BoundObjectRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ExpirationSeconds>k__BackingField;
    [JsonPropertyNameAttribute("audiences")]
public IList`1<string> Audiences { get; public set; }
    [JsonPropertyNameAttribute("boundObjectRef")]
public V1BoundObjectReference BoundObjectRef { get; public set; }
    [JsonPropertyNameAttribute("expirationSeconds")]
public Nullable`1<long> ExpirationSeconds { get; public set; }
    public V1TokenRequestSpec(IList`1<string> audiences, V1BoundObjectReference boundObjectRef, Nullable`1<long> expirationSeconds);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Audiences();
    [CompilerGeneratedAttribute]
public void set_Audiences(IList`1<string> value);
    [CompilerGeneratedAttribute]
public V1BoundObjectReference get_BoundObjectRef();
    [CompilerGeneratedAttribute]
public void set_BoundObjectRef(V1BoundObjectReference value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ExpirationSeconds();
    [CompilerGeneratedAttribute]
public void set_ExpirationSeconds(Nullable`1<long> value);
    public virtual void Validate();
}
public class k8s.Models.V1TokenRequestStatus : object {
    [CompilerGeneratedAttribute]
private DateTime <ExpirationTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [JsonPropertyNameAttribute("expirationTimestamp")]
public DateTime ExpirationTimestamp { get; public set; }
    [JsonPropertyNameAttribute("token")]
public string Token { get; public set; }
    public V1TokenRequestStatus(DateTime expirationTimestamp, string token);
    [CompilerGeneratedAttribute]
public DateTime get_ExpirationTimestamp();
    [CompilerGeneratedAttribute]
public void set_ExpirationTimestamp(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1TokenReview : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TokenReviewSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TokenReviewStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1TokenReviewSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1TokenReviewStatus Status { get; public set; }
    public V1TokenReview(V1TokenReviewSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1TokenReviewStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1TokenReviewSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1TokenReviewSpec value);
    [CompilerGeneratedAttribute]
public V1TokenReviewStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1TokenReviewStatus value);
    public virtual void Validate();
}
public class k8s.Models.V1TokenReviewSpec : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Audiences>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [JsonPropertyNameAttribute("audiences")]
public IList`1<string> Audiences { get; public set; }
    [JsonPropertyNameAttribute("token")]
public string Token { get; public set; }
    public V1TokenReviewSpec(IList`1<string> audiences, string token);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Audiences();
    [CompilerGeneratedAttribute]
public void set_Audiences(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    public virtual void Validate();
}
public class k8s.Models.V1TokenReviewStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Audiences>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Authenticated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private V1UserInfo <User>k__BackingField;
    [JsonPropertyNameAttribute("audiences")]
public IList`1<string> Audiences { get; public set; }
    [JsonPropertyNameAttribute("authenticated")]
public Nullable`1<bool> Authenticated { get; public set; }
    [JsonPropertyNameAttribute("error")]
public string Error { get; public set; }
    [JsonPropertyNameAttribute("user")]
public V1UserInfo User { get; public set; }
    public V1TokenReviewStatus(IList`1<string> audiences, Nullable`1<bool> authenticated, string error, V1UserInfo user);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Audiences();
    [CompilerGeneratedAttribute]
public void set_Audiences(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Authenticated();
    [CompilerGeneratedAttribute]
public void set_Authenticated(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public V1UserInfo get_User();
    [CompilerGeneratedAttribute]
public void set_User(V1UserInfo value);
    public virtual void Validate();
}
public class k8s.Models.V1Toleration : object {
    [CompilerGeneratedAttribute]
private string <Effect>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatorProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TolerationSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyNameAttribute("effect")]
public string Effect { get; public set; }
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("operator")]
public string OperatorProperty { get; public set; }
    [JsonPropertyNameAttribute("tolerationSeconds")]
public Nullable`1<long> TolerationSeconds { get; public set; }
    [JsonPropertyNameAttribute("value")]
public string Value { get; public set; }
    public V1Toleration(string effect, string key, string operatorProperty, Nullable`1<long> tolerationSeconds, string value);
    [CompilerGeneratedAttribute]
public string get_Effect();
    [CompilerGeneratedAttribute]
public void set_Effect(string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_OperatorProperty();
    [CompilerGeneratedAttribute]
public void set_OperatorProperty(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TolerationSeconds();
    [CompilerGeneratedAttribute]
public void set_TolerationSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
public class k8s.Models.V1TopologySelectorLabelRequirement : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Values>k__BackingField;
    [JsonPropertyNameAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyNameAttribute("values")]
public IList`1<string> Values { get; public set; }
    public V1TopologySelectorLabelRequirement(string key, IList`1<string> values);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1TopologySelectorTerm : object {
    [CompilerGeneratedAttribute]
private IList`1<V1TopologySelectorLabelRequirement> <MatchLabelExpressions>k__BackingField;
    [JsonPropertyNameAttribute("matchLabelExpressions")]
public IList`1<V1TopologySelectorLabelRequirement> MatchLabelExpressions { get; public set; }
    public V1TopologySelectorTerm(IList`1<V1TopologySelectorLabelRequirement> matchLabelExpressions);
    [CompilerGeneratedAttribute]
public IList`1<V1TopologySelectorLabelRequirement> get_MatchLabelExpressions();
    [CompilerGeneratedAttribute]
public void set_MatchLabelExpressions(IList`1<V1TopologySelectorLabelRequirement> value);
    public virtual void Validate();
}
public class k8s.Models.V1TopologySpreadConstraint : object {
    [CompilerGeneratedAttribute]
private V1LabelSelector <LabelSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <MatchLabelKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxSkew>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinDomains>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeAffinityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeTaintsPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TopologyKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WhenUnsatisfiable>k__BackingField;
    [JsonPropertyNameAttribute("labelSelector")]
public V1LabelSelector LabelSelector { get; public set; }
    [JsonPropertyNameAttribute("matchLabelKeys")]
public IList`1<string> MatchLabelKeys { get; public set; }
    [JsonPropertyNameAttribute("maxSkew")]
public int MaxSkew { get; public set; }
    [JsonPropertyNameAttribute("minDomains")]
public Nullable`1<int> MinDomains { get; public set; }
    [JsonPropertyNameAttribute("nodeAffinityPolicy")]
public string NodeAffinityPolicy { get; public set; }
    [JsonPropertyNameAttribute("nodeTaintsPolicy")]
public string NodeTaintsPolicy { get; public set; }
    [JsonPropertyNameAttribute("topologyKey")]
public string TopologyKey { get; public set; }
    [JsonPropertyNameAttribute("whenUnsatisfiable")]
public string WhenUnsatisfiable { get; public set; }
    public V1TopologySpreadConstraint(int maxSkew, string topologyKey, string whenUnsatisfiable, V1LabelSelector labelSelector, IList`1<string> matchLabelKeys, Nullable`1<int> minDomains, string nodeAffinityPolicy, string nodeTaintsPolicy);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_LabelSelector();
    [CompilerGeneratedAttribute]
public void set_LabelSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_MatchLabelKeys();
    [CompilerGeneratedAttribute]
public void set_MatchLabelKeys(IList`1<string> value);
    [CompilerGeneratedAttribute]
public int get_MaxSkew();
    [CompilerGeneratedAttribute]
public void set_MaxSkew(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinDomains();
    [CompilerGeneratedAttribute]
public void set_MinDomains(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_NodeAffinityPolicy();
    [CompilerGeneratedAttribute]
public void set_NodeAffinityPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_NodeTaintsPolicy();
    [CompilerGeneratedAttribute]
public void set_NodeTaintsPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_TopologyKey();
    [CompilerGeneratedAttribute]
public void set_TopologyKey(string value);
    [CompilerGeneratedAttribute]
public string get_WhenUnsatisfiable();
    [CompilerGeneratedAttribute]
public void set_WhenUnsatisfiable(string value);
    public virtual void Validate();
}
public class k8s.Models.V1TypeChecking : object {
    [CompilerGeneratedAttribute]
private IList`1<V1ExpressionWarning> <ExpressionWarnings>k__BackingField;
    [JsonPropertyNameAttribute("expressionWarnings")]
public IList`1<V1ExpressionWarning> ExpressionWarnings { get; public set; }
    public V1TypeChecking(IList`1<V1ExpressionWarning> expressionWarnings);
    [CompilerGeneratedAttribute]
public IList`1<V1ExpressionWarning> get_ExpressionWarnings();
    [CompilerGeneratedAttribute]
public void set_ExpressionWarnings(IList`1<V1ExpressionWarning> value);
    public virtual void Validate();
    public static V1TypeChecking op_Explicit(V1alpha1TypeChecking s);
    public static V1TypeChecking op_Explicit(V1beta1TypeChecking s);
}
public class k8s.Models.V1TypedLocalObjectReference : object {
    [CompilerGeneratedAttribute]
private string <ApiGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("apiGroup")]
public string ApiGroup { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1TypedLocalObjectReference(string kind, string name, string apiGroup);
    [CompilerGeneratedAttribute]
public string get_ApiGroup();
    [CompilerGeneratedAttribute]
public void set_ApiGroup(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1TypedObjectReference : object {
    [CompilerGeneratedAttribute]
private string <ApiGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceProperty>k__BackingField;
    [JsonPropertyNameAttribute("apiGroup")]
public string ApiGroup { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespace")]
public string NamespaceProperty { get; public set; }
    public V1TypedObjectReference(string kind, string name, string apiGroup, string namespaceProperty);
    [CompilerGeneratedAttribute]
public string get_ApiGroup();
    [CompilerGeneratedAttribute]
public void set_ApiGroup(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NamespaceProperty();
    [CompilerGeneratedAttribute]
public void set_NamespaceProperty(string value);
    public virtual void Validate();
}
public class k8s.Models.V1UncountedTerminatedPods : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Succeeded>k__BackingField;
    [JsonPropertyNameAttribute("failed")]
public IList`1<string> Failed { get; public set; }
    [JsonPropertyNameAttribute("succeeded")]
public IList`1<string> Succeeded { get; public set; }
    public V1UncountedTerminatedPods(IList`1<string> failed, IList`1<string> succeeded);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Failed();
    [CompilerGeneratedAttribute]
public void set_Failed(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Succeeded();
    [CompilerGeneratedAttribute]
public void set_Succeeded(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1UserInfo : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IList`1<string>> <Extra>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [JsonPropertyNameAttribute("extra")]
public IDictionary`2<string, IList`1<string>> Extra { get; public set; }
    [JsonPropertyNameAttribute("groups")]
public IList`1<string> Groups { get; public set; }
    [JsonPropertyNameAttribute("uid")]
public string Uid { get; public set; }
    [JsonPropertyNameAttribute("username")]
public string Username { get; public set; }
    public V1UserInfo(IDictionary`2<string, IList`1<string>> extra, IList`1<string> groups, string uid, string username);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IList`1<string>> get_Extra();
    [CompilerGeneratedAttribute]
public void set_Extra(IDictionary`2<string, IList`1<string>> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    public virtual void Validate();
}
public class k8s.Models.V1UserSubject : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1UserSubject(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1UserSubject op_Explicit(V1beta3UserSubject s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ValidatingAdmissionPolicy : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ValidatingAdmissionPolicySpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ValidatingAdmissionPolicyStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1ValidatingAdmissionPolicySpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1ValidatingAdmissionPolicyStatus Status { get; public set; }
    public V1ValidatingAdmissionPolicy(string apiVersion, string kind, V1ObjectMeta metadata, V1ValidatingAdmissionPolicySpec spec, V1ValidatingAdmissionPolicyStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ValidatingAdmissionPolicySpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1ValidatingAdmissionPolicySpec value);
    [CompilerGeneratedAttribute]
public V1ValidatingAdmissionPolicyStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1ValidatingAdmissionPolicyStatus value);
    public virtual void Validate();
    public static V1ValidatingAdmissionPolicy op_Explicit(V1alpha1ValidatingAdmissionPolicy s);
    public static V1ValidatingAdmissionPolicy op_Explicit(V1beta1ValidatingAdmissionPolicy s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ValidatingAdmissionPolicyBinding : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ValidatingAdmissionPolicyBindingSpec <Spec>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1ValidatingAdmissionPolicyBindingSpec Spec { get; public set; }
    public V1ValidatingAdmissionPolicyBinding(string apiVersion, string kind, V1ObjectMeta metadata, V1ValidatingAdmissionPolicyBindingSpec spec);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ValidatingAdmissionPolicyBindingSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1ValidatingAdmissionPolicyBindingSpec value);
    public virtual void Validate();
    public static V1ValidatingAdmissionPolicyBinding op_Explicit(V1alpha1ValidatingAdmissionPolicyBinding s);
    public static V1ValidatingAdmissionPolicyBinding op_Explicit(V1beta1ValidatingAdmissionPolicyBinding s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ValidatingAdmissionPolicyBindingList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ValidatingAdmissionPolicyBinding> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ValidatingAdmissionPolicyBinding> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ValidatingAdmissionPolicyBindingList(IList`1<V1ValidatingAdmissionPolicyBinding> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ValidatingAdmissionPolicyBinding> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ValidatingAdmissionPolicyBinding> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1ValidatingAdmissionPolicyBindingList op_Explicit(V1alpha1ValidatingAdmissionPolicyBindingList s);
    public static V1ValidatingAdmissionPolicyBindingList op_Explicit(V1beta1ValidatingAdmissionPolicyBindingList s);
}
public class k8s.Models.V1ValidatingAdmissionPolicyBindingSpec : object {
    [CompilerGeneratedAttribute]
private V1MatchResources <MatchResources>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ParamRef <ParamRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ValidationActions>k__BackingField;
    [JsonPropertyNameAttribute("matchResources")]
public V1MatchResources MatchResources { get; public set; }
    [JsonPropertyNameAttribute("paramRef")]
public V1ParamRef ParamRef { get; public set; }
    [JsonPropertyNameAttribute("policyName")]
public string PolicyName { get; public set; }
    [JsonPropertyNameAttribute("validationActions")]
public IList`1<string> ValidationActions { get; public set; }
    public V1ValidatingAdmissionPolicyBindingSpec(V1MatchResources matchResources, V1ParamRef paramRef, string policyName, IList`1<string> validationActions);
    [CompilerGeneratedAttribute]
public V1MatchResources get_MatchResources();
    [CompilerGeneratedAttribute]
public void set_MatchResources(V1MatchResources value);
    [CompilerGeneratedAttribute]
public V1ParamRef get_ParamRef();
    [CompilerGeneratedAttribute]
public void set_ParamRef(V1ParamRef value);
    [CompilerGeneratedAttribute]
public string get_PolicyName();
    [CompilerGeneratedAttribute]
public void set_PolicyName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ValidationActions();
    [CompilerGeneratedAttribute]
public void set_ValidationActions(IList`1<string> value);
    public virtual void Validate();
    public static V1ValidatingAdmissionPolicyBindingSpec op_Explicit(V1alpha1ValidatingAdmissionPolicyBindingSpec s);
    public static V1ValidatingAdmissionPolicyBindingSpec op_Explicit(V1beta1ValidatingAdmissionPolicyBindingSpec s);
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ValidatingAdmissionPolicyList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ValidatingAdmissionPolicy> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ValidatingAdmissionPolicy> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ValidatingAdmissionPolicyList(IList`1<V1ValidatingAdmissionPolicy> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ValidatingAdmissionPolicy> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ValidatingAdmissionPolicy> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V1ValidatingAdmissionPolicyList op_Explicit(V1alpha1ValidatingAdmissionPolicyList s);
    public static V1ValidatingAdmissionPolicyList op_Explicit(V1beta1ValidatingAdmissionPolicyList s);
}
public class k8s.Models.V1ValidatingAdmissionPolicySpec : object {
    [CompilerGeneratedAttribute]
private IList`1<V1AuditAnnotation> <AuditAnnotations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1MatchCondition> <MatchConditions>k__BackingField;
    [CompilerGeneratedAttribute]
private V1MatchResources <MatchConstraints>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ParamKind <ParamKind>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Validation> <Validations>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1Variable> <Variables>k__BackingField;
    [JsonPropertyNameAttribute("auditAnnotations")]
public IList`1<V1AuditAnnotation> AuditAnnotations { get; public set; }
    [JsonPropertyNameAttribute("failurePolicy")]
public string FailurePolicy { get; public set; }
    [JsonPropertyNameAttribute("matchConditions")]
public IList`1<V1MatchCondition> MatchConditions { get; public set; }
    [JsonPropertyNameAttribute("matchConstraints")]
public V1MatchResources MatchConstraints { get; public set; }
    [JsonPropertyNameAttribute("paramKind")]
public V1ParamKind ParamKind { get; public set; }
    [JsonPropertyNameAttribute("validations")]
public IList`1<V1Validation> Validations { get; public set; }
    [JsonPropertyNameAttribute("variables")]
public IList`1<V1Variable> Variables { get; public set; }
    public V1ValidatingAdmissionPolicySpec(IList`1<V1AuditAnnotation> auditAnnotations, string failurePolicy, IList`1<V1MatchCondition> matchConditions, V1MatchResources matchConstraints, V1ParamKind paramKind, IList`1<V1Validation> validations, IList`1<V1Variable> variables);
    [CompilerGeneratedAttribute]
public IList`1<V1AuditAnnotation> get_AuditAnnotations();
    [CompilerGeneratedAttribute]
public void set_AuditAnnotations(IList`1<V1AuditAnnotation> value);
    [CompilerGeneratedAttribute]
public string get_FailurePolicy();
    [CompilerGeneratedAttribute]
public void set_FailurePolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1MatchCondition> get_MatchConditions();
    [CompilerGeneratedAttribute]
public void set_MatchConditions(IList`1<V1MatchCondition> value);
    [CompilerGeneratedAttribute]
public V1MatchResources get_MatchConstraints();
    [CompilerGeneratedAttribute]
public void set_MatchConstraints(V1MatchResources value);
    [CompilerGeneratedAttribute]
public V1ParamKind get_ParamKind();
    [CompilerGeneratedAttribute]
public void set_ParamKind(V1ParamKind value);
    [CompilerGeneratedAttribute]
public IList`1<V1Validation> get_Validations();
    [CompilerGeneratedAttribute]
public void set_Validations(IList`1<V1Validation> value);
    [CompilerGeneratedAttribute]
public IList`1<V1Variable> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(IList`1<V1Variable> value);
    public virtual void Validate();
    public static V1ValidatingAdmissionPolicySpec op_Explicit(V1alpha1ValidatingAdmissionPolicySpec s);
    public static V1ValidatingAdmissionPolicySpec op_Explicit(V1beta1ValidatingAdmissionPolicySpec s);
}
public class k8s.Models.V1ValidatingAdmissionPolicyStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V1Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private V1TypeChecking <TypeChecking>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V1Condition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    [JsonPropertyNameAttribute("typeChecking")]
public V1TypeChecking TypeChecking { get; public set; }
    public V1ValidatingAdmissionPolicyStatus(IList`1<V1Condition> conditions, Nullable`1<long> observedGeneration, V1TypeChecking typeChecking);
    [CompilerGeneratedAttribute]
public IList`1<V1Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V1Condition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public V1TypeChecking get_TypeChecking();
    [CompilerGeneratedAttribute]
public void set_TypeChecking(V1TypeChecking value);
    public virtual void Validate();
    public static V1ValidatingAdmissionPolicyStatus op_Explicit(V1alpha1ValidatingAdmissionPolicyStatus s);
    public static V1ValidatingAdmissionPolicyStatus op_Explicit(V1beta1ValidatingAdmissionPolicyStatus s);
}
public class k8s.Models.V1ValidatingWebhook : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <AdmissionReviewVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private Admissionregistrationv1WebhookClientConfig <ClientConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1MatchCondition> <MatchConditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MatchPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <NamespaceSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <ObjectSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1RuleWithOperations> <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SideEffects>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TimeoutSeconds>k__BackingField;
    [JsonPropertyNameAttribute("admissionReviewVersions")]
public IList`1<string> AdmissionReviewVersions { get; public set; }
    [JsonPropertyNameAttribute("clientConfig")]
public Admissionregistrationv1WebhookClientConfig ClientConfig { get; public set; }
    [JsonPropertyNameAttribute("failurePolicy")]
public string FailurePolicy { get; public set; }
    [JsonPropertyNameAttribute("matchConditions")]
public IList`1<V1MatchCondition> MatchConditions { get; public set; }
    [JsonPropertyNameAttribute("matchPolicy")]
public string MatchPolicy { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("namespaceSelector")]
public V1LabelSelector NamespaceSelector { get; public set; }
    [JsonPropertyNameAttribute("objectSelector")]
public V1LabelSelector ObjectSelector { get; public set; }
    [JsonPropertyNameAttribute("rules")]
public IList`1<V1RuleWithOperations> Rules { get; public set; }
    [JsonPropertyNameAttribute("sideEffects")]
public string SideEffects { get; public set; }
    [JsonPropertyNameAttribute("timeoutSeconds")]
public Nullable`1<int> TimeoutSeconds { get; public set; }
    public V1ValidatingWebhook(IList`1<string> admissionReviewVersions, Admissionregistrationv1WebhookClientConfig clientConfig, string name, string sideEffects, string failurePolicy, IList`1<V1MatchCondition> matchConditions, string matchPolicy, V1LabelSelector namespaceSelector, V1LabelSelector objectSelector, IList`1<V1RuleWithOperations> rules, Nullable`1<int> timeoutSeconds);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AdmissionReviewVersions();
    [CompilerGeneratedAttribute]
public void set_AdmissionReviewVersions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Admissionregistrationv1WebhookClientConfig get_ClientConfig();
    [CompilerGeneratedAttribute]
public void set_ClientConfig(Admissionregistrationv1WebhookClientConfig value);
    [CompilerGeneratedAttribute]
public string get_FailurePolicy();
    [CompilerGeneratedAttribute]
public void set_FailurePolicy(string value);
    [CompilerGeneratedAttribute]
public IList`1<V1MatchCondition> get_MatchConditions();
    [CompilerGeneratedAttribute]
public void set_MatchConditions(IList`1<V1MatchCondition> value);
    [CompilerGeneratedAttribute]
public string get_MatchPolicy();
    [CompilerGeneratedAttribute]
public void set_MatchPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_NamespaceSelector();
    [CompilerGeneratedAttribute]
public void set_NamespaceSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_ObjectSelector();
    [CompilerGeneratedAttribute]
public void set_ObjectSelector(V1LabelSelector value);
    [CompilerGeneratedAttribute]
public IList`1<V1RuleWithOperations> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(IList`1<V1RuleWithOperations> value);
    [CompilerGeneratedAttribute]
public string get_SideEffects();
    [CompilerGeneratedAttribute]
public void set_SideEffects(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TimeoutSeconds();
    [CompilerGeneratedAttribute]
public void set_TimeoutSeconds(Nullable`1<int> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ValidatingWebhookConfiguration : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ValidatingWebhook> <Webhooks>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("webhooks")]
public IList`1<V1ValidatingWebhook> Webhooks { get; public set; }
    public V1ValidatingWebhookConfiguration(string apiVersion, string kind, V1ObjectMeta metadata, IList`1<V1ValidatingWebhook> webhooks);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public IList`1<V1ValidatingWebhook> get_Webhooks();
    [CompilerGeneratedAttribute]
public void set_Webhooks(IList`1<V1ValidatingWebhook> value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1ValidatingWebhookConfigurationList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1ValidatingWebhookConfiguration> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1ValidatingWebhookConfiguration> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1ValidatingWebhookConfigurationList(IList`1<V1ValidatingWebhookConfiguration> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1ValidatingWebhookConfiguration> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1ValidatingWebhookConfiguration> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1Validation : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("messageExpression")]
public string MessageExpression { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    public V1Validation(string expression, string message, string messageExpression, string reason);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_MessageExpression();
    [CompilerGeneratedAttribute]
public void set_MessageExpression(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual void Validate();
    public static V1Validation op_Explicit(V1alpha1Validation s);
    public static V1Validation op_Explicit(V1beta1Validation s);
}
public class k8s.Models.V1ValidationRule : object {
    [CompilerGeneratedAttribute]
private string <FieldPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OptionalOldSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Rule>k__BackingField;
    [JsonPropertyNameAttribute("fieldPath")]
public string FieldPath { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("messageExpression")]
public string MessageExpression { get; public set; }
    [JsonPropertyNameAttribute("optionalOldSelf")]
public Nullable`1<bool> OptionalOldSelf { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("rule")]
public string Rule { get; public set; }
    public V1ValidationRule(string rule, string fieldPath, string message, string messageExpression, Nullable`1<bool> optionalOldSelf, string reason);
    [CompilerGeneratedAttribute]
public string get_FieldPath();
    [CompilerGeneratedAttribute]
public void set_FieldPath(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_MessageExpression();
    [CompilerGeneratedAttribute]
public void set_MessageExpression(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_OptionalOldSelf();
    [CompilerGeneratedAttribute]
public void set_OptionalOldSelf(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Rule();
    [CompilerGeneratedAttribute]
public void set_Rule(string value);
    public virtual void Validate();
}
public class k8s.Models.V1Variable : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("expression")]
public string Expression { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1Variable(string expression, string name);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V1Variable op_Explicit(V1alpha1Variable s);
    public static V1Variable op_Explicit(V1beta1Variable s);
}
public class k8s.Models.V1Volume : object {
    [CompilerGeneratedAttribute]
private V1AWSElasticBlockStoreVolumeSource <AwsElasticBlockStore>k__BackingField;
    [CompilerGeneratedAttribute]
private V1AzureDiskVolumeSource <AzureDisk>k__BackingField;
    [CompilerGeneratedAttribute]
private V1AzureFileVolumeSource <AzureFile>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CephFSVolumeSource <Cephfs>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CinderVolumeSource <Cinder>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ConfigMapVolumeSource <ConfigMap>k__BackingField;
    [CompilerGeneratedAttribute]
private V1CSIVolumeSource <Csi>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DownwardAPIVolumeSource <DownwardAPI>k__BackingField;
    [CompilerGeneratedAttribute]
private V1EmptyDirVolumeSource <EmptyDir>k__BackingField;
    [CompilerGeneratedAttribute]
private V1EphemeralVolumeSource <Ephemeral>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FCVolumeSource <Fc>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FlexVolumeSource <FlexVolume>k__BackingField;
    [CompilerGeneratedAttribute]
private V1FlockerVolumeSource <Flocker>k__BackingField;
    [CompilerGeneratedAttribute]
private V1GCEPersistentDiskVolumeSource <GcePersistentDisk>k__BackingField;
    [CompilerGeneratedAttribute]
private V1GitRepoVolumeSource <GitRepo>k__BackingField;
    [CompilerGeneratedAttribute]
private V1GlusterfsVolumeSource <Glusterfs>k__BackingField;
    [CompilerGeneratedAttribute]
private V1HostPathVolumeSource <HostPath>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ImageVolumeSource <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ISCSIVolumeSource <Iscsi>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V1NFSVolumeSource <Nfs>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PersistentVolumeClaimVolumeSource <PersistentVolumeClaim>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PhotonPersistentDiskVolumeSource <PhotonPersistentDisk>k__BackingField;
    [CompilerGeneratedAttribute]
private V1PortworxVolumeSource <PortworxVolume>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ProjectedVolumeSource <Projected>k__BackingField;
    [CompilerGeneratedAttribute]
private V1QuobyteVolumeSource <Quobyte>k__BackingField;
    [CompilerGeneratedAttribute]
private V1RBDVolumeSource <Rbd>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ScaleIOVolumeSource <ScaleIO>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretVolumeSource <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private V1StorageOSVolumeSource <Storageos>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VsphereVirtualDiskVolumeSource <VsphereVolume>k__BackingField;
    [JsonPropertyNameAttribute("awsElasticBlockStore")]
public V1AWSElasticBlockStoreVolumeSource AwsElasticBlockStore { get; public set; }
    [JsonPropertyNameAttribute("azureDisk")]
public V1AzureDiskVolumeSource AzureDisk { get; public set; }
    [JsonPropertyNameAttribute("azureFile")]
public V1AzureFileVolumeSource AzureFile { get; public set; }
    [JsonPropertyNameAttribute("cephfs")]
public V1CephFSVolumeSource Cephfs { get; public set; }
    [JsonPropertyNameAttribute("cinder")]
public V1CinderVolumeSource Cinder { get; public set; }
    [JsonPropertyNameAttribute("configMap")]
public V1ConfigMapVolumeSource ConfigMap { get; public set; }
    [JsonPropertyNameAttribute("csi")]
public V1CSIVolumeSource Csi { get; public set; }
    [JsonPropertyNameAttribute("downwardAPI")]
public V1DownwardAPIVolumeSource DownwardAPI { get; public set; }
    [JsonPropertyNameAttribute("emptyDir")]
public V1EmptyDirVolumeSource EmptyDir { get; public set; }
    [JsonPropertyNameAttribute("ephemeral")]
public V1EphemeralVolumeSource Ephemeral { get; public set; }
    [JsonPropertyNameAttribute("fc")]
public V1FCVolumeSource Fc { get; public set; }
    [JsonPropertyNameAttribute("flexVolume")]
public V1FlexVolumeSource FlexVolume { get; public set; }
    [JsonPropertyNameAttribute("flocker")]
public V1FlockerVolumeSource Flocker { get; public set; }
    [JsonPropertyNameAttribute("gcePersistentDisk")]
public V1GCEPersistentDiskVolumeSource GcePersistentDisk { get; public set; }
    [JsonPropertyNameAttribute("gitRepo")]
public V1GitRepoVolumeSource GitRepo { get; public set; }
    [JsonPropertyNameAttribute("glusterfs")]
public V1GlusterfsVolumeSource Glusterfs { get; public set; }
    [JsonPropertyNameAttribute("hostPath")]
public V1HostPathVolumeSource HostPath { get; public set; }
    [JsonPropertyNameAttribute("image")]
public V1ImageVolumeSource Image { get; public set; }
    [JsonPropertyNameAttribute("iscsi")]
public V1ISCSIVolumeSource Iscsi { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("nfs")]
public V1NFSVolumeSource Nfs { get; public set; }
    [JsonPropertyNameAttribute("persistentVolumeClaim")]
public V1PersistentVolumeClaimVolumeSource PersistentVolumeClaim { get; public set; }
    [JsonPropertyNameAttribute("photonPersistentDisk")]
public V1PhotonPersistentDiskVolumeSource PhotonPersistentDisk { get; public set; }
    [JsonPropertyNameAttribute("portworxVolume")]
public V1PortworxVolumeSource PortworxVolume { get; public set; }
    [JsonPropertyNameAttribute("projected")]
public V1ProjectedVolumeSource Projected { get; public set; }
    [JsonPropertyNameAttribute("quobyte")]
public V1QuobyteVolumeSource Quobyte { get; public set; }
    [JsonPropertyNameAttribute("rbd")]
public V1RBDVolumeSource Rbd { get; public set; }
    [JsonPropertyNameAttribute("scaleIO")]
public V1ScaleIOVolumeSource ScaleIO { get; public set; }
    [JsonPropertyNameAttribute("secret")]
public V1SecretVolumeSource Secret { get; public set; }
    [JsonPropertyNameAttribute("storageos")]
public V1StorageOSVolumeSource Storageos { get; public set; }
    [JsonPropertyNameAttribute("vsphereVolume")]
public V1VsphereVirtualDiskVolumeSource VsphereVolume { get; public set; }
    public V1Volume(string name, V1AWSElasticBlockStoreVolumeSource awsElasticBlockStore, V1AzureDiskVolumeSource azureDisk, V1AzureFileVolumeSource azureFile, V1CephFSVolumeSource cephfs, V1CinderVolumeSource cinder, V1ConfigMapVolumeSource configMap, V1CSIVolumeSource csi, V1DownwardAPIVolumeSource downwardAPI, V1EmptyDirVolumeSource emptyDir, V1EphemeralVolumeSource ephemeral, V1FCVolumeSource fc, V1FlexVolumeSource flexVolume, V1FlockerVolumeSource flocker, V1GCEPersistentDiskVolumeSource gcePersistentDisk, V1GitRepoVolumeSource gitRepo, V1GlusterfsVolumeSource glusterfs, V1HostPathVolumeSource hostPath, V1ImageVolumeSource image, V1ISCSIVolumeSource iscsi, V1NFSVolumeSource nfs, V1PersistentVolumeClaimVolumeSource persistentVolumeClaim, V1PhotonPersistentDiskVolumeSource photonPersistentDisk, V1PortworxVolumeSource portworxVolume, V1ProjectedVolumeSource projected, V1QuobyteVolumeSource quobyte, V1RBDVolumeSource rbd, V1ScaleIOVolumeSource scaleIO, V1SecretVolumeSource secret, V1StorageOSVolumeSource storageos, V1VsphereVirtualDiskVolumeSource vsphereVolume);
    [CompilerGeneratedAttribute]
public V1AWSElasticBlockStoreVolumeSource get_AwsElasticBlockStore();
    [CompilerGeneratedAttribute]
public void set_AwsElasticBlockStore(V1AWSElasticBlockStoreVolumeSource value);
    [CompilerGeneratedAttribute]
public V1AzureDiskVolumeSource get_AzureDisk();
    [CompilerGeneratedAttribute]
public void set_AzureDisk(V1AzureDiskVolumeSource value);
    [CompilerGeneratedAttribute]
public V1AzureFileVolumeSource get_AzureFile();
    [CompilerGeneratedAttribute]
public void set_AzureFile(V1AzureFileVolumeSource value);
    [CompilerGeneratedAttribute]
public V1CephFSVolumeSource get_Cephfs();
    [CompilerGeneratedAttribute]
public void set_Cephfs(V1CephFSVolumeSource value);
    [CompilerGeneratedAttribute]
public V1CinderVolumeSource get_Cinder();
    [CompilerGeneratedAttribute]
public void set_Cinder(V1CinderVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ConfigMapVolumeSource get_ConfigMap();
    [CompilerGeneratedAttribute]
public void set_ConfigMap(V1ConfigMapVolumeSource value);
    [CompilerGeneratedAttribute]
public V1CSIVolumeSource get_Csi();
    [CompilerGeneratedAttribute]
public void set_Csi(V1CSIVolumeSource value);
    [CompilerGeneratedAttribute]
public V1DownwardAPIVolumeSource get_DownwardAPI();
    [CompilerGeneratedAttribute]
public void set_DownwardAPI(V1DownwardAPIVolumeSource value);
    [CompilerGeneratedAttribute]
public V1EmptyDirVolumeSource get_EmptyDir();
    [CompilerGeneratedAttribute]
public void set_EmptyDir(V1EmptyDirVolumeSource value);
    [CompilerGeneratedAttribute]
public V1EphemeralVolumeSource get_Ephemeral();
    [CompilerGeneratedAttribute]
public void set_Ephemeral(V1EphemeralVolumeSource value);
    [CompilerGeneratedAttribute]
public V1FCVolumeSource get_Fc();
    [CompilerGeneratedAttribute]
public void set_Fc(V1FCVolumeSource value);
    [CompilerGeneratedAttribute]
public V1FlexVolumeSource get_FlexVolume();
    [CompilerGeneratedAttribute]
public void set_FlexVolume(V1FlexVolumeSource value);
    [CompilerGeneratedAttribute]
public V1FlockerVolumeSource get_Flocker();
    [CompilerGeneratedAttribute]
public void set_Flocker(V1FlockerVolumeSource value);
    [CompilerGeneratedAttribute]
public V1GCEPersistentDiskVolumeSource get_GcePersistentDisk();
    [CompilerGeneratedAttribute]
public void set_GcePersistentDisk(V1GCEPersistentDiskVolumeSource value);
    [CompilerGeneratedAttribute]
public V1GitRepoVolumeSource get_GitRepo();
    [CompilerGeneratedAttribute]
public void set_GitRepo(V1GitRepoVolumeSource value);
    [CompilerGeneratedAttribute]
public V1GlusterfsVolumeSource get_Glusterfs();
    [CompilerGeneratedAttribute]
public void set_Glusterfs(V1GlusterfsVolumeSource value);
    [CompilerGeneratedAttribute]
public V1HostPathVolumeSource get_HostPath();
    [CompilerGeneratedAttribute]
public void set_HostPath(V1HostPathVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ImageVolumeSource get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(V1ImageVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ISCSIVolumeSource get_Iscsi();
    [CompilerGeneratedAttribute]
public void set_Iscsi(V1ISCSIVolumeSource value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V1NFSVolumeSource get_Nfs();
    [CompilerGeneratedAttribute]
public void set_Nfs(V1NFSVolumeSource value);
    [CompilerGeneratedAttribute]
public V1PersistentVolumeClaimVolumeSource get_PersistentVolumeClaim();
    [CompilerGeneratedAttribute]
public void set_PersistentVolumeClaim(V1PersistentVolumeClaimVolumeSource value);
    [CompilerGeneratedAttribute]
public V1PhotonPersistentDiskVolumeSource get_PhotonPersistentDisk();
    [CompilerGeneratedAttribute]
public void set_PhotonPersistentDisk(V1PhotonPersistentDiskVolumeSource value);
    [CompilerGeneratedAttribute]
public V1PortworxVolumeSource get_PortworxVolume();
    [CompilerGeneratedAttribute]
public void set_PortworxVolume(V1PortworxVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ProjectedVolumeSource get_Projected();
    [CompilerGeneratedAttribute]
public void set_Projected(V1ProjectedVolumeSource value);
    [CompilerGeneratedAttribute]
public V1QuobyteVolumeSource get_Quobyte();
    [CompilerGeneratedAttribute]
public void set_Quobyte(V1QuobyteVolumeSource value);
    [CompilerGeneratedAttribute]
public V1RBDVolumeSource get_Rbd();
    [CompilerGeneratedAttribute]
public void set_Rbd(V1RBDVolumeSource value);
    [CompilerGeneratedAttribute]
public V1ScaleIOVolumeSource get_ScaleIO();
    [CompilerGeneratedAttribute]
public void set_ScaleIO(V1ScaleIOVolumeSource value);
    [CompilerGeneratedAttribute]
public V1SecretVolumeSource get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(V1SecretVolumeSource value);
    [CompilerGeneratedAttribute]
public V1StorageOSVolumeSource get_Storageos();
    [CompilerGeneratedAttribute]
public void set_Storageos(V1StorageOSVolumeSource value);
    [CompilerGeneratedAttribute]
public V1VsphereVirtualDiskVolumeSource get_VsphereVolume();
    [CompilerGeneratedAttribute]
public void set_VsphereVolume(V1VsphereVirtualDiskVolumeSource value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1VolumeAttachment : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VolumeAttachmentSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VolumeAttachmentStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V1VolumeAttachmentSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V1VolumeAttachmentStatus Status { get; public set; }
    public V1VolumeAttachment(V1VolumeAttachmentSpec spec, string apiVersion, string kind, V1ObjectMeta metadata, V1VolumeAttachmentStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V1VolumeAttachmentSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V1VolumeAttachmentSpec value);
    [CompilerGeneratedAttribute]
public V1VolumeAttachmentStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V1VolumeAttachmentStatus value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V1VolumeAttachmentList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V1VolumeAttachment> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V1VolumeAttachment> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V1VolumeAttachmentList(IList`1<V1VolumeAttachment> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V1VolumeAttachment> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V1VolumeAttachment> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeAttachmentSource : object {
    [CompilerGeneratedAttribute]
private V1PersistentVolumeSpec <InlineVolumeSpec>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PersistentVolumeName>k__BackingField;
    [JsonPropertyNameAttribute("inlineVolumeSpec")]
public V1PersistentVolumeSpec InlineVolumeSpec { get; public set; }
    [JsonPropertyNameAttribute("persistentVolumeName")]
public string PersistentVolumeName { get; public set; }
    public V1VolumeAttachmentSource(V1PersistentVolumeSpec inlineVolumeSpec, string persistentVolumeName);
    [CompilerGeneratedAttribute]
public V1PersistentVolumeSpec get_InlineVolumeSpec();
    [CompilerGeneratedAttribute]
public void set_InlineVolumeSpec(V1PersistentVolumeSpec value);
    [CompilerGeneratedAttribute]
public string get_PersistentVolumeName();
    [CompilerGeneratedAttribute]
public void set_PersistentVolumeName(string value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeAttachmentSpec : object {
    [CompilerGeneratedAttribute]
private string <Attacher>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VolumeAttachmentSource <Source>k__BackingField;
    [JsonPropertyNameAttribute("attacher")]
public string Attacher { get; public set; }
    [JsonPropertyNameAttribute("nodeName")]
public string NodeName { get; public set; }
    [JsonPropertyNameAttribute("source")]
public V1VolumeAttachmentSource Source { get; public set; }
    public V1VolumeAttachmentSpec(string attacher, string nodeName, V1VolumeAttachmentSource source);
    [CompilerGeneratedAttribute]
public string get_Attacher();
    [CompilerGeneratedAttribute]
public void set_Attacher(string value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
public void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public V1VolumeAttachmentSource get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(V1VolumeAttachmentSource value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeAttachmentStatus : object {
    [CompilerGeneratedAttribute]
private V1VolumeError <AttachError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Attached>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <AttachmentMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V1VolumeError <DetachError>k__BackingField;
    [JsonPropertyNameAttribute("attachError")]
public V1VolumeError AttachError { get; public set; }
    [JsonPropertyNameAttribute("attached")]
public bool Attached { get; public set; }
    [JsonPropertyNameAttribute("attachmentMetadata")]
public IDictionary`2<string, string> AttachmentMetadata { get; public set; }
    [JsonPropertyNameAttribute("detachError")]
public V1VolumeError DetachError { get; public set; }
    public V1VolumeAttachmentStatus(bool attached, V1VolumeError attachError, IDictionary`2<string, string> attachmentMetadata, V1VolumeError detachError);
    [CompilerGeneratedAttribute]
public V1VolumeError get_AttachError();
    [CompilerGeneratedAttribute]
public void set_AttachError(V1VolumeError value);
    [CompilerGeneratedAttribute]
public bool get_Attached();
    [CompilerGeneratedAttribute]
public void set_Attached(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_AttachmentMetadata();
    [CompilerGeneratedAttribute]
public void set_AttachmentMetadata(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public V1VolumeError get_DetachError();
    [CompilerGeneratedAttribute]
public void set_DetachError(V1VolumeError value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeDevice : object {
    [CompilerGeneratedAttribute]
private string <DevicePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("devicePath")]
public string DevicePath { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V1VolumeDevice(string devicePath, string name);
    [CompilerGeneratedAttribute]
public string get_DevicePath();
    [CompilerGeneratedAttribute]
public void set_DevicePath(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeError : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Time>k__BackingField;
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("time")]
public Nullable`1<DateTime> Time { get; public set; }
    public V1VolumeError(string message, Nullable`1<DateTime> time);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeMount : object {
    [CompilerGeneratedAttribute]
private string <MountPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MountPropagation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RecursiveReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubPathExpr>k__BackingField;
    [JsonPropertyNameAttribute("mountPath")]
public string MountPath { get; public set; }
    [JsonPropertyNameAttribute("mountPropagation")]
public string MountPropagation { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("recursiveReadOnly")]
public string RecursiveReadOnly { get; public set; }
    [JsonPropertyNameAttribute("subPath")]
public string SubPath { get; public set; }
    [JsonPropertyNameAttribute("subPathExpr")]
public string SubPathExpr { get; public set; }
    public V1VolumeMount(string mountPath, string name, string mountPropagation, Nullable`1<bool> readOnlyProperty, string recursiveReadOnly, string subPath, string subPathExpr);
    [CompilerGeneratedAttribute]
public string get_MountPath();
    [CompilerGeneratedAttribute]
public void set_MountPath(string value);
    [CompilerGeneratedAttribute]
public string get_MountPropagation();
    [CompilerGeneratedAttribute]
public void set_MountPropagation(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_RecursiveReadOnly();
    [CompilerGeneratedAttribute]
public void set_RecursiveReadOnly(string value);
    [CompilerGeneratedAttribute]
public string get_SubPath();
    [CompilerGeneratedAttribute]
public void set_SubPath(string value);
    [CompilerGeneratedAttribute]
public string get_SubPathExpr();
    [CompilerGeneratedAttribute]
public void set_SubPathExpr(string value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeMountStatus : object {
    [CompilerGeneratedAttribute]
private string <MountPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnlyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RecursiveReadOnly>k__BackingField;
    [JsonPropertyNameAttribute("mountPath")]
public string MountPath { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("readOnly")]
public Nullable`1<bool> ReadOnlyProperty { get; public set; }
    [JsonPropertyNameAttribute("recursiveReadOnly")]
public string RecursiveReadOnly { get; public set; }
    public V1VolumeMountStatus(string mountPath, string name, Nullable`1<bool> readOnlyProperty, string recursiveReadOnly);
    [CompilerGeneratedAttribute]
public string get_MountPath();
    [CompilerGeneratedAttribute]
public void set_MountPath(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnlyProperty();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyProperty(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_RecursiveReadOnly();
    [CompilerGeneratedAttribute]
public void set_RecursiveReadOnly(string value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeNodeAffinity : object {
    [CompilerGeneratedAttribute]
private V1NodeSelector <Required>k__BackingField;
    [JsonPropertyNameAttribute("required")]
public V1NodeSelector Required { get; public set; }
    public V1VolumeNodeAffinity(V1NodeSelector required);
    [CompilerGeneratedAttribute]
public V1NodeSelector get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(V1NodeSelector value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeNodeResources : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Count>k__BackingField;
    [JsonPropertyNameAttribute("count")]
public Nullable`1<int> Count { get; public set; }
    public V1VolumeNodeResources(Nullable`1<int> count);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeProjection : object {
    [CompilerGeneratedAttribute]
private V1ClusterTrustBundleProjection <ClusterTrustBundle>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ConfigMapProjection <ConfigMap>k__BackingField;
    [CompilerGeneratedAttribute]
private V1DownwardAPIProjection <DownwardAPI>k__BackingField;
    [CompilerGeneratedAttribute]
private V1SecretProjection <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ServiceAccountTokenProjection <ServiceAccountToken>k__BackingField;
    [JsonPropertyNameAttribute("clusterTrustBundle")]
public V1ClusterTrustBundleProjection ClusterTrustBundle { get; public set; }
    [JsonPropertyNameAttribute("configMap")]
public V1ConfigMapProjection ConfigMap { get; public set; }
    [JsonPropertyNameAttribute("downwardAPI")]
public V1DownwardAPIProjection DownwardAPI { get; public set; }
    [JsonPropertyNameAttribute("secret")]
public V1SecretProjection Secret { get; public set; }
    [JsonPropertyNameAttribute("serviceAccountToken")]
public V1ServiceAccountTokenProjection ServiceAccountToken { get; public set; }
    public V1VolumeProjection(V1ClusterTrustBundleProjection clusterTrustBundle, V1ConfigMapProjection configMap, V1DownwardAPIProjection downwardAPI, V1SecretProjection secret, V1ServiceAccountTokenProjection serviceAccountToken);
    [CompilerGeneratedAttribute]
public V1ClusterTrustBundleProjection get_ClusterTrustBundle();
    [CompilerGeneratedAttribute]
public void set_ClusterTrustBundle(V1ClusterTrustBundleProjection value);
    [CompilerGeneratedAttribute]
public V1ConfigMapProjection get_ConfigMap();
    [CompilerGeneratedAttribute]
public void set_ConfigMap(V1ConfigMapProjection value);
    [CompilerGeneratedAttribute]
public V1DownwardAPIProjection get_DownwardAPI();
    [CompilerGeneratedAttribute]
public void set_DownwardAPI(V1DownwardAPIProjection value);
    [CompilerGeneratedAttribute]
public V1SecretProjection get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(V1SecretProjection value);
    [CompilerGeneratedAttribute]
public V1ServiceAccountTokenProjection get_ServiceAccountToken();
    [CompilerGeneratedAttribute]
public void set_ServiceAccountToken(V1ServiceAccountTokenProjection value);
    public virtual void Validate();
}
public class k8s.Models.V1VolumeResourceRequirements : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Limits>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ResourceQuantity> <Requests>k__BackingField;
    [JsonPropertyNameAttribute("limits")]
public IDictionary`2<string, ResourceQuantity> Limits { get; public set; }
    [JsonPropertyNameAttribute("requests")]
public IDictionary`2<string, ResourceQuantity> Requests { get; public set; }
    public V1VolumeResourceRequirements(IDictionary`2<string, ResourceQuantity> limits, IDictionary`2<string, ResourceQuantity> requests);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(IDictionary`2<string, ResourceQuantity> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ResourceQuantity> get_Requests();
    [CompilerGeneratedAttribute]
public void set_Requests(IDictionary`2<string, ResourceQuantity> value);
    public virtual void Validate();
}
public class k8s.Models.V1VsphereVirtualDiskVolumeSource : object {
    [CompilerGeneratedAttribute]
private string <FsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StoragePolicyID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StoragePolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VolumePath>k__BackingField;
    [JsonPropertyNameAttribute("fsType")]
public string FsType { get; public set; }
    [JsonPropertyNameAttribute("storagePolicyID")]
public string StoragePolicyID { get; public set; }
    [JsonPropertyNameAttribute("storagePolicyName")]
public string StoragePolicyName { get; public set; }
    [JsonPropertyNameAttribute("volumePath")]
public string VolumePath { get; public set; }
    public V1VsphereVirtualDiskVolumeSource(string volumePath, string fsType, string storagePolicyID, string storagePolicyName);
    [CompilerGeneratedAttribute]
public string get_FsType();
    [CompilerGeneratedAttribute]
public void set_FsType(string value);
    [CompilerGeneratedAttribute]
public string get_StoragePolicyID();
    [CompilerGeneratedAttribute]
public void set_StoragePolicyID(string value);
    [CompilerGeneratedAttribute]
public string get_StoragePolicyName();
    [CompilerGeneratedAttribute]
public void set_StoragePolicyName(string value);
    [CompilerGeneratedAttribute]
public string get_VolumePath();
    [CompilerGeneratedAttribute]
public void set_VolumePath(string value);
    public virtual void Validate();
}
public class k8s.Models.V1WatchEvent : object {
    [CompilerGeneratedAttribute]
private object <ObjectProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("object")]
public object ObjectProperty { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V1WatchEvent(object objectProperty, string type);
    [CompilerGeneratedAttribute]
public object get_ObjectProperty();
    [CompilerGeneratedAttribute]
public void set_ObjectProperty(object value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V1WebhookConversion : object {
    [CompilerGeneratedAttribute]
private Apiextensionsv1WebhookClientConfig <ClientConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ConversionReviewVersions>k__BackingField;
    [JsonPropertyNameAttribute("clientConfig")]
public Apiextensionsv1WebhookClientConfig ClientConfig { get; public set; }
    [JsonPropertyNameAttribute("conversionReviewVersions")]
public IList`1<string> ConversionReviewVersions { get; public set; }
    public V1WebhookConversion(IList`1<string> conversionReviewVersions, Apiextensionsv1WebhookClientConfig clientConfig);
    [CompilerGeneratedAttribute]
public Apiextensionsv1WebhookClientConfig get_ClientConfig();
    [CompilerGeneratedAttribute]
public void set_ClientConfig(Apiextensionsv1WebhookClientConfig value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ConversionReviewVersions();
    [CompilerGeneratedAttribute]
public void set_ConversionReviewVersions(IList`1<string> value);
    public virtual void Validate();
}
public class k8s.Models.V1WeightedPodAffinityTerm : object {
    [CompilerGeneratedAttribute]
private V1PodAffinityTerm <PodAffinityTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Weight>k__BackingField;
    [JsonPropertyNameAttribute("podAffinityTerm")]
public V1PodAffinityTerm PodAffinityTerm { get; public set; }
    [JsonPropertyNameAttribute("weight")]
public int Weight { get; public set; }
    public V1WeightedPodAffinityTerm(V1PodAffinityTerm podAffinityTerm, int weight);
    [CompilerGeneratedAttribute]
public V1PodAffinityTerm get_PodAffinityTerm();
    [CompilerGeneratedAttribute]
public void set_PodAffinityTerm(V1PodAffinityTerm value);
    [CompilerGeneratedAttribute]
public int get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(int value);
    public virtual void Validate();
}
public class k8s.Models.V1WindowsSecurityContextOptions : object {
    [CompilerGeneratedAttribute]
private string <GmsaCredentialSpec>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GmsaCredentialSpecName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HostProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunAsUserName>k__BackingField;
    [JsonPropertyNameAttribute("gmsaCredentialSpec")]
public string GmsaCredentialSpec { get; public set; }
    [JsonPropertyNameAttribute("gmsaCredentialSpecName")]
public string GmsaCredentialSpecName { get; public set; }
    [JsonPropertyNameAttribute("hostProcess")]
public Nullable`1<bool> HostProcess { get; public set; }
    [JsonPropertyNameAttribute("runAsUserName")]
public string RunAsUserName { get; public set; }
    public V1WindowsSecurityContextOptions(string gmsaCredentialSpec, string gmsaCredentialSpecName, Nullable`1<bool> hostProcess, string runAsUserName);
    [CompilerGeneratedAttribute]
public string get_GmsaCredentialSpec();
    [CompilerGeneratedAttribute]
public void set_GmsaCredentialSpec(string value);
    [CompilerGeneratedAttribute]
public string get_GmsaCredentialSpecName();
    [CompilerGeneratedAttribute]
public void set_GmsaCredentialSpecName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HostProcess();
    [CompilerGeneratedAttribute]
public void set_HostProcess(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_RunAsUserName();
    [CompilerGeneratedAttribute]
public void set_RunAsUserName(string value);
    public virtual void Validate();
}
public class k8s.Models.V2ContainerResourceMetricSource : object {
    [CompilerGeneratedAttribute]
private string <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricTarget <Target>k__BackingField;
    [JsonPropertyNameAttribute("container")]
public string Container { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("target")]
public V2MetricTarget Target { get; public set; }
    public V2ContainerResourceMetricSource(string container, string name, V2MetricTarget target);
    [CompilerGeneratedAttribute]
public string get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V2MetricTarget get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(V2MetricTarget value);
    public virtual void Validate();
}
public class k8s.Models.V2ContainerResourceMetricStatus : object {
    [CompilerGeneratedAttribute]
private string <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricValueStatus <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("container")]
public string Container { get; public set; }
    [JsonPropertyNameAttribute("current")]
public V2MetricValueStatus Current { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V2ContainerResourceMetricStatus(string container, V2MetricValueStatus current, string name);
    [CompilerGeneratedAttribute]
public string get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(string value);
    [CompilerGeneratedAttribute]
public V2MetricValueStatus get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(V2MetricValueStatus value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.V2CrossVersionObjectReference : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V2CrossVersionObjectReference(string kind, string name, string apiVersion);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
    public static V2CrossVersionObjectReference op_Explicit(V1CrossVersionObjectReference s);
}
public class k8s.Models.V2ExternalMetricSource : object {
    [CompilerGeneratedAttribute]
private V2MetricIdentifier <Metric>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricTarget <Target>k__BackingField;
    [JsonPropertyNameAttribute("metric")]
public V2MetricIdentifier Metric { get; public set; }
    [JsonPropertyNameAttribute("target")]
public V2MetricTarget Target { get; public set; }
    public V2ExternalMetricSource(V2MetricIdentifier metric, V2MetricTarget target);
    [CompilerGeneratedAttribute]
public V2MetricIdentifier get_Metric();
    [CompilerGeneratedAttribute]
public void set_Metric(V2MetricIdentifier value);
    [CompilerGeneratedAttribute]
public V2MetricTarget get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(V2MetricTarget value);
    public virtual void Validate();
}
public class k8s.Models.V2ExternalMetricStatus : object {
    [CompilerGeneratedAttribute]
private V2MetricValueStatus <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricIdentifier <Metric>k__BackingField;
    [JsonPropertyNameAttribute("current")]
public V2MetricValueStatus Current { get; public set; }
    [JsonPropertyNameAttribute("metric")]
public V2MetricIdentifier Metric { get; public set; }
    public V2ExternalMetricStatus(V2MetricValueStatus current, V2MetricIdentifier metric);
    [CompilerGeneratedAttribute]
public V2MetricValueStatus get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(V2MetricValueStatus value);
    [CompilerGeneratedAttribute]
public V2MetricIdentifier get_Metric();
    [CompilerGeneratedAttribute]
public void set_Metric(V2MetricIdentifier value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V2HorizontalPodAutoscaler : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ObjectMeta <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private V2HorizontalPodAutoscalerSpec <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private V2HorizontalPodAutoscalerStatus <Status>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ObjectMeta Metadata { get; public set; }
    [JsonPropertyNameAttribute("spec")]
public V2HorizontalPodAutoscalerSpec Spec { get; public set; }
    [JsonPropertyNameAttribute("status")]
public V2HorizontalPodAutoscalerStatus Status { get; public set; }
    public V2HorizontalPodAutoscaler(string apiVersion, string kind, V1ObjectMeta metadata, V2HorizontalPodAutoscalerSpec spec, V2HorizontalPodAutoscalerStatus status);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ObjectMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ObjectMeta value);
    [CompilerGeneratedAttribute]
public sealed virtual V2HorizontalPodAutoscalerSpec get_Spec();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Spec(V2HorizontalPodAutoscalerSpec value);
    [CompilerGeneratedAttribute]
public V2HorizontalPodAutoscalerStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(V2HorizontalPodAutoscalerStatus value);
    public virtual void Validate();
    public static V2HorizontalPodAutoscaler op_Explicit(V1HorizontalPodAutoscaler s);
}
public class k8s.Models.V2HorizontalPodAutoscalerBehavior : object {
    [CompilerGeneratedAttribute]
private V2HPAScalingRules <ScaleDown>k__BackingField;
    [CompilerGeneratedAttribute]
private V2HPAScalingRules <ScaleUp>k__BackingField;
    [JsonPropertyNameAttribute("scaleDown")]
public V2HPAScalingRules ScaleDown { get; public set; }
    [JsonPropertyNameAttribute("scaleUp")]
public V2HPAScalingRules ScaleUp { get; public set; }
    public V2HorizontalPodAutoscalerBehavior(V2HPAScalingRules scaleDown, V2HPAScalingRules scaleUp);
    [CompilerGeneratedAttribute]
public V2HPAScalingRules get_ScaleDown();
    [CompilerGeneratedAttribute]
public void set_ScaleDown(V2HPAScalingRules value);
    [CompilerGeneratedAttribute]
public V2HPAScalingRules get_ScaleUp();
    [CompilerGeneratedAttribute]
public void set_ScaleUp(V2HPAScalingRules value);
    public virtual void Validate();
}
public class k8s.Models.V2HorizontalPodAutoscalerCondition : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("lastTransitionTime")]
public Nullable`1<DateTime> LastTransitionTime { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V2HorizontalPodAutoscalerCondition(string status, string type, Nullable`1<DateTime> lastTransitionTime, string message, string reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastTransitionTime();
    [CompilerGeneratedAttribute]
public void set_LastTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
[KubernetesEntityAttribute]
public class k8s.Models.V2HorizontalPodAutoscalerList : object {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V2HorizontalPodAutoscaler> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private V1ListMeta <Metadata>k__BackingField;
    public static string KubeApiVersion;
    public static string KubeKind;
    public static string KubeGroup;
    public static string KubePluralName;
    [JsonPropertyNameAttribute("apiVersion")]
public string ApiVersion { get; public set; }
    [JsonPropertyNameAttribute("items")]
public IList`1<V2HorizontalPodAutoscaler> Items { get; public set; }
    [JsonPropertyNameAttribute("kind")]
public string Kind { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public V1ListMeta Metadata { get; public set; }
    public V2HorizontalPodAutoscalerList(IList`1<V2HorizontalPodAutoscaler> items, string apiVersion, string kind, V1ListMeta metadata);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<V2HorizontalPodAutoscaler> get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(IList`1<V2HorizontalPodAutoscaler> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public sealed virtual V1ListMeta get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(V1ListMeta value);
    public virtual void Validate();
    public static V2HorizontalPodAutoscalerList op_Explicit(V1HorizontalPodAutoscalerList s);
}
public class k8s.Models.V2HorizontalPodAutoscalerSpec : object {
    [CompilerGeneratedAttribute]
private V2HorizontalPodAutoscalerBehavior <Behavior>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V2MetricSpec> <Metrics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private V2CrossVersionObjectReference <ScaleTargetRef>k__BackingField;
    [JsonPropertyNameAttribute("behavior")]
public V2HorizontalPodAutoscalerBehavior Behavior { get; public set; }
    [JsonPropertyNameAttribute("maxReplicas")]
public int MaxReplicas { get; public set; }
    [JsonPropertyNameAttribute("metrics")]
public IList`1<V2MetricSpec> Metrics { get; public set; }
    [JsonPropertyNameAttribute("minReplicas")]
public Nullable`1<int> MinReplicas { get; public set; }
    [JsonPropertyNameAttribute("scaleTargetRef")]
public V2CrossVersionObjectReference ScaleTargetRef { get; public set; }
    public V2HorizontalPodAutoscalerSpec(int maxReplicas, V2CrossVersionObjectReference scaleTargetRef, V2HorizontalPodAutoscalerBehavior behavior, IList`1<V2MetricSpec> metrics, Nullable`1<int> minReplicas);
    [CompilerGeneratedAttribute]
public V2HorizontalPodAutoscalerBehavior get_Behavior();
    [CompilerGeneratedAttribute]
public void set_Behavior(V2HorizontalPodAutoscalerBehavior value);
    [CompilerGeneratedAttribute]
public int get_MaxReplicas();
    [CompilerGeneratedAttribute]
public void set_MaxReplicas(int value);
    [CompilerGeneratedAttribute]
public IList`1<V2MetricSpec> get_Metrics();
    [CompilerGeneratedAttribute]
public void set_Metrics(IList`1<V2MetricSpec> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinReplicas();
    [CompilerGeneratedAttribute]
public void set_MinReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public V2CrossVersionObjectReference get_ScaleTargetRef();
    [CompilerGeneratedAttribute]
public void set_ScaleTargetRef(V2CrossVersionObjectReference value);
    public virtual void Validate();
    public static V2HorizontalPodAutoscalerSpec op_Explicit(V1HorizontalPodAutoscalerSpec s);
}
public class k8s.Models.V2HorizontalPodAutoscalerStatus : object {
    [CompilerGeneratedAttribute]
private IList`1<V2HorizontalPodAutoscalerCondition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<V2MetricStatus> <CurrentMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CurrentReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DesiredReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastScaleTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ObservedGeneration>k__BackingField;
    [JsonPropertyNameAttribute("conditions")]
public IList`1<V2HorizontalPodAutoscalerCondition> Conditions { get; public set; }
    [JsonPropertyNameAttribute("currentMetrics")]
public IList`1<V2MetricStatus> CurrentMetrics { get; public set; }
    [JsonPropertyNameAttribute("currentReplicas")]
public Nullable`1<int> CurrentReplicas { get; public set; }
    [JsonPropertyNameAttribute("desiredReplicas")]
public int DesiredReplicas { get; public set; }
    [JsonPropertyNameAttribute("lastScaleTime")]
public Nullable`1<DateTime> LastScaleTime { get; public set; }
    [JsonPropertyNameAttribute("observedGeneration")]
public Nullable`1<long> ObservedGeneration { get; public set; }
    public V2HorizontalPodAutoscalerStatus(int desiredReplicas, IList`1<V2HorizontalPodAutoscalerCondition> conditions, IList`1<V2MetricStatus> currentMetrics, Nullable`1<int> currentReplicas, Nullable`1<DateTime> lastScaleTime, Nullable`1<long> observedGeneration);
    [CompilerGeneratedAttribute]
public IList`1<V2HorizontalPodAutoscalerCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<V2HorizontalPodAutoscalerCondition> value);
    [CompilerGeneratedAttribute]
public IList`1<V2MetricStatus> get_CurrentMetrics();
    [CompilerGeneratedAttribute]
public void set_CurrentMetrics(IList`1<V2MetricStatus> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CurrentReplicas();
    [CompilerGeneratedAttribute]
public void set_CurrentReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_DesiredReplicas();
    [CompilerGeneratedAttribute]
public void set_DesiredReplicas(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastScaleTime();
    [CompilerGeneratedAttribute]
public void set_LastScaleTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ObservedGeneration();
    [CompilerGeneratedAttribute]
public void set_ObservedGeneration(Nullable`1<long> value);
    public virtual void Validate();
    public static V2HorizontalPodAutoscalerStatus op_Explicit(V1HorizontalPodAutoscalerStatus s);
}
public class k8s.Models.V2HPAScalingPolicy : object {
    [CompilerGeneratedAttribute]
private int <PeriodSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Value>k__BackingField;
    [JsonPropertyNameAttribute("periodSeconds")]
public int PeriodSeconds { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyNameAttribute("value")]
public int Value { get; public set; }
    public V2HPAScalingPolicy(int periodSeconds, string type, int value);
    [CompilerGeneratedAttribute]
public int get_PeriodSeconds();
    [CompilerGeneratedAttribute]
public void set_PeriodSeconds(int value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public int get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(int value);
    public virtual void Validate();
}
public class k8s.Models.V2HPAScalingRules : object {
    [CompilerGeneratedAttribute]
private IList`1<V2HPAScalingPolicy> <Policies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SelectPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StabilizationWindowSeconds>k__BackingField;
    [JsonPropertyNameAttribute("policies")]
public IList`1<V2HPAScalingPolicy> Policies { get; public set; }
    [JsonPropertyNameAttribute("selectPolicy")]
public string SelectPolicy { get; public set; }
    [JsonPropertyNameAttribute("stabilizationWindowSeconds")]
public Nullable`1<int> StabilizationWindowSeconds { get; public set; }
    public V2HPAScalingRules(IList`1<V2HPAScalingPolicy> policies, string selectPolicy, Nullable`1<int> stabilizationWindowSeconds);
    [CompilerGeneratedAttribute]
public IList`1<V2HPAScalingPolicy> get_Policies();
    [CompilerGeneratedAttribute]
public void set_Policies(IList`1<V2HPAScalingPolicy> value);
    [CompilerGeneratedAttribute]
public string get_SelectPolicy();
    [CompilerGeneratedAttribute]
public void set_SelectPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_StabilizationWindowSeconds();
    [CompilerGeneratedAttribute]
public void set_StabilizationWindowSeconds(Nullable`1<int> value);
    public virtual void Validate();
}
public class k8s.Models.V2MetricIdentifier : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V1LabelSelector <Selector>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("selector")]
public V1LabelSelector Selector { get; public set; }
    public V2MetricIdentifier(string name, V1LabelSelector selector);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V1LabelSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(V1LabelSelector value);
    public virtual void Validate();
}
public class k8s.Models.V2MetricSpec : object {
    [CompilerGeneratedAttribute]
private V2ContainerResourceMetricSource <ContainerResource>k__BackingField;
    [CompilerGeneratedAttribute]
private V2ExternalMetricSource <External>k__BackingField;
    [CompilerGeneratedAttribute]
private V2ObjectMetricSource <ObjectProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V2PodsMetricSource <Pods>k__BackingField;
    [CompilerGeneratedAttribute]
private V2ResourceMetricSource <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("containerResource")]
public V2ContainerResourceMetricSource ContainerResource { get; public set; }
    [JsonPropertyNameAttribute("external")]
public V2ExternalMetricSource External { get; public set; }
    [JsonPropertyNameAttribute("object")]
public V2ObjectMetricSource ObjectProperty { get; public set; }
    [JsonPropertyNameAttribute("pods")]
public V2PodsMetricSource Pods { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public V2ResourceMetricSource Resource { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V2MetricSpec(string type, V2ContainerResourceMetricSource containerResource, V2ExternalMetricSource external, V2ObjectMetricSource objectProperty, V2PodsMetricSource pods, V2ResourceMetricSource resource);
    [CompilerGeneratedAttribute]
public V2ContainerResourceMetricSource get_ContainerResource();
    [CompilerGeneratedAttribute]
public void set_ContainerResource(V2ContainerResourceMetricSource value);
    [CompilerGeneratedAttribute]
public V2ExternalMetricSource get_External();
    [CompilerGeneratedAttribute]
public void set_External(V2ExternalMetricSource value);
    [CompilerGeneratedAttribute]
public V2ObjectMetricSource get_ObjectProperty();
    [CompilerGeneratedAttribute]
public void set_ObjectProperty(V2ObjectMetricSource value);
    [CompilerGeneratedAttribute]
public V2PodsMetricSource get_Pods();
    [CompilerGeneratedAttribute]
public void set_Pods(V2PodsMetricSource value);
    [CompilerGeneratedAttribute]
public V2ResourceMetricSource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(V2ResourceMetricSource value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V2MetricStatus : object {
    [CompilerGeneratedAttribute]
private V2ContainerResourceMetricStatus <ContainerResource>k__BackingField;
    [CompilerGeneratedAttribute]
private V2ExternalMetricStatus <External>k__BackingField;
    [CompilerGeneratedAttribute]
private V2ObjectMetricStatus <ObjectProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private V2PodsMetricStatus <Pods>k__BackingField;
    [CompilerGeneratedAttribute]
private V2ResourceMetricStatus <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyNameAttribute("containerResource")]
public V2ContainerResourceMetricStatus ContainerResource { get; public set; }
    [JsonPropertyNameAttribute("external")]
public V2ExternalMetricStatus External { get; public set; }
    [JsonPropertyNameAttribute("object")]
public V2ObjectMetricStatus ObjectProperty { get; public set; }
    [JsonPropertyNameAttribute("pods")]
public V2PodsMetricStatus Pods { get; public set; }
    [JsonPropertyNameAttribute("resource")]
public V2ResourceMetricStatus Resource { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    public V2MetricStatus(string type, V2ContainerResourceMetricStatus containerResource, V2ExternalMetricStatus external, V2ObjectMetricStatus objectProperty, V2PodsMetricStatus pods, V2ResourceMetricStatus resource);
    [CompilerGeneratedAttribute]
public V2ContainerResourceMetricStatus get_ContainerResource();
    [CompilerGeneratedAttribute]
public void set_ContainerResource(V2ContainerResourceMetricStatus value);
    [CompilerGeneratedAttribute]
public V2ExternalMetricStatus get_External();
    [CompilerGeneratedAttribute]
public void set_External(V2ExternalMetricStatus value);
    [CompilerGeneratedAttribute]
public V2ObjectMetricStatus get_ObjectProperty();
    [CompilerGeneratedAttribute]
public void set_ObjectProperty(V2ObjectMetricStatus value);
    [CompilerGeneratedAttribute]
public V2PodsMetricStatus get_Pods();
    [CompilerGeneratedAttribute]
public void set_Pods(V2PodsMetricStatus value);
    [CompilerGeneratedAttribute]
public V2ResourceMetricStatus get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(V2ResourceMetricStatus value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class k8s.Models.V2MetricTarget : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AverageUtilization>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <AverageValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <Value>k__BackingField;
    [JsonPropertyNameAttribute("averageUtilization")]
public Nullable`1<int> AverageUtilization { get; public set; }
    [JsonPropertyNameAttribute("averageValue")]
public ResourceQuantity AverageValue { get; public set; }
    [JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyNameAttribute("value")]
public ResourceQuantity Value { get; public set; }
    public V2MetricTarget(string type, Nullable`1<int> averageUtilization, ResourceQuantity averageValue, ResourceQuantity value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AverageUtilization();
    [CompilerGeneratedAttribute]
public void set_AverageUtilization(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_AverageValue();
    [CompilerGeneratedAttribute]
public void set_AverageValue(ResourceQuantity value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(ResourceQuantity value);
    public virtual void Validate();
}
public class k8s.Models.V2MetricValueStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AverageUtilization>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <AverageValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceQuantity <Value>k__BackingField;
    [JsonPropertyNameAttribute("averageUtilization")]
public Nullable`1<int> AverageUtilization { get; public set; }
    [JsonPropertyNameAttribute("averageValue")]
public ResourceQuantity AverageValue { get; public set; }
    [JsonPropertyNameAttribute("value")]
public ResourceQuantity Value { get; public set; }
    public V2MetricValueStatus(Nullable`1<int> averageUtilization, ResourceQuantity averageValue, ResourceQuantity value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AverageUtilization();
    [CompilerGeneratedAttribute]
public void set_AverageUtilization(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_AverageValue();
    [CompilerGeneratedAttribute]
public void set_AverageValue(ResourceQuantity value);
    [CompilerGeneratedAttribute]
public ResourceQuantity get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(ResourceQuantity value);
    public virtual void Validate();
}
public class k8s.Models.V2ObjectMetricSource : object {
    [CompilerGeneratedAttribute]
private V2CrossVersionObjectReference <DescribedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricIdentifier <Metric>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricTarget <Target>k__BackingField;
    [JsonPropertyNameAttribute("describedObject")]
public V2CrossVersionObjectReference DescribedObject { get; public set; }
    [JsonPropertyNameAttribute("metric")]
public V2MetricIdentifier Metric { get; public set; }
    [JsonPropertyNameAttribute("target")]
public V2MetricTarget Target { get; public set; }
    public V2ObjectMetricSource(V2CrossVersionObjectReference describedObject, V2MetricIdentifier metric, V2MetricTarget target);
    [CompilerGeneratedAttribute]
public V2CrossVersionObjectReference get_DescribedObject();
    [CompilerGeneratedAttribute]
public void set_DescribedObject(V2CrossVersionObjectReference value);
    [CompilerGeneratedAttribute]
public V2MetricIdentifier get_Metric();
    [CompilerGeneratedAttribute]
public void set_Metric(V2MetricIdentifier value);
    [CompilerGeneratedAttribute]
public V2MetricTarget get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(V2MetricTarget value);
    public virtual void Validate();
}
public class k8s.Models.V2ObjectMetricStatus : object {
    [CompilerGeneratedAttribute]
private V2MetricValueStatus <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private V2CrossVersionObjectReference <DescribedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricIdentifier <Metric>k__BackingField;
    [JsonPropertyNameAttribute("current")]
public V2MetricValueStatus Current { get; public set; }
    [JsonPropertyNameAttribute("describedObject")]
public V2CrossVersionObjectReference DescribedObject { get; public set; }
    [JsonPropertyNameAttribute("metric")]
public V2MetricIdentifier Metric { get; public set; }
    public V2ObjectMetricStatus(V2MetricValueStatus current, V2CrossVersionObjectReference describedObject, V2MetricIdentifier metric);
    [CompilerGeneratedAttribute]
public V2MetricValueStatus get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(V2MetricValueStatus value);
    [CompilerGeneratedAttribute]
public V2CrossVersionObjectReference get_DescribedObject();
    [CompilerGeneratedAttribute]
public void set_DescribedObject(V2CrossVersionObjectReference value);
    [CompilerGeneratedAttribute]
public V2MetricIdentifier get_Metric();
    [CompilerGeneratedAttribute]
public void set_Metric(V2MetricIdentifier value);
    public virtual void Validate();
}
public class k8s.Models.V2PodsMetricSource : object {
    [CompilerGeneratedAttribute]
private V2MetricIdentifier <Metric>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricTarget <Target>k__BackingField;
    [JsonPropertyNameAttribute("metric")]
public V2MetricIdentifier Metric { get; public set; }
    [JsonPropertyNameAttribute("target")]
public V2MetricTarget Target { get; public set; }
    public V2PodsMetricSource(V2MetricIdentifier metric, V2MetricTarget target);
    [CompilerGeneratedAttribute]
public V2MetricIdentifier get_Metric();
    [CompilerGeneratedAttribute]
public void set_Metric(V2MetricIdentifier value);
    [CompilerGeneratedAttribute]
public V2MetricTarget get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(V2MetricTarget value);
    public virtual void Validate();
}
public class k8s.Models.V2PodsMetricStatus : object {
    [CompilerGeneratedAttribute]
private V2MetricValueStatus <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricIdentifier <Metric>k__BackingField;
    [JsonPropertyNameAttribute("current")]
public V2MetricValueStatus Current { get; public set; }
    [JsonPropertyNameAttribute("metric")]
public V2MetricIdentifier Metric { get; public set; }
    public V2PodsMetricStatus(V2MetricValueStatus current, V2MetricIdentifier metric);
    [CompilerGeneratedAttribute]
public V2MetricValueStatus get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(V2MetricValueStatus value);
    [CompilerGeneratedAttribute]
public V2MetricIdentifier get_Metric();
    [CompilerGeneratedAttribute]
public void set_Metric(V2MetricIdentifier value);
    public virtual void Validate();
}
public class k8s.Models.V2ResourceMetricSource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private V2MetricTarget <Target>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("target")]
public V2MetricTarget Target { get; public set; }
    public V2ResourceMetricSource(string name, V2MetricTarget target);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public V2MetricTarget get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(V2MetricTarget value);
    public virtual void Validate();
}
public class k8s.Models.V2ResourceMetricStatus : object {
    [CompilerGeneratedAttribute]
private V2MetricValueStatus <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyNameAttribute("current")]
public V2MetricValueStatus Current { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    public V2ResourceMetricStatus(V2MetricValueStatus current, string name);
    [CompilerGeneratedAttribute]
public V2MetricValueStatus get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(V2MetricValueStatus value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class k8s.Models.VersionInfo : object {
    [CompilerGeneratedAttribute]
private string <BuildDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Compiler>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitCommit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitTreeState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GoVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Major>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Minor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Platform>k__BackingField;
    [JsonPropertyNameAttribute("buildDate")]
public string BuildDate { get; public set; }
    [JsonPropertyNameAttribute("compiler")]
public string Compiler { get; public set; }
    [JsonPropertyNameAttribute("gitCommit")]
public string GitCommit { get; public set; }
    [JsonPropertyNameAttribute("gitTreeState")]
public string GitTreeState { get; public set; }
    [JsonPropertyNameAttribute("gitVersion")]
public string GitVersion { get; public set; }
    [JsonPropertyNameAttribute("goVersion")]
public string GoVersion { get; public set; }
    [JsonPropertyNameAttribute("major")]
public string Major { get; public set; }
    [JsonPropertyNameAttribute("minor")]
public string Minor { get; public set; }
    [JsonPropertyNameAttribute("platform")]
public string Platform { get; public set; }
    public VersionInfo(string buildDate, string compiler, string gitCommit, string gitTreeState, string gitVersion, string goVersion, string major, string minor, string platform);
    [CompilerGeneratedAttribute]
public string get_BuildDate();
    [CompilerGeneratedAttribute]
public void set_BuildDate(string value);
    [CompilerGeneratedAttribute]
public string get_Compiler();
    [CompilerGeneratedAttribute]
public void set_Compiler(string value);
    [CompilerGeneratedAttribute]
public string get_GitCommit();
    [CompilerGeneratedAttribute]
public void set_GitCommit(string value);
    [CompilerGeneratedAttribute]
public string get_GitTreeState();
    [CompilerGeneratedAttribute]
public void set_GitTreeState(string value);
    [CompilerGeneratedAttribute]
public string get_GitVersion();
    [CompilerGeneratedAttribute]
public void set_GitVersion(string value);
    [CompilerGeneratedAttribute]
public string get_GoVersion();
    [CompilerGeneratedAttribute]
public void set_GoVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Major();
    [CompilerGeneratedAttribute]
public void set_Major(string value);
    [CompilerGeneratedAttribute]
public string get_Minor();
    [CompilerGeneratedAttribute]
public void set_Minor(string value);
    [CompilerGeneratedAttribute]
public string get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(string value);
    public virtual void Validate();
}
public class k8s.MuxedStream : Stream {
    private ByteBuffer inputBuffer;
    private Nullable`1<byte> outputIndex;
    private StreamDemuxer muxer;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public MuxedStream(StreamDemuxer muxer, ByteBuffer inputBuffer, Nullable`1<byte> outputIndex);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual void Flush();
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
}
[ExtensionAttribute]
public static class k8s.NetworkingOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(INetworkingOperations operations);
    [AsyncStateMachineAttribute("k8s.NetworkingOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(INetworkingOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.NetworkingV1beta1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(INetworkingV1beta1Operations operations);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(INetworkingV1beta1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionIPAddress(INetworkingV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<DeleteCollectionIPAddressAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionIPAddressAsync(INetworkingV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1IPAddressList ListIPAddress(INetworkingV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ListIPAddressAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1beta1IPAddressList> ListIPAddressAsync(INetworkingV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1IPAddress CreateIPAddress(INetworkingV1beta1Operations operations, V1beta1IPAddress body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<CreateIPAddressAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1beta1IPAddress> CreateIPAddressAsync(INetworkingV1beta1Operations operations, V1beta1IPAddress body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteIPAddress(INetworkingV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<DeleteIPAddressAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteIPAddressAsync(INetworkingV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1IPAddress ReadIPAddress(INetworkingV1beta1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ReadIPAddressAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1beta1IPAddress> ReadIPAddressAsync(INetworkingV1beta1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1IPAddress PatchIPAddress(INetworkingV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<PatchIPAddressAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1beta1IPAddress> PatchIPAddressAsync(INetworkingV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1IPAddress ReplaceIPAddress(INetworkingV1beta1Operations operations, V1beta1IPAddress body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ReplaceIPAddressAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1beta1IPAddress> ReplaceIPAddressAsync(INetworkingV1beta1Operations operations, V1beta1IPAddress body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionServiceCIDR(INetworkingV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<DeleteCollectionServiceCIDRAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionServiceCIDRAsync(INetworkingV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDRList ListServiceCIDR(INetworkingV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ListServiceCIDRAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDRList> ListServiceCIDRAsync(INetworkingV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDR CreateServiceCIDR(INetworkingV1beta1Operations operations, V1beta1ServiceCIDR body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<CreateServiceCIDRAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDR> CreateServiceCIDRAsync(INetworkingV1beta1Operations operations, V1beta1ServiceCIDR body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteServiceCIDR(INetworkingV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<DeleteServiceCIDRAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteServiceCIDRAsync(INetworkingV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDR ReadServiceCIDR(INetworkingV1beta1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ReadServiceCIDRAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDR> ReadServiceCIDRAsync(INetworkingV1beta1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDR PatchServiceCIDR(INetworkingV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<PatchServiceCIDRAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDR> PatchServiceCIDRAsync(INetworkingV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDR ReplaceServiceCIDR(INetworkingV1beta1Operations operations, V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ReplaceServiceCIDRAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDR> ReplaceServiceCIDRAsync(INetworkingV1beta1Operations operations, V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDR ReadServiceCIDRStatus(INetworkingV1beta1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ReadServiceCIDRStatusAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDR> ReadServiceCIDRStatusAsync(INetworkingV1beta1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDR PatchServiceCIDRStatus(INetworkingV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<PatchServiceCIDRStatusAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDR> PatchServiceCIDRStatusAsync(INetworkingV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1ServiceCIDR ReplaceServiceCIDRStatus(INetworkingV1beta1Operations operations, V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1beta1OperationsExtensions/<ReplaceServiceCIDRStatusAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1beta1ServiceCIDR> ReplaceServiceCIDRStatusAsync(INetworkingV1beta1Operations operations, V1beta1ServiceCIDR body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.NetworkingV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(INetworkingV1Operations operations);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(INetworkingV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionIngressClass(INetworkingV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<DeleteCollectionIngressClassAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionIngressClassAsync(INetworkingV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1IngressClassList ListIngressClass(INetworkingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ListIngressClassAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1IngressClassList> ListIngressClassAsync(INetworkingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1IngressClass CreateIngressClass(INetworkingV1Operations operations, V1IngressClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<CreateIngressClassAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1IngressClass> CreateIngressClassAsync(INetworkingV1Operations operations, V1IngressClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteIngressClass(INetworkingV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<DeleteIngressClassAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteIngressClassAsync(INetworkingV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1IngressClass ReadIngressClass(INetworkingV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReadIngressClassAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1IngressClass> ReadIngressClassAsync(INetworkingV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1IngressClass PatchIngressClass(INetworkingV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<PatchIngressClassAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1IngressClass> PatchIngressClassAsync(INetworkingV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1IngressClass ReplaceIngressClass(INetworkingV1Operations operations, V1IngressClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReplaceIngressClassAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1IngressClass> ReplaceIngressClassAsync(INetworkingV1Operations operations, V1IngressClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1IngressList ListIngressForAllNamespaces(INetworkingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ListIngressForAllNamespacesAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1IngressList> ListIngressForAllNamespacesAsync(INetworkingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedIngress(INetworkingV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<DeleteCollectionNamespacedIngressAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedIngressAsync(INetworkingV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1IngressList ListNamespacedIngress(INetworkingV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ListNamespacedIngressAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1IngressList> ListNamespacedIngressAsync(INetworkingV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Ingress CreateNamespacedIngress(INetworkingV1Operations operations, V1Ingress body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<CreateNamespacedIngressAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Ingress> CreateNamespacedIngressAsync(INetworkingV1Operations operations, V1Ingress body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedIngress(INetworkingV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<DeleteNamespacedIngressAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedIngressAsync(INetworkingV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Ingress ReadNamespacedIngress(INetworkingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReadNamespacedIngressAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1Ingress> ReadNamespacedIngressAsync(INetworkingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Ingress PatchNamespacedIngress(INetworkingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<PatchNamespacedIngressAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1Ingress> PatchNamespacedIngressAsync(INetworkingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Ingress ReplaceNamespacedIngress(INetworkingV1Operations operations, V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReplaceNamespacedIngressAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1Ingress> ReplaceNamespacedIngressAsync(INetworkingV1Operations operations, V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Ingress ReadNamespacedIngressStatus(INetworkingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReadNamespacedIngressStatusAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1Ingress> ReadNamespacedIngressStatusAsync(INetworkingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Ingress PatchNamespacedIngressStatus(INetworkingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<PatchNamespacedIngressStatusAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1Ingress> PatchNamespacedIngressStatusAsync(INetworkingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Ingress ReplaceNamespacedIngressStatus(INetworkingV1Operations operations, V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReplaceNamespacedIngressStatusAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1Ingress> ReplaceNamespacedIngressStatusAsync(INetworkingV1Operations operations, V1Ingress body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedNetworkPolicy(INetworkingV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<DeleteCollectionNamespacedNetworkPolicyAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedNetworkPolicyAsync(INetworkingV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NetworkPolicyList ListNamespacedNetworkPolicy(INetworkingV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ListNamespacedNetworkPolicyAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1NetworkPolicyList> ListNamespacedNetworkPolicyAsync(INetworkingV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NetworkPolicy CreateNamespacedNetworkPolicy(INetworkingV1Operations operations, V1NetworkPolicy body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<CreateNamespacedNetworkPolicyAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1NetworkPolicy> CreateNamespacedNetworkPolicyAsync(INetworkingV1Operations operations, V1NetworkPolicy body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedNetworkPolicy(INetworkingV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<DeleteNamespacedNetworkPolicyAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedNetworkPolicyAsync(INetworkingV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NetworkPolicy ReadNamespacedNetworkPolicy(INetworkingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReadNamespacedNetworkPolicyAsync>d__47")]
[ExtensionAttribute]
public static Task`1<V1NetworkPolicy> ReadNamespacedNetworkPolicyAsync(INetworkingV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NetworkPolicy PatchNamespacedNetworkPolicy(INetworkingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<PatchNamespacedNetworkPolicyAsync>d__49")]
[ExtensionAttribute]
public static Task`1<V1NetworkPolicy> PatchNamespacedNetworkPolicyAsync(INetworkingV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NetworkPolicy ReplaceNamespacedNetworkPolicy(INetworkingV1Operations operations, V1NetworkPolicy body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ReplaceNamespacedNetworkPolicyAsync>d__51")]
[ExtensionAttribute]
public static Task`1<V1NetworkPolicy> ReplaceNamespacedNetworkPolicyAsync(INetworkingV1Operations operations, V1NetworkPolicy body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1NetworkPolicyList ListNetworkPolicyForAllNamespaces(INetworkingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.NetworkingV1OperationsExtensions/<ListNetworkPolicyForAllNamespacesAsync>d__53")]
[ExtensionAttribute]
public static Task`1<V1NetworkPolicyList> ListNetworkPolicyForAllNamespacesAsync(INetworkingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.NodeOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(INodeOperations operations);
    [AsyncStateMachineAttribute("k8s.NodeOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(INodeOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.NodeV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(INodeV1Operations operations);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(INodeV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionRuntimeClass(INodeV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<DeleteCollectionRuntimeClassAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionRuntimeClassAsync(INodeV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RuntimeClassList ListRuntimeClass(INodeV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<ListRuntimeClassAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1RuntimeClassList> ListRuntimeClassAsync(INodeV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RuntimeClass CreateRuntimeClass(INodeV1Operations operations, V1RuntimeClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<CreateRuntimeClassAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1RuntimeClass> CreateRuntimeClassAsync(INodeV1Operations operations, V1RuntimeClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteRuntimeClass(INodeV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<DeleteRuntimeClassAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteRuntimeClassAsync(INodeV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RuntimeClass ReadRuntimeClass(INodeV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<ReadRuntimeClassAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1RuntimeClass> ReadRuntimeClassAsync(INodeV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RuntimeClass PatchRuntimeClass(INodeV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<PatchRuntimeClassAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1RuntimeClass> PatchRuntimeClassAsync(INodeV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RuntimeClass ReplaceRuntimeClass(INodeV1Operations operations, V1RuntimeClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.NodeV1OperationsExtensions/<ReplaceRuntimeClassAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1RuntimeClass> ReplaceRuntimeClassAsync(INodeV1Operations operations, V1RuntimeClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.OpenidOperationsExtensions : object {
    [ExtensionAttribute]
public static string GetServiceAccountIssuerOpenIDKeyset(IOpenidOperations operations);
    [AsyncStateMachineAttribute("k8s.OpenidOperationsExtensions/<GetServiceAccountIssuerOpenIDKeysetAsync>d__1")]
[ExtensionAttribute]
public static Task`1<string> GetServiceAccountIssuerOpenIDKeysetAsync(IOpenidOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.PolicyOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IPolicyOperations operations);
    [AsyncStateMachineAttribute("k8s.PolicyOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IPolicyOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.PolicyV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IPolicyV1Operations operations);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IPolicyV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedPodDisruptionBudget(IPolicyV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<DeleteCollectionNamespacedPodDisruptionBudgetAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedPodDisruptionBudgetAsync(IPolicyV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudgetList ListNamespacedPodDisruptionBudget(IPolicyV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<ListNamespacedPodDisruptionBudgetAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudgetList> ListNamespacedPodDisruptionBudgetAsync(IPolicyV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudget CreateNamespacedPodDisruptionBudget(IPolicyV1Operations operations, V1PodDisruptionBudget body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<CreateNamespacedPodDisruptionBudgetAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudget> CreateNamespacedPodDisruptionBudgetAsync(IPolicyV1Operations operations, V1PodDisruptionBudget body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedPodDisruptionBudget(IPolicyV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<DeleteNamespacedPodDisruptionBudgetAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedPodDisruptionBudgetAsync(IPolicyV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudget ReadNamespacedPodDisruptionBudget(IPolicyV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<ReadNamespacedPodDisruptionBudgetAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudget> ReadNamespacedPodDisruptionBudgetAsync(IPolicyV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudget PatchNamespacedPodDisruptionBudget(IPolicyV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<PatchNamespacedPodDisruptionBudgetAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudget> PatchNamespacedPodDisruptionBudgetAsync(IPolicyV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudget ReplaceNamespacedPodDisruptionBudget(IPolicyV1Operations operations, V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<ReplaceNamespacedPodDisruptionBudgetAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudget> ReplaceNamespacedPodDisruptionBudgetAsync(IPolicyV1Operations operations, V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudget ReadNamespacedPodDisruptionBudgetStatus(IPolicyV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<ReadNamespacedPodDisruptionBudgetStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudget> ReadNamespacedPodDisruptionBudgetStatusAsync(IPolicyV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudget PatchNamespacedPodDisruptionBudgetStatus(IPolicyV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<PatchNamespacedPodDisruptionBudgetStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudget> PatchNamespacedPodDisruptionBudgetStatusAsync(IPolicyV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudget ReplaceNamespacedPodDisruptionBudgetStatus(IPolicyV1Operations operations, V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<ReplaceNamespacedPodDisruptionBudgetStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudget> ReplaceNamespacedPodDisruptionBudgetStatusAsync(IPolicyV1Operations operations, V1PodDisruptionBudget body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PodDisruptionBudgetList ListPodDisruptionBudgetForAllNamespaces(IPolicyV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.PolicyV1OperationsExtensions/<ListPodDisruptionBudgetForAllNamespacesAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1PodDisruptionBudgetList> ListPodDisruptionBudgetForAllNamespacesAsync(IPolicyV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
}
public class k8s.PrometheusHandler : DelegatingHandler {
    private static string Prefix;
    private static Meter Meter;
    private static Counter`1<int> RequestsSent;
    private static Histogram`1<double> RequestLatency;
    private static Counter`1<int> ResponseCodes;
    private static UpDownCounter`1<int> ActiveRequests;
    private static PrometheusHandler();
    [AsyncStateMachineAttribute("k8s.PrometheusHandler/<SendAsync>d__6")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.RbacAuthorizationOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IRbacAuthorizationOperations operations);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IRbacAuthorizationOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.RbacAuthorizationV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IRbacAuthorizationV1Operations operations);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IRbacAuthorizationV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionClusterRoleBinding(IRbacAuthorizationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteCollectionClusterRoleBindingAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionClusterRoleBindingAsync(IRbacAuthorizationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRoleBindingList ListClusterRoleBinding(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ListClusterRoleBindingAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1ClusterRoleBindingList> ListClusterRoleBindingAsync(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRoleBinding CreateClusterRoleBinding(IRbacAuthorizationV1Operations operations, V1ClusterRoleBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<CreateClusterRoleBindingAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1ClusterRoleBinding> CreateClusterRoleBindingAsync(IRbacAuthorizationV1Operations operations, V1ClusterRoleBinding body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteClusterRoleBinding(IRbacAuthorizationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteClusterRoleBindingAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteClusterRoleBindingAsync(IRbacAuthorizationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRoleBinding ReadClusterRoleBinding(IRbacAuthorizationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReadClusterRoleBindingAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1ClusterRoleBinding> ReadClusterRoleBindingAsync(IRbacAuthorizationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRoleBinding PatchClusterRoleBinding(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<PatchClusterRoleBindingAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1ClusterRoleBinding> PatchClusterRoleBindingAsync(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRoleBinding ReplaceClusterRoleBinding(IRbacAuthorizationV1Operations operations, V1ClusterRoleBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReplaceClusterRoleBindingAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1ClusterRoleBinding> ReplaceClusterRoleBindingAsync(IRbacAuthorizationV1Operations operations, V1ClusterRoleBinding body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionClusterRole(IRbacAuthorizationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteCollectionClusterRoleAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionClusterRoleAsync(IRbacAuthorizationV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRoleList ListClusterRole(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ListClusterRoleAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1ClusterRoleList> ListClusterRoleAsync(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRole CreateClusterRole(IRbacAuthorizationV1Operations operations, V1ClusterRole body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<CreateClusterRoleAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1ClusterRole> CreateClusterRoleAsync(IRbacAuthorizationV1Operations operations, V1ClusterRole body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteClusterRole(IRbacAuthorizationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteClusterRoleAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteClusterRoleAsync(IRbacAuthorizationV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRole ReadClusterRole(IRbacAuthorizationV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReadClusterRoleAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1ClusterRole> ReadClusterRoleAsync(IRbacAuthorizationV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRole PatchClusterRole(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<PatchClusterRoleAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1ClusterRole> PatchClusterRoleAsync(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1ClusterRole ReplaceClusterRole(IRbacAuthorizationV1Operations operations, V1ClusterRole body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReplaceClusterRoleAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1ClusterRole> ReplaceClusterRoleAsync(IRbacAuthorizationV1Operations operations, V1ClusterRole body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedRoleBinding(IRbacAuthorizationV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteCollectionNamespacedRoleBindingAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedRoleBindingAsync(IRbacAuthorizationV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleBindingList ListNamespacedRoleBinding(IRbacAuthorizationV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ListNamespacedRoleBindingAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1RoleBindingList> ListNamespacedRoleBindingAsync(IRbacAuthorizationV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleBinding CreateNamespacedRoleBinding(IRbacAuthorizationV1Operations operations, V1RoleBinding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<CreateNamespacedRoleBindingAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1RoleBinding> CreateNamespacedRoleBindingAsync(IRbacAuthorizationV1Operations operations, V1RoleBinding body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedRoleBinding(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteNamespacedRoleBindingAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedRoleBindingAsync(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleBinding ReadNamespacedRoleBinding(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReadNamespacedRoleBindingAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1RoleBinding> ReadNamespacedRoleBindingAsync(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleBinding PatchNamespacedRoleBinding(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<PatchNamespacedRoleBindingAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1RoleBinding> PatchNamespacedRoleBindingAsync(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleBinding ReplaceNamespacedRoleBinding(IRbacAuthorizationV1Operations operations, V1RoleBinding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReplaceNamespacedRoleBindingAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1RoleBinding> ReplaceNamespacedRoleBindingAsync(IRbacAuthorizationV1Operations operations, V1RoleBinding body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedRole(IRbacAuthorizationV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteCollectionNamespacedRoleAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedRoleAsync(IRbacAuthorizationV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleList ListNamespacedRole(IRbacAuthorizationV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ListNamespacedRoleAsync>d__47")]
[ExtensionAttribute]
public static Task`1<V1RoleList> ListNamespacedRoleAsync(IRbacAuthorizationV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Role CreateNamespacedRole(IRbacAuthorizationV1Operations operations, V1Role body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<CreateNamespacedRoleAsync>d__49")]
[ExtensionAttribute]
public static Task`1<V1Role> CreateNamespacedRoleAsync(IRbacAuthorizationV1Operations operations, V1Role body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedRole(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<DeleteNamespacedRoleAsync>d__51")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedRoleAsync(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Role ReadNamespacedRole(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReadNamespacedRoleAsync>d__53")]
[ExtensionAttribute]
public static Task`1<V1Role> ReadNamespacedRoleAsync(IRbacAuthorizationV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Role PatchNamespacedRole(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<PatchNamespacedRoleAsync>d__55")]
[ExtensionAttribute]
public static Task`1<V1Role> PatchNamespacedRoleAsync(IRbacAuthorizationV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Role ReplaceNamespacedRole(IRbacAuthorizationV1Operations operations, V1Role body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ReplaceNamespacedRoleAsync>d__57")]
[ExtensionAttribute]
public static Task`1<V1Role> ReplaceNamespacedRoleAsync(IRbacAuthorizationV1Operations operations, V1Role body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleBindingList ListRoleBindingForAllNamespaces(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ListRoleBindingForAllNamespacesAsync>d__59")]
[ExtensionAttribute]
public static Task`1<V1RoleBindingList> ListRoleBindingForAllNamespacesAsync(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1RoleList ListRoleForAllNamespaces(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.RbacAuthorizationV1OperationsExtensions/<ListRoleForAllNamespacesAsync>d__61")]
[ExtensionAttribute]
public static Task`1<V1RoleList> ListRoleForAllNamespacesAsync(IRbacAuthorizationV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ResourceOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IResourceOperations operations);
    [AsyncStateMachineAttribute("k8s.ResourceOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IResourceOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.ResourceV1alpha3OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IResourceV1alpha3Operations operations);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IResourceV1alpha3Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionDeviceClass(IResourceV1alpha3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteCollectionDeviceClassAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionDeviceClassAsync(IResourceV1alpha3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3DeviceClassList ListDeviceClass(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListDeviceClassAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1alpha3DeviceClassList> ListDeviceClassAsync(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3DeviceClass CreateDeviceClass(IResourceV1alpha3Operations operations, V1alpha3DeviceClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<CreateDeviceClassAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1alpha3DeviceClass> CreateDeviceClassAsync(IResourceV1alpha3Operations operations, V1alpha3DeviceClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3DeviceClass DeleteDeviceClass(IResourceV1alpha3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteDeviceClassAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1alpha3DeviceClass> DeleteDeviceClassAsync(IResourceV1alpha3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3DeviceClass ReadDeviceClass(IResourceV1alpha3Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReadDeviceClassAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1alpha3DeviceClass> ReadDeviceClassAsync(IResourceV1alpha3Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3DeviceClass PatchDeviceClass(IResourceV1alpha3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<PatchDeviceClassAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1alpha3DeviceClass> PatchDeviceClassAsync(IResourceV1alpha3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3DeviceClass ReplaceDeviceClass(IResourceV1alpha3Operations operations, V1alpha3DeviceClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReplaceDeviceClassAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1alpha3DeviceClass> ReplaceDeviceClassAsync(IResourceV1alpha3Operations operations, V1alpha3DeviceClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedPodSchedulingContext(IResourceV1alpha3Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteCollectionNamespacedPodSchedulingContextAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedPodSchedulingContextAsync(IResourceV1alpha3Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContextList ListNamespacedPodSchedulingContext(IResourceV1alpha3Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListNamespacedPodSchedulingContextAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContextList> ListNamespacedPodSchedulingContextAsync(IResourceV1alpha3Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext CreateNamespacedPodSchedulingContext(IResourceV1alpha3Operations operations, V1alpha3PodSchedulingContext body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<CreateNamespacedPodSchedulingContextAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> CreateNamespacedPodSchedulingContextAsync(IResourceV1alpha3Operations operations, V1alpha3PodSchedulingContext body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext DeleteNamespacedPodSchedulingContext(IResourceV1alpha3Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteNamespacedPodSchedulingContextAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> DeleteNamespacedPodSchedulingContextAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext ReadNamespacedPodSchedulingContext(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReadNamespacedPodSchedulingContextAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> ReadNamespacedPodSchedulingContextAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext PatchNamespacedPodSchedulingContext(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<PatchNamespacedPodSchedulingContextAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> PatchNamespacedPodSchedulingContextAsync(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext ReplaceNamespacedPodSchedulingContext(IResourceV1alpha3Operations operations, V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReplaceNamespacedPodSchedulingContextAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> ReplaceNamespacedPodSchedulingContextAsync(IResourceV1alpha3Operations operations, V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext ReadNamespacedPodSchedulingContextStatus(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReadNamespacedPodSchedulingContextStatusAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> ReadNamespacedPodSchedulingContextStatusAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext PatchNamespacedPodSchedulingContextStatus(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<PatchNamespacedPodSchedulingContextStatusAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> PatchNamespacedPodSchedulingContextStatusAsync(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContext ReplaceNamespacedPodSchedulingContextStatus(IResourceV1alpha3Operations operations, V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReplaceNamespacedPodSchedulingContextStatusAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContext> ReplaceNamespacedPodSchedulingContextStatusAsync(IResourceV1alpha3Operations operations, V1alpha3PodSchedulingContext body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedResourceClaim(IResourceV1alpha3Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteCollectionNamespacedResourceClaimAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedResourceClaimAsync(IResourceV1alpha3Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimList ListNamespacedResourceClaim(IResourceV1alpha3Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListNamespacedResourceClaimAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimList> ListNamespacedResourceClaimAsync(IResourceV1alpha3Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim CreateNamespacedResourceClaim(IResourceV1alpha3Operations operations, V1alpha3ResourceClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<CreateNamespacedResourceClaimAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> CreateNamespacedResourceClaimAsync(IResourceV1alpha3Operations operations, V1alpha3ResourceClaim body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim DeleteNamespacedResourceClaim(IResourceV1alpha3Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteNamespacedResourceClaimAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> DeleteNamespacedResourceClaimAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim ReadNamespacedResourceClaim(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReadNamespacedResourceClaimAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> ReadNamespacedResourceClaimAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim PatchNamespacedResourceClaim(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<PatchNamespacedResourceClaimAsync>d__47")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> PatchNamespacedResourceClaimAsync(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim ReplaceNamespacedResourceClaim(IResourceV1alpha3Operations operations, V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReplaceNamespacedResourceClaimAsync>d__49")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> ReplaceNamespacedResourceClaimAsync(IResourceV1alpha3Operations operations, V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim ReadNamespacedResourceClaimStatus(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReadNamespacedResourceClaimStatusAsync>d__51")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> ReadNamespacedResourceClaimStatusAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim PatchNamespacedResourceClaimStatus(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<PatchNamespacedResourceClaimStatusAsync>d__53")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> PatchNamespacedResourceClaimStatusAsync(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaim ReplaceNamespacedResourceClaimStatus(IResourceV1alpha3Operations operations, V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReplaceNamespacedResourceClaimStatusAsync>d__55")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaim> ReplaceNamespacedResourceClaimStatusAsync(IResourceV1alpha3Operations operations, V1alpha3ResourceClaim body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedResourceClaimTemplate(IResourceV1alpha3Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteCollectionNamespacedResourceClaimTemplateAsync>d__57")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedResourceClaimTemplateAsync(IResourceV1alpha3Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimTemplateList ListNamespacedResourceClaimTemplate(IResourceV1alpha3Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListNamespacedResourceClaimTemplateAsync>d__59")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimTemplateList> ListNamespacedResourceClaimTemplateAsync(IResourceV1alpha3Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimTemplate CreateNamespacedResourceClaimTemplate(IResourceV1alpha3Operations operations, V1alpha3ResourceClaimTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<CreateNamespacedResourceClaimTemplateAsync>d__61")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimTemplate> CreateNamespacedResourceClaimTemplateAsync(IResourceV1alpha3Operations operations, V1alpha3ResourceClaimTemplate body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimTemplate DeleteNamespacedResourceClaimTemplate(IResourceV1alpha3Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteNamespacedResourceClaimTemplateAsync>d__63")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimTemplate> DeleteNamespacedResourceClaimTemplateAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimTemplate ReadNamespacedResourceClaimTemplate(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReadNamespacedResourceClaimTemplateAsync>d__65")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimTemplate> ReadNamespacedResourceClaimTemplateAsync(IResourceV1alpha3Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimTemplate PatchNamespacedResourceClaimTemplate(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<PatchNamespacedResourceClaimTemplateAsync>d__67")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimTemplate> PatchNamespacedResourceClaimTemplateAsync(IResourceV1alpha3Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimTemplate ReplaceNamespacedResourceClaimTemplate(IResourceV1alpha3Operations operations, V1alpha3ResourceClaimTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReplaceNamespacedResourceClaimTemplateAsync>d__69")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimTemplate> ReplaceNamespacedResourceClaimTemplateAsync(IResourceV1alpha3Operations operations, V1alpha3ResourceClaimTemplate body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3PodSchedulingContextList ListPodSchedulingContextForAllNamespaces(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListPodSchedulingContextForAllNamespacesAsync>d__71")]
[ExtensionAttribute]
public static Task`1<V1alpha3PodSchedulingContextList> ListPodSchedulingContextForAllNamespacesAsync(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimList ListResourceClaimForAllNamespaces(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListResourceClaimForAllNamespacesAsync>d__73")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimList> ListResourceClaimForAllNamespacesAsync(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceClaimTemplateList ListResourceClaimTemplateForAllNamespaces(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListResourceClaimTemplateForAllNamespacesAsync>d__75")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceClaimTemplateList> ListResourceClaimTemplateForAllNamespacesAsync(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionResourceSlice(IResourceV1alpha3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteCollectionResourceSliceAsync>d__77")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionResourceSliceAsync(IResourceV1alpha3Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceSliceList ListResourceSlice(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ListResourceSliceAsync>d__79")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceSliceList> ListResourceSliceAsync(IResourceV1alpha3Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceSlice CreateResourceSlice(IResourceV1alpha3Operations operations, V1alpha3ResourceSlice body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<CreateResourceSliceAsync>d__81")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceSlice> CreateResourceSliceAsync(IResourceV1alpha3Operations operations, V1alpha3ResourceSlice body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceSlice DeleteResourceSlice(IResourceV1alpha3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<DeleteResourceSliceAsync>d__83")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceSlice> DeleteResourceSliceAsync(IResourceV1alpha3Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceSlice ReadResourceSlice(IResourceV1alpha3Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReadResourceSliceAsync>d__85")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceSlice> ReadResourceSliceAsync(IResourceV1alpha3Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceSlice PatchResourceSlice(IResourceV1alpha3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<PatchResourceSliceAsync>d__87")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceSlice> PatchResourceSliceAsync(IResourceV1alpha3Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha3ResourceSlice ReplaceResourceSlice(IResourceV1alpha3Operations operations, V1alpha3ResourceSlice body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.ResourceV1alpha3OperationsExtensions/<ReplaceResourceSliceAsync>d__89")]
[ExtensionAttribute]
public static Task`1<V1alpha3ResourceSlice> ReplaceResourceSliceAsync(IResourceV1alpha3Operations operations, V1alpha3ResourceSlice body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.SchedulingOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(ISchedulingOperations operations);
    [AsyncStateMachineAttribute("k8s.SchedulingOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(ISchedulingOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.SchedulingV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(ISchedulingV1Operations operations);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(ISchedulingV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionPriorityClass(ISchedulingV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<DeleteCollectionPriorityClassAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionPriorityClassAsync(ISchedulingV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityClassList ListPriorityClass(ISchedulingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<ListPriorityClassAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1PriorityClassList> ListPriorityClassAsync(ISchedulingV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityClass CreatePriorityClass(ISchedulingV1Operations operations, V1PriorityClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<CreatePriorityClassAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1PriorityClass> CreatePriorityClassAsync(ISchedulingV1Operations operations, V1PriorityClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeletePriorityClass(ISchedulingV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<DeletePriorityClassAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeletePriorityClassAsync(ISchedulingV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityClass ReadPriorityClass(ISchedulingV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<ReadPriorityClassAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1PriorityClass> ReadPriorityClassAsync(ISchedulingV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityClass PatchPriorityClass(ISchedulingV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<PatchPriorityClassAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1PriorityClass> PatchPriorityClassAsync(ISchedulingV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1PriorityClass ReplacePriorityClass(ISchedulingV1Operations operations, V1PriorityClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.SchedulingV1OperationsExtensions/<ReplacePriorityClassAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1PriorityClass> ReplacePriorityClassAsync(ISchedulingV1Operations operations, V1PriorityClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("k8s.Models.V1MutatingWebhookConfiguration")]
[JsonSerializableAttribute("k8s.Models.V1MutatingWebhookConfigurationList")]
[JsonSerializableAttribute("k8s.Models.V1ValidatingAdmissionPolicy")]
[JsonSerializableAttribute("k8s.Models.V1ValidatingAdmissionPolicyBinding")]
[JsonSerializableAttribute("k8s.Models.V1ValidatingAdmissionPolicyBindingList")]
[JsonSerializableAttribute("k8s.Models.V1ValidatingAdmissionPolicyList")]
[JsonSerializableAttribute("k8s.Models.V1ValidatingWebhookConfiguration")]
[JsonSerializableAttribute("k8s.Models.V1ValidatingWebhookConfigurationList")]
[JsonSerializableAttribute("k8s.Models.V1alpha1ValidatingAdmissionPolicy")]
[JsonSerializableAttribute("k8s.Models.V1alpha1ValidatingAdmissionPolicyBinding")]
[JsonSerializableAttribute("k8s.Models.V1alpha1ValidatingAdmissionPolicyBindingList")]
[JsonSerializableAttribute("k8s.Models.V1alpha1ValidatingAdmissionPolicyList")]
[JsonSerializableAttribute("k8s.Models.V1beta1ValidatingAdmissionPolicy")]
[JsonSerializableAttribute("k8s.Models.V1beta1ValidatingAdmissionPolicyBinding")]
[JsonSerializableAttribute("k8s.Models.V1beta1ValidatingAdmissionPolicyBindingList")]
[JsonSerializableAttribute("k8s.Models.V1beta1ValidatingAdmissionPolicyList")]
[JsonSerializableAttribute("k8s.Models.V1alpha1StorageVersion")]
[JsonSerializableAttribute("k8s.Models.V1alpha1StorageVersionList")]
[JsonSerializableAttribute("k8s.Models.V1ControllerRevision")]
[JsonSerializableAttribute("k8s.Models.V1ControllerRevisionList")]
[JsonSerializableAttribute("k8s.Models.V1DaemonSet")]
[JsonSerializableAttribute("k8s.Models.V1DaemonSetList")]
[JsonSerializableAttribute("k8s.Models.V1Deployment")]
[JsonSerializableAttribute("k8s.Models.V1DeploymentList")]
[JsonSerializableAttribute("k8s.Models.V1ReplicaSet")]
[JsonSerializableAttribute("k8s.Models.V1ReplicaSetList")]
[JsonSerializableAttribute("k8s.Models.V1StatefulSet")]
[JsonSerializableAttribute("k8s.Models.V1StatefulSetList")]
[JsonSerializableAttribute("k8s.Models.V1SelfSubjectReview")]
[JsonSerializableAttribute("k8s.Models.Authenticationv1TokenRequest")]
[JsonSerializableAttribute("k8s.Models.V1TokenReview")]
[JsonSerializableAttribute("k8s.Models.V1alpha1SelfSubjectReview")]
[JsonSerializableAttribute("k8s.Models.V1beta1SelfSubjectReview")]
[JsonSerializableAttribute("k8s.Models.V1LocalSubjectAccessReview")]
[JsonSerializableAttribute("k8s.Models.V1SelfSubjectAccessReview")]
[JsonSerializableAttribute("k8s.Models.V1SelfSubjectRulesReview")]
[JsonSerializableAttribute("k8s.Models.V1SubjectAccessReview")]
[JsonSerializableAttribute("k8s.Models.V1HorizontalPodAutoscaler")]
[JsonSerializableAttribute("k8s.Models.V1HorizontalPodAutoscalerList")]
[JsonSerializableAttribute("k8s.Models.V1Scale")]
[JsonSerializableAttribute("k8s.Models.V2HorizontalPodAutoscaler")]
[JsonSerializableAttribute("k8s.Models.V2HorizontalPodAutoscalerList")]
[JsonSerializableAttribute("k8s.Models.V1CronJob")]
[JsonSerializableAttribute("k8s.Models.V1CronJobList")]
[JsonSerializableAttribute("k8s.Models.V1Job")]
[JsonSerializableAttribute("k8s.Models.V1JobList")]
[JsonSerializableAttribute("k8s.Models.V1CertificateSigningRequest")]
[JsonSerializableAttribute("k8s.Models.V1CertificateSigningRequestList")]
[JsonSerializableAttribute("k8s.Models.V1alpha1ClusterTrustBundle")]
[JsonSerializableAttribute("k8s.Models.V1alpha1ClusterTrustBundleList")]
[JsonSerializableAttribute("k8s.Models.V1Lease")]
[JsonSerializableAttribute("k8s.Models.V1LeaseList")]
[JsonSerializableAttribute("k8s.Models.V1alpha1LeaseCandidate")]
[JsonSerializableAttribute("k8s.Models.V1alpha1LeaseCandidateList")]
[JsonSerializableAttribute("k8s.Models.V1Binding")]
[JsonSerializableAttribute("k8s.Models.V1ComponentStatus")]
[JsonSerializableAttribute("k8s.Models.V1ComponentStatusList")]
[JsonSerializableAttribute("k8s.Models.V1ConfigMap")]
[JsonSerializableAttribute("k8s.Models.V1ConfigMapList")]
[JsonSerializableAttribute("k8s.Models.V1Endpoints")]
[JsonSerializableAttribute("k8s.Models.V1EndpointsList")]
[JsonSerializableAttribute("k8s.Models.Corev1Event")]
[JsonSerializableAttribute("k8s.Models.Corev1EventList")]
[JsonSerializableAttribute("k8s.Models.V1LimitRange")]
[JsonSerializableAttribute("k8s.Models.V1LimitRangeList")]
[JsonSerializableAttribute("k8s.Models.V1Namespace")]
[JsonSerializableAttribute("k8s.Models.V1NamespaceList")]
[JsonSerializableAttribute("k8s.Models.V1Node")]
[JsonSerializableAttribute("k8s.Models.V1NodeList")]
[JsonSerializableAttribute("k8s.Models.V1PersistentVolume")]
[JsonSerializableAttribute("k8s.Models.V1PersistentVolumeClaim")]
[JsonSerializableAttribute("k8s.Models.V1PersistentVolumeClaimList")]
[JsonSerializableAttribute("k8s.Models.V1PersistentVolumeList")]
[JsonSerializableAttribute("k8s.Models.V1Pod")]
[JsonSerializableAttribute("k8s.Models.V1PodList")]
[JsonSerializableAttribute("k8s.Models.V1PodTemplate")]
[JsonSerializableAttribute("k8s.Models.V1PodTemplateList")]
[JsonSerializableAttribute("k8s.Models.V1ReplicationController")]
[JsonSerializableAttribute("k8s.Models.V1ReplicationControllerList")]
[JsonSerializableAttribute("k8s.Models.V1ResourceQuota")]
[JsonSerializableAttribute("k8s.Models.V1ResourceQuotaList")]
[JsonSerializableAttribute("k8s.Models.V1Secret")]
[JsonSerializableAttribute("k8s.Models.V1SecretList")]
[JsonSerializableAttribute("k8s.Models.V1Service")]
[JsonSerializableAttribute("k8s.Models.V1ServiceAccount")]
[JsonSerializableAttribute("k8s.Models.V1ServiceAccountList")]
[JsonSerializableAttribute("k8s.Models.V1ServiceList")]
[JsonSerializableAttribute("k8s.Models.V1EndpointSlice")]
[JsonSerializableAttribute("k8s.Models.V1EndpointSliceList")]
[JsonSerializableAttribute("k8s.Models.Eventsv1Event")]
[JsonSerializableAttribute("k8s.Models.Eventsv1EventList")]
[JsonSerializableAttribute("k8s.Models.V1FlowSchema")]
[JsonSerializableAttribute("k8s.Models.V1FlowSchemaList")]
[JsonSerializableAttribute("k8s.Models.V1PriorityLevelConfiguration")]
[JsonSerializableAttribute("k8s.Models.V1PriorityLevelConfigurationList")]
[JsonSerializableAttribute("k8s.Models.V1beta3FlowSchema")]
[JsonSerializableAttribute("k8s.Models.V1beta3FlowSchemaList")]
[JsonSerializableAttribute("k8s.Models.V1beta3PriorityLevelConfiguration")]
[JsonSerializableAttribute("k8s.Models.V1beta3PriorityLevelConfigurationList")]
[JsonSerializableAttribute("k8s.Models.V1Ingress")]
[JsonSerializableAttribute("k8s.Models.V1IngressClass")]
[JsonSerializableAttribute("k8s.Models.V1IngressClassList")]
[JsonSerializableAttribute("k8s.Models.V1IngressList")]
[JsonSerializableAttribute("k8s.Models.V1NetworkPolicy")]
[JsonSerializableAttribute("k8s.Models.V1NetworkPolicyList")]
[JsonSerializableAttribute("k8s.Models.V1beta1IPAddress")]
[JsonSerializableAttribute("k8s.Models.V1beta1IPAddressList")]
[JsonSerializableAttribute("k8s.Models.V1beta1ServiceCIDR")]
[JsonSerializableAttribute("k8s.Models.V1beta1ServiceCIDRList")]
[JsonSerializableAttribute("k8s.Models.V1RuntimeClass")]
[JsonSerializableAttribute("k8s.Models.V1RuntimeClassList")]
[JsonSerializableAttribute("k8s.Models.V1Eviction")]
[JsonSerializableAttribute("k8s.Models.V1PodDisruptionBudget")]
[JsonSerializableAttribute("k8s.Models.V1PodDisruptionBudgetList")]
[JsonSerializableAttribute("k8s.Models.V1ClusterRole")]
[JsonSerializableAttribute("k8s.Models.V1ClusterRoleBinding")]
[JsonSerializableAttribute("k8s.Models.V1ClusterRoleBindingList")]
[JsonSerializableAttribute("k8s.Models.V1ClusterRoleList")]
[JsonSerializableAttribute("k8s.Models.V1Role")]
[JsonSerializableAttribute("k8s.Models.V1RoleBinding")]
[JsonSerializableAttribute("k8s.Models.V1RoleBindingList")]
[JsonSerializableAttribute("k8s.Models.V1RoleList")]
[JsonSerializableAttribute("k8s.Models.V1alpha3DeviceClass")]
[JsonSerializableAttribute("k8s.Models.V1alpha3DeviceClassList")]
[JsonSerializableAttribute("k8s.Models.V1alpha3PodSchedulingContext")]
[JsonSerializableAttribute("k8s.Models.V1alpha3PodSchedulingContextList")]
[JsonSerializableAttribute("k8s.Models.V1alpha3ResourceClaim")]
[JsonSerializableAttribute("k8s.Models.V1alpha3ResourceClaimList")]
[JsonSerializableAttribute("k8s.Models.V1alpha3ResourceClaimTemplate")]
[JsonSerializableAttribute("k8s.Models.V1alpha3ResourceClaimTemplateList")]
[JsonSerializableAttribute("k8s.Models.V1alpha3ResourceSlice")]
[JsonSerializableAttribute("k8s.Models.V1alpha3ResourceSliceList")]
[JsonSerializableAttribute("k8s.Models.V1PriorityClass")]
[JsonSerializableAttribute("k8s.Models.V1PriorityClassList")]
[JsonSerializableAttribute("k8s.Models.V1CSIDriver")]
[JsonSerializableAttribute("k8s.Models.V1CSIDriverList")]
[JsonSerializableAttribute("k8s.Models.V1CSINode")]
[JsonSerializableAttribute("k8s.Models.V1CSINodeList")]
[JsonSerializableAttribute("k8s.Models.V1CSIStorageCapacity")]
[JsonSerializableAttribute("k8s.Models.V1CSIStorageCapacityList")]
[JsonSerializableAttribute("k8s.Models.V1StorageClass")]
[JsonSerializableAttribute("k8s.Models.V1StorageClassList")]
[JsonSerializableAttribute("k8s.Models.V1VolumeAttachment")]
[JsonSerializableAttribute("k8s.Models.V1VolumeAttachmentList")]
[JsonSerializableAttribute("k8s.Models.V1alpha1VolumeAttributesClass")]
[JsonSerializableAttribute("k8s.Models.V1alpha1VolumeAttributesClassList")]
[JsonSerializableAttribute("k8s.Models.V1beta1VolumeAttributesClass")]
[JsonSerializableAttribute("k8s.Models.V1beta1VolumeAttributesClassList")]
[JsonSerializableAttribute("k8s.Models.V1alpha1StorageVersionMigration")]
[JsonSerializableAttribute("k8s.Models.V1alpha1StorageVersionMigrationList")]
[JsonSerializableAttribute("k8s.Models.V1CustomResourceDefinition")]
[JsonSerializableAttribute("k8s.Models.V1CustomResourceDefinitionList")]
[JsonSerializableAttribute("k8s.Models.V1APIGroup")]
[JsonSerializableAttribute("k8s.Models.V1APIGroupList")]
[JsonSerializableAttribute("k8s.Models.V1APIResourceList")]
[JsonSerializableAttribute("k8s.Models.V1APIVersions")]
[JsonSerializableAttribute("k8s.Models.V1DeleteOptions")]
[JsonSerializableAttribute("k8s.Models.V1Status")]
[JsonSerializableAttribute("k8s.Models.V1APIService")]
[JsonSerializableAttribute("k8s.Models.V1APIServiceList")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.36612")]
internal class k8s.SourceGenerationContext : JsonSerializerContext {
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<bool>> _NullableBoolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Byte[]> _ByteArray;
    [NullableAttribute("2")]
private JsonTypeInfo`1<double> _Double;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<double>> _NullableDouble;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Admissionregistrationv1ServiceReference> _Admissionregistrationv1ServiceReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Admissionregistrationv1WebhookClientConfig> _Admissionregistrationv1WebhookClientConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Apiextensionsv1ServiceReference> _Apiextensionsv1ServiceReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Apiextensionsv1WebhookClientConfig> _Apiextensionsv1WebhookClientConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Apiregistrationv1ServiceReference> _Apiregistrationv1ServiceReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Authenticationv1TokenRequest> _Authenticationv1TokenRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Corev1EndpointPort> _Corev1EndpointPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Corev1Event> _Corev1Event;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Corev1EventList> _Corev1EventList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Corev1EventSeries> _Corev1EventSeries;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Discoveryv1EndpointPort> _Discoveryv1EndpointPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Eventsv1Event> _Eventsv1Event;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Eventsv1EventList> _Eventsv1EventList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Eventsv1EventSeries> _Eventsv1EventSeries;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Flowcontrolv1Subject> _Flowcontrolv1Subject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IntstrIntOrString> _IntstrIntOrString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Rbacv1Subject> _Rbacv1Subject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ResourceQuantity> _ResourceQuantity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Storagev1TokenRequest> _Storagev1TokenRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Affinity> _V1Affinity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AggregationRule> _V1AggregationRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1AuditAnnotation> _V1alpha1AuditAnnotation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ClusterTrustBundle> _V1alpha1ClusterTrustBundle;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ClusterTrustBundleList> _V1alpha1ClusterTrustBundleList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ClusterTrustBundleSpec> _V1alpha1ClusterTrustBundleSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ExpressionWarning> _V1alpha1ExpressionWarning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1GroupVersionResource> _V1alpha1GroupVersionResource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1LeaseCandidate> _V1alpha1LeaseCandidate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1LeaseCandidateList> _V1alpha1LeaseCandidateList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1LeaseCandidateSpec> _V1alpha1LeaseCandidateSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1MatchCondition> _V1alpha1MatchCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1MatchResources> _V1alpha1MatchResources;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1MigrationCondition> _V1alpha1MigrationCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1NamedRuleWithOperations> _V1alpha1NamedRuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ParamKind> _V1alpha1ParamKind;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ParamRef> _V1alpha1ParamRef;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1SelfSubjectReview> _V1alpha1SelfSubjectReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1SelfSubjectReviewStatus> _V1alpha1SelfSubjectReviewStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ServerStorageVersion> _V1alpha1ServerStorageVersion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersion> _V1alpha1StorageVersion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersionCondition> _V1alpha1StorageVersionCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersionList> _V1alpha1StorageVersionList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersionMigration> _V1alpha1StorageVersionMigration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersionMigrationList> _V1alpha1StorageVersionMigrationList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersionMigrationSpec> _V1alpha1StorageVersionMigrationSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersionMigrationStatus> _V1alpha1StorageVersionMigrationStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1StorageVersionStatus> _V1alpha1StorageVersionStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1TypeChecking> _V1alpha1TypeChecking;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicy> _V1alpha1ValidatingAdmissionPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBinding> _V1alpha1ValidatingAdmissionPolicyBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingList> _V1alpha1ValidatingAdmissionPolicyBindingList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingSpec> _V1alpha1ValidatingAdmissionPolicyBindingSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyList> _V1alpha1ValidatingAdmissionPolicyList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicySpec> _V1alpha1ValidatingAdmissionPolicySpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyStatus> _V1alpha1ValidatingAdmissionPolicyStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1Validation> _V1alpha1Validation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1Variable> _V1alpha1Variable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1VolumeAttributesClass> _V1alpha1VolumeAttributesClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha1VolumeAttributesClassList> _V1alpha1VolumeAttributesClassList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3AllocationResult> _V1alpha3AllocationResult;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3BasicDevice> _V1alpha3BasicDevice;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3CELDeviceSelector> _V1alpha3CELDeviceSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3Device> _V1alpha3Device;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceAllocationConfiguration> _V1alpha3DeviceAllocationConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceAllocationResult> _V1alpha3DeviceAllocationResult;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceAttribute> _V1alpha3DeviceAttribute;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceClaim> _V1alpha3DeviceClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceClaimConfiguration> _V1alpha3DeviceClaimConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceClass> _V1alpha3DeviceClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceClassConfiguration> _V1alpha3DeviceClassConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceClassList> _V1alpha3DeviceClassList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceClassSpec> _V1alpha3DeviceClassSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceConstraint> _V1alpha3DeviceConstraint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceRequest> _V1alpha3DeviceRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceRequestAllocationResult> _V1alpha3DeviceRequestAllocationResult;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3DeviceSelector> _V1alpha3DeviceSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3OpaqueDeviceConfiguration> _V1alpha3OpaqueDeviceConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3PodSchedulingContext> _V1alpha3PodSchedulingContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3PodSchedulingContextList> _V1alpha3PodSchedulingContextList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3PodSchedulingContextSpec> _V1alpha3PodSchedulingContextSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3PodSchedulingContextStatus> _V1alpha3PodSchedulingContextStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaim> _V1alpha3ResourceClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimConsumerReference> _V1alpha3ResourceClaimConsumerReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimList> _V1alpha3ResourceClaimList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimSchedulingStatus> _V1alpha3ResourceClaimSchedulingStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimSpec> _V1alpha3ResourceClaimSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimStatus> _V1alpha3ResourceClaimStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimTemplate> _V1alpha3ResourceClaimTemplate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimTemplateList> _V1alpha3ResourceClaimTemplateList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceClaimTemplateSpec> _V1alpha3ResourceClaimTemplateSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourcePool> _V1alpha3ResourcePool;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceSlice> _V1alpha3ResourceSlice;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceSliceList> _V1alpha3ResourceSliceList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1alpha3ResourceSliceSpec> _V1alpha3ResourceSliceSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIGroup> _V1APIGroup;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIGroupList> _V1APIGroupList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIResource> _V1APIResource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIResourceList> _V1APIResourceList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIService> _V1APIService;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIServiceCondition> _V1APIServiceCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIServiceList> _V1APIServiceList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIServiceSpec> _V1APIServiceSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIServiceStatus> _V1APIServiceStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1APIVersions> _V1APIVersions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AppArmorProfile> _V1AppArmorProfile;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AttachedVolume> _V1AttachedVolume;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AuditAnnotation> _V1AuditAnnotation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AWSElasticBlockStoreVolumeSource> _V1AWSElasticBlockStoreVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AzureDiskVolumeSource> _V1AzureDiskVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AzureFilePersistentVolumeSource> _V1AzureFilePersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1AzureFileVolumeSource> _V1AzureFileVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1AuditAnnotation> _V1beta1AuditAnnotation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ExpressionWarning> _V1beta1ExpressionWarning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1IPAddress> _V1beta1IPAddress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1IPAddressList> _V1beta1IPAddressList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1IPAddressSpec> _V1beta1IPAddressSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1MatchCondition> _V1beta1MatchCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1MatchResources> _V1beta1MatchResources;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1NamedRuleWithOperations> _V1beta1NamedRuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ParamKind> _V1beta1ParamKind;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ParamRef> _V1beta1ParamRef;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ParentReference> _V1beta1ParentReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1SelfSubjectReview> _V1beta1SelfSubjectReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1SelfSubjectReviewStatus> _V1beta1SelfSubjectReviewStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ServiceCIDR> _V1beta1ServiceCIDR;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ServiceCIDRList> _V1beta1ServiceCIDRList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ServiceCIDRSpec> _V1beta1ServiceCIDRSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ServiceCIDRStatus> _V1beta1ServiceCIDRStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1TypeChecking> _V1beta1TypeChecking;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicy> _V1beta1ValidatingAdmissionPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBinding> _V1beta1ValidatingAdmissionPolicyBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingList> _V1beta1ValidatingAdmissionPolicyBindingList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingSpec> _V1beta1ValidatingAdmissionPolicyBindingSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyList> _V1beta1ValidatingAdmissionPolicyList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicySpec> _V1beta1ValidatingAdmissionPolicySpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyStatus> _V1beta1ValidatingAdmissionPolicyStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1Validation> _V1beta1Validation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1Variable> _V1beta1Variable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1VolumeAttributesClass> _V1beta1VolumeAttributesClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta1VolumeAttributesClassList> _V1beta1VolumeAttributesClassList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3ExemptPriorityLevelConfiguration> _V1beta3ExemptPriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3FlowDistinguisherMethod> _V1beta3FlowDistinguisherMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3FlowSchema> _V1beta3FlowSchema;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3FlowSchemaCondition> _V1beta3FlowSchemaCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3FlowSchemaList> _V1beta3FlowSchemaList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3FlowSchemaSpec> _V1beta3FlowSchemaSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3FlowSchemaStatus> _V1beta3FlowSchemaStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3GroupSubject> _V1beta3GroupSubject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3LimitedPriorityLevelConfiguration> _V1beta3LimitedPriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3LimitResponse> _V1beta3LimitResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3NonResourcePolicyRule> _V1beta3NonResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3PolicyRulesWithSubjects> _V1beta3PolicyRulesWithSubjects;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3PriorityLevelConfiguration> _V1beta3PriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationCondition> _V1beta3PriorityLevelConfigurationCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationList> _V1beta3PriorityLevelConfigurationList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationReference> _V1beta3PriorityLevelConfigurationReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationSpec> _V1beta3PriorityLevelConfigurationSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationStatus> _V1beta3PriorityLevelConfigurationStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3QueuingConfiguration> _V1beta3QueuingConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3ResourcePolicyRule> _V1beta3ResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3ServiceAccountSubject> _V1beta3ServiceAccountSubject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3Subject> _V1beta3Subject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1beta3UserSubject> _V1beta3UserSubject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Binding> _V1Binding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1BoundObjectReference> _V1BoundObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Capabilities> _V1Capabilities;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CephFSPersistentVolumeSource> _V1CephFSPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CephFSVolumeSource> _V1CephFSVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CertificateSigningRequest> _V1CertificateSigningRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CertificateSigningRequestCondition> _V1CertificateSigningRequestCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CertificateSigningRequestList> _V1CertificateSigningRequestList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CertificateSigningRequestSpec> _V1CertificateSigningRequestSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CertificateSigningRequestStatus> _V1CertificateSigningRequestStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CinderPersistentVolumeSource> _V1CinderPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CinderVolumeSource> _V1CinderVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ClientIPConfig> _V1ClientIPConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ClusterRole> _V1ClusterRole;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ClusterRoleBinding> _V1ClusterRoleBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ClusterRoleBindingList> _V1ClusterRoleBindingList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ClusterRoleList> _V1ClusterRoleList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ClusterTrustBundleProjection> _V1ClusterTrustBundleProjection;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ComponentCondition> _V1ComponentCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ComponentStatus> _V1ComponentStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ComponentStatusList> _V1ComponentStatusList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Condition> _V1Condition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ConfigMap> _V1ConfigMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ConfigMapEnvSource> _V1ConfigMapEnvSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ConfigMapKeySelector> _V1ConfigMapKeySelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ConfigMapList> _V1ConfigMapList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ConfigMapNodeConfigSource> _V1ConfigMapNodeConfigSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ConfigMapProjection> _V1ConfigMapProjection;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ConfigMapVolumeSource> _V1ConfigMapVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Container> _V1Container;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerImage> _V1ContainerImage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerPort> _V1ContainerPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerResizePolicy> _V1ContainerResizePolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerState> _V1ContainerState;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerStateRunning> _V1ContainerStateRunning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerStateTerminated> _V1ContainerStateTerminated;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerStateWaiting> _V1ContainerStateWaiting;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerStatus> _V1ContainerStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ContainerUser> _V1ContainerUser;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ControllerRevision> _V1ControllerRevision;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ControllerRevisionList> _V1ControllerRevisionList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CronJob> _V1CronJob;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CronJobList> _V1CronJobList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CronJobSpec> _V1CronJobSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CronJobStatus> _V1CronJobStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CrossVersionObjectReference> _V1CrossVersionObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSIDriver> _V1CSIDriver;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSIDriverList> _V1CSIDriverList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSIDriverSpec> _V1CSIDriverSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSINode> _V1CSINode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSINodeDriver> _V1CSINodeDriver;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSINodeList> _V1CSINodeList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSINodeSpec> _V1CSINodeSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSIPersistentVolumeSource> _V1CSIPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSIStorageCapacity> _V1CSIStorageCapacity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSIStorageCapacityList> _V1CSIStorageCapacityList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CSIVolumeSource> _V1CSIVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceColumnDefinition> _V1CustomResourceColumnDefinition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceConversion> _V1CustomResourceConversion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceDefinition> _V1CustomResourceDefinition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceDefinitionCondition> _V1CustomResourceDefinitionCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceDefinitionList> _V1CustomResourceDefinitionList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceDefinitionNames> _V1CustomResourceDefinitionNames;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceDefinitionSpec> _V1CustomResourceDefinitionSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceDefinitionStatus> _V1CustomResourceDefinitionStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceDefinitionVersion> _V1CustomResourceDefinitionVersion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceSubresources> _V1CustomResourceSubresources;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceSubresourceScale> _V1CustomResourceSubresourceScale;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1CustomResourceValidation> _V1CustomResourceValidation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DaemonEndpoint> _V1DaemonEndpoint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DaemonSet> _V1DaemonSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DaemonSetCondition> _V1DaemonSetCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DaemonSetList> _V1DaemonSetList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DaemonSetSpec> _V1DaemonSetSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DaemonSetStatus> _V1DaemonSetStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DaemonSetUpdateStrategy> _V1DaemonSetUpdateStrategy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DeleteOptions> _V1DeleteOptions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Deployment> _V1Deployment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DeploymentCondition> _V1DeploymentCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DeploymentList> _V1DeploymentList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DeploymentSpec> _V1DeploymentSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DeploymentStatus> _V1DeploymentStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DeploymentStrategy> _V1DeploymentStrategy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DownwardAPIProjection> _V1DownwardAPIProjection;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DownwardAPIVolumeFile> _V1DownwardAPIVolumeFile;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1DownwardAPIVolumeSource> _V1DownwardAPIVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EmptyDirVolumeSource> _V1EmptyDirVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Endpoint> _V1Endpoint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EndpointAddress> _V1EndpointAddress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EndpointConditions> _V1EndpointConditions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EndpointHints> _V1EndpointHints;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Endpoints> _V1Endpoints;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EndpointSlice> _V1EndpointSlice;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EndpointSliceList> _V1EndpointSliceList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EndpointsList> _V1EndpointsList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EndpointSubset> _V1EndpointSubset;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EnvFromSource> _V1EnvFromSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EnvVar> _V1EnvVar;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EnvVarSource> _V1EnvVarSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EphemeralContainer> _V1EphemeralContainer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EphemeralVolumeSource> _V1EphemeralVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1EventSource> _V1EventSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Eviction> _V1Eviction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ExecAction> _V1ExecAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ExemptPriorityLevelConfiguration> _V1ExemptPriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ExpressionWarning> _V1ExpressionWarning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ExternalDocumentation> _V1ExternalDocumentation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FCVolumeSource> _V1FCVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FieldSelectorAttributes> _V1FieldSelectorAttributes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FieldSelectorRequirement> _V1FieldSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlexPersistentVolumeSource> _V1FlexPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlexVolumeSource> _V1FlexVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlockerVolumeSource> _V1FlockerVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlowDistinguisherMethod> _V1FlowDistinguisherMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlowSchema> _V1FlowSchema;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlowSchemaCondition> _V1FlowSchemaCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlowSchemaList> _V1FlowSchemaList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlowSchemaSpec> _V1FlowSchemaSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1FlowSchemaStatus> _V1FlowSchemaStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ForZone> _V1ForZone;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1GCEPersistentDiskVolumeSource> _V1GCEPersistentDiskVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1GitRepoVolumeSource> _V1GitRepoVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1GlusterfsPersistentVolumeSource> _V1GlusterfsPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1GlusterfsVolumeSource> _V1GlusterfsVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1GroupSubject> _V1GroupSubject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1GroupVersionForDiscovery> _V1GroupVersionForDiscovery;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1GRPCAction> _V1GRPCAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HorizontalPodAutoscaler> _V1HorizontalPodAutoscaler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HorizontalPodAutoscalerList> _V1HorizontalPodAutoscalerList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HorizontalPodAutoscalerSpec> _V1HorizontalPodAutoscalerSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HorizontalPodAutoscalerStatus> _V1HorizontalPodAutoscalerStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HostAlias> _V1HostAlias;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HostIP> _V1HostIP;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HostPathVolumeSource> _V1HostPathVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HTTPGetAction> _V1HTTPGetAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HTTPHeader> _V1HTTPHeader;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HTTPIngressPath> _V1HTTPIngressPath;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1HTTPIngressRuleValue> _V1HTTPIngressRuleValue;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ImageVolumeSource> _V1ImageVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Ingress> _V1Ingress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressBackend> _V1IngressBackend;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressClass> _V1IngressClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressClassList> _V1IngressClassList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressClassParametersReference> _V1IngressClassParametersReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressClassSpec> _V1IngressClassSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressList> _V1IngressList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressLoadBalancerIngress> _V1IngressLoadBalancerIngress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressLoadBalancerStatus> _V1IngressLoadBalancerStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressPortStatus> _V1IngressPortStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressRule> _V1IngressRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressServiceBackend> _V1IngressServiceBackend;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressSpec> _V1IngressSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressStatus> _V1IngressStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IngressTLS> _V1IngressTLS;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1IPBlock> _V1IPBlock;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ISCSIPersistentVolumeSource> _V1ISCSIPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ISCSIVolumeSource> _V1ISCSIVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Job> _V1Job;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1JobCondition> _V1JobCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1JobList> _V1JobList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1JobSpec> _V1JobSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1JobStatus> _V1JobStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1JobTemplateSpec> _V1JobTemplateSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1JSONSchemaProps> _V1JSONSchemaProps;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1KeyToPath> _V1KeyToPath;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LabelSelector> _V1LabelSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LabelSelectorAttributes> _V1LabelSelectorAttributes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LabelSelectorRequirement> _V1LabelSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Lease> _V1Lease;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LeaseList> _V1LeaseList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LeaseSpec> _V1LeaseSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Lifecycle> _V1Lifecycle;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LifecycleHandler> _V1LifecycleHandler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LimitedPriorityLevelConfiguration> _V1LimitedPriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LimitRange> _V1LimitRange;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LimitRangeItem> _V1LimitRangeItem;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LimitRangeList> _V1LimitRangeList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LimitRangeSpec> _V1LimitRangeSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LimitResponse> _V1LimitResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LinuxContainerUser> _V1LinuxContainerUser;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ListMeta> _V1ListMeta;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LoadBalancerIngress> _V1LoadBalancerIngress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LoadBalancerStatus> _V1LoadBalancerStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LocalObjectReference> _V1LocalObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LocalSubjectAccessReview> _V1LocalSubjectAccessReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1LocalVolumeSource> _V1LocalVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ManagedFieldsEntry> _V1ManagedFieldsEntry;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1MatchCondition> _V1MatchCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1MatchResources> _V1MatchResources;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ModifyVolumeStatus> _V1ModifyVolumeStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1MutatingWebhook> _V1MutatingWebhook;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1MutatingWebhookConfiguration> _V1MutatingWebhookConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1MutatingWebhookConfigurationList> _V1MutatingWebhookConfigurationList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NamedRuleWithOperations> _V1NamedRuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Namespace> _V1Namespace;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NamespaceCondition> _V1NamespaceCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NamespaceList> _V1NamespaceList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NamespaceSpec> _V1NamespaceSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NamespaceStatus> _V1NamespaceStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NetworkPolicy> _V1NetworkPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NetworkPolicyEgressRule> _V1NetworkPolicyEgressRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NetworkPolicyIngressRule> _V1NetworkPolicyIngressRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NetworkPolicyList> _V1NetworkPolicyList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NetworkPolicyPeer> _V1NetworkPolicyPeer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NetworkPolicyPort> _V1NetworkPolicyPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NetworkPolicySpec> _V1NetworkPolicySpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NFSVolumeSource> _V1NFSVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Node> _V1Node;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeAddress> _V1NodeAddress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeAffinity> _V1NodeAffinity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeCondition> _V1NodeCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeConfigSource> _V1NodeConfigSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeConfigStatus> _V1NodeConfigStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeDaemonEndpoints> _V1NodeDaemonEndpoints;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeFeatures> _V1NodeFeatures;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeList> _V1NodeList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeRuntimeHandler> _V1NodeRuntimeHandler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeRuntimeHandlerFeatures> _V1NodeRuntimeHandlerFeatures;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeSelector> _V1NodeSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeSelectorRequirement> _V1NodeSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeSelectorTerm> _V1NodeSelectorTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeSpec> _V1NodeSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeStatus> _V1NodeStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NodeSystemInfo> _V1NodeSystemInfo;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NonResourceAttributes> _V1NonResourceAttributes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NonResourcePolicyRule> _V1NonResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1NonResourceRule> _V1NonResourceRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ObjectFieldSelector> _V1ObjectFieldSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ObjectMeta> _V1ObjectMeta;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ObjectReference> _V1ObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Overhead> _V1Overhead;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1OwnerReference> _V1OwnerReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ParamKind> _V1ParamKind;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ParamRef> _V1ParamRef;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolume> _V1PersistentVolume;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeClaim> _V1PersistentVolumeClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeClaimCondition> _V1PersistentVolumeClaimCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeClaimList> _V1PersistentVolumeClaimList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeClaimSpec> _V1PersistentVolumeClaimSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeClaimStatus> _V1PersistentVolumeClaimStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeClaimTemplate> _V1PersistentVolumeClaimTemplate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeClaimVolumeSource> _V1PersistentVolumeClaimVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeList> _V1PersistentVolumeList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeSpec> _V1PersistentVolumeSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PersistentVolumeStatus> _V1PersistentVolumeStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PhotonPersistentDiskVolumeSource> _V1PhotonPersistentDiskVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Pod> _V1Pod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodAffinity> _V1PodAffinity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodAffinityTerm> _V1PodAffinityTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodAntiAffinity> _V1PodAntiAffinity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodCondition> _V1PodCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodDisruptionBudget> _V1PodDisruptionBudget;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodDisruptionBudgetList> _V1PodDisruptionBudgetList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodDisruptionBudgetSpec> _V1PodDisruptionBudgetSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodDisruptionBudgetStatus> _V1PodDisruptionBudgetStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodDNSConfig> _V1PodDNSConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodDNSConfigOption> _V1PodDNSConfigOption;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodFailurePolicy> _V1PodFailurePolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodFailurePolicyOnExitCodesRequirement> _V1PodFailurePolicyOnExitCodesRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodFailurePolicyOnPodConditionsPattern> _V1PodFailurePolicyOnPodConditionsPattern;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodFailurePolicyRule> _V1PodFailurePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodIP> _V1PodIP;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodList> _V1PodList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodOS> _V1PodOS;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodReadinessGate> _V1PodReadinessGate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodResourceClaim> _V1PodResourceClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodResourceClaimStatus> _V1PodResourceClaimStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodSchedulingGate> _V1PodSchedulingGate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodSecurityContext> _V1PodSecurityContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodSpec> _V1PodSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodStatus> _V1PodStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodTemplate> _V1PodTemplate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodTemplateList> _V1PodTemplateList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PodTemplateSpec> _V1PodTemplateSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PolicyRule> _V1PolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PolicyRulesWithSubjects> _V1PolicyRulesWithSubjects;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PortStatus> _V1PortStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PortworxVolumeSource> _V1PortworxVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Preconditions> _V1Preconditions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PreferredSchedulingTerm> _V1PreferredSchedulingTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityClass> _V1PriorityClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityClassList> _V1PriorityClassList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityLevelConfiguration> _V1PriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityLevelConfigurationCondition> _V1PriorityLevelConfigurationCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityLevelConfigurationList> _V1PriorityLevelConfigurationList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityLevelConfigurationReference> _V1PriorityLevelConfigurationReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityLevelConfigurationSpec> _V1PriorityLevelConfigurationSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1PriorityLevelConfigurationStatus> _V1PriorityLevelConfigurationStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Probe> _V1Probe;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ProjectedVolumeSource> _V1ProjectedVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1QueuingConfiguration> _V1QueuingConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1QuobyteVolumeSource> _V1QuobyteVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RBDPersistentVolumeSource> _V1RBDPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RBDVolumeSource> _V1RBDVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicaSet> _V1ReplicaSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicaSetCondition> _V1ReplicaSetCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicaSetList> _V1ReplicaSetList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicaSetSpec> _V1ReplicaSetSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicaSetStatus> _V1ReplicaSetStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicationController> _V1ReplicationController;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicationControllerCondition> _V1ReplicationControllerCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicationControllerList> _V1ReplicationControllerList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicationControllerSpec> _V1ReplicationControllerSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ReplicationControllerStatus> _V1ReplicationControllerStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceAttributes> _V1ResourceAttributes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceClaim> _V1ResourceClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceFieldSelector> _V1ResourceFieldSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceHealth> _V1ResourceHealth;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourcePolicyRule> _V1ResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceQuota> _V1ResourceQuota;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceQuotaList> _V1ResourceQuotaList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceQuotaSpec> _V1ResourceQuotaSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceQuotaStatus> _V1ResourceQuotaStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceRequirements> _V1ResourceRequirements;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceRule> _V1ResourceRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ResourceStatus> _V1ResourceStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Role> _V1Role;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RoleBinding> _V1RoleBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RoleBindingList> _V1RoleBindingList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RoleList> _V1RoleList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RoleRef> _V1RoleRef;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RollingUpdateDaemonSet> _V1RollingUpdateDaemonSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RollingUpdateDeployment> _V1RollingUpdateDeployment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RollingUpdateStatefulSetStrategy> _V1RollingUpdateStatefulSetStrategy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RuleWithOperations> _V1RuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RuntimeClass> _V1RuntimeClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1RuntimeClassList> _V1RuntimeClassList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Scale> _V1Scale;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ScaleIOPersistentVolumeSource> _V1ScaleIOPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ScaleIOVolumeSource> _V1ScaleIOVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ScaleSpec> _V1ScaleSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ScaleStatus> _V1ScaleStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Scheduling> _V1Scheduling;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ScopedResourceSelectorRequirement> _V1ScopedResourceSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ScopeSelector> _V1ScopeSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SeccompProfile> _V1SeccompProfile;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Secret> _V1Secret;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SecretEnvSource> _V1SecretEnvSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SecretKeySelector> _V1SecretKeySelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SecretList> _V1SecretList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SecretProjection> _V1SecretProjection;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SecretReference> _V1SecretReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SecretVolumeSource> _V1SecretVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SecurityContext> _V1SecurityContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SelectableField> _V1SelectableField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SelfSubjectAccessReview> _V1SelfSubjectAccessReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SelfSubjectAccessReviewSpec> _V1SelfSubjectAccessReviewSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SelfSubjectReview> _V1SelfSubjectReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SelfSubjectReviewStatus> _V1SelfSubjectReviewStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SelfSubjectRulesReview> _V1SelfSubjectRulesReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SelfSubjectRulesReviewSpec> _V1SelfSubjectRulesReviewSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SELinuxOptions> _V1SELinuxOptions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServerAddressByClientCIDR> _V1ServerAddressByClientCIDR;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Service> _V1Service;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceAccount> _V1ServiceAccount;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceAccountList> _V1ServiceAccountList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceAccountSubject> _V1ServiceAccountSubject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceAccountTokenProjection> _V1ServiceAccountTokenProjection;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceBackendPort> _V1ServiceBackendPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceList> _V1ServiceList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServicePort> _V1ServicePort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceSpec> _V1ServiceSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ServiceStatus> _V1ServiceStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SessionAffinityConfig> _V1SessionAffinityConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SleepAction> _V1SleepAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSet> _V1StatefulSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSetCondition> _V1StatefulSetCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSetList> _V1StatefulSetList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSetOrdinals> _V1StatefulSetOrdinals;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSetPersistentVolumeClaimRetentionPolicy> _V1StatefulSetPersistentVolumeClaimRetentionPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSetSpec> _V1StatefulSetSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSetStatus> _V1StatefulSetStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatefulSetUpdateStrategy> _V1StatefulSetUpdateStrategy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Status> _V1Status;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatusCause> _V1StatusCause;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StatusDetails> _V1StatusDetails;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StorageClass> _V1StorageClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StorageClassList> _V1StorageClassList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StorageOSPersistentVolumeSource> _V1StorageOSPersistentVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1StorageOSVolumeSource> _V1StorageOSVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SubjectAccessReview> _V1SubjectAccessReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SubjectAccessReviewSpec> _V1SubjectAccessReviewSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SubjectAccessReviewStatus> _V1SubjectAccessReviewStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SubjectRulesReviewStatus> _V1SubjectRulesReviewStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SuccessPolicy> _V1SuccessPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1SuccessPolicyRule> _V1SuccessPolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Sysctl> _V1Sysctl;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Taint> _V1Taint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TCPSocketAction> _V1TCPSocketAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TokenRequestSpec> _V1TokenRequestSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TokenRequestStatus> _V1TokenRequestStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TokenReview> _V1TokenReview;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TokenReviewSpec> _V1TokenReviewSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TokenReviewStatus> _V1TokenReviewStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Toleration> _V1Toleration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TopologySelectorLabelRequirement> _V1TopologySelectorLabelRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TopologySelectorTerm> _V1TopologySelectorTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TopologySpreadConstraint> _V1TopologySpreadConstraint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TypeChecking> _V1TypeChecking;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TypedLocalObjectReference> _V1TypedLocalObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1TypedObjectReference> _V1TypedObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1UncountedTerminatedPods> _V1UncountedTerminatedPods;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1UserInfo> _V1UserInfo;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1UserSubject> _V1UserSubject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingAdmissionPolicy> _V1ValidatingAdmissionPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingAdmissionPolicyBinding> _V1ValidatingAdmissionPolicyBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingList> _V1ValidatingAdmissionPolicyBindingList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingSpec> _V1ValidatingAdmissionPolicyBindingSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingAdmissionPolicyList> _V1ValidatingAdmissionPolicyList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingAdmissionPolicySpec> _V1ValidatingAdmissionPolicySpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingAdmissionPolicyStatus> _V1ValidatingAdmissionPolicyStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingWebhook> _V1ValidatingWebhook;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingWebhookConfiguration> _V1ValidatingWebhookConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidatingWebhookConfigurationList> _V1ValidatingWebhookConfigurationList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Validation> _V1Validation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1ValidationRule> _V1ValidationRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Variable> _V1Variable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1Volume> _V1Volume;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeAttachment> _V1VolumeAttachment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeAttachmentList> _V1VolumeAttachmentList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeAttachmentSource> _V1VolumeAttachmentSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeAttachmentSpec> _V1VolumeAttachmentSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeAttachmentStatus> _V1VolumeAttachmentStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeDevice> _V1VolumeDevice;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeError> _V1VolumeError;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeMount> _V1VolumeMount;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeMountStatus> _V1VolumeMountStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeNodeAffinity> _V1VolumeNodeAffinity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeNodeResources> _V1VolumeNodeResources;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeProjection> _V1VolumeProjection;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VolumeResourceRequirements> _V1VolumeResourceRequirements;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1VsphereVirtualDiskVolumeSource> _V1VsphereVirtualDiskVolumeSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1WebhookConversion> _V1WebhookConversion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1WeightedPodAffinityTerm> _V1WeightedPodAffinityTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V1WindowsSecurityContextOptions> _V1WindowsSecurityContextOptions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ContainerResourceMetricSource> _V2ContainerResourceMetricSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ContainerResourceMetricStatus> _V2ContainerResourceMetricStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2CrossVersionObjectReference> _V2CrossVersionObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ExternalMetricSource> _V2ExternalMetricSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ExternalMetricStatus> _V2ExternalMetricStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HorizontalPodAutoscaler> _V2HorizontalPodAutoscaler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HorizontalPodAutoscalerBehavior> _V2HorizontalPodAutoscalerBehavior;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HorizontalPodAutoscalerCondition> _V2HorizontalPodAutoscalerCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HorizontalPodAutoscalerList> _V2HorizontalPodAutoscalerList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HorizontalPodAutoscalerSpec> _V2HorizontalPodAutoscalerSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HorizontalPodAutoscalerStatus> _V2HorizontalPodAutoscalerStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HPAScalingPolicy> _V2HPAScalingPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2HPAScalingRules> _V2HPAScalingRules;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2MetricIdentifier> _V2MetricIdentifier;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2MetricSpec> _V2MetricSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2MetricStatus> _V2MetricStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2MetricTarget> _V2MetricTarget;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2MetricValueStatus> _V2MetricValueStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ObjectMetricSource> _V2ObjectMetricSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ObjectMetricStatus> _V2ObjectMetricStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2PodsMetricSource> _V2PodsMetricSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2PodsMetricStatus> _V2PodsMetricStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ResourceMetricSource> _V2ResourceMetricSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<V2ResourceMetricStatus> _V2ResourceMetricStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, Byte[]>> _IDictionaryStringByteArray;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, ResourceQuantity>> _IDictionaryStringResourceQuantity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, V1alpha3DeviceAttribute>> _IDictionaryStringV1alpha3DeviceAttribute;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, V1JSONSchemaProps>> _IDictionaryStringV1JSONSchemaProps;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, IList`1<string>>> _IDictionaryStringIListString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, Nullable`1<DateTime>>> _IDictionaryStringNullableDateTime;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, object>> _IDictionaryStringObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, string>> _IDictionaryStringString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Corev1EndpointPort>> _IListCorev1EndpointPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Corev1Event>> _IListCorev1Event;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Discoveryv1EndpointPort>> _IListDiscoveryv1EndpointPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Eventsv1Event>> _IListEventsv1Event;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Flowcontrolv1Subject>> _IListFlowcontrolv1Subject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Rbacv1Subject>> _IListRbacv1Subject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Storagev1TokenRequest>> _IListStoragev1TokenRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1AuditAnnotation>> _IListV1alpha1AuditAnnotation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1ClusterTrustBundle>> _IListV1alpha1ClusterTrustBundle;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1ExpressionWarning>> _IListV1alpha1ExpressionWarning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1LeaseCandidate>> _IListV1alpha1LeaseCandidate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1MatchCondition>> _IListV1alpha1MatchCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1MigrationCondition>> _IListV1alpha1MigrationCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1NamedRuleWithOperations>> _IListV1alpha1NamedRuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1ServerStorageVersion>> _IListV1alpha1ServerStorageVersion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1StorageVersion>> _IListV1alpha1StorageVersion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1StorageVersionCondition>> _IListV1alpha1StorageVersionCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1StorageVersionMigration>> _IListV1alpha1StorageVersionMigration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicy>> _IListV1alpha1ValidatingAdmissionPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicyBinding>> _IListV1alpha1ValidatingAdmissionPolicyBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1Validation>> _IListV1alpha1Validation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1Variable>> _IListV1alpha1Variable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha1VolumeAttributesClass>> _IListV1alpha1VolumeAttributesClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3Device>> _IListV1alpha3Device;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceAllocationConfiguration>> _IListV1alpha3DeviceAllocationConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceClaimConfiguration>> _IListV1alpha3DeviceClaimConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceClass>> _IListV1alpha3DeviceClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceClassConfiguration>> _IListV1alpha3DeviceClassConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceConstraint>> _IListV1alpha3DeviceConstraint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceRequest>> _IListV1alpha3DeviceRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceRequestAllocationResult>> _IListV1alpha3DeviceRequestAllocationResult;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3DeviceSelector>> _IListV1alpha3DeviceSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3PodSchedulingContext>> _IListV1alpha3PodSchedulingContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaim>> _IListV1alpha3ResourceClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimConsumerReference>> _IListV1alpha3ResourceClaimConsumerReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimSchedulingStatus>> _IListV1alpha3ResourceClaimSchedulingStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimTemplate>> _IListV1alpha3ResourceClaimTemplate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1alpha3ResourceSlice>> _IListV1alpha3ResourceSlice;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1APIGroup>> _IListV1APIGroup;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1APIResource>> _IListV1APIResource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1APIService>> _IListV1APIService;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1APIServiceCondition>> _IListV1APIServiceCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1AttachedVolume>> _IListV1AttachedVolume;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1AuditAnnotation>> _IListV1AuditAnnotation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1AuditAnnotation>> _IListV1beta1AuditAnnotation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1ExpressionWarning>> _IListV1beta1ExpressionWarning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1IPAddress>> _IListV1beta1IPAddress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1MatchCondition>> _IListV1beta1MatchCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1NamedRuleWithOperations>> _IListV1beta1NamedRuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1ServiceCIDR>> _IListV1beta1ServiceCIDR;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicy>> _IListV1beta1ValidatingAdmissionPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicyBinding>> _IListV1beta1ValidatingAdmissionPolicyBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1Validation>> _IListV1beta1Validation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1Variable>> _IListV1beta1Variable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta1VolumeAttributesClass>> _IListV1beta1VolumeAttributesClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3FlowSchema>> _IListV1beta3FlowSchema;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3FlowSchemaCondition>> _IListV1beta3FlowSchemaCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3NonResourcePolicyRule>> _IListV1beta3NonResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3PolicyRulesWithSubjects>> _IListV1beta3PolicyRulesWithSubjects;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfiguration>> _IListV1beta3PriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfigurationCondition>> _IListV1beta3PriorityLevelConfigurationCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3ResourcePolicyRule>> _IListV1beta3ResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1beta3Subject>> _IListV1beta3Subject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CertificateSigningRequest>> _IListV1CertificateSigningRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CertificateSigningRequestCondition>> _IListV1CertificateSigningRequestCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ClusterRole>> _IListV1ClusterRole;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ClusterRoleBinding>> _IListV1ClusterRoleBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ComponentCondition>> _IListV1ComponentCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ComponentStatus>> _IListV1ComponentStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Condition>> _IListV1Condition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ConfigMap>> _IListV1ConfigMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Container>> _IListV1Container;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ContainerImage>> _IListV1ContainerImage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ContainerPort>> _IListV1ContainerPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ContainerResizePolicy>> _IListV1ContainerResizePolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ContainerStatus>> _IListV1ContainerStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ControllerRevision>> _IListV1ControllerRevision;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CronJob>> _IListV1CronJob;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CSIDriver>> _IListV1CSIDriver;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CSINode>> _IListV1CSINode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CSINodeDriver>> _IListV1CSINodeDriver;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CSIStorageCapacity>> _IListV1CSIStorageCapacity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CustomResourceColumnDefinition>> _IListV1CustomResourceColumnDefinition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CustomResourceDefinition>> _IListV1CustomResourceDefinition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionCondition>> _IListV1CustomResourceDefinitionCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionVersion>> _IListV1CustomResourceDefinitionVersion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1DaemonSet>> _IListV1DaemonSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1DaemonSetCondition>> _IListV1DaemonSetCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Deployment>> _IListV1Deployment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1DeploymentCondition>> _IListV1DeploymentCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1DownwardAPIVolumeFile>> _IListV1DownwardAPIVolumeFile;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Endpoint>> _IListV1Endpoint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1EndpointAddress>> _IListV1EndpointAddress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Endpoints>> _IListV1Endpoints;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1EndpointSlice>> _IListV1EndpointSlice;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1EndpointSubset>> _IListV1EndpointSubset;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1EnvFromSource>> _IListV1EnvFromSource;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1EnvVar>> _IListV1EnvVar;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1EphemeralContainer>> _IListV1EphemeralContainer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ExpressionWarning>> _IListV1ExpressionWarning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1FieldSelectorRequirement>> _IListV1FieldSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1FlowSchema>> _IListV1FlowSchema;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1FlowSchemaCondition>> _IListV1FlowSchemaCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ForZone>> _IListV1ForZone;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1GroupVersionForDiscovery>> _IListV1GroupVersionForDiscovery;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1HorizontalPodAutoscaler>> _IListV1HorizontalPodAutoscaler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1HostAlias>> _IListV1HostAlias;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1HostIP>> _IListV1HostIP;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1HTTPHeader>> _IListV1HTTPHeader;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1HTTPIngressPath>> _IListV1HTTPIngressPath;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Ingress>> _IListV1Ingress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1IngressClass>> _IListV1IngressClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1IngressLoadBalancerIngress>> _IListV1IngressLoadBalancerIngress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1IngressPortStatus>> _IListV1IngressPortStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1IngressRule>> _IListV1IngressRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1IngressTLS>> _IListV1IngressTLS;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Job>> _IListV1Job;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1JobCondition>> _IListV1JobCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1JSONSchemaProps>> _IListV1JSONSchemaProps;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1KeyToPath>> _IListV1KeyToPath;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1LabelSelector>> _IListV1LabelSelector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1LabelSelectorRequirement>> _IListV1LabelSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Lease>> _IListV1Lease;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1LimitRange>> _IListV1LimitRange;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1LimitRangeItem>> _IListV1LimitRangeItem;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1LoadBalancerIngress>> _IListV1LoadBalancerIngress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1LocalObjectReference>> _IListV1LocalObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ManagedFieldsEntry>> _IListV1ManagedFieldsEntry;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1MatchCondition>> _IListV1MatchCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1MutatingWebhook>> _IListV1MutatingWebhook;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1MutatingWebhookConfiguration>> _IListV1MutatingWebhookConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NamedRuleWithOperations>> _IListV1NamedRuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Namespace>> _IListV1Namespace;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NamespaceCondition>> _IListV1NamespaceCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NetworkPolicy>> _IListV1NetworkPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NetworkPolicyEgressRule>> _IListV1NetworkPolicyEgressRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NetworkPolicyIngressRule>> _IListV1NetworkPolicyIngressRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NetworkPolicyPeer>> _IListV1NetworkPolicyPeer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NetworkPolicyPort>> _IListV1NetworkPolicyPort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Node>> _IListV1Node;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NodeAddress>> _IListV1NodeAddress;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NodeCondition>> _IListV1NodeCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NodeRuntimeHandler>> _IListV1NodeRuntimeHandler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NodeSelectorRequirement>> _IListV1NodeSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NodeSelectorTerm>> _IListV1NodeSelectorTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NonResourcePolicyRule>> _IListV1NonResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1NonResourceRule>> _IListV1NonResourceRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ObjectReference>> _IListV1ObjectReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1OwnerReference>> _IListV1OwnerReference;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PersistentVolume>> _IListV1PersistentVolume;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PersistentVolumeClaim>> _IListV1PersistentVolumeClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PersistentVolumeClaimCondition>> _IListV1PersistentVolumeClaimCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Pod>> _IListV1Pod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodAffinityTerm>> _IListV1PodAffinityTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodCondition>> _IListV1PodCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodDisruptionBudget>> _IListV1PodDisruptionBudget;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodDNSConfigOption>> _IListV1PodDNSConfigOption;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodFailurePolicyOnPodConditionsPattern>> _IListV1PodFailurePolicyOnPodConditionsPattern;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodFailurePolicyRule>> _IListV1PodFailurePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodIP>> _IListV1PodIP;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodReadinessGate>> _IListV1PodReadinessGate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodResourceClaim>> _IListV1PodResourceClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodResourceClaimStatus>> _IListV1PodResourceClaimStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodSchedulingGate>> _IListV1PodSchedulingGate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PodTemplate>> _IListV1PodTemplate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PolicyRule>> _IListV1PolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PolicyRulesWithSubjects>> _IListV1PolicyRulesWithSubjects;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PortStatus>> _IListV1PortStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PreferredSchedulingTerm>> _IListV1PreferredSchedulingTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PriorityClass>> _IListV1PriorityClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PriorityLevelConfiguration>> _IListV1PriorityLevelConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1PriorityLevelConfigurationCondition>> _IListV1PriorityLevelConfigurationCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ReplicaSet>> _IListV1ReplicaSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ReplicaSetCondition>> _IListV1ReplicaSetCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ReplicationController>> _IListV1ReplicationController;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ReplicationControllerCondition>> _IListV1ReplicationControllerCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ResourceClaim>> _IListV1ResourceClaim;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ResourceHealth>> _IListV1ResourceHealth;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ResourcePolicyRule>> _IListV1ResourcePolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ResourceQuota>> _IListV1ResourceQuota;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ResourceRule>> _IListV1ResourceRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ResourceStatus>> _IListV1ResourceStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Role>> _IListV1Role;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1RoleBinding>> _IListV1RoleBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1RuleWithOperations>> _IListV1RuleWithOperations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1RuntimeClass>> _IListV1RuntimeClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ScopedResourceSelectorRequirement>> _IListV1ScopedResourceSelectorRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Secret>> _IListV1Secret;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1SelectableField>> _IListV1SelectableField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ServerAddressByClientCIDR>> _IListV1ServerAddressByClientCIDR;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Service>> _IListV1Service;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ServiceAccount>> _IListV1ServiceAccount;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ServicePort>> _IListV1ServicePort;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1StatefulSet>> _IListV1StatefulSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1StatefulSetCondition>> _IListV1StatefulSetCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1StatusCause>> _IListV1StatusCause;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1StorageClass>> _IListV1StorageClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1SuccessPolicyRule>> _IListV1SuccessPolicyRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Sysctl>> _IListV1Sysctl;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Taint>> _IListV1Taint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Toleration>> _IListV1Toleration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1TopologySelectorLabelRequirement>> _IListV1TopologySelectorLabelRequirement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1TopologySelectorTerm>> _IListV1TopologySelectorTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1TopologySpreadConstraint>> _IListV1TopologySpreadConstraint;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicy>> _IListV1ValidatingAdmissionPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicyBinding>> _IListV1ValidatingAdmissionPolicyBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ValidatingWebhook>> _IListV1ValidatingWebhook;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ValidatingWebhookConfiguration>> _IListV1ValidatingWebhookConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Validation>> _IListV1Validation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1ValidationRule>> _IListV1ValidationRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Variable>> _IListV1Variable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1Volume>> _IListV1Volume;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1VolumeAttachment>> _IListV1VolumeAttachment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1VolumeDevice>> _IListV1VolumeDevice;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1VolumeMount>> _IListV1VolumeMount;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1VolumeMountStatus>> _IListV1VolumeMountStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1VolumeProjection>> _IListV1VolumeProjection;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V1WeightedPodAffinityTerm>> _IListV1WeightedPodAffinityTerm;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscaler>> _IListV2HorizontalPodAutoscaler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscalerCondition>> _IListV2HorizontalPodAutoscalerCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V2HPAScalingPolicy>> _IListV2HPAScalingPolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V2MetricSpec>> _IListV2MetricSpec;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<V2MetricStatus>> _IListV2MetricStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<int>> _IListInt32;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Nullable`1<long>>> _IListNullableInt64;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<object>> _IListObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<string>> _IListString;
    [NullableAttribute("2")]
private JsonTypeInfo`1<DateTime> _DateTime;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<DateTime>> _NullableDateTime;
    [NullableAttribute("2")]
private JsonTypeInfo`1<int> _Int32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<int>> _NullableInt32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<long> _Int64;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<long>> _NullableInt64;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<object> _Object;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static SourceGenerationContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_name;
    private static JsonEncodedText PropName_namespace;
    private static JsonEncodedText PropName_path;
    private static JsonEncodedText PropName_port;
    private static JsonEncodedText PropName_caBundle;
    private static JsonEncodedText PropName_service;
    private static JsonEncodedText PropName_url;
    private static JsonEncodedText PropName_apiVersion;
    private static JsonEncodedText PropName_kind;
    private static JsonEncodedText PropName_metadata;
    private static JsonEncodedText PropName_spec;
    private static JsonEncodedText PropName_status;
    private static JsonEncodedText PropName_appProtocol;
    private static JsonEncodedText PropName_protocol;
    private static JsonEncodedText PropName_action;
    private static JsonEncodedText PropName_count;
    private static JsonEncodedText PropName_eventTime;
    private static JsonEncodedText PropName_firstTimestamp;
    private static JsonEncodedText PropName_involvedObject;
    private static JsonEncodedText PropName_lastTimestamp;
    private static JsonEncodedText PropName_message;
    private static JsonEncodedText PropName_reason;
    private static JsonEncodedText PropName_related;
    private static JsonEncodedText PropName_reportingComponent;
    private static JsonEncodedText PropName_reportingInstance;
    private static JsonEncodedText PropName_series;
    private static JsonEncodedText PropName_source;
    private static JsonEncodedText PropName_type;
    private static JsonEncodedText PropName_items;
    private static JsonEncodedText PropName_lastObservedTime;
    private static JsonEncodedText PropName_deprecatedCount;
    private static JsonEncodedText PropName_deprecatedFirstTimestamp;
    private static JsonEncodedText PropName_deprecatedLastTimestamp;
    private static JsonEncodedText PropName_deprecatedSource;
    private static JsonEncodedText PropName_note;
    private static JsonEncodedText PropName_regarding;
    private static JsonEncodedText PropName_reportingController;
    private static JsonEncodedText PropName_group;
    private static JsonEncodedText PropName_serviceAccount;
    private static JsonEncodedText PropName_user;
    private static JsonEncodedText PropName_apiGroup;
    private static JsonEncodedText PropName_audience;
    private static JsonEncodedText PropName_expirationSeconds;
    private static JsonEncodedText PropName_nodeAffinity;
    private static JsonEncodedText PropName_podAffinity;
    private static JsonEncodedText PropName_podAntiAffinity;
    private static JsonEncodedText PropName_clusterRoleSelectors;
    private static JsonEncodedText PropName_key;
    private static JsonEncodedText PropName_valueExpression;
    private static JsonEncodedText PropName_signerName;
    private static JsonEncodedText PropName_trustBundle;
    private static JsonEncodedText PropName_fieldRef;
    private static JsonEncodedText PropName_warning;
    private static JsonEncodedText PropName_resource;
    private static JsonEncodedText PropName_version;
    private static JsonEncodedText PropName_binaryVersion;
    private static JsonEncodedText PropName_emulationVersion;
    private static JsonEncodedText PropName_leaseName;
    private static JsonEncodedText PropName_pingTime;
    private static JsonEncodedText PropName_preferredStrategies;
    private static JsonEncodedText PropName_renewTime;
    private static JsonEncodedText PropName_expression;
    private static JsonEncodedText PropName_excludeResourceRules;
    private static JsonEncodedText PropName_matchPolicy;
    private static JsonEncodedText PropName_namespaceSelector;
    private static JsonEncodedText PropName_objectSelector;
    private static JsonEncodedText PropName_resourceRules;
    private static JsonEncodedText PropName_lastUpdateTime;
    private static JsonEncodedText PropName_apiGroups;
    private static JsonEncodedText PropName_apiVersions;
    private static JsonEncodedText PropName_operations;
    private static JsonEncodedText PropName_resourceNames;
    private static JsonEncodedText PropName_resources;
    private static JsonEncodedText PropName_scope;
    private static JsonEncodedText PropName_parameterNotFoundAction;
    private static JsonEncodedText PropName_selector;
    private static JsonEncodedText PropName_userInfo;
    private static JsonEncodedText PropName_apiServerID;
    private static JsonEncodedText PropName_decodableVersions;
    private static JsonEncodedText PropName_encodingVersion;
    private static JsonEncodedText PropName_servedVersions;
    private static JsonEncodedText PropName_lastTransitionTime;
    private static JsonEncodedText PropName_observedGeneration;
    private static JsonEncodedText PropName_continueToken;
    private static JsonEncodedText PropName_conditions;
    private static JsonEncodedText PropName_resourceVersion;
    private static JsonEncodedText PropName_commonEncodingVersion;
    private static JsonEncodedText PropName_storageVersions;
    private static JsonEncodedText PropName_expressionWarnings;
    private static JsonEncodedText PropName_matchResources;
    private static JsonEncodedText PropName_paramRef;
    private static JsonEncodedText PropName_policyName;
    private static JsonEncodedText PropName_validationActions;
    private static JsonEncodedText PropName_auditAnnotations;
    private static JsonEncodedText PropName_failurePolicy;
    private static JsonEncodedText PropName_matchConditions;
    private static JsonEncodedText PropName_matchConstraints;
    private static JsonEncodedText PropName_paramKind;
    private static JsonEncodedText PropName_validations;
    private static JsonEncodedText PropName_variables;
    private static JsonEncodedText PropName_typeChecking;
    private static JsonEncodedText PropName_messageExpression;
    private static JsonEncodedText PropName_driverName;
    private static JsonEncodedText PropName_parameters;
    private static JsonEncodedText PropName_controller;
    private static JsonEncodedText PropName_devices;
    private static JsonEncodedText PropName_nodeSelector;
    private static JsonEncodedText PropName_attributes;
    private static JsonEncodedText PropName_capacity;
    private static JsonEncodedText PropName_basic;
    private static JsonEncodedText PropName_opaque;
    private static JsonEncodedText PropName_requests;
    private static JsonEncodedText PropName_config;
    private static JsonEncodedText PropName_results;
    private static JsonEncodedText PropName_bool;
    private static JsonEncodedText PropName_int;
    private static JsonEncodedText PropName_string;
    private static JsonEncodedText PropName_constraints;
    private static JsonEncodedText PropName_selectors;
    private static JsonEncodedText PropName_suitableNodes;
    private static JsonEncodedText PropName_matchAttribute;
    private static JsonEncodedText PropName_adminAccess;
    private static JsonEncodedText PropName_allocationMode;
    private static JsonEncodedText PropName_deviceClassName;
    private static JsonEncodedText PropName_device;
    private static JsonEncodedText PropName_driver;
    private static JsonEncodedText PropName_pool;
    private static JsonEncodedText PropName_request;
    private static JsonEncodedText PropName_cel;
    private static JsonEncodedText PropName_potentialNodes;
    private static JsonEncodedText PropName_selectedNode;
    private static JsonEncodedText PropName_resourceClaims;
    private static JsonEncodedText PropName_uid;
    private static JsonEncodedText PropName_unsuitableNodes;
    private static JsonEncodedText PropName_allocation;
    private static JsonEncodedText PropName_deallocationRequested;
    private static JsonEncodedText PropName_reservedFor;
    private static JsonEncodedText PropName_generation;
    private static JsonEncodedText PropName_resourceSliceCount;
    private static JsonEncodedText PropName_listMeta;
    private static JsonEncodedText PropName_allNodes;
    private static JsonEncodedText PropName_nodeName;
    private static JsonEncodedText PropName_preferredVersion;
    private static JsonEncodedText PropName_serverAddressByClientCIDRs;
    private static JsonEncodedText PropName_versions;
    private static JsonEncodedText PropName_groups;
    private static JsonEncodedText PropName_categories;
    private static JsonEncodedText PropName_namespaced;
    private static JsonEncodedText PropName_shortNames;
    private static JsonEncodedText PropName_singularName;
    private static JsonEncodedText PropName_storageVersionHash;
    private static JsonEncodedText PropName_verbs;
    private static JsonEncodedText PropName_groupVersion;
    private static JsonEncodedText PropName_groupPriorityMinimum;
    private static JsonEncodedText PropName_insecureSkipTLSVerify;
    private static JsonEncodedText PropName_versionPriority;
    private static JsonEncodedText PropName_localhostProfile;
    private static JsonEncodedText PropName_devicePath;
    private static JsonEncodedText PropName_fsType;
    private static JsonEncodedText PropName_partition;
    private static JsonEncodedText PropName_readOnly;
    private static JsonEncodedText PropName_volumeID;
    private static JsonEncodedText PropName_cachingMode;
    private static JsonEncodedText PropName_diskName;
    private static JsonEncodedText PropName_diskURI;
    private static JsonEncodedText PropName_secretName;
    private static JsonEncodedText PropName_secretNamespace;
    private static JsonEncodedText PropName_shareName;
    private static JsonEncodedText PropName_parentRef;
    private static JsonEncodedText PropName_cidrs;
    private static JsonEncodedText PropName_lendablePercent;
    private static JsonEncodedText PropName_nominalConcurrencyShares;
    private static JsonEncodedText PropName_distinguisherMethod;
    private static JsonEncodedText PropName_matchingPrecedence;
    private static JsonEncodedText PropName_priorityLevelConfiguration;
    private static JsonEncodedText PropName_rules;
    private static JsonEncodedText PropName_borrowingLimitPercent;
    private static JsonEncodedText PropName_limitResponse;
    private static JsonEncodedText PropName_queuing;
    private static JsonEncodedText PropName_nonResourceURLs;
    private static JsonEncodedText PropName_nonResourceRules;
    private static JsonEncodedText PropName_subjects;
    private static JsonEncodedText PropName_exempt;
    private static JsonEncodedText PropName_limited;
    private static JsonEncodedText PropName_handSize;
    private static JsonEncodedText PropName_queueLengthLimit;
    private static JsonEncodedText PropName_queues;
    private static JsonEncodedText PropName_clusterScope;
    private static JsonEncodedText PropName_namespaces;
    private static JsonEncodedText PropName_target;
    private static JsonEncodedText PropName_add;
    private static JsonEncodedText PropName_drop;
    private static JsonEncodedText PropName_monitors;
    private static JsonEncodedText PropName_secretFile;
    private static JsonEncodedText PropName_secretRef;
    private static JsonEncodedText PropName_extra;
    private static JsonEncodedText PropName_usages;
    private static JsonEncodedText PropName_username;
    private static JsonEncodedText PropName_certificate;
    private static JsonEncodedText PropName_timeoutSeconds;
    private static JsonEncodedText PropName_aggregationRule;
    private static JsonEncodedText PropName_roleRef;
    private static JsonEncodedText PropName_labelSelector;
    private static JsonEncodedText PropName_optional;
    private static JsonEncodedText PropName_error;
    private static JsonEncodedText PropName_binaryData;
    private static JsonEncodedText PropName_data;
    private static JsonEncodedText PropName_immutable;
    private static JsonEncodedText PropName_kubeletConfigKey;
    private static JsonEncodedText PropName_defaultMode;
    private static JsonEncodedText PropName_args;
    private static JsonEncodedText PropName_command;
    private static JsonEncodedText PropName_env;
    private static JsonEncodedText PropName_envFrom;
    private static JsonEncodedText PropName_image;
    private static JsonEncodedText PropName_imagePullPolicy;
    private static JsonEncodedText PropName_lifecycle;
    private static JsonEncodedText PropName_livenessProbe;
    private static JsonEncodedText PropName_ports;
    private static JsonEncodedText PropName_readinessProbe;
    private static JsonEncodedText PropName_resizePolicy;
    private static JsonEncodedText PropName_restartPolicy;
    private static JsonEncodedText PropName_securityContext;
    private static JsonEncodedText PropName_startupProbe;
    private static JsonEncodedText PropName_stdin;
    private static JsonEncodedText PropName_stdinOnce;
    private static JsonEncodedText PropName_terminationMessagePath;
    private static JsonEncodedText PropName_terminationMessagePolicy;
    private static JsonEncodedText PropName_tty;
    private static JsonEncodedText PropName_volumeDevices;
    private static JsonEncodedText PropName_volumeMounts;
    private static JsonEncodedText PropName_workingDir;
    private static JsonEncodedText PropName_names;
    private static JsonEncodedText PropName_sizeBytes;
    private static JsonEncodedText PropName_containerPort;
    private static JsonEncodedText PropName_hostIP;
    private static JsonEncodedText PropName_hostPort;
    private static JsonEncodedText PropName_resourceName;
    private static JsonEncodedText PropName_running;
    private static JsonEncodedText PropName_terminated;
    private static JsonEncodedText PropName_waiting;
    private static JsonEncodedText PropName_startedAt;
    private static JsonEncodedText PropName_containerID;
    private static JsonEncodedText PropName_exitCode;
    private static JsonEncodedText PropName_finishedAt;
    private static JsonEncodedText PropName_signal;
    private static JsonEncodedText PropName_allocatedResources;
    private static JsonEncodedText PropName_allocatedResourcesStatus;
    private static JsonEncodedText PropName_imageID;
    private static JsonEncodedText PropName_lastState;
    private static JsonEncodedText PropName_ready;
    private static JsonEncodedText PropName_restartCount;
    private static JsonEncodedText PropName_started;
    private static JsonEncodedText PropName_state;
    private static JsonEncodedText PropName_linux;
    private static JsonEncodedText PropName_concurrencyPolicy;
    private static JsonEncodedText PropName_failedJobsHistoryLimit;
    private static JsonEncodedText PropName_jobTemplate;
    private static JsonEncodedText PropName_schedule;
    private static JsonEncodedText PropName_startingDeadlineSeconds;
    private static JsonEncodedText PropName_successfulJobsHistoryLimit;
    private static JsonEncodedText PropName_suspend;
    private static JsonEncodedText PropName_timeZone;
    private static JsonEncodedText PropName_active;
    private static JsonEncodedText PropName_lastScheduleTime;
    private static JsonEncodedText PropName_lastSuccessfulTime;
    private static JsonEncodedText PropName_attachRequired;
    private static JsonEncodedText PropName_fsGroupPolicy;
    private static JsonEncodedText PropName_podInfoOnMount;
    private static JsonEncodedText PropName_requiresRepublish;
    private static JsonEncodedText PropName_seLinuxMount;
    private static JsonEncodedText PropName_storageCapacity;
    private static JsonEncodedText PropName_tokenRequests;
    private static JsonEncodedText PropName_volumeLifecycleModes;
    private static JsonEncodedText PropName_allocatable;
    private static JsonEncodedText PropName_nodeID;
    private static JsonEncodedText PropName_topologyKeys;
    private static JsonEncodedText PropName_drivers;
    private static JsonEncodedText PropName_controllerExpandSecretRef;
    private static JsonEncodedText PropName_controllerPublishSecretRef;
    private static JsonEncodedText PropName_nodeExpandSecretRef;
    private static JsonEncodedText PropName_nodePublishSecretRef;
    private static JsonEncodedText PropName_nodeStageSecretRef;
    private static JsonEncodedText PropName_volumeAttributes;
    private static JsonEncodedText PropName_volumeHandle;
    private static JsonEncodedText PropName_maximumVolumeSize;
    private static JsonEncodedText PropName_nodeTopology;
    private static JsonEncodedText PropName_storageClassName;
    private static JsonEncodedText PropName_description;
    private static JsonEncodedText PropName_format;
    private static JsonEncodedText PropName_jsonPath;
    private static JsonEncodedText PropName_priority;
    private static JsonEncodedText PropName_strategy;
    private static JsonEncodedText PropName_webhook;
    private static JsonEncodedText PropName_listKind;
    private static JsonEncodedText PropName_plural;
    private static JsonEncodedText PropName_singular;
    private static JsonEncodedText PropName_conversion;
    private static JsonEncodedText PropName_preserveUnknownFields;
    private static JsonEncodedText PropName_acceptedNames;
    private static JsonEncodedText PropName_storedVersions;
    private static JsonEncodedText PropName_additionalPrinterColumns;
    private static JsonEncodedText PropName_deprecated;
    private static JsonEncodedText PropName_deprecationWarning;
    private static JsonEncodedText PropName_schema;
    private static JsonEncodedText PropName_selectableFields;
    private static JsonEncodedText PropName_served;
    private static JsonEncodedText PropName_storage;
    private static JsonEncodedText PropName_subresources;
    private static JsonEncodedText PropName_labelSelectorPath;
    private static JsonEncodedText PropName_specReplicasPath;
    private static JsonEncodedText PropName_statusReplicasPath;
    private static JsonEncodedText PropName_openAPIV3Schema;
    private static JsonEncodedText PropName_Port;
    private static JsonEncodedText PropName_minReadySeconds;
    private static JsonEncodedText PropName_revisionHistoryLimit;
    private static JsonEncodedText PropName_template;
    private static JsonEncodedText PropName_updateStrategy;
    private static JsonEncodedText PropName_collisionCount;
    private static JsonEncodedText PropName_currentNumberScheduled;
    private static JsonEncodedText PropName_desiredNumberScheduled;
    private static JsonEncodedText PropName_numberAvailable;
    private static JsonEncodedText PropName_numberMisscheduled;
    private static JsonEncodedText PropName_numberReady;
    private static JsonEncodedText PropName_numberUnavailable;
    private static JsonEncodedText PropName_updatedNumberScheduled;
    private static JsonEncodedText PropName_rollingUpdate;
    private static JsonEncodedText PropName_dryRun;
    private static JsonEncodedText PropName_gracePeriodSeconds;
    private static JsonEncodedText PropName_orphanDependents;
    private static JsonEncodedText PropName_preconditions;
    private static JsonEncodedText PropName_propagationPolicy;
    private static JsonEncodedText PropName_paused;
    private static JsonEncodedText PropName_progressDeadlineSeconds;
    private static JsonEncodedText PropName_replicas;
    private static JsonEncodedText PropName_availableReplicas;
    private static JsonEncodedText PropName_readyReplicas;
    private static JsonEncodedText PropName_unavailableReplicas;
    private static JsonEncodedText PropName_updatedReplicas;
    private static JsonEncodedText PropName_mode;
    private static JsonEncodedText PropName_resourceFieldRef;
    private static JsonEncodedText PropName_medium;
    private static JsonEncodedText PropName_sizeLimit;
    private static JsonEncodedText PropName_addresses;
    private static JsonEncodedText PropName_deprecatedTopology;
    private static JsonEncodedText PropName_hints;
    private static JsonEncodedText PropName_hostname;
    private static JsonEncodedText PropName_targetRef;
    private static JsonEncodedText PropName_zone;
    private static JsonEncodedText PropName_ip;
    private static JsonEncodedText PropName_serving;
    private static JsonEncodedText PropName_terminating;
    private static JsonEncodedText PropName_forZones;
    private static JsonEncodedText PropName_subsets;
    private static JsonEncodedText PropName_addressType;
    private static JsonEncodedText PropName_endpoints;
    private static JsonEncodedText PropName_notReadyAddresses;
    private static JsonEncodedText PropName_configMapRef;
    private static JsonEncodedText PropName_prefix;
    private static JsonEncodedText PropName_value;
    private static JsonEncodedText PropName_valueFrom;
    private static JsonEncodedText PropName_configMapKeyRef;
    private static JsonEncodedText PropName_secretKeyRef;
    private static JsonEncodedText PropName_targetContainerName;
    private static JsonEncodedText PropName_volumeClaimTemplate;
    private static JsonEncodedText PropName_component;
    private static JsonEncodedText PropName_host;
    private static JsonEncodedText PropName_deleteOptions;
    private static JsonEncodedText PropName_lun;
    private static JsonEncodedText PropName_targetWWNs;
    private static JsonEncodedText PropName_wwids;
    private static JsonEncodedText PropName_rawSelector;
    private static JsonEncodedText PropName_requirements;
    private static JsonEncodedText PropName_operator;
    private static JsonEncodedText PropName_values;
    private static JsonEncodedText PropName_options;
    private static JsonEncodedText PropName_datasetName;
    private static JsonEncodedText PropName_datasetUUID;
    private static JsonEncodedText PropName_pdName;
    private static JsonEncodedText PropName_directory;
    private static JsonEncodedText PropName_repository;
    private static JsonEncodedText PropName_revision;
    private static JsonEncodedText PropName_endpointsNamespace;
    private static JsonEncodedText PropName_maxReplicas;
    private static JsonEncodedText PropName_minReplicas;
    private static JsonEncodedText PropName_scaleTargetRef;
    private static JsonEncodedText PropName_targetCPUUtilizationPercentage;
    private static JsonEncodedText PropName_currentCPUUtilizationPercentage;
    private static JsonEncodedText PropName_currentReplicas;
    private static JsonEncodedText PropName_desiredReplicas;
    private static JsonEncodedText PropName_lastScaleTime;
    private static JsonEncodedText PropName_hostnames;
    private static JsonEncodedText PropName_httpHeaders;
    private static JsonEncodedText PropName_scheme;
    private static JsonEncodedText PropName_backend;
    private static JsonEncodedText PropName_pathType;
    private static JsonEncodedText PropName_paths;
    private static JsonEncodedText PropName_pullPolicy;
    private static JsonEncodedText PropName_reference;
    private static JsonEncodedText PropName_ingress;
    private static JsonEncodedText PropName_http;
    private static JsonEncodedText PropName_defaultBackend;
    private static JsonEncodedText PropName_ingressClassName;
    private static JsonEncodedText PropName_tls;
    private static JsonEncodedText PropName_loadBalancer;
    private static JsonEncodedText PropName_hosts;
    private static JsonEncodedText PropName_cidr;
    private static JsonEncodedText PropName_except;
    private static JsonEncodedText PropName_chapAuthDiscovery;
    private static JsonEncodedText PropName_chapAuthSession;
    private static JsonEncodedText PropName_initiatorName;
    private static JsonEncodedText PropName_iqn;
    private static JsonEncodedText PropName_iscsiInterface;
    private static JsonEncodedText PropName_portals;
    private static JsonEncodedText PropName_targetPortal;
    private static JsonEncodedText PropName_lastProbeTime;
    private static JsonEncodedText PropName_activeDeadlineSeconds;
    private static JsonEncodedText PropName_backoffLimit;
    private static JsonEncodedText PropName_backoffLimitPerIndex;
    private static JsonEncodedText PropName_completionMode;
    private static JsonEncodedText PropName_completions;
    private static JsonEncodedText PropName_managedBy;
    private static JsonEncodedText PropName_manualSelector;
    private static JsonEncodedText PropName_maxFailedIndexes;
    private static JsonEncodedText PropName_parallelism;
    private static JsonEncodedText PropName_podFailurePolicy;
    private static JsonEncodedText PropName_podReplacementPolicy;
    private static JsonEncodedText PropName_successPolicy;
    private static JsonEncodedText PropName_ttlSecondsAfterFinished;
    private static JsonEncodedText PropName_completedIndexes;
    private static JsonEncodedText PropName_completionTime;
    private static JsonEncodedText PropName_failed;
    private static JsonEncodedText PropName_failedIndexes;
    private static JsonEncodedText PropName_startTime;
    private static JsonEncodedText PropName_succeeded;
    private static JsonEncodedText PropName_uncountedTerminatedPods;
    private static JsonEncodedText PropName_matchExpressions;
    private static JsonEncodedText PropName_matchLabels;
    private static JsonEncodedText PropName_acquireTime;
    private static JsonEncodedText PropName_holderIdentity;
    private static JsonEncodedText PropName_leaseDurationSeconds;
    private static JsonEncodedText PropName_leaseTransitions;
    private static JsonEncodedText PropName_preferredHolder;
    private static JsonEncodedText PropName_postStart;
    private static JsonEncodedText PropName_preStop;
    private static JsonEncodedText PropName_exec;
    private static JsonEncodedText PropName_httpGet;
    private static JsonEncodedText PropName_sleep;
    private static JsonEncodedText PropName_tcpSocket;
    private static JsonEncodedText PropName_default;
    private static JsonEncodedText PropName_defaultRequest;
    private static JsonEncodedText PropName_max;
    private static JsonEncodedText PropName_maxLimitRequestRatio;
    private static JsonEncodedText PropName_min;
    private static JsonEncodedText PropName_limits;
    private static JsonEncodedText PropName_gid;
    private static JsonEncodedText PropName_supplementalGroups;
    private static JsonEncodedText PropName_continue;
    private static JsonEncodedText PropName_remainingItemCount;
    private static JsonEncodedText PropName_selfLink;
    private static JsonEncodedText PropName_ipMode;
    private static JsonEncodedText PropName_targetVolumeAttributesClassName;
    private static JsonEncodedText PropName_admissionReviewVersions;
    private static JsonEncodedText PropName_clientConfig;
    private static JsonEncodedText PropName_reinvocationPolicy;
    private static JsonEncodedText PropName_sideEffects;
    private static JsonEncodedText PropName_webhooks;
    private static JsonEncodedText PropName_finalizers;
    private static JsonEncodedText PropName_phase;
    private static JsonEncodedText PropName_to;
    private static JsonEncodedText PropName_from;
    private static JsonEncodedText PropName_ipBlock;
    private static JsonEncodedText PropName_podSelector;
    private static JsonEncodedText PropName_endPort;
    private static JsonEncodedText PropName_egress;
    private static JsonEncodedText PropName_policyTypes;
    private static JsonEncodedText PropName_server;
    private static JsonEncodedText PropName_address;
    private static JsonEncodedText PropName_preferredDuringSchedulingIgnoredDuringExecution;
    private static JsonEncodedText PropName_requiredDuringSchedulingIgnoredDuringExecution;
    private static JsonEncodedText PropName_lastHeartbeatTime;
    private static JsonEncodedText PropName_configMap;
    private static JsonEncodedText PropName_assigned;
    private static JsonEncodedText PropName_lastKnownGood;
    private static JsonEncodedText PropName_kubeletEndpoint;
    private static JsonEncodedText PropName_supplementalGroupsPolicy;
    private static JsonEncodedText PropName_features;
    private static JsonEncodedText PropName_recursiveReadOnlyMounts;
    private static JsonEncodedText PropName_userNamespaces;
    private static JsonEncodedText PropName_nodeSelectorTerms;
    private static JsonEncodedText PropName_matchFields;
    private static JsonEncodedText PropName_configSource;
    private static JsonEncodedText PropName_externalID;
    private static JsonEncodedText PropName_podCIDR;
    private static JsonEncodedText PropName_podCIDRs;
    private static JsonEncodedText PropName_providerID;
    private static JsonEncodedText PropName_taints;
    private static JsonEncodedText PropName_unschedulable;
    private static JsonEncodedText PropName_daemonEndpoints;
    private static JsonEncodedText PropName_images;
    private static JsonEncodedText PropName_nodeInfo;
    private static JsonEncodedText PropName_runtimeHandlers;
    private static JsonEncodedText PropName_volumesAttached;
    private static JsonEncodedText PropName_volumesInUse;
    private static JsonEncodedText PropName_architecture;
    private static JsonEncodedText PropName_bootID;
    private static JsonEncodedText PropName_containerRuntimeVersion;
    private static JsonEncodedText PropName_kernelVersion;
    private static JsonEncodedText PropName_kubeProxyVersion;
    private static JsonEncodedText PropName_kubeletVersion;
    private static JsonEncodedText PropName_machineID;
    private static JsonEncodedText PropName_operatingSystem;
    private static JsonEncodedText PropName_osImage;
    private static JsonEncodedText PropName_systemUUID;
    private static JsonEncodedText PropName_verb;
    private static JsonEncodedText PropName_fieldPath;
    private static JsonEncodedText PropName_annotations;
    private static JsonEncodedText PropName_creationTimestamp;
    private static JsonEncodedText PropName_deletionGracePeriodSeconds;
    private static JsonEncodedText PropName_deletionTimestamp;
    private static JsonEncodedText PropName_generateName;
    private static JsonEncodedText PropName_labels;
    private static JsonEncodedText PropName_managedFields;
    private static JsonEncodedText PropName_ownerReferences;
    private static JsonEncodedText PropName_podFixed;
    private static JsonEncodedText PropName_blockOwnerDeletion;
    private static JsonEncodedText PropName_accessModes;
    private static JsonEncodedText PropName_dataSource;
    private static JsonEncodedText PropName_dataSourceRef;
    private static JsonEncodedText PropName_volumeAttributesClassName;
    private static JsonEncodedText PropName_volumeMode;
    private static JsonEncodedText PropName_volumeName;
    private static JsonEncodedText PropName_allocatedResourceStatuses;
    private static JsonEncodedText PropName_currentVolumeAttributesClassName;
    private static JsonEncodedText PropName_modifyVolumeStatus;
    private static JsonEncodedText PropName_claimName;
    private static JsonEncodedText PropName_awsElasticBlockStore;
    private static JsonEncodedText PropName_azureDisk;
    private static JsonEncodedText PropName_azureFile;
    private static JsonEncodedText PropName_cephfs;
    private static JsonEncodedText PropName_cinder;
    private static JsonEncodedText PropName_claimRef;
    private static JsonEncodedText PropName_csi;
    private static JsonEncodedText PropName_fc;
    private static JsonEncodedText PropName_flexVolume;
    private static JsonEncodedText PropName_flocker;
    private static JsonEncodedText PropName_gcePersistentDisk;
    private static JsonEncodedText PropName_glusterfs;
    private static JsonEncodedText PropName_hostPath;
    private static JsonEncodedText PropName_iscsi;
    private static JsonEncodedText PropName_local;
    private static JsonEncodedText PropName_mountOptions;
    private static JsonEncodedText PropName_nfs;
    private static JsonEncodedText PropName_persistentVolumeReclaimPolicy;
    private static JsonEncodedText PropName_photonPersistentDisk;
    private static JsonEncodedText PropName_portworxVolume;
    private static JsonEncodedText PropName_quobyte;
    private static JsonEncodedText PropName_rbd;
    private static JsonEncodedText PropName_scaleIO;
    private static JsonEncodedText PropName_storageos;
    private static JsonEncodedText PropName_vsphereVolume;
    private static JsonEncodedText PropName_lastPhaseTransitionTime;
    private static JsonEncodedText PropName_pdID;
    private static JsonEncodedText PropName_matchLabelKeys;
    private static JsonEncodedText PropName_mismatchLabelKeys;
    private static JsonEncodedText PropName_topologyKey;
    private static JsonEncodedText PropName_maxUnavailable;
    private static JsonEncodedText PropName_minAvailable;
    private static JsonEncodedText PropName_unhealthyPodEvictionPolicy;
    private static JsonEncodedText PropName_currentHealthy;
    private static JsonEncodedText PropName_desiredHealthy;
    private static JsonEncodedText PropName_disruptedPods;
    private static JsonEncodedText PropName_disruptionsAllowed;
    private static JsonEncodedText PropName_expectedPods;
    private static JsonEncodedText PropName_nameservers;
    private static JsonEncodedText PropName_searches;
    private static JsonEncodedText PropName_containerName;
    private static JsonEncodedText PropName_onExitCodes;
    private static JsonEncodedText PropName_onPodConditions;
    private static JsonEncodedText PropName_conditionType;
    private static JsonEncodedText PropName_resourceClaimName;
    private static JsonEncodedText PropName_resourceClaimTemplateName;
    private static JsonEncodedText PropName_appArmorProfile;
    private static JsonEncodedText PropName_fsGroup;
    private static JsonEncodedText PropName_fsGroupChangePolicy;
    private static JsonEncodedText PropName_runAsGroup;
    private static JsonEncodedText PropName_runAsNonRoot;
    private static JsonEncodedText PropName_runAsUser;
    private static JsonEncodedText PropName_seLinuxOptions;
    private static JsonEncodedText PropName_seccompProfile;
    private static JsonEncodedText PropName_sysctls;
    private static JsonEncodedText PropName_windowsOptions;
    private static JsonEncodedText PropName_affinity;
    private static JsonEncodedText PropName_automountServiceAccountToken;
    private static JsonEncodedText PropName_containers;
    private static JsonEncodedText PropName_dnsConfig;
    private static JsonEncodedText PropName_dnsPolicy;
    private static JsonEncodedText PropName_enableServiceLinks;
    private static JsonEncodedText PropName_ephemeralContainers;
    private static JsonEncodedText PropName_hostAliases;
    private static JsonEncodedText PropName_hostIPC;
    private static JsonEncodedText PropName_hostNetwork;
    private static JsonEncodedText PropName_hostPID;
    private static JsonEncodedText PropName_hostUsers;
    private static JsonEncodedText PropName_imagePullSecrets;
    private static JsonEncodedText PropName_initContainers;
    private static JsonEncodedText PropName_os;
    private static JsonEncodedText PropName_overhead;
    private static JsonEncodedText PropName_preemptionPolicy;
    private static JsonEncodedText PropName_priorityClassName;
    private static JsonEncodedText PropName_readinessGates;
    private static JsonEncodedText PropName_runtimeClassName;
    private static JsonEncodedText PropName_schedulerName;
    private static JsonEncodedText PropName_schedulingGates;
    private static JsonEncodedText PropName_serviceAccountName;
    private static JsonEncodedText PropName_setHostnameAsFQDN;
    private static JsonEncodedText PropName_shareProcessNamespace;
    private static JsonEncodedText PropName_subdomain;
    private static JsonEncodedText PropName_terminationGracePeriodSeconds;
    private static JsonEncodedText PropName_tolerations;
    private static JsonEncodedText PropName_topologySpreadConstraints;
    private static JsonEncodedText PropName_volumes;
    private static JsonEncodedText PropName_containerStatuses;
    private static JsonEncodedText PropName_ephemeralContainerStatuses;
    private static JsonEncodedText PropName_hostIPs;
    private static JsonEncodedText PropName_initContainerStatuses;
    private static JsonEncodedText PropName_nominatedNodeName;
    private static JsonEncodedText PropName_podIP;
    private static JsonEncodedText PropName_podIPs;
    private static JsonEncodedText PropName_qosClass;
    private static JsonEncodedText PropName_resize;
    private static JsonEncodedText PropName_resourceClaimStatuses;
    private static JsonEncodedText PropName_preference;
    private static JsonEncodedText PropName_weight;
    private static JsonEncodedText PropName_globalDefault;
    private static JsonEncodedText PropName_failureThreshold;
    private static JsonEncodedText PropName_grpc;
    private static JsonEncodedText PropName_initialDelaySeconds;
    private static JsonEncodedText PropName_periodSeconds;
    private static JsonEncodedText PropName_successThreshold;
    private static JsonEncodedText PropName_sources;
    private static JsonEncodedText PropName_registry;
    private static JsonEncodedText PropName_tenant;
    private static JsonEncodedText PropName_volume;
    private static JsonEncodedText PropName_keyring;
    private static JsonEncodedText PropName_fullyLabeledReplicas;
    private static JsonEncodedText PropName_fieldSelector;
    private static JsonEncodedText PropName_subresource;
    private static JsonEncodedText PropName_divisor;
    private static JsonEncodedText PropName_health;
    private static JsonEncodedText PropName_resourceID;
    private static JsonEncodedText PropName_hard;
    private static JsonEncodedText PropName_scopeSelector;
    private static JsonEncodedText PropName_scopes;
    private static JsonEncodedText PropName_used;
    private static JsonEncodedText PropName_claims;
    private static JsonEncodedText PropName_maxSurge;
    private static JsonEncodedText PropName_handler;
    private static JsonEncodedText PropName_scheduling;
    private static JsonEncodedText PropName_gateway;
    private static JsonEncodedText PropName_protectionDomain;
    private static JsonEncodedText PropName_sslEnabled;
    private static JsonEncodedText PropName_storageMode;
    private static JsonEncodedText PropName_storagePool;
    private static JsonEncodedText PropName_system;
    private static JsonEncodedText PropName_scopeName;
    private static JsonEncodedText PropName_stringData;
    private static JsonEncodedText PropName_allowPrivilegeEscalation;
    private static JsonEncodedText PropName_capabilities;
    private static JsonEncodedText PropName_privileged;
    private static JsonEncodedText PropName_procMount;
    private static JsonEncodedText PropName_readOnlyRootFilesystem;
    private static JsonEncodedText PropName_nonResourceAttributes;
    private static JsonEncodedText PropName_resourceAttributes;
    private static JsonEncodedText PropName_level;
    private static JsonEncodedText PropName_role;
    private static JsonEncodedText PropName_clientCIDR;
    private static JsonEncodedText PropName_serverAddress;
    private static JsonEncodedText PropName_secrets;
    private static JsonEncodedText PropName_number;
    private static JsonEncodedText PropName_nodePort;
    private static JsonEncodedText PropName_targetPort;
    private static JsonEncodedText PropName_allocateLoadBalancerNodePorts;
    private static JsonEncodedText PropName_clusterIP;
    private static JsonEncodedText PropName_clusterIPs;
    private static JsonEncodedText PropName_externalIPs;
    private static JsonEncodedText PropName_externalName;
    private static JsonEncodedText PropName_externalTrafficPolicy;
    private static JsonEncodedText PropName_healthCheckNodePort;
    private static JsonEncodedText PropName_internalTrafficPolicy;
    private static JsonEncodedText PropName_ipFamilies;
    private static JsonEncodedText PropName_ipFamilyPolicy;
    private static JsonEncodedText PropName_loadBalancerClass;
    private static JsonEncodedText PropName_loadBalancerIP;
    private static JsonEncodedText PropName_loadBalancerSourceRanges;
    private static JsonEncodedText PropName_publishNotReadyAddresses;
    private static JsonEncodedText PropName_sessionAffinity;
    private static JsonEncodedText PropName_sessionAffinityConfig;
    private static JsonEncodedText PropName_trafficDistribution;
    private static JsonEncodedText PropName_clientIP;
    private static JsonEncodedText PropName_seconds;
    private static JsonEncodedText PropName_start;
    private static JsonEncodedText PropName_whenDeleted;
    private static JsonEncodedText PropName_whenScaled;
    private static JsonEncodedText PropName_ordinals;
    private static JsonEncodedText PropName_persistentVolumeClaimRetentionPolicy;
    private static JsonEncodedText PropName_podManagementPolicy;
    private static JsonEncodedText PropName_serviceName;
    private static JsonEncodedText PropName_volumeClaimTemplates;
    private static JsonEncodedText PropName_currentRevision;
    private static JsonEncodedText PropName_updateRevision;
    private static JsonEncodedText PropName_HasObject;
    private static JsonEncodedText PropName_code;
    private static JsonEncodedText PropName_details;
    private static JsonEncodedText PropName_field;
    private static JsonEncodedText PropName_causes;
    private static JsonEncodedText PropName_retryAfterSeconds;
    private static JsonEncodedText PropName_allowVolumeExpansion;
    private static JsonEncodedText PropName_allowedTopologies;
    private static JsonEncodedText PropName_provisioner;
    private static JsonEncodedText PropName_reclaimPolicy;
    private static JsonEncodedText PropName_volumeBindingMode;
    private static JsonEncodedText PropName_volumeNamespace;
    private static JsonEncodedText PropName_allowed;
    private static JsonEncodedText PropName_denied;
    private static JsonEncodedText PropName_evaluationError;
    private static JsonEncodedText PropName_incomplete;
    private static JsonEncodedText PropName_succeededCount;
    private static JsonEncodedText PropName_succeededIndexes;
    private static JsonEncodedText PropName_effect;
    private static JsonEncodedText PropName_timeAdded;
    private static JsonEncodedText PropName_audiences;
    private static JsonEncodedText PropName_boundObjectRef;
    private static JsonEncodedText PropName_expirationTimestamp;
    private static JsonEncodedText PropName_token;
    private static JsonEncodedText PropName_authenticated;
    private static JsonEncodedText PropName_tolerationSeconds;
    private static JsonEncodedText PropName_matchLabelExpressions;
    private static JsonEncodedText PropName_maxSkew;
    private static JsonEncodedText PropName_minDomains;
    private static JsonEncodedText PropName_nodeAffinityPolicy;
    private static JsonEncodedText PropName_nodeTaintsPolicy;
    private static JsonEncodedText PropName_whenUnsatisfiable;
    private static JsonEncodedText PropName_optionalOldSelf;
    private static JsonEncodedText PropName_rule;
    private static JsonEncodedText PropName_downwardAPI;
    private static JsonEncodedText PropName_emptyDir;
    private static JsonEncodedText PropName_ephemeral;
    private static JsonEncodedText PropName_gitRepo;
    private static JsonEncodedText PropName_persistentVolumeClaim;
    private static JsonEncodedText PropName_projected;
    private static JsonEncodedText PropName_secret;
    private static JsonEncodedText PropName_inlineVolumeSpec;
    private static JsonEncodedText PropName_persistentVolumeName;
    private static JsonEncodedText PropName_attacher;
    private static JsonEncodedText PropName_attachError;
    private static JsonEncodedText PropName_attached;
    private static JsonEncodedText PropName_attachmentMetadata;
    private static JsonEncodedText PropName_detachError;
    private static JsonEncodedText PropName_time;
    private static JsonEncodedText PropName_mountPath;
    private static JsonEncodedText PropName_mountPropagation;
    private static JsonEncodedText PropName_recursiveReadOnly;
    private static JsonEncodedText PropName_subPath;
    private static JsonEncodedText PropName_subPathExpr;
    private static JsonEncodedText PropName_required;
    private static JsonEncodedText PropName_clusterTrustBundle;
    private static JsonEncodedText PropName_serviceAccountToken;
    private static JsonEncodedText PropName_storagePolicyID;
    private static JsonEncodedText PropName_storagePolicyName;
    private static JsonEncodedText PropName_volumePath;
    private static JsonEncodedText PropName_conversionReviewVersions;
    private static JsonEncodedText PropName_podAffinityTerm;
    private static JsonEncodedText PropName_gmsaCredentialSpec;
    private static JsonEncodedText PropName_gmsaCredentialSpecName;
    private static JsonEncodedText PropName_hostProcess;
    private static JsonEncodedText PropName_runAsUserName;
    private static JsonEncodedText PropName_container;
    private static JsonEncodedText PropName_current;
    private static JsonEncodedText PropName_metric;
    private static JsonEncodedText PropName_scaleDown;
    private static JsonEncodedText PropName_scaleUp;
    private static JsonEncodedText PropName_behavior;
    private static JsonEncodedText PropName_metrics;
    private static JsonEncodedText PropName_currentMetrics;
    private static JsonEncodedText PropName_policies;
    private static JsonEncodedText PropName_selectPolicy;
    private static JsonEncodedText PropName_stabilizationWindowSeconds;
    private static JsonEncodedText PropName_containerResource;
    private static JsonEncodedText PropName_external;
    private static JsonEncodedText PropName_object;
    private static JsonEncodedText PropName_pods;
    private static JsonEncodedText PropName_averageUtilization;
    private static JsonEncodedText PropName_averageValue;
    private static JsonEncodedText PropName_describedObject;
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<Nullable`1<bool>> NullableBoolean { get; }
    public JsonTypeInfo`1<Byte[]> ByteArray { get; }
    public JsonTypeInfo`1<double> Double { get; }
    public JsonTypeInfo`1<Nullable`1<double>> NullableDouble { get; }
    public JsonTypeInfo`1<Admissionregistrationv1ServiceReference> Admissionregistrationv1ServiceReference { get; }
    public JsonTypeInfo`1<Admissionregistrationv1WebhookClientConfig> Admissionregistrationv1WebhookClientConfig { get; }
    public JsonTypeInfo`1<Apiextensionsv1ServiceReference> Apiextensionsv1ServiceReference { get; }
    public JsonTypeInfo`1<Apiextensionsv1WebhookClientConfig> Apiextensionsv1WebhookClientConfig { get; }
    public JsonTypeInfo`1<Apiregistrationv1ServiceReference> Apiregistrationv1ServiceReference { get; }
    public JsonTypeInfo`1<Authenticationv1TokenRequest> Authenticationv1TokenRequest { get; }
    public JsonTypeInfo`1<Corev1EndpointPort> Corev1EndpointPort { get; }
    public JsonTypeInfo`1<Corev1Event> Corev1Event { get; }
    public JsonTypeInfo`1<Corev1EventList> Corev1EventList { get; }
    public JsonTypeInfo`1<Corev1EventSeries> Corev1EventSeries { get; }
    public JsonTypeInfo`1<Discoveryv1EndpointPort> Discoveryv1EndpointPort { get; }
    public JsonTypeInfo`1<Eventsv1Event> Eventsv1Event { get; }
    public JsonTypeInfo`1<Eventsv1EventList> Eventsv1EventList { get; }
    public JsonTypeInfo`1<Eventsv1EventSeries> Eventsv1EventSeries { get; }
    public JsonTypeInfo`1<Flowcontrolv1Subject> Flowcontrolv1Subject { get; }
    public JsonTypeInfo`1<IntstrIntOrString> IntstrIntOrString { get; }
    public JsonTypeInfo`1<Rbacv1Subject> Rbacv1Subject { get; }
    public JsonTypeInfo`1<ResourceQuantity> ResourceQuantity { get; }
    public JsonTypeInfo`1<Storagev1TokenRequest> Storagev1TokenRequest { get; }
    public JsonTypeInfo`1<V1Affinity> V1Affinity { get; }
    public JsonTypeInfo`1<V1AggregationRule> V1AggregationRule { get; }
    public JsonTypeInfo`1<V1alpha1AuditAnnotation> V1alpha1AuditAnnotation { get; }
    public JsonTypeInfo`1<V1alpha1ClusterTrustBundle> V1alpha1ClusterTrustBundle { get; }
    public JsonTypeInfo`1<V1alpha1ClusterTrustBundleList> V1alpha1ClusterTrustBundleList { get; }
    public JsonTypeInfo`1<V1alpha1ClusterTrustBundleSpec> V1alpha1ClusterTrustBundleSpec { get; }
    public JsonTypeInfo`1<V1alpha1ExpressionWarning> V1alpha1ExpressionWarning { get; }
    public JsonTypeInfo`1<V1alpha1GroupVersionResource> V1alpha1GroupVersionResource { get; }
    public JsonTypeInfo`1<V1alpha1LeaseCandidate> V1alpha1LeaseCandidate { get; }
    public JsonTypeInfo`1<V1alpha1LeaseCandidateList> V1alpha1LeaseCandidateList { get; }
    public JsonTypeInfo`1<V1alpha1LeaseCandidateSpec> V1alpha1LeaseCandidateSpec { get; }
    public JsonTypeInfo`1<V1alpha1MatchCondition> V1alpha1MatchCondition { get; }
    public JsonTypeInfo`1<V1alpha1MatchResources> V1alpha1MatchResources { get; }
    public JsonTypeInfo`1<V1alpha1MigrationCondition> V1alpha1MigrationCondition { get; }
    public JsonTypeInfo`1<V1alpha1NamedRuleWithOperations> V1alpha1NamedRuleWithOperations { get; }
    public JsonTypeInfo`1<V1alpha1ParamKind> V1alpha1ParamKind { get; }
    public JsonTypeInfo`1<V1alpha1ParamRef> V1alpha1ParamRef { get; }
    public JsonTypeInfo`1<V1alpha1SelfSubjectReview> V1alpha1SelfSubjectReview { get; }
    public JsonTypeInfo`1<V1alpha1SelfSubjectReviewStatus> V1alpha1SelfSubjectReviewStatus { get; }
    public JsonTypeInfo`1<V1alpha1ServerStorageVersion> V1alpha1ServerStorageVersion { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersion> V1alpha1StorageVersion { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersionCondition> V1alpha1StorageVersionCondition { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersionList> V1alpha1StorageVersionList { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersionMigration> V1alpha1StorageVersionMigration { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersionMigrationList> V1alpha1StorageVersionMigrationList { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersionMigrationSpec> V1alpha1StorageVersionMigrationSpec { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersionMigrationStatus> V1alpha1StorageVersionMigrationStatus { get; }
    public JsonTypeInfo`1<V1alpha1StorageVersionStatus> V1alpha1StorageVersionStatus { get; }
    public JsonTypeInfo`1<V1alpha1TypeChecking> V1alpha1TypeChecking { get; }
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicy> V1alpha1ValidatingAdmissionPolicy { get; }
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBinding> V1alpha1ValidatingAdmissionPolicyBinding { get; }
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingList> V1alpha1ValidatingAdmissionPolicyBindingList { get; }
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingSpec> V1alpha1ValidatingAdmissionPolicyBindingSpec { get; }
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyList> V1alpha1ValidatingAdmissionPolicyList { get; }
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicySpec> V1alpha1ValidatingAdmissionPolicySpec { get; }
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyStatus> V1alpha1ValidatingAdmissionPolicyStatus { get; }
    public JsonTypeInfo`1<V1alpha1Validation> V1alpha1Validation { get; }
    public JsonTypeInfo`1<V1alpha1Variable> V1alpha1Variable { get; }
    public JsonTypeInfo`1<V1alpha1VolumeAttributesClass> V1alpha1VolumeAttributesClass { get; }
    public JsonTypeInfo`1<V1alpha1VolumeAttributesClassList> V1alpha1VolumeAttributesClassList { get; }
    public JsonTypeInfo`1<V1alpha3AllocationResult> V1alpha3AllocationResult { get; }
    public JsonTypeInfo`1<V1alpha3BasicDevice> V1alpha3BasicDevice { get; }
    public JsonTypeInfo`1<V1alpha3CELDeviceSelector> V1alpha3CELDeviceSelector { get; }
    public JsonTypeInfo`1<V1alpha3Device> V1alpha3Device { get; }
    public JsonTypeInfo`1<V1alpha3DeviceAllocationConfiguration> V1alpha3DeviceAllocationConfiguration { get; }
    public JsonTypeInfo`1<V1alpha3DeviceAllocationResult> V1alpha3DeviceAllocationResult { get; }
    public JsonTypeInfo`1<V1alpha3DeviceAttribute> V1alpha3DeviceAttribute { get; }
    public JsonTypeInfo`1<V1alpha3DeviceClaim> V1alpha3DeviceClaim { get; }
    public JsonTypeInfo`1<V1alpha3DeviceClaimConfiguration> V1alpha3DeviceClaimConfiguration { get; }
    public JsonTypeInfo`1<V1alpha3DeviceClass> V1alpha3DeviceClass { get; }
    public JsonTypeInfo`1<V1alpha3DeviceClassConfiguration> V1alpha3DeviceClassConfiguration { get; }
    public JsonTypeInfo`1<V1alpha3DeviceClassList> V1alpha3DeviceClassList { get; }
    public JsonTypeInfo`1<V1alpha3DeviceClassSpec> V1alpha3DeviceClassSpec { get; }
    public JsonTypeInfo`1<V1alpha3DeviceConstraint> V1alpha3DeviceConstraint { get; }
    public JsonTypeInfo`1<V1alpha3DeviceRequest> V1alpha3DeviceRequest { get; }
    public JsonTypeInfo`1<V1alpha3DeviceRequestAllocationResult> V1alpha3DeviceRequestAllocationResult { get; }
    public JsonTypeInfo`1<V1alpha3DeviceSelector> V1alpha3DeviceSelector { get; }
    public JsonTypeInfo`1<V1alpha3OpaqueDeviceConfiguration> V1alpha3OpaqueDeviceConfiguration { get; }
    public JsonTypeInfo`1<V1alpha3PodSchedulingContext> V1alpha3PodSchedulingContext { get; }
    public JsonTypeInfo`1<V1alpha3PodSchedulingContextList> V1alpha3PodSchedulingContextList { get; }
    public JsonTypeInfo`1<V1alpha3PodSchedulingContextSpec> V1alpha3PodSchedulingContextSpec { get; }
    public JsonTypeInfo`1<V1alpha3PodSchedulingContextStatus> V1alpha3PodSchedulingContextStatus { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaim> V1alpha3ResourceClaim { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimConsumerReference> V1alpha3ResourceClaimConsumerReference { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimList> V1alpha3ResourceClaimList { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimSchedulingStatus> V1alpha3ResourceClaimSchedulingStatus { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimSpec> V1alpha3ResourceClaimSpec { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimStatus> V1alpha3ResourceClaimStatus { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimTemplate> V1alpha3ResourceClaimTemplate { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimTemplateList> V1alpha3ResourceClaimTemplateList { get; }
    public JsonTypeInfo`1<V1alpha3ResourceClaimTemplateSpec> V1alpha3ResourceClaimTemplateSpec { get; }
    public JsonTypeInfo`1<V1alpha3ResourcePool> V1alpha3ResourcePool { get; }
    public JsonTypeInfo`1<V1alpha3ResourceSlice> V1alpha3ResourceSlice { get; }
    public JsonTypeInfo`1<V1alpha3ResourceSliceList> V1alpha3ResourceSliceList { get; }
    public JsonTypeInfo`1<V1alpha3ResourceSliceSpec> V1alpha3ResourceSliceSpec { get; }
    public JsonTypeInfo`1<V1APIGroup> V1APIGroup { get; }
    public JsonTypeInfo`1<V1APIGroupList> V1APIGroupList { get; }
    public JsonTypeInfo`1<V1APIResource> V1APIResource { get; }
    public JsonTypeInfo`1<V1APIResourceList> V1APIResourceList { get; }
    public JsonTypeInfo`1<V1APIService> V1APIService { get; }
    public JsonTypeInfo`1<V1APIServiceCondition> V1APIServiceCondition { get; }
    public JsonTypeInfo`1<V1APIServiceList> V1APIServiceList { get; }
    public JsonTypeInfo`1<V1APIServiceSpec> V1APIServiceSpec { get; }
    public JsonTypeInfo`1<V1APIServiceStatus> V1APIServiceStatus { get; }
    public JsonTypeInfo`1<V1APIVersions> V1APIVersions { get; }
    public JsonTypeInfo`1<V1AppArmorProfile> V1AppArmorProfile { get; }
    public JsonTypeInfo`1<V1AttachedVolume> V1AttachedVolume { get; }
    public JsonTypeInfo`1<V1AuditAnnotation> V1AuditAnnotation { get; }
    public JsonTypeInfo`1<V1AWSElasticBlockStoreVolumeSource> V1AWSElasticBlockStoreVolumeSource { get; }
    public JsonTypeInfo`1<V1AzureDiskVolumeSource> V1AzureDiskVolumeSource { get; }
    public JsonTypeInfo`1<V1AzureFilePersistentVolumeSource> V1AzureFilePersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1AzureFileVolumeSource> V1AzureFileVolumeSource { get; }
    public JsonTypeInfo`1<V1beta1AuditAnnotation> V1beta1AuditAnnotation { get; }
    public JsonTypeInfo`1<V1beta1ExpressionWarning> V1beta1ExpressionWarning { get; }
    public JsonTypeInfo`1<V1beta1IPAddress> V1beta1IPAddress { get; }
    public JsonTypeInfo`1<V1beta1IPAddressList> V1beta1IPAddressList { get; }
    public JsonTypeInfo`1<V1beta1IPAddressSpec> V1beta1IPAddressSpec { get; }
    public JsonTypeInfo`1<V1beta1MatchCondition> V1beta1MatchCondition { get; }
    public JsonTypeInfo`1<V1beta1MatchResources> V1beta1MatchResources { get; }
    public JsonTypeInfo`1<V1beta1NamedRuleWithOperations> V1beta1NamedRuleWithOperations { get; }
    public JsonTypeInfo`1<V1beta1ParamKind> V1beta1ParamKind { get; }
    public JsonTypeInfo`1<V1beta1ParamRef> V1beta1ParamRef { get; }
    public JsonTypeInfo`1<V1beta1ParentReference> V1beta1ParentReference { get; }
    public JsonTypeInfo`1<V1beta1SelfSubjectReview> V1beta1SelfSubjectReview { get; }
    public JsonTypeInfo`1<V1beta1SelfSubjectReviewStatus> V1beta1SelfSubjectReviewStatus { get; }
    public JsonTypeInfo`1<V1beta1ServiceCIDR> V1beta1ServiceCIDR { get; }
    public JsonTypeInfo`1<V1beta1ServiceCIDRList> V1beta1ServiceCIDRList { get; }
    public JsonTypeInfo`1<V1beta1ServiceCIDRSpec> V1beta1ServiceCIDRSpec { get; }
    public JsonTypeInfo`1<V1beta1ServiceCIDRStatus> V1beta1ServiceCIDRStatus { get; }
    public JsonTypeInfo`1<V1beta1TypeChecking> V1beta1TypeChecking { get; }
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicy> V1beta1ValidatingAdmissionPolicy { get; }
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBinding> V1beta1ValidatingAdmissionPolicyBinding { get; }
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingList> V1beta1ValidatingAdmissionPolicyBindingList { get; }
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingSpec> V1beta1ValidatingAdmissionPolicyBindingSpec { get; }
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyList> V1beta1ValidatingAdmissionPolicyList { get; }
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicySpec> V1beta1ValidatingAdmissionPolicySpec { get; }
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyStatus> V1beta1ValidatingAdmissionPolicyStatus { get; }
    public JsonTypeInfo`1<V1beta1Validation> V1beta1Validation { get; }
    public JsonTypeInfo`1<V1beta1Variable> V1beta1Variable { get; }
    public JsonTypeInfo`1<V1beta1VolumeAttributesClass> V1beta1VolumeAttributesClass { get; }
    public JsonTypeInfo`1<V1beta1VolumeAttributesClassList> V1beta1VolumeAttributesClassList { get; }
    public JsonTypeInfo`1<V1beta3ExemptPriorityLevelConfiguration> V1beta3ExemptPriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<V1beta3FlowDistinguisherMethod> V1beta3FlowDistinguisherMethod { get; }
    public JsonTypeInfo`1<V1beta3FlowSchema> V1beta3FlowSchema { get; }
    public JsonTypeInfo`1<V1beta3FlowSchemaCondition> V1beta3FlowSchemaCondition { get; }
    public JsonTypeInfo`1<V1beta3FlowSchemaList> V1beta3FlowSchemaList { get; }
    public JsonTypeInfo`1<V1beta3FlowSchemaSpec> V1beta3FlowSchemaSpec { get; }
    public JsonTypeInfo`1<V1beta3FlowSchemaStatus> V1beta3FlowSchemaStatus { get; }
    public JsonTypeInfo`1<V1beta3GroupSubject> V1beta3GroupSubject { get; }
    public JsonTypeInfo`1<V1beta3LimitedPriorityLevelConfiguration> V1beta3LimitedPriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<V1beta3LimitResponse> V1beta3LimitResponse { get; }
    public JsonTypeInfo`1<V1beta3NonResourcePolicyRule> V1beta3NonResourcePolicyRule { get; }
    public JsonTypeInfo`1<V1beta3PolicyRulesWithSubjects> V1beta3PolicyRulesWithSubjects { get; }
    public JsonTypeInfo`1<V1beta3PriorityLevelConfiguration> V1beta3PriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationCondition> V1beta3PriorityLevelConfigurationCondition { get; }
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationList> V1beta3PriorityLevelConfigurationList { get; }
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationReference> V1beta3PriorityLevelConfigurationReference { get; }
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationSpec> V1beta3PriorityLevelConfigurationSpec { get; }
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationStatus> V1beta3PriorityLevelConfigurationStatus { get; }
    public JsonTypeInfo`1<V1beta3QueuingConfiguration> V1beta3QueuingConfiguration { get; }
    public JsonTypeInfo`1<V1beta3ResourcePolicyRule> V1beta3ResourcePolicyRule { get; }
    public JsonTypeInfo`1<V1beta3ServiceAccountSubject> V1beta3ServiceAccountSubject { get; }
    public JsonTypeInfo`1<V1beta3Subject> V1beta3Subject { get; }
    public JsonTypeInfo`1<V1beta3UserSubject> V1beta3UserSubject { get; }
    public JsonTypeInfo`1<V1Binding> V1Binding { get; }
    public JsonTypeInfo`1<V1BoundObjectReference> V1BoundObjectReference { get; }
    public JsonTypeInfo`1<V1Capabilities> V1Capabilities { get; }
    public JsonTypeInfo`1<V1CephFSPersistentVolumeSource> V1CephFSPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1CephFSVolumeSource> V1CephFSVolumeSource { get; }
    public JsonTypeInfo`1<V1CertificateSigningRequest> V1CertificateSigningRequest { get; }
    public JsonTypeInfo`1<V1CertificateSigningRequestCondition> V1CertificateSigningRequestCondition { get; }
    public JsonTypeInfo`1<V1CertificateSigningRequestList> V1CertificateSigningRequestList { get; }
    public JsonTypeInfo`1<V1CertificateSigningRequestSpec> V1CertificateSigningRequestSpec { get; }
    public JsonTypeInfo`1<V1CertificateSigningRequestStatus> V1CertificateSigningRequestStatus { get; }
    public JsonTypeInfo`1<V1CinderPersistentVolumeSource> V1CinderPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1CinderVolumeSource> V1CinderVolumeSource { get; }
    public JsonTypeInfo`1<V1ClientIPConfig> V1ClientIPConfig { get; }
    public JsonTypeInfo`1<V1ClusterRole> V1ClusterRole { get; }
    public JsonTypeInfo`1<V1ClusterRoleBinding> V1ClusterRoleBinding { get; }
    public JsonTypeInfo`1<V1ClusterRoleBindingList> V1ClusterRoleBindingList { get; }
    public JsonTypeInfo`1<V1ClusterRoleList> V1ClusterRoleList { get; }
    public JsonTypeInfo`1<V1ClusterTrustBundleProjection> V1ClusterTrustBundleProjection { get; }
    public JsonTypeInfo`1<V1ComponentCondition> V1ComponentCondition { get; }
    public JsonTypeInfo`1<V1ComponentStatus> V1ComponentStatus { get; }
    public JsonTypeInfo`1<V1ComponentStatusList> V1ComponentStatusList { get; }
    public JsonTypeInfo`1<V1Condition> V1Condition { get; }
    public JsonTypeInfo`1<V1ConfigMap> V1ConfigMap { get; }
    public JsonTypeInfo`1<V1ConfigMapEnvSource> V1ConfigMapEnvSource { get; }
    public JsonTypeInfo`1<V1ConfigMapKeySelector> V1ConfigMapKeySelector { get; }
    public JsonTypeInfo`1<V1ConfigMapList> V1ConfigMapList { get; }
    public JsonTypeInfo`1<V1ConfigMapNodeConfigSource> V1ConfigMapNodeConfigSource { get; }
    public JsonTypeInfo`1<V1ConfigMapProjection> V1ConfigMapProjection { get; }
    public JsonTypeInfo`1<V1ConfigMapVolumeSource> V1ConfigMapVolumeSource { get; }
    public JsonTypeInfo`1<V1Container> V1Container { get; }
    public JsonTypeInfo`1<V1ContainerImage> V1ContainerImage { get; }
    public JsonTypeInfo`1<V1ContainerPort> V1ContainerPort { get; }
    public JsonTypeInfo`1<V1ContainerResizePolicy> V1ContainerResizePolicy { get; }
    public JsonTypeInfo`1<V1ContainerState> V1ContainerState { get; }
    public JsonTypeInfo`1<V1ContainerStateRunning> V1ContainerStateRunning { get; }
    public JsonTypeInfo`1<V1ContainerStateTerminated> V1ContainerStateTerminated { get; }
    public JsonTypeInfo`1<V1ContainerStateWaiting> V1ContainerStateWaiting { get; }
    public JsonTypeInfo`1<V1ContainerStatus> V1ContainerStatus { get; }
    public JsonTypeInfo`1<V1ContainerUser> V1ContainerUser { get; }
    public JsonTypeInfo`1<V1ControllerRevision> V1ControllerRevision { get; }
    public JsonTypeInfo`1<V1ControllerRevisionList> V1ControllerRevisionList { get; }
    public JsonTypeInfo`1<V1CronJob> V1CronJob { get; }
    public JsonTypeInfo`1<V1CronJobList> V1CronJobList { get; }
    public JsonTypeInfo`1<V1CronJobSpec> V1CronJobSpec { get; }
    public JsonTypeInfo`1<V1CronJobStatus> V1CronJobStatus { get; }
    public JsonTypeInfo`1<V1CrossVersionObjectReference> V1CrossVersionObjectReference { get; }
    public JsonTypeInfo`1<V1CSIDriver> V1CSIDriver { get; }
    public JsonTypeInfo`1<V1CSIDriverList> V1CSIDriverList { get; }
    public JsonTypeInfo`1<V1CSIDriverSpec> V1CSIDriverSpec { get; }
    public JsonTypeInfo`1<V1CSINode> V1CSINode { get; }
    public JsonTypeInfo`1<V1CSINodeDriver> V1CSINodeDriver { get; }
    public JsonTypeInfo`1<V1CSINodeList> V1CSINodeList { get; }
    public JsonTypeInfo`1<V1CSINodeSpec> V1CSINodeSpec { get; }
    public JsonTypeInfo`1<V1CSIPersistentVolumeSource> V1CSIPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1CSIStorageCapacity> V1CSIStorageCapacity { get; }
    public JsonTypeInfo`1<V1CSIStorageCapacityList> V1CSIStorageCapacityList { get; }
    public JsonTypeInfo`1<V1CSIVolumeSource> V1CSIVolumeSource { get; }
    public JsonTypeInfo`1<V1CustomResourceColumnDefinition> V1CustomResourceColumnDefinition { get; }
    public JsonTypeInfo`1<V1CustomResourceConversion> V1CustomResourceConversion { get; }
    public JsonTypeInfo`1<V1CustomResourceDefinition> V1CustomResourceDefinition { get; }
    public JsonTypeInfo`1<V1CustomResourceDefinitionCondition> V1CustomResourceDefinitionCondition { get; }
    public JsonTypeInfo`1<V1CustomResourceDefinitionList> V1CustomResourceDefinitionList { get; }
    public JsonTypeInfo`1<V1CustomResourceDefinitionNames> V1CustomResourceDefinitionNames { get; }
    public JsonTypeInfo`1<V1CustomResourceDefinitionSpec> V1CustomResourceDefinitionSpec { get; }
    public JsonTypeInfo`1<V1CustomResourceDefinitionStatus> V1CustomResourceDefinitionStatus { get; }
    public JsonTypeInfo`1<V1CustomResourceDefinitionVersion> V1CustomResourceDefinitionVersion { get; }
    public JsonTypeInfo`1<V1CustomResourceSubresources> V1CustomResourceSubresources { get; }
    public JsonTypeInfo`1<V1CustomResourceSubresourceScale> V1CustomResourceSubresourceScale { get; }
    public JsonTypeInfo`1<V1CustomResourceValidation> V1CustomResourceValidation { get; }
    public JsonTypeInfo`1<V1DaemonEndpoint> V1DaemonEndpoint { get; }
    public JsonTypeInfo`1<V1DaemonSet> V1DaemonSet { get; }
    public JsonTypeInfo`1<V1DaemonSetCondition> V1DaemonSetCondition { get; }
    public JsonTypeInfo`1<V1DaemonSetList> V1DaemonSetList { get; }
    public JsonTypeInfo`1<V1DaemonSetSpec> V1DaemonSetSpec { get; }
    public JsonTypeInfo`1<V1DaemonSetStatus> V1DaemonSetStatus { get; }
    public JsonTypeInfo`1<V1DaemonSetUpdateStrategy> V1DaemonSetUpdateStrategy { get; }
    public JsonTypeInfo`1<V1DeleteOptions> V1DeleteOptions { get; }
    public JsonTypeInfo`1<V1Deployment> V1Deployment { get; }
    public JsonTypeInfo`1<V1DeploymentCondition> V1DeploymentCondition { get; }
    public JsonTypeInfo`1<V1DeploymentList> V1DeploymentList { get; }
    public JsonTypeInfo`1<V1DeploymentSpec> V1DeploymentSpec { get; }
    public JsonTypeInfo`1<V1DeploymentStatus> V1DeploymentStatus { get; }
    public JsonTypeInfo`1<V1DeploymentStrategy> V1DeploymentStrategy { get; }
    public JsonTypeInfo`1<V1DownwardAPIProjection> V1DownwardAPIProjection { get; }
    public JsonTypeInfo`1<V1DownwardAPIVolumeFile> V1DownwardAPIVolumeFile { get; }
    public JsonTypeInfo`1<V1DownwardAPIVolumeSource> V1DownwardAPIVolumeSource { get; }
    public JsonTypeInfo`1<V1EmptyDirVolumeSource> V1EmptyDirVolumeSource { get; }
    public JsonTypeInfo`1<V1Endpoint> V1Endpoint { get; }
    public JsonTypeInfo`1<V1EndpointAddress> V1EndpointAddress { get; }
    public JsonTypeInfo`1<V1EndpointConditions> V1EndpointConditions { get; }
    public JsonTypeInfo`1<V1EndpointHints> V1EndpointHints { get; }
    public JsonTypeInfo`1<V1Endpoints> V1Endpoints { get; }
    public JsonTypeInfo`1<V1EndpointSlice> V1EndpointSlice { get; }
    public JsonTypeInfo`1<V1EndpointSliceList> V1EndpointSliceList { get; }
    public JsonTypeInfo`1<V1EndpointsList> V1EndpointsList { get; }
    public JsonTypeInfo`1<V1EndpointSubset> V1EndpointSubset { get; }
    public JsonTypeInfo`1<V1EnvFromSource> V1EnvFromSource { get; }
    public JsonTypeInfo`1<V1EnvVar> V1EnvVar { get; }
    public JsonTypeInfo`1<V1EnvVarSource> V1EnvVarSource { get; }
    public JsonTypeInfo`1<V1EphemeralContainer> V1EphemeralContainer { get; }
    public JsonTypeInfo`1<V1EphemeralVolumeSource> V1EphemeralVolumeSource { get; }
    public JsonTypeInfo`1<V1EventSource> V1EventSource { get; }
    public JsonTypeInfo`1<V1Eviction> V1Eviction { get; }
    public JsonTypeInfo`1<V1ExecAction> V1ExecAction { get; }
    public JsonTypeInfo`1<V1ExemptPriorityLevelConfiguration> V1ExemptPriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<V1ExpressionWarning> V1ExpressionWarning { get; }
    public JsonTypeInfo`1<V1ExternalDocumentation> V1ExternalDocumentation { get; }
    public JsonTypeInfo`1<V1FCVolumeSource> V1FCVolumeSource { get; }
    public JsonTypeInfo`1<V1FieldSelectorAttributes> V1FieldSelectorAttributes { get; }
    public JsonTypeInfo`1<V1FieldSelectorRequirement> V1FieldSelectorRequirement { get; }
    public JsonTypeInfo`1<V1FlexPersistentVolumeSource> V1FlexPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1FlexVolumeSource> V1FlexVolumeSource { get; }
    public JsonTypeInfo`1<V1FlockerVolumeSource> V1FlockerVolumeSource { get; }
    public JsonTypeInfo`1<V1FlowDistinguisherMethod> V1FlowDistinguisherMethod { get; }
    public JsonTypeInfo`1<V1FlowSchema> V1FlowSchema { get; }
    public JsonTypeInfo`1<V1FlowSchemaCondition> V1FlowSchemaCondition { get; }
    public JsonTypeInfo`1<V1FlowSchemaList> V1FlowSchemaList { get; }
    public JsonTypeInfo`1<V1FlowSchemaSpec> V1FlowSchemaSpec { get; }
    public JsonTypeInfo`1<V1FlowSchemaStatus> V1FlowSchemaStatus { get; }
    public JsonTypeInfo`1<V1ForZone> V1ForZone { get; }
    public JsonTypeInfo`1<V1GCEPersistentDiskVolumeSource> V1GCEPersistentDiskVolumeSource { get; }
    public JsonTypeInfo`1<V1GitRepoVolumeSource> V1GitRepoVolumeSource { get; }
    public JsonTypeInfo`1<V1GlusterfsPersistentVolumeSource> V1GlusterfsPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1GlusterfsVolumeSource> V1GlusterfsVolumeSource { get; }
    public JsonTypeInfo`1<V1GroupSubject> V1GroupSubject { get; }
    public JsonTypeInfo`1<V1GroupVersionForDiscovery> V1GroupVersionForDiscovery { get; }
    public JsonTypeInfo`1<V1GRPCAction> V1GRPCAction { get; }
    public JsonTypeInfo`1<V1HorizontalPodAutoscaler> V1HorizontalPodAutoscaler { get; }
    public JsonTypeInfo`1<V1HorizontalPodAutoscalerList> V1HorizontalPodAutoscalerList { get; }
    public JsonTypeInfo`1<V1HorizontalPodAutoscalerSpec> V1HorizontalPodAutoscalerSpec { get; }
    public JsonTypeInfo`1<V1HorizontalPodAutoscalerStatus> V1HorizontalPodAutoscalerStatus { get; }
    public JsonTypeInfo`1<V1HostAlias> V1HostAlias { get; }
    public JsonTypeInfo`1<V1HostIP> V1HostIP { get; }
    public JsonTypeInfo`1<V1HostPathVolumeSource> V1HostPathVolumeSource { get; }
    public JsonTypeInfo`1<V1HTTPGetAction> V1HTTPGetAction { get; }
    public JsonTypeInfo`1<V1HTTPHeader> V1HTTPHeader { get; }
    public JsonTypeInfo`1<V1HTTPIngressPath> V1HTTPIngressPath { get; }
    public JsonTypeInfo`1<V1HTTPIngressRuleValue> V1HTTPIngressRuleValue { get; }
    public JsonTypeInfo`1<V1ImageVolumeSource> V1ImageVolumeSource { get; }
    public JsonTypeInfo`1<V1Ingress> V1Ingress { get; }
    public JsonTypeInfo`1<V1IngressBackend> V1IngressBackend { get; }
    public JsonTypeInfo`1<V1IngressClass> V1IngressClass { get; }
    public JsonTypeInfo`1<V1IngressClassList> V1IngressClassList { get; }
    public JsonTypeInfo`1<V1IngressClassParametersReference> V1IngressClassParametersReference { get; }
    public JsonTypeInfo`1<V1IngressClassSpec> V1IngressClassSpec { get; }
    public JsonTypeInfo`1<V1IngressList> V1IngressList { get; }
    public JsonTypeInfo`1<V1IngressLoadBalancerIngress> V1IngressLoadBalancerIngress { get; }
    public JsonTypeInfo`1<V1IngressLoadBalancerStatus> V1IngressLoadBalancerStatus { get; }
    public JsonTypeInfo`1<V1IngressPortStatus> V1IngressPortStatus { get; }
    public JsonTypeInfo`1<V1IngressRule> V1IngressRule { get; }
    public JsonTypeInfo`1<V1IngressServiceBackend> V1IngressServiceBackend { get; }
    public JsonTypeInfo`1<V1IngressSpec> V1IngressSpec { get; }
    public JsonTypeInfo`1<V1IngressStatus> V1IngressStatus { get; }
    public JsonTypeInfo`1<V1IngressTLS> V1IngressTLS { get; }
    public JsonTypeInfo`1<V1IPBlock> V1IPBlock { get; }
    public JsonTypeInfo`1<V1ISCSIPersistentVolumeSource> V1ISCSIPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1ISCSIVolumeSource> V1ISCSIVolumeSource { get; }
    public JsonTypeInfo`1<V1Job> V1Job { get; }
    public JsonTypeInfo`1<V1JobCondition> V1JobCondition { get; }
    public JsonTypeInfo`1<V1JobList> V1JobList { get; }
    public JsonTypeInfo`1<V1JobSpec> V1JobSpec { get; }
    public JsonTypeInfo`1<V1JobStatus> V1JobStatus { get; }
    public JsonTypeInfo`1<V1JobTemplateSpec> V1JobTemplateSpec { get; }
    public JsonTypeInfo`1<V1JSONSchemaProps> V1JSONSchemaProps { get; }
    public JsonTypeInfo`1<V1KeyToPath> V1KeyToPath { get; }
    public JsonTypeInfo`1<V1LabelSelector> V1LabelSelector { get; }
    public JsonTypeInfo`1<V1LabelSelectorAttributes> V1LabelSelectorAttributes { get; }
    public JsonTypeInfo`1<V1LabelSelectorRequirement> V1LabelSelectorRequirement { get; }
    public JsonTypeInfo`1<V1Lease> V1Lease { get; }
    public JsonTypeInfo`1<V1LeaseList> V1LeaseList { get; }
    public JsonTypeInfo`1<V1LeaseSpec> V1LeaseSpec { get; }
    public JsonTypeInfo`1<V1Lifecycle> V1Lifecycle { get; }
    public JsonTypeInfo`1<V1LifecycleHandler> V1LifecycleHandler { get; }
    public JsonTypeInfo`1<V1LimitedPriorityLevelConfiguration> V1LimitedPriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<V1LimitRange> V1LimitRange { get; }
    public JsonTypeInfo`1<V1LimitRangeItem> V1LimitRangeItem { get; }
    public JsonTypeInfo`1<V1LimitRangeList> V1LimitRangeList { get; }
    public JsonTypeInfo`1<V1LimitRangeSpec> V1LimitRangeSpec { get; }
    public JsonTypeInfo`1<V1LimitResponse> V1LimitResponse { get; }
    public JsonTypeInfo`1<V1LinuxContainerUser> V1LinuxContainerUser { get; }
    public JsonTypeInfo`1<V1ListMeta> V1ListMeta { get; }
    public JsonTypeInfo`1<V1LoadBalancerIngress> V1LoadBalancerIngress { get; }
    public JsonTypeInfo`1<V1LoadBalancerStatus> V1LoadBalancerStatus { get; }
    public JsonTypeInfo`1<V1LocalObjectReference> V1LocalObjectReference { get; }
    public JsonTypeInfo`1<V1LocalSubjectAccessReview> V1LocalSubjectAccessReview { get; }
    public JsonTypeInfo`1<V1LocalVolumeSource> V1LocalVolumeSource { get; }
    public JsonTypeInfo`1<V1ManagedFieldsEntry> V1ManagedFieldsEntry { get; }
    public JsonTypeInfo`1<V1MatchCondition> V1MatchCondition { get; }
    public JsonTypeInfo`1<V1MatchResources> V1MatchResources { get; }
    public JsonTypeInfo`1<V1ModifyVolumeStatus> V1ModifyVolumeStatus { get; }
    public JsonTypeInfo`1<V1MutatingWebhook> V1MutatingWebhook { get; }
    public JsonTypeInfo`1<V1MutatingWebhookConfiguration> V1MutatingWebhookConfiguration { get; }
    public JsonTypeInfo`1<V1MutatingWebhookConfigurationList> V1MutatingWebhookConfigurationList { get; }
    public JsonTypeInfo`1<V1NamedRuleWithOperations> V1NamedRuleWithOperations { get; }
    public JsonTypeInfo`1<V1Namespace> V1Namespace { get; }
    public JsonTypeInfo`1<V1NamespaceCondition> V1NamespaceCondition { get; }
    public JsonTypeInfo`1<V1NamespaceList> V1NamespaceList { get; }
    public JsonTypeInfo`1<V1NamespaceSpec> V1NamespaceSpec { get; }
    public JsonTypeInfo`1<V1NamespaceStatus> V1NamespaceStatus { get; }
    public JsonTypeInfo`1<V1NetworkPolicy> V1NetworkPolicy { get; }
    public JsonTypeInfo`1<V1NetworkPolicyEgressRule> V1NetworkPolicyEgressRule { get; }
    public JsonTypeInfo`1<V1NetworkPolicyIngressRule> V1NetworkPolicyIngressRule { get; }
    public JsonTypeInfo`1<V1NetworkPolicyList> V1NetworkPolicyList { get; }
    public JsonTypeInfo`1<V1NetworkPolicyPeer> V1NetworkPolicyPeer { get; }
    public JsonTypeInfo`1<V1NetworkPolicyPort> V1NetworkPolicyPort { get; }
    public JsonTypeInfo`1<V1NetworkPolicySpec> V1NetworkPolicySpec { get; }
    public JsonTypeInfo`1<V1NFSVolumeSource> V1NFSVolumeSource { get; }
    public JsonTypeInfo`1<V1Node> V1Node { get; }
    public JsonTypeInfo`1<V1NodeAddress> V1NodeAddress { get; }
    public JsonTypeInfo`1<V1NodeAffinity> V1NodeAffinity { get; }
    public JsonTypeInfo`1<V1NodeCondition> V1NodeCondition { get; }
    public JsonTypeInfo`1<V1NodeConfigSource> V1NodeConfigSource { get; }
    public JsonTypeInfo`1<V1NodeConfigStatus> V1NodeConfigStatus { get; }
    public JsonTypeInfo`1<V1NodeDaemonEndpoints> V1NodeDaemonEndpoints { get; }
    public JsonTypeInfo`1<V1NodeFeatures> V1NodeFeatures { get; }
    public JsonTypeInfo`1<V1NodeList> V1NodeList { get; }
    public JsonTypeInfo`1<V1NodeRuntimeHandler> V1NodeRuntimeHandler { get; }
    public JsonTypeInfo`1<V1NodeRuntimeHandlerFeatures> V1NodeRuntimeHandlerFeatures { get; }
    public JsonTypeInfo`1<V1NodeSelector> V1NodeSelector { get; }
    public JsonTypeInfo`1<V1NodeSelectorRequirement> V1NodeSelectorRequirement { get; }
    public JsonTypeInfo`1<V1NodeSelectorTerm> V1NodeSelectorTerm { get; }
    public JsonTypeInfo`1<V1NodeSpec> V1NodeSpec { get; }
    public JsonTypeInfo`1<V1NodeStatus> V1NodeStatus { get; }
    public JsonTypeInfo`1<V1NodeSystemInfo> V1NodeSystemInfo { get; }
    public JsonTypeInfo`1<V1NonResourceAttributes> V1NonResourceAttributes { get; }
    public JsonTypeInfo`1<V1NonResourcePolicyRule> V1NonResourcePolicyRule { get; }
    public JsonTypeInfo`1<V1NonResourceRule> V1NonResourceRule { get; }
    public JsonTypeInfo`1<V1ObjectFieldSelector> V1ObjectFieldSelector { get; }
    public JsonTypeInfo`1<V1ObjectMeta> V1ObjectMeta { get; }
    public JsonTypeInfo`1<V1ObjectReference> V1ObjectReference { get; }
    public JsonTypeInfo`1<V1Overhead> V1Overhead { get; }
    public JsonTypeInfo`1<V1OwnerReference> V1OwnerReference { get; }
    public JsonTypeInfo`1<V1ParamKind> V1ParamKind { get; }
    public JsonTypeInfo`1<V1ParamRef> V1ParamRef { get; }
    public JsonTypeInfo`1<V1PersistentVolume> V1PersistentVolume { get; }
    public JsonTypeInfo`1<V1PersistentVolumeClaim> V1PersistentVolumeClaim { get; }
    public JsonTypeInfo`1<V1PersistentVolumeClaimCondition> V1PersistentVolumeClaimCondition { get; }
    public JsonTypeInfo`1<V1PersistentVolumeClaimList> V1PersistentVolumeClaimList { get; }
    public JsonTypeInfo`1<V1PersistentVolumeClaimSpec> V1PersistentVolumeClaimSpec { get; }
    public JsonTypeInfo`1<V1PersistentVolumeClaimStatus> V1PersistentVolumeClaimStatus { get; }
    public JsonTypeInfo`1<V1PersistentVolumeClaimTemplate> V1PersistentVolumeClaimTemplate { get; }
    public JsonTypeInfo`1<V1PersistentVolumeClaimVolumeSource> V1PersistentVolumeClaimVolumeSource { get; }
    public JsonTypeInfo`1<V1PersistentVolumeList> V1PersistentVolumeList { get; }
    public JsonTypeInfo`1<V1PersistentVolumeSpec> V1PersistentVolumeSpec { get; }
    public JsonTypeInfo`1<V1PersistentVolumeStatus> V1PersistentVolumeStatus { get; }
    public JsonTypeInfo`1<V1PhotonPersistentDiskVolumeSource> V1PhotonPersistentDiskVolumeSource { get; }
    public JsonTypeInfo`1<V1Pod> V1Pod { get; }
    public JsonTypeInfo`1<V1PodAffinity> V1PodAffinity { get; }
    public JsonTypeInfo`1<V1PodAffinityTerm> V1PodAffinityTerm { get; }
    public JsonTypeInfo`1<V1PodAntiAffinity> V1PodAntiAffinity { get; }
    public JsonTypeInfo`1<V1PodCondition> V1PodCondition { get; }
    public JsonTypeInfo`1<V1PodDisruptionBudget> V1PodDisruptionBudget { get; }
    public JsonTypeInfo`1<V1PodDisruptionBudgetList> V1PodDisruptionBudgetList { get; }
    public JsonTypeInfo`1<V1PodDisruptionBudgetSpec> V1PodDisruptionBudgetSpec { get; }
    public JsonTypeInfo`1<V1PodDisruptionBudgetStatus> V1PodDisruptionBudgetStatus { get; }
    public JsonTypeInfo`1<V1PodDNSConfig> V1PodDNSConfig { get; }
    public JsonTypeInfo`1<V1PodDNSConfigOption> V1PodDNSConfigOption { get; }
    public JsonTypeInfo`1<V1PodFailurePolicy> V1PodFailurePolicy { get; }
    public JsonTypeInfo`1<V1PodFailurePolicyOnExitCodesRequirement> V1PodFailurePolicyOnExitCodesRequirement { get; }
    public JsonTypeInfo`1<V1PodFailurePolicyOnPodConditionsPattern> V1PodFailurePolicyOnPodConditionsPattern { get; }
    public JsonTypeInfo`1<V1PodFailurePolicyRule> V1PodFailurePolicyRule { get; }
    public JsonTypeInfo`1<V1PodIP> V1PodIP { get; }
    public JsonTypeInfo`1<V1PodList> V1PodList { get; }
    public JsonTypeInfo`1<V1PodOS> V1PodOS { get; }
    public JsonTypeInfo`1<V1PodReadinessGate> V1PodReadinessGate { get; }
    public JsonTypeInfo`1<V1PodResourceClaim> V1PodResourceClaim { get; }
    public JsonTypeInfo`1<V1PodResourceClaimStatus> V1PodResourceClaimStatus { get; }
    public JsonTypeInfo`1<V1PodSchedulingGate> V1PodSchedulingGate { get; }
    public JsonTypeInfo`1<V1PodSecurityContext> V1PodSecurityContext { get; }
    public JsonTypeInfo`1<V1PodSpec> V1PodSpec { get; }
    public JsonTypeInfo`1<V1PodStatus> V1PodStatus { get; }
    public JsonTypeInfo`1<V1PodTemplate> V1PodTemplate { get; }
    public JsonTypeInfo`1<V1PodTemplateList> V1PodTemplateList { get; }
    public JsonTypeInfo`1<V1PodTemplateSpec> V1PodTemplateSpec { get; }
    public JsonTypeInfo`1<V1PolicyRule> V1PolicyRule { get; }
    public JsonTypeInfo`1<V1PolicyRulesWithSubjects> V1PolicyRulesWithSubjects { get; }
    public JsonTypeInfo`1<V1PortStatus> V1PortStatus { get; }
    public JsonTypeInfo`1<V1PortworxVolumeSource> V1PortworxVolumeSource { get; }
    public JsonTypeInfo`1<V1Preconditions> V1Preconditions { get; }
    public JsonTypeInfo`1<V1PreferredSchedulingTerm> V1PreferredSchedulingTerm { get; }
    public JsonTypeInfo`1<V1PriorityClass> V1PriorityClass { get; }
    public JsonTypeInfo`1<V1PriorityClassList> V1PriorityClassList { get; }
    public JsonTypeInfo`1<V1PriorityLevelConfiguration> V1PriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<V1PriorityLevelConfigurationCondition> V1PriorityLevelConfigurationCondition { get; }
    public JsonTypeInfo`1<V1PriorityLevelConfigurationList> V1PriorityLevelConfigurationList { get; }
    public JsonTypeInfo`1<V1PriorityLevelConfigurationReference> V1PriorityLevelConfigurationReference { get; }
    public JsonTypeInfo`1<V1PriorityLevelConfigurationSpec> V1PriorityLevelConfigurationSpec { get; }
    public JsonTypeInfo`1<V1PriorityLevelConfigurationStatus> V1PriorityLevelConfigurationStatus { get; }
    public JsonTypeInfo`1<V1Probe> V1Probe { get; }
    public JsonTypeInfo`1<V1ProjectedVolumeSource> V1ProjectedVolumeSource { get; }
    public JsonTypeInfo`1<V1QueuingConfiguration> V1QueuingConfiguration { get; }
    public JsonTypeInfo`1<V1QuobyteVolumeSource> V1QuobyteVolumeSource { get; }
    public JsonTypeInfo`1<V1RBDPersistentVolumeSource> V1RBDPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1RBDVolumeSource> V1RBDVolumeSource { get; }
    public JsonTypeInfo`1<V1ReplicaSet> V1ReplicaSet { get; }
    public JsonTypeInfo`1<V1ReplicaSetCondition> V1ReplicaSetCondition { get; }
    public JsonTypeInfo`1<V1ReplicaSetList> V1ReplicaSetList { get; }
    public JsonTypeInfo`1<V1ReplicaSetSpec> V1ReplicaSetSpec { get; }
    public JsonTypeInfo`1<V1ReplicaSetStatus> V1ReplicaSetStatus { get; }
    public JsonTypeInfo`1<V1ReplicationController> V1ReplicationController { get; }
    public JsonTypeInfo`1<V1ReplicationControllerCondition> V1ReplicationControllerCondition { get; }
    public JsonTypeInfo`1<V1ReplicationControllerList> V1ReplicationControllerList { get; }
    public JsonTypeInfo`1<V1ReplicationControllerSpec> V1ReplicationControllerSpec { get; }
    public JsonTypeInfo`1<V1ReplicationControllerStatus> V1ReplicationControllerStatus { get; }
    public JsonTypeInfo`1<V1ResourceAttributes> V1ResourceAttributes { get; }
    public JsonTypeInfo`1<V1ResourceClaim> V1ResourceClaim { get; }
    public JsonTypeInfo`1<V1ResourceFieldSelector> V1ResourceFieldSelector { get; }
    public JsonTypeInfo`1<V1ResourceHealth> V1ResourceHealth { get; }
    public JsonTypeInfo`1<V1ResourcePolicyRule> V1ResourcePolicyRule { get; }
    public JsonTypeInfo`1<V1ResourceQuota> V1ResourceQuota { get; }
    public JsonTypeInfo`1<V1ResourceQuotaList> V1ResourceQuotaList { get; }
    public JsonTypeInfo`1<V1ResourceQuotaSpec> V1ResourceQuotaSpec { get; }
    public JsonTypeInfo`1<V1ResourceQuotaStatus> V1ResourceQuotaStatus { get; }
    public JsonTypeInfo`1<V1ResourceRequirements> V1ResourceRequirements { get; }
    public JsonTypeInfo`1<V1ResourceRule> V1ResourceRule { get; }
    public JsonTypeInfo`1<V1ResourceStatus> V1ResourceStatus { get; }
    public JsonTypeInfo`1<V1Role> V1Role { get; }
    public JsonTypeInfo`1<V1RoleBinding> V1RoleBinding { get; }
    public JsonTypeInfo`1<V1RoleBindingList> V1RoleBindingList { get; }
    public JsonTypeInfo`1<V1RoleList> V1RoleList { get; }
    public JsonTypeInfo`1<V1RoleRef> V1RoleRef { get; }
    public JsonTypeInfo`1<V1RollingUpdateDaemonSet> V1RollingUpdateDaemonSet { get; }
    public JsonTypeInfo`1<V1RollingUpdateDeployment> V1RollingUpdateDeployment { get; }
    public JsonTypeInfo`1<V1RollingUpdateStatefulSetStrategy> V1RollingUpdateStatefulSetStrategy { get; }
    public JsonTypeInfo`1<V1RuleWithOperations> V1RuleWithOperations { get; }
    public JsonTypeInfo`1<V1RuntimeClass> V1RuntimeClass { get; }
    public JsonTypeInfo`1<V1RuntimeClassList> V1RuntimeClassList { get; }
    public JsonTypeInfo`1<V1Scale> V1Scale { get; }
    public JsonTypeInfo`1<V1ScaleIOPersistentVolumeSource> V1ScaleIOPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1ScaleIOVolumeSource> V1ScaleIOVolumeSource { get; }
    public JsonTypeInfo`1<V1ScaleSpec> V1ScaleSpec { get; }
    public JsonTypeInfo`1<V1ScaleStatus> V1ScaleStatus { get; }
    public JsonTypeInfo`1<V1Scheduling> V1Scheduling { get; }
    public JsonTypeInfo`1<V1ScopedResourceSelectorRequirement> V1ScopedResourceSelectorRequirement { get; }
    public JsonTypeInfo`1<V1ScopeSelector> V1ScopeSelector { get; }
    public JsonTypeInfo`1<V1SeccompProfile> V1SeccompProfile { get; }
    public JsonTypeInfo`1<V1Secret> V1Secret { get; }
    public JsonTypeInfo`1<V1SecretEnvSource> V1SecretEnvSource { get; }
    public JsonTypeInfo`1<V1SecretKeySelector> V1SecretKeySelector { get; }
    public JsonTypeInfo`1<V1SecretList> V1SecretList { get; }
    public JsonTypeInfo`1<V1SecretProjection> V1SecretProjection { get; }
    public JsonTypeInfo`1<V1SecretReference> V1SecretReference { get; }
    public JsonTypeInfo`1<V1SecretVolumeSource> V1SecretVolumeSource { get; }
    public JsonTypeInfo`1<V1SecurityContext> V1SecurityContext { get; }
    public JsonTypeInfo`1<V1SelectableField> V1SelectableField { get; }
    public JsonTypeInfo`1<V1SelfSubjectAccessReview> V1SelfSubjectAccessReview { get; }
    public JsonTypeInfo`1<V1SelfSubjectAccessReviewSpec> V1SelfSubjectAccessReviewSpec { get; }
    public JsonTypeInfo`1<V1SelfSubjectReview> V1SelfSubjectReview { get; }
    public JsonTypeInfo`1<V1SelfSubjectReviewStatus> V1SelfSubjectReviewStatus { get; }
    public JsonTypeInfo`1<V1SelfSubjectRulesReview> V1SelfSubjectRulesReview { get; }
    public JsonTypeInfo`1<V1SelfSubjectRulesReviewSpec> V1SelfSubjectRulesReviewSpec { get; }
    public JsonTypeInfo`1<V1SELinuxOptions> V1SELinuxOptions { get; }
    public JsonTypeInfo`1<V1ServerAddressByClientCIDR> V1ServerAddressByClientCIDR { get; }
    public JsonTypeInfo`1<V1Service> V1Service { get; }
    public JsonTypeInfo`1<V1ServiceAccount> V1ServiceAccount { get; }
    public JsonTypeInfo`1<V1ServiceAccountList> V1ServiceAccountList { get; }
    public JsonTypeInfo`1<V1ServiceAccountSubject> V1ServiceAccountSubject { get; }
    public JsonTypeInfo`1<V1ServiceAccountTokenProjection> V1ServiceAccountTokenProjection { get; }
    public JsonTypeInfo`1<V1ServiceBackendPort> V1ServiceBackendPort { get; }
    public JsonTypeInfo`1<V1ServiceList> V1ServiceList { get; }
    public JsonTypeInfo`1<V1ServicePort> V1ServicePort { get; }
    public JsonTypeInfo`1<V1ServiceSpec> V1ServiceSpec { get; }
    public JsonTypeInfo`1<V1ServiceStatus> V1ServiceStatus { get; }
    public JsonTypeInfo`1<V1SessionAffinityConfig> V1SessionAffinityConfig { get; }
    public JsonTypeInfo`1<V1SleepAction> V1SleepAction { get; }
    public JsonTypeInfo`1<V1StatefulSet> V1StatefulSet { get; }
    public JsonTypeInfo`1<V1StatefulSetCondition> V1StatefulSetCondition { get; }
    public JsonTypeInfo`1<V1StatefulSetList> V1StatefulSetList { get; }
    public JsonTypeInfo`1<V1StatefulSetOrdinals> V1StatefulSetOrdinals { get; }
    public JsonTypeInfo`1<V1StatefulSetPersistentVolumeClaimRetentionPolicy> V1StatefulSetPersistentVolumeClaimRetentionPolicy { get; }
    public JsonTypeInfo`1<V1StatefulSetSpec> V1StatefulSetSpec { get; }
    public JsonTypeInfo`1<V1StatefulSetStatus> V1StatefulSetStatus { get; }
    public JsonTypeInfo`1<V1StatefulSetUpdateStrategy> V1StatefulSetUpdateStrategy { get; }
    public JsonTypeInfo`1<V1Status> V1Status { get; }
    public JsonTypeInfo`1<V1StatusCause> V1StatusCause { get; }
    public JsonTypeInfo`1<V1StatusDetails> V1StatusDetails { get; }
    public JsonTypeInfo`1<V1StorageClass> V1StorageClass { get; }
    public JsonTypeInfo`1<V1StorageClassList> V1StorageClassList { get; }
    public JsonTypeInfo`1<V1StorageOSPersistentVolumeSource> V1StorageOSPersistentVolumeSource { get; }
    public JsonTypeInfo`1<V1StorageOSVolumeSource> V1StorageOSVolumeSource { get; }
    public JsonTypeInfo`1<V1SubjectAccessReview> V1SubjectAccessReview { get; }
    public JsonTypeInfo`1<V1SubjectAccessReviewSpec> V1SubjectAccessReviewSpec { get; }
    public JsonTypeInfo`1<V1SubjectAccessReviewStatus> V1SubjectAccessReviewStatus { get; }
    public JsonTypeInfo`1<V1SubjectRulesReviewStatus> V1SubjectRulesReviewStatus { get; }
    public JsonTypeInfo`1<V1SuccessPolicy> V1SuccessPolicy { get; }
    public JsonTypeInfo`1<V1SuccessPolicyRule> V1SuccessPolicyRule { get; }
    public JsonTypeInfo`1<V1Sysctl> V1Sysctl { get; }
    public JsonTypeInfo`1<V1Taint> V1Taint { get; }
    public JsonTypeInfo`1<V1TCPSocketAction> V1TCPSocketAction { get; }
    public JsonTypeInfo`1<V1TokenRequestSpec> V1TokenRequestSpec { get; }
    public JsonTypeInfo`1<V1TokenRequestStatus> V1TokenRequestStatus { get; }
    public JsonTypeInfo`1<V1TokenReview> V1TokenReview { get; }
    public JsonTypeInfo`1<V1TokenReviewSpec> V1TokenReviewSpec { get; }
    public JsonTypeInfo`1<V1TokenReviewStatus> V1TokenReviewStatus { get; }
    public JsonTypeInfo`1<V1Toleration> V1Toleration { get; }
    public JsonTypeInfo`1<V1TopologySelectorLabelRequirement> V1TopologySelectorLabelRequirement { get; }
    public JsonTypeInfo`1<V1TopologySelectorTerm> V1TopologySelectorTerm { get; }
    public JsonTypeInfo`1<V1TopologySpreadConstraint> V1TopologySpreadConstraint { get; }
    public JsonTypeInfo`1<V1TypeChecking> V1TypeChecking { get; }
    public JsonTypeInfo`1<V1TypedLocalObjectReference> V1TypedLocalObjectReference { get; }
    public JsonTypeInfo`1<V1TypedObjectReference> V1TypedObjectReference { get; }
    public JsonTypeInfo`1<V1UncountedTerminatedPods> V1UncountedTerminatedPods { get; }
    public JsonTypeInfo`1<V1UserInfo> V1UserInfo { get; }
    public JsonTypeInfo`1<V1UserSubject> V1UserSubject { get; }
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicy> V1ValidatingAdmissionPolicy { get; }
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyBinding> V1ValidatingAdmissionPolicyBinding { get; }
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingList> V1ValidatingAdmissionPolicyBindingList { get; }
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingSpec> V1ValidatingAdmissionPolicyBindingSpec { get; }
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyList> V1ValidatingAdmissionPolicyList { get; }
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicySpec> V1ValidatingAdmissionPolicySpec { get; }
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyStatus> V1ValidatingAdmissionPolicyStatus { get; }
    public JsonTypeInfo`1<V1ValidatingWebhook> V1ValidatingWebhook { get; }
    public JsonTypeInfo`1<V1ValidatingWebhookConfiguration> V1ValidatingWebhookConfiguration { get; }
    public JsonTypeInfo`1<V1ValidatingWebhookConfigurationList> V1ValidatingWebhookConfigurationList { get; }
    public JsonTypeInfo`1<V1Validation> V1Validation { get; }
    public JsonTypeInfo`1<V1ValidationRule> V1ValidationRule { get; }
    public JsonTypeInfo`1<V1Variable> V1Variable { get; }
    public JsonTypeInfo`1<V1Volume> V1Volume { get; }
    public JsonTypeInfo`1<V1VolumeAttachment> V1VolumeAttachment { get; }
    public JsonTypeInfo`1<V1VolumeAttachmentList> V1VolumeAttachmentList { get; }
    public JsonTypeInfo`1<V1VolumeAttachmentSource> V1VolumeAttachmentSource { get; }
    public JsonTypeInfo`1<V1VolumeAttachmentSpec> V1VolumeAttachmentSpec { get; }
    public JsonTypeInfo`1<V1VolumeAttachmentStatus> V1VolumeAttachmentStatus { get; }
    public JsonTypeInfo`1<V1VolumeDevice> V1VolumeDevice { get; }
    public JsonTypeInfo`1<V1VolumeError> V1VolumeError { get; }
    public JsonTypeInfo`1<V1VolumeMount> V1VolumeMount { get; }
    public JsonTypeInfo`1<V1VolumeMountStatus> V1VolumeMountStatus { get; }
    public JsonTypeInfo`1<V1VolumeNodeAffinity> V1VolumeNodeAffinity { get; }
    public JsonTypeInfo`1<V1VolumeNodeResources> V1VolumeNodeResources { get; }
    public JsonTypeInfo`1<V1VolumeProjection> V1VolumeProjection { get; }
    public JsonTypeInfo`1<V1VolumeResourceRequirements> V1VolumeResourceRequirements { get; }
    public JsonTypeInfo`1<V1VsphereVirtualDiskVolumeSource> V1VsphereVirtualDiskVolumeSource { get; }
    public JsonTypeInfo`1<V1WebhookConversion> V1WebhookConversion { get; }
    public JsonTypeInfo`1<V1WeightedPodAffinityTerm> V1WeightedPodAffinityTerm { get; }
    public JsonTypeInfo`1<V1WindowsSecurityContextOptions> V1WindowsSecurityContextOptions { get; }
    public JsonTypeInfo`1<V2ContainerResourceMetricSource> V2ContainerResourceMetricSource { get; }
    public JsonTypeInfo`1<V2ContainerResourceMetricStatus> V2ContainerResourceMetricStatus { get; }
    public JsonTypeInfo`1<V2CrossVersionObjectReference> V2CrossVersionObjectReference { get; }
    public JsonTypeInfo`1<V2ExternalMetricSource> V2ExternalMetricSource { get; }
    public JsonTypeInfo`1<V2ExternalMetricStatus> V2ExternalMetricStatus { get; }
    public JsonTypeInfo`1<V2HorizontalPodAutoscaler> V2HorizontalPodAutoscaler { get; }
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerBehavior> V2HorizontalPodAutoscalerBehavior { get; }
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerCondition> V2HorizontalPodAutoscalerCondition { get; }
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerList> V2HorizontalPodAutoscalerList { get; }
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerSpec> V2HorizontalPodAutoscalerSpec { get; }
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerStatus> V2HorizontalPodAutoscalerStatus { get; }
    public JsonTypeInfo`1<V2HPAScalingPolicy> V2HPAScalingPolicy { get; }
    public JsonTypeInfo`1<V2HPAScalingRules> V2HPAScalingRules { get; }
    public JsonTypeInfo`1<V2MetricIdentifier> V2MetricIdentifier { get; }
    public JsonTypeInfo`1<V2MetricSpec> V2MetricSpec { get; }
    public JsonTypeInfo`1<V2MetricStatus> V2MetricStatus { get; }
    public JsonTypeInfo`1<V2MetricTarget> V2MetricTarget { get; }
    public JsonTypeInfo`1<V2MetricValueStatus> V2MetricValueStatus { get; }
    public JsonTypeInfo`1<V2ObjectMetricSource> V2ObjectMetricSource { get; }
    public JsonTypeInfo`1<V2ObjectMetricStatus> V2ObjectMetricStatus { get; }
    public JsonTypeInfo`1<V2PodsMetricSource> V2PodsMetricSource { get; }
    public JsonTypeInfo`1<V2PodsMetricStatus> V2PodsMetricStatus { get; }
    public JsonTypeInfo`1<V2ResourceMetricSource> V2ResourceMetricSource { get; }
    public JsonTypeInfo`1<V2ResourceMetricStatus> V2ResourceMetricStatus { get; }
    public JsonTypeInfo`1<IDictionary`2<string, Byte[]>> IDictionaryStringByteArray { get; }
    public JsonTypeInfo`1<IDictionary`2<string, ResourceQuantity>> IDictionaryStringResourceQuantity { get; }
    public JsonTypeInfo`1<IDictionary`2<string, V1alpha3DeviceAttribute>> IDictionaryStringV1alpha3DeviceAttribute { get; }
    public JsonTypeInfo`1<IDictionary`2<string, V1JSONSchemaProps>> IDictionaryStringV1JSONSchemaProps { get; }
    public JsonTypeInfo`1<IDictionary`2<string, IList`1<string>>> IDictionaryStringIListString { get; }
    public JsonTypeInfo`1<IDictionary`2<string, Nullable`1<DateTime>>> IDictionaryStringNullableDateTime { get; }
    public JsonTypeInfo`1<IDictionary`2<string, object>> IDictionaryStringObject { get; }
    public JsonTypeInfo`1<IDictionary`2<string, string>> IDictionaryStringString { get; }
    public JsonTypeInfo`1<IList`1<Corev1EndpointPort>> IListCorev1EndpointPort { get; }
    public JsonTypeInfo`1<IList`1<Corev1Event>> IListCorev1Event { get; }
    public JsonTypeInfo`1<IList`1<Discoveryv1EndpointPort>> IListDiscoveryv1EndpointPort { get; }
    public JsonTypeInfo`1<IList`1<Eventsv1Event>> IListEventsv1Event { get; }
    public JsonTypeInfo`1<IList`1<Flowcontrolv1Subject>> IListFlowcontrolv1Subject { get; }
    public JsonTypeInfo`1<IList`1<Rbacv1Subject>> IListRbacv1Subject { get; }
    public JsonTypeInfo`1<IList`1<Storagev1TokenRequest>> IListStoragev1TokenRequest { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1AuditAnnotation>> IListV1alpha1AuditAnnotation { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1ClusterTrustBundle>> IListV1alpha1ClusterTrustBundle { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1ExpressionWarning>> IListV1alpha1ExpressionWarning { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1LeaseCandidate>> IListV1alpha1LeaseCandidate { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1MatchCondition>> IListV1alpha1MatchCondition { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1MigrationCondition>> IListV1alpha1MigrationCondition { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1NamedRuleWithOperations>> IListV1alpha1NamedRuleWithOperations { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1ServerStorageVersion>> IListV1alpha1ServerStorageVersion { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1StorageVersion>> IListV1alpha1StorageVersion { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1StorageVersionCondition>> IListV1alpha1StorageVersionCondition { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1StorageVersionMigration>> IListV1alpha1StorageVersionMigration { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicy>> IListV1alpha1ValidatingAdmissionPolicy { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicyBinding>> IListV1alpha1ValidatingAdmissionPolicyBinding { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1Validation>> IListV1alpha1Validation { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1Variable>> IListV1alpha1Variable { get; }
    public JsonTypeInfo`1<IList`1<V1alpha1VolumeAttributesClass>> IListV1alpha1VolumeAttributesClass { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3Device>> IListV1alpha3Device { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceAllocationConfiguration>> IListV1alpha3DeviceAllocationConfiguration { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceClaimConfiguration>> IListV1alpha3DeviceClaimConfiguration { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceClass>> IListV1alpha3DeviceClass { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceClassConfiguration>> IListV1alpha3DeviceClassConfiguration { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceConstraint>> IListV1alpha3DeviceConstraint { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceRequest>> IListV1alpha3DeviceRequest { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceRequestAllocationResult>> IListV1alpha3DeviceRequestAllocationResult { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceSelector>> IListV1alpha3DeviceSelector { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3PodSchedulingContext>> IListV1alpha3PodSchedulingContext { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaim>> IListV1alpha3ResourceClaim { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimConsumerReference>> IListV1alpha3ResourceClaimConsumerReference { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimSchedulingStatus>> IListV1alpha3ResourceClaimSchedulingStatus { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimTemplate>> IListV1alpha3ResourceClaimTemplate { get; }
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceSlice>> IListV1alpha3ResourceSlice { get; }
    public JsonTypeInfo`1<IList`1<V1APIGroup>> IListV1APIGroup { get; }
    public JsonTypeInfo`1<IList`1<V1APIResource>> IListV1APIResource { get; }
    public JsonTypeInfo`1<IList`1<V1APIService>> IListV1APIService { get; }
    public JsonTypeInfo`1<IList`1<V1APIServiceCondition>> IListV1APIServiceCondition { get; }
    public JsonTypeInfo`1<IList`1<V1AttachedVolume>> IListV1AttachedVolume { get; }
    public JsonTypeInfo`1<IList`1<V1AuditAnnotation>> IListV1AuditAnnotation { get; }
    public JsonTypeInfo`1<IList`1<V1beta1AuditAnnotation>> IListV1beta1AuditAnnotation { get; }
    public JsonTypeInfo`1<IList`1<V1beta1ExpressionWarning>> IListV1beta1ExpressionWarning { get; }
    public JsonTypeInfo`1<IList`1<V1beta1IPAddress>> IListV1beta1IPAddress { get; }
    public JsonTypeInfo`1<IList`1<V1beta1MatchCondition>> IListV1beta1MatchCondition { get; }
    public JsonTypeInfo`1<IList`1<V1beta1NamedRuleWithOperations>> IListV1beta1NamedRuleWithOperations { get; }
    public JsonTypeInfo`1<IList`1<V1beta1ServiceCIDR>> IListV1beta1ServiceCIDR { get; }
    public JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicy>> IListV1beta1ValidatingAdmissionPolicy { get; }
    public JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicyBinding>> IListV1beta1ValidatingAdmissionPolicyBinding { get; }
    public JsonTypeInfo`1<IList`1<V1beta1Validation>> IListV1beta1Validation { get; }
    public JsonTypeInfo`1<IList`1<V1beta1Variable>> IListV1beta1Variable { get; }
    public JsonTypeInfo`1<IList`1<V1beta1VolumeAttributesClass>> IListV1beta1VolumeAttributesClass { get; }
    public JsonTypeInfo`1<IList`1<V1beta3FlowSchema>> IListV1beta3FlowSchema { get; }
    public JsonTypeInfo`1<IList`1<V1beta3FlowSchemaCondition>> IListV1beta3FlowSchemaCondition { get; }
    public JsonTypeInfo`1<IList`1<V1beta3NonResourcePolicyRule>> IListV1beta3NonResourcePolicyRule { get; }
    public JsonTypeInfo`1<IList`1<V1beta3PolicyRulesWithSubjects>> IListV1beta3PolicyRulesWithSubjects { get; }
    public JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfiguration>> IListV1beta3PriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfigurationCondition>> IListV1beta3PriorityLevelConfigurationCondition { get; }
    public JsonTypeInfo`1<IList`1<V1beta3ResourcePolicyRule>> IListV1beta3ResourcePolicyRule { get; }
    public JsonTypeInfo`1<IList`1<V1beta3Subject>> IListV1beta3Subject { get; }
    public JsonTypeInfo`1<IList`1<V1CertificateSigningRequest>> IListV1CertificateSigningRequest { get; }
    public JsonTypeInfo`1<IList`1<V1CertificateSigningRequestCondition>> IListV1CertificateSigningRequestCondition { get; }
    public JsonTypeInfo`1<IList`1<V1ClusterRole>> IListV1ClusterRole { get; }
    public JsonTypeInfo`1<IList`1<V1ClusterRoleBinding>> IListV1ClusterRoleBinding { get; }
    public JsonTypeInfo`1<IList`1<V1ComponentCondition>> IListV1ComponentCondition { get; }
    public JsonTypeInfo`1<IList`1<V1ComponentStatus>> IListV1ComponentStatus { get; }
    public JsonTypeInfo`1<IList`1<V1Condition>> IListV1Condition { get; }
    public JsonTypeInfo`1<IList`1<V1ConfigMap>> IListV1ConfigMap { get; }
    public JsonTypeInfo`1<IList`1<V1Container>> IListV1Container { get; }
    public JsonTypeInfo`1<IList`1<V1ContainerImage>> IListV1ContainerImage { get; }
    public JsonTypeInfo`1<IList`1<V1ContainerPort>> IListV1ContainerPort { get; }
    public JsonTypeInfo`1<IList`1<V1ContainerResizePolicy>> IListV1ContainerResizePolicy { get; }
    public JsonTypeInfo`1<IList`1<V1ContainerStatus>> IListV1ContainerStatus { get; }
    public JsonTypeInfo`1<IList`1<V1ControllerRevision>> IListV1ControllerRevision { get; }
    public JsonTypeInfo`1<IList`1<V1CronJob>> IListV1CronJob { get; }
    public JsonTypeInfo`1<IList`1<V1CSIDriver>> IListV1CSIDriver { get; }
    public JsonTypeInfo`1<IList`1<V1CSINode>> IListV1CSINode { get; }
    public JsonTypeInfo`1<IList`1<V1CSINodeDriver>> IListV1CSINodeDriver { get; }
    public JsonTypeInfo`1<IList`1<V1CSIStorageCapacity>> IListV1CSIStorageCapacity { get; }
    public JsonTypeInfo`1<IList`1<V1CustomResourceColumnDefinition>> IListV1CustomResourceColumnDefinition { get; }
    public JsonTypeInfo`1<IList`1<V1CustomResourceDefinition>> IListV1CustomResourceDefinition { get; }
    public JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionCondition>> IListV1CustomResourceDefinitionCondition { get; }
    public JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionVersion>> IListV1CustomResourceDefinitionVersion { get; }
    public JsonTypeInfo`1<IList`1<V1DaemonSet>> IListV1DaemonSet { get; }
    public JsonTypeInfo`1<IList`1<V1DaemonSetCondition>> IListV1DaemonSetCondition { get; }
    public JsonTypeInfo`1<IList`1<V1Deployment>> IListV1Deployment { get; }
    public JsonTypeInfo`1<IList`1<V1DeploymentCondition>> IListV1DeploymentCondition { get; }
    public JsonTypeInfo`1<IList`1<V1DownwardAPIVolumeFile>> IListV1DownwardAPIVolumeFile { get; }
    public JsonTypeInfo`1<IList`1<V1Endpoint>> IListV1Endpoint { get; }
    public JsonTypeInfo`1<IList`1<V1EndpointAddress>> IListV1EndpointAddress { get; }
    public JsonTypeInfo`1<IList`1<V1Endpoints>> IListV1Endpoints { get; }
    public JsonTypeInfo`1<IList`1<V1EndpointSlice>> IListV1EndpointSlice { get; }
    public JsonTypeInfo`1<IList`1<V1EndpointSubset>> IListV1EndpointSubset { get; }
    public JsonTypeInfo`1<IList`1<V1EnvFromSource>> IListV1EnvFromSource { get; }
    public JsonTypeInfo`1<IList`1<V1EnvVar>> IListV1EnvVar { get; }
    public JsonTypeInfo`1<IList`1<V1EphemeralContainer>> IListV1EphemeralContainer { get; }
    public JsonTypeInfo`1<IList`1<V1ExpressionWarning>> IListV1ExpressionWarning { get; }
    public JsonTypeInfo`1<IList`1<V1FieldSelectorRequirement>> IListV1FieldSelectorRequirement { get; }
    public JsonTypeInfo`1<IList`1<V1FlowSchema>> IListV1FlowSchema { get; }
    public JsonTypeInfo`1<IList`1<V1FlowSchemaCondition>> IListV1FlowSchemaCondition { get; }
    public JsonTypeInfo`1<IList`1<V1ForZone>> IListV1ForZone { get; }
    public JsonTypeInfo`1<IList`1<V1GroupVersionForDiscovery>> IListV1GroupVersionForDiscovery { get; }
    public JsonTypeInfo`1<IList`1<V1HorizontalPodAutoscaler>> IListV1HorizontalPodAutoscaler { get; }
    public JsonTypeInfo`1<IList`1<V1HostAlias>> IListV1HostAlias { get; }
    public JsonTypeInfo`1<IList`1<V1HostIP>> IListV1HostIP { get; }
    public JsonTypeInfo`1<IList`1<V1HTTPHeader>> IListV1HTTPHeader { get; }
    public JsonTypeInfo`1<IList`1<V1HTTPIngressPath>> IListV1HTTPIngressPath { get; }
    public JsonTypeInfo`1<IList`1<V1Ingress>> IListV1Ingress { get; }
    public JsonTypeInfo`1<IList`1<V1IngressClass>> IListV1IngressClass { get; }
    public JsonTypeInfo`1<IList`1<V1IngressLoadBalancerIngress>> IListV1IngressLoadBalancerIngress { get; }
    public JsonTypeInfo`1<IList`1<V1IngressPortStatus>> IListV1IngressPortStatus { get; }
    public JsonTypeInfo`1<IList`1<V1IngressRule>> IListV1IngressRule { get; }
    public JsonTypeInfo`1<IList`1<V1IngressTLS>> IListV1IngressTLS { get; }
    public JsonTypeInfo`1<IList`1<V1Job>> IListV1Job { get; }
    public JsonTypeInfo`1<IList`1<V1JobCondition>> IListV1JobCondition { get; }
    public JsonTypeInfo`1<IList`1<V1JSONSchemaProps>> IListV1JSONSchemaProps { get; }
    public JsonTypeInfo`1<IList`1<V1KeyToPath>> IListV1KeyToPath { get; }
    public JsonTypeInfo`1<IList`1<V1LabelSelector>> IListV1LabelSelector { get; }
    public JsonTypeInfo`1<IList`1<V1LabelSelectorRequirement>> IListV1LabelSelectorRequirement { get; }
    public JsonTypeInfo`1<IList`1<V1Lease>> IListV1Lease { get; }
    public JsonTypeInfo`1<IList`1<V1LimitRange>> IListV1LimitRange { get; }
    public JsonTypeInfo`1<IList`1<V1LimitRangeItem>> IListV1LimitRangeItem { get; }
    public JsonTypeInfo`1<IList`1<V1LoadBalancerIngress>> IListV1LoadBalancerIngress { get; }
    public JsonTypeInfo`1<IList`1<V1LocalObjectReference>> IListV1LocalObjectReference { get; }
    public JsonTypeInfo`1<IList`1<V1ManagedFieldsEntry>> IListV1ManagedFieldsEntry { get; }
    public JsonTypeInfo`1<IList`1<V1MatchCondition>> IListV1MatchCondition { get; }
    public JsonTypeInfo`1<IList`1<V1MutatingWebhook>> IListV1MutatingWebhook { get; }
    public JsonTypeInfo`1<IList`1<V1MutatingWebhookConfiguration>> IListV1MutatingWebhookConfiguration { get; }
    public JsonTypeInfo`1<IList`1<V1NamedRuleWithOperations>> IListV1NamedRuleWithOperations { get; }
    public JsonTypeInfo`1<IList`1<V1Namespace>> IListV1Namespace { get; }
    public JsonTypeInfo`1<IList`1<V1NamespaceCondition>> IListV1NamespaceCondition { get; }
    public JsonTypeInfo`1<IList`1<V1NetworkPolicy>> IListV1NetworkPolicy { get; }
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyEgressRule>> IListV1NetworkPolicyEgressRule { get; }
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyIngressRule>> IListV1NetworkPolicyIngressRule { get; }
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyPeer>> IListV1NetworkPolicyPeer { get; }
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyPort>> IListV1NetworkPolicyPort { get; }
    public JsonTypeInfo`1<IList`1<V1Node>> IListV1Node { get; }
    public JsonTypeInfo`1<IList`1<V1NodeAddress>> IListV1NodeAddress { get; }
    public JsonTypeInfo`1<IList`1<V1NodeCondition>> IListV1NodeCondition { get; }
    public JsonTypeInfo`1<IList`1<V1NodeRuntimeHandler>> IListV1NodeRuntimeHandler { get; }
    public JsonTypeInfo`1<IList`1<V1NodeSelectorRequirement>> IListV1NodeSelectorRequirement { get; }
    public JsonTypeInfo`1<IList`1<V1NodeSelectorTerm>> IListV1NodeSelectorTerm { get; }
    public JsonTypeInfo`1<IList`1<V1NonResourcePolicyRule>> IListV1NonResourcePolicyRule { get; }
    public JsonTypeInfo`1<IList`1<V1NonResourceRule>> IListV1NonResourceRule { get; }
    public JsonTypeInfo`1<IList`1<V1ObjectReference>> IListV1ObjectReference { get; }
    public JsonTypeInfo`1<IList`1<V1OwnerReference>> IListV1OwnerReference { get; }
    public JsonTypeInfo`1<IList`1<V1PersistentVolume>> IListV1PersistentVolume { get; }
    public JsonTypeInfo`1<IList`1<V1PersistentVolumeClaim>> IListV1PersistentVolumeClaim { get; }
    public JsonTypeInfo`1<IList`1<V1PersistentVolumeClaimCondition>> IListV1PersistentVolumeClaimCondition { get; }
    public JsonTypeInfo`1<IList`1<V1Pod>> IListV1Pod { get; }
    public JsonTypeInfo`1<IList`1<V1PodAffinityTerm>> IListV1PodAffinityTerm { get; }
    public JsonTypeInfo`1<IList`1<V1PodCondition>> IListV1PodCondition { get; }
    public JsonTypeInfo`1<IList`1<V1PodDisruptionBudget>> IListV1PodDisruptionBudget { get; }
    public JsonTypeInfo`1<IList`1<V1PodDNSConfigOption>> IListV1PodDNSConfigOption { get; }
    public JsonTypeInfo`1<IList`1<V1PodFailurePolicyOnPodConditionsPattern>> IListV1PodFailurePolicyOnPodConditionsPattern { get; }
    public JsonTypeInfo`1<IList`1<V1PodFailurePolicyRule>> IListV1PodFailurePolicyRule { get; }
    public JsonTypeInfo`1<IList`1<V1PodIP>> IListV1PodIP { get; }
    public JsonTypeInfo`1<IList`1<V1PodReadinessGate>> IListV1PodReadinessGate { get; }
    public JsonTypeInfo`1<IList`1<V1PodResourceClaim>> IListV1PodResourceClaim { get; }
    public JsonTypeInfo`1<IList`1<V1PodResourceClaimStatus>> IListV1PodResourceClaimStatus { get; }
    public JsonTypeInfo`1<IList`1<V1PodSchedulingGate>> IListV1PodSchedulingGate { get; }
    public JsonTypeInfo`1<IList`1<V1PodTemplate>> IListV1PodTemplate { get; }
    public JsonTypeInfo`1<IList`1<V1PolicyRule>> IListV1PolicyRule { get; }
    public JsonTypeInfo`1<IList`1<V1PolicyRulesWithSubjects>> IListV1PolicyRulesWithSubjects { get; }
    public JsonTypeInfo`1<IList`1<V1PortStatus>> IListV1PortStatus { get; }
    public JsonTypeInfo`1<IList`1<V1PreferredSchedulingTerm>> IListV1PreferredSchedulingTerm { get; }
    public JsonTypeInfo`1<IList`1<V1PriorityClass>> IListV1PriorityClass { get; }
    public JsonTypeInfo`1<IList`1<V1PriorityLevelConfiguration>> IListV1PriorityLevelConfiguration { get; }
    public JsonTypeInfo`1<IList`1<V1PriorityLevelConfigurationCondition>> IListV1PriorityLevelConfigurationCondition { get; }
    public JsonTypeInfo`1<IList`1<V1ReplicaSet>> IListV1ReplicaSet { get; }
    public JsonTypeInfo`1<IList`1<V1ReplicaSetCondition>> IListV1ReplicaSetCondition { get; }
    public JsonTypeInfo`1<IList`1<V1ReplicationController>> IListV1ReplicationController { get; }
    public JsonTypeInfo`1<IList`1<V1ReplicationControllerCondition>> IListV1ReplicationControllerCondition { get; }
    public JsonTypeInfo`1<IList`1<V1ResourceClaim>> IListV1ResourceClaim { get; }
    public JsonTypeInfo`1<IList`1<V1ResourceHealth>> IListV1ResourceHealth { get; }
    public JsonTypeInfo`1<IList`1<V1ResourcePolicyRule>> IListV1ResourcePolicyRule { get; }
    public JsonTypeInfo`1<IList`1<V1ResourceQuota>> IListV1ResourceQuota { get; }
    public JsonTypeInfo`1<IList`1<V1ResourceRule>> IListV1ResourceRule { get; }
    public JsonTypeInfo`1<IList`1<V1ResourceStatus>> IListV1ResourceStatus { get; }
    public JsonTypeInfo`1<IList`1<V1Role>> IListV1Role { get; }
    public JsonTypeInfo`1<IList`1<V1RoleBinding>> IListV1RoleBinding { get; }
    public JsonTypeInfo`1<IList`1<V1RuleWithOperations>> IListV1RuleWithOperations { get; }
    public JsonTypeInfo`1<IList`1<V1RuntimeClass>> IListV1RuntimeClass { get; }
    public JsonTypeInfo`1<IList`1<V1ScopedResourceSelectorRequirement>> IListV1ScopedResourceSelectorRequirement { get; }
    public JsonTypeInfo`1<IList`1<V1Secret>> IListV1Secret { get; }
    public JsonTypeInfo`1<IList`1<V1SelectableField>> IListV1SelectableField { get; }
    public JsonTypeInfo`1<IList`1<V1ServerAddressByClientCIDR>> IListV1ServerAddressByClientCIDR { get; }
    public JsonTypeInfo`1<IList`1<V1Service>> IListV1Service { get; }
    public JsonTypeInfo`1<IList`1<V1ServiceAccount>> IListV1ServiceAccount { get; }
    public JsonTypeInfo`1<IList`1<V1ServicePort>> IListV1ServicePort { get; }
    public JsonTypeInfo`1<IList`1<V1StatefulSet>> IListV1StatefulSet { get; }
    public JsonTypeInfo`1<IList`1<V1StatefulSetCondition>> IListV1StatefulSetCondition { get; }
    public JsonTypeInfo`1<IList`1<V1StatusCause>> IListV1StatusCause { get; }
    public JsonTypeInfo`1<IList`1<V1StorageClass>> IListV1StorageClass { get; }
    public JsonTypeInfo`1<IList`1<V1SuccessPolicyRule>> IListV1SuccessPolicyRule { get; }
    public JsonTypeInfo`1<IList`1<V1Sysctl>> IListV1Sysctl { get; }
    public JsonTypeInfo`1<IList`1<V1Taint>> IListV1Taint { get; }
    public JsonTypeInfo`1<IList`1<V1Toleration>> IListV1Toleration { get; }
    public JsonTypeInfo`1<IList`1<V1TopologySelectorLabelRequirement>> IListV1TopologySelectorLabelRequirement { get; }
    public JsonTypeInfo`1<IList`1<V1TopologySelectorTerm>> IListV1TopologySelectorTerm { get; }
    public JsonTypeInfo`1<IList`1<V1TopologySpreadConstraint>> IListV1TopologySpreadConstraint { get; }
    public JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicy>> IListV1ValidatingAdmissionPolicy { get; }
    public JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicyBinding>> IListV1ValidatingAdmissionPolicyBinding { get; }
    public JsonTypeInfo`1<IList`1<V1ValidatingWebhook>> IListV1ValidatingWebhook { get; }
    public JsonTypeInfo`1<IList`1<V1ValidatingWebhookConfiguration>> IListV1ValidatingWebhookConfiguration { get; }
    public JsonTypeInfo`1<IList`1<V1Validation>> IListV1Validation { get; }
    public JsonTypeInfo`1<IList`1<V1ValidationRule>> IListV1ValidationRule { get; }
    public JsonTypeInfo`1<IList`1<V1Variable>> IListV1Variable { get; }
    public JsonTypeInfo`1<IList`1<V1Volume>> IListV1Volume { get; }
    public JsonTypeInfo`1<IList`1<V1VolumeAttachment>> IListV1VolumeAttachment { get; }
    public JsonTypeInfo`1<IList`1<V1VolumeDevice>> IListV1VolumeDevice { get; }
    public JsonTypeInfo`1<IList`1<V1VolumeMount>> IListV1VolumeMount { get; }
    public JsonTypeInfo`1<IList`1<V1VolumeMountStatus>> IListV1VolumeMountStatus { get; }
    public JsonTypeInfo`1<IList`1<V1VolumeProjection>> IListV1VolumeProjection { get; }
    public JsonTypeInfo`1<IList`1<V1WeightedPodAffinityTerm>> IListV1WeightedPodAffinityTerm { get; }
    public JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscaler>> IListV2HorizontalPodAutoscaler { get; }
    public JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscalerCondition>> IListV2HorizontalPodAutoscalerCondition { get; }
    public JsonTypeInfo`1<IList`1<V2HPAScalingPolicy>> IListV2HPAScalingPolicy { get; }
    public JsonTypeInfo`1<IList`1<V2MetricSpec>> IListV2MetricSpec { get; }
    public JsonTypeInfo`1<IList`1<V2MetricStatus>> IListV2MetricStatus { get; }
    public JsonTypeInfo`1<IList`1<int>> IListInt32 { get; }
    public JsonTypeInfo`1<IList`1<Nullable`1<long>>> IListNullableInt64 { get; }
    public JsonTypeInfo`1<IList`1<object>> IListObject { get; }
    public JsonTypeInfo`1<IList`1<string>> IListString { get; }
    public JsonTypeInfo`1<DateTime> DateTime { get; }
    public JsonTypeInfo`1<Nullable`1<DateTime>> NullableDateTime { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<Nullable`1<int>> NullableInt32 { get; }
    public JsonTypeInfo`1<long> Int64 { get; }
    public JsonTypeInfo`1<Nullable`1<long>> NullableInt64 { get; }
    public JsonTypeInfo`1<object> Object { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static SourceGenerationContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public SourceGenerationContext(JsonSerializerOptions options);
    private static SourceGenerationContext();
    public JsonTypeInfo`1<bool> get_Boolean();
    private JsonTypeInfo`1<bool> Create_Boolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<bool>> get_NullableBoolean();
    private JsonTypeInfo`1<Nullable`1<bool>> Create_NullableBoolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<Byte[]> get_ByteArray();
    private JsonTypeInfo`1<Byte[]> Create_ByteArray(JsonSerializerOptions options);
    public JsonTypeInfo`1<double> get_Double();
    private JsonTypeInfo`1<double> Create_Double(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<double>> get_NullableDouble();
    private JsonTypeInfo`1<Nullable`1<double>> Create_NullableDouble(JsonSerializerOptions options);
    public JsonTypeInfo`1<Admissionregistrationv1ServiceReference> get_Admissionregistrationv1ServiceReference();
    private JsonTypeInfo`1<Admissionregistrationv1ServiceReference> Create_Admissionregistrationv1ServiceReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Admissionregistrationv1ServiceReferencePropInit(JsonSerializerOptions options);
    private void Admissionregistrationv1ServiceReferenceSerializeHandler(Utf8JsonWriter writer, Admissionregistrationv1ServiceReference value);
    public JsonTypeInfo`1<Admissionregistrationv1WebhookClientConfig> get_Admissionregistrationv1WebhookClientConfig();
    private JsonTypeInfo`1<Admissionregistrationv1WebhookClientConfig> Create_Admissionregistrationv1WebhookClientConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Admissionregistrationv1WebhookClientConfigPropInit(JsonSerializerOptions options);
    private void Admissionregistrationv1WebhookClientConfigSerializeHandler(Utf8JsonWriter writer, Admissionregistrationv1WebhookClientConfig value);
    public JsonTypeInfo`1<Apiextensionsv1ServiceReference> get_Apiextensionsv1ServiceReference();
    private JsonTypeInfo`1<Apiextensionsv1ServiceReference> Create_Apiextensionsv1ServiceReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Apiextensionsv1ServiceReferencePropInit(JsonSerializerOptions options);
    private void Apiextensionsv1ServiceReferenceSerializeHandler(Utf8JsonWriter writer, Apiextensionsv1ServiceReference value);
    public JsonTypeInfo`1<Apiextensionsv1WebhookClientConfig> get_Apiextensionsv1WebhookClientConfig();
    private JsonTypeInfo`1<Apiextensionsv1WebhookClientConfig> Create_Apiextensionsv1WebhookClientConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Apiextensionsv1WebhookClientConfigPropInit(JsonSerializerOptions options);
    private void Apiextensionsv1WebhookClientConfigSerializeHandler(Utf8JsonWriter writer, Apiextensionsv1WebhookClientConfig value);
    public JsonTypeInfo`1<Apiregistrationv1ServiceReference> get_Apiregistrationv1ServiceReference();
    private JsonTypeInfo`1<Apiregistrationv1ServiceReference> Create_Apiregistrationv1ServiceReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Apiregistrationv1ServiceReferencePropInit(JsonSerializerOptions options);
    private void Apiregistrationv1ServiceReferenceSerializeHandler(Utf8JsonWriter writer, Apiregistrationv1ServiceReference value);
    public JsonTypeInfo`1<Authenticationv1TokenRequest> get_Authenticationv1TokenRequest();
    private JsonTypeInfo`1<Authenticationv1TokenRequest> Create_Authenticationv1TokenRequest(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Authenticationv1TokenRequestPropInit(JsonSerializerOptions options);
    private void Authenticationv1TokenRequestSerializeHandler(Utf8JsonWriter writer, Authenticationv1TokenRequest value);
    public JsonTypeInfo`1<Corev1EndpointPort> get_Corev1EndpointPort();
    private JsonTypeInfo`1<Corev1EndpointPort> Create_Corev1EndpointPort(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Corev1EndpointPortPropInit(JsonSerializerOptions options);
    private void Corev1EndpointPortSerializeHandler(Utf8JsonWriter writer, Corev1EndpointPort value);
    public JsonTypeInfo`1<Corev1Event> get_Corev1Event();
    private JsonTypeInfo`1<Corev1Event> Create_Corev1Event(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Corev1EventPropInit(JsonSerializerOptions options);
    private void Corev1EventSerializeHandler(Utf8JsonWriter writer, Corev1Event value);
    public JsonTypeInfo`1<Corev1EventList> get_Corev1EventList();
    private JsonTypeInfo`1<Corev1EventList> Create_Corev1EventList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Corev1EventListPropInit(JsonSerializerOptions options);
    private void Corev1EventListSerializeHandler(Utf8JsonWriter writer, Corev1EventList value);
    public JsonTypeInfo`1<Corev1EventSeries> get_Corev1EventSeries();
    private JsonTypeInfo`1<Corev1EventSeries> Create_Corev1EventSeries(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Corev1EventSeriesPropInit(JsonSerializerOptions options);
    private void Corev1EventSeriesSerializeHandler(Utf8JsonWriter writer, Corev1EventSeries value);
    public JsonTypeInfo`1<Discoveryv1EndpointPort> get_Discoveryv1EndpointPort();
    private JsonTypeInfo`1<Discoveryv1EndpointPort> Create_Discoveryv1EndpointPort(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Discoveryv1EndpointPortPropInit(JsonSerializerOptions options);
    private void Discoveryv1EndpointPortSerializeHandler(Utf8JsonWriter writer, Discoveryv1EndpointPort value);
    public JsonTypeInfo`1<Eventsv1Event> get_Eventsv1Event();
    private JsonTypeInfo`1<Eventsv1Event> Create_Eventsv1Event(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Eventsv1EventPropInit(JsonSerializerOptions options);
    private void Eventsv1EventSerializeHandler(Utf8JsonWriter writer, Eventsv1Event value);
    public JsonTypeInfo`1<Eventsv1EventList> get_Eventsv1EventList();
    private JsonTypeInfo`1<Eventsv1EventList> Create_Eventsv1EventList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Eventsv1EventListPropInit(JsonSerializerOptions options);
    private void Eventsv1EventListSerializeHandler(Utf8JsonWriter writer, Eventsv1EventList value);
    public JsonTypeInfo`1<Eventsv1EventSeries> get_Eventsv1EventSeries();
    private JsonTypeInfo`1<Eventsv1EventSeries> Create_Eventsv1EventSeries(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Eventsv1EventSeriesPropInit(JsonSerializerOptions options);
    private void Eventsv1EventSeriesSerializeHandler(Utf8JsonWriter writer, Eventsv1EventSeries value);
    public JsonTypeInfo`1<Flowcontrolv1Subject> get_Flowcontrolv1Subject();
    private JsonTypeInfo`1<Flowcontrolv1Subject> Create_Flowcontrolv1Subject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Flowcontrolv1SubjectPropInit(JsonSerializerOptions options);
    private void Flowcontrolv1SubjectSerializeHandler(Utf8JsonWriter writer, Flowcontrolv1Subject value);
    public JsonTypeInfo`1<IntstrIntOrString> get_IntstrIntOrString();
    private JsonTypeInfo`1<IntstrIntOrString> Create_IntstrIntOrString(JsonSerializerOptions options);
    public JsonTypeInfo`1<Rbacv1Subject> get_Rbacv1Subject();
    private JsonTypeInfo`1<Rbacv1Subject> Create_Rbacv1Subject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Rbacv1SubjectPropInit(JsonSerializerOptions options);
    private void Rbacv1SubjectSerializeHandler(Utf8JsonWriter writer, Rbacv1Subject value);
    public JsonTypeInfo`1<ResourceQuantity> get_ResourceQuantity();
    private JsonTypeInfo`1<ResourceQuantity> Create_ResourceQuantity(JsonSerializerOptions options);
    public JsonTypeInfo`1<Storagev1TokenRequest> get_Storagev1TokenRequest();
    private JsonTypeInfo`1<Storagev1TokenRequest> Create_Storagev1TokenRequest(JsonSerializerOptions options);
    private static JsonPropertyInfo[] Storagev1TokenRequestPropInit(JsonSerializerOptions options);
    private void Storagev1TokenRequestSerializeHandler(Utf8JsonWriter writer, Storagev1TokenRequest value);
    public JsonTypeInfo`1<V1Affinity> get_V1Affinity();
    private JsonTypeInfo`1<V1Affinity> Create_V1Affinity(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AffinityPropInit(JsonSerializerOptions options);
    private void V1AffinitySerializeHandler(Utf8JsonWriter writer, V1Affinity value);
    public JsonTypeInfo`1<V1AggregationRule> get_V1AggregationRule();
    private JsonTypeInfo`1<V1AggregationRule> Create_V1AggregationRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AggregationRulePropInit(JsonSerializerOptions options);
    private void V1AggregationRuleSerializeHandler(Utf8JsonWriter writer, V1AggregationRule value);
    public JsonTypeInfo`1<V1alpha1AuditAnnotation> get_V1alpha1AuditAnnotation();
    private JsonTypeInfo`1<V1alpha1AuditAnnotation> Create_V1alpha1AuditAnnotation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1AuditAnnotationPropInit(JsonSerializerOptions options);
    private void V1alpha1AuditAnnotationSerializeHandler(Utf8JsonWriter writer, V1alpha1AuditAnnotation value);
    public JsonTypeInfo`1<V1alpha1ClusterTrustBundle> get_V1alpha1ClusterTrustBundle();
    private JsonTypeInfo`1<V1alpha1ClusterTrustBundle> Create_V1alpha1ClusterTrustBundle(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ClusterTrustBundlePropInit(JsonSerializerOptions options);
    private void V1alpha1ClusterTrustBundleSerializeHandler(Utf8JsonWriter writer, V1alpha1ClusterTrustBundle value);
    public JsonTypeInfo`1<V1alpha1ClusterTrustBundleList> get_V1alpha1ClusterTrustBundleList();
    private JsonTypeInfo`1<V1alpha1ClusterTrustBundleList> Create_V1alpha1ClusterTrustBundleList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ClusterTrustBundleListPropInit(JsonSerializerOptions options);
    private void V1alpha1ClusterTrustBundleListSerializeHandler(Utf8JsonWriter writer, V1alpha1ClusterTrustBundleList value);
    public JsonTypeInfo`1<V1alpha1ClusterTrustBundleSpec> get_V1alpha1ClusterTrustBundleSpec();
    private JsonTypeInfo`1<V1alpha1ClusterTrustBundleSpec> Create_V1alpha1ClusterTrustBundleSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ClusterTrustBundleSpecPropInit(JsonSerializerOptions options);
    private void V1alpha1ClusterTrustBundleSpecSerializeHandler(Utf8JsonWriter writer, V1alpha1ClusterTrustBundleSpec value);
    public JsonTypeInfo`1<V1alpha1ExpressionWarning> get_V1alpha1ExpressionWarning();
    private JsonTypeInfo`1<V1alpha1ExpressionWarning> Create_V1alpha1ExpressionWarning(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ExpressionWarningPropInit(JsonSerializerOptions options);
    private void V1alpha1ExpressionWarningSerializeHandler(Utf8JsonWriter writer, V1alpha1ExpressionWarning value);
    public JsonTypeInfo`1<V1alpha1GroupVersionResource> get_V1alpha1GroupVersionResource();
    private JsonTypeInfo`1<V1alpha1GroupVersionResource> Create_V1alpha1GroupVersionResource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1GroupVersionResourcePropInit(JsonSerializerOptions options);
    private void V1alpha1GroupVersionResourceSerializeHandler(Utf8JsonWriter writer, V1alpha1GroupVersionResource value);
    public JsonTypeInfo`1<V1alpha1LeaseCandidate> get_V1alpha1LeaseCandidate();
    private JsonTypeInfo`1<V1alpha1LeaseCandidate> Create_V1alpha1LeaseCandidate(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1LeaseCandidatePropInit(JsonSerializerOptions options);
    private void V1alpha1LeaseCandidateSerializeHandler(Utf8JsonWriter writer, V1alpha1LeaseCandidate value);
    public JsonTypeInfo`1<V1alpha1LeaseCandidateList> get_V1alpha1LeaseCandidateList();
    private JsonTypeInfo`1<V1alpha1LeaseCandidateList> Create_V1alpha1LeaseCandidateList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1LeaseCandidateListPropInit(JsonSerializerOptions options);
    private void V1alpha1LeaseCandidateListSerializeHandler(Utf8JsonWriter writer, V1alpha1LeaseCandidateList value);
    public JsonTypeInfo`1<V1alpha1LeaseCandidateSpec> get_V1alpha1LeaseCandidateSpec();
    private JsonTypeInfo`1<V1alpha1LeaseCandidateSpec> Create_V1alpha1LeaseCandidateSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1LeaseCandidateSpecPropInit(JsonSerializerOptions options);
    private void V1alpha1LeaseCandidateSpecSerializeHandler(Utf8JsonWriter writer, V1alpha1LeaseCandidateSpec value);
    public JsonTypeInfo`1<V1alpha1MatchCondition> get_V1alpha1MatchCondition();
    private JsonTypeInfo`1<V1alpha1MatchCondition> Create_V1alpha1MatchCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1MatchConditionPropInit(JsonSerializerOptions options);
    private void V1alpha1MatchConditionSerializeHandler(Utf8JsonWriter writer, V1alpha1MatchCondition value);
    public JsonTypeInfo`1<V1alpha1MatchResources> get_V1alpha1MatchResources();
    private JsonTypeInfo`1<V1alpha1MatchResources> Create_V1alpha1MatchResources(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1MatchResourcesPropInit(JsonSerializerOptions options);
    private void V1alpha1MatchResourcesSerializeHandler(Utf8JsonWriter writer, V1alpha1MatchResources value);
    public JsonTypeInfo`1<V1alpha1MigrationCondition> get_V1alpha1MigrationCondition();
    private JsonTypeInfo`1<V1alpha1MigrationCondition> Create_V1alpha1MigrationCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1MigrationConditionPropInit(JsonSerializerOptions options);
    private void V1alpha1MigrationConditionSerializeHandler(Utf8JsonWriter writer, V1alpha1MigrationCondition value);
    public JsonTypeInfo`1<V1alpha1NamedRuleWithOperations> get_V1alpha1NamedRuleWithOperations();
    private JsonTypeInfo`1<V1alpha1NamedRuleWithOperations> Create_V1alpha1NamedRuleWithOperations(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1NamedRuleWithOperationsPropInit(JsonSerializerOptions options);
    private void V1alpha1NamedRuleWithOperationsSerializeHandler(Utf8JsonWriter writer, V1alpha1NamedRuleWithOperations value);
    public JsonTypeInfo`1<V1alpha1ParamKind> get_V1alpha1ParamKind();
    private JsonTypeInfo`1<V1alpha1ParamKind> Create_V1alpha1ParamKind(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ParamKindPropInit(JsonSerializerOptions options);
    private void V1alpha1ParamKindSerializeHandler(Utf8JsonWriter writer, V1alpha1ParamKind value);
    public JsonTypeInfo`1<V1alpha1ParamRef> get_V1alpha1ParamRef();
    private JsonTypeInfo`1<V1alpha1ParamRef> Create_V1alpha1ParamRef(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ParamRefPropInit(JsonSerializerOptions options);
    private void V1alpha1ParamRefSerializeHandler(Utf8JsonWriter writer, V1alpha1ParamRef value);
    public JsonTypeInfo`1<V1alpha1SelfSubjectReview> get_V1alpha1SelfSubjectReview();
    private JsonTypeInfo`1<V1alpha1SelfSubjectReview> Create_V1alpha1SelfSubjectReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1SelfSubjectReviewPropInit(JsonSerializerOptions options);
    private void V1alpha1SelfSubjectReviewSerializeHandler(Utf8JsonWriter writer, V1alpha1SelfSubjectReview value);
    public JsonTypeInfo`1<V1alpha1SelfSubjectReviewStatus> get_V1alpha1SelfSubjectReviewStatus();
    private JsonTypeInfo`1<V1alpha1SelfSubjectReviewStatus> Create_V1alpha1SelfSubjectReviewStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1SelfSubjectReviewStatusPropInit(JsonSerializerOptions options);
    private void V1alpha1SelfSubjectReviewStatusSerializeHandler(Utf8JsonWriter writer, V1alpha1SelfSubjectReviewStatus value);
    public JsonTypeInfo`1<V1alpha1ServerStorageVersion> get_V1alpha1ServerStorageVersion();
    private JsonTypeInfo`1<V1alpha1ServerStorageVersion> Create_V1alpha1ServerStorageVersion(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ServerStorageVersionPropInit(JsonSerializerOptions options);
    private void V1alpha1ServerStorageVersionSerializeHandler(Utf8JsonWriter writer, V1alpha1ServerStorageVersion value);
    public JsonTypeInfo`1<V1alpha1StorageVersion> get_V1alpha1StorageVersion();
    private JsonTypeInfo`1<V1alpha1StorageVersion> Create_V1alpha1StorageVersion(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<V1alpha1StorageVersionCondition> get_V1alpha1StorageVersionCondition();
    private JsonTypeInfo`1<V1alpha1StorageVersionCondition> Create_V1alpha1StorageVersionCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionConditionPropInit(JsonSerializerOptions options);
    private void V1alpha1StorageVersionConditionSerializeHandler(Utf8JsonWriter writer, V1alpha1StorageVersionCondition value);
    public JsonTypeInfo`1<V1alpha1StorageVersionList> get_V1alpha1StorageVersionList();
    private JsonTypeInfo`1<V1alpha1StorageVersionList> Create_V1alpha1StorageVersionList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionListPropInit(JsonSerializerOptions options);
    private void V1alpha1StorageVersionListSerializeHandler(Utf8JsonWriter writer, V1alpha1StorageVersionList value);
    public JsonTypeInfo`1<V1alpha1StorageVersionMigration> get_V1alpha1StorageVersionMigration();
    private JsonTypeInfo`1<V1alpha1StorageVersionMigration> Create_V1alpha1StorageVersionMigration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionMigrationPropInit(JsonSerializerOptions options);
    private void V1alpha1StorageVersionMigrationSerializeHandler(Utf8JsonWriter writer, V1alpha1StorageVersionMigration value);
    public JsonTypeInfo`1<V1alpha1StorageVersionMigrationList> get_V1alpha1StorageVersionMigrationList();
    private JsonTypeInfo`1<V1alpha1StorageVersionMigrationList> Create_V1alpha1StorageVersionMigrationList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionMigrationListPropInit(JsonSerializerOptions options);
    private void V1alpha1StorageVersionMigrationListSerializeHandler(Utf8JsonWriter writer, V1alpha1StorageVersionMigrationList value);
    public JsonTypeInfo`1<V1alpha1StorageVersionMigrationSpec> get_V1alpha1StorageVersionMigrationSpec();
    private JsonTypeInfo`1<V1alpha1StorageVersionMigrationSpec> Create_V1alpha1StorageVersionMigrationSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionMigrationSpecPropInit(JsonSerializerOptions options);
    private void V1alpha1StorageVersionMigrationSpecSerializeHandler(Utf8JsonWriter writer, V1alpha1StorageVersionMigrationSpec value);
    public JsonTypeInfo`1<V1alpha1StorageVersionMigrationStatus> get_V1alpha1StorageVersionMigrationStatus();
    private JsonTypeInfo`1<V1alpha1StorageVersionMigrationStatus> Create_V1alpha1StorageVersionMigrationStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionMigrationStatusPropInit(JsonSerializerOptions options);
    private void V1alpha1StorageVersionMigrationStatusSerializeHandler(Utf8JsonWriter writer, V1alpha1StorageVersionMigrationStatus value);
    public JsonTypeInfo`1<V1alpha1StorageVersionStatus> get_V1alpha1StorageVersionStatus();
    private JsonTypeInfo`1<V1alpha1StorageVersionStatus> Create_V1alpha1StorageVersionStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1StorageVersionStatusPropInit(JsonSerializerOptions options);
    private void V1alpha1StorageVersionStatusSerializeHandler(Utf8JsonWriter writer, V1alpha1StorageVersionStatus value);
    public JsonTypeInfo`1<V1alpha1TypeChecking> get_V1alpha1TypeChecking();
    private JsonTypeInfo`1<V1alpha1TypeChecking> Create_V1alpha1TypeChecking(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1TypeCheckingPropInit(JsonSerializerOptions options);
    private void V1alpha1TypeCheckingSerializeHandler(Utf8JsonWriter writer, V1alpha1TypeChecking value);
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicy> get_V1alpha1ValidatingAdmissionPolicy();
    private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicy> Create_V1alpha1ValidatingAdmissionPolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidatingAdmissionPolicyPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidatingAdmissionPolicySerializeHandler(Utf8JsonWriter writer, V1alpha1ValidatingAdmissionPolicy value);
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBinding> get_V1alpha1ValidatingAdmissionPolicyBinding();
    private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBinding> Create_V1alpha1ValidatingAdmissionPolicyBinding(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidatingAdmissionPolicyBindingPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidatingAdmissionPolicyBindingSerializeHandler(Utf8JsonWriter writer, V1alpha1ValidatingAdmissionPolicyBinding value);
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingList> get_V1alpha1ValidatingAdmissionPolicyBindingList();
    private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingList> Create_V1alpha1ValidatingAdmissionPolicyBindingList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidatingAdmissionPolicyBindingListPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidatingAdmissionPolicyBindingListSerializeHandler(Utf8JsonWriter writer, V1alpha1ValidatingAdmissionPolicyBindingList value);
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingSpec> get_V1alpha1ValidatingAdmissionPolicyBindingSpec();
    private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyBindingSpec> Create_V1alpha1ValidatingAdmissionPolicyBindingSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidatingAdmissionPolicyBindingSpecPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidatingAdmissionPolicyBindingSpecSerializeHandler(Utf8JsonWriter writer, V1alpha1ValidatingAdmissionPolicyBindingSpec value);
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyList> get_V1alpha1ValidatingAdmissionPolicyList();
    private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyList> Create_V1alpha1ValidatingAdmissionPolicyList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidatingAdmissionPolicyListPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidatingAdmissionPolicyListSerializeHandler(Utf8JsonWriter writer, V1alpha1ValidatingAdmissionPolicyList value);
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicySpec> get_V1alpha1ValidatingAdmissionPolicySpec();
    private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicySpec> Create_V1alpha1ValidatingAdmissionPolicySpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidatingAdmissionPolicySpecPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidatingAdmissionPolicySpecSerializeHandler(Utf8JsonWriter writer, V1alpha1ValidatingAdmissionPolicySpec value);
    public JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyStatus> get_V1alpha1ValidatingAdmissionPolicyStatus();
    private JsonTypeInfo`1<V1alpha1ValidatingAdmissionPolicyStatus> Create_V1alpha1ValidatingAdmissionPolicyStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidatingAdmissionPolicyStatusPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidatingAdmissionPolicyStatusSerializeHandler(Utf8JsonWriter writer, V1alpha1ValidatingAdmissionPolicyStatus value);
    public JsonTypeInfo`1<V1alpha1Validation> get_V1alpha1Validation();
    private JsonTypeInfo`1<V1alpha1Validation> Create_V1alpha1Validation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1ValidationPropInit(JsonSerializerOptions options);
    private void V1alpha1ValidationSerializeHandler(Utf8JsonWriter writer, V1alpha1Validation value);
    public JsonTypeInfo`1<V1alpha1Variable> get_V1alpha1Variable();
    private JsonTypeInfo`1<V1alpha1Variable> Create_V1alpha1Variable(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1VariablePropInit(JsonSerializerOptions options);
    private void V1alpha1VariableSerializeHandler(Utf8JsonWriter writer, V1alpha1Variable value);
    public JsonTypeInfo`1<V1alpha1VolumeAttributesClass> get_V1alpha1VolumeAttributesClass();
    private JsonTypeInfo`1<V1alpha1VolumeAttributesClass> Create_V1alpha1VolumeAttributesClass(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1VolumeAttributesClassPropInit(JsonSerializerOptions options);
    private void V1alpha1VolumeAttributesClassSerializeHandler(Utf8JsonWriter writer, V1alpha1VolumeAttributesClass value);
    public JsonTypeInfo`1<V1alpha1VolumeAttributesClassList> get_V1alpha1VolumeAttributesClassList();
    private JsonTypeInfo`1<V1alpha1VolumeAttributesClassList> Create_V1alpha1VolumeAttributesClassList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha1VolumeAttributesClassListPropInit(JsonSerializerOptions options);
    private void V1alpha1VolumeAttributesClassListSerializeHandler(Utf8JsonWriter writer, V1alpha1VolumeAttributesClassList value);
    public JsonTypeInfo`1<V1alpha3AllocationResult> get_V1alpha3AllocationResult();
    private JsonTypeInfo`1<V1alpha3AllocationResult> Create_V1alpha3AllocationResult(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3AllocationResultPropInit(JsonSerializerOptions options);
    private void V1alpha3AllocationResultSerializeHandler(Utf8JsonWriter writer, V1alpha3AllocationResult value);
    public JsonTypeInfo`1<V1alpha3BasicDevice> get_V1alpha3BasicDevice();
    private JsonTypeInfo`1<V1alpha3BasicDevice> Create_V1alpha3BasicDevice(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3BasicDevicePropInit(JsonSerializerOptions options);
    private void V1alpha3BasicDeviceSerializeHandler(Utf8JsonWriter writer, V1alpha3BasicDevice value);
    public JsonTypeInfo`1<V1alpha3CELDeviceSelector> get_V1alpha3CELDeviceSelector();
    private JsonTypeInfo`1<V1alpha3CELDeviceSelector> Create_V1alpha3CELDeviceSelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3CELDeviceSelectorPropInit(JsonSerializerOptions options);
    private void V1alpha3CELDeviceSelectorSerializeHandler(Utf8JsonWriter writer, V1alpha3CELDeviceSelector value);
    public JsonTypeInfo`1<V1alpha3Device> get_V1alpha3Device();
    private JsonTypeInfo`1<V1alpha3Device> Create_V1alpha3Device(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DevicePropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceSerializeHandler(Utf8JsonWriter writer, V1alpha3Device value);
    public JsonTypeInfo`1<V1alpha3DeviceAllocationConfiguration> get_V1alpha3DeviceAllocationConfiguration();
    private JsonTypeInfo`1<V1alpha3DeviceAllocationConfiguration> Create_V1alpha3DeviceAllocationConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceAllocationConfigurationPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceAllocationConfigurationSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceAllocationConfiguration value);
    public JsonTypeInfo`1<V1alpha3DeviceAllocationResult> get_V1alpha3DeviceAllocationResult();
    private JsonTypeInfo`1<V1alpha3DeviceAllocationResult> Create_V1alpha3DeviceAllocationResult(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceAllocationResultPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceAllocationResultSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceAllocationResult value);
    public JsonTypeInfo`1<V1alpha3DeviceAttribute> get_V1alpha3DeviceAttribute();
    private JsonTypeInfo`1<V1alpha3DeviceAttribute> Create_V1alpha3DeviceAttribute(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceAttributePropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceAttributeSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceAttribute value);
    public JsonTypeInfo`1<V1alpha3DeviceClaim> get_V1alpha3DeviceClaim();
    private JsonTypeInfo`1<V1alpha3DeviceClaim> Create_V1alpha3DeviceClaim(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceClaimPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceClaimSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceClaim value);
    public JsonTypeInfo`1<V1alpha3DeviceClaimConfiguration> get_V1alpha3DeviceClaimConfiguration();
    private JsonTypeInfo`1<V1alpha3DeviceClaimConfiguration> Create_V1alpha3DeviceClaimConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceClaimConfigurationPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceClaimConfigurationSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceClaimConfiguration value);
    public JsonTypeInfo`1<V1alpha3DeviceClass> get_V1alpha3DeviceClass();
    private JsonTypeInfo`1<V1alpha3DeviceClass> Create_V1alpha3DeviceClass(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceClassPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceClassSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceClass value);
    public JsonTypeInfo`1<V1alpha3DeviceClassConfiguration> get_V1alpha3DeviceClassConfiguration();
    private JsonTypeInfo`1<V1alpha3DeviceClassConfiguration> Create_V1alpha3DeviceClassConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceClassConfigurationPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceClassConfigurationSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceClassConfiguration value);
    public JsonTypeInfo`1<V1alpha3DeviceClassList> get_V1alpha3DeviceClassList();
    private JsonTypeInfo`1<V1alpha3DeviceClassList> Create_V1alpha3DeviceClassList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceClassListPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceClassListSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceClassList value);
    public JsonTypeInfo`1<V1alpha3DeviceClassSpec> get_V1alpha3DeviceClassSpec();
    private JsonTypeInfo`1<V1alpha3DeviceClassSpec> Create_V1alpha3DeviceClassSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceClassSpecPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceClassSpecSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceClassSpec value);
    public JsonTypeInfo`1<V1alpha3DeviceConstraint> get_V1alpha3DeviceConstraint();
    private JsonTypeInfo`1<V1alpha3DeviceConstraint> Create_V1alpha3DeviceConstraint(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceConstraintPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceConstraintSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceConstraint value);
    public JsonTypeInfo`1<V1alpha3DeviceRequest> get_V1alpha3DeviceRequest();
    private JsonTypeInfo`1<V1alpha3DeviceRequest> Create_V1alpha3DeviceRequest(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceRequestPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceRequestSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceRequest value);
    public JsonTypeInfo`1<V1alpha3DeviceRequestAllocationResult> get_V1alpha3DeviceRequestAllocationResult();
    private JsonTypeInfo`1<V1alpha3DeviceRequestAllocationResult> Create_V1alpha3DeviceRequestAllocationResult(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceRequestAllocationResultPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceRequestAllocationResultSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceRequestAllocationResult value);
    public JsonTypeInfo`1<V1alpha3DeviceSelector> get_V1alpha3DeviceSelector();
    private JsonTypeInfo`1<V1alpha3DeviceSelector> Create_V1alpha3DeviceSelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3DeviceSelectorPropInit(JsonSerializerOptions options);
    private void V1alpha3DeviceSelectorSerializeHandler(Utf8JsonWriter writer, V1alpha3DeviceSelector value);
    public JsonTypeInfo`1<V1alpha3OpaqueDeviceConfiguration> get_V1alpha3OpaqueDeviceConfiguration();
    private JsonTypeInfo`1<V1alpha3OpaqueDeviceConfiguration> Create_V1alpha3OpaqueDeviceConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3OpaqueDeviceConfigurationPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<V1alpha3PodSchedulingContext> get_V1alpha3PodSchedulingContext();
    private JsonTypeInfo`1<V1alpha3PodSchedulingContext> Create_V1alpha3PodSchedulingContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3PodSchedulingContextPropInit(JsonSerializerOptions options);
    private void V1alpha3PodSchedulingContextSerializeHandler(Utf8JsonWriter writer, V1alpha3PodSchedulingContext value);
    public JsonTypeInfo`1<V1alpha3PodSchedulingContextList> get_V1alpha3PodSchedulingContextList();
    private JsonTypeInfo`1<V1alpha3PodSchedulingContextList> Create_V1alpha3PodSchedulingContextList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3PodSchedulingContextListPropInit(JsonSerializerOptions options);
    private void V1alpha3PodSchedulingContextListSerializeHandler(Utf8JsonWriter writer, V1alpha3PodSchedulingContextList value);
    public JsonTypeInfo`1<V1alpha3PodSchedulingContextSpec> get_V1alpha3PodSchedulingContextSpec();
    private JsonTypeInfo`1<V1alpha3PodSchedulingContextSpec> Create_V1alpha3PodSchedulingContextSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3PodSchedulingContextSpecPropInit(JsonSerializerOptions options);
    private void V1alpha3PodSchedulingContextSpecSerializeHandler(Utf8JsonWriter writer, V1alpha3PodSchedulingContextSpec value);
    public JsonTypeInfo`1<V1alpha3PodSchedulingContextStatus> get_V1alpha3PodSchedulingContextStatus();
    private JsonTypeInfo`1<V1alpha3PodSchedulingContextStatus> Create_V1alpha3PodSchedulingContextStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3PodSchedulingContextStatusPropInit(JsonSerializerOptions options);
    private void V1alpha3PodSchedulingContextStatusSerializeHandler(Utf8JsonWriter writer, V1alpha3PodSchedulingContextStatus value);
    public JsonTypeInfo`1<V1alpha3ResourceClaim> get_V1alpha3ResourceClaim();
    private JsonTypeInfo`1<V1alpha3ResourceClaim> Create_V1alpha3ResourceClaim(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaim value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimConsumerReference> get_V1alpha3ResourceClaimConsumerReference();
    private JsonTypeInfo`1<V1alpha3ResourceClaimConsumerReference> Create_V1alpha3ResourceClaimConsumerReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimConsumerReferencePropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimConsumerReferenceSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimConsumerReference value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimList> get_V1alpha3ResourceClaimList();
    private JsonTypeInfo`1<V1alpha3ResourceClaimList> Create_V1alpha3ResourceClaimList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimListPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimListSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimList value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimSchedulingStatus> get_V1alpha3ResourceClaimSchedulingStatus();
    private JsonTypeInfo`1<V1alpha3ResourceClaimSchedulingStatus> Create_V1alpha3ResourceClaimSchedulingStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimSchedulingStatusPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimSchedulingStatusSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimSchedulingStatus value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimSpec> get_V1alpha3ResourceClaimSpec();
    private JsonTypeInfo`1<V1alpha3ResourceClaimSpec> Create_V1alpha3ResourceClaimSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimSpecPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimSpecSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimSpec value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimStatus> get_V1alpha3ResourceClaimStatus();
    private JsonTypeInfo`1<V1alpha3ResourceClaimStatus> Create_V1alpha3ResourceClaimStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimStatusPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimStatusSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimStatus value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimTemplate> get_V1alpha3ResourceClaimTemplate();
    private JsonTypeInfo`1<V1alpha3ResourceClaimTemplate> Create_V1alpha3ResourceClaimTemplate(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimTemplatePropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimTemplateSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimTemplate value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimTemplateList> get_V1alpha3ResourceClaimTemplateList();
    private JsonTypeInfo`1<V1alpha3ResourceClaimTemplateList> Create_V1alpha3ResourceClaimTemplateList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimTemplateListPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimTemplateListSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimTemplateList value);
    public JsonTypeInfo`1<V1alpha3ResourceClaimTemplateSpec> get_V1alpha3ResourceClaimTemplateSpec();
    private JsonTypeInfo`1<V1alpha3ResourceClaimTemplateSpec> Create_V1alpha3ResourceClaimTemplateSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceClaimTemplateSpecPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceClaimTemplateSpecSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceClaimTemplateSpec value);
    public JsonTypeInfo`1<V1alpha3ResourcePool> get_V1alpha3ResourcePool();
    private JsonTypeInfo`1<V1alpha3ResourcePool> Create_V1alpha3ResourcePool(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourcePoolPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourcePoolSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourcePool value);
    public JsonTypeInfo`1<V1alpha3ResourceSlice> get_V1alpha3ResourceSlice();
    private JsonTypeInfo`1<V1alpha3ResourceSlice> Create_V1alpha3ResourceSlice(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceSlicePropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceSliceSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceSlice value);
    public JsonTypeInfo`1<V1alpha3ResourceSliceList> get_V1alpha3ResourceSliceList();
    private JsonTypeInfo`1<V1alpha3ResourceSliceList> Create_V1alpha3ResourceSliceList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceSliceListPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceSliceListSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceSliceList value);
    public JsonTypeInfo`1<V1alpha3ResourceSliceSpec> get_V1alpha3ResourceSliceSpec();
    private JsonTypeInfo`1<V1alpha3ResourceSliceSpec> Create_V1alpha3ResourceSliceSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1alpha3ResourceSliceSpecPropInit(JsonSerializerOptions options);
    private void V1alpha3ResourceSliceSpecSerializeHandler(Utf8JsonWriter writer, V1alpha3ResourceSliceSpec value);
    public JsonTypeInfo`1<V1APIGroup> get_V1APIGroup();
    private JsonTypeInfo`1<V1APIGroup> Create_V1APIGroup(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIGroupPropInit(JsonSerializerOptions options);
    private void V1APIGroupSerializeHandler(Utf8JsonWriter writer, V1APIGroup value);
    public JsonTypeInfo`1<V1APIGroupList> get_V1APIGroupList();
    private JsonTypeInfo`1<V1APIGroupList> Create_V1APIGroupList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIGroupListPropInit(JsonSerializerOptions options);
    private void V1APIGroupListSerializeHandler(Utf8JsonWriter writer, V1APIGroupList value);
    public JsonTypeInfo`1<V1APIResource> get_V1APIResource();
    private JsonTypeInfo`1<V1APIResource> Create_V1APIResource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIResourcePropInit(JsonSerializerOptions options);
    private void V1APIResourceSerializeHandler(Utf8JsonWriter writer, V1APIResource value);
    public JsonTypeInfo`1<V1APIResourceList> get_V1APIResourceList();
    private JsonTypeInfo`1<V1APIResourceList> Create_V1APIResourceList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIResourceListPropInit(JsonSerializerOptions options);
    private void V1APIResourceListSerializeHandler(Utf8JsonWriter writer, V1APIResourceList value);
    public JsonTypeInfo`1<V1APIService> get_V1APIService();
    private JsonTypeInfo`1<V1APIService> Create_V1APIService(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIServicePropInit(JsonSerializerOptions options);
    private void V1APIServiceSerializeHandler(Utf8JsonWriter writer, V1APIService value);
    public JsonTypeInfo`1<V1APIServiceCondition> get_V1APIServiceCondition();
    private JsonTypeInfo`1<V1APIServiceCondition> Create_V1APIServiceCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIServiceConditionPropInit(JsonSerializerOptions options);
    private void V1APIServiceConditionSerializeHandler(Utf8JsonWriter writer, V1APIServiceCondition value);
    public JsonTypeInfo`1<V1APIServiceList> get_V1APIServiceList();
    private JsonTypeInfo`1<V1APIServiceList> Create_V1APIServiceList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIServiceListPropInit(JsonSerializerOptions options);
    private void V1APIServiceListSerializeHandler(Utf8JsonWriter writer, V1APIServiceList value);
    public JsonTypeInfo`1<V1APIServiceSpec> get_V1APIServiceSpec();
    private JsonTypeInfo`1<V1APIServiceSpec> Create_V1APIServiceSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIServiceSpecPropInit(JsonSerializerOptions options);
    private void V1APIServiceSpecSerializeHandler(Utf8JsonWriter writer, V1APIServiceSpec value);
    public JsonTypeInfo`1<V1APIServiceStatus> get_V1APIServiceStatus();
    private JsonTypeInfo`1<V1APIServiceStatus> Create_V1APIServiceStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIServiceStatusPropInit(JsonSerializerOptions options);
    private void V1APIServiceStatusSerializeHandler(Utf8JsonWriter writer, V1APIServiceStatus value);
    public JsonTypeInfo`1<V1APIVersions> get_V1APIVersions();
    private JsonTypeInfo`1<V1APIVersions> Create_V1APIVersions(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1APIVersionsPropInit(JsonSerializerOptions options);
    private void V1APIVersionsSerializeHandler(Utf8JsonWriter writer, V1APIVersions value);
    public JsonTypeInfo`1<V1AppArmorProfile> get_V1AppArmorProfile();
    private JsonTypeInfo`1<V1AppArmorProfile> Create_V1AppArmorProfile(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AppArmorProfilePropInit(JsonSerializerOptions options);
    private void V1AppArmorProfileSerializeHandler(Utf8JsonWriter writer, V1AppArmorProfile value);
    public JsonTypeInfo`1<V1AttachedVolume> get_V1AttachedVolume();
    private JsonTypeInfo`1<V1AttachedVolume> Create_V1AttachedVolume(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AttachedVolumePropInit(JsonSerializerOptions options);
    private void V1AttachedVolumeSerializeHandler(Utf8JsonWriter writer, V1AttachedVolume value);
    public JsonTypeInfo`1<V1AuditAnnotation> get_V1AuditAnnotation();
    private JsonTypeInfo`1<V1AuditAnnotation> Create_V1AuditAnnotation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AuditAnnotationPropInit(JsonSerializerOptions options);
    private void V1AuditAnnotationSerializeHandler(Utf8JsonWriter writer, V1AuditAnnotation value);
    public JsonTypeInfo`1<V1AWSElasticBlockStoreVolumeSource> get_V1AWSElasticBlockStoreVolumeSource();
    private JsonTypeInfo`1<V1AWSElasticBlockStoreVolumeSource> Create_V1AWSElasticBlockStoreVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AWSElasticBlockStoreVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1AWSElasticBlockStoreVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1AWSElasticBlockStoreVolumeSource value);
    public JsonTypeInfo`1<V1AzureDiskVolumeSource> get_V1AzureDiskVolumeSource();
    private JsonTypeInfo`1<V1AzureDiskVolumeSource> Create_V1AzureDiskVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AzureDiskVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1AzureDiskVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1AzureDiskVolumeSource value);
    public JsonTypeInfo`1<V1AzureFilePersistentVolumeSource> get_V1AzureFilePersistentVolumeSource();
    private JsonTypeInfo`1<V1AzureFilePersistentVolumeSource> Create_V1AzureFilePersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AzureFilePersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1AzureFilePersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1AzureFilePersistentVolumeSource value);
    public JsonTypeInfo`1<V1AzureFileVolumeSource> get_V1AzureFileVolumeSource();
    private JsonTypeInfo`1<V1AzureFileVolumeSource> Create_V1AzureFileVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1AzureFileVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1AzureFileVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1AzureFileVolumeSource value);
    public JsonTypeInfo`1<V1beta1AuditAnnotation> get_V1beta1AuditAnnotation();
    private JsonTypeInfo`1<V1beta1AuditAnnotation> Create_V1beta1AuditAnnotation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1AuditAnnotationPropInit(JsonSerializerOptions options);
    private void V1beta1AuditAnnotationSerializeHandler(Utf8JsonWriter writer, V1beta1AuditAnnotation value);
    public JsonTypeInfo`1<V1beta1ExpressionWarning> get_V1beta1ExpressionWarning();
    private JsonTypeInfo`1<V1beta1ExpressionWarning> Create_V1beta1ExpressionWarning(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ExpressionWarningPropInit(JsonSerializerOptions options);
    private void V1beta1ExpressionWarningSerializeHandler(Utf8JsonWriter writer, V1beta1ExpressionWarning value);
    public JsonTypeInfo`1<V1beta1IPAddress> get_V1beta1IPAddress();
    private JsonTypeInfo`1<V1beta1IPAddress> Create_V1beta1IPAddress(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1IPAddressPropInit(JsonSerializerOptions options);
    private void V1beta1IPAddressSerializeHandler(Utf8JsonWriter writer, V1beta1IPAddress value);
    public JsonTypeInfo`1<V1beta1IPAddressList> get_V1beta1IPAddressList();
    private JsonTypeInfo`1<V1beta1IPAddressList> Create_V1beta1IPAddressList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1IPAddressListPropInit(JsonSerializerOptions options);
    private void V1beta1IPAddressListSerializeHandler(Utf8JsonWriter writer, V1beta1IPAddressList value);
    public JsonTypeInfo`1<V1beta1IPAddressSpec> get_V1beta1IPAddressSpec();
    private JsonTypeInfo`1<V1beta1IPAddressSpec> Create_V1beta1IPAddressSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1IPAddressSpecPropInit(JsonSerializerOptions options);
    private void V1beta1IPAddressSpecSerializeHandler(Utf8JsonWriter writer, V1beta1IPAddressSpec value);
    public JsonTypeInfo`1<V1beta1MatchCondition> get_V1beta1MatchCondition();
    private JsonTypeInfo`1<V1beta1MatchCondition> Create_V1beta1MatchCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1MatchConditionPropInit(JsonSerializerOptions options);
    private void V1beta1MatchConditionSerializeHandler(Utf8JsonWriter writer, V1beta1MatchCondition value);
    public JsonTypeInfo`1<V1beta1MatchResources> get_V1beta1MatchResources();
    private JsonTypeInfo`1<V1beta1MatchResources> Create_V1beta1MatchResources(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1MatchResourcesPropInit(JsonSerializerOptions options);
    private void V1beta1MatchResourcesSerializeHandler(Utf8JsonWriter writer, V1beta1MatchResources value);
    public JsonTypeInfo`1<V1beta1NamedRuleWithOperations> get_V1beta1NamedRuleWithOperations();
    private JsonTypeInfo`1<V1beta1NamedRuleWithOperations> Create_V1beta1NamedRuleWithOperations(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1NamedRuleWithOperationsPropInit(JsonSerializerOptions options);
    private void V1beta1NamedRuleWithOperationsSerializeHandler(Utf8JsonWriter writer, V1beta1NamedRuleWithOperations value);
    public JsonTypeInfo`1<V1beta1ParamKind> get_V1beta1ParamKind();
    private JsonTypeInfo`1<V1beta1ParamKind> Create_V1beta1ParamKind(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ParamKindPropInit(JsonSerializerOptions options);
    private void V1beta1ParamKindSerializeHandler(Utf8JsonWriter writer, V1beta1ParamKind value);
    public JsonTypeInfo`1<V1beta1ParamRef> get_V1beta1ParamRef();
    private JsonTypeInfo`1<V1beta1ParamRef> Create_V1beta1ParamRef(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ParamRefPropInit(JsonSerializerOptions options);
    private void V1beta1ParamRefSerializeHandler(Utf8JsonWriter writer, V1beta1ParamRef value);
    public JsonTypeInfo`1<V1beta1ParentReference> get_V1beta1ParentReference();
    private JsonTypeInfo`1<V1beta1ParentReference> Create_V1beta1ParentReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ParentReferencePropInit(JsonSerializerOptions options);
    private void V1beta1ParentReferenceSerializeHandler(Utf8JsonWriter writer, V1beta1ParentReference value);
    public JsonTypeInfo`1<V1beta1SelfSubjectReview> get_V1beta1SelfSubjectReview();
    private JsonTypeInfo`1<V1beta1SelfSubjectReview> Create_V1beta1SelfSubjectReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1SelfSubjectReviewPropInit(JsonSerializerOptions options);
    private void V1beta1SelfSubjectReviewSerializeHandler(Utf8JsonWriter writer, V1beta1SelfSubjectReview value);
    public JsonTypeInfo`1<V1beta1SelfSubjectReviewStatus> get_V1beta1SelfSubjectReviewStatus();
    private JsonTypeInfo`1<V1beta1SelfSubjectReviewStatus> Create_V1beta1SelfSubjectReviewStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1SelfSubjectReviewStatusPropInit(JsonSerializerOptions options);
    private void V1beta1SelfSubjectReviewStatusSerializeHandler(Utf8JsonWriter writer, V1beta1SelfSubjectReviewStatus value);
    public JsonTypeInfo`1<V1beta1ServiceCIDR> get_V1beta1ServiceCIDR();
    private JsonTypeInfo`1<V1beta1ServiceCIDR> Create_V1beta1ServiceCIDR(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ServiceCIDRPropInit(JsonSerializerOptions options);
    private void V1beta1ServiceCIDRSerializeHandler(Utf8JsonWriter writer, V1beta1ServiceCIDR value);
    public JsonTypeInfo`1<V1beta1ServiceCIDRList> get_V1beta1ServiceCIDRList();
    private JsonTypeInfo`1<V1beta1ServiceCIDRList> Create_V1beta1ServiceCIDRList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ServiceCIDRListPropInit(JsonSerializerOptions options);
    private void V1beta1ServiceCIDRListSerializeHandler(Utf8JsonWriter writer, V1beta1ServiceCIDRList value);
    public JsonTypeInfo`1<V1beta1ServiceCIDRSpec> get_V1beta1ServiceCIDRSpec();
    private JsonTypeInfo`1<V1beta1ServiceCIDRSpec> Create_V1beta1ServiceCIDRSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ServiceCIDRSpecPropInit(JsonSerializerOptions options);
    private void V1beta1ServiceCIDRSpecSerializeHandler(Utf8JsonWriter writer, V1beta1ServiceCIDRSpec value);
    public JsonTypeInfo`1<V1beta1ServiceCIDRStatus> get_V1beta1ServiceCIDRStatus();
    private JsonTypeInfo`1<V1beta1ServiceCIDRStatus> Create_V1beta1ServiceCIDRStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ServiceCIDRStatusPropInit(JsonSerializerOptions options);
    private void V1beta1ServiceCIDRStatusSerializeHandler(Utf8JsonWriter writer, V1beta1ServiceCIDRStatus value);
    public JsonTypeInfo`1<V1beta1TypeChecking> get_V1beta1TypeChecking();
    private JsonTypeInfo`1<V1beta1TypeChecking> Create_V1beta1TypeChecking(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1TypeCheckingPropInit(JsonSerializerOptions options);
    private void V1beta1TypeCheckingSerializeHandler(Utf8JsonWriter writer, V1beta1TypeChecking value);
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicy> get_V1beta1ValidatingAdmissionPolicy();
    private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicy> Create_V1beta1ValidatingAdmissionPolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidatingAdmissionPolicyPropInit(JsonSerializerOptions options);
    private void V1beta1ValidatingAdmissionPolicySerializeHandler(Utf8JsonWriter writer, V1beta1ValidatingAdmissionPolicy value);
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBinding> get_V1beta1ValidatingAdmissionPolicyBinding();
    private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBinding> Create_V1beta1ValidatingAdmissionPolicyBinding(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidatingAdmissionPolicyBindingPropInit(JsonSerializerOptions options);
    private void V1beta1ValidatingAdmissionPolicyBindingSerializeHandler(Utf8JsonWriter writer, V1beta1ValidatingAdmissionPolicyBinding value);
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingList> get_V1beta1ValidatingAdmissionPolicyBindingList();
    private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingList> Create_V1beta1ValidatingAdmissionPolicyBindingList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidatingAdmissionPolicyBindingListPropInit(JsonSerializerOptions options);
    private void V1beta1ValidatingAdmissionPolicyBindingListSerializeHandler(Utf8JsonWriter writer, V1beta1ValidatingAdmissionPolicyBindingList value);
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingSpec> get_V1beta1ValidatingAdmissionPolicyBindingSpec();
    private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyBindingSpec> Create_V1beta1ValidatingAdmissionPolicyBindingSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidatingAdmissionPolicyBindingSpecPropInit(JsonSerializerOptions options);
    private void V1beta1ValidatingAdmissionPolicyBindingSpecSerializeHandler(Utf8JsonWriter writer, V1beta1ValidatingAdmissionPolicyBindingSpec value);
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyList> get_V1beta1ValidatingAdmissionPolicyList();
    private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyList> Create_V1beta1ValidatingAdmissionPolicyList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidatingAdmissionPolicyListPropInit(JsonSerializerOptions options);
    private void V1beta1ValidatingAdmissionPolicyListSerializeHandler(Utf8JsonWriter writer, V1beta1ValidatingAdmissionPolicyList value);
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicySpec> get_V1beta1ValidatingAdmissionPolicySpec();
    private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicySpec> Create_V1beta1ValidatingAdmissionPolicySpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidatingAdmissionPolicySpecPropInit(JsonSerializerOptions options);
    private void V1beta1ValidatingAdmissionPolicySpecSerializeHandler(Utf8JsonWriter writer, V1beta1ValidatingAdmissionPolicySpec value);
    public JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyStatus> get_V1beta1ValidatingAdmissionPolicyStatus();
    private JsonTypeInfo`1<V1beta1ValidatingAdmissionPolicyStatus> Create_V1beta1ValidatingAdmissionPolicyStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidatingAdmissionPolicyStatusPropInit(JsonSerializerOptions options);
    private void V1beta1ValidatingAdmissionPolicyStatusSerializeHandler(Utf8JsonWriter writer, V1beta1ValidatingAdmissionPolicyStatus value);
    public JsonTypeInfo`1<V1beta1Validation> get_V1beta1Validation();
    private JsonTypeInfo`1<V1beta1Validation> Create_V1beta1Validation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1ValidationPropInit(JsonSerializerOptions options);
    private void V1beta1ValidationSerializeHandler(Utf8JsonWriter writer, V1beta1Validation value);
    public JsonTypeInfo`1<V1beta1Variable> get_V1beta1Variable();
    private JsonTypeInfo`1<V1beta1Variable> Create_V1beta1Variable(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1VariablePropInit(JsonSerializerOptions options);
    private void V1beta1VariableSerializeHandler(Utf8JsonWriter writer, V1beta1Variable value);
    public JsonTypeInfo`1<V1beta1VolumeAttributesClass> get_V1beta1VolumeAttributesClass();
    private JsonTypeInfo`1<V1beta1VolumeAttributesClass> Create_V1beta1VolumeAttributesClass(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1VolumeAttributesClassPropInit(JsonSerializerOptions options);
    private void V1beta1VolumeAttributesClassSerializeHandler(Utf8JsonWriter writer, V1beta1VolumeAttributesClass value);
    public JsonTypeInfo`1<V1beta1VolumeAttributesClassList> get_V1beta1VolumeAttributesClassList();
    private JsonTypeInfo`1<V1beta1VolumeAttributesClassList> Create_V1beta1VolumeAttributesClassList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta1VolumeAttributesClassListPropInit(JsonSerializerOptions options);
    private void V1beta1VolumeAttributesClassListSerializeHandler(Utf8JsonWriter writer, V1beta1VolumeAttributesClassList value);
    public JsonTypeInfo`1<V1beta3ExemptPriorityLevelConfiguration> get_V1beta3ExemptPriorityLevelConfiguration();
    private JsonTypeInfo`1<V1beta3ExemptPriorityLevelConfiguration> Create_V1beta3ExemptPriorityLevelConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3ExemptPriorityLevelConfigurationPropInit(JsonSerializerOptions options);
    private void V1beta3ExemptPriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, V1beta3ExemptPriorityLevelConfiguration value);
    public JsonTypeInfo`1<V1beta3FlowDistinguisherMethod> get_V1beta3FlowDistinguisherMethod();
    private JsonTypeInfo`1<V1beta3FlowDistinguisherMethod> Create_V1beta3FlowDistinguisherMethod(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3FlowDistinguisherMethodPropInit(JsonSerializerOptions options);
    private void V1beta3FlowDistinguisherMethodSerializeHandler(Utf8JsonWriter writer, V1beta3FlowDistinguisherMethod value);
    public JsonTypeInfo`1<V1beta3FlowSchema> get_V1beta3FlowSchema();
    private JsonTypeInfo`1<V1beta3FlowSchema> Create_V1beta3FlowSchema(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3FlowSchemaPropInit(JsonSerializerOptions options);
    private void V1beta3FlowSchemaSerializeHandler(Utf8JsonWriter writer, V1beta3FlowSchema value);
    public JsonTypeInfo`1<V1beta3FlowSchemaCondition> get_V1beta3FlowSchemaCondition();
    private JsonTypeInfo`1<V1beta3FlowSchemaCondition> Create_V1beta3FlowSchemaCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3FlowSchemaConditionPropInit(JsonSerializerOptions options);
    private void V1beta3FlowSchemaConditionSerializeHandler(Utf8JsonWriter writer, V1beta3FlowSchemaCondition value);
    public JsonTypeInfo`1<V1beta3FlowSchemaList> get_V1beta3FlowSchemaList();
    private JsonTypeInfo`1<V1beta3FlowSchemaList> Create_V1beta3FlowSchemaList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3FlowSchemaListPropInit(JsonSerializerOptions options);
    private void V1beta3FlowSchemaListSerializeHandler(Utf8JsonWriter writer, V1beta3FlowSchemaList value);
    public JsonTypeInfo`1<V1beta3FlowSchemaSpec> get_V1beta3FlowSchemaSpec();
    private JsonTypeInfo`1<V1beta3FlowSchemaSpec> Create_V1beta3FlowSchemaSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3FlowSchemaSpecPropInit(JsonSerializerOptions options);
    private void V1beta3FlowSchemaSpecSerializeHandler(Utf8JsonWriter writer, V1beta3FlowSchemaSpec value);
    public JsonTypeInfo`1<V1beta3FlowSchemaStatus> get_V1beta3FlowSchemaStatus();
    private JsonTypeInfo`1<V1beta3FlowSchemaStatus> Create_V1beta3FlowSchemaStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3FlowSchemaStatusPropInit(JsonSerializerOptions options);
    private void V1beta3FlowSchemaStatusSerializeHandler(Utf8JsonWriter writer, V1beta3FlowSchemaStatus value);
    public JsonTypeInfo`1<V1beta3GroupSubject> get_V1beta3GroupSubject();
    private JsonTypeInfo`1<V1beta3GroupSubject> Create_V1beta3GroupSubject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3GroupSubjectPropInit(JsonSerializerOptions options);
    private void V1beta3GroupSubjectSerializeHandler(Utf8JsonWriter writer, V1beta3GroupSubject value);
    public JsonTypeInfo`1<V1beta3LimitedPriorityLevelConfiguration> get_V1beta3LimitedPriorityLevelConfiguration();
    private JsonTypeInfo`1<V1beta3LimitedPriorityLevelConfiguration> Create_V1beta3LimitedPriorityLevelConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3LimitedPriorityLevelConfigurationPropInit(JsonSerializerOptions options);
    private void V1beta3LimitedPriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, V1beta3LimitedPriorityLevelConfiguration value);
    public JsonTypeInfo`1<V1beta3LimitResponse> get_V1beta3LimitResponse();
    private JsonTypeInfo`1<V1beta3LimitResponse> Create_V1beta3LimitResponse(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3LimitResponsePropInit(JsonSerializerOptions options);
    private void V1beta3LimitResponseSerializeHandler(Utf8JsonWriter writer, V1beta3LimitResponse value);
    public JsonTypeInfo`1<V1beta3NonResourcePolicyRule> get_V1beta3NonResourcePolicyRule();
    private JsonTypeInfo`1<V1beta3NonResourcePolicyRule> Create_V1beta3NonResourcePolicyRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3NonResourcePolicyRulePropInit(JsonSerializerOptions options);
    private void V1beta3NonResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, V1beta3NonResourcePolicyRule value);
    public JsonTypeInfo`1<V1beta3PolicyRulesWithSubjects> get_V1beta3PolicyRulesWithSubjects();
    private JsonTypeInfo`1<V1beta3PolicyRulesWithSubjects> Create_V1beta3PolicyRulesWithSubjects(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3PolicyRulesWithSubjectsPropInit(JsonSerializerOptions options);
    private void V1beta3PolicyRulesWithSubjectsSerializeHandler(Utf8JsonWriter writer, V1beta3PolicyRulesWithSubjects value);
    public JsonTypeInfo`1<V1beta3PriorityLevelConfiguration> get_V1beta3PriorityLevelConfiguration();
    private JsonTypeInfo`1<V1beta3PriorityLevelConfiguration> Create_V1beta3PriorityLevelConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3PriorityLevelConfigurationPropInit(JsonSerializerOptions options);
    private void V1beta3PriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, V1beta3PriorityLevelConfiguration value);
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationCondition> get_V1beta3PriorityLevelConfigurationCondition();
    private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationCondition> Create_V1beta3PriorityLevelConfigurationCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3PriorityLevelConfigurationConditionPropInit(JsonSerializerOptions options);
    private void V1beta3PriorityLevelConfigurationConditionSerializeHandler(Utf8JsonWriter writer, V1beta3PriorityLevelConfigurationCondition value);
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationList> get_V1beta3PriorityLevelConfigurationList();
    private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationList> Create_V1beta3PriorityLevelConfigurationList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3PriorityLevelConfigurationListPropInit(JsonSerializerOptions options);
    private void V1beta3PriorityLevelConfigurationListSerializeHandler(Utf8JsonWriter writer, V1beta3PriorityLevelConfigurationList value);
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationReference> get_V1beta3PriorityLevelConfigurationReference();
    private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationReference> Create_V1beta3PriorityLevelConfigurationReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3PriorityLevelConfigurationReferencePropInit(JsonSerializerOptions options);
    private void V1beta3PriorityLevelConfigurationReferenceSerializeHandler(Utf8JsonWriter writer, V1beta3PriorityLevelConfigurationReference value);
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationSpec> get_V1beta3PriorityLevelConfigurationSpec();
    private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationSpec> Create_V1beta3PriorityLevelConfigurationSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3PriorityLevelConfigurationSpecPropInit(JsonSerializerOptions options);
    private void V1beta3PriorityLevelConfigurationSpecSerializeHandler(Utf8JsonWriter writer, V1beta3PriorityLevelConfigurationSpec value);
    public JsonTypeInfo`1<V1beta3PriorityLevelConfigurationStatus> get_V1beta3PriorityLevelConfigurationStatus();
    private JsonTypeInfo`1<V1beta3PriorityLevelConfigurationStatus> Create_V1beta3PriorityLevelConfigurationStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3PriorityLevelConfigurationStatusPropInit(JsonSerializerOptions options);
    private void V1beta3PriorityLevelConfigurationStatusSerializeHandler(Utf8JsonWriter writer, V1beta3PriorityLevelConfigurationStatus value);
    public JsonTypeInfo`1<V1beta3QueuingConfiguration> get_V1beta3QueuingConfiguration();
    private JsonTypeInfo`1<V1beta3QueuingConfiguration> Create_V1beta3QueuingConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3QueuingConfigurationPropInit(JsonSerializerOptions options);
    private void V1beta3QueuingConfigurationSerializeHandler(Utf8JsonWriter writer, V1beta3QueuingConfiguration value);
    public JsonTypeInfo`1<V1beta3ResourcePolicyRule> get_V1beta3ResourcePolicyRule();
    private JsonTypeInfo`1<V1beta3ResourcePolicyRule> Create_V1beta3ResourcePolicyRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3ResourcePolicyRulePropInit(JsonSerializerOptions options);
    private void V1beta3ResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, V1beta3ResourcePolicyRule value);
    public JsonTypeInfo`1<V1beta3ServiceAccountSubject> get_V1beta3ServiceAccountSubject();
    private JsonTypeInfo`1<V1beta3ServiceAccountSubject> Create_V1beta3ServiceAccountSubject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3ServiceAccountSubjectPropInit(JsonSerializerOptions options);
    private void V1beta3ServiceAccountSubjectSerializeHandler(Utf8JsonWriter writer, V1beta3ServiceAccountSubject value);
    public JsonTypeInfo`1<V1beta3Subject> get_V1beta3Subject();
    private JsonTypeInfo`1<V1beta3Subject> Create_V1beta3Subject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3SubjectPropInit(JsonSerializerOptions options);
    private void V1beta3SubjectSerializeHandler(Utf8JsonWriter writer, V1beta3Subject value);
    public JsonTypeInfo`1<V1beta3UserSubject> get_V1beta3UserSubject();
    private JsonTypeInfo`1<V1beta3UserSubject> Create_V1beta3UserSubject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1beta3UserSubjectPropInit(JsonSerializerOptions options);
    private void V1beta3UserSubjectSerializeHandler(Utf8JsonWriter writer, V1beta3UserSubject value);
    public JsonTypeInfo`1<V1Binding> get_V1Binding();
    private JsonTypeInfo`1<V1Binding> Create_V1Binding(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1BindingPropInit(JsonSerializerOptions options);
    private void V1BindingSerializeHandler(Utf8JsonWriter writer, V1Binding value);
    public JsonTypeInfo`1<V1BoundObjectReference> get_V1BoundObjectReference();
    private JsonTypeInfo`1<V1BoundObjectReference> Create_V1BoundObjectReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1BoundObjectReferencePropInit(JsonSerializerOptions options);
    private void V1BoundObjectReferenceSerializeHandler(Utf8JsonWriter writer, V1BoundObjectReference value);
    public JsonTypeInfo`1<V1Capabilities> get_V1Capabilities();
    private JsonTypeInfo`1<V1Capabilities> Create_V1Capabilities(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CapabilitiesPropInit(JsonSerializerOptions options);
    private void V1CapabilitiesSerializeHandler(Utf8JsonWriter writer, V1Capabilities value);
    public JsonTypeInfo`1<V1CephFSPersistentVolumeSource> get_V1CephFSPersistentVolumeSource();
    private JsonTypeInfo`1<V1CephFSPersistentVolumeSource> Create_V1CephFSPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CephFSPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1CephFSPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1CephFSPersistentVolumeSource value);
    public JsonTypeInfo`1<V1CephFSVolumeSource> get_V1CephFSVolumeSource();
    private JsonTypeInfo`1<V1CephFSVolumeSource> Create_V1CephFSVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CephFSVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1CephFSVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1CephFSVolumeSource value);
    public JsonTypeInfo`1<V1CertificateSigningRequest> get_V1CertificateSigningRequest();
    private JsonTypeInfo`1<V1CertificateSigningRequest> Create_V1CertificateSigningRequest(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CertificateSigningRequestPropInit(JsonSerializerOptions options);
    private void V1CertificateSigningRequestSerializeHandler(Utf8JsonWriter writer, V1CertificateSigningRequest value);
    public JsonTypeInfo`1<V1CertificateSigningRequestCondition> get_V1CertificateSigningRequestCondition();
    private JsonTypeInfo`1<V1CertificateSigningRequestCondition> Create_V1CertificateSigningRequestCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CertificateSigningRequestConditionPropInit(JsonSerializerOptions options);
    private void V1CertificateSigningRequestConditionSerializeHandler(Utf8JsonWriter writer, V1CertificateSigningRequestCondition value);
    public JsonTypeInfo`1<V1CertificateSigningRequestList> get_V1CertificateSigningRequestList();
    private JsonTypeInfo`1<V1CertificateSigningRequestList> Create_V1CertificateSigningRequestList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CertificateSigningRequestListPropInit(JsonSerializerOptions options);
    private void V1CertificateSigningRequestListSerializeHandler(Utf8JsonWriter writer, V1CertificateSigningRequestList value);
    public JsonTypeInfo`1<V1CertificateSigningRequestSpec> get_V1CertificateSigningRequestSpec();
    private JsonTypeInfo`1<V1CertificateSigningRequestSpec> Create_V1CertificateSigningRequestSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CertificateSigningRequestSpecPropInit(JsonSerializerOptions options);
    private void V1CertificateSigningRequestSpecSerializeHandler(Utf8JsonWriter writer, V1CertificateSigningRequestSpec value);
    public JsonTypeInfo`1<V1CertificateSigningRequestStatus> get_V1CertificateSigningRequestStatus();
    private JsonTypeInfo`1<V1CertificateSigningRequestStatus> Create_V1CertificateSigningRequestStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CertificateSigningRequestStatusPropInit(JsonSerializerOptions options);
    private void V1CertificateSigningRequestStatusSerializeHandler(Utf8JsonWriter writer, V1CertificateSigningRequestStatus value);
    public JsonTypeInfo`1<V1CinderPersistentVolumeSource> get_V1CinderPersistentVolumeSource();
    private JsonTypeInfo`1<V1CinderPersistentVolumeSource> Create_V1CinderPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CinderPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1CinderPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1CinderPersistentVolumeSource value);
    public JsonTypeInfo`1<V1CinderVolumeSource> get_V1CinderVolumeSource();
    private JsonTypeInfo`1<V1CinderVolumeSource> Create_V1CinderVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CinderVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1CinderVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1CinderVolumeSource value);
    public JsonTypeInfo`1<V1ClientIPConfig> get_V1ClientIPConfig();
    private JsonTypeInfo`1<V1ClientIPConfig> Create_V1ClientIPConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ClientIPConfigPropInit(JsonSerializerOptions options);
    private void V1ClientIPConfigSerializeHandler(Utf8JsonWriter writer, V1ClientIPConfig value);
    public JsonTypeInfo`1<V1ClusterRole> get_V1ClusterRole();
    private JsonTypeInfo`1<V1ClusterRole> Create_V1ClusterRole(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ClusterRolePropInit(JsonSerializerOptions options);
    private void V1ClusterRoleSerializeHandler(Utf8JsonWriter writer, V1ClusterRole value);
    public JsonTypeInfo`1<V1ClusterRoleBinding> get_V1ClusterRoleBinding();
    private JsonTypeInfo`1<V1ClusterRoleBinding> Create_V1ClusterRoleBinding(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ClusterRoleBindingPropInit(JsonSerializerOptions options);
    private void V1ClusterRoleBindingSerializeHandler(Utf8JsonWriter writer, V1ClusterRoleBinding value);
    public JsonTypeInfo`1<V1ClusterRoleBindingList> get_V1ClusterRoleBindingList();
    private JsonTypeInfo`1<V1ClusterRoleBindingList> Create_V1ClusterRoleBindingList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ClusterRoleBindingListPropInit(JsonSerializerOptions options);
    private void V1ClusterRoleBindingListSerializeHandler(Utf8JsonWriter writer, V1ClusterRoleBindingList value);
    public JsonTypeInfo`1<V1ClusterRoleList> get_V1ClusterRoleList();
    private JsonTypeInfo`1<V1ClusterRoleList> Create_V1ClusterRoleList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ClusterRoleListPropInit(JsonSerializerOptions options);
    private void V1ClusterRoleListSerializeHandler(Utf8JsonWriter writer, V1ClusterRoleList value);
    public JsonTypeInfo`1<V1ClusterTrustBundleProjection> get_V1ClusterTrustBundleProjection();
    private JsonTypeInfo`1<V1ClusterTrustBundleProjection> Create_V1ClusterTrustBundleProjection(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ClusterTrustBundleProjectionPropInit(JsonSerializerOptions options);
    private void V1ClusterTrustBundleProjectionSerializeHandler(Utf8JsonWriter writer, V1ClusterTrustBundleProjection value);
    public JsonTypeInfo`1<V1ComponentCondition> get_V1ComponentCondition();
    private JsonTypeInfo`1<V1ComponentCondition> Create_V1ComponentCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ComponentConditionPropInit(JsonSerializerOptions options);
    private void V1ComponentConditionSerializeHandler(Utf8JsonWriter writer, V1ComponentCondition value);
    public JsonTypeInfo`1<V1ComponentStatus> get_V1ComponentStatus();
    private JsonTypeInfo`1<V1ComponentStatus> Create_V1ComponentStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ComponentStatusPropInit(JsonSerializerOptions options);
    private void V1ComponentStatusSerializeHandler(Utf8JsonWriter writer, V1ComponentStatus value);
    public JsonTypeInfo`1<V1ComponentStatusList> get_V1ComponentStatusList();
    private JsonTypeInfo`1<V1ComponentStatusList> Create_V1ComponentStatusList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ComponentStatusListPropInit(JsonSerializerOptions options);
    private void V1ComponentStatusListSerializeHandler(Utf8JsonWriter writer, V1ComponentStatusList value);
    public JsonTypeInfo`1<V1Condition> get_V1Condition();
    private JsonTypeInfo`1<V1Condition> Create_V1Condition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConditionPropInit(JsonSerializerOptions options);
    private void V1ConditionSerializeHandler(Utf8JsonWriter writer, V1Condition value);
    public JsonTypeInfo`1<V1ConfigMap> get_V1ConfigMap();
    private JsonTypeInfo`1<V1ConfigMap> Create_V1ConfigMap(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConfigMapPropInit(JsonSerializerOptions options);
    private void V1ConfigMapSerializeHandler(Utf8JsonWriter writer, V1ConfigMap value);
    public JsonTypeInfo`1<V1ConfigMapEnvSource> get_V1ConfigMapEnvSource();
    private JsonTypeInfo`1<V1ConfigMapEnvSource> Create_V1ConfigMapEnvSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConfigMapEnvSourcePropInit(JsonSerializerOptions options);
    private void V1ConfigMapEnvSourceSerializeHandler(Utf8JsonWriter writer, V1ConfigMapEnvSource value);
    public JsonTypeInfo`1<V1ConfigMapKeySelector> get_V1ConfigMapKeySelector();
    private JsonTypeInfo`1<V1ConfigMapKeySelector> Create_V1ConfigMapKeySelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConfigMapKeySelectorPropInit(JsonSerializerOptions options);
    private void V1ConfigMapKeySelectorSerializeHandler(Utf8JsonWriter writer, V1ConfigMapKeySelector value);
    public JsonTypeInfo`1<V1ConfigMapList> get_V1ConfigMapList();
    private JsonTypeInfo`1<V1ConfigMapList> Create_V1ConfigMapList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConfigMapListPropInit(JsonSerializerOptions options);
    private void V1ConfigMapListSerializeHandler(Utf8JsonWriter writer, V1ConfigMapList value);
    public JsonTypeInfo`1<V1ConfigMapNodeConfigSource> get_V1ConfigMapNodeConfigSource();
    private JsonTypeInfo`1<V1ConfigMapNodeConfigSource> Create_V1ConfigMapNodeConfigSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConfigMapNodeConfigSourcePropInit(JsonSerializerOptions options);
    private void V1ConfigMapNodeConfigSourceSerializeHandler(Utf8JsonWriter writer, V1ConfigMapNodeConfigSource value);
    public JsonTypeInfo`1<V1ConfigMapProjection> get_V1ConfigMapProjection();
    private JsonTypeInfo`1<V1ConfigMapProjection> Create_V1ConfigMapProjection(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConfigMapProjectionPropInit(JsonSerializerOptions options);
    private void V1ConfigMapProjectionSerializeHandler(Utf8JsonWriter writer, V1ConfigMapProjection value);
    public JsonTypeInfo`1<V1ConfigMapVolumeSource> get_V1ConfigMapVolumeSource();
    private JsonTypeInfo`1<V1ConfigMapVolumeSource> Create_V1ConfigMapVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ConfigMapVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1ConfigMapVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1ConfigMapVolumeSource value);
    public JsonTypeInfo`1<V1Container> get_V1Container();
    private JsonTypeInfo`1<V1Container> Create_V1Container(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerPropInit(JsonSerializerOptions options);
    private void V1ContainerSerializeHandler(Utf8JsonWriter writer, V1Container value);
    public JsonTypeInfo`1<V1ContainerImage> get_V1ContainerImage();
    private JsonTypeInfo`1<V1ContainerImage> Create_V1ContainerImage(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerImagePropInit(JsonSerializerOptions options);
    private void V1ContainerImageSerializeHandler(Utf8JsonWriter writer, V1ContainerImage value);
    public JsonTypeInfo`1<V1ContainerPort> get_V1ContainerPort();
    private JsonTypeInfo`1<V1ContainerPort> Create_V1ContainerPort(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerPortPropInit(JsonSerializerOptions options);
    private void V1ContainerPortSerializeHandler(Utf8JsonWriter writer, V1ContainerPort value);
    public JsonTypeInfo`1<V1ContainerResizePolicy> get_V1ContainerResizePolicy();
    private JsonTypeInfo`1<V1ContainerResizePolicy> Create_V1ContainerResizePolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerResizePolicyPropInit(JsonSerializerOptions options);
    private void V1ContainerResizePolicySerializeHandler(Utf8JsonWriter writer, V1ContainerResizePolicy value);
    public JsonTypeInfo`1<V1ContainerState> get_V1ContainerState();
    private JsonTypeInfo`1<V1ContainerState> Create_V1ContainerState(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerStatePropInit(JsonSerializerOptions options);
    private void V1ContainerStateSerializeHandler(Utf8JsonWriter writer, V1ContainerState value);
    public JsonTypeInfo`1<V1ContainerStateRunning> get_V1ContainerStateRunning();
    private JsonTypeInfo`1<V1ContainerStateRunning> Create_V1ContainerStateRunning(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerStateRunningPropInit(JsonSerializerOptions options);
    private void V1ContainerStateRunningSerializeHandler(Utf8JsonWriter writer, V1ContainerStateRunning value);
    public JsonTypeInfo`1<V1ContainerStateTerminated> get_V1ContainerStateTerminated();
    private JsonTypeInfo`1<V1ContainerStateTerminated> Create_V1ContainerStateTerminated(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerStateTerminatedPropInit(JsonSerializerOptions options);
    private void V1ContainerStateTerminatedSerializeHandler(Utf8JsonWriter writer, V1ContainerStateTerminated value);
    public JsonTypeInfo`1<V1ContainerStateWaiting> get_V1ContainerStateWaiting();
    private JsonTypeInfo`1<V1ContainerStateWaiting> Create_V1ContainerStateWaiting(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerStateWaitingPropInit(JsonSerializerOptions options);
    private void V1ContainerStateWaitingSerializeHandler(Utf8JsonWriter writer, V1ContainerStateWaiting value);
    public JsonTypeInfo`1<V1ContainerStatus> get_V1ContainerStatus();
    private JsonTypeInfo`1<V1ContainerStatus> Create_V1ContainerStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerStatusPropInit(JsonSerializerOptions options);
    private void V1ContainerStatusSerializeHandler(Utf8JsonWriter writer, V1ContainerStatus value);
    public JsonTypeInfo`1<V1ContainerUser> get_V1ContainerUser();
    private JsonTypeInfo`1<V1ContainerUser> Create_V1ContainerUser(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ContainerUserPropInit(JsonSerializerOptions options);
    private void V1ContainerUserSerializeHandler(Utf8JsonWriter writer, V1ContainerUser value);
    public JsonTypeInfo`1<V1ControllerRevision> get_V1ControllerRevision();
    private JsonTypeInfo`1<V1ControllerRevision> Create_V1ControllerRevision(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ControllerRevisionPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<V1ControllerRevisionList> get_V1ControllerRevisionList();
    private JsonTypeInfo`1<V1ControllerRevisionList> Create_V1ControllerRevisionList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ControllerRevisionListPropInit(JsonSerializerOptions options);
    private void V1ControllerRevisionListSerializeHandler(Utf8JsonWriter writer, V1ControllerRevisionList value);
    public JsonTypeInfo`1<V1CronJob> get_V1CronJob();
    private JsonTypeInfo`1<V1CronJob> Create_V1CronJob(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CronJobPropInit(JsonSerializerOptions options);
    private void V1CronJobSerializeHandler(Utf8JsonWriter writer, V1CronJob value);
    public JsonTypeInfo`1<V1CronJobList> get_V1CronJobList();
    private JsonTypeInfo`1<V1CronJobList> Create_V1CronJobList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CronJobListPropInit(JsonSerializerOptions options);
    private void V1CronJobListSerializeHandler(Utf8JsonWriter writer, V1CronJobList value);
    public JsonTypeInfo`1<V1CronJobSpec> get_V1CronJobSpec();
    private JsonTypeInfo`1<V1CronJobSpec> Create_V1CronJobSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CronJobSpecPropInit(JsonSerializerOptions options);
    private void V1CronJobSpecSerializeHandler(Utf8JsonWriter writer, V1CronJobSpec value);
    public JsonTypeInfo`1<V1CronJobStatus> get_V1CronJobStatus();
    private JsonTypeInfo`1<V1CronJobStatus> Create_V1CronJobStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CronJobStatusPropInit(JsonSerializerOptions options);
    private void V1CronJobStatusSerializeHandler(Utf8JsonWriter writer, V1CronJobStatus value);
    public JsonTypeInfo`1<V1CrossVersionObjectReference> get_V1CrossVersionObjectReference();
    private JsonTypeInfo`1<V1CrossVersionObjectReference> Create_V1CrossVersionObjectReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CrossVersionObjectReferencePropInit(JsonSerializerOptions options);
    private void V1CrossVersionObjectReferenceSerializeHandler(Utf8JsonWriter writer, V1CrossVersionObjectReference value);
    public JsonTypeInfo`1<V1CSIDriver> get_V1CSIDriver();
    private JsonTypeInfo`1<V1CSIDriver> Create_V1CSIDriver(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSIDriverPropInit(JsonSerializerOptions options);
    private void V1CSIDriverSerializeHandler(Utf8JsonWriter writer, V1CSIDriver value);
    public JsonTypeInfo`1<V1CSIDriverList> get_V1CSIDriverList();
    private JsonTypeInfo`1<V1CSIDriverList> Create_V1CSIDriverList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSIDriverListPropInit(JsonSerializerOptions options);
    private void V1CSIDriverListSerializeHandler(Utf8JsonWriter writer, V1CSIDriverList value);
    public JsonTypeInfo`1<V1CSIDriverSpec> get_V1CSIDriverSpec();
    private JsonTypeInfo`1<V1CSIDriverSpec> Create_V1CSIDriverSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSIDriverSpecPropInit(JsonSerializerOptions options);
    private void V1CSIDriverSpecSerializeHandler(Utf8JsonWriter writer, V1CSIDriverSpec value);
    public JsonTypeInfo`1<V1CSINode> get_V1CSINode();
    private JsonTypeInfo`1<V1CSINode> Create_V1CSINode(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSINodePropInit(JsonSerializerOptions options);
    private void V1CSINodeSerializeHandler(Utf8JsonWriter writer, V1CSINode value);
    public JsonTypeInfo`1<V1CSINodeDriver> get_V1CSINodeDriver();
    private JsonTypeInfo`1<V1CSINodeDriver> Create_V1CSINodeDriver(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSINodeDriverPropInit(JsonSerializerOptions options);
    private void V1CSINodeDriverSerializeHandler(Utf8JsonWriter writer, V1CSINodeDriver value);
    public JsonTypeInfo`1<V1CSINodeList> get_V1CSINodeList();
    private JsonTypeInfo`1<V1CSINodeList> Create_V1CSINodeList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSINodeListPropInit(JsonSerializerOptions options);
    private void V1CSINodeListSerializeHandler(Utf8JsonWriter writer, V1CSINodeList value);
    public JsonTypeInfo`1<V1CSINodeSpec> get_V1CSINodeSpec();
    private JsonTypeInfo`1<V1CSINodeSpec> Create_V1CSINodeSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSINodeSpecPropInit(JsonSerializerOptions options);
    private void V1CSINodeSpecSerializeHandler(Utf8JsonWriter writer, V1CSINodeSpec value);
    public JsonTypeInfo`1<V1CSIPersistentVolumeSource> get_V1CSIPersistentVolumeSource();
    private JsonTypeInfo`1<V1CSIPersistentVolumeSource> Create_V1CSIPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSIPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1CSIPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1CSIPersistentVolumeSource value);
    public JsonTypeInfo`1<V1CSIStorageCapacity> get_V1CSIStorageCapacity();
    private JsonTypeInfo`1<V1CSIStorageCapacity> Create_V1CSIStorageCapacity(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSIStorageCapacityPropInit(JsonSerializerOptions options);
    private void V1CSIStorageCapacitySerializeHandler(Utf8JsonWriter writer, V1CSIStorageCapacity value);
    public JsonTypeInfo`1<V1CSIStorageCapacityList> get_V1CSIStorageCapacityList();
    private JsonTypeInfo`1<V1CSIStorageCapacityList> Create_V1CSIStorageCapacityList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSIStorageCapacityListPropInit(JsonSerializerOptions options);
    private void V1CSIStorageCapacityListSerializeHandler(Utf8JsonWriter writer, V1CSIStorageCapacityList value);
    public JsonTypeInfo`1<V1CSIVolumeSource> get_V1CSIVolumeSource();
    private JsonTypeInfo`1<V1CSIVolumeSource> Create_V1CSIVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CSIVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1CSIVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1CSIVolumeSource value);
    public JsonTypeInfo`1<V1CustomResourceColumnDefinition> get_V1CustomResourceColumnDefinition();
    private JsonTypeInfo`1<V1CustomResourceColumnDefinition> Create_V1CustomResourceColumnDefinition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceColumnDefinitionPropInit(JsonSerializerOptions options);
    private void V1CustomResourceColumnDefinitionSerializeHandler(Utf8JsonWriter writer, V1CustomResourceColumnDefinition value);
    public JsonTypeInfo`1<V1CustomResourceConversion> get_V1CustomResourceConversion();
    private JsonTypeInfo`1<V1CustomResourceConversion> Create_V1CustomResourceConversion(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceConversionPropInit(JsonSerializerOptions options);
    private void V1CustomResourceConversionSerializeHandler(Utf8JsonWriter writer, V1CustomResourceConversion value);
    public JsonTypeInfo`1<V1CustomResourceDefinition> get_V1CustomResourceDefinition();
    private JsonTypeInfo`1<V1CustomResourceDefinition> Create_V1CustomResourceDefinition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceDefinitionPropInit(JsonSerializerOptions options);
    private void V1CustomResourceDefinitionSerializeHandler(Utf8JsonWriter writer, V1CustomResourceDefinition value);
    public JsonTypeInfo`1<V1CustomResourceDefinitionCondition> get_V1CustomResourceDefinitionCondition();
    private JsonTypeInfo`1<V1CustomResourceDefinitionCondition> Create_V1CustomResourceDefinitionCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceDefinitionConditionPropInit(JsonSerializerOptions options);
    private void V1CustomResourceDefinitionConditionSerializeHandler(Utf8JsonWriter writer, V1CustomResourceDefinitionCondition value);
    public JsonTypeInfo`1<V1CustomResourceDefinitionList> get_V1CustomResourceDefinitionList();
    private JsonTypeInfo`1<V1CustomResourceDefinitionList> Create_V1CustomResourceDefinitionList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceDefinitionListPropInit(JsonSerializerOptions options);
    private void V1CustomResourceDefinitionListSerializeHandler(Utf8JsonWriter writer, V1CustomResourceDefinitionList value);
    public JsonTypeInfo`1<V1CustomResourceDefinitionNames> get_V1CustomResourceDefinitionNames();
    private JsonTypeInfo`1<V1CustomResourceDefinitionNames> Create_V1CustomResourceDefinitionNames(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceDefinitionNamesPropInit(JsonSerializerOptions options);
    private void V1CustomResourceDefinitionNamesSerializeHandler(Utf8JsonWriter writer, V1CustomResourceDefinitionNames value);
    public JsonTypeInfo`1<V1CustomResourceDefinitionSpec> get_V1CustomResourceDefinitionSpec();
    private JsonTypeInfo`1<V1CustomResourceDefinitionSpec> Create_V1CustomResourceDefinitionSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceDefinitionSpecPropInit(JsonSerializerOptions options);
    private void V1CustomResourceDefinitionSpecSerializeHandler(Utf8JsonWriter writer, V1CustomResourceDefinitionSpec value);
    public JsonTypeInfo`1<V1CustomResourceDefinitionStatus> get_V1CustomResourceDefinitionStatus();
    private JsonTypeInfo`1<V1CustomResourceDefinitionStatus> Create_V1CustomResourceDefinitionStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceDefinitionStatusPropInit(JsonSerializerOptions options);
    private void V1CustomResourceDefinitionStatusSerializeHandler(Utf8JsonWriter writer, V1CustomResourceDefinitionStatus value);
    public JsonTypeInfo`1<V1CustomResourceDefinitionVersion> get_V1CustomResourceDefinitionVersion();
    private JsonTypeInfo`1<V1CustomResourceDefinitionVersion> Create_V1CustomResourceDefinitionVersion(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceDefinitionVersionPropInit(JsonSerializerOptions options);
    private void V1CustomResourceDefinitionVersionSerializeHandler(Utf8JsonWriter writer, V1CustomResourceDefinitionVersion value);
    public JsonTypeInfo`1<V1CustomResourceSubresources> get_V1CustomResourceSubresources();
    private JsonTypeInfo`1<V1CustomResourceSubresources> Create_V1CustomResourceSubresources(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceSubresourcesPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<V1CustomResourceSubresourceScale> get_V1CustomResourceSubresourceScale();
    private JsonTypeInfo`1<V1CustomResourceSubresourceScale> Create_V1CustomResourceSubresourceScale(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceSubresourceScalePropInit(JsonSerializerOptions options);
    private void V1CustomResourceSubresourceScaleSerializeHandler(Utf8JsonWriter writer, V1CustomResourceSubresourceScale value);
    public JsonTypeInfo`1<V1CustomResourceValidation> get_V1CustomResourceValidation();
    private JsonTypeInfo`1<V1CustomResourceValidation> Create_V1CustomResourceValidation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1CustomResourceValidationPropInit(JsonSerializerOptions options);
    private void V1CustomResourceValidationSerializeHandler(Utf8JsonWriter writer, V1CustomResourceValidation value);
    public JsonTypeInfo`1<V1DaemonEndpoint> get_V1DaemonEndpoint();
    private JsonTypeInfo`1<V1DaemonEndpoint> Create_V1DaemonEndpoint(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DaemonEndpointPropInit(JsonSerializerOptions options);
    private void V1DaemonEndpointSerializeHandler(Utf8JsonWriter writer, V1DaemonEndpoint value);
    public JsonTypeInfo`1<V1DaemonSet> get_V1DaemonSet();
    private JsonTypeInfo`1<V1DaemonSet> Create_V1DaemonSet(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DaemonSetPropInit(JsonSerializerOptions options);
    private void V1DaemonSetSerializeHandler(Utf8JsonWriter writer, V1DaemonSet value);
    public JsonTypeInfo`1<V1DaemonSetCondition> get_V1DaemonSetCondition();
    private JsonTypeInfo`1<V1DaemonSetCondition> Create_V1DaemonSetCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DaemonSetConditionPropInit(JsonSerializerOptions options);
    private void V1DaemonSetConditionSerializeHandler(Utf8JsonWriter writer, V1DaemonSetCondition value);
    public JsonTypeInfo`1<V1DaemonSetList> get_V1DaemonSetList();
    private JsonTypeInfo`1<V1DaemonSetList> Create_V1DaemonSetList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DaemonSetListPropInit(JsonSerializerOptions options);
    private void V1DaemonSetListSerializeHandler(Utf8JsonWriter writer, V1DaemonSetList value);
    public JsonTypeInfo`1<V1DaemonSetSpec> get_V1DaemonSetSpec();
    private JsonTypeInfo`1<V1DaemonSetSpec> Create_V1DaemonSetSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DaemonSetSpecPropInit(JsonSerializerOptions options);
    private void V1DaemonSetSpecSerializeHandler(Utf8JsonWriter writer, V1DaemonSetSpec value);
    public JsonTypeInfo`1<V1DaemonSetStatus> get_V1DaemonSetStatus();
    private JsonTypeInfo`1<V1DaemonSetStatus> Create_V1DaemonSetStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DaemonSetStatusPropInit(JsonSerializerOptions options);
    private void V1DaemonSetStatusSerializeHandler(Utf8JsonWriter writer, V1DaemonSetStatus value);
    public JsonTypeInfo`1<V1DaemonSetUpdateStrategy> get_V1DaemonSetUpdateStrategy();
    private JsonTypeInfo`1<V1DaemonSetUpdateStrategy> Create_V1DaemonSetUpdateStrategy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DaemonSetUpdateStrategyPropInit(JsonSerializerOptions options);
    private void V1DaemonSetUpdateStrategySerializeHandler(Utf8JsonWriter writer, V1DaemonSetUpdateStrategy value);
    public JsonTypeInfo`1<V1DeleteOptions> get_V1DeleteOptions();
    private JsonTypeInfo`1<V1DeleteOptions> Create_V1DeleteOptions(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DeleteOptionsPropInit(JsonSerializerOptions options);
    private void V1DeleteOptionsSerializeHandler(Utf8JsonWriter writer, V1DeleteOptions value);
    public JsonTypeInfo`1<V1Deployment> get_V1Deployment();
    private JsonTypeInfo`1<V1Deployment> Create_V1Deployment(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DeploymentPropInit(JsonSerializerOptions options);
    private void V1DeploymentSerializeHandler(Utf8JsonWriter writer, V1Deployment value);
    public JsonTypeInfo`1<V1DeploymentCondition> get_V1DeploymentCondition();
    private JsonTypeInfo`1<V1DeploymentCondition> Create_V1DeploymentCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DeploymentConditionPropInit(JsonSerializerOptions options);
    private void V1DeploymentConditionSerializeHandler(Utf8JsonWriter writer, V1DeploymentCondition value);
    public JsonTypeInfo`1<V1DeploymentList> get_V1DeploymentList();
    private JsonTypeInfo`1<V1DeploymentList> Create_V1DeploymentList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DeploymentListPropInit(JsonSerializerOptions options);
    private void V1DeploymentListSerializeHandler(Utf8JsonWriter writer, V1DeploymentList value);
    public JsonTypeInfo`1<V1DeploymentSpec> get_V1DeploymentSpec();
    private JsonTypeInfo`1<V1DeploymentSpec> Create_V1DeploymentSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DeploymentSpecPropInit(JsonSerializerOptions options);
    private void V1DeploymentSpecSerializeHandler(Utf8JsonWriter writer, V1DeploymentSpec value);
    public JsonTypeInfo`1<V1DeploymentStatus> get_V1DeploymentStatus();
    private JsonTypeInfo`1<V1DeploymentStatus> Create_V1DeploymentStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DeploymentStatusPropInit(JsonSerializerOptions options);
    private void V1DeploymentStatusSerializeHandler(Utf8JsonWriter writer, V1DeploymentStatus value);
    public JsonTypeInfo`1<V1DeploymentStrategy> get_V1DeploymentStrategy();
    private JsonTypeInfo`1<V1DeploymentStrategy> Create_V1DeploymentStrategy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DeploymentStrategyPropInit(JsonSerializerOptions options);
    private void V1DeploymentStrategySerializeHandler(Utf8JsonWriter writer, V1DeploymentStrategy value);
    public JsonTypeInfo`1<V1DownwardAPIProjection> get_V1DownwardAPIProjection();
    private JsonTypeInfo`1<V1DownwardAPIProjection> Create_V1DownwardAPIProjection(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DownwardAPIProjectionPropInit(JsonSerializerOptions options);
    private void V1DownwardAPIProjectionSerializeHandler(Utf8JsonWriter writer, V1DownwardAPIProjection value);
    public JsonTypeInfo`1<V1DownwardAPIVolumeFile> get_V1DownwardAPIVolumeFile();
    private JsonTypeInfo`1<V1DownwardAPIVolumeFile> Create_V1DownwardAPIVolumeFile(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DownwardAPIVolumeFilePropInit(JsonSerializerOptions options);
    private void V1DownwardAPIVolumeFileSerializeHandler(Utf8JsonWriter writer, V1DownwardAPIVolumeFile value);
    public JsonTypeInfo`1<V1DownwardAPIVolumeSource> get_V1DownwardAPIVolumeSource();
    private JsonTypeInfo`1<V1DownwardAPIVolumeSource> Create_V1DownwardAPIVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1DownwardAPIVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1DownwardAPIVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1DownwardAPIVolumeSource value);
    public JsonTypeInfo`1<V1EmptyDirVolumeSource> get_V1EmptyDirVolumeSource();
    private JsonTypeInfo`1<V1EmptyDirVolumeSource> Create_V1EmptyDirVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EmptyDirVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1EmptyDirVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1EmptyDirVolumeSource value);
    public JsonTypeInfo`1<V1Endpoint> get_V1Endpoint();
    private JsonTypeInfo`1<V1Endpoint> Create_V1Endpoint(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointPropInit(JsonSerializerOptions options);
    private void V1EndpointSerializeHandler(Utf8JsonWriter writer, V1Endpoint value);
    public JsonTypeInfo`1<V1EndpointAddress> get_V1EndpointAddress();
    private JsonTypeInfo`1<V1EndpointAddress> Create_V1EndpointAddress(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointAddressPropInit(JsonSerializerOptions options);
    private void V1EndpointAddressSerializeHandler(Utf8JsonWriter writer, V1EndpointAddress value);
    public JsonTypeInfo`1<V1EndpointConditions> get_V1EndpointConditions();
    private JsonTypeInfo`1<V1EndpointConditions> Create_V1EndpointConditions(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointConditionsPropInit(JsonSerializerOptions options);
    private void V1EndpointConditionsSerializeHandler(Utf8JsonWriter writer, V1EndpointConditions value);
    public JsonTypeInfo`1<V1EndpointHints> get_V1EndpointHints();
    private JsonTypeInfo`1<V1EndpointHints> Create_V1EndpointHints(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointHintsPropInit(JsonSerializerOptions options);
    private void V1EndpointHintsSerializeHandler(Utf8JsonWriter writer, V1EndpointHints value);
    public JsonTypeInfo`1<V1Endpoints> get_V1Endpoints();
    private JsonTypeInfo`1<V1Endpoints> Create_V1Endpoints(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointsPropInit(JsonSerializerOptions options);
    private void V1EndpointsSerializeHandler(Utf8JsonWriter writer, V1Endpoints value);
    public JsonTypeInfo`1<V1EndpointSlice> get_V1EndpointSlice();
    private JsonTypeInfo`1<V1EndpointSlice> Create_V1EndpointSlice(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointSlicePropInit(JsonSerializerOptions options);
    private void V1EndpointSliceSerializeHandler(Utf8JsonWriter writer, V1EndpointSlice value);
    public JsonTypeInfo`1<V1EndpointSliceList> get_V1EndpointSliceList();
    private JsonTypeInfo`1<V1EndpointSliceList> Create_V1EndpointSliceList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointSliceListPropInit(JsonSerializerOptions options);
    private void V1EndpointSliceListSerializeHandler(Utf8JsonWriter writer, V1EndpointSliceList value);
    public JsonTypeInfo`1<V1EndpointsList> get_V1EndpointsList();
    private JsonTypeInfo`1<V1EndpointsList> Create_V1EndpointsList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointsListPropInit(JsonSerializerOptions options);
    private void V1EndpointsListSerializeHandler(Utf8JsonWriter writer, V1EndpointsList value);
    public JsonTypeInfo`1<V1EndpointSubset> get_V1EndpointSubset();
    private JsonTypeInfo`1<V1EndpointSubset> Create_V1EndpointSubset(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EndpointSubsetPropInit(JsonSerializerOptions options);
    private void V1EndpointSubsetSerializeHandler(Utf8JsonWriter writer, V1EndpointSubset value);
    public JsonTypeInfo`1<V1EnvFromSource> get_V1EnvFromSource();
    private JsonTypeInfo`1<V1EnvFromSource> Create_V1EnvFromSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EnvFromSourcePropInit(JsonSerializerOptions options);
    private void V1EnvFromSourceSerializeHandler(Utf8JsonWriter writer, V1EnvFromSource value);
    public JsonTypeInfo`1<V1EnvVar> get_V1EnvVar();
    private JsonTypeInfo`1<V1EnvVar> Create_V1EnvVar(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EnvVarPropInit(JsonSerializerOptions options);
    private void V1EnvVarSerializeHandler(Utf8JsonWriter writer, V1EnvVar value);
    public JsonTypeInfo`1<V1EnvVarSource> get_V1EnvVarSource();
    private JsonTypeInfo`1<V1EnvVarSource> Create_V1EnvVarSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EnvVarSourcePropInit(JsonSerializerOptions options);
    private void V1EnvVarSourceSerializeHandler(Utf8JsonWriter writer, V1EnvVarSource value);
    public JsonTypeInfo`1<V1EphemeralContainer> get_V1EphemeralContainer();
    private JsonTypeInfo`1<V1EphemeralContainer> Create_V1EphemeralContainer(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EphemeralContainerPropInit(JsonSerializerOptions options);
    private void V1EphemeralContainerSerializeHandler(Utf8JsonWriter writer, V1EphemeralContainer value);
    public JsonTypeInfo`1<V1EphemeralVolumeSource> get_V1EphemeralVolumeSource();
    private JsonTypeInfo`1<V1EphemeralVolumeSource> Create_V1EphemeralVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EphemeralVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1EphemeralVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1EphemeralVolumeSource value);
    public JsonTypeInfo`1<V1EventSource> get_V1EventSource();
    private JsonTypeInfo`1<V1EventSource> Create_V1EventSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EventSourcePropInit(JsonSerializerOptions options);
    private void V1EventSourceSerializeHandler(Utf8JsonWriter writer, V1EventSource value);
    public JsonTypeInfo`1<V1Eviction> get_V1Eviction();
    private JsonTypeInfo`1<V1Eviction> Create_V1Eviction(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1EvictionPropInit(JsonSerializerOptions options);
    private void V1EvictionSerializeHandler(Utf8JsonWriter writer, V1Eviction value);
    public JsonTypeInfo`1<V1ExecAction> get_V1ExecAction();
    private JsonTypeInfo`1<V1ExecAction> Create_V1ExecAction(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ExecActionPropInit(JsonSerializerOptions options);
    private void V1ExecActionSerializeHandler(Utf8JsonWriter writer, V1ExecAction value);
    public JsonTypeInfo`1<V1ExemptPriorityLevelConfiguration> get_V1ExemptPriorityLevelConfiguration();
    private JsonTypeInfo`1<V1ExemptPriorityLevelConfiguration> Create_V1ExemptPriorityLevelConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ExemptPriorityLevelConfigurationPropInit(JsonSerializerOptions options);
    private void V1ExemptPriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, V1ExemptPriorityLevelConfiguration value);
    public JsonTypeInfo`1<V1ExpressionWarning> get_V1ExpressionWarning();
    private JsonTypeInfo`1<V1ExpressionWarning> Create_V1ExpressionWarning(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ExpressionWarningPropInit(JsonSerializerOptions options);
    private void V1ExpressionWarningSerializeHandler(Utf8JsonWriter writer, V1ExpressionWarning value);
    public JsonTypeInfo`1<V1ExternalDocumentation> get_V1ExternalDocumentation();
    private JsonTypeInfo`1<V1ExternalDocumentation> Create_V1ExternalDocumentation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ExternalDocumentationPropInit(JsonSerializerOptions options);
    private void V1ExternalDocumentationSerializeHandler(Utf8JsonWriter writer, V1ExternalDocumentation value);
    public JsonTypeInfo`1<V1FCVolumeSource> get_V1FCVolumeSource();
    private JsonTypeInfo`1<V1FCVolumeSource> Create_V1FCVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FCVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1FCVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1FCVolumeSource value);
    public JsonTypeInfo`1<V1FieldSelectorAttributes> get_V1FieldSelectorAttributes();
    private JsonTypeInfo`1<V1FieldSelectorAttributes> Create_V1FieldSelectorAttributes(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FieldSelectorAttributesPropInit(JsonSerializerOptions options);
    private void V1FieldSelectorAttributesSerializeHandler(Utf8JsonWriter writer, V1FieldSelectorAttributes value);
    public JsonTypeInfo`1<V1FieldSelectorRequirement> get_V1FieldSelectorRequirement();
    private JsonTypeInfo`1<V1FieldSelectorRequirement> Create_V1FieldSelectorRequirement(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FieldSelectorRequirementPropInit(JsonSerializerOptions options);
    private void V1FieldSelectorRequirementSerializeHandler(Utf8JsonWriter writer, V1FieldSelectorRequirement value);
    public JsonTypeInfo`1<V1FlexPersistentVolumeSource> get_V1FlexPersistentVolumeSource();
    private JsonTypeInfo`1<V1FlexPersistentVolumeSource> Create_V1FlexPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlexPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1FlexPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1FlexPersistentVolumeSource value);
    public JsonTypeInfo`1<V1FlexVolumeSource> get_V1FlexVolumeSource();
    private JsonTypeInfo`1<V1FlexVolumeSource> Create_V1FlexVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlexVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1FlexVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1FlexVolumeSource value);
    public JsonTypeInfo`1<V1FlockerVolumeSource> get_V1FlockerVolumeSource();
    private JsonTypeInfo`1<V1FlockerVolumeSource> Create_V1FlockerVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlockerVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1FlockerVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1FlockerVolumeSource value);
    public JsonTypeInfo`1<V1FlowDistinguisherMethod> get_V1FlowDistinguisherMethod();
    private JsonTypeInfo`1<V1FlowDistinguisherMethod> Create_V1FlowDistinguisherMethod(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlowDistinguisherMethodPropInit(JsonSerializerOptions options);
    private void V1FlowDistinguisherMethodSerializeHandler(Utf8JsonWriter writer, V1FlowDistinguisherMethod value);
    public JsonTypeInfo`1<V1FlowSchema> get_V1FlowSchema();
    private JsonTypeInfo`1<V1FlowSchema> Create_V1FlowSchema(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlowSchemaPropInit(JsonSerializerOptions options);
    private void V1FlowSchemaSerializeHandler(Utf8JsonWriter writer, V1FlowSchema value);
    public JsonTypeInfo`1<V1FlowSchemaCondition> get_V1FlowSchemaCondition();
    private JsonTypeInfo`1<V1FlowSchemaCondition> Create_V1FlowSchemaCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlowSchemaConditionPropInit(JsonSerializerOptions options);
    private void V1FlowSchemaConditionSerializeHandler(Utf8JsonWriter writer, V1FlowSchemaCondition value);
    public JsonTypeInfo`1<V1FlowSchemaList> get_V1FlowSchemaList();
    private JsonTypeInfo`1<V1FlowSchemaList> Create_V1FlowSchemaList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlowSchemaListPropInit(JsonSerializerOptions options);
    private void V1FlowSchemaListSerializeHandler(Utf8JsonWriter writer, V1FlowSchemaList value);
    public JsonTypeInfo`1<V1FlowSchemaSpec> get_V1FlowSchemaSpec();
    private JsonTypeInfo`1<V1FlowSchemaSpec> Create_V1FlowSchemaSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlowSchemaSpecPropInit(JsonSerializerOptions options);
    private void V1FlowSchemaSpecSerializeHandler(Utf8JsonWriter writer, V1FlowSchemaSpec value);
    public JsonTypeInfo`1<V1FlowSchemaStatus> get_V1FlowSchemaStatus();
    private JsonTypeInfo`1<V1FlowSchemaStatus> Create_V1FlowSchemaStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1FlowSchemaStatusPropInit(JsonSerializerOptions options);
    private void V1FlowSchemaStatusSerializeHandler(Utf8JsonWriter writer, V1FlowSchemaStatus value);
    public JsonTypeInfo`1<V1ForZone> get_V1ForZone();
    private JsonTypeInfo`1<V1ForZone> Create_V1ForZone(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ForZonePropInit(JsonSerializerOptions options);
    private void V1ForZoneSerializeHandler(Utf8JsonWriter writer, V1ForZone value);
    public JsonTypeInfo`1<V1GCEPersistentDiskVolumeSource> get_V1GCEPersistentDiskVolumeSource();
    private JsonTypeInfo`1<V1GCEPersistentDiskVolumeSource> Create_V1GCEPersistentDiskVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1GCEPersistentDiskVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1GCEPersistentDiskVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1GCEPersistentDiskVolumeSource value);
    public JsonTypeInfo`1<V1GitRepoVolumeSource> get_V1GitRepoVolumeSource();
    private JsonTypeInfo`1<V1GitRepoVolumeSource> Create_V1GitRepoVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1GitRepoVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1GitRepoVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1GitRepoVolumeSource value);
    public JsonTypeInfo`1<V1GlusterfsPersistentVolumeSource> get_V1GlusterfsPersistentVolumeSource();
    private JsonTypeInfo`1<V1GlusterfsPersistentVolumeSource> Create_V1GlusterfsPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1GlusterfsPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1GlusterfsPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1GlusterfsPersistentVolumeSource value);
    public JsonTypeInfo`1<V1GlusterfsVolumeSource> get_V1GlusterfsVolumeSource();
    private JsonTypeInfo`1<V1GlusterfsVolumeSource> Create_V1GlusterfsVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1GlusterfsVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1GlusterfsVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1GlusterfsVolumeSource value);
    public JsonTypeInfo`1<V1GroupSubject> get_V1GroupSubject();
    private JsonTypeInfo`1<V1GroupSubject> Create_V1GroupSubject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1GroupSubjectPropInit(JsonSerializerOptions options);
    private void V1GroupSubjectSerializeHandler(Utf8JsonWriter writer, V1GroupSubject value);
    public JsonTypeInfo`1<V1GroupVersionForDiscovery> get_V1GroupVersionForDiscovery();
    private JsonTypeInfo`1<V1GroupVersionForDiscovery> Create_V1GroupVersionForDiscovery(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1GroupVersionForDiscoveryPropInit(JsonSerializerOptions options);
    private void V1GroupVersionForDiscoverySerializeHandler(Utf8JsonWriter writer, V1GroupVersionForDiscovery value);
    public JsonTypeInfo`1<V1GRPCAction> get_V1GRPCAction();
    private JsonTypeInfo`1<V1GRPCAction> Create_V1GRPCAction(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1GRPCActionPropInit(JsonSerializerOptions options);
    private void V1GRPCActionSerializeHandler(Utf8JsonWriter writer, V1GRPCAction value);
    public JsonTypeInfo`1<V1HorizontalPodAutoscaler> get_V1HorizontalPodAutoscaler();
    private JsonTypeInfo`1<V1HorizontalPodAutoscaler> Create_V1HorizontalPodAutoscaler(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HorizontalPodAutoscalerPropInit(JsonSerializerOptions options);
    private void V1HorizontalPodAutoscalerSerializeHandler(Utf8JsonWriter writer, V1HorizontalPodAutoscaler value);
    public JsonTypeInfo`1<V1HorizontalPodAutoscalerList> get_V1HorizontalPodAutoscalerList();
    private JsonTypeInfo`1<V1HorizontalPodAutoscalerList> Create_V1HorizontalPodAutoscalerList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HorizontalPodAutoscalerListPropInit(JsonSerializerOptions options);
    private void V1HorizontalPodAutoscalerListSerializeHandler(Utf8JsonWriter writer, V1HorizontalPodAutoscalerList value);
    public JsonTypeInfo`1<V1HorizontalPodAutoscalerSpec> get_V1HorizontalPodAutoscalerSpec();
    private JsonTypeInfo`1<V1HorizontalPodAutoscalerSpec> Create_V1HorizontalPodAutoscalerSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HorizontalPodAutoscalerSpecPropInit(JsonSerializerOptions options);
    private void V1HorizontalPodAutoscalerSpecSerializeHandler(Utf8JsonWriter writer, V1HorizontalPodAutoscalerSpec value);
    public JsonTypeInfo`1<V1HorizontalPodAutoscalerStatus> get_V1HorizontalPodAutoscalerStatus();
    private JsonTypeInfo`1<V1HorizontalPodAutoscalerStatus> Create_V1HorizontalPodAutoscalerStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HorizontalPodAutoscalerStatusPropInit(JsonSerializerOptions options);
    private void V1HorizontalPodAutoscalerStatusSerializeHandler(Utf8JsonWriter writer, V1HorizontalPodAutoscalerStatus value);
    public JsonTypeInfo`1<V1HostAlias> get_V1HostAlias();
    private JsonTypeInfo`1<V1HostAlias> Create_V1HostAlias(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HostAliasPropInit(JsonSerializerOptions options);
    private void V1HostAliasSerializeHandler(Utf8JsonWriter writer, V1HostAlias value);
    public JsonTypeInfo`1<V1HostIP> get_V1HostIP();
    private JsonTypeInfo`1<V1HostIP> Create_V1HostIP(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HostIPPropInit(JsonSerializerOptions options);
    private void V1HostIPSerializeHandler(Utf8JsonWriter writer, V1HostIP value);
    public JsonTypeInfo`1<V1HostPathVolumeSource> get_V1HostPathVolumeSource();
    private JsonTypeInfo`1<V1HostPathVolumeSource> Create_V1HostPathVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HostPathVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1HostPathVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1HostPathVolumeSource value);
    public JsonTypeInfo`1<V1HTTPGetAction> get_V1HTTPGetAction();
    private JsonTypeInfo`1<V1HTTPGetAction> Create_V1HTTPGetAction(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HTTPGetActionPropInit(JsonSerializerOptions options);
    private void V1HTTPGetActionSerializeHandler(Utf8JsonWriter writer, V1HTTPGetAction value);
    public JsonTypeInfo`1<V1HTTPHeader> get_V1HTTPHeader();
    private JsonTypeInfo`1<V1HTTPHeader> Create_V1HTTPHeader(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HTTPHeaderPropInit(JsonSerializerOptions options);
    private void V1HTTPHeaderSerializeHandler(Utf8JsonWriter writer, V1HTTPHeader value);
    public JsonTypeInfo`1<V1HTTPIngressPath> get_V1HTTPIngressPath();
    private JsonTypeInfo`1<V1HTTPIngressPath> Create_V1HTTPIngressPath(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HTTPIngressPathPropInit(JsonSerializerOptions options);
    private void V1HTTPIngressPathSerializeHandler(Utf8JsonWriter writer, V1HTTPIngressPath value);
    public JsonTypeInfo`1<V1HTTPIngressRuleValue> get_V1HTTPIngressRuleValue();
    private JsonTypeInfo`1<V1HTTPIngressRuleValue> Create_V1HTTPIngressRuleValue(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1HTTPIngressRuleValuePropInit(JsonSerializerOptions options);
    private void V1HTTPIngressRuleValueSerializeHandler(Utf8JsonWriter writer, V1HTTPIngressRuleValue value);
    public JsonTypeInfo`1<V1ImageVolumeSource> get_V1ImageVolumeSource();
    private JsonTypeInfo`1<V1ImageVolumeSource> Create_V1ImageVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ImageVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1ImageVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1ImageVolumeSource value);
    public JsonTypeInfo`1<V1Ingress> get_V1Ingress();
    private JsonTypeInfo`1<V1Ingress> Create_V1Ingress(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressPropInit(JsonSerializerOptions options);
    private void V1IngressSerializeHandler(Utf8JsonWriter writer, V1Ingress value);
    public JsonTypeInfo`1<V1IngressBackend> get_V1IngressBackend();
    private JsonTypeInfo`1<V1IngressBackend> Create_V1IngressBackend(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressBackendPropInit(JsonSerializerOptions options);
    private void V1IngressBackendSerializeHandler(Utf8JsonWriter writer, V1IngressBackend value);
    public JsonTypeInfo`1<V1IngressClass> get_V1IngressClass();
    private JsonTypeInfo`1<V1IngressClass> Create_V1IngressClass(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressClassPropInit(JsonSerializerOptions options);
    private void V1IngressClassSerializeHandler(Utf8JsonWriter writer, V1IngressClass value);
    public JsonTypeInfo`1<V1IngressClassList> get_V1IngressClassList();
    private JsonTypeInfo`1<V1IngressClassList> Create_V1IngressClassList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressClassListPropInit(JsonSerializerOptions options);
    private void V1IngressClassListSerializeHandler(Utf8JsonWriter writer, V1IngressClassList value);
    public JsonTypeInfo`1<V1IngressClassParametersReference> get_V1IngressClassParametersReference();
    private JsonTypeInfo`1<V1IngressClassParametersReference> Create_V1IngressClassParametersReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressClassParametersReferencePropInit(JsonSerializerOptions options);
    private void V1IngressClassParametersReferenceSerializeHandler(Utf8JsonWriter writer, V1IngressClassParametersReference value);
    public JsonTypeInfo`1<V1IngressClassSpec> get_V1IngressClassSpec();
    private JsonTypeInfo`1<V1IngressClassSpec> Create_V1IngressClassSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressClassSpecPropInit(JsonSerializerOptions options);
    private void V1IngressClassSpecSerializeHandler(Utf8JsonWriter writer, V1IngressClassSpec value);
    public JsonTypeInfo`1<V1IngressList> get_V1IngressList();
    private JsonTypeInfo`1<V1IngressList> Create_V1IngressList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressListPropInit(JsonSerializerOptions options);
    private void V1IngressListSerializeHandler(Utf8JsonWriter writer, V1IngressList value);
    public JsonTypeInfo`1<V1IngressLoadBalancerIngress> get_V1IngressLoadBalancerIngress();
    private JsonTypeInfo`1<V1IngressLoadBalancerIngress> Create_V1IngressLoadBalancerIngress(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressLoadBalancerIngressPropInit(JsonSerializerOptions options);
    private void V1IngressLoadBalancerIngressSerializeHandler(Utf8JsonWriter writer, V1IngressLoadBalancerIngress value);
    public JsonTypeInfo`1<V1IngressLoadBalancerStatus> get_V1IngressLoadBalancerStatus();
    private JsonTypeInfo`1<V1IngressLoadBalancerStatus> Create_V1IngressLoadBalancerStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressLoadBalancerStatusPropInit(JsonSerializerOptions options);
    private void V1IngressLoadBalancerStatusSerializeHandler(Utf8JsonWriter writer, V1IngressLoadBalancerStatus value);
    public JsonTypeInfo`1<V1IngressPortStatus> get_V1IngressPortStatus();
    private JsonTypeInfo`1<V1IngressPortStatus> Create_V1IngressPortStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressPortStatusPropInit(JsonSerializerOptions options);
    private void V1IngressPortStatusSerializeHandler(Utf8JsonWriter writer, V1IngressPortStatus value);
    public JsonTypeInfo`1<V1IngressRule> get_V1IngressRule();
    private JsonTypeInfo`1<V1IngressRule> Create_V1IngressRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressRulePropInit(JsonSerializerOptions options);
    private void V1IngressRuleSerializeHandler(Utf8JsonWriter writer, V1IngressRule value);
    public JsonTypeInfo`1<V1IngressServiceBackend> get_V1IngressServiceBackend();
    private JsonTypeInfo`1<V1IngressServiceBackend> Create_V1IngressServiceBackend(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressServiceBackendPropInit(JsonSerializerOptions options);
    private void V1IngressServiceBackendSerializeHandler(Utf8JsonWriter writer, V1IngressServiceBackend value);
    public JsonTypeInfo`1<V1IngressSpec> get_V1IngressSpec();
    private JsonTypeInfo`1<V1IngressSpec> Create_V1IngressSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressSpecPropInit(JsonSerializerOptions options);
    private void V1IngressSpecSerializeHandler(Utf8JsonWriter writer, V1IngressSpec value);
    public JsonTypeInfo`1<V1IngressStatus> get_V1IngressStatus();
    private JsonTypeInfo`1<V1IngressStatus> Create_V1IngressStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressStatusPropInit(JsonSerializerOptions options);
    private void V1IngressStatusSerializeHandler(Utf8JsonWriter writer, V1IngressStatus value);
    public JsonTypeInfo`1<V1IngressTLS> get_V1IngressTLS();
    private JsonTypeInfo`1<V1IngressTLS> Create_V1IngressTLS(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IngressTLSPropInit(JsonSerializerOptions options);
    private void V1IngressTLSSerializeHandler(Utf8JsonWriter writer, V1IngressTLS value);
    public JsonTypeInfo`1<V1IPBlock> get_V1IPBlock();
    private JsonTypeInfo`1<V1IPBlock> Create_V1IPBlock(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1IPBlockPropInit(JsonSerializerOptions options);
    private void V1IPBlockSerializeHandler(Utf8JsonWriter writer, V1IPBlock value);
    public JsonTypeInfo`1<V1ISCSIPersistentVolumeSource> get_V1ISCSIPersistentVolumeSource();
    private JsonTypeInfo`1<V1ISCSIPersistentVolumeSource> Create_V1ISCSIPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ISCSIPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1ISCSIPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1ISCSIPersistentVolumeSource value);
    public JsonTypeInfo`1<V1ISCSIVolumeSource> get_V1ISCSIVolumeSource();
    private JsonTypeInfo`1<V1ISCSIVolumeSource> Create_V1ISCSIVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ISCSIVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1ISCSIVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1ISCSIVolumeSource value);
    public JsonTypeInfo`1<V1Job> get_V1Job();
    private JsonTypeInfo`1<V1Job> Create_V1Job(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1JobPropInit(JsonSerializerOptions options);
    private void V1JobSerializeHandler(Utf8JsonWriter writer, V1Job value);
    public JsonTypeInfo`1<V1JobCondition> get_V1JobCondition();
    private JsonTypeInfo`1<V1JobCondition> Create_V1JobCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1JobConditionPropInit(JsonSerializerOptions options);
    private void V1JobConditionSerializeHandler(Utf8JsonWriter writer, V1JobCondition value);
    public JsonTypeInfo`1<V1JobList> get_V1JobList();
    private JsonTypeInfo`1<V1JobList> Create_V1JobList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1JobListPropInit(JsonSerializerOptions options);
    private void V1JobListSerializeHandler(Utf8JsonWriter writer, V1JobList value);
    public JsonTypeInfo`1<V1JobSpec> get_V1JobSpec();
    private JsonTypeInfo`1<V1JobSpec> Create_V1JobSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1JobSpecPropInit(JsonSerializerOptions options);
    private void V1JobSpecSerializeHandler(Utf8JsonWriter writer, V1JobSpec value);
    public JsonTypeInfo`1<V1JobStatus> get_V1JobStatus();
    private JsonTypeInfo`1<V1JobStatus> Create_V1JobStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1JobStatusPropInit(JsonSerializerOptions options);
    private void V1JobStatusSerializeHandler(Utf8JsonWriter writer, V1JobStatus value);
    public JsonTypeInfo`1<V1JobTemplateSpec> get_V1JobTemplateSpec();
    private JsonTypeInfo`1<V1JobTemplateSpec> Create_V1JobTemplateSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1JobTemplateSpecPropInit(JsonSerializerOptions options);
    private void V1JobTemplateSpecSerializeHandler(Utf8JsonWriter writer, V1JobTemplateSpec value);
    public JsonTypeInfo`1<V1JSONSchemaProps> get_V1JSONSchemaProps();
    private JsonTypeInfo`1<V1JSONSchemaProps> Create_V1JSONSchemaProps(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1JSONSchemaPropsPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<V1KeyToPath> get_V1KeyToPath();
    private JsonTypeInfo`1<V1KeyToPath> Create_V1KeyToPath(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1KeyToPathPropInit(JsonSerializerOptions options);
    private void V1KeyToPathSerializeHandler(Utf8JsonWriter writer, V1KeyToPath value);
    public JsonTypeInfo`1<V1LabelSelector> get_V1LabelSelector();
    private JsonTypeInfo`1<V1LabelSelector> Create_V1LabelSelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LabelSelectorPropInit(JsonSerializerOptions options);
    private void V1LabelSelectorSerializeHandler(Utf8JsonWriter writer, V1LabelSelector value);
    public JsonTypeInfo`1<V1LabelSelectorAttributes> get_V1LabelSelectorAttributes();
    private JsonTypeInfo`1<V1LabelSelectorAttributes> Create_V1LabelSelectorAttributes(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LabelSelectorAttributesPropInit(JsonSerializerOptions options);
    private void V1LabelSelectorAttributesSerializeHandler(Utf8JsonWriter writer, V1LabelSelectorAttributes value);
    public JsonTypeInfo`1<V1LabelSelectorRequirement> get_V1LabelSelectorRequirement();
    private JsonTypeInfo`1<V1LabelSelectorRequirement> Create_V1LabelSelectorRequirement(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LabelSelectorRequirementPropInit(JsonSerializerOptions options);
    private void V1LabelSelectorRequirementSerializeHandler(Utf8JsonWriter writer, V1LabelSelectorRequirement value);
    public JsonTypeInfo`1<V1Lease> get_V1Lease();
    private JsonTypeInfo`1<V1Lease> Create_V1Lease(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LeasePropInit(JsonSerializerOptions options);
    private void V1LeaseSerializeHandler(Utf8JsonWriter writer, V1Lease value);
    public JsonTypeInfo`1<V1LeaseList> get_V1LeaseList();
    private JsonTypeInfo`1<V1LeaseList> Create_V1LeaseList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LeaseListPropInit(JsonSerializerOptions options);
    private void V1LeaseListSerializeHandler(Utf8JsonWriter writer, V1LeaseList value);
    public JsonTypeInfo`1<V1LeaseSpec> get_V1LeaseSpec();
    private JsonTypeInfo`1<V1LeaseSpec> Create_V1LeaseSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LeaseSpecPropInit(JsonSerializerOptions options);
    private void V1LeaseSpecSerializeHandler(Utf8JsonWriter writer, V1LeaseSpec value);
    public JsonTypeInfo`1<V1Lifecycle> get_V1Lifecycle();
    private JsonTypeInfo`1<V1Lifecycle> Create_V1Lifecycle(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LifecyclePropInit(JsonSerializerOptions options);
    private void V1LifecycleSerializeHandler(Utf8JsonWriter writer, V1Lifecycle value);
    public JsonTypeInfo`1<V1LifecycleHandler> get_V1LifecycleHandler();
    private JsonTypeInfo`1<V1LifecycleHandler> Create_V1LifecycleHandler(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LifecycleHandlerPropInit(JsonSerializerOptions options);
    private void V1LifecycleHandlerSerializeHandler(Utf8JsonWriter writer, V1LifecycleHandler value);
    public JsonTypeInfo`1<V1LimitedPriorityLevelConfiguration> get_V1LimitedPriorityLevelConfiguration();
    private JsonTypeInfo`1<V1LimitedPriorityLevelConfiguration> Create_V1LimitedPriorityLevelConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LimitedPriorityLevelConfigurationPropInit(JsonSerializerOptions options);
    private void V1LimitedPriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, V1LimitedPriorityLevelConfiguration value);
    public JsonTypeInfo`1<V1LimitRange> get_V1LimitRange();
    private JsonTypeInfo`1<V1LimitRange> Create_V1LimitRange(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LimitRangePropInit(JsonSerializerOptions options);
    private void V1LimitRangeSerializeHandler(Utf8JsonWriter writer, V1LimitRange value);
    public JsonTypeInfo`1<V1LimitRangeItem> get_V1LimitRangeItem();
    private JsonTypeInfo`1<V1LimitRangeItem> Create_V1LimitRangeItem(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LimitRangeItemPropInit(JsonSerializerOptions options);
    private void V1LimitRangeItemSerializeHandler(Utf8JsonWriter writer, V1LimitRangeItem value);
    public JsonTypeInfo`1<V1LimitRangeList> get_V1LimitRangeList();
    private JsonTypeInfo`1<V1LimitRangeList> Create_V1LimitRangeList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LimitRangeListPropInit(JsonSerializerOptions options);
    private void V1LimitRangeListSerializeHandler(Utf8JsonWriter writer, V1LimitRangeList value);
    public JsonTypeInfo`1<V1LimitRangeSpec> get_V1LimitRangeSpec();
    private JsonTypeInfo`1<V1LimitRangeSpec> Create_V1LimitRangeSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LimitRangeSpecPropInit(JsonSerializerOptions options);
    private void V1LimitRangeSpecSerializeHandler(Utf8JsonWriter writer, V1LimitRangeSpec value);
    public JsonTypeInfo`1<V1LimitResponse> get_V1LimitResponse();
    private JsonTypeInfo`1<V1LimitResponse> Create_V1LimitResponse(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LimitResponsePropInit(JsonSerializerOptions options);
    private void V1LimitResponseSerializeHandler(Utf8JsonWriter writer, V1LimitResponse value);
    public JsonTypeInfo`1<V1LinuxContainerUser> get_V1LinuxContainerUser();
    private JsonTypeInfo`1<V1LinuxContainerUser> Create_V1LinuxContainerUser(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LinuxContainerUserPropInit(JsonSerializerOptions options);
    private void V1LinuxContainerUserSerializeHandler(Utf8JsonWriter writer, V1LinuxContainerUser value);
    public JsonTypeInfo`1<V1ListMeta> get_V1ListMeta();
    private JsonTypeInfo`1<V1ListMeta> Create_V1ListMeta(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ListMetaPropInit(JsonSerializerOptions options);
    private void V1ListMetaSerializeHandler(Utf8JsonWriter writer, V1ListMeta value);
    public JsonTypeInfo`1<V1LoadBalancerIngress> get_V1LoadBalancerIngress();
    private JsonTypeInfo`1<V1LoadBalancerIngress> Create_V1LoadBalancerIngress(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LoadBalancerIngressPropInit(JsonSerializerOptions options);
    private void V1LoadBalancerIngressSerializeHandler(Utf8JsonWriter writer, V1LoadBalancerIngress value);
    public JsonTypeInfo`1<V1LoadBalancerStatus> get_V1LoadBalancerStatus();
    private JsonTypeInfo`1<V1LoadBalancerStatus> Create_V1LoadBalancerStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LoadBalancerStatusPropInit(JsonSerializerOptions options);
    private void V1LoadBalancerStatusSerializeHandler(Utf8JsonWriter writer, V1LoadBalancerStatus value);
    public JsonTypeInfo`1<V1LocalObjectReference> get_V1LocalObjectReference();
    private JsonTypeInfo`1<V1LocalObjectReference> Create_V1LocalObjectReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LocalObjectReferencePropInit(JsonSerializerOptions options);
    private void V1LocalObjectReferenceSerializeHandler(Utf8JsonWriter writer, V1LocalObjectReference value);
    public JsonTypeInfo`1<V1LocalSubjectAccessReview> get_V1LocalSubjectAccessReview();
    private JsonTypeInfo`1<V1LocalSubjectAccessReview> Create_V1LocalSubjectAccessReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LocalSubjectAccessReviewPropInit(JsonSerializerOptions options);
    private void V1LocalSubjectAccessReviewSerializeHandler(Utf8JsonWriter writer, V1LocalSubjectAccessReview value);
    public JsonTypeInfo`1<V1LocalVolumeSource> get_V1LocalVolumeSource();
    private JsonTypeInfo`1<V1LocalVolumeSource> Create_V1LocalVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1LocalVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1LocalVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1LocalVolumeSource value);
    public JsonTypeInfo`1<V1ManagedFieldsEntry> get_V1ManagedFieldsEntry();
    private JsonTypeInfo`1<V1ManagedFieldsEntry> Create_V1ManagedFieldsEntry(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ManagedFieldsEntryPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<V1MatchCondition> get_V1MatchCondition();
    private JsonTypeInfo`1<V1MatchCondition> Create_V1MatchCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1MatchConditionPropInit(JsonSerializerOptions options);
    private void V1MatchConditionSerializeHandler(Utf8JsonWriter writer, V1MatchCondition value);
    public JsonTypeInfo`1<V1MatchResources> get_V1MatchResources();
    private JsonTypeInfo`1<V1MatchResources> Create_V1MatchResources(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1MatchResourcesPropInit(JsonSerializerOptions options);
    private void V1MatchResourcesSerializeHandler(Utf8JsonWriter writer, V1MatchResources value);
    public JsonTypeInfo`1<V1ModifyVolumeStatus> get_V1ModifyVolumeStatus();
    private JsonTypeInfo`1<V1ModifyVolumeStatus> Create_V1ModifyVolumeStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ModifyVolumeStatusPropInit(JsonSerializerOptions options);
    private void V1ModifyVolumeStatusSerializeHandler(Utf8JsonWriter writer, V1ModifyVolumeStatus value);
    public JsonTypeInfo`1<V1MutatingWebhook> get_V1MutatingWebhook();
    private JsonTypeInfo`1<V1MutatingWebhook> Create_V1MutatingWebhook(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1MutatingWebhookPropInit(JsonSerializerOptions options);
    private void V1MutatingWebhookSerializeHandler(Utf8JsonWriter writer, V1MutatingWebhook value);
    public JsonTypeInfo`1<V1MutatingWebhookConfiguration> get_V1MutatingWebhookConfiguration();
    private JsonTypeInfo`1<V1MutatingWebhookConfiguration> Create_V1MutatingWebhookConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1MutatingWebhookConfigurationPropInit(JsonSerializerOptions options);
    private void V1MutatingWebhookConfigurationSerializeHandler(Utf8JsonWriter writer, V1MutatingWebhookConfiguration value);
    public JsonTypeInfo`1<V1MutatingWebhookConfigurationList> get_V1MutatingWebhookConfigurationList();
    private JsonTypeInfo`1<V1MutatingWebhookConfigurationList> Create_V1MutatingWebhookConfigurationList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1MutatingWebhookConfigurationListPropInit(JsonSerializerOptions options);
    private void V1MutatingWebhookConfigurationListSerializeHandler(Utf8JsonWriter writer, V1MutatingWebhookConfigurationList value);
    public JsonTypeInfo`1<V1NamedRuleWithOperations> get_V1NamedRuleWithOperations();
    private JsonTypeInfo`1<V1NamedRuleWithOperations> Create_V1NamedRuleWithOperations(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NamedRuleWithOperationsPropInit(JsonSerializerOptions options);
    private void V1NamedRuleWithOperationsSerializeHandler(Utf8JsonWriter writer, V1NamedRuleWithOperations value);
    public JsonTypeInfo`1<V1Namespace> get_V1Namespace();
    private JsonTypeInfo`1<V1Namespace> Create_V1Namespace(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NamespacePropInit(JsonSerializerOptions options);
    private void V1NamespaceSerializeHandler(Utf8JsonWriter writer, V1Namespace value);
    public JsonTypeInfo`1<V1NamespaceCondition> get_V1NamespaceCondition();
    private JsonTypeInfo`1<V1NamespaceCondition> Create_V1NamespaceCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NamespaceConditionPropInit(JsonSerializerOptions options);
    private void V1NamespaceConditionSerializeHandler(Utf8JsonWriter writer, V1NamespaceCondition value);
    public JsonTypeInfo`1<V1NamespaceList> get_V1NamespaceList();
    private JsonTypeInfo`1<V1NamespaceList> Create_V1NamespaceList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NamespaceListPropInit(JsonSerializerOptions options);
    private void V1NamespaceListSerializeHandler(Utf8JsonWriter writer, V1NamespaceList value);
    public JsonTypeInfo`1<V1NamespaceSpec> get_V1NamespaceSpec();
    private JsonTypeInfo`1<V1NamespaceSpec> Create_V1NamespaceSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NamespaceSpecPropInit(JsonSerializerOptions options);
    private void V1NamespaceSpecSerializeHandler(Utf8JsonWriter writer, V1NamespaceSpec value);
    public JsonTypeInfo`1<V1NamespaceStatus> get_V1NamespaceStatus();
    private JsonTypeInfo`1<V1NamespaceStatus> Create_V1NamespaceStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NamespaceStatusPropInit(JsonSerializerOptions options);
    private void V1NamespaceStatusSerializeHandler(Utf8JsonWriter writer, V1NamespaceStatus value);
    public JsonTypeInfo`1<V1NetworkPolicy> get_V1NetworkPolicy();
    private JsonTypeInfo`1<V1NetworkPolicy> Create_V1NetworkPolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NetworkPolicyPropInit(JsonSerializerOptions options);
    private void V1NetworkPolicySerializeHandler(Utf8JsonWriter writer, V1NetworkPolicy value);
    public JsonTypeInfo`1<V1NetworkPolicyEgressRule> get_V1NetworkPolicyEgressRule();
    private JsonTypeInfo`1<V1NetworkPolicyEgressRule> Create_V1NetworkPolicyEgressRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NetworkPolicyEgressRulePropInit(JsonSerializerOptions options);
    private void V1NetworkPolicyEgressRuleSerializeHandler(Utf8JsonWriter writer, V1NetworkPolicyEgressRule value);
    public JsonTypeInfo`1<V1NetworkPolicyIngressRule> get_V1NetworkPolicyIngressRule();
    private JsonTypeInfo`1<V1NetworkPolicyIngressRule> Create_V1NetworkPolicyIngressRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NetworkPolicyIngressRulePropInit(JsonSerializerOptions options);
    private void V1NetworkPolicyIngressRuleSerializeHandler(Utf8JsonWriter writer, V1NetworkPolicyIngressRule value);
    public JsonTypeInfo`1<V1NetworkPolicyList> get_V1NetworkPolicyList();
    private JsonTypeInfo`1<V1NetworkPolicyList> Create_V1NetworkPolicyList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NetworkPolicyListPropInit(JsonSerializerOptions options);
    private void V1NetworkPolicyListSerializeHandler(Utf8JsonWriter writer, V1NetworkPolicyList value);
    public JsonTypeInfo`1<V1NetworkPolicyPeer> get_V1NetworkPolicyPeer();
    private JsonTypeInfo`1<V1NetworkPolicyPeer> Create_V1NetworkPolicyPeer(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NetworkPolicyPeerPropInit(JsonSerializerOptions options);
    private void V1NetworkPolicyPeerSerializeHandler(Utf8JsonWriter writer, V1NetworkPolicyPeer value);
    public JsonTypeInfo`1<V1NetworkPolicyPort> get_V1NetworkPolicyPort();
    private JsonTypeInfo`1<V1NetworkPolicyPort> Create_V1NetworkPolicyPort(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NetworkPolicyPortPropInit(JsonSerializerOptions options);
    private void V1NetworkPolicyPortSerializeHandler(Utf8JsonWriter writer, V1NetworkPolicyPort value);
    public JsonTypeInfo`1<V1NetworkPolicySpec> get_V1NetworkPolicySpec();
    private JsonTypeInfo`1<V1NetworkPolicySpec> Create_V1NetworkPolicySpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NetworkPolicySpecPropInit(JsonSerializerOptions options);
    private void V1NetworkPolicySpecSerializeHandler(Utf8JsonWriter writer, V1NetworkPolicySpec value);
    public JsonTypeInfo`1<V1NFSVolumeSource> get_V1NFSVolumeSource();
    private JsonTypeInfo`1<V1NFSVolumeSource> Create_V1NFSVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NFSVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1NFSVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1NFSVolumeSource value);
    public JsonTypeInfo`1<V1Node> get_V1Node();
    private JsonTypeInfo`1<V1Node> Create_V1Node(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodePropInit(JsonSerializerOptions options);
    private void V1NodeSerializeHandler(Utf8JsonWriter writer, V1Node value);
    public JsonTypeInfo`1<V1NodeAddress> get_V1NodeAddress();
    private JsonTypeInfo`1<V1NodeAddress> Create_V1NodeAddress(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeAddressPropInit(JsonSerializerOptions options);
    private void V1NodeAddressSerializeHandler(Utf8JsonWriter writer, V1NodeAddress value);
    public JsonTypeInfo`1<V1NodeAffinity> get_V1NodeAffinity();
    private JsonTypeInfo`1<V1NodeAffinity> Create_V1NodeAffinity(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeAffinityPropInit(JsonSerializerOptions options);
    private void V1NodeAffinitySerializeHandler(Utf8JsonWriter writer, V1NodeAffinity value);
    public JsonTypeInfo`1<V1NodeCondition> get_V1NodeCondition();
    private JsonTypeInfo`1<V1NodeCondition> Create_V1NodeCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeConditionPropInit(JsonSerializerOptions options);
    private void V1NodeConditionSerializeHandler(Utf8JsonWriter writer, V1NodeCondition value);
    public JsonTypeInfo`1<V1NodeConfigSource> get_V1NodeConfigSource();
    private JsonTypeInfo`1<V1NodeConfigSource> Create_V1NodeConfigSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeConfigSourcePropInit(JsonSerializerOptions options);
    private void V1NodeConfigSourceSerializeHandler(Utf8JsonWriter writer, V1NodeConfigSource value);
    public JsonTypeInfo`1<V1NodeConfigStatus> get_V1NodeConfigStatus();
    private JsonTypeInfo`1<V1NodeConfigStatus> Create_V1NodeConfigStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeConfigStatusPropInit(JsonSerializerOptions options);
    private void V1NodeConfigStatusSerializeHandler(Utf8JsonWriter writer, V1NodeConfigStatus value);
    public JsonTypeInfo`1<V1NodeDaemonEndpoints> get_V1NodeDaemonEndpoints();
    private JsonTypeInfo`1<V1NodeDaemonEndpoints> Create_V1NodeDaemonEndpoints(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeDaemonEndpointsPropInit(JsonSerializerOptions options);
    private void V1NodeDaemonEndpointsSerializeHandler(Utf8JsonWriter writer, V1NodeDaemonEndpoints value);
    public JsonTypeInfo`1<V1NodeFeatures> get_V1NodeFeatures();
    private JsonTypeInfo`1<V1NodeFeatures> Create_V1NodeFeatures(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeFeaturesPropInit(JsonSerializerOptions options);
    private void V1NodeFeaturesSerializeHandler(Utf8JsonWriter writer, V1NodeFeatures value);
    public JsonTypeInfo`1<V1NodeList> get_V1NodeList();
    private JsonTypeInfo`1<V1NodeList> Create_V1NodeList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeListPropInit(JsonSerializerOptions options);
    private void V1NodeListSerializeHandler(Utf8JsonWriter writer, V1NodeList value);
    public JsonTypeInfo`1<V1NodeRuntimeHandler> get_V1NodeRuntimeHandler();
    private JsonTypeInfo`1<V1NodeRuntimeHandler> Create_V1NodeRuntimeHandler(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeRuntimeHandlerPropInit(JsonSerializerOptions options);
    private void V1NodeRuntimeHandlerSerializeHandler(Utf8JsonWriter writer, V1NodeRuntimeHandler value);
    public JsonTypeInfo`1<V1NodeRuntimeHandlerFeatures> get_V1NodeRuntimeHandlerFeatures();
    private JsonTypeInfo`1<V1NodeRuntimeHandlerFeatures> Create_V1NodeRuntimeHandlerFeatures(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeRuntimeHandlerFeaturesPropInit(JsonSerializerOptions options);
    private void V1NodeRuntimeHandlerFeaturesSerializeHandler(Utf8JsonWriter writer, V1NodeRuntimeHandlerFeatures value);
    public JsonTypeInfo`1<V1NodeSelector> get_V1NodeSelector();
    private JsonTypeInfo`1<V1NodeSelector> Create_V1NodeSelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeSelectorPropInit(JsonSerializerOptions options);
    private void V1NodeSelectorSerializeHandler(Utf8JsonWriter writer, V1NodeSelector value);
    public JsonTypeInfo`1<V1NodeSelectorRequirement> get_V1NodeSelectorRequirement();
    private JsonTypeInfo`1<V1NodeSelectorRequirement> Create_V1NodeSelectorRequirement(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeSelectorRequirementPropInit(JsonSerializerOptions options);
    private void V1NodeSelectorRequirementSerializeHandler(Utf8JsonWriter writer, V1NodeSelectorRequirement value);
    public JsonTypeInfo`1<V1NodeSelectorTerm> get_V1NodeSelectorTerm();
    private JsonTypeInfo`1<V1NodeSelectorTerm> Create_V1NodeSelectorTerm(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeSelectorTermPropInit(JsonSerializerOptions options);
    private void V1NodeSelectorTermSerializeHandler(Utf8JsonWriter writer, V1NodeSelectorTerm value);
    public JsonTypeInfo`1<V1NodeSpec> get_V1NodeSpec();
    private JsonTypeInfo`1<V1NodeSpec> Create_V1NodeSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeSpecPropInit(JsonSerializerOptions options);
    private void V1NodeSpecSerializeHandler(Utf8JsonWriter writer, V1NodeSpec value);
    public JsonTypeInfo`1<V1NodeStatus> get_V1NodeStatus();
    private JsonTypeInfo`1<V1NodeStatus> Create_V1NodeStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeStatusPropInit(JsonSerializerOptions options);
    private void V1NodeStatusSerializeHandler(Utf8JsonWriter writer, V1NodeStatus value);
    public JsonTypeInfo`1<V1NodeSystemInfo> get_V1NodeSystemInfo();
    private JsonTypeInfo`1<V1NodeSystemInfo> Create_V1NodeSystemInfo(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NodeSystemInfoPropInit(JsonSerializerOptions options);
    private void V1NodeSystemInfoSerializeHandler(Utf8JsonWriter writer, V1NodeSystemInfo value);
    public JsonTypeInfo`1<V1NonResourceAttributes> get_V1NonResourceAttributes();
    private JsonTypeInfo`1<V1NonResourceAttributes> Create_V1NonResourceAttributes(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NonResourceAttributesPropInit(JsonSerializerOptions options);
    private void V1NonResourceAttributesSerializeHandler(Utf8JsonWriter writer, V1NonResourceAttributes value);
    public JsonTypeInfo`1<V1NonResourcePolicyRule> get_V1NonResourcePolicyRule();
    private JsonTypeInfo`1<V1NonResourcePolicyRule> Create_V1NonResourcePolicyRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NonResourcePolicyRulePropInit(JsonSerializerOptions options);
    private void V1NonResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, V1NonResourcePolicyRule value);
    public JsonTypeInfo`1<V1NonResourceRule> get_V1NonResourceRule();
    private JsonTypeInfo`1<V1NonResourceRule> Create_V1NonResourceRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1NonResourceRulePropInit(JsonSerializerOptions options);
    private void V1NonResourceRuleSerializeHandler(Utf8JsonWriter writer, V1NonResourceRule value);
    public JsonTypeInfo`1<V1ObjectFieldSelector> get_V1ObjectFieldSelector();
    private JsonTypeInfo`1<V1ObjectFieldSelector> Create_V1ObjectFieldSelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ObjectFieldSelectorPropInit(JsonSerializerOptions options);
    private void V1ObjectFieldSelectorSerializeHandler(Utf8JsonWriter writer, V1ObjectFieldSelector value);
    public JsonTypeInfo`1<V1ObjectMeta> get_V1ObjectMeta();
    private JsonTypeInfo`1<V1ObjectMeta> Create_V1ObjectMeta(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ObjectMetaPropInit(JsonSerializerOptions options);
    private void V1ObjectMetaSerializeHandler(Utf8JsonWriter writer, V1ObjectMeta value);
    public JsonTypeInfo`1<V1ObjectReference> get_V1ObjectReference();
    private JsonTypeInfo`1<V1ObjectReference> Create_V1ObjectReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ObjectReferencePropInit(JsonSerializerOptions options);
    private void V1ObjectReferenceSerializeHandler(Utf8JsonWriter writer, V1ObjectReference value);
    public JsonTypeInfo`1<V1Overhead> get_V1Overhead();
    private JsonTypeInfo`1<V1Overhead> Create_V1Overhead(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1OverheadPropInit(JsonSerializerOptions options);
    private void V1OverheadSerializeHandler(Utf8JsonWriter writer, V1Overhead value);
    public JsonTypeInfo`1<V1OwnerReference> get_V1OwnerReference();
    private JsonTypeInfo`1<V1OwnerReference> Create_V1OwnerReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1OwnerReferencePropInit(JsonSerializerOptions options);
    private void V1OwnerReferenceSerializeHandler(Utf8JsonWriter writer, V1OwnerReference value);
    public JsonTypeInfo`1<V1ParamKind> get_V1ParamKind();
    private JsonTypeInfo`1<V1ParamKind> Create_V1ParamKind(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ParamKindPropInit(JsonSerializerOptions options);
    private void V1ParamKindSerializeHandler(Utf8JsonWriter writer, V1ParamKind value);
    public JsonTypeInfo`1<V1ParamRef> get_V1ParamRef();
    private JsonTypeInfo`1<V1ParamRef> Create_V1ParamRef(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ParamRefPropInit(JsonSerializerOptions options);
    private void V1ParamRefSerializeHandler(Utf8JsonWriter writer, V1ParamRef value);
    public JsonTypeInfo`1<V1PersistentVolume> get_V1PersistentVolume();
    private JsonTypeInfo`1<V1PersistentVolume> Create_V1PersistentVolume(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumePropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeSerializeHandler(Utf8JsonWriter writer, V1PersistentVolume value);
    public JsonTypeInfo`1<V1PersistentVolumeClaim> get_V1PersistentVolumeClaim();
    private JsonTypeInfo`1<V1PersistentVolumeClaim> Create_V1PersistentVolumeClaim(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeClaimPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeClaimSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeClaim value);
    public JsonTypeInfo`1<V1PersistentVolumeClaimCondition> get_V1PersistentVolumeClaimCondition();
    private JsonTypeInfo`1<V1PersistentVolumeClaimCondition> Create_V1PersistentVolumeClaimCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeClaimConditionPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeClaimConditionSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeClaimCondition value);
    public JsonTypeInfo`1<V1PersistentVolumeClaimList> get_V1PersistentVolumeClaimList();
    private JsonTypeInfo`1<V1PersistentVolumeClaimList> Create_V1PersistentVolumeClaimList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeClaimListPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeClaimListSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeClaimList value);
    public JsonTypeInfo`1<V1PersistentVolumeClaimSpec> get_V1PersistentVolumeClaimSpec();
    private JsonTypeInfo`1<V1PersistentVolumeClaimSpec> Create_V1PersistentVolumeClaimSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeClaimSpecPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeClaimSpecSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeClaimSpec value);
    public JsonTypeInfo`1<V1PersistentVolumeClaimStatus> get_V1PersistentVolumeClaimStatus();
    private JsonTypeInfo`1<V1PersistentVolumeClaimStatus> Create_V1PersistentVolumeClaimStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeClaimStatusPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeClaimStatusSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeClaimStatus value);
    public JsonTypeInfo`1<V1PersistentVolumeClaimTemplate> get_V1PersistentVolumeClaimTemplate();
    private JsonTypeInfo`1<V1PersistentVolumeClaimTemplate> Create_V1PersistentVolumeClaimTemplate(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeClaimTemplatePropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeClaimTemplateSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeClaimTemplate value);
    public JsonTypeInfo`1<V1PersistentVolumeClaimVolumeSource> get_V1PersistentVolumeClaimVolumeSource();
    private JsonTypeInfo`1<V1PersistentVolumeClaimVolumeSource> Create_V1PersistentVolumeClaimVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeClaimVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeClaimVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeClaimVolumeSource value);
    public JsonTypeInfo`1<V1PersistentVolumeList> get_V1PersistentVolumeList();
    private JsonTypeInfo`1<V1PersistentVolumeList> Create_V1PersistentVolumeList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeListPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeListSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeList value);
    public JsonTypeInfo`1<V1PersistentVolumeSpec> get_V1PersistentVolumeSpec();
    private JsonTypeInfo`1<V1PersistentVolumeSpec> Create_V1PersistentVolumeSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeSpecPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeSpecSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeSpec value);
    public JsonTypeInfo`1<V1PersistentVolumeStatus> get_V1PersistentVolumeStatus();
    private JsonTypeInfo`1<V1PersistentVolumeStatus> Create_V1PersistentVolumeStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PersistentVolumeStatusPropInit(JsonSerializerOptions options);
    private void V1PersistentVolumeStatusSerializeHandler(Utf8JsonWriter writer, V1PersistentVolumeStatus value);
    public JsonTypeInfo`1<V1PhotonPersistentDiskVolumeSource> get_V1PhotonPersistentDiskVolumeSource();
    private JsonTypeInfo`1<V1PhotonPersistentDiskVolumeSource> Create_V1PhotonPersistentDiskVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PhotonPersistentDiskVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1PhotonPersistentDiskVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1PhotonPersistentDiskVolumeSource value);
    public JsonTypeInfo`1<V1Pod> get_V1Pod();
    private JsonTypeInfo`1<V1Pod> Create_V1Pod(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodPropInit(JsonSerializerOptions options);
    private void V1PodSerializeHandler(Utf8JsonWriter writer, V1Pod value);
    public JsonTypeInfo`1<V1PodAffinity> get_V1PodAffinity();
    private JsonTypeInfo`1<V1PodAffinity> Create_V1PodAffinity(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodAffinityPropInit(JsonSerializerOptions options);
    private void V1PodAffinitySerializeHandler(Utf8JsonWriter writer, V1PodAffinity value);
    public JsonTypeInfo`1<V1PodAffinityTerm> get_V1PodAffinityTerm();
    private JsonTypeInfo`1<V1PodAffinityTerm> Create_V1PodAffinityTerm(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodAffinityTermPropInit(JsonSerializerOptions options);
    private void V1PodAffinityTermSerializeHandler(Utf8JsonWriter writer, V1PodAffinityTerm value);
    public JsonTypeInfo`1<V1PodAntiAffinity> get_V1PodAntiAffinity();
    private JsonTypeInfo`1<V1PodAntiAffinity> Create_V1PodAntiAffinity(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodAntiAffinityPropInit(JsonSerializerOptions options);
    private void V1PodAntiAffinitySerializeHandler(Utf8JsonWriter writer, V1PodAntiAffinity value);
    public JsonTypeInfo`1<V1PodCondition> get_V1PodCondition();
    private JsonTypeInfo`1<V1PodCondition> Create_V1PodCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodConditionPropInit(JsonSerializerOptions options);
    private void V1PodConditionSerializeHandler(Utf8JsonWriter writer, V1PodCondition value);
    public JsonTypeInfo`1<V1PodDisruptionBudget> get_V1PodDisruptionBudget();
    private JsonTypeInfo`1<V1PodDisruptionBudget> Create_V1PodDisruptionBudget(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodDisruptionBudgetPropInit(JsonSerializerOptions options);
    private void V1PodDisruptionBudgetSerializeHandler(Utf8JsonWriter writer, V1PodDisruptionBudget value);
    public JsonTypeInfo`1<V1PodDisruptionBudgetList> get_V1PodDisruptionBudgetList();
    private JsonTypeInfo`1<V1PodDisruptionBudgetList> Create_V1PodDisruptionBudgetList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodDisruptionBudgetListPropInit(JsonSerializerOptions options);
    private void V1PodDisruptionBudgetListSerializeHandler(Utf8JsonWriter writer, V1PodDisruptionBudgetList value);
    public JsonTypeInfo`1<V1PodDisruptionBudgetSpec> get_V1PodDisruptionBudgetSpec();
    private JsonTypeInfo`1<V1PodDisruptionBudgetSpec> Create_V1PodDisruptionBudgetSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodDisruptionBudgetSpecPropInit(JsonSerializerOptions options);
    private void V1PodDisruptionBudgetSpecSerializeHandler(Utf8JsonWriter writer, V1PodDisruptionBudgetSpec value);
    public JsonTypeInfo`1<V1PodDisruptionBudgetStatus> get_V1PodDisruptionBudgetStatus();
    private JsonTypeInfo`1<V1PodDisruptionBudgetStatus> Create_V1PodDisruptionBudgetStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodDisruptionBudgetStatusPropInit(JsonSerializerOptions options);
    private void V1PodDisruptionBudgetStatusSerializeHandler(Utf8JsonWriter writer, V1PodDisruptionBudgetStatus value);
    public JsonTypeInfo`1<V1PodDNSConfig> get_V1PodDNSConfig();
    private JsonTypeInfo`1<V1PodDNSConfig> Create_V1PodDNSConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodDNSConfigPropInit(JsonSerializerOptions options);
    private void V1PodDNSConfigSerializeHandler(Utf8JsonWriter writer, V1PodDNSConfig value);
    public JsonTypeInfo`1<V1PodDNSConfigOption> get_V1PodDNSConfigOption();
    private JsonTypeInfo`1<V1PodDNSConfigOption> Create_V1PodDNSConfigOption(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodDNSConfigOptionPropInit(JsonSerializerOptions options);
    private void V1PodDNSConfigOptionSerializeHandler(Utf8JsonWriter writer, V1PodDNSConfigOption value);
    public JsonTypeInfo`1<V1PodFailurePolicy> get_V1PodFailurePolicy();
    private JsonTypeInfo`1<V1PodFailurePolicy> Create_V1PodFailurePolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodFailurePolicyPropInit(JsonSerializerOptions options);
    private void V1PodFailurePolicySerializeHandler(Utf8JsonWriter writer, V1PodFailurePolicy value);
    public JsonTypeInfo`1<V1PodFailurePolicyOnExitCodesRequirement> get_V1PodFailurePolicyOnExitCodesRequirement();
    private JsonTypeInfo`1<V1PodFailurePolicyOnExitCodesRequirement> Create_V1PodFailurePolicyOnExitCodesRequirement(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodFailurePolicyOnExitCodesRequirementPropInit(JsonSerializerOptions options);
    private void V1PodFailurePolicyOnExitCodesRequirementSerializeHandler(Utf8JsonWriter writer, V1PodFailurePolicyOnExitCodesRequirement value);
    public JsonTypeInfo`1<V1PodFailurePolicyOnPodConditionsPattern> get_V1PodFailurePolicyOnPodConditionsPattern();
    private JsonTypeInfo`1<V1PodFailurePolicyOnPodConditionsPattern> Create_V1PodFailurePolicyOnPodConditionsPattern(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodFailurePolicyOnPodConditionsPatternPropInit(JsonSerializerOptions options);
    private void V1PodFailurePolicyOnPodConditionsPatternSerializeHandler(Utf8JsonWriter writer, V1PodFailurePolicyOnPodConditionsPattern value);
    public JsonTypeInfo`1<V1PodFailurePolicyRule> get_V1PodFailurePolicyRule();
    private JsonTypeInfo`1<V1PodFailurePolicyRule> Create_V1PodFailurePolicyRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodFailurePolicyRulePropInit(JsonSerializerOptions options);
    private void V1PodFailurePolicyRuleSerializeHandler(Utf8JsonWriter writer, V1PodFailurePolicyRule value);
    public JsonTypeInfo`1<V1PodIP> get_V1PodIP();
    private JsonTypeInfo`1<V1PodIP> Create_V1PodIP(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodIPPropInit(JsonSerializerOptions options);
    private void V1PodIPSerializeHandler(Utf8JsonWriter writer, V1PodIP value);
    public JsonTypeInfo`1<V1PodList> get_V1PodList();
    private JsonTypeInfo`1<V1PodList> Create_V1PodList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodListPropInit(JsonSerializerOptions options);
    private void V1PodListSerializeHandler(Utf8JsonWriter writer, V1PodList value);
    public JsonTypeInfo`1<V1PodOS> get_V1PodOS();
    private JsonTypeInfo`1<V1PodOS> Create_V1PodOS(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodOSPropInit(JsonSerializerOptions options);
    private void V1PodOSSerializeHandler(Utf8JsonWriter writer, V1PodOS value);
    public JsonTypeInfo`1<V1PodReadinessGate> get_V1PodReadinessGate();
    private JsonTypeInfo`1<V1PodReadinessGate> Create_V1PodReadinessGate(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodReadinessGatePropInit(JsonSerializerOptions options);
    private void V1PodReadinessGateSerializeHandler(Utf8JsonWriter writer, V1PodReadinessGate value);
    public JsonTypeInfo`1<V1PodResourceClaim> get_V1PodResourceClaim();
    private JsonTypeInfo`1<V1PodResourceClaim> Create_V1PodResourceClaim(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodResourceClaimPropInit(JsonSerializerOptions options);
    private void V1PodResourceClaimSerializeHandler(Utf8JsonWriter writer, V1PodResourceClaim value);
    public JsonTypeInfo`1<V1PodResourceClaimStatus> get_V1PodResourceClaimStatus();
    private JsonTypeInfo`1<V1PodResourceClaimStatus> Create_V1PodResourceClaimStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodResourceClaimStatusPropInit(JsonSerializerOptions options);
    private void V1PodResourceClaimStatusSerializeHandler(Utf8JsonWriter writer, V1PodResourceClaimStatus value);
    public JsonTypeInfo`1<V1PodSchedulingGate> get_V1PodSchedulingGate();
    private JsonTypeInfo`1<V1PodSchedulingGate> Create_V1PodSchedulingGate(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodSchedulingGatePropInit(JsonSerializerOptions options);
    private void V1PodSchedulingGateSerializeHandler(Utf8JsonWriter writer, V1PodSchedulingGate value);
    public JsonTypeInfo`1<V1PodSecurityContext> get_V1PodSecurityContext();
    private JsonTypeInfo`1<V1PodSecurityContext> Create_V1PodSecurityContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodSecurityContextPropInit(JsonSerializerOptions options);
    private void V1PodSecurityContextSerializeHandler(Utf8JsonWriter writer, V1PodSecurityContext value);
    public JsonTypeInfo`1<V1PodSpec> get_V1PodSpec();
    private JsonTypeInfo`1<V1PodSpec> Create_V1PodSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodSpecPropInit(JsonSerializerOptions options);
    private void V1PodSpecSerializeHandler(Utf8JsonWriter writer, V1PodSpec value);
    public JsonTypeInfo`1<V1PodStatus> get_V1PodStatus();
    private JsonTypeInfo`1<V1PodStatus> Create_V1PodStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodStatusPropInit(JsonSerializerOptions options);
    private void V1PodStatusSerializeHandler(Utf8JsonWriter writer, V1PodStatus value);
    public JsonTypeInfo`1<V1PodTemplate> get_V1PodTemplate();
    private JsonTypeInfo`1<V1PodTemplate> Create_V1PodTemplate(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodTemplatePropInit(JsonSerializerOptions options);
    private void V1PodTemplateSerializeHandler(Utf8JsonWriter writer, V1PodTemplate value);
    public JsonTypeInfo`1<V1PodTemplateList> get_V1PodTemplateList();
    private JsonTypeInfo`1<V1PodTemplateList> Create_V1PodTemplateList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodTemplateListPropInit(JsonSerializerOptions options);
    private void V1PodTemplateListSerializeHandler(Utf8JsonWriter writer, V1PodTemplateList value);
    public JsonTypeInfo`1<V1PodTemplateSpec> get_V1PodTemplateSpec();
    private JsonTypeInfo`1<V1PodTemplateSpec> Create_V1PodTemplateSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PodTemplateSpecPropInit(JsonSerializerOptions options);
    private void V1PodTemplateSpecSerializeHandler(Utf8JsonWriter writer, V1PodTemplateSpec value);
    public JsonTypeInfo`1<V1PolicyRule> get_V1PolicyRule();
    private JsonTypeInfo`1<V1PolicyRule> Create_V1PolicyRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PolicyRulePropInit(JsonSerializerOptions options);
    private void V1PolicyRuleSerializeHandler(Utf8JsonWriter writer, V1PolicyRule value);
    public JsonTypeInfo`1<V1PolicyRulesWithSubjects> get_V1PolicyRulesWithSubjects();
    private JsonTypeInfo`1<V1PolicyRulesWithSubjects> Create_V1PolicyRulesWithSubjects(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PolicyRulesWithSubjectsPropInit(JsonSerializerOptions options);
    private void V1PolicyRulesWithSubjectsSerializeHandler(Utf8JsonWriter writer, V1PolicyRulesWithSubjects value);
    public JsonTypeInfo`1<V1PortStatus> get_V1PortStatus();
    private JsonTypeInfo`1<V1PortStatus> Create_V1PortStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PortStatusPropInit(JsonSerializerOptions options);
    private void V1PortStatusSerializeHandler(Utf8JsonWriter writer, V1PortStatus value);
    public JsonTypeInfo`1<V1PortworxVolumeSource> get_V1PortworxVolumeSource();
    private JsonTypeInfo`1<V1PortworxVolumeSource> Create_V1PortworxVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PortworxVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1PortworxVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1PortworxVolumeSource value);
    public JsonTypeInfo`1<V1Preconditions> get_V1Preconditions();
    private JsonTypeInfo`1<V1Preconditions> Create_V1Preconditions(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PreconditionsPropInit(JsonSerializerOptions options);
    private void V1PreconditionsSerializeHandler(Utf8JsonWriter writer, V1Preconditions value);
    public JsonTypeInfo`1<V1PreferredSchedulingTerm> get_V1PreferredSchedulingTerm();
    private JsonTypeInfo`1<V1PreferredSchedulingTerm> Create_V1PreferredSchedulingTerm(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PreferredSchedulingTermPropInit(JsonSerializerOptions options);
    private void V1PreferredSchedulingTermSerializeHandler(Utf8JsonWriter writer, V1PreferredSchedulingTerm value);
    public JsonTypeInfo`1<V1PriorityClass> get_V1PriorityClass();
    private JsonTypeInfo`1<V1PriorityClass> Create_V1PriorityClass(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityClassPropInit(JsonSerializerOptions options);
    private void V1PriorityClassSerializeHandler(Utf8JsonWriter writer, V1PriorityClass value);
    public JsonTypeInfo`1<V1PriorityClassList> get_V1PriorityClassList();
    private JsonTypeInfo`1<V1PriorityClassList> Create_V1PriorityClassList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityClassListPropInit(JsonSerializerOptions options);
    private void V1PriorityClassListSerializeHandler(Utf8JsonWriter writer, V1PriorityClassList value);
    public JsonTypeInfo`1<V1PriorityLevelConfiguration> get_V1PriorityLevelConfiguration();
    private JsonTypeInfo`1<V1PriorityLevelConfiguration> Create_V1PriorityLevelConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityLevelConfigurationPropInit(JsonSerializerOptions options);
    private void V1PriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, V1PriorityLevelConfiguration value);
    public JsonTypeInfo`1<V1PriorityLevelConfigurationCondition> get_V1PriorityLevelConfigurationCondition();
    private JsonTypeInfo`1<V1PriorityLevelConfigurationCondition> Create_V1PriorityLevelConfigurationCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityLevelConfigurationConditionPropInit(JsonSerializerOptions options);
    private void V1PriorityLevelConfigurationConditionSerializeHandler(Utf8JsonWriter writer, V1PriorityLevelConfigurationCondition value);
    public JsonTypeInfo`1<V1PriorityLevelConfigurationList> get_V1PriorityLevelConfigurationList();
    private JsonTypeInfo`1<V1PriorityLevelConfigurationList> Create_V1PriorityLevelConfigurationList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityLevelConfigurationListPropInit(JsonSerializerOptions options);
    private void V1PriorityLevelConfigurationListSerializeHandler(Utf8JsonWriter writer, V1PriorityLevelConfigurationList value);
    public JsonTypeInfo`1<V1PriorityLevelConfigurationReference> get_V1PriorityLevelConfigurationReference();
    private JsonTypeInfo`1<V1PriorityLevelConfigurationReference> Create_V1PriorityLevelConfigurationReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityLevelConfigurationReferencePropInit(JsonSerializerOptions options);
    private void V1PriorityLevelConfigurationReferenceSerializeHandler(Utf8JsonWriter writer, V1PriorityLevelConfigurationReference value);
    public JsonTypeInfo`1<V1PriorityLevelConfigurationSpec> get_V1PriorityLevelConfigurationSpec();
    private JsonTypeInfo`1<V1PriorityLevelConfigurationSpec> Create_V1PriorityLevelConfigurationSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityLevelConfigurationSpecPropInit(JsonSerializerOptions options);
    private void V1PriorityLevelConfigurationSpecSerializeHandler(Utf8JsonWriter writer, V1PriorityLevelConfigurationSpec value);
    public JsonTypeInfo`1<V1PriorityLevelConfigurationStatus> get_V1PriorityLevelConfigurationStatus();
    private JsonTypeInfo`1<V1PriorityLevelConfigurationStatus> Create_V1PriorityLevelConfigurationStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1PriorityLevelConfigurationStatusPropInit(JsonSerializerOptions options);
    private void V1PriorityLevelConfigurationStatusSerializeHandler(Utf8JsonWriter writer, V1PriorityLevelConfigurationStatus value);
    public JsonTypeInfo`1<V1Probe> get_V1Probe();
    private JsonTypeInfo`1<V1Probe> Create_V1Probe(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ProbePropInit(JsonSerializerOptions options);
    private void V1ProbeSerializeHandler(Utf8JsonWriter writer, V1Probe value);
    public JsonTypeInfo`1<V1ProjectedVolumeSource> get_V1ProjectedVolumeSource();
    private JsonTypeInfo`1<V1ProjectedVolumeSource> Create_V1ProjectedVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ProjectedVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1ProjectedVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1ProjectedVolumeSource value);
    public JsonTypeInfo`1<V1QueuingConfiguration> get_V1QueuingConfiguration();
    private JsonTypeInfo`1<V1QueuingConfiguration> Create_V1QueuingConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1QueuingConfigurationPropInit(JsonSerializerOptions options);
    private void V1QueuingConfigurationSerializeHandler(Utf8JsonWriter writer, V1QueuingConfiguration value);
    public JsonTypeInfo`1<V1QuobyteVolumeSource> get_V1QuobyteVolumeSource();
    private JsonTypeInfo`1<V1QuobyteVolumeSource> Create_V1QuobyteVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1QuobyteVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1QuobyteVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1QuobyteVolumeSource value);
    public JsonTypeInfo`1<V1RBDPersistentVolumeSource> get_V1RBDPersistentVolumeSource();
    private JsonTypeInfo`1<V1RBDPersistentVolumeSource> Create_V1RBDPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RBDPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1RBDPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1RBDPersistentVolumeSource value);
    public JsonTypeInfo`1<V1RBDVolumeSource> get_V1RBDVolumeSource();
    private JsonTypeInfo`1<V1RBDVolumeSource> Create_V1RBDVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RBDVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1RBDVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1RBDVolumeSource value);
    public JsonTypeInfo`1<V1ReplicaSet> get_V1ReplicaSet();
    private JsonTypeInfo`1<V1ReplicaSet> Create_V1ReplicaSet(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicaSetPropInit(JsonSerializerOptions options);
    private void V1ReplicaSetSerializeHandler(Utf8JsonWriter writer, V1ReplicaSet value);
    public JsonTypeInfo`1<V1ReplicaSetCondition> get_V1ReplicaSetCondition();
    private JsonTypeInfo`1<V1ReplicaSetCondition> Create_V1ReplicaSetCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicaSetConditionPropInit(JsonSerializerOptions options);
    private void V1ReplicaSetConditionSerializeHandler(Utf8JsonWriter writer, V1ReplicaSetCondition value);
    public JsonTypeInfo`1<V1ReplicaSetList> get_V1ReplicaSetList();
    private JsonTypeInfo`1<V1ReplicaSetList> Create_V1ReplicaSetList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicaSetListPropInit(JsonSerializerOptions options);
    private void V1ReplicaSetListSerializeHandler(Utf8JsonWriter writer, V1ReplicaSetList value);
    public JsonTypeInfo`1<V1ReplicaSetSpec> get_V1ReplicaSetSpec();
    private JsonTypeInfo`1<V1ReplicaSetSpec> Create_V1ReplicaSetSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicaSetSpecPropInit(JsonSerializerOptions options);
    private void V1ReplicaSetSpecSerializeHandler(Utf8JsonWriter writer, V1ReplicaSetSpec value);
    public JsonTypeInfo`1<V1ReplicaSetStatus> get_V1ReplicaSetStatus();
    private JsonTypeInfo`1<V1ReplicaSetStatus> Create_V1ReplicaSetStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicaSetStatusPropInit(JsonSerializerOptions options);
    private void V1ReplicaSetStatusSerializeHandler(Utf8JsonWriter writer, V1ReplicaSetStatus value);
    public JsonTypeInfo`1<V1ReplicationController> get_V1ReplicationController();
    private JsonTypeInfo`1<V1ReplicationController> Create_V1ReplicationController(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicationControllerPropInit(JsonSerializerOptions options);
    private void V1ReplicationControllerSerializeHandler(Utf8JsonWriter writer, V1ReplicationController value);
    public JsonTypeInfo`1<V1ReplicationControllerCondition> get_V1ReplicationControllerCondition();
    private JsonTypeInfo`1<V1ReplicationControllerCondition> Create_V1ReplicationControllerCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicationControllerConditionPropInit(JsonSerializerOptions options);
    private void V1ReplicationControllerConditionSerializeHandler(Utf8JsonWriter writer, V1ReplicationControllerCondition value);
    public JsonTypeInfo`1<V1ReplicationControllerList> get_V1ReplicationControllerList();
    private JsonTypeInfo`1<V1ReplicationControllerList> Create_V1ReplicationControllerList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicationControllerListPropInit(JsonSerializerOptions options);
    private void V1ReplicationControllerListSerializeHandler(Utf8JsonWriter writer, V1ReplicationControllerList value);
    public JsonTypeInfo`1<V1ReplicationControllerSpec> get_V1ReplicationControllerSpec();
    private JsonTypeInfo`1<V1ReplicationControllerSpec> Create_V1ReplicationControllerSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicationControllerSpecPropInit(JsonSerializerOptions options);
    private void V1ReplicationControllerSpecSerializeHandler(Utf8JsonWriter writer, V1ReplicationControllerSpec value);
    public JsonTypeInfo`1<V1ReplicationControllerStatus> get_V1ReplicationControllerStatus();
    private JsonTypeInfo`1<V1ReplicationControllerStatus> Create_V1ReplicationControllerStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ReplicationControllerStatusPropInit(JsonSerializerOptions options);
    private void V1ReplicationControllerStatusSerializeHandler(Utf8JsonWriter writer, V1ReplicationControllerStatus value);
    public JsonTypeInfo`1<V1ResourceAttributes> get_V1ResourceAttributes();
    private JsonTypeInfo`1<V1ResourceAttributes> Create_V1ResourceAttributes(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceAttributesPropInit(JsonSerializerOptions options);
    private void V1ResourceAttributesSerializeHandler(Utf8JsonWriter writer, V1ResourceAttributes value);
    public JsonTypeInfo`1<V1ResourceClaim> get_V1ResourceClaim();
    private JsonTypeInfo`1<V1ResourceClaim> Create_V1ResourceClaim(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceClaimPropInit(JsonSerializerOptions options);
    private void V1ResourceClaimSerializeHandler(Utf8JsonWriter writer, V1ResourceClaim value);
    public JsonTypeInfo`1<V1ResourceFieldSelector> get_V1ResourceFieldSelector();
    private JsonTypeInfo`1<V1ResourceFieldSelector> Create_V1ResourceFieldSelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceFieldSelectorPropInit(JsonSerializerOptions options);
    private void V1ResourceFieldSelectorSerializeHandler(Utf8JsonWriter writer, V1ResourceFieldSelector value);
    public JsonTypeInfo`1<V1ResourceHealth> get_V1ResourceHealth();
    private JsonTypeInfo`1<V1ResourceHealth> Create_V1ResourceHealth(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceHealthPropInit(JsonSerializerOptions options);
    private void V1ResourceHealthSerializeHandler(Utf8JsonWriter writer, V1ResourceHealth value);
    public JsonTypeInfo`1<V1ResourcePolicyRule> get_V1ResourcePolicyRule();
    private JsonTypeInfo`1<V1ResourcePolicyRule> Create_V1ResourcePolicyRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourcePolicyRulePropInit(JsonSerializerOptions options);
    private void V1ResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, V1ResourcePolicyRule value);
    public JsonTypeInfo`1<V1ResourceQuota> get_V1ResourceQuota();
    private JsonTypeInfo`1<V1ResourceQuota> Create_V1ResourceQuota(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceQuotaPropInit(JsonSerializerOptions options);
    private void V1ResourceQuotaSerializeHandler(Utf8JsonWriter writer, V1ResourceQuota value);
    public JsonTypeInfo`1<V1ResourceQuotaList> get_V1ResourceQuotaList();
    private JsonTypeInfo`1<V1ResourceQuotaList> Create_V1ResourceQuotaList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceQuotaListPropInit(JsonSerializerOptions options);
    private void V1ResourceQuotaListSerializeHandler(Utf8JsonWriter writer, V1ResourceQuotaList value);
    public JsonTypeInfo`1<V1ResourceQuotaSpec> get_V1ResourceQuotaSpec();
    private JsonTypeInfo`1<V1ResourceQuotaSpec> Create_V1ResourceQuotaSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceQuotaSpecPropInit(JsonSerializerOptions options);
    private void V1ResourceQuotaSpecSerializeHandler(Utf8JsonWriter writer, V1ResourceQuotaSpec value);
    public JsonTypeInfo`1<V1ResourceQuotaStatus> get_V1ResourceQuotaStatus();
    private JsonTypeInfo`1<V1ResourceQuotaStatus> Create_V1ResourceQuotaStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceQuotaStatusPropInit(JsonSerializerOptions options);
    private void V1ResourceQuotaStatusSerializeHandler(Utf8JsonWriter writer, V1ResourceQuotaStatus value);
    public JsonTypeInfo`1<V1ResourceRequirements> get_V1ResourceRequirements();
    private JsonTypeInfo`1<V1ResourceRequirements> Create_V1ResourceRequirements(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceRequirementsPropInit(JsonSerializerOptions options);
    private void V1ResourceRequirementsSerializeHandler(Utf8JsonWriter writer, V1ResourceRequirements value);
    public JsonTypeInfo`1<V1ResourceRule> get_V1ResourceRule();
    private JsonTypeInfo`1<V1ResourceRule> Create_V1ResourceRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceRulePropInit(JsonSerializerOptions options);
    private void V1ResourceRuleSerializeHandler(Utf8JsonWriter writer, V1ResourceRule value);
    public JsonTypeInfo`1<V1ResourceStatus> get_V1ResourceStatus();
    private JsonTypeInfo`1<V1ResourceStatus> Create_V1ResourceStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ResourceStatusPropInit(JsonSerializerOptions options);
    private void V1ResourceStatusSerializeHandler(Utf8JsonWriter writer, V1ResourceStatus value);
    public JsonTypeInfo`1<V1Role> get_V1Role();
    private JsonTypeInfo`1<V1Role> Create_V1Role(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RolePropInit(JsonSerializerOptions options);
    private void V1RoleSerializeHandler(Utf8JsonWriter writer, V1Role value);
    public JsonTypeInfo`1<V1RoleBinding> get_V1RoleBinding();
    private JsonTypeInfo`1<V1RoleBinding> Create_V1RoleBinding(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RoleBindingPropInit(JsonSerializerOptions options);
    private void V1RoleBindingSerializeHandler(Utf8JsonWriter writer, V1RoleBinding value);
    public JsonTypeInfo`1<V1RoleBindingList> get_V1RoleBindingList();
    private JsonTypeInfo`1<V1RoleBindingList> Create_V1RoleBindingList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RoleBindingListPropInit(JsonSerializerOptions options);
    private void V1RoleBindingListSerializeHandler(Utf8JsonWriter writer, V1RoleBindingList value);
    public JsonTypeInfo`1<V1RoleList> get_V1RoleList();
    private JsonTypeInfo`1<V1RoleList> Create_V1RoleList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RoleListPropInit(JsonSerializerOptions options);
    private void V1RoleListSerializeHandler(Utf8JsonWriter writer, V1RoleList value);
    public JsonTypeInfo`1<V1RoleRef> get_V1RoleRef();
    private JsonTypeInfo`1<V1RoleRef> Create_V1RoleRef(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RoleRefPropInit(JsonSerializerOptions options);
    private void V1RoleRefSerializeHandler(Utf8JsonWriter writer, V1RoleRef value);
    public JsonTypeInfo`1<V1RollingUpdateDaemonSet> get_V1RollingUpdateDaemonSet();
    private JsonTypeInfo`1<V1RollingUpdateDaemonSet> Create_V1RollingUpdateDaemonSet(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RollingUpdateDaemonSetPropInit(JsonSerializerOptions options);
    private void V1RollingUpdateDaemonSetSerializeHandler(Utf8JsonWriter writer, V1RollingUpdateDaemonSet value);
    public JsonTypeInfo`1<V1RollingUpdateDeployment> get_V1RollingUpdateDeployment();
    private JsonTypeInfo`1<V1RollingUpdateDeployment> Create_V1RollingUpdateDeployment(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RollingUpdateDeploymentPropInit(JsonSerializerOptions options);
    private void V1RollingUpdateDeploymentSerializeHandler(Utf8JsonWriter writer, V1RollingUpdateDeployment value);
    public JsonTypeInfo`1<V1RollingUpdateStatefulSetStrategy> get_V1RollingUpdateStatefulSetStrategy();
    private JsonTypeInfo`1<V1RollingUpdateStatefulSetStrategy> Create_V1RollingUpdateStatefulSetStrategy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RollingUpdateStatefulSetStrategyPropInit(JsonSerializerOptions options);
    private void V1RollingUpdateStatefulSetStrategySerializeHandler(Utf8JsonWriter writer, V1RollingUpdateStatefulSetStrategy value);
    public JsonTypeInfo`1<V1RuleWithOperations> get_V1RuleWithOperations();
    private JsonTypeInfo`1<V1RuleWithOperations> Create_V1RuleWithOperations(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RuleWithOperationsPropInit(JsonSerializerOptions options);
    private void V1RuleWithOperationsSerializeHandler(Utf8JsonWriter writer, V1RuleWithOperations value);
    public JsonTypeInfo`1<V1RuntimeClass> get_V1RuntimeClass();
    private JsonTypeInfo`1<V1RuntimeClass> Create_V1RuntimeClass(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RuntimeClassPropInit(JsonSerializerOptions options);
    private void V1RuntimeClassSerializeHandler(Utf8JsonWriter writer, V1RuntimeClass value);
    public JsonTypeInfo`1<V1RuntimeClassList> get_V1RuntimeClassList();
    private JsonTypeInfo`1<V1RuntimeClassList> Create_V1RuntimeClassList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1RuntimeClassListPropInit(JsonSerializerOptions options);
    private void V1RuntimeClassListSerializeHandler(Utf8JsonWriter writer, V1RuntimeClassList value);
    public JsonTypeInfo`1<V1Scale> get_V1Scale();
    private JsonTypeInfo`1<V1Scale> Create_V1Scale(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ScalePropInit(JsonSerializerOptions options);
    private void V1ScaleSerializeHandler(Utf8JsonWriter writer, V1Scale value);
    public JsonTypeInfo`1<V1ScaleIOPersistentVolumeSource> get_V1ScaleIOPersistentVolumeSource();
    private JsonTypeInfo`1<V1ScaleIOPersistentVolumeSource> Create_V1ScaleIOPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ScaleIOPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1ScaleIOPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1ScaleIOPersistentVolumeSource value);
    public JsonTypeInfo`1<V1ScaleIOVolumeSource> get_V1ScaleIOVolumeSource();
    private JsonTypeInfo`1<V1ScaleIOVolumeSource> Create_V1ScaleIOVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ScaleIOVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1ScaleIOVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1ScaleIOVolumeSource value);
    public JsonTypeInfo`1<V1ScaleSpec> get_V1ScaleSpec();
    private JsonTypeInfo`1<V1ScaleSpec> Create_V1ScaleSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ScaleSpecPropInit(JsonSerializerOptions options);
    private void V1ScaleSpecSerializeHandler(Utf8JsonWriter writer, V1ScaleSpec value);
    public JsonTypeInfo`1<V1ScaleStatus> get_V1ScaleStatus();
    private JsonTypeInfo`1<V1ScaleStatus> Create_V1ScaleStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ScaleStatusPropInit(JsonSerializerOptions options);
    private void V1ScaleStatusSerializeHandler(Utf8JsonWriter writer, V1ScaleStatus value);
    public JsonTypeInfo`1<V1Scheduling> get_V1Scheduling();
    private JsonTypeInfo`1<V1Scheduling> Create_V1Scheduling(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SchedulingPropInit(JsonSerializerOptions options);
    private void V1SchedulingSerializeHandler(Utf8JsonWriter writer, V1Scheduling value);
    public JsonTypeInfo`1<V1ScopedResourceSelectorRequirement> get_V1ScopedResourceSelectorRequirement();
    private JsonTypeInfo`1<V1ScopedResourceSelectorRequirement> Create_V1ScopedResourceSelectorRequirement(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ScopedResourceSelectorRequirementPropInit(JsonSerializerOptions options);
    private void V1ScopedResourceSelectorRequirementSerializeHandler(Utf8JsonWriter writer, V1ScopedResourceSelectorRequirement value);
    public JsonTypeInfo`1<V1ScopeSelector> get_V1ScopeSelector();
    private JsonTypeInfo`1<V1ScopeSelector> Create_V1ScopeSelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ScopeSelectorPropInit(JsonSerializerOptions options);
    private void V1ScopeSelectorSerializeHandler(Utf8JsonWriter writer, V1ScopeSelector value);
    public JsonTypeInfo`1<V1SeccompProfile> get_V1SeccompProfile();
    private JsonTypeInfo`1<V1SeccompProfile> Create_V1SeccompProfile(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SeccompProfilePropInit(JsonSerializerOptions options);
    private void V1SeccompProfileSerializeHandler(Utf8JsonWriter writer, V1SeccompProfile value);
    public JsonTypeInfo`1<V1Secret> get_V1Secret();
    private JsonTypeInfo`1<V1Secret> Create_V1Secret(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecretPropInit(JsonSerializerOptions options);
    private void V1SecretSerializeHandler(Utf8JsonWriter writer, V1Secret value);
    public JsonTypeInfo`1<V1SecretEnvSource> get_V1SecretEnvSource();
    private JsonTypeInfo`1<V1SecretEnvSource> Create_V1SecretEnvSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecretEnvSourcePropInit(JsonSerializerOptions options);
    private void V1SecretEnvSourceSerializeHandler(Utf8JsonWriter writer, V1SecretEnvSource value);
    public JsonTypeInfo`1<V1SecretKeySelector> get_V1SecretKeySelector();
    private JsonTypeInfo`1<V1SecretKeySelector> Create_V1SecretKeySelector(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecretKeySelectorPropInit(JsonSerializerOptions options);
    private void V1SecretKeySelectorSerializeHandler(Utf8JsonWriter writer, V1SecretKeySelector value);
    public JsonTypeInfo`1<V1SecretList> get_V1SecretList();
    private JsonTypeInfo`1<V1SecretList> Create_V1SecretList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecretListPropInit(JsonSerializerOptions options);
    private void V1SecretListSerializeHandler(Utf8JsonWriter writer, V1SecretList value);
    public JsonTypeInfo`1<V1SecretProjection> get_V1SecretProjection();
    private JsonTypeInfo`1<V1SecretProjection> Create_V1SecretProjection(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecretProjectionPropInit(JsonSerializerOptions options);
    private void V1SecretProjectionSerializeHandler(Utf8JsonWriter writer, V1SecretProjection value);
    public JsonTypeInfo`1<V1SecretReference> get_V1SecretReference();
    private JsonTypeInfo`1<V1SecretReference> Create_V1SecretReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecretReferencePropInit(JsonSerializerOptions options);
    private void V1SecretReferenceSerializeHandler(Utf8JsonWriter writer, V1SecretReference value);
    public JsonTypeInfo`1<V1SecretVolumeSource> get_V1SecretVolumeSource();
    private JsonTypeInfo`1<V1SecretVolumeSource> Create_V1SecretVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecretVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1SecretVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1SecretVolumeSource value);
    public JsonTypeInfo`1<V1SecurityContext> get_V1SecurityContext();
    private JsonTypeInfo`1<V1SecurityContext> Create_V1SecurityContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SecurityContextPropInit(JsonSerializerOptions options);
    private void V1SecurityContextSerializeHandler(Utf8JsonWriter writer, V1SecurityContext value);
    public JsonTypeInfo`1<V1SelectableField> get_V1SelectableField();
    private JsonTypeInfo`1<V1SelectableField> Create_V1SelectableField(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SelectableFieldPropInit(JsonSerializerOptions options);
    private void V1SelectableFieldSerializeHandler(Utf8JsonWriter writer, V1SelectableField value);
    public JsonTypeInfo`1<V1SelfSubjectAccessReview> get_V1SelfSubjectAccessReview();
    private JsonTypeInfo`1<V1SelfSubjectAccessReview> Create_V1SelfSubjectAccessReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SelfSubjectAccessReviewPropInit(JsonSerializerOptions options);
    private void V1SelfSubjectAccessReviewSerializeHandler(Utf8JsonWriter writer, V1SelfSubjectAccessReview value);
    public JsonTypeInfo`1<V1SelfSubjectAccessReviewSpec> get_V1SelfSubjectAccessReviewSpec();
    private JsonTypeInfo`1<V1SelfSubjectAccessReviewSpec> Create_V1SelfSubjectAccessReviewSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SelfSubjectAccessReviewSpecPropInit(JsonSerializerOptions options);
    private void V1SelfSubjectAccessReviewSpecSerializeHandler(Utf8JsonWriter writer, V1SelfSubjectAccessReviewSpec value);
    public JsonTypeInfo`1<V1SelfSubjectReview> get_V1SelfSubjectReview();
    private JsonTypeInfo`1<V1SelfSubjectReview> Create_V1SelfSubjectReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SelfSubjectReviewPropInit(JsonSerializerOptions options);
    private void V1SelfSubjectReviewSerializeHandler(Utf8JsonWriter writer, V1SelfSubjectReview value);
    public JsonTypeInfo`1<V1SelfSubjectReviewStatus> get_V1SelfSubjectReviewStatus();
    private JsonTypeInfo`1<V1SelfSubjectReviewStatus> Create_V1SelfSubjectReviewStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SelfSubjectReviewStatusPropInit(JsonSerializerOptions options);
    private void V1SelfSubjectReviewStatusSerializeHandler(Utf8JsonWriter writer, V1SelfSubjectReviewStatus value);
    public JsonTypeInfo`1<V1SelfSubjectRulesReview> get_V1SelfSubjectRulesReview();
    private JsonTypeInfo`1<V1SelfSubjectRulesReview> Create_V1SelfSubjectRulesReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SelfSubjectRulesReviewPropInit(JsonSerializerOptions options);
    private void V1SelfSubjectRulesReviewSerializeHandler(Utf8JsonWriter writer, V1SelfSubjectRulesReview value);
    public JsonTypeInfo`1<V1SelfSubjectRulesReviewSpec> get_V1SelfSubjectRulesReviewSpec();
    private JsonTypeInfo`1<V1SelfSubjectRulesReviewSpec> Create_V1SelfSubjectRulesReviewSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SelfSubjectRulesReviewSpecPropInit(JsonSerializerOptions options);
    private void V1SelfSubjectRulesReviewSpecSerializeHandler(Utf8JsonWriter writer, V1SelfSubjectRulesReviewSpec value);
    public JsonTypeInfo`1<V1SELinuxOptions> get_V1SELinuxOptions();
    private JsonTypeInfo`1<V1SELinuxOptions> Create_V1SELinuxOptions(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SELinuxOptionsPropInit(JsonSerializerOptions options);
    private void V1SELinuxOptionsSerializeHandler(Utf8JsonWriter writer, V1SELinuxOptions value);
    public JsonTypeInfo`1<V1ServerAddressByClientCIDR> get_V1ServerAddressByClientCIDR();
    private JsonTypeInfo`1<V1ServerAddressByClientCIDR> Create_V1ServerAddressByClientCIDR(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServerAddressByClientCIDRPropInit(JsonSerializerOptions options);
    private void V1ServerAddressByClientCIDRSerializeHandler(Utf8JsonWriter writer, V1ServerAddressByClientCIDR value);
    public JsonTypeInfo`1<V1Service> get_V1Service();
    private JsonTypeInfo`1<V1Service> Create_V1Service(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServicePropInit(JsonSerializerOptions options);
    private void V1ServiceSerializeHandler(Utf8JsonWriter writer, V1Service value);
    public JsonTypeInfo`1<V1ServiceAccount> get_V1ServiceAccount();
    private JsonTypeInfo`1<V1ServiceAccount> Create_V1ServiceAccount(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceAccountPropInit(JsonSerializerOptions options);
    private void V1ServiceAccountSerializeHandler(Utf8JsonWriter writer, V1ServiceAccount value);
    public JsonTypeInfo`1<V1ServiceAccountList> get_V1ServiceAccountList();
    private JsonTypeInfo`1<V1ServiceAccountList> Create_V1ServiceAccountList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceAccountListPropInit(JsonSerializerOptions options);
    private void V1ServiceAccountListSerializeHandler(Utf8JsonWriter writer, V1ServiceAccountList value);
    public JsonTypeInfo`1<V1ServiceAccountSubject> get_V1ServiceAccountSubject();
    private JsonTypeInfo`1<V1ServiceAccountSubject> Create_V1ServiceAccountSubject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceAccountSubjectPropInit(JsonSerializerOptions options);
    private void V1ServiceAccountSubjectSerializeHandler(Utf8JsonWriter writer, V1ServiceAccountSubject value);
    public JsonTypeInfo`1<V1ServiceAccountTokenProjection> get_V1ServiceAccountTokenProjection();
    private JsonTypeInfo`1<V1ServiceAccountTokenProjection> Create_V1ServiceAccountTokenProjection(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceAccountTokenProjectionPropInit(JsonSerializerOptions options);
    private void V1ServiceAccountTokenProjectionSerializeHandler(Utf8JsonWriter writer, V1ServiceAccountTokenProjection value);
    public JsonTypeInfo`1<V1ServiceBackendPort> get_V1ServiceBackendPort();
    private JsonTypeInfo`1<V1ServiceBackendPort> Create_V1ServiceBackendPort(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceBackendPortPropInit(JsonSerializerOptions options);
    private void V1ServiceBackendPortSerializeHandler(Utf8JsonWriter writer, V1ServiceBackendPort value);
    public JsonTypeInfo`1<V1ServiceList> get_V1ServiceList();
    private JsonTypeInfo`1<V1ServiceList> Create_V1ServiceList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceListPropInit(JsonSerializerOptions options);
    private void V1ServiceListSerializeHandler(Utf8JsonWriter writer, V1ServiceList value);
    public JsonTypeInfo`1<V1ServicePort> get_V1ServicePort();
    private JsonTypeInfo`1<V1ServicePort> Create_V1ServicePort(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServicePortPropInit(JsonSerializerOptions options);
    private void V1ServicePortSerializeHandler(Utf8JsonWriter writer, V1ServicePort value);
    public JsonTypeInfo`1<V1ServiceSpec> get_V1ServiceSpec();
    private JsonTypeInfo`1<V1ServiceSpec> Create_V1ServiceSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceSpecPropInit(JsonSerializerOptions options);
    private void V1ServiceSpecSerializeHandler(Utf8JsonWriter writer, V1ServiceSpec value);
    public JsonTypeInfo`1<V1ServiceStatus> get_V1ServiceStatus();
    private JsonTypeInfo`1<V1ServiceStatus> Create_V1ServiceStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ServiceStatusPropInit(JsonSerializerOptions options);
    private void V1ServiceStatusSerializeHandler(Utf8JsonWriter writer, V1ServiceStatus value);
    public JsonTypeInfo`1<V1SessionAffinityConfig> get_V1SessionAffinityConfig();
    private JsonTypeInfo`1<V1SessionAffinityConfig> Create_V1SessionAffinityConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SessionAffinityConfigPropInit(JsonSerializerOptions options);
    private void V1SessionAffinityConfigSerializeHandler(Utf8JsonWriter writer, V1SessionAffinityConfig value);
    public JsonTypeInfo`1<V1SleepAction> get_V1SleepAction();
    private JsonTypeInfo`1<V1SleepAction> Create_V1SleepAction(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SleepActionPropInit(JsonSerializerOptions options);
    private void V1SleepActionSerializeHandler(Utf8JsonWriter writer, V1SleepAction value);
    public JsonTypeInfo`1<V1StatefulSet> get_V1StatefulSet();
    private JsonTypeInfo`1<V1StatefulSet> Create_V1StatefulSet(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetPropInit(JsonSerializerOptions options);
    private void V1StatefulSetSerializeHandler(Utf8JsonWriter writer, V1StatefulSet value);
    public JsonTypeInfo`1<V1StatefulSetCondition> get_V1StatefulSetCondition();
    private JsonTypeInfo`1<V1StatefulSetCondition> Create_V1StatefulSetCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetConditionPropInit(JsonSerializerOptions options);
    private void V1StatefulSetConditionSerializeHandler(Utf8JsonWriter writer, V1StatefulSetCondition value);
    public JsonTypeInfo`1<V1StatefulSetList> get_V1StatefulSetList();
    private JsonTypeInfo`1<V1StatefulSetList> Create_V1StatefulSetList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetListPropInit(JsonSerializerOptions options);
    private void V1StatefulSetListSerializeHandler(Utf8JsonWriter writer, V1StatefulSetList value);
    public JsonTypeInfo`1<V1StatefulSetOrdinals> get_V1StatefulSetOrdinals();
    private JsonTypeInfo`1<V1StatefulSetOrdinals> Create_V1StatefulSetOrdinals(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetOrdinalsPropInit(JsonSerializerOptions options);
    private void V1StatefulSetOrdinalsSerializeHandler(Utf8JsonWriter writer, V1StatefulSetOrdinals value);
    public JsonTypeInfo`1<V1StatefulSetPersistentVolumeClaimRetentionPolicy> get_V1StatefulSetPersistentVolumeClaimRetentionPolicy();
    private JsonTypeInfo`1<V1StatefulSetPersistentVolumeClaimRetentionPolicy> Create_V1StatefulSetPersistentVolumeClaimRetentionPolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetPersistentVolumeClaimRetentionPolicyPropInit(JsonSerializerOptions options);
    private void V1StatefulSetPersistentVolumeClaimRetentionPolicySerializeHandler(Utf8JsonWriter writer, V1StatefulSetPersistentVolumeClaimRetentionPolicy value);
    public JsonTypeInfo`1<V1StatefulSetSpec> get_V1StatefulSetSpec();
    private JsonTypeInfo`1<V1StatefulSetSpec> Create_V1StatefulSetSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetSpecPropInit(JsonSerializerOptions options);
    private void V1StatefulSetSpecSerializeHandler(Utf8JsonWriter writer, V1StatefulSetSpec value);
    public JsonTypeInfo`1<V1StatefulSetStatus> get_V1StatefulSetStatus();
    private JsonTypeInfo`1<V1StatefulSetStatus> Create_V1StatefulSetStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetStatusPropInit(JsonSerializerOptions options);
    private void V1StatefulSetStatusSerializeHandler(Utf8JsonWriter writer, V1StatefulSetStatus value);
    public JsonTypeInfo`1<V1StatefulSetUpdateStrategy> get_V1StatefulSetUpdateStrategy();
    private JsonTypeInfo`1<V1StatefulSetUpdateStrategy> Create_V1StatefulSetUpdateStrategy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatefulSetUpdateStrategyPropInit(JsonSerializerOptions options);
    private void V1StatefulSetUpdateStrategySerializeHandler(Utf8JsonWriter writer, V1StatefulSetUpdateStrategy value);
    public JsonTypeInfo`1<V1Status> get_V1Status();
    private JsonTypeInfo`1<V1Status> Create_V1Status(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatusPropInit(JsonSerializerOptions options);
    private void V1StatusSerializeHandler(Utf8JsonWriter writer, V1Status value);
    public JsonTypeInfo`1<V1StatusCause> get_V1StatusCause();
    private JsonTypeInfo`1<V1StatusCause> Create_V1StatusCause(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatusCausePropInit(JsonSerializerOptions options);
    private void V1StatusCauseSerializeHandler(Utf8JsonWriter writer, V1StatusCause value);
    public JsonTypeInfo`1<V1StatusDetails> get_V1StatusDetails();
    private JsonTypeInfo`1<V1StatusDetails> Create_V1StatusDetails(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StatusDetailsPropInit(JsonSerializerOptions options);
    private void V1StatusDetailsSerializeHandler(Utf8JsonWriter writer, V1StatusDetails value);
    public JsonTypeInfo`1<V1StorageClass> get_V1StorageClass();
    private JsonTypeInfo`1<V1StorageClass> Create_V1StorageClass(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StorageClassPropInit(JsonSerializerOptions options);
    private void V1StorageClassSerializeHandler(Utf8JsonWriter writer, V1StorageClass value);
    public JsonTypeInfo`1<V1StorageClassList> get_V1StorageClassList();
    private JsonTypeInfo`1<V1StorageClassList> Create_V1StorageClassList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StorageClassListPropInit(JsonSerializerOptions options);
    private void V1StorageClassListSerializeHandler(Utf8JsonWriter writer, V1StorageClassList value);
    public JsonTypeInfo`1<V1StorageOSPersistentVolumeSource> get_V1StorageOSPersistentVolumeSource();
    private JsonTypeInfo`1<V1StorageOSPersistentVolumeSource> Create_V1StorageOSPersistentVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StorageOSPersistentVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1StorageOSPersistentVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1StorageOSPersistentVolumeSource value);
    public JsonTypeInfo`1<V1StorageOSVolumeSource> get_V1StorageOSVolumeSource();
    private JsonTypeInfo`1<V1StorageOSVolumeSource> Create_V1StorageOSVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1StorageOSVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1StorageOSVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1StorageOSVolumeSource value);
    public JsonTypeInfo`1<V1SubjectAccessReview> get_V1SubjectAccessReview();
    private JsonTypeInfo`1<V1SubjectAccessReview> Create_V1SubjectAccessReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SubjectAccessReviewPropInit(JsonSerializerOptions options);
    private void V1SubjectAccessReviewSerializeHandler(Utf8JsonWriter writer, V1SubjectAccessReview value);
    public JsonTypeInfo`1<V1SubjectAccessReviewSpec> get_V1SubjectAccessReviewSpec();
    private JsonTypeInfo`1<V1SubjectAccessReviewSpec> Create_V1SubjectAccessReviewSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SubjectAccessReviewSpecPropInit(JsonSerializerOptions options);
    private void V1SubjectAccessReviewSpecSerializeHandler(Utf8JsonWriter writer, V1SubjectAccessReviewSpec value);
    public JsonTypeInfo`1<V1SubjectAccessReviewStatus> get_V1SubjectAccessReviewStatus();
    private JsonTypeInfo`1<V1SubjectAccessReviewStatus> Create_V1SubjectAccessReviewStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SubjectAccessReviewStatusPropInit(JsonSerializerOptions options);
    private void V1SubjectAccessReviewStatusSerializeHandler(Utf8JsonWriter writer, V1SubjectAccessReviewStatus value);
    public JsonTypeInfo`1<V1SubjectRulesReviewStatus> get_V1SubjectRulesReviewStatus();
    private JsonTypeInfo`1<V1SubjectRulesReviewStatus> Create_V1SubjectRulesReviewStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SubjectRulesReviewStatusPropInit(JsonSerializerOptions options);
    private void V1SubjectRulesReviewStatusSerializeHandler(Utf8JsonWriter writer, V1SubjectRulesReviewStatus value);
    public JsonTypeInfo`1<V1SuccessPolicy> get_V1SuccessPolicy();
    private JsonTypeInfo`1<V1SuccessPolicy> Create_V1SuccessPolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SuccessPolicyPropInit(JsonSerializerOptions options);
    private void V1SuccessPolicySerializeHandler(Utf8JsonWriter writer, V1SuccessPolicy value);
    public JsonTypeInfo`1<V1SuccessPolicyRule> get_V1SuccessPolicyRule();
    private JsonTypeInfo`1<V1SuccessPolicyRule> Create_V1SuccessPolicyRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SuccessPolicyRulePropInit(JsonSerializerOptions options);
    private void V1SuccessPolicyRuleSerializeHandler(Utf8JsonWriter writer, V1SuccessPolicyRule value);
    public JsonTypeInfo`1<V1Sysctl> get_V1Sysctl();
    private JsonTypeInfo`1<V1Sysctl> Create_V1Sysctl(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1SysctlPropInit(JsonSerializerOptions options);
    private void V1SysctlSerializeHandler(Utf8JsonWriter writer, V1Sysctl value);
    public JsonTypeInfo`1<V1Taint> get_V1Taint();
    private JsonTypeInfo`1<V1Taint> Create_V1Taint(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TaintPropInit(JsonSerializerOptions options);
    private void V1TaintSerializeHandler(Utf8JsonWriter writer, V1Taint value);
    public JsonTypeInfo`1<V1TCPSocketAction> get_V1TCPSocketAction();
    private JsonTypeInfo`1<V1TCPSocketAction> Create_V1TCPSocketAction(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TCPSocketActionPropInit(JsonSerializerOptions options);
    private void V1TCPSocketActionSerializeHandler(Utf8JsonWriter writer, V1TCPSocketAction value);
    public JsonTypeInfo`1<V1TokenRequestSpec> get_V1TokenRequestSpec();
    private JsonTypeInfo`1<V1TokenRequestSpec> Create_V1TokenRequestSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TokenRequestSpecPropInit(JsonSerializerOptions options);
    private void V1TokenRequestSpecSerializeHandler(Utf8JsonWriter writer, V1TokenRequestSpec value);
    public JsonTypeInfo`1<V1TokenRequestStatus> get_V1TokenRequestStatus();
    private JsonTypeInfo`1<V1TokenRequestStatus> Create_V1TokenRequestStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TokenRequestStatusPropInit(JsonSerializerOptions options);
    private void V1TokenRequestStatusSerializeHandler(Utf8JsonWriter writer, V1TokenRequestStatus value);
    public JsonTypeInfo`1<V1TokenReview> get_V1TokenReview();
    private JsonTypeInfo`1<V1TokenReview> Create_V1TokenReview(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TokenReviewPropInit(JsonSerializerOptions options);
    private void V1TokenReviewSerializeHandler(Utf8JsonWriter writer, V1TokenReview value);
    public JsonTypeInfo`1<V1TokenReviewSpec> get_V1TokenReviewSpec();
    private JsonTypeInfo`1<V1TokenReviewSpec> Create_V1TokenReviewSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TokenReviewSpecPropInit(JsonSerializerOptions options);
    private void V1TokenReviewSpecSerializeHandler(Utf8JsonWriter writer, V1TokenReviewSpec value);
    public JsonTypeInfo`1<V1TokenReviewStatus> get_V1TokenReviewStatus();
    private JsonTypeInfo`1<V1TokenReviewStatus> Create_V1TokenReviewStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TokenReviewStatusPropInit(JsonSerializerOptions options);
    private void V1TokenReviewStatusSerializeHandler(Utf8JsonWriter writer, V1TokenReviewStatus value);
    public JsonTypeInfo`1<V1Toleration> get_V1Toleration();
    private JsonTypeInfo`1<V1Toleration> Create_V1Toleration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TolerationPropInit(JsonSerializerOptions options);
    private void V1TolerationSerializeHandler(Utf8JsonWriter writer, V1Toleration value);
    public JsonTypeInfo`1<V1TopologySelectorLabelRequirement> get_V1TopologySelectorLabelRequirement();
    private JsonTypeInfo`1<V1TopologySelectorLabelRequirement> Create_V1TopologySelectorLabelRequirement(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TopologySelectorLabelRequirementPropInit(JsonSerializerOptions options);
    private void V1TopologySelectorLabelRequirementSerializeHandler(Utf8JsonWriter writer, V1TopologySelectorLabelRequirement value);
    public JsonTypeInfo`1<V1TopologySelectorTerm> get_V1TopologySelectorTerm();
    private JsonTypeInfo`1<V1TopologySelectorTerm> Create_V1TopologySelectorTerm(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TopologySelectorTermPropInit(JsonSerializerOptions options);
    private void V1TopologySelectorTermSerializeHandler(Utf8JsonWriter writer, V1TopologySelectorTerm value);
    public JsonTypeInfo`1<V1TopologySpreadConstraint> get_V1TopologySpreadConstraint();
    private JsonTypeInfo`1<V1TopologySpreadConstraint> Create_V1TopologySpreadConstraint(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TopologySpreadConstraintPropInit(JsonSerializerOptions options);
    private void V1TopologySpreadConstraintSerializeHandler(Utf8JsonWriter writer, V1TopologySpreadConstraint value);
    public JsonTypeInfo`1<V1TypeChecking> get_V1TypeChecking();
    private JsonTypeInfo`1<V1TypeChecking> Create_V1TypeChecking(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TypeCheckingPropInit(JsonSerializerOptions options);
    private void V1TypeCheckingSerializeHandler(Utf8JsonWriter writer, V1TypeChecking value);
    public JsonTypeInfo`1<V1TypedLocalObjectReference> get_V1TypedLocalObjectReference();
    private JsonTypeInfo`1<V1TypedLocalObjectReference> Create_V1TypedLocalObjectReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TypedLocalObjectReferencePropInit(JsonSerializerOptions options);
    private void V1TypedLocalObjectReferenceSerializeHandler(Utf8JsonWriter writer, V1TypedLocalObjectReference value);
    public JsonTypeInfo`1<V1TypedObjectReference> get_V1TypedObjectReference();
    private JsonTypeInfo`1<V1TypedObjectReference> Create_V1TypedObjectReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1TypedObjectReferencePropInit(JsonSerializerOptions options);
    private void V1TypedObjectReferenceSerializeHandler(Utf8JsonWriter writer, V1TypedObjectReference value);
    public JsonTypeInfo`1<V1UncountedTerminatedPods> get_V1UncountedTerminatedPods();
    private JsonTypeInfo`1<V1UncountedTerminatedPods> Create_V1UncountedTerminatedPods(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1UncountedTerminatedPodsPropInit(JsonSerializerOptions options);
    private void V1UncountedTerminatedPodsSerializeHandler(Utf8JsonWriter writer, V1UncountedTerminatedPods value);
    public JsonTypeInfo`1<V1UserInfo> get_V1UserInfo();
    private JsonTypeInfo`1<V1UserInfo> Create_V1UserInfo(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1UserInfoPropInit(JsonSerializerOptions options);
    private void V1UserInfoSerializeHandler(Utf8JsonWriter writer, V1UserInfo value);
    public JsonTypeInfo`1<V1UserSubject> get_V1UserSubject();
    private JsonTypeInfo`1<V1UserSubject> Create_V1UserSubject(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1UserSubjectPropInit(JsonSerializerOptions options);
    private void V1UserSubjectSerializeHandler(Utf8JsonWriter writer, V1UserSubject value);
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicy> get_V1ValidatingAdmissionPolicy();
    private JsonTypeInfo`1<V1ValidatingAdmissionPolicy> Create_V1ValidatingAdmissionPolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingAdmissionPolicyPropInit(JsonSerializerOptions options);
    private void V1ValidatingAdmissionPolicySerializeHandler(Utf8JsonWriter writer, V1ValidatingAdmissionPolicy value);
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyBinding> get_V1ValidatingAdmissionPolicyBinding();
    private JsonTypeInfo`1<V1ValidatingAdmissionPolicyBinding> Create_V1ValidatingAdmissionPolicyBinding(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingAdmissionPolicyBindingPropInit(JsonSerializerOptions options);
    private void V1ValidatingAdmissionPolicyBindingSerializeHandler(Utf8JsonWriter writer, V1ValidatingAdmissionPolicyBinding value);
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingList> get_V1ValidatingAdmissionPolicyBindingList();
    private JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingList> Create_V1ValidatingAdmissionPolicyBindingList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingAdmissionPolicyBindingListPropInit(JsonSerializerOptions options);
    private void V1ValidatingAdmissionPolicyBindingListSerializeHandler(Utf8JsonWriter writer, V1ValidatingAdmissionPolicyBindingList value);
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingSpec> get_V1ValidatingAdmissionPolicyBindingSpec();
    private JsonTypeInfo`1<V1ValidatingAdmissionPolicyBindingSpec> Create_V1ValidatingAdmissionPolicyBindingSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingAdmissionPolicyBindingSpecPropInit(JsonSerializerOptions options);
    private void V1ValidatingAdmissionPolicyBindingSpecSerializeHandler(Utf8JsonWriter writer, V1ValidatingAdmissionPolicyBindingSpec value);
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyList> get_V1ValidatingAdmissionPolicyList();
    private JsonTypeInfo`1<V1ValidatingAdmissionPolicyList> Create_V1ValidatingAdmissionPolicyList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingAdmissionPolicyListPropInit(JsonSerializerOptions options);
    private void V1ValidatingAdmissionPolicyListSerializeHandler(Utf8JsonWriter writer, V1ValidatingAdmissionPolicyList value);
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicySpec> get_V1ValidatingAdmissionPolicySpec();
    private JsonTypeInfo`1<V1ValidatingAdmissionPolicySpec> Create_V1ValidatingAdmissionPolicySpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingAdmissionPolicySpecPropInit(JsonSerializerOptions options);
    private void V1ValidatingAdmissionPolicySpecSerializeHandler(Utf8JsonWriter writer, V1ValidatingAdmissionPolicySpec value);
    public JsonTypeInfo`1<V1ValidatingAdmissionPolicyStatus> get_V1ValidatingAdmissionPolicyStatus();
    private JsonTypeInfo`1<V1ValidatingAdmissionPolicyStatus> Create_V1ValidatingAdmissionPolicyStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingAdmissionPolicyStatusPropInit(JsonSerializerOptions options);
    private void V1ValidatingAdmissionPolicyStatusSerializeHandler(Utf8JsonWriter writer, V1ValidatingAdmissionPolicyStatus value);
    public JsonTypeInfo`1<V1ValidatingWebhook> get_V1ValidatingWebhook();
    private JsonTypeInfo`1<V1ValidatingWebhook> Create_V1ValidatingWebhook(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingWebhookPropInit(JsonSerializerOptions options);
    private void V1ValidatingWebhookSerializeHandler(Utf8JsonWriter writer, V1ValidatingWebhook value);
    public JsonTypeInfo`1<V1ValidatingWebhookConfiguration> get_V1ValidatingWebhookConfiguration();
    private JsonTypeInfo`1<V1ValidatingWebhookConfiguration> Create_V1ValidatingWebhookConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingWebhookConfigurationPropInit(JsonSerializerOptions options);
    private void V1ValidatingWebhookConfigurationSerializeHandler(Utf8JsonWriter writer, V1ValidatingWebhookConfiguration value);
    public JsonTypeInfo`1<V1ValidatingWebhookConfigurationList> get_V1ValidatingWebhookConfigurationList();
    private JsonTypeInfo`1<V1ValidatingWebhookConfigurationList> Create_V1ValidatingWebhookConfigurationList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidatingWebhookConfigurationListPropInit(JsonSerializerOptions options);
    private void V1ValidatingWebhookConfigurationListSerializeHandler(Utf8JsonWriter writer, V1ValidatingWebhookConfigurationList value);
    public JsonTypeInfo`1<V1Validation> get_V1Validation();
    private JsonTypeInfo`1<V1Validation> Create_V1Validation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidationPropInit(JsonSerializerOptions options);
    private void V1ValidationSerializeHandler(Utf8JsonWriter writer, V1Validation value);
    public JsonTypeInfo`1<V1ValidationRule> get_V1ValidationRule();
    private JsonTypeInfo`1<V1ValidationRule> Create_V1ValidationRule(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1ValidationRulePropInit(JsonSerializerOptions options);
    private void V1ValidationRuleSerializeHandler(Utf8JsonWriter writer, V1ValidationRule value);
    public JsonTypeInfo`1<V1Variable> get_V1Variable();
    private JsonTypeInfo`1<V1Variable> Create_V1Variable(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VariablePropInit(JsonSerializerOptions options);
    private void V1VariableSerializeHandler(Utf8JsonWriter writer, V1Variable value);
    public JsonTypeInfo`1<V1Volume> get_V1Volume();
    private JsonTypeInfo`1<V1Volume> Create_V1Volume(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumePropInit(JsonSerializerOptions options);
    private void V1VolumeSerializeHandler(Utf8JsonWriter writer, V1Volume value);
    public JsonTypeInfo`1<V1VolumeAttachment> get_V1VolumeAttachment();
    private JsonTypeInfo`1<V1VolumeAttachment> Create_V1VolumeAttachment(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeAttachmentPropInit(JsonSerializerOptions options);
    private void V1VolumeAttachmentSerializeHandler(Utf8JsonWriter writer, V1VolumeAttachment value);
    public JsonTypeInfo`1<V1VolumeAttachmentList> get_V1VolumeAttachmentList();
    private JsonTypeInfo`1<V1VolumeAttachmentList> Create_V1VolumeAttachmentList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeAttachmentListPropInit(JsonSerializerOptions options);
    private void V1VolumeAttachmentListSerializeHandler(Utf8JsonWriter writer, V1VolumeAttachmentList value);
    public JsonTypeInfo`1<V1VolumeAttachmentSource> get_V1VolumeAttachmentSource();
    private JsonTypeInfo`1<V1VolumeAttachmentSource> Create_V1VolumeAttachmentSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeAttachmentSourcePropInit(JsonSerializerOptions options);
    private void V1VolumeAttachmentSourceSerializeHandler(Utf8JsonWriter writer, V1VolumeAttachmentSource value);
    public JsonTypeInfo`1<V1VolumeAttachmentSpec> get_V1VolumeAttachmentSpec();
    private JsonTypeInfo`1<V1VolumeAttachmentSpec> Create_V1VolumeAttachmentSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeAttachmentSpecPropInit(JsonSerializerOptions options);
    private void V1VolumeAttachmentSpecSerializeHandler(Utf8JsonWriter writer, V1VolumeAttachmentSpec value);
    public JsonTypeInfo`1<V1VolumeAttachmentStatus> get_V1VolumeAttachmentStatus();
    private JsonTypeInfo`1<V1VolumeAttachmentStatus> Create_V1VolumeAttachmentStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeAttachmentStatusPropInit(JsonSerializerOptions options);
    private void V1VolumeAttachmentStatusSerializeHandler(Utf8JsonWriter writer, V1VolumeAttachmentStatus value);
    public JsonTypeInfo`1<V1VolumeDevice> get_V1VolumeDevice();
    private JsonTypeInfo`1<V1VolumeDevice> Create_V1VolumeDevice(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeDevicePropInit(JsonSerializerOptions options);
    private void V1VolumeDeviceSerializeHandler(Utf8JsonWriter writer, V1VolumeDevice value);
    public JsonTypeInfo`1<V1VolumeError> get_V1VolumeError();
    private JsonTypeInfo`1<V1VolumeError> Create_V1VolumeError(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeErrorPropInit(JsonSerializerOptions options);
    private void V1VolumeErrorSerializeHandler(Utf8JsonWriter writer, V1VolumeError value);
    public JsonTypeInfo`1<V1VolumeMount> get_V1VolumeMount();
    private JsonTypeInfo`1<V1VolumeMount> Create_V1VolumeMount(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeMountPropInit(JsonSerializerOptions options);
    private void V1VolumeMountSerializeHandler(Utf8JsonWriter writer, V1VolumeMount value);
    public JsonTypeInfo`1<V1VolumeMountStatus> get_V1VolumeMountStatus();
    private JsonTypeInfo`1<V1VolumeMountStatus> Create_V1VolumeMountStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeMountStatusPropInit(JsonSerializerOptions options);
    private void V1VolumeMountStatusSerializeHandler(Utf8JsonWriter writer, V1VolumeMountStatus value);
    public JsonTypeInfo`1<V1VolumeNodeAffinity> get_V1VolumeNodeAffinity();
    private JsonTypeInfo`1<V1VolumeNodeAffinity> Create_V1VolumeNodeAffinity(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeNodeAffinityPropInit(JsonSerializerOptions options);
    private void V1VolumeNodeAffinitySerializeHandler(Utf8JsonWriter writer, V1VolumeNodeAffinity value);
    public JsonTypeInfo`1<V1VolumeNodeResources> get_V1VolumeNodeResources();
    private JsonTypeInfo`1<V1VolumeNodeResources> Create_V1VolumeNodeResources(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeNodeResourcesPropInit(JsonSerializerOptions options);
    private void V1VolumeNodeResourcesSerializeHandler(Utf8JsonWriter writer, V1VolumeNodeResources value);
    public JsonTypeInfo`1<V1VolumeProjection> get_V1VolumeProjection();
    private JsonTypeInfo`1<V1VolumeProjection> Create_V1VolumeProjection(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeProjectionPropInit(JsonSerializerOptions options);
    private void V1VolumeProjectionSerializeHandler(Utf8JsonWriter writer, V1VolumeProjection value);
    public JsonTypeInfo`1<V1VolumeResourceRequirements> get_V1VolumeResourceRequirements();
    private JsonTypeInfo`1<V1VolumeResourceRequirements> Create_V1VolumeResourceRequirements(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VolumeResourceRequirementsPropInit(JsonSerializerOptions options);
    private void V1VolumeResourceRequirementsSerializeHandler(Utf8JsonWriter writer, V1VolumeResourceRequirements value);
    public JsonTypeInfo`1<V1VsphereVirtualDiskVolumeSource> get_V1VsphereVirtualDiskVolumeSource();
    private JsonTypeInfo`1<V1VsphereVirtualDiskVolumeSource> Create_V1VsphereVirtualDiskVolumeSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1VsphereVirtualDiskVolumeSourcePropInit(JsonSerializerOptions options);
    private void V1VsphereVirtualDiskVolumeSourceSerializeHandler(Utf8JsonWriter writer, V1VsphereVirtualDiskVolumeSource value);
    public JsonTypeInfo`1<V1WebhookConversion> get_V1WebhookConversion();
    private JsonTypeInfo`1<V1WebhookConversion> Create_V1WebhookConversion(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1WebhookConversionPropInit(JsonSerializerOptions options);
    private void V1WebhookConversionSerializeHandler(Utf8JsonWriter writer, V1WebhookConversion value);
    public JsonTypeInfo`1<V1WeightedPodAffinityTerm> get_V1WeightedPodAffinityTerm();
    private JsonTypeInfo`1<V1WeightedPodAffinityTerm> Create_V1WeightedPodAffinityTerm(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1WeightedPodAffinityTermPropInit(JsonSerializerOptions options);
    private void V1WeightedPodAffinityTermSerializeHandler(Utf8JsonWriter writer, V1WeightedPodAffinityTerm value);
    public JsonTypeInfo`1<V1WindowsSecurityContextOptions> get_V1WindowsSecurityContextOptions();
    private JsonTypeInfo`1<V1WindowsSecurityContextOptions> Create_V1WindowsSecurityContextOptions(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V1WindowsSecurityContextOptionsPropInit(JsonSerializerOptions options);
    private void V1WindowsSecurityContextOptionsSerializeHandler(Utf8JsonWriter writer, V1WindowsSecurityContextOptions value);
    public JsonTypeInfo`1<V2ContainerResourceMetricSource> get_V2ContainerResourceMetricSource();
    private JsonTypeInfo`1<V2ContainerResourceMetricSource> Create_V2ContainerResourceMetricSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ContainerResourceMetricSourcePropInit(JsonSerializerOptions options);
    private void V2ContainerResourceMetricSourceSerializeHandler(Utf8JsonWriter writer, V2ContainerResourceMetricSource value);
    public JsonTypeInfo`1<V2ContainerResourceMetricStatus> get_V2ContainerResourceMetricStatus();
    private JsonTypeInfo`1<V2ContainerResourceMetricStatus> Create_V2ContainerResourceMetricStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ContainerResourceMetricStatusPropInit(JsonSerializerOptions options);
    private void V2ContainerResourceMetricStatusSerializeHandler(Utf8JsonWriter writer, V2ContainerResourceMetricStatus value);
    public JsonTypeInfo`1<V2CrossVersionObjectReference> get_V2CrossVersionObjectReference();
    private JsonTypeInfo`1<V2CrossVersionObjectReference> Create_V2CrossVersionObjectReference(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2CrossVersionObjectReferencePropInit(JsonSerializerOptions options);
    private void V2CrossVersionObjectReferenceSerializeHandler(Utf8JsonWriter writer, V2CrossVersionObjectReference value);
    public JsonTypeInfo`1<V2ExternalMetricSource> get_V2ExternalMetricSource();
    private JsonTypeInfo`1<V2ExternalMetricSource> Create_V2ExternalMetricSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ExternalMetricSourcePropInit(JsonSerializerOptions options);
    private void V2ExternalMetricSourceSerializeHandler(Utf8JsonWriter writer, V2ExternalMetricSource value);
    public JsonTypeInfo`1<V2ExternalMetricStatus> get_V2ExternalMetricStatus();
    private JsonTypeInfo`1<V2ExternalMetricStatus> Create_V2ExternalMetricStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ExternalMetricStatusPropInit(JsonSerializerOptions options);
    private void V2ExternalMetricStatusSerializeHandler(Utf8JsonWriter writer, V2ExternalMetricStatus value);
    public JsonTypeInfo`1<V2HorizontalPodAutoscaler> get_V2HorizontalPodAutoscaler();
    private JsonTypeInfo`1<V2HorizontalPodAutoscaler> Create_V2HorizontalPodAutoscaler(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HorizontalPodAutoscalerPropInit(JsonSerializerOptions options);
    private void V2HorizontalPodAutoscalerSerializeHandler(Utf8JsonWriter writer, V2HorizontalPodAutoscaler value);
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerBehavior> get_V2HorizontalPodAutoscalerBehavior();
    private JsonTypeInfo`1<V2HorizontalPodAutoscalerBehavior> Create_V2HorizontalPodAutoscalerBehavior(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HorizontalPodAutoscalerBehaviorPropInit(JsonSerializerOptions options);
    private void V2HorizontalPodAutoscalerBehaviorSerializeHandler(Utf8JsonWriter writer, V2HorizontalPodAutoscalerBehavior value);
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerCondition> get_V2HorizontalPodAutoscalerCondition();
    private JsonTypeInfo`1<V2HorizontalPodAutoscalerCondition> Create_V2HorizontalPodAutoscalerCondition(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HorizontalPodAutoscalerConditionPropInit(JsonSerializerOptions options);
    private void V2HorizontalPodAutoscalerConditionSerializeHandler(Utf8JsonWriter writer, V2HorizontalPodAutoscalerCondition value);
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerList> get_V2HorizontalPodAutoscalerList();
    private JsonTypeInfo`1<V2HorizontalPodAutoscalerList> Create_V2HorizontalPodAutoscalerList(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HorizontalPodAutoscalerListPropInit(JsonSerializerOptions options);
    private void V2HorizontalPodAutoscalerListSerializeHandler(Utf8JsonWriter writer, V2HorizontalPodAutoscalerList value);
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerSpec> get_V2HorizontalPodAutoscalerSpec();
    private JsonTypeInfo`1<V2HorizontalPodAutoscalerSpec> Create_V2HorizontalPodAutoscalerSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HorizontalPodAutoscalerSpecPropInit(JsonSerializerOptions options);
    private void V2HorizontalPodAutoscalerSpecSerializeHandler(Utf8JsonWriter writer, V2HorizontalPodAutoscalerSpec value);
    public JsonTypeInfo`1<V2HorizontalPodAutoscalerStatus> get_V2HorizontalPodAutoscalerStatus();
    private JsonTypeInfo`1<V2HorizontalPodAutoscalerStatus> Create_V2HorizontalPodAutoscalerStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HorizontalPodAutoscalerStatusPropInit(JsonSerializerOptions options);
    private void V2HorizontalPodAutoscalerStatusSerializeHandler(Utf8JsonWriter writer, V2HorizontalPodAutoscalerStatus value);
    public JsonTypeInfo`1<V2HPAScalingPolicy> get_V2HPAScalingPolicy();
    private JsonTypeInfo`1<V2HPAScalingPolicy> Create_V2HPAScalingPolicy(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HPAScalingPolicyPropInit(JsonSerializerOptions options);
    private void V2HPAScalingPolicySerializeHandler(Utf8JsonWriter writer, V2HPAScalingPolicy value);
    public JsonTypeInfo`1<V2HPAScalingRules> get_V2HPAScalingRules();
    private JsonTypeInfo`1<V2HPAScalingRules> Create_V2HPAScalingRules(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2HPAScalingRulesPropInit(JsonSerializerOptions options);
    private void V2HPAScalingRulesSerializeHandler(Utf8JsonWriter writer, V2HPAScalingRules value);
    public JsonTypeInfo`1<V2MetricIdentifier> get_V2MetricIdentifier();
    private JsonTypeInfo`1<V2MetricIdentifier> Create_V2MetricIdentifier(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2MetricIdentifierPropInit(JsonSerializerOptions options);
    private void V2MetricIdentifierSerializeHandler(Utf8JsonWriter writer, V2MetricIdentifier value);
    public JsonTypeInfo`1<V2MetricSpec> get_V2MetricSpec();
    private JsonTypeInfo`1<V2MetricSpec> Create_V2MetricSpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2MetricSpecPropInit(JsonSerializerOptions options);
    private void V2MetricSpecSerializeHandler(Utf8JsonWriter writer, V2MetricSpec value);
    public JsonTypeInfo`1<V2MetricStatus> get_V2MetricStatus();
    private JsonTypeInfo`1<V2MetricStatus> Create_V2MetricStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2MetricStatusPropInit(JsonSerializerOptions options);
    private void V2MetricStatusSerializeHandler(Utf8JsonWriter writer, V2MetricStatus value);
    public JsonTypeInfo`1<V2MetricTarget> get_V2MetricTarget();
    private JsonTypeInfo`1<V2MetricTarget> Create_V2MetricTarget(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2MetricTargetPropInit(JsonSerializerOptions options);
    private void V2MetricTargetSerializeHandler(Utf8JsonWriter writer, V2MetricTarget value);
    public JsonTypeInfo`1<V2MetricValueStatus> get_V2MetricValueStatus();
    private JsonTypeInfo`1<V2MetricValueStatus> Create_V2MetricValueStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2MetricValueStatusPropInit(JsonSerializerOptions options);
    private void V2MetricValueStatusSerializeHandler(Utf8JsonWriter writer, V2MetricValueStatus value);
    public JsonTypeInfo`1<V2ObjectMetricSource> get_V2ObjectMetricSource();
    private JsonTypeInfo`1<V2ObjectMetricSource> Create_V2ObjectMetricSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ObjectMetricSourcePropInit(JsonSerializerOptions options);
    private void V2ObjectMetricSourceSerializeHandler(Utf8JsonWriter writer, V2ObjectMetricSource value);
    public JsonTypeInfo`1<V2ObjectMetricStatus> get_V2ObjectMetricStatus();
    private JsonTypeInfo`1<V2ObjectMetricStatus> Create_V2ObjectMetricStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ObjectMetricStatusPropInit(JsonSerializerOptions options);
    private void V2ObjectMetricStatusSerializeHandler(Utf8JsonWriter writer, V2ObjectMetricStatus value);
    public JsonTypeInfo`1<V2PodsMetricSource> get_V2PodsMetricSource();
    private JsonTypeInfo`1<V2PodsMetricSource> Create_V2PodsMetricSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2PodsMetricSourcePropInit(JsonSerializerOptions options);
    private void V2PodsMetricSourceSerializeHandler(Utf8JsonWriter writer, V2PodsMetricSource value);
    public JsonTypeInfo`1<V2PodsMetricStatus> get_V2PodsMetricStatus();
    private JsonTypeInfo`1<V2PodsMetricStatus> Create_V2PodsMetricStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2PodsMetricStatusPropInit(JsonSerializerOptions options);
    private void V2PodsMetricStatusSerializeHandler(Utf8JsonWriter writer, V2PodsMetricStatus value);
    public JsonTypeInfo`1<V2ResourceMetricSource> get_V2ResourceMetricSource();
    private JsonTypeInfo`1<V2ResourceMetricSource> Create_V2ResourceMetricSource(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ResourceMetricSourcePropInit(JsonSerializerOptions options);
    private void V2ResourceMetricSourceSerializeHandler(Utf8JsonWriter writer, V2ResourceMetricSource value);
    public JsonTypeInfo`1<V2ResourceMetricStatus> get_V2ResourceMetricStatus();
    private JsonTypeInfo`1<V2ResourceMetricStatus> Create_V2ResourceMetricStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] V2ResourceMetricStatusPropInit(JsonSerializerOptions options);
    private void V2ResourceMetricStatusSerializeHandler(Utf8JsonWriter writer, V2ResourceMetricStatus value);
    public JsonTypeInfo`1<IDictionary`2<string, Byte[]>> get_IDictionaryStringByteArray();
    private JsonTypeInfo`1<IDictionary`2<string, Byte[]>> Create_IDictionaryStringByteArray(JsonSerializerOptions options);
    private void IDictionaryStringByteArraySerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, Byte[]> value);
    public JsonTypeInfo`1<IDictionary`2<string, ResourceQuantity>> get_IDictionaryStringResourceQuantity();
    private JsonTypeInfo`1<IDictionary`2<string, ResourceQuantity>> Create_IDictionaryStringResourceQuantity(JsonSerializerOptions options);
    private void IDictionaryStringResourceQuantitySerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, ResourceQuantity> value);
    public JsonTypeInfo`1<IDictionary`2<string, V1alpha3DeviceAttribute>> get_IDictionaryStringV1alpha3DeviceAttribute();
    private JsonTypeInfo`1<IDictionary`2<string, V1alpha3DeviceAttribute>> Create_IDictionaryStringV1alpha3DeviceAttribute(JsonSerializerOptions options);
    private void IDictionaryStringV1alpha3DeviceAttributeSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, V1alpha3DeviceAttribute> value);
    public JsonTypeInfo`1<IDictionary`2<string, V1JSONSchemaProps>> get_IDictionaryStringV1JSONSchemaProps();
    private JsonTypeInfo`1<IDictionary`2<string, V1JSONSchemaProps>> Create_IDictionaryStringV1JSONSchemaProps(JsonSerializerOptions options);
    private void IDictionaryStringV1JSONSchemaPropsSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, V1JSONSchemaProps> value);
    public JsonTypeInfo`1<IDictionary`2<string, IList`1<string>>> get_IDictionaryStringIListString();
    private JsonTypeInfo`1<IDictionary`2<string, IList`1<string>>> Create_IDictionaryStringIListString(JsonSerializerOptions options);
    private void IDictionaryStringIListStringSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, IList`1<string>> value);
    public JsonTypeInfo`1<IDictionary`2<string, Nullable`1<DateTime>>> get_IDictionaryStringNullableDateTime();
    private JsonTypeInfo`1<IDictionary`2<string, Nullable`1<DateTime>>> Create_IDictionaryStringNullableDateTime(JsonSerializerOptions options);
    private void IDictionaryStringNullableDateTimeSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, Nullable`1<DateTime>> value);
    public JsonTypeInfo`1<IDictionary`2<string, object>> get_IDictionaryStringObject();
    private JsonTypeInfo`1<IDictionary`2<string, object>> Create_IDictionaryStringObject(JsonSerializerOptions options);
    public JsonTypeInfo`1<IDictionary`2<string, string>> get_IDictionaryStringString();
    private JsonTypeInfo`1<IDictionary`2<string, string>> Create_IDictionaryStringString(JsonSerializerOptions options);
    private void IDictionaryStringStringSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, string> value);
    public JsonTypeInfo`1<IList`1<Corev1EndpointPort>> get_IListCorev1EndpointPort();
    private JsonTypeInfo`1<IList`1<Corev1EndpointPort>> Create_IListCorev1EndpointPort(JsonSerializerOptions options);
    private void IListCorev1EndpointPortSerializeHandler(Utf8JsonWriter writer, IList`1<Corev1EndpointPort> value);
    public JsonTypeInfo`1<IList`1<Corev1Event>> get_IListCorev1Event();
    private JsonTypeInfo`1<IList`1<Corev1Event>> Create_IListCorev1Event(JsonSerializerOptions options);
    private void IListCorev1EventSerializeHandler(Utf8JsonWriter writer, IList`1<Corev1Event> value);
    public JsonTypeInfo`1<IList`1<Discoveryv1EndpointPort>> get_IListDiscoveryv1EndpointPort();
    private JsonTypeInfo`1<IList`1<Discoveryv1EndpointPort>> Create_IListDiscoveryv1EndpointPort(JsonSerializerOptions options);
    private void IListDiscoveryv1EndpointPortSerializeHandler(Utf8JsonWriter writer, IList`1<Discoveryv1EndpointPort> value);
    public JsonTypeInfo`1<IList`1<Eventsv1Event>> get_IListEventsv1Event();
    private JsonTypeInfo`1<IList`1<Eventsv1Event>> Create_IListEventsv1Event(JsonSerializerOptions options);
    private void IListEventsv1EventSerializeHandler(Utf8JsonWriter writer, IList`1<Eventsv1Event> value);
    public JsonTypeInfo`1<IList`1<Flowcontrolv1Subject>> get_IListFlowcontrolv1Subject();
    private JsonTypeInfo`1<IList`1<Flowcontrolv1Subject>> Create_IListFlowcontrolv1Subject(JsonSerializerOptions options);
    private void IListFlowcontrolv1SubjectSerializeHandler(Utf8JsonWriter writer, IList`1<Flowcontrolv1Subject> value);
    public JsonTypeInfo`1<IList`1<Rbacv1Subject>> get_IListRbacv1Subject();
    private JsonTypeInfo`1<IList`1<Rbacv1Subject>> Create_IListRbacv1Subject(JsonSerializerOptions options);
    private void IListRbacv1SubjectSerializeHandler(Utf8JsonWriter writer, IList`1<Rbacv1Subject> value);
    public JsonTypeInfo`1<IList`1<Storagev1TokenRequest>> get_IListStoragev1TokenRequest();
    private JsonTypeInfo`1<IList`1<Storagev1TokenRequest>> Create_IListStoragev1TokenRequest(JsonSerializerOptions options);
    private void IListStoragev1TokenRequestSerializeHandler(Utf8JsonWriter writer, IList`1<Storagev1TokenRequest> value);
    public JsonTypeInfo`1<IList`1<V1alpha1AuditAnnotation>> get_IListV1alpha1AuditAnnotation();
    private JsonTypeInfo`1<IList`1<V1alpha1AuditAnnotation>> Create_IListV1alpha1AuditAnnotation(JsonSerializerOptions options);
    private void IListV1alpha1AuditAnnotationSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1AuditAnnotation> value);
    public JsonTypeInfo`1<IList`1<V1alpha1ClusterTrustBundle>> get_IListV1alpha1ClusterTrustBundle();
    private JsonTypeInfo`1<IList`1<V1alpha1ClusterTrustBundle>> Create_IListV1alpha1ClusterTrustBundle(JsonSerializerOptions options);
    private void IListV1alpha1ClusterTrustBundleSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1ClusterTrustBundle> value);
    public JsonTypeInfo`1<IList`1<V1alpha1ExpressionWarning>> get_IListV1alpha1ExpressionWarning();
    private JsonTypeInfo`1<IList`1<V1alpha1ExpressionWarning>> Create_IListV1alpha1ExpressionWarning(JsonSerializerOptions options);
    private void IListV1alpha1ExpressionWarningSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1ExpressionWarning> value);
    public JsonTypeInfo`1<IList`1<V1alpha1LeaseCandidate>> get_IListV1alpha1LeaseCandidate();
    private JsonTypeInfo`1<IList`1<V1alpha1LeaseCandidate>> Create_IListV1alpha1LeaseCandidate(JsonSerializerOptions options);
    private void IListV1alpha1LeaseCandidateSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1LeaseCandidate> value);
    public JsonTypeInfo`1<IList`1<V1alpha1MatchCondition>> get_IListV1alpha1MatchCondition();
    private JsonTypeInfo`1<IList`1<V1alpha1MatchCondition>> Create_IListV1alpha1MatchCondition(JsonSerializerOptions options);
    private void IListV1alpha1MatchConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1MatchCondition> value);
    public JsonTypeInfo`1<IList`1<V1alpha1MigrationCondition>> get_IListV1alpha1MigrationCondition();
    private JsonTypeInfo`1<IList`1<V1alpha1MigrationCondition>> Create_IListV1alpha1MigrationCondition(JsonSerializerOptions options);
    private void IListV1alpha1MigrationConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1MigrationCondition> value);
    public JsonTypeInfo`1<IList`1<V1alpha1NamedRuleWithOperations>> get_IListV1alpha1NamedRuleWithOperations();
    private JsonTypeInfo`1<IList`1<V1alpha1NamedRuleWithOperations>> Create_IListV1alpha1NamedRuleWithOperations(JsonSerializerOptions options);
    private void IListV1alpha1NamedRuleWithOperationsSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1NamedRuleWithOperations> value);
    public JsonTypeInfo`1<IList`1<V1alpha1ServerStorageVersion>> get_IListV1alpha1ServerStorageVersion();
    private JsonTypeInfo`1<IList`1<V1alpha1ServerStorageVersion>> Create_IListV1alpha1ServerStorageVersion(JsonSerializerOptions options);
    private void IListV1alpha1ServerStorageVersionSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1ServerStorageVersion> value);
    public JsonTypeInfo`1<IList`1<V1alpha1StorageVersion>> get_IListV1alpha1StorageVersion();
    private JsonTypeInfo`1<IList`1<V1alpha1StorageVersion>> Create_IListV1alpha1StorageVersion(JsonSerializerOptions options);
    private void IListV1alpha1StorageVersionSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1StorageVersion> value);
    public JsonTypeInfo`1<IList`1<V1alpha1StorageVersionCondition>> get_IListV1alpha1StorageVersionCondition();
    private JsonTypeInfo`1<IList`1<V1alpha1StorageVersionCondition>> Create_IListV1alpha1StorageVersionCondition(JsonSerializerOptions options);
    private void IListV1alpha1StorageVersionConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1StorageVersionCondition> value);
    public JsonTypeInfo`1<IList`1<V1alpha1StorageVersionMigration>> get_IListV1alpha1StorageVersionMigration();
    private JsonTypeInfo`1<IList`1<V1alpha1StorageVersionMigration>> Create_IListV1alpha1StorageVersionMigration(JsonSerializerOptions options);
    private void IListV1alpha1StorageVersionMigrationSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1StorageVersionMigration> value);
    public JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicy>> get_IListV1alpha1ValidatingAdmissionPolicy();
    private JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicy>> Create_IListV1alpha1ValidatingAdmissionPolicy(JsonSerializerOptions options);
    private void IListV1alpha1ValidatingAdmissionPolicySerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1ValidatingAdmissionPolicy> value);
    public JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicyBinding>> get_IListV1alpha1ValidatingAdmissionPolicyBinding();
    private JsonTypeInfo`1<IList`1<V1alpha1ValidatingAdmissionPolicyBinding>> Create_IListV1alpha1ValidatingAdmissionPolicyBinding(JsonSerializerOptions options);
    private void IListV1alpha1ValidatingAdmissionPolicyBindingSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1ValidatingAdmissionPolicyBinding> value);
    public JsonTypeInfo`1<IList`1<V1alpha1Validation>> get_IListV1alpha1Validation();
    private JsonTypeInfo`1<IList`1<V1alpha1Validation>> Create_IListV1alpha1Validation(JsonSerializerOptions options);
    private void IListV1alpha1ValidationSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1Validation> value);
    public JsonTypeInfo`1<IList`1<V1alpha1Variable>> get_IListV1alpha1Variable();
    private JsonTypeInfo`1<IList`1<V1alpha1Variable>> Create_IListV1alpha1Variable(JsonSerializerOptions options);
    private void IListV1alpha1VariableSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1Variable> value);
    public JsonTypeInfo`1<IList`1<V1alpha1VolumeAttributesClass>> get_IListV1alpha1VolumeAttributesClass();
    private JsonTypeInfo`1<IList`1<V1alpha1VolumeAttributesClass>> Create_IListV1alpha1VolumeAttributesClass(JsonSerializerOptions options);
    private void IListV1alpha1VolumeAttributesClassSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha1VolumeAttributesClass> value);
    public JsonTypeInfo`1<IList`1<V1alpha3Device>> get_IListV1alpha3Device();
    private JsonTypeInfo`1<IList`1<V1alpha3Device>> Create_IListV1alpha3Device(JsonSerializerOptions options);
    private void IListV1alpha3DeviceSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3Device> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceAllocationConfiguration>> get_IListV1alpha3DeviceAllocationConfiguration();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceAllocationConfiguration>> Create_IListV1alpha3DeviceAllocationConfiguration(JsonSerializerOptions options);
    private void IListV1alpha3DeviceAllocationConfigurationSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceAllocationConfiguration> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceClaimConfiguration>> get_IListV1alpha3DeviceClaimConfiguration();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceClaimConfiguration>> Create_IListV1alpha3DeviceClaimConfiguration(JsonSerializerOptions options);
    private void IListV1alpha3DeviceClaimConfigurationSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceClaimConfiguration> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceClass>> get_IListV1alpha3DeviceClass();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceClass>> Create_IListV1alpha3DeviceClass(JsonSerializerOptions options);
    private void IListV1alpha3DeviceClassSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceClass> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceClassConfiguration>> get_IListV1alpha3DeviceClassConfiguration();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceClassConfiguration>> Create_IListV1alpha3DeviceClassConfiguration(JsonSerializerOptions options);
    private void IListV1alpha3DeviceClassConfigurationSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceClassConfiguration> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceConstraint>> get_IListV1alpha3DeviceConstraint();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceConstraint>> Create_IListV1alpha3DeviceConstraint(JsonSerializerOptions options);
    private void IListV1alpha3DeviceConstraintSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceConstraint> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceRequest>> get_IListV1alpha3DeviceRequest();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceRequest>> Create_IListV1alpha3DeviceRequest(JsonSerializerOptions options);
    private void IListV1alpha3DeviceRequestSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceRequest> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceRequestAllocationResult>> get_IListV1alpha3DeviceRequestAllocationResult();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceRequestAllocationResult>> Create_IListV1alpha3DeviceRequestAllocationResult(JsonSerializerOptions options);
    private void IListV1alpha3DeviceRequestAllocationResultSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceRequestAllocationResult> value);
    public JsonTypeInfo`1<IList`1<V1alpha3DeviceSelector>> get_IListV1alpha3DeviceSelector();
    private JsonTypeInfo`1<IList`1<V1alpha3DeviceSelector>> Create_IListV1alpha3DeviceSelector(JsonSerializerOptions options);
    private void IListV1alpha3DeviceSelectorSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3DeviceSelector> value);
    public JsonTypeInfo`1<IList`1<V1alpha3PodSchedulingContext>> get_IListV1alpha3PodSchedulingContext();
    private JsonTypeInfo`1<IList`1<V1alpha3PodSchedulingContext>> Create_IListV1alpha3PodSchedulingContext(JsonSerializerOptions options);
    private void IListV1alpha3PodSchedulingContextSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3PodSchedulingContext> value);
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaim>> get_IListV1alpha3ResourceClaim();
    private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaim>> Create_IListV1alpha3ResourceClaim(JsonSerializerOptions options);
    private void IListV1alpha3ResourceClaimSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3ResourceClaim> value);
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimConsumerReference>> get_IListV1alpha3ResourceClaimConsumerReference();
    private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimConsumerReference>> Create_IListV1alpha3ResourceClaimConsumerReference(JsonSerializerOptions options);
    private void IListV1alpha3ResourceClaimConsumerReferenceSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3ResourceClaimConsumerReference> value);
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimSchedulingStatus>> get_IListV1alpha3ResourceClaimSchedulingStatus();
    private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimSchedulingStatus>> Create_IListV1alpha3ResourceClaimSchedulingStatus(JsonSerializerOptions options);
    private void IListV1alpha3ResourceClaimSchedulingStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3ResourceClaimSchedulingStatus> value);
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimTemplate>> get_IListV1alpha3ResourceClaimTemplate();
    private JsonTypeInfo`1<IList`1<V1alpha3ResourceClaimTemplate>> Create_IListV1alpha3ResourceClaimTemplate(JsonSerializerOptions options);
    private void IListV1alpha3ResourceClaimTemplateSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3ResourceClaimTemplate> value);
    public JsonTypeInfo`1<IList`1<V1alpha3ResourceSlice>> get_IListV1alpha3ResourceSlice();
    private JsonTypeInfo`1<IList`1<V1alpha3ResourceSlice>> Create_IListV1alpha3ResourceSlice(JsonSerializerOptions options);
    private void IListV1alpha3ResourceSliceSerializeHandler(Utf8JsonWriter writer, IList`1<V1alpha3ResourceSlice> value);
    public JsonTypeInfo`1<IList`1<V1APIGroup>> get_IListV1APIGroup();
    private JsonTypeInfo`1<IList`1<V1APIGroup>> Create_IListV1APIGroup(JsonSerializerOptions options);
    private void IListV1APIGroupSerializeHandler(Utf8JsonWriter writer, IList`1<V1APIGroup> value);
    public JsonTypeInfo`1<IList`1<V1APIResource>> get_IListV1APIResource();
    private JsonTypeInfo`1<IList`1<V1APIResource>> Create_IListV1APIResource(JsonSerializerOptions options);
    private void IListV1APIResourceSerializeHandler(Utf8JsonWriter writer, IList`1<V1APIResource> value);
    public JsonTypeInfo`1<IList`1<V1APIService>> get_IListV1APIService();
    private JsonTypeInfo`1<IList`1<V1APIService>> Create_IListV1APIService(JsonSerializerOptions options);
    private void IListV1APIServiceSerializeHandler(Utf8JsonWriter writer, IList`1<V1APIService> value);
    public JsonTypeInfo`1<IList`1<V1APIServiceCondition>> get_IListV1APIServiceCondition();
    private JsonTypeInfo`1<IList`1<V1APIServiceCondition>> Create_IListV1APIServiceCondition(JsonSerializerOptions options);
    private void IListV1APIServiceConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1APIServiceCondition> value);
    public JsonTypeInfo`1<IList`1<V1AttachedVolume>> get_IListV1AttachedVolume();
    private JsonTypeInfo`1<IList`1<V1AttachedVolume>> Create_IListV1AttachedVolume(JsonSerializerOptions options);
    private void IListV1AttachedVolumeSerializeHandler(Utf8JsonWriter writer, IList`1<V1AttachedVolume> value);
    public JsonTypeInfo`1<IList`1<V1AuditAnnotation>> get_IListV1AuditAnnotation();
    private JsonTypeInfo`1<IList`1<V1AuditAnnotation>> Create_IListV1AuditAnnotation(JsonSerializerOptions options);
    private void IListV1AuditAnnotationSerializeHandler(Utf8JsonWriter writer, IList`1<V1AuditAnnotation> value);
    public JsonTypeInfo`1<IList`1<V1beta1AuditAnnotation>> get_IListV1beta1AuditAnnotation();
    private JsonTypeInfo`1<IList`1<V1beta1AuditAnnotation>> Create_IListV1beta1AuditAnnotation(JsonSerializerOptions options);
    private void IListV1beta1AuditAnnotationSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1AuditAnnotation> value);
    public JsonTypeInfo`1<IList`1<V1beta1ExpressionWarning>> get_IListV1beta1ExpressionWarning();
    private JsonTypeInfo`1<IList`1<V1beta1ExpressionWarning>> Create_IListV1beta1ExpressionWarning(JsonSerializerOptions options);
    private void IListV1beta1ExpressionWarningSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1ExpressionWarning> value);
    public JsonTypeInfo`1<IList`1<V1beta1IPAddress>> get_IListV1beta1IPAddress();
    private JsonTypeInfo`1<IList`1<V1beta1IPAddress>> Create_IListV1beta1IPAddress(JsonSerializerOptions options);
    private void IListV1beta1IPAddressSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1IPAddress> value);
    public JsonTypeInfo`1<IList`1<V1beta1MatchCondition>> get_IListV1beta1MatchCondition();
    private JsonTypeInfo`1<IList`1<V1beta1MatchCondition>> Create_IListV1beta1MatchCondition(JsonSerializerOptions options);
    private void IListV1beta1MatchConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1MatchCondition> value);
    public JsonTypeInfo`1<IList`1<V1beta1NamedRuleWithOperations>> get_IListV1beta1NamedRuleWithOperations();
    private JsonTypeInfo`1<IList`1<V1beta1NamedRuleWithOperations>> Create_IListV1beta1NamedRuleWithOperations(JsonSerializerOptions options);
    private void IListV1beta1NamedRuleWithOperationsSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1NamedRuleWithOperations> value);
    public JsonTypeInfo`1<IList`1<V1beta1ServiceCIDR>> get_IListV1beta1ServiceCIDR();
    private JsonTypeInfo`1<IList`1<V1beta1ServiceCIDR>> Create_IListV1beta1ServiceCIDR(JsonSerializerOptions options);
    private void IListV1beta1ServiceCIDRSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1ServiceCIDR> value);
    public JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicy>> get_IListV1beta1ValidatingAdmissionPolicy();
    private JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicy>> Create_IListV1beta1ValidatingAdmissionPolicy(JsonSerializerOptions options);
    private void IListV1beta1ValidatingAdmissionPolicySerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1ValidatingAdmissionPolicy> value);
    public JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicyBinding>> get_IListV1beta1ValidatingAdmissionPolicyBinding();
    private JsonTypeInfo`1<IList`1<V1beta1ValidatingAdmissionPolicyBinding>> Create_IListV1beta1ValidatingAdmissionPolicyBinding(JsonSerializerOptions options);
    private void IListV1beta1ValidatingAdmissionPolicyBindingSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1ValidatingAdmissionPolicyBinding> value);
    public JsonTypeInfo`1<IList`1<V1beta1Validation>> get_IListV1beta1Validation();
    private JsonTypeInfo`1<IList`1<V1beta1Validation>> Create_IListV1beta1Validation(JsonSerializerOptions options);
    private void IListV1beta1ValidationSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1Validation> value);
    public JsonTypeInfo`1<IList`1<V1beta1Variable>> get_IListV1beta1Variable();
    private JsonTypeInfo`1<IList`1<V1beta1Variable>> Create_IListV1beta1Variable(JsonSerializerOptions options);
    private void IListV1beta1VariableSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1Variable> value);
    public JsonTypeInfo`1<IList`1<V1beta1VolumeAttributesClass>> get_IListV1beta1VolumeAttributesClass();
    private JsonTypeInfo`1<IList`1<V1beta1VolumeAttributesClass>> Create_IListV1beta1VolumeAttributesClass(JsonSerializerOptions options);
    private void IListV1beta1VolumeAttributesClassSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta1VolumeAttributesClass> value);
    public JsonTypeInfo`1<IList`1<V1beta3FlowSchema>> get_IListV1beta3FlowSchema();
    private JsonTypeInfo`1<IList`1<V1beta3FlowSchema>> Create_IListV1beta3FlowSchema(JsonSerializerOptions options);
    private void IListV1beta3FlowSchemaSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3FlowSchema> value);
    public JsonTypeInfo`1<IList`1<V1beta3FlowSchemaCondition>> get_IListV1beta3FlowSchemaCondition();
    private JsonTypeInfo`1<IList`1<V1beta3FlowSchemaCondition>> Create_IListV1beta3FlowSchemaCondition(JsonSerializerOptions options);
    private void IListV1beta3FlowSchemaConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3FlowSchemaCondition> value);
    public JsonTypeInfo`1<IList`1<V1beta3NonResourcePolicyRule>> get_IListV1beta3NonResourcePolicyRule();
    private JsonTypeInfo`1<IList`1<V1beta3NonResourcePolicyRule>> Create_IListV1beta3NonResourcePolicyRule(JsonSerializerOptions options);
    private void IListV1beta3NonResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3NonResourcePolicyRule> value);
    public JsonTypeInfo`1<IList`1<V1beta3PolicyRulesWithSubjects>> get_IListV1beta3PolicyRulesWithSubjects();
    private JsonTypeInfo`1<IList`1<V1beta3PolicyRulesWithSubjects>> Create_IListV1beta3PolicyRulesWithSubjects(JsonSerializerOptions options);
    private void IListV1beta3PolicyRulesWithSubjectsSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3PolicyRulesWithSubjects> value);
    public JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfiguration>> get_IListV1beta3PriorityLevelConfiguration();
    private JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfiguration>> Create_IListV1beta3PriorityLevelConfiguration(JsonSerializerOptions options);
    private void IListV1beta3PriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3PriorityLevelConfiguration> value);
    public JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfigurationCondition>> get_IListV1beta3PriorityLevelConfigurationCondition();
    private JsonTypeInfo`1<IList`1<V1beta3PriorityLevelConfigurationCondition>> Create_IListV1beta3PriorityLevelConfigurationCondition(JsonSerializerOptions options);
    private void IListV1beta3PriorityLevelConfigurationConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3PriorityLevelConfigurationCondition> value);
    public JsonTypeInfo`1<IList`1<V1beta3ResourcePolicyRule>> get_IListV1beta3ResourcePolicyRule();
    private JsonTypeInfo`1<IList`1<V1beta3ResourcePolicyRule>> Create_IListV1beta3ResourcePolicyRule(JsonSerializerOptions options);
    private void IListV1beta3ResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3ResourcePolicyRule> value);
    public JsonTypeInfo`1<IList`1<V1beta3Subject>> get_IListV1beta3Subject();
    private JsonTypeInfo`1<IList`1<V1beta3Subject>> Create_IListV1beta3Subject(JsonSerializerOptions options);
    private void IListV1beta3SubjectSerializeHandler(Utf8JsonWriter writer, IList`1<V1beta3Subject> value);
    public JsonTypeInfo`1<IList`1<V1CertificateSigningRequest>> get_IListV1CertificateSigningRequest();
    private JsonTypeInfo`1<IList`1<V1CertificateSigningRequest>> Create_IListV1CertificateSigningRequest(JsonSerializerOptions options);
    private void IListV1CertificateSigningRequestSerializeHandler(Utf8JsonWriter writer, IList`1<V1CertificateSigningRequest> value);
    public JsonTypeInfo`1<IList`1<V1CertificateSigningRequestCondition>> get_IListV1CertificateSigningRequestCondition();
    private JsonTypeInfo`1<IList`1<V1CertificateSigningRequestCondition>> Create_IListV1CertificateSigningRequestCondition(JsonSerializerOptions options);
    private void IListV1CertificateSigningRequestConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1CertificateSigningRequestCondition> value);
    public JsonTypeInfo`1<IList`1<V1ClusterRole>> get_IListV1ClusterRole();
    private JsonTypeInfo`1<IList`1<V1ClusterRole>> Create_IListV1ClusterRole(JsonSerializerOptions options);
    private void IListV1ClusterRoleSerializeHandler(Utf8JsonWriter writer, IList`1<V1ClusterRole> value);
    public JsonTypeInfo`1<IList`1<V1ClusterRoleBinding>> get_IListV1ClusterRoleBinding();
    private JsonTypeInfo`1<IList`1<V1ClusterRoleBinding>> Create_IListV1ClusterRoleBinding(JsonSerializerOptions options);
    private void IListV1ClusterRoleBindingSerializeHandler(Utf8JsonWriter writer, IList`1<V1ClusterRoleBinding> value);
    public JsonTypeInfo`1<IList`1<V1ComponentCondition>> get_IListV1ComponentCondition();
    private JsonTypeInfo`1<IList`1<V1ComponentCondition>> Create_IListV1ComponentCondition(JsonSerializerOptions options);
    private void IListV1ComponentConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1ComponentCondition> value);
    public JsonTypeInfo`1<IList`1<V1ComponentStatus>> get_IListV1ComponentStatus();
    private JsonTypeInfo`1<IList`1<V1ComponentStatus>> Create_IListV1ComponentStatus(JsonSerializerOptions options);
    private void IListV1ComponentStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1ComponentStatus> value);
    public JsonTypeInfo`1<IList`1<V1Condition>> get_IListV1Condition();
    private JsonTypeInfo`1<IList`1<V1Condition>> Create_IListV1Condition(JsonSerializerOptions options);
    private void IListV1ConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1Condition> value);
    public JsonTypeInfo`1<IList`1<V1ConfigMap>> get_IListV1ConfigMap();
    private JsonTypeInfo`1<IList`1<V1ConfigMap>> Create_IListV1ConfigMap(JsonSerializerOptions options);
    private void IListV1ConfigMapSerializeHandler(Utf8JsonWriter writer, IList`1<V1ConfigMap> value);
    public JsonTypeInfo`1<IList`1<V1Container>> get_IListV1Container();
    private JsonTypeInfo`1<IList`1<V1Container>> Create_IListV1Container(JsonSerializerOptions options);
    private void IListV1ContainerSerializeHandler(Utf8JsonWriter writer, IList`1<V1Container> value);
    public JsonTypeInfo`1<IList`1<V1ContainerImage>> get_IListV1ContainerImage();
    private JsonTypeInfo`1<IList`1<V1ContainerImage>> Create_IListV1ContainerImage(JsonSerializerOptions options);
    private void IListV1ContainerImageSerializeHandler(Utf8JsonWriter writer, IList`1<V1ContainerImage> value);
    public JsonTypeInfo`1<IList`1<V1ContainerPort>> get_IListV1ContainerPort();
    private JsonTypeInfo`1<IList`1<V1ContainerPort>> Create_IListV1ContainerPort(JsonSerializerOptions options);
    private void IListV1ContainerPortSerializeHandler(Utf8JsonWriter writer, IList`1<V1ContainerPort> value);
    public JsonTypeInfo`1<IList`1<V1ContainerResizePolicy>> get_IListV1ContainerResizePolicy();
    private JsonTypeInfo`1<IList`1<V1ContainerResizePolicy>> Create_IListV1ContainerResizePolicy(JsonSerializerOptions options);
    private void IListV1ContainerResizePolicySerializeHandler(Utf8JsonWriter writer, IList`1<V1ContainerResizePolicy> value);
    public JsonTypeInfo`1<IList`1<V1ContainerStatus>> get_IListV1ContainerStatus();
    private JsonTypeInfo`1<IList`1<V1ContainerStatus>> Create_IListV1ContainerStatus(JsonSerializerOptions options);
    private void IListV1ContainerStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1ContainerStatus> value);
    public JsonTypeInfo`1<IList`1<V1ControllerRevision>> get_IListV1ControllerRevision();
    private JsonTypeInfo`1<IList`1<V1ControllerRevision>> Create_IListV1ControllerRevision(JsonSerializerOptions options);
    private void IListV1ControllerRevisionSerializeHandler(Utf8JsonWriter writer, IList`1<V1ControllerRevision> value);
    public JsonTypeInfo`1<IList`1<V1CronJob>> get_IListV1CronJob();
    private JsonTypeInfo`1<IList`1<V1CronJob>> Create_IListV1CronJob(JsonSerializerOptions options);
    private void IListV1CronJobSerializeHandler(Utf8JsonWriter writer, IList`1<V1CronJob> value);
    public JsonTypeInfo`1<IList`1<V1CSIDriver>> get_IListV1CSIDriver();
    private JsonTypeInfo`1<IList`1<V1CSIDriver>> Create_IListV1CSIDriver(JsonSerializerOptions options);
    private void IListV1CSIDriverSerializeHandler(Utf8JsonWriter writer, IList`1<V1CSIDriver> value);
    public JsonTypeInfo`1<IList`1<V1CSINode>> get_IListV1CSINode();
    private JsonTypeInfo`1<IList`1<V1CSINode>> Create_IListV1CSINode(JsonSerializerOptions options);
    private void IListV1CSINodeSerializeHandler(Utf8JsonWriter writer, IList`1<V1CSINode> value);
    public JsonTypeInfo`1<IList`1<V1CSINodeDriver>> get_IListV1CSINodeDriver();
    private JsonTypeInfo`1<IList`1<V1CSINodeDriver>> Create_IListV1CSINodeDriver(JsonSerializerOptions options);
    private void IListV1CSINodeDriverSerializeHandler(Utf8JsonWriter writer, IList`1<V1CSINodeDriver> value);
    public JsonTypeInfo`1<IList`1<V1CSIStorageCapacity>> get_IListV1CSIStorageCapacity();
    private JsonTypeInfo`1<IList`1<V1CSIStorageCapacity>> Create_IListV1CSIStorageCapacity(JsonSerializerOptions options);
    private void IListV1CSIStorageCapacitySerializeHandler(Utf8JsonWriter writer, IList`1<V1CSIStorageCapacity> value);
    public JsonTypeInfo`1<IList`1<V1CustomResourceColumnDefinition>> get_IListV1CustomResourceColumnDefinition();
    private JsonTypeInfo`1<IList`1<V1CustomResourceColumnDefinition>> Create_IListV1CustomResourceColumnDefinition(JsonSerializerOptions options);
    private void IListV1CustomResourceColumnDefinitionSerializeHandler(Utf8JsonWriter writer, IList`1<V1CustomResourceColumnDefinition> value);
    public JsonTypeInfo`1<IList`1<V1CustomResourceDefinition>> get_IListV1CustomResourceDefinition();
    private JsonTypeInfo`1<IList`1<V1CustomResourceDefinition>> Create_IListV1CustomResourceDefinition(JsonSerializerOptions options);
    private void IListV1CustomResourceDefinitionSerializeHandler(Utf8JsonWriter writer, IList`1<V1CustomResourceDefinition> value);
    public JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionCondition>> get_IListV1CustomResourceDefinitionCondition();
    private JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionCondition>> Create_IListV1CustomResourceDefinitionCondition(JsonSerializerOptions options);
    private void IListV1CustomResourceDefinitionConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1CustomResourceDefinitionCondition> value);
    public JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionVersion>> get_IListV1CustomResourceDefinitionVersion();
    private JsonTypeInfo`1<IList`1<V1CustomResourceDefinitionVersion>> Create_IListV1CustomResourceDefinitionVersion(JsonSerializerOptions options);
    private void IListV1CustomResourceDefinitionVersionSerializeHandler(Utf8JsonWriter writer, IList`1<V1CustomResourceDefinitionVersion> value);
    public JsonTypeInfo`1<IList`1<V1DaemonSet>> get_IListV1DaemonSet();
    private JsonTypeInfo`1<IList`1<V1DaemonSet>> Create_IListV1DaemonSet(JsonSerializerOptions options);
    private void IListV1DaemonSetSerializeHandler(Utf8JsonWriter writer, IList`1<V1DaemonSet> value);
    public JsonTypeInfo`1<IList`1<V1DaemonSetCondition>> get_IListV1DaemonSetCondition();
    private JsonTypeInfo`1<IList`1<V1DaemonSetCondition>> Create_IListV1DaemonSetCondition(JsonSerializerOptions options);
    private void IListV1DaemonSetConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1DaemonSetCondition> value);
    public JsonTypeInfo`1<IList`1<V1Deployment>> get_IListV1Deployment();
    private JsonTypeInfo`1<IList`1<V1Deployment>> Create_IListV1Deployment(JsonSerializerOptions options);
    private void IListV1DeploymentSerializeHandler(Utf8JsonWriter writer, IList`1<V1Deployment> value);
    public JsonTypeInfo`1<IList`1<V1DeploymentCondition>> get_IListV1DeploymentCondition();
    private JsonTypeInfo`1<IList`1<V1DeploymentCondition>> Create_IListV1DeploymentCondition(JsonSerializerOptions options);
    private void IListV1DeploymentConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1DeploymentCondition> value);
    public JsonTypeInfo`1<IList`1<V1DownwardAPIVolumeFile>> get_IListV1DownwardAPIVolumeFile();
    private JsonTypeInfo`1<IList`1<V1DownwardAPIVolumeFile>> Create_IListV1DownwardAPIVolumeFile(JsonSerializerOptions options);
    private void IListV1DownwardAPIVolumeFileSerializeHandler(Utf8JsonWriter writer, IList`1<V1DownwardAPIVolumeFile> value);
    public JsonTypeInfo`1<IList`1<V1Endpoint>> get_IListV1Endpoint();
    private JsonTypeInfo`1<IList`1<V1Endpoint>> Create_IListV1Endpoint(JsonSerializerOptions options);
    private void IListV1EndpointSerializeHandler(Utf8JsonWriter writer, IList`1<V1Endpoint> value);
    public JsonTypeInfo`1<IList`1<V1EndpointAddress>> get_IListV1EndpointAddress();
    private JsonTypeInfo`1<IList`1<V1EndpointAddress>> Create_IListV1EndpointAddress(JsonSerializerOptions options);
    private void IListV1EndpointAddressSerializeHandler(Utf8JsonWriter writer, IList`1<V1EndpointAddress> value);
    public JsonTypeInfo`1<IList`1<V1Endpoints>> get_IListV1Endpoints();
    private JsonTypeInfo`1<IList`1<V1Endpoints>> Create_IListV1Endpoints(JsonSerializerOptions options);
    private void IListV1EndpointsSerializeHandler(Utf8JsonWriter writer, IList`1<V1Endpoints> value);
    public JsonTypeInfo`1<IList`1<V1EndpointSlice>> get_IListV1EndpointSlice();
    private JsonTypeInfo`1<IList`1<V1EndpointSlice>> Create_IListV1EndpointSlice(JsonSerializerOptions options);
    private void IListV1EndpointSliceSerializeHandler(Utf8JsonWriter writer, IList`1<V1EndpointSlice> value);
    public JsonTypeInfo`1<IList`1<V1EndpointSubset>> get_IListV1EndpointSubset();
    private JsonTypeInfo`1<IList`1<V1EndpointSubset>> Create_IListV1EndpointSubset(JsonSerializerOptions options);
    private void IListV1EndpointSubsetSerializeHandler(Utf8JsonWriter writer, IList`1<V1EndpointSubset> value);
    public JsonTypeInfo`1<IList`1<V1EnvFromSource>> get_IListV1EnvFromSource();
    private JsonTypeInfo`1<IList`1<V1EnvFromSource>> Create_IListV1EnvFromSource(JsonSerializerOptions options);
    private void IListV1EnvFromSourceSerializeHandler(Utf8JsonWriter writer, IList`1<V1EnvFromSource> value);
    public JsonTypeInfo`1<IList`1<V1EnvVar>> get_IListV1EnvVar();
    private JsonTypeInfo`1<IList`1<V1EnvVar>> Create_IListV1EnvVar(JsonSerializerOptions options);
    private void IListV1EnvVarSerializeHandler(Utf8JsonWriter writer, IList`1<V1EnvVar> value);
    public JsonTypeInfo`1<IList`1<V1EphemeralContainer>> get_IListV1EphemeralContainer();
    private JsonTypeInfo`1<IList`1<V1EphemeralContainer>> Create_IListV1EphemeralContainer(JsonSerializerOptions options);
    private void IListV1EphemeralContainerSerializeHandler(Utf8JsonWriter writer, IList`1<V1EphemeralContainer> value);
    public JsonTypeInfo`1<IList`1<V1ExpressionWarning>> get_IListV1ExpressionWarning();
    private JsonTypeInfo`1<IList`1<V1ExpressionWarning>> Create_IListV1ExpressionWarning(JsonSerializerOptions options);
    private void IListV1ExpressionWarningSerializeHandler(Utf8JsonWriter writer, IList`1<V1ExpressionWarning> value);
    public JsonTypeInfo`1<IList`1<V1FieldSelectorRequirement>> get_IListV1FieldSelectorRequirement();
    private JsonTypeInfo`1<IList`1<V1FieldSelectorRequirement>> Create_IListV1FieldSelectorRequirement(JsonSerializerOptions options);
    private void IListV1FieldSelectorRequirementSerializeHandler(Utf8JsonWriter writer, IList`1<V1FieldSelectorRequirement> value);
    public JsonTypeInfo`1<IList`1<V1FlowSchema>> get_IListV1FlowSchema();
    private JsonTypeInfo`1<IList`1<V1FlowSchema>> Create_IListV1FlowSchema(JsonSerializerOptions options);
    private void IListV1FlowSchemaSerializeHandler(Utf8JsonWriter writer, IList`1<V1FlowSchema> value);
    public JsonTypeInfo`1<IList`1<V1FlowSchemaCondition>> get_IListV1FlowSchemaCondition();
    private JsonTypeInfo`1<IList`1<V1FlowSchemaCondition>> Create_IListV1FlowSchemaCondition(JsonSerializerOptions options);
    private void IListV1FlowSchemaConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1FlowSchemaCondition> value);
    public JsonTypeInfo`1<IList`1<V1ForZone>> get_IListV1ForZone();
    private JsonTypeInfo`1<IList`1<V1ForZone>> Create_IListV1ForZone(JsonSerializerOptions options);
    private void IListV1ForZoneSerializeHandler(Utf8JsonWriter writer, IList`1<V1ForZone> value);
    public JsonTypeInfo`1<IList`1<V1GroupVersionForDiscovery>> get_IListV1GroupVersionForDiscovery();
    private JsonTypeInfo`1<IList`1<V1GroupVersionForDiscovery>> Create_IListV1GroupVersionForDiscovery(JsonSerializerOptions options);
    private void IListV1GroupVersionForDiscoverySerializeHandler(Utf8JsonWriter writer, IList`1<V1GroupVersionForDiscovery> value);
    public JsonTypeInfo`1<IList`1<V1HorizontalPodAutoscaler>> get_IListV1HorizontalPodAutoscaler();
    private JsonTypeInfo`1<IList`1<V1HorizontalPodAutoscaler>> Create_IListV1HorizontalPodAutoscaler(JsonSerializerOptions options);
    private void IListV1HorizontalPodAutoscalerSerializeHandler(Utf8JsonWriter writer, IList`1<V1HorizontalPodAutoscaler> value);
    public JsonTypeInfo`1<IList`1<V1HostAlias>> get_IListV1HostAlias();
    private JsonTypeInfo`1<IList`1<V1HostAlias>> Create_IListV1HostAlias(JsonSerializerOptions options);
    private void IListV1HostAliasSerializeHandler(Utf8JsonWriter writer, IList`1<V1HostAlias> value);
    public JsonTypeInfo`1<IList`1<V1HostIP>> get_IListV1HostIP();
    private JsonTypeInfo`1<IList`1<V1HostIP>> Create_IListV1HostIP(JsonSerializerOptions options);
    private void IListV1HostIPSerializeHandler(Utf8JsonWriter writer, IList`1<V1HostIP> value);
    public JsonTypeInfo`1<IList`1<V1HTTPHeader>> get_IListV1HTTPHeader();
    private JsonTypeInfo`1<IList`1<V1HTTPHeader>> Create_IListV1HTTPHeader(JsonSerializerOptions options);
    private void IListV1HTTPHeaderSerializeHandler(Utf8JsonWriter writer, IList`1<V1HTTPHeader> value);
    public JsonTypeInfo`1<IList`1<V1HTTPIngressPath>> get_IListV1HTTPIngressPath();
    private JsonTypeInfo`1<IList`1<V1HTTPIngressPath>> Create_IListV1HTTPIngressPath(JsonSerializerOptions options);
    private void IListV1HTTPIngressPathSerializeHandler(Utf8JsonWriter writer, IList`1<V1HTTPIngressPath> value);
    public JsonTypeInfo`1<IList`1<V1Ingress>> get_IListV1Ingress();
    private JsonTypeInfo`1<IList`1<V1Ingress>> Create_IListV1Ingress(JsonSerializerOptions options);
    private void IListV1IngressSerializeHandler(Utf8JsonWriter writer, IList`1<V1Ingress> value);
    public JsonTypeInfo`1<IList`1<V1IngressClass>> get_IListV1IngressClass();
    private JsonTypeInfo`1<IList`1<V1IngressClass>> Create_IListV1IngressClass(JsonSerializerOptions options);
    private void IListV1IngressClassSerializeHandler(Utf8JsonWriter writer, IList`1<V1IngressClass> value);
    public JsonTypeInfo`1<IList`1<V1IngressLoadBalancerIngress>> get_IListV1IngressLoadBalancerIngress();
    private JsonTypeInfo`1<IList`1<V1IngressLoadBalancerIngress>> Create_IListV1IngressLoadBalancerIngress(JsonSerializerOptions options);
    private void IListV1IngressLoadBalancerIngressSerializeHandler(Utf8JsonWriter writer, IList`1<V1IngressLoadBalancerIngress> value);
    public JsonTypeInfo`1<IList`1<V1IngressPortStatus>> get_IListV1IngressPortStatus();
    private JsonTypeInfo`1<IList`1<V1IngressPortStatus>> Create_IListV1IngressPortStatus(JsonSerializerOptions options);
    private void IListV1IngressPortStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1IngressPortStatus> value);
    public JsonTypeInfo`1<IList`1<V1IngressRule>> get_IListV1IngressRule();
    private JsonTypeInfo`1<IList`1<V1IngressRule>> Create_IListV1IngressRule(JsonSerializerOptions options);
    private void IListV1IngressRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1IngressRule> value);
    public JsonTypeInfo`1<IList`1<V1IngressTLS>> get_IListV1IngressTLS();
    private JsonTypeInfo`1<IList`1<V1IngressTLS>> Create_IListV1IngressTLS(JsonSerializerOptions options);
    private void IListV1IngressTLSSerializeHandler(Utf8JsonWriter writer, IList`1<V1IngressTLS> value);
    public JsonTypeInfo`1<IList`1<V1Job>> get_IListV1Job();
    private JsonTypeInfo`1<IList`1<V1Job>> Create_IListV1Job(JsonSerializerOptions options);
    private void IListV1JobSerializeHandler(Utf8JsonWriter writer, IList`1<V1Job> value);
    public JsonTypeInfo`1<IList`1<V1JobCondition>> get_IListV1JobCondition();
    private JsonTypeInfo`1<IList`1<V1JobCondition>> Create_IListV1JobCondition(JsonSerializerOptions options);
    private void IListV1JobConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1JobCondition> value);
    public JsonTypeInfo`1<IList`1<V1JSONSchemaProps>> get_IListV1JSONSchemaProps();
    private JsonTypeInfo`1<IList`1<V1JSONSchemaProps>> Create_IListV1JSONSchemaProps(JsonSerializerOptions options);
    private void IListV1JSONSchemaPropsSerializeHandler(Utf8JsonWriter writer, IList`1<V1JSONSchemaProps> value);
    public JsonTypeInfo`1<IList`1<V1KeyToPath>> get_IListV1KeyToPath();
    private JsonTypeInfo`1<IList`1<V1KeyToPath>> Create_IListV1KeyToPath(JsonSerializerOptions options);
    private void IListV1KeyToPathSerializeHandler(Utf8JsonWriter writer, IList`1<V1KeyToPath> value);
    public JsonTypeInfo`1<IList`1<V1LabelSelector>> get_IListV1LabelSelector();
    private JsonTypeInfo`1<IList`1<V1LabelSelector>> Create_IListV1LabelSelector(JsonSerializerOptions options);
    private void IListV1LabelSelectorSerializeHandler(Utf8JsonWriter writer, IList`1<V1LabelSelector> value);
    public JsonTypeInfo`1<IList`1<V1LabelSelectorRequirement>> get_IListV1LabelSelectorRequirement();
    private JsonTypeInfo`1<IList`1<V1LabelSelectorRequirement>> Create_IListV1LabelSelectorRequirement(JsonSerializerOptions options);
    private void IListV1LabelSelectorRequirementSerializeHandler(Utf8JsonWriter writer, IList`1<V1LabelSelectorRequirement> value);
    public JsonTypeInfo`1<IList`1<V1Lease>> get_IListV1Lease();
    private JsonTypeInfo`1<IList`1<V1Lease>> Create_IListV1Lease(JsonSerializerOptions options);
    private void IListV1LeaseSerializeHandler(Utf8JsonWriter writer, IList`1<V1Lease> value);
    public JsonTypeInfo`1<IList`1<V1LimitRange>> get_IListV1LimitRange();
    private JsonTypeInfo`1<IList`1<V1LimitRange>> Create_IListV1LimitRange(JsonSerializerOptions options);
    private void IListV1LimitRangeSerializeHandler(Utf8JsonWriter writer, IList`1<V1LimitRange> value);
    public JsonTypeInfo`1<IList`1<V1LimitRangeItem>> get_IListV1LimitRangeItem();
    private JsonTypeInfo`1<IList`1<V1LimitRangeItem>> Create_IListV1LimitRangeItem(JsonSerializerOptions options);
    private void IListV1LimitRangeItemSerializeHandler(Utf8JsonWriter writer, IList`1<V1LimitRangeItem> value);
    public JsonTypeInfo`1<IList`1<V1LoadBalancerIngress>> get_IListV1LoadBalancerIngress();
    private JsonTypeInfo`1<IList`1<V1LoadBalancerIngress>> Create_IListV1LoadBalancerIngress(JsonSerializerOptions options);
    private void IListV1LoadBalancerIngressSerializeHandler(Utf8JsonWriter writer, IList`1<V1LoadBalancerIngress> value);
    public JsonTypeInfo`1<IList`1<V1LocalObjectReference>> get_IListV1LocalObjectReference();
    private JsonTypeInfo`1<IList`1<V1LocalObjectReference>> Create_IListV1LocalObjectReference(JsonSerializerOptions options);
    private void IListV1LocalObjectReferenceSerializeHandler(Utf8JsonWriter writer, IList`1<V1LocalObjectReference> value);
    public JsonTypeInfo`1<IList`1<V1ManagedFieldsEntry>> get_IListV1ManagedFieldsEntry();
    private JsonTypeInfo`1<IList`1<V1ManagedFieldsEntry>> Create_IListV1ManagedFieldsEntry(JsonSerializerOptions options);
    private void IListV1ManagedFieldsEntrySerializeHandler(Utf8JsonWriter writer, IList`1<V1ManagedFieldsEntry> value);
    public JsonTypeInfo`1<IList`1<V1MatchCondition>> get_IListV1MatchCondition();
    private JsonTypeInfo`1<IList`1<V1MatchCondition>> Create_IListV1MatchCondition(JsonSerializerOptions options);
    private void IListV1MatchConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1MatchCondition> value);
    public JsonTypeInfo`1<IList`1<V1MutatingWebhook>> get_IListV1MutatingWebhook();
    private JsonTypeInfo`1<IList`1<V1MutatingWebhook>> Create_IListV1MutatingWebhook(JsonSerializerOptions options);
    private void IListV1MutatingWebhookSerializeHandler(Utf8JsonWriter writer, IList`1<V1MutatingWebhook> value);
    public JsonTypeInfo`1<IList`1<V1MutatingWebhookConfiguration>> get_IListV1MutatingWebhookConfiguration();
    private JsonTypeInfo`1<IList`1<V1MutatingWebhookConfiguration>> Create_IListV1MutatingWebhookConfiguration(JsonSerializerOptions options);
    private void IListV1MutatingWebhookConfigurationSerializeHandler(Utf8JsonWriter writer, IList`1<V1MutatingWebhookConfiguration> value);
    public JsonTypeInfo`1<IList`1<V1NamedRuleWithOperations>> get_IListV1NamedRuleWithOperations();
    private JsonTypeInfo`1<IList`1<V1NamedRuleWithOperations>> Create_IListV1NamedRuleWithOperations(JsonSerializerOptions options);
    private void IListV1NamedRuleWithOperationsSerializeHandler(Utf8JsonWriter writer, IList`1<V1NamedRuleWithOperations> value);
    public JsonTypeInfo`1<IList`1<V1Namespace>> get_IListV1Namespace();
    private JsonTypeInfo`1<IList`1<V1Namespace>> Create_IListV1Namespace(JsonSerializerOptions options);
    private void IListV1NamespaceSerializeHandler(Utf8JsonWriter writer, IList`1<V1Namespace> value);
    public JsonTypeInfo`1<IList`1<V1NamespaceCondition>> get_IListV1NamespaceCondition();
    private JsonTypeInfo`1<IList`1<V1NamespaceCondition>> Create_IListV1NamespaceCondition(JsonSerializerOptions options);
    private void IListV1NamespaceConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1NamespaceCondition> value);
    public JsonTypeInfo`1<IList`1<V1NetworkPolicy>> get_IListV1NetworkPolicy();
    private JsonTypeInfo`1<IList`1<V1NetworkPolicy>> Create_IListV1NetworkPolicy(JsonSerializerOptions options);
    private void IListV1NetworkPolicySerializeHandler(Utf8JsonWriter writer, IList`1<V1NetworkPolicy> value);
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyEgressRule>> get_IListV1NetworkPolicyEgressRule();
    private JsonTypeInfo`1<IList`1<V1NetworkPolicyEgressRule>> Create_IListV1NetworkPolicyEgressRule(JsonSerializerOptions options);
    private void IListV1NetworkPolicyEgressRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1NetworkPolicyEgressRule> value);
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyIngressRule>> get_IListV1NetworkPolicyIngressRule();
    private JsonTypeInfo`1<IList`1<V1NetworkPolicyIngressRule>> Create_IListV1NetworkPolicyIngressRule(JsonSerializerOptions options);
    private void IListV1NetworkPolicyIngressRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1NetworkPolicyIngressRule> value);
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyPeer>> get_IListV1NetworkPolicyPeer();
    private JsonTypeInfo`1<IList`1<V1NetworkPolicyPeer>> Create_IListV1NetworkPolicyPeer(JsonSerializerOptions options);
    private void IListV1NetworkPolicyPeerSerializeHandler(Utf8JsonWriter writer, IList`1<V1NetworkPolicyPeer> value);
    public JsonTypeInfo`1<IList`1<V1NetworkPolicyPort>> get_IListV1NetworkPolicyPort();
    private JsonTypeInfo`1<IList`1<V1NetworkPolicyPort>> Create_IListV1NetworkPolicyPort(JsonSerializerOptions options);
    private void IListV1NetworkPolicyPortSerializeHandler(Utf8JsonWriter writer, IList`1<V1NetworkPolicyPort> value);
    public JsonTypeInfo`1<IList`1<V1Node>> get_IListV1Node();
    private JsonTypeInfo`1<IList`1<V1Node>> Create_IListV1Node(JsonSerializerOptions options);
    private void IListV1NodeSerializeHandler(Utf8JsonWriter writer, IList`1<V1Node> value);
    public JsonTypeInfo`1<IList`1<V1NodeAddress>> get_IListV1NodeAddress();
    private JsonTypeInfo`1<IList`1<V1NodeAddress>> Create_IListV1NodeAddress(JsonSerializerOptions options);
    private void IListV1NodeAddressSerializeHandler(Utf8JsonWriter writer, IList`1<V1NodeAddress> value);
    public JsonTypeInfo`1<IList`1<V1NodeCondition>> get_IListV1NodeCondition();
    private JsonTypeInfo`1<IList`1<V1NodeCondition>> Create_IListV1NodeCondition(JsonSerializerOptions options);
    private void IListV1NodeConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1NodeCondition> value);
    public JsonTypeInfo`1<IList`1<V1NodeRuntimeHandler>> get_IListV1NodeRuntimeHandler();
    private JsonTypeInfo`1<IList`1<V1NodeRuntimeHandler>> Create_IListV1NodeRuntimeHandler(JsonSerializerOptions options);
    private void IListV1NodeRuntimeHandlerSerializeHandler(Utf8JsonWriter writer, IList`1<V1NodeRuntimeHandler> value);
    public JsonTypeInfo`1<IList`1<V1NodeSelectorRequirement>> get_IListV1NodeSelectorRequirement();
    private JsonTypeInfo`1<IList`1<V1NodeSelectorRequirement>> Create_IListV1NodeSelectorRequirement(JsonSerializerOptions options);
    private void IListV1NodeSelectorRequirementSerializeHandler(Utf8JsonWriter writer, IList`1<V1NodeSelectorRequirement> value);
    public JsonTypeInfo`1<IList`1<V1NodeSelectorTerm>> get_IListV1NodeSelectorTerm();
    private JsonTypeInfo`1<IList`1<V1NodeSelectorTerm>> Create_IListV1NodeSelectorTerm(JsonSerializerOptions options);
    private void IListV1NodeSelectorTermSerializeHandler(Utf8JsonWriter writer, IList`1<V1NodeSelectorTerm> value);
    public JsonTypeInfo`1<IList`1<V1NonResourcePolicyRule>> get_IListV1NonResourcePolicyRule();
    private JsonTypeInfo`1<IList`1<V1NonResourcePolicyRule>> Create_IListV1NonResourcePolicyRule(JsonSerializerOptions options);
    private void IListV1NonResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1NonResourcePolicyRule> value);
    public JsonTypeInfo`1<IList`1<V1NonResourceRule>> get_IListV1NonResourceRule();
    private JsonTypeInfo`1<IList`1<V1NonResourceRule>> Create_IListV1NonResourceRule(JsonSerializerOptions options);
    private void IListV1NonResourceRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1NonResourceRule> value);
    public JsonTypeInfo`1<IList`1<V1ObjectReference>> get_IListV1ObjectReference();
    private JsonTypeInfo`1<IList`1<V1ObjectReference>> Create_IListV1ObjectReference(JsonSerializerOptions options);
    private void IListV1ObjectReferenceSerializeHandler(Utf8JsonWriter writer, IList`1<V1ObjectReference> value);
    public JsonTypeInfo`1<IList`1<V1OwnerReference>> get_IListV1OwnerReference();
    private JsonTypeInfo`1<IList`1<V1OwnerReference>> Create_IListV1OwnerReference(JsonSerializerOptions options);
    private void IListV1OwnerReferenceSerializeHandler(Utf8JsonWriter writer, IList`1<V1OwnerReference> value);
    public JsonTypeInfo`1<IList`1<V1PersistentVolume>> get_IListV1PersistentVolume();
    private JsonTypeInfo`1<IList`1<V1PersistentVolume>> Create_IListV1PersistentVolume(JsonSerializerOptions options);
    private void IListV1PersistentVolumeSerializeHandler(Utf8JsonWriter writer, IList`1<V1PersistentVolume> value);
    public JsonTypeInfo`1<IList`1<V1PersistentVolumeClaim>> get_IListV1PersistentVolumeClaim();
    private JsonTypeInfo`1<IList`1<V1PersistentVolumeClaim>> Create_IListV1PersistentVolumeClaim(JsonSerializerOptions options);
    private void IListV1PersistentVolumeClaimSerializeHandler(Utf8JsonWriter writer, IList`1<V1PersistentVolumeClaim> value);
    public JsonTypeInfo`1<IList`1<V1PersistentVolumeClaimCondition>> get_IListV1PersistentVolumeClaimCondition();
    private JsonTypeInfo`1<IList`1<V1PersistentVolumeClaimCondition>> Create_IListV1PersistentVolumeClaimCondition(JsonSerializerOptions options);
    private void IListV1PersistentVolumeClaimConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1PersistentVolumeClaimCondition> value);
    public JsonTypeInfo`1<IList`1<V1Pod>> get_IListV1Pod();
    private JsonTypeInfo`1<IList`1<V1Pod>> Create_IListV1Pod(JsonSerializerOptions options);
    private void IListV1PodSerializeHandler(Utf8JsonWriter writer, IList`1<V1Pod> value);
    public JsonTypeInfo`1<IList`1<V1PodAffinityTerm>> get_IListV1PodAffinityTerm();
    private JsonTypeInfo`1<IList`1<V1PodAffinityTerm>> Create_IListV1PodAffinityTerm(JsonSerializerOptions options);
    private void IListV1PodAffinityTermSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodAffinityTerm> value);
    public JsonTypeInfo`1<IList`1<V1PodCondition>> get_IListV1PodCondition();
    private JsonTypeInfo`1<IList`1<V1PodCondition>> Create_IListV1PodCondition(JsonSerializerOptions options);
    private void IListV1PodConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodCondition> value);
    public JsonTypeInfo`1<IList`1<V1PodDisruptionBudget>> get_IListV1PodDisruptionBudget();
    private JsonTypeInfo`1<IList`1<V1PodDisruptionBudget>> Create_IListV1PodDisruptionBudget(JsonSerializerOptions options);
    private void IListV1PodDisruptionBudgetSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodDisruptionBudget> value);
    public JsonTypeInfo`1<IList`1<V1PodDNSConfigOption>> get_IListV1PodDNSConfigOption();
    private JsonTypeInfo`1<IList`1<V1PodDNSConfigOption>> Create_IListV1PodDNSConfigOption(JsonSerializerOptions options);
    private void IListV1PodDNSConfigOptionSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodDNSConfigOption> value);
    public JsonTypeInfo`1<IList`1<V1PodFailurePolicyOnPodConditionsPattern>> get_IListV1PodFailurePolicyOnPodConditionsPattern();
    private JsonTypeInfo`1<IList`1<V1PodFailurePolicyOnPodConditionsPattern>> Create_IListV1PodFailurePolicyOnPodConditionsPattern(JsonSerializerOptions options);
    private void IListV1PodFailurePolicyOnPodConditionsPatternSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodFailurePolicyOnPodConditionsPattern> value);
    public JsonTypeInfo`1<IList`1<V1PodFailurePolicyRule>> get_IListV1PodFailurePolicyRule();
    private JsonTypeInfo`1<IList`1<V1PodFailurePolicyRule>> Create_IListV1PodFailurePolicyRule(JsonSerializerOptions options);
    private void IListV1PodFailurePolicyRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodFailurePolicyRule> value);
    public JsonTypeInfo`1<IList`1<V1PodIP>> get_IListV1PodIP();
    private JsonTypeInfo`1<IList`1<V1PodIP>> Create_IListV1PodIP(JsonSerializerOptions options);
    private void IListV1PodIPSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodIP> value);
    public JsonTypeInfo`1<IList`1<V1PodReadinessGate>> get_IListV1PodReadinessGate();
    private JsonTypeInfo`1<IList`1<V1PodReadinessGate>> Create_IListV1PodReadinessGate(JsonSerializerOptions options);
    private void IListV1PodReadinessGateSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodReadinessGate> value);
    public JsonTypeInfo`1<IList`1<V1PodResourceClaim>> get_IListV1PodResourceClaim();
    private JsonTypeInfo`1<IList`1<V1PodResourceClaim>> Create_IListV1PodResourceClaim(JsonSerializerOptions options);
    private void IListV1PodResourceClaimSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodResourceClaim> value);
    public JsonTypeInfo`1<IList`1<V1PodResourceClaimStatus>> get_IListV1PodResourceClaimStatus();
    private JsonTypeInfo`1<IList`1<V1PodResourceClaimStatus>> Create_IListV1PodResourceClaimStatus(JsonSerializerOptions options);
    private void IListV1PodResourceClaimStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodResourceClaimStatus> value);
    public JsonTypeInfo`1<IList`1<V1PodSchedulingGate>> get_IListV1PodSchedulingGate();
    private JsonTypeInfo`1<IList`1<V1PodSchedulingGate>> Create_IListV1PodSchedulingGate(JsonSerializerOptions options);
    private void IListV1PodSchedulingGateSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodSchedulingGate> value);
    public JsonTypeInfo`1<IList`1<V1PodTemplate>> get_IListV1PodTemplate();
    private JsonTypeInfo`1<IList`1<V1PodTemplate>> Create_IListV1PodTemplate(JsonSerializerOptions options);
    private void IListV1PodTemplateSerializeHandler(Utf8JsonWriter writer, IList`1<V1PodTemplate> value);
    public JsonTypeInfo`1<IList`1<V1PolicyRule>> get_IListV1PolicyRule();
    private JsonTypeInfo`1<IList`1<V1PolicyRule>> Create_IListV1PolicyRule(JsonSerializerOptions options);
    private void IListV1PolicyRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1PolicyRule> value);
    public JsonTypeInfo`1<IList`1<V1PolicyRulesWithSubjects>> get_IListV1PolicyRulesWithSubjects();
    private JsonTypeInfo`1<IList`1<V1PolicyRulesWithSubjects>> Create_IListV1PolicyRulesWithSubjects(JsonSerializerOptions options);
    private void IListV1PolicyRulesWithSubjectsSerializeHandler(Utf8JsonWriter writer, IList`1<V1PolicyRulesWithSubjects> value);
    public JsonTypeInfo`1<IList`1<V1PortStatus>> get_IListV1PortStatus();
    private JsonTypeInfo`1<IList`1<V1PortStatus>> Create_IListV1PortStatus(JsonSerializerOptions options);
    private void IListV1PortStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1PortStatus> value);
    public JsonTypeInfo`1<IList`1<V1PreferredSchedulingTerm>> get_IListV1PreferredSchedulingTerm();
    private JsonTypeInfo`1<IList`1<V1PreferredSchedulingTerm>> Create_IListV1PreferredSchedulingTerm(JsonSerializerOptions options);
    private void IListV1PreferredSchedulingTermSerializeHandler(Utf8JsonWriter writer, IList`1<V1PreferredSchedulingTerm> value);
    public JsonTypeInfo`1<IList`1<V1PriorityClass>> get_IListV1PriorityClass();
    private JsonTypeInfo`1<IList`1<V1PriorityClass>> Create_IListV1PriorityClass(JsonSerializerOptions options);
    private void IListV1PriorityClassSerializeHandler(Utf8JsonWriter writer, IList`1<V1PriorityClass> value);
    public JsonTypeInfo`1<IList`1<V1PriorityLevelConfiguration>> get_IListV1PriorityLevelConfiguration();
    private JsonTypeInfo`1<IList`1<V1PriorityLevelConfiguration>> Create_IListV1PriorityLevelConfiguration(JsonSerializerOptions options);
    private void IListV1PriorityLevelConfigurationSerializeHandler(Utf8JsonWriter writer, IList`1<V1PriorityLevelConfiguration> value);
    public JsonTypeInfo`1<IList`1<V1PriorityLevelConfigurationCondition>> get_IListV1PriorityLevelConfigurationCondition();
    private JsonTypeInfo`1<IList`1<V1PriorityLevelConfigurationCondition>> Create_IListV1PriorityLevelConfigurationCondition(JsonSerializerOptions options);
    private void IListV1PriorityLevelConfigurationConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1PriorityLevelConfigurationCondition> value);
    public JsonTypeInfo`1<IList`1<V1ReplicaSet>> get_IListV1ReplicaSet();
    private JsonTypeInfo`1<IList`1<V1ReplicaSet>> Create_IListV1ReplicaSet(JsonSerializerOptions options);
    private void IListV1ReplicaSetSerializeHandler(Utf8JsonWriter writer, IList`1<V1ReplicaSet> value);
    public JsonTypeInfo`1<IList`1<V1ReplicaSetCondition>> get_IListV1ReplicaSetCondition();
    private JsonTypeInfo`1<IList`1<V1ReplicaSetCondition>> Create_IListV1ReplicaSetCondition(JsonSerializerOptions options);
    private void IListV1ReplicaSetConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1ReplicaSetCondition> value);
    public JsonTypeInfo`1<IList`1<V1ReplicationController>> get_IListV1ReplicationController();
    private JsonTypeInfo`1<IList`1<V1ReplicationController>> Create_IListV1ReplicationController(JsonSerializerOptions options);
    private void IListV1ReplicationControllerSerializeHandler(Utf8JsonWriter writer, IList`1<V1ReplicationController> value);
    public JsonTypeInfo`1<IList`1<V1ReplicationControllerCondition>> get_IListV1ReplicationControllerCondition();
    private JsonTypeInfo`1<IList`1<V1ReplicationControllerCondition>> Create_IListV1ReplicationControllerCondition(JsonSerializerOptions options);
    private void IListV1ReplicationControllerConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1ReplicationControllerCondition> value);
    public JsonTypeInfo`1<IList`1<V1ResourceClaim>> get_IListV1ResourceClaim();
    private JsonTypeInfo`1<IList`1<V1ResourceClaim>> Create_IListV1ResourceClaim(JsonSerializerOptions options);
    private void IListV1ResourceClaimSerializeHandler(Utf8JsonWriter writer, IList`1<V1ResourceClaim> value);
    public JsonTypeInfo`1<IList`1<V1ResourceHealth>> get_IListV1ResourceHealth();
    private JsonTypeInfo`1<IList`1<V1ResourceHealth>> Create_IListV1ResourceHealth(JsonSerializerOptions options);
    private void IListV1ResourceHealthSerializeHandler(Utf8JsonWriter writer, IList`1<V1ResourceHealth> value);
    public JsonTypeInfo`1<IList`1<V1ResourcePolicyRule>> get_IListV1ResourcePolicyRule();
    private JsonTypeInfo`1<IList`1<V1ResourcePolicyRule>> Create_IListV1ResourcePolicyRule(JsonSerializerOptions options);
    private void IListV1ResourcePolicyRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1ResourcePolicyRule> value);
    public JsonTypeInfo`1<IList`1<V1ResourceQuota>> get_IListV1ResourceQuota();
    private JsonTypeInfo`1<IList`1<V1ResourceQuota>> Create_IListV1ResourceQuota(JsonSerializerOptions options);
    private void IListV1ResourceQuotaSerializeHandler(Utf8JsonWriter writer, IList`1<V1ResourceQuota> value);
    public JsonTypeInfo`1<IList`1<V1ResourceRule>> get_IListV1ResourceRule();
    private JsonTypeInfo`1<IList`1<V1ResourceRule>> Create_IListV1ResourceRule(JsonSerializerOptions options);
    private void IListV1ResourceRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1ResourceRule> value);
    public JsonTypeInfo`1<IList`1<V1ResourceStatus>> get_IListV1ResourceStatus();
    private JsonTypeInfo`1<IList`1<V1ResourceStatus>> Create_IListV1ResourceStatus(JsonSerializerOptions options);
    private void IListV1ResourceStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1ResourceStatus> value);
    public JsonTypeInfo`1<IList`1<V1Role>> get_IListV1Role();
    private JsonTypeInfo`1<IList`1<V1Role>> Create_IListV1Role(JsonSerializerOptions options);
    private void IListV1RoleSerializeHandler(Utf8JsonWriter writer, IList`1<V1Role> value);
    public JsonTypeInfo`1<IList`1<V1RoleBinding>> get_IListV1RoleBinding();
    private JsonTypeInfo`1<IList`1<V1RoleBinding>> Create_IListV1RoleBinding(JsonSerializerOptions options);
    private void IListV1RoleBindingSerializeHandler(Utf8JsonWriter writer, IList`1<V1RoleBinding> value);
    public JsonTypeInfo`1<IList`1<V1RuleWithOperations>> get_IListV1RuleWithOperations();
    private JsonTypeInfo`1<IList`1<V1RuleWithOperations>> Create_IListV1RuleWithOperations(JsonSerializerOptions options);
    private void IListV1RuleWithOperationsSerializeHandler(Utf8JsonWriter writer, IList`1<V1RuleWithOperations> value);
    public JsonTypeInfo`1<IList`1<V1RuntimeClass>> get_IListV1RuntimeClass();
    private JsonTypeInfo`1<IList`1<V1RuntimeClass>> Create_IListV1RuntimeClass(JsonSerializerOptions options);
    private void IListV1RuntimeClassSerializeHandler(Utf8JsonWriter writer, IList`1<V1RuntimeClass> value);
    public JsonTypeInfo`1<IList`1<V1ScopedResourceSelectorRequirement>> get_IListV1ScopedResourceSelectorRequirement();
    private JsonTypeInfo`1<IList`1<V1ScopedResourceSelectorRequirement>> Create_IListV1ScopedResourceSelectorRequirement(JsonSerializerOptions options);
    private void IListV1ScopedResourceSelectorRequirementSerializeHandler(Utf8JsonWriter writer, IList`1<V1ScopedResourceSelectorRequirement> value);
    public JsonTypeInfo`1<IList`1<V1Secret>> get_IListV1Secret();
    private JsonTypeInfo`1<IList`1<V1Secret>> Create_IListV1Secret(JsonSerializerOptions options);
    private void IListV1SecretSerializeHandler(Utf8JsonWriter writer, IList`1<V1Secret> value);
    public JsonTypeInfo`1<IList`1<V1SelectableField>> get_IListV1SelectableField();
    private JsonTypeInfo`1<IList`1<V1SelectableField>> Create_IListV1SelectableField(JsonSerializerOptions options);
    private void IListV1SelectableFieldSerializeHandler(Utf8JsonWriter writer, IList`1<V1SelectableField> value);
    public JsonTypeInfo`1<IList`1<V1ServerAddressByClientCIDR>> get_IListV1ServerAddressByClientCIDR();
    private JsonTypeInfo`1<IList`1<V1ServerAddressByClientCIDR>> Create_IListV1ServerAddressByClientCIDR(JsonSerializerOptions options);
    private void IListV1ServerAddressByClientCIDRSerializeHandler(Utf8JsonWriter writer, IList`1<V1ServerAddressByClientCIDR> value);
    public JsonTypeInfo`1<IList`1<V1Service>> get_IListV1Service();
    private JsonTypeInfo`1<IList`1<V1Service>> Create_IListV1Service(JsonSerializerOptions options);
    private void IListV1ServiceSerializeHandler(Utf8JsonWriter writer, IList`1<V1Service> value);
    public JsonTypeInfo`1<IList`1<V1ServiceAccount>> get_IListV1ServiceAccount();
    private JsonTypeInfo`1<IList`1<V1ServiceAccount>> Create_IListV1ServiceAccount(JsonSerializerOptions options);
    private void IListV1ServiceAccountSerializeHandler(Utf8JsonWriter writer, IList`1<V1ServiceAccount> value);
    public JsonTypeInfo`1<IList`1<V1ServicePort>> get_IListV1ServicePort();
    private JsonTypeInfo`1<IList`1<V1ServicePort>> Create_IListV1ServicePort(JsonSerializerOptions options);
    private void IListV1ServicePortSerializeHandler(Utf8JsonWriter writer, IList`1<V1ServicePort> value);
    public JsonTypeInfo`1<IList`1<V1StatefulSet>> get_IListV1StatefulSet();
    private JsonTypeInfo`1<IList`1<V1StatefulSet>> Create_IListV1StatefulSet(JsonSerializerOptions options);
    private void IListV1StatefulSetSerializeHandler(Utf8JsonWriter writer, IList`1<V1StatefulSet> value);
    public JsonTypeInfo`1<IList`1<V1StatefulSetCondition>> get_IListV1StatefulSetCondition();
    private JsonTypeInfo`1<IList`1<V1StatefulSetCondition>> Create_IListV1StatefulSetCondition(JsonSerializerOptions options);
    private void IListV1StatefulSetConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V1StatefulSetCondition> value);
    public JsonTypeInfo`1<IList`1<V1StatusCause>> get_IListV1StatusCause();
    private JsonTypeInfo`1<IList`1<V1StatusCause>> Create_IListV1StatusCause(JsonSerializerOptions options);
    private void IListV1StatusCauseSerializeHandler(Utf8JsonWriter writer, IList`1<V1StatusCause> value);
    public JsonTypeInfo`1<IList`1<V1StorageClass>> get_IListV1StorageClass();
    private JsonTypeInfo`1<IList`1<V1StorageClass>> Create_IListV1StorageClass(JsonSerializerOptions options);
    private void IListV1StorageClassSerializeHandler(Utf8JsonWriter writer, IList`1<V1StorageClass> value);
    public JsonTypeInfo`1<IList`1<V1SuccessPolicyRule>> get_IListV1SuccessPolicyRule();
    private JsonTypeInfo`1<IList`1<V1SuccessPolicyRule>> Create_IListV1SuccessPolicyRule(JsonSerializerOptions options);
    private void IListV1SuccessPolicyRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1SuccessPolicyRule> value);
    public JsonTypeInfo`1<IList`1<V1Sysctl>> get_IListV1Sysctl();
    private JsonTypeInfo`1<IList`1<V1Sysctl>> Create_IListV1Sysctl(JsonSerializerOptions options);
    private void IListV1SysctlSerializeHandler(Utf8JsonWriter writer, IList`1<V1Sysctl> value);
    public JsonTypeInfo`1<IList`1<V1Taint>> get_IListV1Taint();
    private JsonTypeInfo`1<IList`1<V1Taint>> Create_IListV1Taint(JsonSerializerOptions options);
    private void IListV1TaintSerializeHandler(Utf8JsonWriter writer, IList`1<V1Taint> value);
    public JsonTypeInfo`1<IList`1<V1Toleration>> get_IListV1Toleration();
    private JsonTypeInfo`1<IList`1<V1Toleration>> Create_IListV1Toleration(JsonSerializerOptions options);
    private void IListV1TolerationSerializeHandler(Utf8JsonWriter writer, IList`1<V1Toleration> value);
    public JsonTypeInfo`1<IList`1<V1TopologySelectorLabelRequirement>> get_IListV1TopologySelectorLabelRequirement();
    private JsonTypeInfo`1<IList`1<V1TopologySelectorLabelRequirement>> Create_IListV1TopologySelectorLabelRequirement(JsonSerializerOptions options);
    private void IListV1TopologySelectorLabelRequirementSerializeHandler(Utf8JsonWriter writer, IList`1<V1TopologySelectorLabelRequirement> value);
    public JsonTypeInfo`1<IList`1<V1TopologySelectorTerm>> get_IListV1TopologySelectorTerm();
    private JsonTypeInfo`1<IList`1<V1TopologySelectorTerm>> Create_IListV1TopologySelectorTerm(JsonSerializerOptions options);
    private void IListV1TopologySelectorTermSerializeHandler(Utf8JsonWriter writer, IList`1<V1TopologySelectorTerm> value);
    public JsonTypeInfo`1<IList`1<V1TopologySpreadConstraint>> get_IListV1TopologySpreadConstraint();
    private JsonTypeInfo`1<IList`1<V1TopologySpreadConstraint>> Create_IListV1TopologySpreadConstraint(JsonSerializerOptions options);
    private void IListV1TopologySpreadConstraintSerializeHandler(Utf8JsonWriter writer, IList`1<V1TopologySpreadConstraint> value);
    public JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicy>> get_IListV1ValidatingAdmissionPolicy();
    private JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicy>> Create_IListV1ValidatingAdmissionPolicy(JsonSerializerOptions options);
    private void IListV1ValidatingAdmissionPolicySerializeHandler(Utf8JsonWriter writer, IList`1<V1ValidatingAdmissionPolicy> value);
    public JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicyBinding>> get_IListV1ValidatingAdmissionPolicyBinding();
    private JsonTypeInfo`1<IList`1<V1ValidatingAdmissionPolicyBinding>> Create_IListV1ValidatingAdmissionPolicyBinding(JsonSerializerOptions options);
    private void IListV1ValidatingAdmissionPolicyBindingSerializeHandler(Utf8JsonWriter writer, IList`1<V1ValidatingAdmissionPolicyBinding> value);
    public JsonTypeInfo`1<IList`1<V1ValidatingWebhook>> get_IListV1ValidatingWebhook();
    private JsonTypeInfo`1<IList`1<V1ValidatingWebhook>> Create_IListV1ValidatingWebhook(JsonSerializerOptions options);
    private void IListV1ValidatingWebhookSerializeHandler(Utf8JsonWriter writer, IList`1<V1ValidatingWebhook> value);
    public JsonTypeInfo`1<IList`1<V1ValidatingWebhookConfiguration>> get_IListV1ValidatingWebhookConfiguration();
    private JsonTypeInfo`1<IList`1<V1ValidatingWebhookConfiguration>> Create_IListV1ValidatingWebhookConfiguration(JsonSerializerOptions options);
    private void IListV1ValidatingWebhookConfigurationSerializeHandler(Utf8JsonWriter writer, IList`1<V1ValidatingWebhookConfiguration> value);
    public JsonTypeInfo`1<IList`1<V1Validation>> get_IListV1Validation();
    private JsonTypeInfo`1<IList`1<V1Validation>> Create_IListV1Validation(JsonSerializerOptions options);
    private void IListV1ValidationSerializeHandler(Utf8JsonWriter writer, IList`1<V1Validation> value);
    public JsonTypeInfo`1<IList`1<V1ValidationRule>> get_IListV1ValidationRule();
    private JsonTypeInfo`1<IList`1<V1ValidationRule>> Create_IListV1ValidationRule(JsonSerializerOptions options);
    private void IListV1ValidationRuleSerializeHandler(Utf8JsonWriter writer, IList`1<V1ValidationRule> value);
    public JsonTypeInfo`1<IList`1<V1Variable>> get_IListV1Variable();
    private JsonTypeInfo`1<IList`1<V1Variable>> Create_IListV1Variable(JsonSerializerOptions options);
    private void IListV1VariableSerializeHandler(Utf8JsonWriter writer, IList`1<V1Variable> value);
    public JsonTypeInfo`1<IList`1<V1Volume>> get_IListV1Volume();
    private JsonTypeInfo`1<IList`1<V1Volume>> Create_IListV1Volume(JsonSerializerOptions options);
    private void IListV1VolumeSerializeHandler(Utf8JsonWriter writer, IList`1<V1Volume> value);
    public JsonTypeInfo`1<IList`1<V1VolumeAttachment>> get_IListV1VolumeAttachment();
    private JsonTypeInfo`1<IList`1<V1VolumeAttachment>> Create_IListV1VolumeAttachment(JsonSerializerOptions options);
    private void IListV1VolumeAttachmentSerializeHandler(Utf8JsonWriter writer, IList`1<V1VolumeAttachment> value);
    public JsonTypeInfo`1<IList`1<V1VolumeDevice>> get_IListV1VolumeDevice();
    private JsonTypeInfo`1<IList`1<V1VolumeDevice>> Create_IListV1VolumeDevice(JsonSerializerOptions options);
    private void IListV1VolumeDeviceSerializeHandler(Utf8JsonWriter writer, IList`1<V1VolumeDevice> value);
    public JsonTypeInfo`1<IList`1<V1VolumeMount>> get_IListV1VolumeMount();
    private JsonTypeInfo`1<IList`1<V1VolumeMount>> Create_IListV1VolumeMount(JsonSerializerOptions options);
    private void IListV1VolumeMountSerializeHandler(Utf8JsonWriter writer, IList`1<V1VolumeMount> value);
    public JsonTypeInfo`1<IList`1<V1VolumeMountStatus>> get_IListV1VolumeMountStatus();
    private JsonTypeInfo`1<IList`1<V1VolumeMountStatus>> Create_IListV1VolumeMountStatus(JsonSerializerOptions options);
    private void IListV1VolumeMountStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V1VolumeMountStatus> value);
    public JsonTypeInfo`1<IList`1<V1VolumeProjection>> get_IListV1VolumeProjection();
    private JsonTypeInfo`1<IList`1<V1VolumeProjection>> Create_IListV1VolumeProjection(JsonSerializerOptions options);
    private void IListV1VolumeProjectionSerializeHandler(Utf8JsonWriter writer, IList`1<V1VolumeProjection> value);
    public JsonTypeInfo`1<IList`1<V1WeightedPodAffinityTerm>> get_IListV1WeightedPodAffinityTerm();
    private JsonTypeInfo`1<IList`1<V1WeightedPodAffinityTerm>> Create_IListV1WeightedPodAffinityTerm(JsonSerializerOptions options);
    private void IListV1WeightedPodAffinityTermSerializeHandler(Utf8JsonWriter writer, IList`1<V1WeightedPodAffinityTerm> value);
    public JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscaler>> get_IListV2HorizontalPodAutoscaler();
    private JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscaler>> Create_IListV2HorizontalPodAutoscaler(JsonSerializerOptions options);
    private void IListV2HorizontalPodAutoscalerSerializeHandler(Utf8JsonWriter writer, IList`1<V2HorizontalPodAutoscaler> value);
    public JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscalerCondition>> get_IListV2HorizontalPodAutoscalerCondition();
    private JsonTypeInfo`1<IList`1<V2HorizontalPodAutoscalerCondition>> Create_IListV2HorizontalPodAutoscalerCondition(JsonSerializerOptions options);
    private void IListV2HorizontalPodAutoscalerConditionSerializeHandler(Utf8JsonWriter writer, IList`1<V2HorizontalPodAutoscalerCondition> value);
    public JsonTypeInfo`1<IList`1<V2HPAScalingPolicy>> get_IListV2HPAScalingPolicy();
    private JsonTypeInfo`1<IList`1<V2HPAScalingPolicy>> Create_IListV2HPAScalingPolicy(JsonSerializerOptions options);
    private void IListV2HPAScalingPolicySerializeHandler(Utf8JsonWriter writer, IList`1<V2HPAScalingPolicy> value);
    public JsonTypeInfo`1<IList`1<V2MetricSpec>> get_IListV2MetricSpec();
    private JsonTypeInfo`1<IList`1<V2MetricSpec>> Create_IListV2MetricSpec(JsonSerializerOptions options);
    private void IListV2MetricSpecSerializeHandler(Utf8JsonWriter writer, IList`1<V2MetricSpec> value);
    public JsonTypeInfo`1<IList`1<V2MetricStatus>> get_IListV2MetricStatus();
    private JsonTypeInfo`1<IList`1<V2MetricStatus>> Create_IListV2MetricStatus(JsonSerializerOptions options);
    private void IListV2MetricStatusSerializeHandler(Utf8JsonWriter writer, IList`1<V2MetricStatus> value);
    public JsonTypeInfo`1<IList`1<int>> get_IListInt32();
    private JsonTypeInfo`1<IList`1<int>> Create_IListInt32(JsonSerializerOptions options);
    private void IListInt32SerializeHandler(Utf8JsonWriter writer, IList`1<int> value);
    public JsonTypeInfo`1<IList`1<Nullable`1<long>>> get_IListNullableInt64();
    private JsonTypeInfo`1<IList`1<Nullable`1<long>>> Create_IListNullableInt64(JsonSerializerOptions options);
    private void IListNullableInt64SerializeHandler(Utf8JsonWriter writer, IList`1<Nullable`1<long>> value);
    public JsonTypeInfo`1<IList`1<object>> get_IListObject();
    private JsonTypeInfo`1<IList`1<object>> Create_IListObject(JsonSerializerOptions options);
    public JsonTypeInfo`1<IList`1<string>> get_IListString();
    private JsonTypeInfo`1<IList`1<string>> Create_IListString(JsonSerializerOptions options);
    private void IListStringSerializeHandler(Utf8JsonWriter writer, IList`1<string> value);
    public JsonTypeInfo`1<DateTime> get_DateTime();
    private JsonTypeInfo`1<DateTime> Create_DateTime(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<DateTime>> get_NullableDateTime();
    private JsonTypeInfo`1<Nullable`1<DateTime>> Create_NullableDateTime(JsonSerializerOptions options);
    public JsonTypeInfo`1<int> get_Int32();
    private JsonTypeInfo`1<int> Create_Int32(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<int>> get_NullableInt32();
    private JsonTypeInfo`1<Nullable`1<int>> Create_NullableInt32(JsonSerializerOptions options);
    public JsonTypeInfo`1<long> get_Int64();
    private JsonTypeInfo`1<long> Create_Int64(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<long>> get_NullableInt64();
    private JsonTypeInfo`1<Nullable`1<long>> Create_NullableInt64(JsonSerializerOptions options);
    public JsonTypeInfo`1<object> get_Object();
    private JsonTypeInfo`1<object> Create_Object(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static SourceGenerationContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[ExtensionAttribute]
public static class k8s.StoragemigrationOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IStoragemigrationOperations operations);
    [AsyncStateMachineAttribute("k8s.StoragemigrationOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IStoragemigrationOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.StoragemigrationV1alpha1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IStoragemigrationV1alpha1Operations operations);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IStoragemigrationV1alpha1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionStorageVersionMigration(IStoragemigrationV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<DeleteCollectionStorageVersionMigrationAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionStorageVersionMigrationAsync(IStoragemigrationV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigrationList ListStorageVersionMigration(IStoragemigrationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<ListStorageVersionMigrationAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigrationList> ListStorageVersionMigrationAsync(IStoragemigrationV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigration CreateStorageVersionMigration(IStoragemigrationV1alpha1Operations operations, V1alpha1StorageVersionMigration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<CreateStorageVersionMigrationAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigration> CreateStorageVersionMigrationAsync(IStoragemigrationV1alpha1Operations operations, V1alpha1StorageVersionMigration body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteStorageVersionMigration(IStoragemigrationV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<DeleteStorageVersionMigrationAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteStorageVersionMigrationAsync(IStoragemigrationV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigration ReadStorageVersionMigration(IStoragemigrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<ReadStorageVersionMigrationAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigration> ReadStorageVersionMigrationAsync(IStoragemigrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigration PatchStorageVersionMigration(IStoragemigrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<PatchStorageVersionMigrationAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigration> PatchStorageVersionMigrationAsync(IStoragemigrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigration ReplaceStorageVersionMigration(IStoragemigrationV1alpha1Operations operations, V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<ReplaceStorageVersionMigrationAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigration> ReplaceStorageVersionMigrationAsync(IStoragemigrationV1alpha1Operations operations, V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigration ReadStorageVersionMigrationStatus(IStoragemigrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<ReadStorageVersionMigrationStatusAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigration> ReadStorageVersionMigrationStatusAsync(IStoragemigrationV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigration PatchStorageVersionMigrationStatus(IStoragemigrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<PatchStorageVersionMigrationStatusAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigration> PatchStorageVersionMigrationStatusAsync(IStoragemigrationV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1StorageVersionMigration ReplaceStorageVersionMigrationStatus(IStoragemigrationV1alpha1Operations operations, V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StoragemigrationV1alpha1OperationsExtensions/<ReplaceStorageVersionMigrationStatusAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1alpha1StorageVersionMigration> ReplaceStorageVersionMigrationStatusAsync(IStoragemigrationV1alpha1Operations operations, V1alpha1StorageVersionMigration body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.StorageOperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIGroup GetAPIGroup(IStorageOperations operations);
    [AsyncStateMachineAttribute("k8s.StorageOperationsExtensions/<GetAPIGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIGroup> GetAPIGroupAsync(IStorageOperations operations, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.StorageV1alpha1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IStorageV1alpha1Operations operations);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IStorageV1alpha1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionVolumeAttributesClass(IStorageV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<DeleteCollectionVolumeAttributesClassAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionVolumeAttributesClassAsync(IStorageV1alpha1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1VolumeAttributesClassList ListVolumeAttributesClass(IStorageV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<ListVolumeAttributesClassAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1alpha1VolumeAttributesClassList> ListVolumeAttributesClassAsync(IStorageV1alpha1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1VolumeAttributesClass CreateVolumeAttributesClass(IStorageV1alpha1Operations operations, V1alpha1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<CreateVolumeAttributesClassAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1alpha1VolumeAttributesClass> CreateVolumeAttributesClassAsync(IStorageV1alpha1Operations operations, V1alpha1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1VolumeAttributesClass DeleteVolumeAttributesClass(IStorageV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<DeleteVolumeAttributesClassAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1alpha1VolumeAttributesClass> DeleteVolumeAttributesClassAsync(IStorageV1alpha1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1VolumeAttributesClass ReadVolumeAttributesClass(IStorageV1alpha1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<ReadVolumeAttributesClassAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1alpha1VolumeAttributesClass> ReadVolumeAttributesClassAsync(IStorageV1alpha1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1VolumeAttributesClass PatchVolumeAttributesClass(IStorageV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<PatchVolumeAttributesClassAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1alpha1VolumeAttributesClass> PatchVolumeAttributesClassAsync(IStorageV1alpha1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1alpha1VolumeAttributesClass ReplaceVolumeAttributesClass(IStorageV1alpha1Operations operations, V1alpha1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1alpha1OperationsExtensions/<ReplaceVolumeAttributesClassAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1alpha1VolumeAttributesClass> ReplaceVolumeAttributesClassAsync(IStorageV1alpha1Operations operations, V1alpha1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.StorageV1beta1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IStorageV1beta1Operations operations);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IStorageV1beta1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionVolumeAttributesClass(IStorageV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<DeleteCollectionVolumeAttributesClassAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionVolumeAttributesClassAsync(IStorageV1beta1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1VolumeAttributesClassList ListVolumeAttributesClass(IStorageV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<ListVolumeAttributesClassAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1beta1VolumeAttributesClassList> ListVolumeAttributesClassAsync(IStorageV1beta1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1VolumeAttributesClass CreateVolumeAttributesClass(IStorageV1beta1Operations operations, V1beta1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<CreateVolumeAttributesClassAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1beta1VolumeAttributesClass> CreateVolumeAttributesClassAsync(IStorageV1beta1Operations operations, V1beta1VolumeAttributesClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1VolumeAttributesClass DeleteVolumeAttributesClass(IStorageV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<DeleteVolumeAttributesClassAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1beta1VolumeAttributesClass> DeleteVolumeAttributesClassAsync(IStorageV1beta1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1VolumeAttributesClass ReadVolumeAttributesClass(IStorageV1beta1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<ReadVolumeAttributesClassAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1beta1VolumeAttributesClass> ReadVolumeAttributesClassAsync(IStorageV1beta1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1VolumeAttributesClass PatchVolumeAttributesClass(IStorageV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<PatchVolumeAttributesClassAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1beta1VolumeAttributesClass> PatchVolumeAttributesClassAsync(IStorageV1beta1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1beta1VolumeAttributesClass ReplaceVolumeAttributesClass(IStorageV1beta1Operations operations, V1beta1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1beta1OperationsExtensions/<ReplaceVolumeAttributesClassAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1beta1VolumeAttributesClass> ReplaceVolumeAttributesClassAsync(IStorageV1beta1Operations operations, V1beta1VolumeAttributesClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class k8s.StorageV1OperationsExtensions : object {
    [ExtensionAttribute]
public static V1APIResourceList GetAPIResources(IStorageV1Operations operations);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<GetAPIResourcesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<V1APIResourceList> GetAPIResourcesAsync(IStorageV1Operations operations, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionCSIDriver(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteCollectionCSIDriverAsync>d__3")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionCSIDriverAsync(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIDriverList ListCSIDriver(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ListCSIDriverAsync>d__5")]
[ExtensionAttribute]
public static Task`1<V1CSIDriverList> ListCSIDriverAsync(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIDriver CreateCSIDriver(IStorageV1Operations operations, V1CSIDriver body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<CreateCSIDriverAsync>d__7")]
[ExtensionAttribute]
public static Task`1<V1CSIDriver> CreateCSIDriverAsync(IStorageV1Operations operations, V1CSIDriver body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIDriver DeleteCSIDriver(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteCSIDriverAsync>d__9")]
[ExtensionAttribute]
public static Task`1<V1CSIDriver> DeleteCSIDriverAsync(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIDriver ReadCSIDriver(IStorageV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReadCSIDriverAsync>d__11")]
[ExtensionAttribute]
public static Task`1<V1CSIDriver> ReadCSIDriverAsync(IStorageV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIDriver PatchCSIDriver(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<PatchCSIDriverAsync>d__13")]
[ExtensionAttribute]
public static Task`1<V1CSIDriver> PatchCSIDriverAsync(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIDriver ReplaceCSIDriver(IStorageV1Operations operations, V1CSIDriver body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReplaceCSIDriverAsync>d__15")]
[ExtensionAttribute]
public static Task`1<V1CSIDriver> ReplaceCSIDriverAsync(IStorageV1Operations operations, V1CSIDriver body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionCSINode(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteCollectionCSINodeAsync>d__17")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionCSINodeAsync(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSINodeList ListCSINode(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ListCSINodeAsync>d__19")]
[ExtensionAttribute]
public static Task`1<V1CSINodeList> ListCSINodeAsync(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSINode CreateCSINode(IStorageV1Operations operations, V1CSINode body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<CreateCSINodeAsync>d__21")]
[ExtensionAttribute]
public static Task`1<V1CSINode> CreateCSINodeAsync(IStorageV1Operations operations, V1CSINode body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSINode DeleteCSINode(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteCSINodeAsync>d__23")]
[ExtensionAttribute]
public static Task`1<V1CSINode> DeleteCSINodeAsync(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSINode ReadCSINode(IStorageV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReadCSINodeAsync>d__25")]
[ExtensionAttribute]
public static Task`1<V1CSINode> ReadCSINodeAsync(IStorageV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSINode PatchCSINode(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<PatchCSINodeAsync>d__27")]
[ExtensionAttribute]
public static Task`1<V1CSINode> PatchCSINodeAsync(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSINode ReplaceCSINode(IStorageV1Operations operations, V1CSINode body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReplaceCSINodeAsync>d__29")]
[ExtensionAttribute]
public static Task`1<V1CSINode> ReplaceCSINodeAsync(IStorageV1Operations operations, V1CSINode body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIStorageCapacityList ListCSIStorageCapacityForAllNamespaces(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ListCSIStorageCapacityForAllNamespacesAsync>d__31")]
[ExtensionAttribute]
public static Task`1<V1CSIStorageCapacityList> ListCSIStorageCapacityForAllNamespacesAsync(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> pretty, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionNamespacedCSIStorageCapacity(IStorageV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteCollectionNamespacedCSIStorageCapacityAsync>d__33")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionNamespacedCSIStorageCapacityAsync(IStorageV1Operations operations, string namespaceParameter, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIStorageCapacityList ListNamespacedCSIStorageCapacity(IStorageV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ListNamespacedCSIStorageCapacityAsync>d__35")]
[ExtensionAttribute]
public static Task`1<V1CSIStorageCapacityList> ListNamespacedCSIStorageCapacityAsync(IStorageV1Operations operations, string namespaceParameter, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIStorageCapacity CreateNamespacedCSIStorageCapacity(IStorageV1Operations operations, V1CSIStorageCapacity body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<CreateNamespacedCSIStorageCapacityAsync>d__37")]
[ExtensionAttribute]
public static Task`1<V1CSIStorageCapacity> CreateNamespacedCSIStorageCapacityAsync(IStorageV1Operations operations, V1CSIStorageCapacity body, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteNamespacedCSIStorageCapacity(IStorageV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteNamespacedCSIStorageCapacityAsync>d__39")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteNamespacedCSIStorageCapacityAsync(IStorageV1Operations operations, string name, string namespaceParameter, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIStorageCapacity ReadNamespacedCSIStorageCapacity(IStorageV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReadNamespacedCSIStorageCapacityAsync>d__41")]
[ExtensionAttribute]
public static Task`1<V1CSIStorageCapacity> ReadNamespacedCSIStorageCapacityAsync(IStorageV1Operations operations, string name, string namespaceParameter, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIStorageCapacity PatchNamespacedCSIStorageCapacity(IStorageV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<PatchNamespacedCSIStorageCapacityAsync>d__43")]
[ExtensionAttribute]
public static Task`1<V1CSIStorageCapacity> PatchNamespacedCSIStorageCapacityAsync(IStorageV1Operations operations, V1Patch body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1CSIStorageCapacity ReplaceNamespacedCSIStorageCapacity(IStorageV1Operations operations, V1CSIStorageCapacity body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReplaceNamespacedCSIStorageCapacityAsync>d__45")]
[ExtensionAttribute]
public static Task`1<V1CSIStorageCapacity> ReplaceNamespacedCSIStorageCapacityAsync(IStorageV1Operations operations, V1CSIStorageCapacity body, string name, string namespaceParameter, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionStorageClass(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteCollectionStorageClassAsync>d__47")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionStorageClassAsync(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StorageClassList ListStorageClass(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ListStorageClassAsync>d__49")]
[ExtensionAttribute]
public static Task`1<V1StorageClassList> ListStorageClassAsync(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StorageClass CreateStorageClass(IStorageV1Operations operations, V1StorageClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<CreateStorageClassAsync>d__51")]
[ExtensionAttribute]
public static Task`1<V1StorageClass> CreateStorageClassAsync(IStorageV1Operations operations, V1StorageClass body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StorageClass DeleteStorageClass(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteStorageClassAsync>d__53")]
[ExtensionAttribute]
public static Task`1<V1StorageClass> DeleteStorageClassAsync(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StorageClass ReadStorageClass(IStorageV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReadStorageClassAsync>d__55")]
[ExtensionAttribute]
public static Task`1<V1StorageClass> ReadStorageClassAsync(IStorageV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StorageClass PatchStorageClass(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<PatchStorageClassAsync>d__57")]
[ExtensionAttribute]
public static Task`1<V1StorageClass> PatchStorageClassAsync(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1StorageClass ReplaceStorageClass(IStorageV1Operations operations, V1StorageClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReplaceStorageClassAsync>d__59")]
[ExtensionAttribute]
public static Task`1<V1StorageClass> ReplaceStorageClassAsync(IStorageV1Operations operations, V1StorageClass body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1Status DeleteCollectionVolumeAttachment(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteCollectionVolumeAttachmentAsync>d__61")]
[ExtensionAttribute]
public static Task`1<V1Status> DeleteCollectionVolumeAttachmentAsync(IStorageV1Operations operations, V1DeleteOptions body, string continueParameter, string dryRun, string fieldSelector, Nullable`1<int> gracePeriodSeconds, string labelSelector, Nullable`1<int> limit, Nullable`1<bool> orphanDependents, string propagationPolicy, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachmentList ListVolumeAttachment(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ListVolumeAttachmentAsync>d__63")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachmentList> ListVolumeAttachmentAsync(IStorageV1Operations operations, Nullable`1<bool> allowWatchBookmarks, string continueParameter, string fieldSelector, string labelSelector, Nullable`1<int> limit, string resourceVersion, string resourceVersionMatch, Nullable`1<bool> sendInitialEvents, Nullable`1<int> timeoutSeconds, Nullable`1<bool> watch, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment CreateVolumeAttachment(IStorageV1Operations operations, V1VolumeAttachment body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<CreateVolumeAttachmentAsync>d__65")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> CreateVolumeAttachmentAsync(IStorageV1Operations operations, V1VolumeAttachment body, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment DeleteVolumeAttachment(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<DeleteVolumeAttachmentAsync>d__67")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> DeleteVolumeAttachmentAsync(IStorageV1Operations operations, string name, V1DeleteOptions body, string dryRun, Nullable`1<int> gracePeriodSeconds, Nullable`1<bool> orphanDependents, string propagationPolicy, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment ReadVolumeAttachment(IStorageV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReadVolumeAttachmentAsync>d__69")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> ReadVolumeAttachmentAsync(IStorageV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment PatchVolumeAttachment(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<PatchVolumeAttachmentAsync>d__71")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> PatchVolumeAttachmentAsync(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment ReplaceVolumeAttachment(IStorageV1Operations operations, V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReplaceVolumeAttachmentAsync>d__73")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> ReplaceVolumeAttachmentAsync(IStorageV1Operations operations, V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment ReadVolumeAttachmentStatus(IStorageV1Operations operations, string name, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReadVolumeAttachmentStatusAsync>d__75")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> ReadVolumeAttachmentStatusAsync(IStorageV1Operations operations, string name, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment PatchVolumeAttachmentStatus(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<PatchVolumeAttachmentStatusAsync>d__77")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> PatchVolumeAttachmentStatusAsync(IStorageV1Operations operations, V1Patch body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> force, Nullable`1<bool> pretty, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static V1VolumeAttachment ReplaceVolumeAttachmentStatus(IStorageV1Operations operations, V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty);
    [AsyncStateMachineAttribute("k8s.StorageV1OperationsExtensions/<ReplaceVolumeAttachmentStatusAsync>d__79")]
[ExtensionAttribute]
public static Task`1<V1VolumeAttachment> ReplaceVolumeAttachmentStatusAsync(IStorageV1Operations operations, V1VolumeAttachment body, string name, string dryRun, string fieldManager, string fieldValidation, Nullable`1<bool> pretty, CancellationToken cancellationToken);
}
public class k8s.StreamDemuxer : object {
    private static int MAXFRAMESIZE;
    private WebSocket webSocket;
    private Dictionary`2<byte, ByteBuffer> buffers;
    private CancellationTokenSource cts;
    private StreamType streamType;
    private bool ownsSocket;
    private Task runLoop;
    private bool disposedValue;
    [CompilerGeneratedAttribute]
private EventHandler ConnectionClosed;
    public StreamDemuxer(WebSocket webSocket, StreamType streamType, bool ownsSocket);
    [CompilerGeneratedAttribute]
public void add_ConnectionClosed(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_ConnectionClosed(EventHandler value);
    public sealed virtual void Start();
    public sealed virtual Stream GetStream(Nullable`1<ChannelIndex> inputIndex, Nullable`1<ChannelIndex> outputIndex);
    public sealed virtual Stream GetStream(Nullable`1<byte> inputIndex, Nullable`1<byte> outputIndex);
    public sealed virtual Task Write(ChannelIndex index, Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.StreamDemuxer/<Write>d__16")]
public sealed virtual Task Write(byte index, Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("k8s.StreamDemuxer/<RunLoop>d__17")]
protected Task RunLoop(CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("k8s.StreamDemuxer/<<Start>b__12_0>d")]
[CompilerGeneratedAttribute]
private Task <Start>b__12_0();
}
public enum k8s.StreamType : Enum {
    public int value__;
    public static StreamType RemoteCommand;
    public static StreamType PortForward;
}
public class k8s.StringQuotingEmitter : ChainedEventEmitter {
    private static Regex QuotedRegex;
    public StringQuotingEmitter(IEventEmitter next);
    private static StringQuotingEmitter();
    public virtual void Emit(ScalarEventInfo eventInfo, IEmitter emitter);
}
internal static class k8s.Utilities : object {
    internal static void AddQueryParameter(StringBuilder sb, string key, string value);
}
[ExtensionAttribute]
public static class k8s.VersionOperationsExtensions : object {
    [ExtensionAttribute]
public static VersionInfo GetCode(IVersionOperations operations);
    [AsyncStateMachineAttribute("k8s.VersionOperationsExtensions/<GetCodeAsync>d__1")]
[ExtensionAttribute]
public static Task`1<VersionInfo> GetCodeAsync(IVersionOperations operations, CancellationToken cancellationToken);
}
public class k8s.Watcher`1 : object {
    [CompilerGeneratedAttribute]
private bool <Watching>k__BackingField;
    private CancellationTokenSource _cts;
    private Func`1<Task`1<TextReader>> _streamReaderCreator;
    private bool disposedValue;
    private Task _watcherLoop;
    [CompilerGeneratedAttribute]
private Action`2<WatchEventType, T> OnEvent;
    [CompilerGeneratedAttribute]
private Action`1<Exception> OnError;
    [CompilerGeneratedAttribute]
private Action OnClosed;
    public bool Watching { get; private set; }
    public Watcher`1(Func`1<Task`1<StreamReader>> streamReaderCreator, Action`2<WatchEventType, T> onEvent, Action`1<Exception> onError, Action onClosed);
    public Watcher`1(Func`1<Task`1<TextReader>> streamReaderCreator, Action`2<WatchEventType, T> onEvent, Action`1<Exception> onError, Action onClosed);
    [CompilerGeneratedAttribute]
public bool get_Watching();
    [CompilerGeneratedAttribute]
private void set_Watching(bool value);
    [CompilerGeneratedAttribute]
public void add_OnEvent(Action`2<WatchEventType, T> value);
    [CompilerGeneratedAttribute]
public void remove_OnEvent(Action`2<WatchEventType, T> value);
    [CompilerGeneratedAttribute]
public void add_OnError(Action`1<Exception> value);
    [CompilerGeneratedAttribute]
public void remove_OnError(Action`1<Exception> value);
    [CompilerGeneratedAttribute]
public void add_OnClosed(Action value);
    [CompilerGeneratedAttribute]
public void remove_OnClosed(Action value);
    [AsyncStateMachineAttribute("k8s.Watcher`1/<WatcherLoop>d__20")]
private Task WatcherLoop(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("k8s.Watcher`1/<CreateWatchEventEnumerator>d__21")]
internal static IAsyncEnumerable`1<ValueTuple`2<WatchEventType, T>> CreateWatchEventEnumerator(Func`1<Task`1<TextReader>> streamReaderCreator, Action`1<Exception> onError, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("k8s.Watcher`1/<<-ctor>b__9_0>d")]
[CompilerGeneratedAttribute]
private Task <.ctor>b__9_0();
    [CompilerGeneratedAttribute]
internal static Task`1<TR> <CreateWatchEventEnumerator>g__AttachCancellationToken|21_0(Task`1<TR> task, <>c__DisplayClass21_0& );
}
[ExtensionAttribute]
public static class k8s.WatcherExt : object {
    [ExtensionAttribute]
public static Watcher`1<T> Watch(Task`1<HttpOperationResponse`1<L>> responseTask, Action`2<WatchEventType, T> onEvent, Action`1<Exception> onError, Action onClosed);
    private static Func`1<Task`1<TextReader>> MakeStreamReaderCreator(Task`1<HttpOperationResponse`1<L>> responseTask);
    [ExtensionAttribute]
public static Watcher`1<T> Watch(HttpOperationResponse`1<L> response, Action`2<WatchEventType, T> onEvent, Action`1<Exception> onError, Action onClosed);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<ValueTuple`2<WatchEventType, T>> WatchAsync(Task`1<HttpOperationResponse`1<L>> responseTask, Action`1<Exception> onError, CancellationToken cancellationToken);
}
[JsonConverterAttribute("System.Text.Json.Serialization.JsonStringEnumConverter`1<k8s.WatchEventType>")]
public enum k8s.WatchEventType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static WatchEventType Added;
    [EnumMemberAttribute]
public static WatchEventType Modified;
    [EnumMemberAttribute]
public static WatchEventType Deleted;
    [EnumMemberAttribute]
public static WatchEventType Error;
    [EnumMemberAttribute]
public static WatchEventType Bookmark;
}
public class k8s.WebSocketBuilder : object {
    [CompilerGeneratedAttribute]
private ClientWebSocket <WebSocket>k__BackingField;
    protected ClientWebSocket WebSocket { get; private set; }
    public ClientWebSocketOptions Options { get; }
    [CompilerGeneratedAttribute]
protected ClientWebSocket get_WebSocket();
    [CompilerGeneratedAttribute]
private void set_WebSocket(ClientWebSocket value);
    public ClientWebSocketOptions get_Options();
    public virtual WebSocketBuilder SetRequestHeader(string headerName, string headerValue);
    public virtual WebSocketBuilder AddClientCertificate(X509Certificate2 certificate);
    public WebSocketBuilder ExpectServerCertificate(X509Certificate2Collection serverCertificate);
    public WebSocketBuilder SkipServerCertificateValidation();
    [AsyncStateMachineAttribute("k8s.WebSocketBuilder/<BuildAndConnectAsync>d__11")]
public virtual Task`1<WebSocket> BuildAndConnectAsync(Uri uri, CancellationToken cancellationToken);
}
public static class k8s.WebSocketProtocol : object {
    public static string ChannelWebSocketProtocol;
    public static string Base64ChannelWebSocketProtocol;
    public static string V4BinaryWebsocketProtocol;
    public static string V4Base64WebsocketProtocol;
}
[ExtensionAttribute]
public static class k8s.WellKnownOperationsExtensions : object {
    [ExtensionAttribute]
public static string GetServiceAccountIssuerOpenIDConfiguration(IWellKnownOperations operations);
    [AsyncStateMachineAttribute("k8s.WellKnownOperationsExtensions/<GetServiceAccountIssuerOpenIDConfigurationAsync>d__1")]
[ExtensionAttribute]
public static Task`1<string> GetServiceAccountIssuerOpenIDConfigurationAsync(IWellKnownOperations operations, CancellationToken cancellationToken);
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.133.12845")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string RootNamespace;
    internal static string KubernetesSwaggerVersion;
    private static ThisAssembly();
}
