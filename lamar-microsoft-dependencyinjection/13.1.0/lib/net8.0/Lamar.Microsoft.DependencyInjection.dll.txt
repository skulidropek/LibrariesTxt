[ExtensionAttribute]
public static class Lamar.Microsoft.DependencyInjection.HostBuilderExtensions : object {
    [ExtensionAttribute]
public static IHostBuilder OverrideServices(IHostBuilder builder, Action`1<ServiceRegistry> overrides);
    [ExtensionAttribute]
public static HostApplicationBuilder UseLamar(HostApplicationBuilder builder, Action`1<ServiceRegistry> configure);
    [ExtensionAttribute]
public static IHostBuilder UseLamar(IHostBuilder builder, Action`2<HostBuilderContext, ServiceRegistry> configure);
    [ExtensionAttribute]
public static IHostBuilder UseLamar(IHostBuilder builder, Action`1<ServiceRegistry> configure);
    [ExtensionAttribute]
public static IServiceCollection AddLamar(IServiceCollection services, ServiceRegistry registry);
}
public class Lamar.Microsoft.DependencyInjection.LamarServiceProviderFactory : object {
    public sealed virtual ServiceRegistry CreateBuilder(IServiceCollection services);
    public sealed virtual IServiceProvider CreateServiceProvider(IServiceCollection containerBuilder);
    public sealed virtual IServiceProvider CreateServiceProvider(ServiceRegistry containerBuilder);
    private sealed virtual override IServiceCollection Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<Microsoft.Extensions.DependencyInjection.IServiceCollection>.CreateBuilder(IServiceCollection services);
}
