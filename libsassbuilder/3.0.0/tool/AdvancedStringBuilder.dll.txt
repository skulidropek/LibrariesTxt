internal class AdvancedStringBuilder.DefaultStringBuilderPool : StringBuilderPool {
    private static int DefaultInitialBuilderCapacity;
    private static int DefaultMaxBuilderCapacity;
    private static int BuilderCountPerProcessor;
    private int _initialBuilderCapacity;
    private int _maxBuilderCapacity;
    private StringBuilder _firstBuilder;
    private StringBuilder[] _builders;
    internal DefaultStringBuilderPool(int poolSize);
    internal DefaultStringBuilderPool(int initialBuilderCapacity, int maxBuilderCapacity);
    internal DefaultStringBuilderPool(int initialBuilderCapacity, int maxBuilderCapacity, int poolSize);
    public virtual StringBuilder Rent();
    public virtual StringBuilder Rent(int capacity);
    private StringBuilder RentViaScan();
    public virtual void Return(StringBuilder builder);
    private void ReturnViaScan(StringBuilder builder);
}
internal class AdvancedStringBuilder.Resources.Strings : object {
    private static Lazy`1<ResourceManager> _resourceManager;
    private static CultureInfo _resourceCulture;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentOutOfRange_InitialBuilderCapacityGreaterThanMaxBuilderCapacity { get; }
    internal static string ArgumentOutOfRange_InitialBuilderCapacityNonPositive { get; }
    internal static string ArgumentOutOfRange_MaxBuilderCapacityNonPositive { get; }
    internal static string ArgumentOutOfRange_PoolSizeNonPositive { get; }
    private static Strings();
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ArgumentOutOfRange_InitialBuilderCapacityGreaterThanMaxBuilderCapacity();
    internal static string get_ArgumentOutOfRange_InitialBuilderCapacityNonPositive();
    internal static string get_ArgumentOutOfRange_MaxBuilderCapacityNonPositive();
    internal static string get_ArgumentOutOfRange_PoolSizeNonPositive();
    private static string GetString(string name);
}
[ExtensionAttribute]
public static class AdvancedStringBuilder.StringBuilderExtensions : object {
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, string format, object arg0);
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, string format, object arg0, object arg1);
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, string format, object arg0, object arg1, object arg2);
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, string format, Object[] args);
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, IFormatProvider provider, string format, object arg0);
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, IFormatProvider provider, string format, object arg0, object arg1);
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, IFormatProvider provider, string format, object arg0, object arg1, object arg2);
    [ExtensionAttribute]
public static StringBuilder AppendFormatLine(StringBuilder source, IFormatProvider provider, string format, Object[] args);
    [ExtensionAttribute]
public static StringBuilder TrimStart(StringBuilder source);
    [ExtensionAttribute]
public static StringBuilder TrimEnd(StringBuilder source);
}
public abstract class AdvancedStringBuilder.StringBuilderPool : object {
    private static StringBuilderPool s_sharedInstance;
    public static StringBuilderPool Shared { get; }
    private static StringBuilderPool();
    public static StringBuilderPool get_Shared();
    private static StringBuilderPool EnsureSharedCreated();
    public static StringBuilderPool Create();
    public static StringBuilderPool Create(int poolSize);
    public static StringBuilderPool Create(int initialBuilderCapacity, int maxBuilderCapacity);
    public static StringBuilderPool Create(int initialBuilderCapacity, int maxBuilderCapacity, int poolSize);
    public abstract virtual StringBuilder Rent();
    public abstract virtual StringBuilder Rent(int capacity);
    public abstract virtual void Return(StringBuilder builder);
}
