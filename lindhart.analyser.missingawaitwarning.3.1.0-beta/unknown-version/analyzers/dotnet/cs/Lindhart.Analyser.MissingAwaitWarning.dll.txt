[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Lindhart.Analyser.MissingAwaitWarning.LindhartAnalyserMissingAwaitWarningAnalyzer : DiagnosticAnalyzer {
    public static string UnawaitedTaskRuleId;
    public static string PossibleUnawaitedTaskVariableRuleId;
    public static LocalizableString UnawaitedTaskTitle;
    public static LocalizableString PossibleUnawaitedVariableTitle;
    public static LocalizableString UnawaitedTaskMessageFormat;
    public static LocalizableString UnawaitedTaskDescription;
    public static LocalizableString PossibleUnawaitedVariableMessageFormat;
    public static LocalizableString PossibleUnawaitedVariableDescription;
    private static string Category;
    private static DiagnosticDescriptor UnawaitedTaskRule;
    private static DiagnosticDescriptor PossibleUnawaitedVariableRule;
    private static String[] AwaitableTypes;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static LindhartAnalyserMissingAwaitWarningAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyseSymbolNode(SyntaxNodeAnalysisContext syntaxNodeAnalysisContext);
    private static void AnalyseParentNode(SyntaxNodeAnalysisContext syntaxNodeAnalysisContext, SyntaxNode node, IMethodSymbol methodSymbol);
    private static bool EqualsType(ITypeSymbol typeSymbol, SemanticModel semanticModel, String[] types);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Lindhart.Analyser.MissingAwaitWarning.LindhartAnalyserMissingAwaitWarningCodeFixProvider : CodeFixProvider {
    private static string Title;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    [AsyncStateMachineAttribute("Lindhart.Analyser.MissingAwaitWarning.LindhartAnalyserMissingAwaitWarningCodeFixProvider/<RegisterCodeFixesAsync>d__3")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
    [AsyncStateMachineAttribute("Lindhart.Analyser.MissingAwaitWarning.LindhartAnalyserMissingAwaitWarningCodeFixProvider/<InsertAwaitKeyword>d__4")]
private Task`1<Document> InsertAwaitKeyword(Document document, InvocationExpressionSyntax declaration, CancellationToken cancellationToken);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Lindhart.Analyser.MissingAwaitWarning.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string PossibleUnawaitedVaraibleRuleTitle { get; }
    internal static string PossibleUnawaitedVariableDescription { get; }
    internal static string PossibleUnawaitedVariableMessageFormat { get; }
    internal static string UnawaitedTaskDescription { get; }
    internal static string UnawaitedTaskMessageFormat { get; }
    internal static string UnawaitedTaskRuleTitle { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_PossibleUnawaitedVaraibleRuleTitle();
    internal static string get_PossibleUnawaitedVariableDescription();
    internal static string get_PossibleUnawaitedVariableMessageFormat();
    internal static string get_UnawaitedTaskDescription();
    internal static string get_UnawaitedTaskMessageFormat();
    internal static string get_UnawaitedTaskRuleTitle();
}
