public class Loggly.ApplicationNameTag : ComplexTag {
    public string InputValue { get; }
    public virtual string get_InputValue();
}
public abstract class Loggly.ComplexTag : object {
    [CompilerGeneratedAttribute]
private string <Formatter>k__BackingField;
    public string Formatter { get; public set; }
    public string InputValue { get; }
    public string Value { get; }
    [CompilerGeneratedAttribute]
public string get_Formatter();
    [CompilerGeneratedAttribute]
public void set_Formatter(string value);
    public abstract virtual string get_InputValue();
    public sealed virtual string get_Value();
}
public interface Loggly.Config.IHttpTransport {
}
public interface Loggly.Config.ILogglyConfig {
    public string CustomerToken { get; public set; }
    public string ApplicationName { get; public set; }
    public bool ThrowExceptions { get; public set; }
    public bool IsEnabled { get; public set; }
    public bool IsValid { get; }
    public ITagConfiguration TagConfig { get; }
    public ISearchConfiguration Search { get; }
    public ITransportConfiguration Transport { get; public set; }
    public abstract virtual string get_CustomerToken();
    public abstract virtual void set_CustomerToken(string value);
    public abstract virtual string get_ApplicationName();
    public abstract virtual void set_ApplicationName(string value);
    public abstract virtual bool get_ThrowExceptions();
    public abstract virtual void set_ThrowExceptions(bool value);
    public abstract virtual bool get_IsEnabled();
    public abstract virtual void set_IsEnabled(bool value);
    public abstract virtual bool get_IsValid();
    public abstract virtual ITagConfiguration get_TagConfig();
    public abstract virtual ISearchConfiguration get_Search();
    public abstract virtual ITransportConfiguration get_Transport();
    public abstract virtual void set_Transport(ITransportConfiguration value);
}
public interface Loggly.Config.ISearchConfiguration {
    public string Account { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public abstract virtual string get_Account();
    public abstract virtual void set_Account(string value);
    public abstract virtual string get_Username();
    public abstract virtual void set_Username(string value);
    public abstract virtual string get_Password();
    public abstract virtual void set_Password(string value);
}
public interface Loggly.Config.ITag {
    public string Value { get; }
    public abstract virtual string get_Value();
}
public interface Loggly.Config.ITagConfiguration {
    public List`1<ITag> Tags { get; }
    public abstract virtual List`1<ITag> get_Tags();
}
public interface Loggly.Config.ITransportConfiguration {
    public string EndpointHostname { get; public set; }
    public int EndpointPort { get; public set; }
    public LogTransport LogTransport { get; public set; }
    public bool IsOmitTimestamp { get; public set; }
    public string ForwardedForIp { get; public set; }
    public abstract virtual string get_EndpointHostname();
    public abstract virtual void set_EndpointHostname(string value);
    public abstract virtual int get_EndpointPort();
    public abstract virtual void set_EndpointPort(int value);
    public abstract virtual LogTransport get_LogTransport();
    public abstract virtual void set_LogTransport(LogTransport value);
    public abstract virtual bool get_IsOmitTimestamp();
    public abstract virtual void set_IsOmitTimestamp(bool value);
    public abstract virtual string get_ForwardedForIp();
    public abstract virtual void set_ForwardedForIp(string value);
}
[ExtensionAttribute]
public static class Loggly.Config.ITransportConfigurationExtensions : object {
    [ExtensionAttribute]
public static ITransportConfiguration GetCoercedToValidConfig(ITransportConfiguration input);
}
public class Loggly.Config.LogglyConfig : object {
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowExceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITagConfiguration <TagConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private ITransportConfiguration <Transport>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchConfiguration <Search>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    private static ILogglyConfig _instance;
    public string ApplicationName { get; public set; }
    public string CustomerToken { get; public set; }
    public bool ThrowExceptions { get; public set; }
    public ITagConfiguration TagConfig { get; private set; }
    public ITransportConfiguration Transport { get; public set; }
    public ISearchConfiguration Search { get; private set; }
    public bool IsEnabled { get; public set; }
    public bool IsValid { get; }
    public static ILogglyConfig Instance { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApplicationName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CustomerToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomerToken(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ThrowExceptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThrowExceptions(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ITagConfiguration get_TagConfig();
    [CompilerGeneratedAttribute]
private void set_TagConfig(ITagConfiguration value);
    [CompilerGeneratedAttribute]
public sealed virtual ITransportConfiguration get_Transport();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Transport(ITransportConfiguration value);
    [CompilerGeneratedAttribute]
public sealed virtual ISearchConfiguration get_Search();
    [CompilerGeneratedAttribute]
private void set_Search(ISearchConfiguration value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsEnabled(bool value);
    public sealed virtual bool get_IsValid();
    public static ILogglyConfig get_Instance();
    public static void set_Instance(ILogglyConfig value);
    private static ILogglyConfig GetNullConfig();
}
[GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
public enum Loggly.Config.LogTransport : Enum {
    public int value__;
    public static LogTransport Https;
    public static LogTransport SyslogSecure;
    public static LogTransport SyslogUdp;
    public static LogTransport SyslogTcp;
}
public class Loggly.Config.SearchConfiguration : object {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    public string Account { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Account();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Username();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Username(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Password();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Password(string value);
}
public class Loggly.Config.SimpleTag : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Loggly.Config.TagConfiguration : object {
    [CompilerGeneratedAttribute]
private List`1<ITag> <Tags>k__BackingField;
    public List`1<ITag> Tags { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ITag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<ITag> value);
}
[ExtensionAttribute]
public static class Loggly.Config.TagExtensions : object {
    private static Regex IllegalCharRegex;
    private static TagExtensions();
    [IteratorStateMachineAttribute("Loggly.Config.TagExtensions/<ToLegalStrings>d__1")]
[ExtensionAttribute]
public static IEnumerable`1<string> ToLegalStrings(List`1<ITag> tags);
    [ExtensionAttribute]
public static void Add(List`1<ITag> tags, string value);
    internal static string CoerceLegalTag(string tagValue);
}
public class Loggly.Config.TransportConfiguration : object {
    [CompilerGeneratedAttribute]
private LogTransport <LogTransport>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointHostname>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EndpointPort>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOmitTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ForwardedForIp>k__BackingField;
    public LogTransport LogTransport { get; public set; }
    public string EndpointHostname { get; public set; }
    public int EndpointPort { get; public set; }
    public bool IsOmitTimestamp { get; public set; }
    public string ForwardedForIp { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual LogTransport get_LogTransport();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LogTransport(LogTransport value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EndpointHostname();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EndpointHostname(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_EndpointPort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EndpointPort(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsOmitTimestamp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsOmitTimestamp(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ForwardedForIp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForwardedForIp(string value);
    public virtual string ToString();
}
public class Loggly.HostnameTag : ComplexTag {
    public string InputValue { get; }
    public virtual string get_InputValue();
}
public class Loggly.OperatingSystemPlatformTag : ComplexTag {
    public string InputValue { get; }
    public virtual string get_InputValue();
}
public class Loggly.OperatingSystemVersionTag : ComplexTag {
    public string InputValue { get; }
    public virtual string get_InputValue();
}
