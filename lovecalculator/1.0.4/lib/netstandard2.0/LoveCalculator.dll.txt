public abstract class LoveCalculator.CalculatorBase : object {
    protected Random random;
    public abstract virtual Result GenerateResult();
}
public class LoveCalculator.Calculators.PersonCalculator : CalculatorBase {
    private Random random;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Person <PersonOne>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Person <PersonTwo>k__BackingField;
    public Person PersonOne { get; public set; }
    public Person PersonTwo { get; public set; }
    [CompilerGeneratedAttribute]
public Person get_PersonOne();
    [CompilerGeneratedAttribute]
public void set_PersonOne(Person value);
    [CompilerGeneratedAttribute]
public Person get_PersonTwo();
    [CompilerGeneratedAttribute]
public void set_PersonTwo(Person value);
    public int AgeDifference();
    public int ValidateAge();
    public bool IsChild();
    public Result GenerateMinorResult();
    public Result GenerateAdultResult();
    public virtual Result GenerateResult();
}
public enum LoveCalculator.GenderType : Enum {
    public int value__;
    public static GenderType Abrosexual;
    public static GenderType Androgynosexual;
    public static GenderType Androsexual;
    public static GenderType Aromantic;
    public static GenderType Asexual;
    public static GenderType Biromantic;
    public static GenderType Bisexual;
    public static GenderType Ceterosexual;
    public static GenderType Demisexual;
    public static GenderType Demiromantic;
    public static GenderType Finsexual;
    public static GenderType Gynosexual;
    public static GenderType Greyromantic;
    public static GenderType Heterosexual;
    public static GenderType Homosexual;
    public static GenderType Heteroromantic;
    public static GenderType Homoromantic;
    public static GenderType Omnisexual;
    public static GenderType Pansexual;
    public static GenderType Panromantic;
    public static GenderType Pomosexual;
    public static GenderType Polysexual;
    public static GenderType Queer;
    public static GenderType Skoliosexual;
    public static GenderType Sapiosexual;
}
public interface LoveCalculator.IDescription {
    public string Name { get; public set; }
    public int Age { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual int get_Age();
    public abstract virtual void set_Age(int value);
}
public class LoveCalculator.Person : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Age>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private SexType <Sex>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private GenderType <Gender>k__BackingField;
    public string Name { get; public set; }
    public int Age { get; public set; }
    public bool Minor { get; }
    public SexType Sex { get; public set; }
    public GenderType Gender { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Age();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Age(int value);
    public bool get_Minor();
    [CompilerGeneratedAttribute]
public SexType get_Sex();
    [CompilerGeneratedAttribute]
public void set_Sex(SexType value);
    [CompilerGeneratedAttribute]
public GenderType get_Gender();
    [CompilerGeneratedAttribute]
public void set_Gender(GenderType value);
    public virtual int GetHashCode();
}
public static class LoveCalculator.Quotes : object {
    private static Random random;
    public static String[] NoChance;
    public static String[] LowChance;
    public static String[] MediumChance;
    public static String[] HighChance;
    public static String[] DefiniteChance;
    private static Quotes();
    public static string GetQuote(double percentage);
}
public class LoveCalculator.Result : ValueType {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private double <Percentage>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Quote>k__BackingField;
    public double Percentage { get; }
    public string Quote { get; }
    public Result(double percentage, string quote);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public double get_Percentage();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Quote();
}
public enum LoveCalculator.SexType : Enum {
    public int value__;
    public static SexType None;
    public static SexType Male;
    public static SexType Female;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
