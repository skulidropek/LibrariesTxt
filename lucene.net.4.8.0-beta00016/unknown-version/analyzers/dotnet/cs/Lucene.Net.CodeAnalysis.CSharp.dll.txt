[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Lucene.Net.CodeAnalysis.Lucene1000_SealIncrementTokenMethodCSCodeFixProvider : CodeFixProvider {
    private static string Title;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Lucene.Net.CodeAnalysis.Lucene1000_SealIncrementTokenMethodCSCodeFixProvider/<RegisterCodeFixesAsync>d__4")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
    [AsyncStateMachineAttribute("Lucene.Net.CodeAnalysis.Lucene1000_SealIncrementTokenMethodCSCodeFixProvider/<AddSealedKeywordAsync>d__5")]
private Task`1<Document> AddSealedKeywordAsync(Document document, MethodDeclarationSyntax methodDeclaration, CancellationToken cancellationToken);
    private MethodDeclarationSyntax GetIncrementTokenMethodDeclaration(ClassDeclarationSyntax classDeclaration);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Lucene.Net.CodeAnalysis.Lucene1000_SealTokenStreamClassCSCodeFixProvider : CodeFixProvider {
    private static string Title;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Lucene.Net.CodeAnalysis.Lucene1000_SealTokenStreamClassCSCodeFixProvider/<RegisterCodeFixesAsync>d__4")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
    [AsyncStateMachineAttribute("Lucene.Net.CodeAnalysis.Lucene1000_SealTokenStreamClassCSCodeFixProvider/<AddSealedKeywordAsync>d__5")]
private Task`1<Document> AddSealedKeywordAsync(Document document, ClassDeclarationSyntax classDeclaration, CancellationToken cancellationToken);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Lucene.Net.CodeAnalysis.Lucene1000_TokenStreamOrItsIncrementTokenMethodMustBeSealedCSAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static string Category;
    private static string Title;
    private static string MessageFormat;
    private static string Description;
    private static DiagnosticDescriptor Rule;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static Lucene1000_TokenStreamOrItsIncrementTokenMethodMustBeSealedCSAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private static void AnalyzeNodeCS(SyntaxNodeAnalysisContext context);
    private static bool InheritsFrom(ITypeSymbol symbol, string expectedParentTypeName);
}
