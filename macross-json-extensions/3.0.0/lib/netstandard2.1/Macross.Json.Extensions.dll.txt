[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Macross.Json.Extensions.ThrowHelper : object {
    [NullableAttribute("2")]
private static PropertyInfo s_JsonException_AppendPathInformation;
    private static ThrowHelper();
    public static JsonException GenerateJsonException_DeserializeUnableToConvertValue(Type propertyType);
    public static JsonException GenerateJsonException_DeserializeUnableToConvertValue(Type propertyType, string propertyValue, Exception innerException);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Net.Http.PushStreamContent : HttpContent {
    private Func`2<Stream, Task> _OnStreamAvailable;
    public PushStreamContent(Func`2<Stream, Task> onStreamAvailable);
    [AsyncStateMachineAttribute("System.Net.Http.PushStreamContent/<SerializeToStreamAsync>d__2")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual bool TryComputeLength(Int64& length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Net.Http.PushStreamContent`1 : HttpContent {
    private Func`3<Stream, T, Task> _OnStreamAvailable;
    private T _State;
    public PushStreamContent`1(Func`3<Stream, T, Task> onStreamAvailable, T state);
    [AsyncStateMachineAttribute("System.Net.Http.PushStreamContent`1/<SerializeToStreamAsync>d__3")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual bool TryComputeLength(Int64& length);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
internal static class System.Text.Json.Serialization.DateTimeWireFormatHelper : object {
    internal static bool TryParse(ReadOnlySpan`1<byte> source, DateTimeOffsetParseResult& parseResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class System.Text.Json.Serialization.JsonDelegatedStringConverter`1 : JsonConverter`1<T> {
    private Func`2<string, T> _ConvertValueFromStringFunc;
    private Func`2<T, string> _ConvertValueToStringFunc;
    public JsonDelegatedStringConverter`1(Func`2<string, T> convertValueFromStringFunc, Func`2<T, string> convertValueToStringFunc);
    public virtual T Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class System.Text.Json.Serialization.JsonIPAddressConverter : JsonConverter`1<IPAddress> {
    public virtual IPAddress Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, IPAddress value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class System.Text.Json.Serialization.JsonIPEndPointConverter : JsonConverter`1<IPEndPoint> {
    public virtual IPEndPoint Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, IPEndPoint value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Text.Json.Serialization.JsonMicrosoftDateTimeConverter : JsonConverterFactory {
    private static DateTime s_Epoch;
    [CompilerGeneratedAttribute]
private static Byte[] <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private static Byte[] <End>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Byte[], JsonEncodedText> <CreateJsonEncodedTextFunc>k__BackingField;
    internal static Byte[] Start { get; }
    internal static Byte[] End { get; }
    internal static Func`2<Byte[], JsonEncodedText> CreateJsonEncodedTextFunc { get; }
    private static JsonMicrosoftDateTimeConverter();
    [CompilerGeneratedAttribute]
internal static Byte[] get_Start();
    [CompilerGeneratedAttribute]
internal static Byte[] get_End();
    [CompilerGeneratedAttribute]
internal static Func`2<Byte[], JsonEncodedText> get_CreateJsonEncodedTextFunc();
    public virtual bool CanConvert(Type typeToConvert);
    public virtual JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options);
    private static Func`2<Byte[], JsonEncodedText> BuildCreateJsonEncodedTextFunc();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Text.Json.Serialization.JsonMicrosoftDateTimeOffsetConverter : JsonConverterFactory {
    private static DateTimeOffset s_Epoch;
    private static JsonMicrosoftDateTimeOffsetConverter();
    public virtual bool CanConvert(Type typeToConvert);
    public virtual JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options);
    internal static void Write(Utf8JsonWriter writer, DateTimeOffset& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Text.Json.Serialization.JsonStringEnumMemberConverter : JsonConverterFactory {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private HashSet`1<Type> _EnumTypes;
    [NullableAttribute("2")]
private JsonStringEnumMemberConverterOptions _Options;
    [NullableContextAttribute("2")]
public JsonStringEnumMemberConverter(JsonNamingPolicy namingPolicy, bool allowIntegerValues);
    public JsonStringEnumMemberConverter(JsonStringEnumMemberConverterOptions options, Type[] targetEnumTypes);
    public virtual bool CanConvert(Type typeToConvert);
    public virtual JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options);
    private static ValueTuple`2<bool, Type> TestNullableEnum(Type typeToConvert);
    internal static ulong GetEnumValue(TypeCode enumTypeCode, object value);
}
internal class System.Text.Json.Serialization.JsonStringEnumMemberConverter`1 : JsonConverter`1<TEnum> {
    private static BindingFlags EnumBindings;
    private static int MaximumAutoGrowthCacheSize;
    private bool _AllowIntegerValues;
    private Nullable`1<ulong> _DeserializationFailureFallbackValueRaw;
    private Nullable`1<TEnum> _DeserializationFailureFallbackValue;
    [NullableAttribute("1")]
private Type _EnumType;
    private TypeCode _EnumTypeCode;
    private bool _IsFlags;
    [NullableAttribute("1")]
private object _TransformedToRawCopyLockObject;
    [NullableAttribute("1")]
private object _RawToTransformedCopyLockObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<TEnum, EnumInfo<TEnum>> _RawToTransformed;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, EnumInfo<TEnum>> _TransformedToRaw;
    [NullableContextAttribute("2")]
public JsonStringEnumMemberConverter`1(JsonStringEnumMemberConverterOptions options);
    [NullableContextAttribute("1")]
public virtual TEnum Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
public virtual TEnum ReadAsPropertyName(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
public virtual void Write(Utf8JsonWriter writer, TEnum value, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
public virtual void WriteAsPropertyName(Utf8JsonWriter writer, TEnum value, JsonSerializerOptions options);
    private TEnum ConvertFlagsStringValueToEnumValue(string value, Dictionary`2<string, EnumInfo<TEnum>> transformedToRaw);
    private TEnum ReadNumericEnumValue(Utf8JsonReader& reader, JsonTokenType tokenType);
    private bool TryGetStringForFlagsEnumValue(TEnum value, ulong rawValue, Dictionary`2<TEnum, EnumInfo<TEnum>> rawToTransformed, String& flagsValueString);
    private void WriteNumericValueToSpan(ulong rawValue, Span`1& data);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Text.Json.Serialization.JsonStringEnumMemberConverterOptions : object {
    private object _DeserializationFailureFallbackValue;
    [CompilerGeneratedAttribute]
private JsonNamingPolicy <NamingPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowIntegerValues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <ConvertedDeserializationFailureFallbackValue>k__BackingField;
    public JsonNamingPolicy NamingPolicy { get; public set; }
    public bool AllowIntegerValues { get; public set; }
    public object DeserializationFailureFallbackValue { get; public set; }
    internal Nullable`1<ulong> ConvertedDeserializationFailureFallbackValue { get; private set; }
    public JsonStringEnumMemberConverterOptions(JsonNamingPolicy namingPolicy, bool allowIntegerValues, object deserializationFailureFallbackValue);
    [CompilerGeneratedAttribute]
public JsonNamingPolicy get_NamingPolicy();
    [CompilerGeneratedAttribute]
public void set_NamingPolicy(JsonNamingPolicy value);
    [CompilerGeneratedAttribute]
public bool get_AllowIntegerValues();
    [CompilerGeneratedAttribute]
public void set_AllowIntegerValues(bool value);
    public object get_DeserializationFailureFallbackValue();
    public void set_DeserializationFailureFallbackValue(object value);
    [CompilerGeneratedAttribute]
internal Nullable`1<ulong> get_ConvertedDeserializationFailureFallbackValue();
    [CompilerGeneratedAttribute]
private void set_ConvertedDeserializationFailureFallbackValue(Nullable`1<ulong> value);
    private static Nullable`1<ulong> ConvertEnumValueToUInt64(object deserializationFailureFallbackValue);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("16")]
public class System.Text.Json.Serialization.JsonStringEnumMemberConverterOptionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private JsonStringEnumMemberConverterOptions <Options>k__BackingField;
    public JsonStringEnumMemberConverterOptions Options { get; }
    public JsonStringEnumMemberConverterOptionsAttribute(Type namingPolicyType, bool allowIntegerValues, object deserializationFailureFallbackValue);
    [CompilerGeneratedAttribute]
public JsonStringEnumMemberConverterOptions get_Options();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Text.Json.Serialization.JsonTypeConverterAdapter : JsonConverterFactory {
    public virtual bool CanConvert(Type typeToConvert);
    public virtual JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class System.Text.Json.Utf8JsonStreamReader : object {
    [CompilerGeneratedAttribute]
private static Func`2<int, Byte[]> <RentBufferFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private static Action`1<Byte[]> <ReturnBufferAction>k__BackingField;
    internal static Func`2<int, Byte[]> RentBufferFunc { get; internal set; }
    internal static Action`1<Byte[]> ReturnBufferAction { get; internal set; }
    private static Utf8JsonStreamReader();
    [CompilerGeneratedAttribute]
internal static Func`2<int, Byte[]> get_RentBufferFunc();
    [CompilerGeneratedAttribute]
internal static void set_RentBufferFunc(Func`2<int, Byte[]> value);
    [CompilerGeneratedAttribute]
internal static Action`1<Byte[]> get_ReturnBufferAction();
    [CompilerGeneratedAttribute]
internal static void set_ReturnBufferAction(Action`1<Byte[]> value);
    [AsyncStateMachineAttribute("System.Text.Json.Utf8JsonStreamReader/<DeserializeAsync>d__9`1")]
public static Task`1<T> DeserializeAsync(Stream stream, DeserializeStateMachine`1<T> stateMachine, int bufferSize, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Text.Json.Utf8JsonStreamReader/<DeserializeAsync>d__10`1")]
public static Task DeserializeAsync(Stream stream, T instance, DeserializeStateMachine`1<T> stateMachine, int bufferSize, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Text.Json.Utf8JsonStreamReader/<ReadFromStreamIntoLastSequence>d__11")]
private static Task ReadFromStreamIntoLastSequence(Stream stream, Sequence lastSequence, Byte[] buffer, int bytesRemainingInBuffer, CancellationToken cancellationToken);
    private static void DeserializeInternalFromMemory(T instance, DeserializeStateMachine`1<T> stateMachine, Nullable`1& readerState, Memory`1& data, Int32& state);
    private static void DeserializeInternalFromSequence(T instance, DeserializeStateMachine`1<T> stateMachine, Nullable`1& readerState, Sequence& startSequence, Sequence lastSequence, Int32& state);
}
