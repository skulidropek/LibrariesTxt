[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class MassTransit.Configuration.CancelScheduledMessageConsumerDefinition : ConsumerDefinition`1<CancelScheduledMessageConsumer> {
    private QuartzEndpointDefinition _endpointDefinition;
    public CancelScheduledMessageConsumerDefinition(QuartzEndpointDefinition endpointDefinition);
    protected virtual void ConfigureConsumer(IReceiveEndpointConfigurator endpointConfigurator, IConsumerConfigurator`1<CancelScheduledMessageConsumer> consumerConfigurator, IRegistrationContext context);
    [CompilerGeneratedAttribute]
private void <ConfigureConsumer>b__2_0(IConsumerMessageConfigurator`1<CancelScheduledMessage> m);
    [CompilerGeneratedAttribute]
private void <ConfigureConsumer>b__2_1(IConsumerMessageConfigurator`1<CancelScheduledRecurringMessage> m);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class MassTransit.Configuration.PauseScheduledMessageConsumerDefinition : ConsumerDefinition`1<PauseScheduledMessageConsumer> {
    private QuartzEndpointDefinition _endpointDefinition;
    public PauseScheduledMessageConsumerDefinition(QuartzEndpointDefinition endpointDefinition);
    protected virtual void ConfigureConsumer(IReceiveEndpointConfigurator endpointConfigurator, IConsumerConfigurator`1<PauseScheduledMessageConsumer> consumerConfigurator, IRegistrationContext context);
    [CompilerGeneratedAttribute]
private void <ConfigureConsumer>b__2_0(IConsumerMessageConfigurator`1<PauseScheduledRecurringMessage> m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.Configuration.QuartzEndpointDefinition : object {
    private QuartzEndpointOptions _options;
    [CompilerGeneratedAttribute]
private IPartitioner <Partition>k__BackingField;
    public IPartitioner Partition { get; }
    public bool ConfigureConsumeTopology { get; }
    public bool IsTemporary { get; }
    public Nullable`1<int> PrefetchCount { get; }
    public Nullable`1<int> ConcurrentMessageLimit { get; }
    public QuartzEndpointDefinition(IOptions`1<QuartzEndpointOptions> options);
    [CompilerGeneratedAttribute]
public IPartitioner get_Partition();
    public virtual bool get_ConfigureConsumeTopology();
    public virtual bool get_IsTemporary();
    public virtual Nullable`1<int> get_PrefetchCount();
    public virtual Nullable`1<int> get_ConcurrentMessageLimit();
    private sealed virtual override string MassTransit.IEndpointDefinition.GetEndpointName(IEndpointNameFormatter formatter);
    public sealed virtual void Configure(T configurator);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class MassTransit.Configuration.ResumeScheduledMessageConsumerDefinition : ConsumerDefinition`1<ResumeScheduledMessageConsumer> {
    private QuartzEndpointDefinition _endpointDefinition;
    public ResumeScheduledMessageConsumerDefinition(QuartzEndpointDefinition endpointDefinition);
    protected virtual void ConfigureConsumer(IReceiveEndpointConfigurator endpointConfigurator, IConsumerConfigurator`1<ResumeScheduledMessageConsumer> consumerConfigurator, IRegistrationContext context);
    [CompilerGeneratedAttribute]
private void <ConfigureConsumer>b__2_0(IConsumerMessageConfigurator`1<ResumeScheduledRecurringMessage> m);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class MassTransit.Configuration.ScheduleMessageConsumerDefinition : ConsumerDefinition`1<ScheduleMessageConsumer> {
    private QuartzEndpointDefinition _endpointDefinition;
    public ScheduleMessageConsumerDefinition(QuartzEndpointDefinition endpointDefinition);
    protected virtual void ConfigureConsumer(IReceiveEndpointConfigurator endpointConfigurator, IConsumerConfigurator`1<ScheduleMessageConsumer> consumerConfigurator, IRegistrationContext context);
    [CompilerGeneratedAttribute]
private void <ConfigureConsumer>b__2_1(IConsumerMessageConfigurator`1<ScheduleMessage> m);
    [CompilerGeneratedAttribute]
private void <ConfigureConsumer>b__2_2(IConsumerMessageConfigurator`1<ScheduleRecurringMessage> m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzEndpointOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefetchCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConcurrentMessageLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueueName>k__BackingField;
    public Nullable`1<int> PrefetchCount { get; public set; }
    public Nullable`1<int> ConcurrentMessageLimit { get; public set; }
    public string QueueName { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PrefetchCount();
    [CompilerGeneratedAttribute]
public void set_PrefetchCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConcurrentMessageLimit();
    [CompilerGeneratedAttribute]
public void set_ConcurrentMessageLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_QueueName();
    [CompilerGeneratedAttribute]
public void set_QueueName(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.CancelScheduledMessageConsumer : object {
    private ISchedulerFactory _schedulerFactory;
    public CancelScheduledMessageConsumer(ISchedulerFactory schedulerFactory);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.CancelScheduledMessageConsumer/<Consume>d__2")]
public sealed virtual Task Consume(ConsumeContext`1<CancelScheduledMessage> context);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.CancelScheduledMessageConsumer/<Consume>d__3")]
public sealed virtual Task Consume(ConsumeContext`1<CancelScheduledRecurringMessage> context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.JobDataMessageContext : object {
    [NullableAttribute("1")]
private IJobExecutionContext _executionContext;
    [NullableAttribute("1")]
private JobDataMap _jobDataMap;
    [NullableAttribute("1")]
private IObjectDeserializer _objectDeserializer;
    private Nullable`1<Guid> _conversationId;
    private Nullable`1<Guid> _correlationId;
    private Uri _destinationAddress;
    private Nullable`1<DateTime> _expirationTime;
    private Uri _faultAddress;
    private Headers _headers;
    private HostInfo _hostInfo;
    private Nullable`1<Guid> _initiatorId;
    private Nullable`1<Guid> _messageId;
    private Nullable`1<Guid> _requestId;
    private Uri _responseAddress;
    private Nullable`1<DateTime> _sentTime;
    private Uri _sourceAddress;
    public Nullable`1<Guid> MessageId { get; }
    public Nullable`1<Guid> RequestId { get; }
    public Nullable`1<Guid> CorrelationId { get; }
    public Nullable`1<Guid> ConversationId { get; }
    public Nullable`1<Guid> InitiatorId { get; }
    public Nullable`1<DateTime> ExpirationTime { get; }
    public Uri SourceAddress { get; }
    public Uri DestinationAddress { get; }
    public Uri ResponseAddress { get; }
    public Uri FaultAddress { get; }
    public Nullable`1<DateTime> SentTime { get; }
    [NullableAttribute("1")]
public Headers Headers { get; }
    [NullableAttribute("1")]
public HostInfo Host { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> TransportProperties { get; }
    [NullableContextAttribute("1")]
public JobDataMessageContext(IJobExecutionContext executionContext, IObjectDeserializer objectDeserializer);
    [NullableContextAttribute("1")]
public sealed virtual IEnumerator`1<HeaderValue> GetEnumerator();
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerable`1<KeyValuePair`2<string, object>> GetAll();
    [NullableContextAttribute("1")]
public sealed virtual bool TryGetHeader(string key, Object& value);
    [NullableContextAttribute("1")]
public sealed virtual T Get(string key, T defaultValue);
    [NullableContextAttribute("0")]
public sealed virtual Nullable`1<T> Get(string key, Nullable`1<T> defaultValue);
    public sealed virtual Nullable`1<Guid> get_MessageId();
    public sealed virtual Nullable`1<Guid> get_RequestId();
    public sealed virtual Nullable`1<Guid> get_CorrelationId();
    public sealed virtual Nullable`1<Guid> get_ConversationId();
    public sealed virtual Nullable`1<Guid> get_InitiatorId();
    public sealed virtual Nullable`1<DateTime> get_ExpirationTime();
    public sealed virtual Uri get_SourceAddress();
    public sealed virtual Uri get_DestinationAddress();
    public sealed virtual Uri get_ResponseAddress();
    public sealed virtual Uri get_FaultAddress();
    public sealed virtual Nullable`1<DateTime> get_SentTime();
    [NullableContextAttribute("1")]
public sealed virtual Headers get_Headers();
    [NullableContextAttribute("1")]
public sealed virtual HostInfo get_Host();
    public IReadOnlyDictionary`2<string, object> get_TransportProperties();
    [NullableContextAttribute("1")]
private Headers GetHeaders();
    private static Nullable`1<DateTime> ConvertDateTime(string text);
    private static Nullable`1<Guid> ConvertIdToGuid(string id);
    private static Uri ConvertToUri(string uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.MassTransitJobFactory : object {
    private IBus _bus;
    public MassTransitJobFactory(IBus bus);
    public sealed virtual IJob NewJob(TriggerFiredBundle bundle, IScheduler scheduler);
    public sealed virtual void ReturnJob(IJob job);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.PauseScheduledMessageConsumer : object {
    private ISchedulerFactory _schedulerFactory;
    public PauseScheduledMessageConsumer(ISchedulerFactory schedulerFactory);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.PauseScheduledMessageConsumer/<Consume>d__2")]
public sealed virtual Task Consume(ConsumeContext`1<PauseScheduledRecurringMessage> context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.QuartzBusObserver : object {
    private IOptions`1<QuartzHostedServiceOptions> _options;
    private ISchedulerFactory _schedulerFactory;
    [NullableAttribute("2")]
private IScheduler _scheduler;
    public QuartzBusObserver(ISchedulerFactory schedulerFactory, IOptions`1<QuartzHostedServiceOptions> options);
    public sealed virtual void PostCreate(IBus bus);
    public sealed virtual void CreateFaulted(Exception exception);
    public sealed virtual Task PreStart(IBus bus);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.QuartzBusObserver/<PostStart>d__7")]
public sealed virtual Task PostStart(IBus bus, Task`1<BusReady> busReady);
    public sealed virtual Task StartFaulted(IBus bus, Exception exception);
    public sealed virtual Task PreStop(IBus bus);
    public sealed virtual Task PostStop(IBus bus);
    public sealed virtual Task StopFaulted(IBus bus, Exception exception);
}
internal static class MassTransit.QuartzIntegration.QuartzConstants : object {
    [NullableAttribute("1")]
public static string RecurringTriggerPrefix;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.QuartzTimeAdjustment : object {
    private ISchedulerFactory _schedulerFactory;
    private TimeSpan _timeOffset;
    public QuartzTimeAdjustment(ISchedulerFactory schedulerFactory);
    public QuartzTimeAdjustment(IServiceProvider provider);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.QuartzTimeAdjustment/<AdvanceTime>d__5")]
public Task AdvanceTime(TimeSpan duration);
    private DateTimeOffset GetUtcNow();
    private DateTimeOffset GetNow();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.ResumeScheduledMessageConsumer : object {
    private ISchedulerFactory _schedulerFactory;
    public ResumeScheduledMessageConsumer(ISchedulerFactory schedulerFactory);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.ResumeScheduledMessageConsumer/<Consume>d__2")]
public sealed virtual Task Consume(ConsumeContext`1<ResumeScheduledRecurringMessage> context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.ScheduledMessageJob : object {
    private IBus _bus;
    public ScheduledMessageJob(IBus bus);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.ScheduledMessageJob/<Execute>d__2")]
public sealed virtual Task Execute(IJobExecutionContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.ScheduleMessageConsumer : object {
    private static string ScheduleMessageJobId;
    private ISchedulerFactory _schedulerFactory;
    [NullableAttribute("2")]
private JobKey _jobKey;
    public ScheduleMessageConsumer(ISchedulerFactory schedulerFactory);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.ScheduleMessageConsumer/<Consume>d__4")]
public sealed virtual Task Consume(ConsumeContext`1<ScheduleMessage> context);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.ScheduleMessageConsumer/<Consume>d__5")]
public sealed virtual Task Consume(ConsumeContext`1<ScheduleRecurringMessage> context);
    private static ITrigger PopulateTrigger(ConsumeContext context, TriggerBuilder builder, MessageBody messageBody, Uri destination, String[] messageTypes, Nullable`1<Guid> messageId, Nullable`1<Guid> tokenId);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.ScheduleMessageConsumer/<EnsureJobExists>d__7")]
private Task`1<JobKey> EnsureJobExists(CancellationToken cancellationToken);
    private static string ToString(Uri uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzIntegration.SchedulerBusObserver : object {
    private QuartzSchedulerOptions _options;
    private Uri _schedulerEndpointAddress;
    [NullableAttribute("2")]
private IScheduler _scheduler;
    public SchedulerBusObserver(QuartzSchedulerOptions options);
    public sealed virtual void PostCreate(IBus bus);
    public sealed virtual void CreateFaulted(Exception exception);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.SchedulerBusObserver/<PreStart>d__6")]
public sealed virtual Task PreStart(IBus bus);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.SchedulerBusObserver/<PostStart>d__7")]
public sealed virtual Task PostStart(IBus bus, Task`1<BusReady> busReady);
    public sealed virtual Task StartFaulted(IBus bus, Exception exception);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.SchedulerBusObserver/<PreStop>d__9")]
public sealed virtual Task PreStop(IBus bus);
    [AsyncStateMachineAttribute("MassTransit.QuartzIntegration.SchedulerBusObserver/<PostStop>d__10")]
public sealed virtual Task PostStop(IBus bus);
    public sealed virtual Task StopFaulted(IBus bus, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class MassTransit.QuartzIntegrationExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Use the new .AddQuartzConsumers() method, combined with AddQuartz(), to configure the Quartz scheduler")]
public static Uri UseInMemoryScheduler(IBusFactoryConfigurator configurator, IBusRegistrationContext context, string queueName);
    [ExtensionAttribute]
public static Uri UseInMemoryScheduler(IBusFactoryConfigurator configurator, string queueName);
    [ExtensionAttribute]
public static Uri UseInMemoryScheduler(IBusFactoryConfigurator configurator, ISchedulerFactory& schedulerFactory, string queueName);
    [ExtensionAttribute]
public static Uri UseInMemoryScheduler(IBusFactoryConfigurator configurator, ISchedulerFactory schedulerFactory, string queueName);
    private static NameValueCollection GetDefaultConfiguration();
    [ExtensionAttribute]
public static Uri UseInMemoryScheduler(IBusFactoryConfigurator configurator, Action`1<QuartzSchedulerOptions> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class MassTransit.QuartzRegistrationExtensions : object {
    [ExtensionAttribute]
public static void AddQuartzConsumers(IBusRegistrationConfigurator configurator, Action`1<QuartzEndpointOptions> configure);
    [ExtensionAttribute]
public static void ConfigureQuartzConsumers(IReceiveEndpointConfigurator configurator, IBusRegistrationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MassTransit.QuartzSchedulerOptions : object {
    [CompilerGeneratedAttribute]
private ISchedulerFactory <SchedulerFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueueName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<IBus, IJobFactory> <JobFactoryFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StartScheduler>k__BackingField;
    public ISchedulerFactory SchedulerFactory { get; public set; }
    public string QueueName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<IBus, IJobFactory> JobFactoryFactory { get; public set; }
    public bool StartScheduler { get; public set; }
    [CompilerGeneratedAttribute]
public ISchedulerFactory get_SchedulerFactory();
    [CompilerGeneratedAttribute]
public void set_SchedulerFactory(ISchedulerFactory value);
    [CompilerGeneratedAttribute]
public string get_QueueName();
    [CompilerGeneratedAttribute]
public void set_QueueName(string value);
    [CompilerGeneratedAttribute]
public Func`2<IBus, IJobFactory> get_JobFactoryFactory();
    [CompilerGeneratedAttribute]
public void set_JobFactoryFactory(Func`2<IBus, IJobFactory> value);
    [CompilerGeneratedAttribute]
public bool get_StartScheduler();
    [CompilerGeneratedAttribute]
public void set_StartScheduler(bool value);
}
