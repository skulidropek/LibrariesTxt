public interface MediatR.IBaseRequest {
}
public interface MediatR.INotification {
}
public interface MediatR.IRequest {
}
public interface MediatR.IRequest`1 {
}
[NullableContextAttribute("2")]
public interface MediatR.IStreamRequest`1 {
}
[IsReadOnlyAttribute]
public class MediatR.Unit : ValueType {
    private static Unit _value;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static Task`1<Unit> <Task>k__BackingField;
    [IsReadOnlyAttribute]
public static Unit& modreq(System.Runtime.InteropServices.InAttribute) Value { get; }
    [NullableAttribute("1")]
public static Task`1<Unit> Task { get; }
    private static Unit();
    public static Unit& modreq(System.Runtime.InteropServices.InAttribute) get_Value();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public static Task`1<Unit> get_Task();
    public sealed virtual int CompareTo(Unit other);
    [NullableContextAttribute("2")]
private sealed virtual override int System.IComparable.CompareTo(object obj);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(Unit other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public static bool op_Equality(Unit first, Unit second);
    public static bool op_Inequality(Unit first, Unit second);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
