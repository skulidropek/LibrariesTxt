[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MediatR.Extensions.Autofac.DependencyInjection.Builder.MediatRConfigurationBuilder : object {
    private Assembly[] handlersFromAssembly;
    private Type mediatorType;
    private Type notificationPublisherType;
    private HashSet`1<Type> internalCustomPipelineBehaviorTypes;
    private HashSet`1<Type> internalCustomStreamPipelineBehaviorTypes;
    private HashSet`1<Type> internalOpenGenericHandlerTypesToRegister;
    private RegistrationScope registrationScope;
    private MediatRConfigurationBuilder(Assembly[] handlersFromAssembly);
    public static MediatRConfigurationBuilder Create(Assembly[] handlersFromAssembly);
    public MediatRConfigurationBuilder UseMediatorType(Type customMediatorType);
    public MediatRConfigurationBuilder UseNotificationPublisher(Type customNotificationPublisherType);
    public MediatRConfigurationBuilder WithCustomPipelineBehavior(Type customPipelineBehaviorType);
    public MediatRConfigurationBuilder WithCustomPipelineBehaviors(IEnumerable`1<Type> customPipelineBehaviorTypes);
    public MediatRConfigurationBuilder WithCustomStreamPipelineBehavior(Type customStreamPipelineBehaviorType);
    public MediatRConfigurationBuilder WithAllOpenGenericHandlerTypesRegistered();
    public MediatRConfigurationBuilder WithRegistrationScope(RegistrationScope registrationScope);
    public MediatRConfigurationBuilder WithOpenGenericHandlerTypeToRegister(Type openGenericHandlerType);
    public MediatRConfigurationBuilder WithRequestHandlersManuallyRegistered();
    public MediatRConfigurationBuilder WithCustomStreamPipelineBehaviors(IEnumerable`1<Type> customStreamPipelineBehaviorTypes);
    public MediatRConfiguration Build();
    private void AddOpenGenericHandlerToRegister(Type openHandlerType);
}
[ExtensionAttribute]
public static class MediatR.Extensions.Autofac.DependencyInjection.ContainerBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static ContainerBuilder RegisterMediatR(ContainerBuilder builder, MediatRConfiguration configuration);
}
[ExtensionAttribute]
internal static class MediatR.Extensions.Autofac.DependencyInjection.Extensions.RegistrationBuilderExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TActivatorData, TRegistrationStyle> ApplyTargetScope(IRegistrationBuilder`3<TLimit, TActivatorData, TRegistrationStyle> builder, RegistrationScope registrationScope);
}
public static class MediatR.Extensions.Autofac.DependencyInjection.KnownHandlerTypes : object {
    [NullableAttribute("1")]
public static Type[] AllTypes;
    private static KnownHandlerTypes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MediatR.Extensions.Autofac.DependencyInjection.MediatRConfiguration : object {
    [CompilerGeneratedAttribute]
private Assembly[] <HandlersFromAssemblies>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <MediatorType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <NotificationPublisherType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <CustomPipelineBehaviors>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <CustomStreamPipelineBehaviors>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <OpenGenericTypesToRegister>k__BackingField;
    [CompilerGeneratedAttribute]
private RegistrationScope <RegistrationScope>k__BackingField;
    internal Assembly[] HandlersFromAssemblies { get; }
    internal Type MediatorType { get; }
    internal Type NotificationPublisherType { get; }
    internal Type[] CustomPipelineBehaviors { get; }
    internal Type[] CustomStreamPipelineBehaviors { get; }
    internal Type[] OpenGenericTypesToRegister { get; }
    internal RegistrationScope RegistrationScope { get; }
    internal MediatRConfiguration(Assembly[] fromAssemblies, Type mediatorType, Type notificationPublisherType, Type[] openGenericTypesToRegister, Type[] customPipelineBehaviors, Type[] customStreamPipelineBehaviors, RegistrationScope registrationScope);
    [CompilerGeneratedAttribute]
internal Assembly[] get_HandlersFromAssemblies();
    [CompilerGeneratedAttribute]
internal Type get_MediatorType();
    [CompilerGeneratedAttribute]
internal Type get_NotificationPublisherType();
    [CompilerGeneratedAttribute]
internal Type[] get_CustomPipelineBehaviors();
    [CompilerGeneratedAttribute]
internal Type[] get_CustomStreamPipelineBehaviors();
    [CompilerGeneratedAttribute]
internal Type[] get_OpenGenericTypesToRegister();
    [CompilerGeneratedAttribute]
internal RegistrationScope get_RegistrationScope();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class MediatR.Extensions.Autofac.DependencyInjection.MediatRModule : Module {
    private MediatRConfiguration mediatRConfiguration;
    private Type[] builtInPipelineBehaviorTypes;
    public MediatRModule(MediatRConfiguration mediatRConfiguration);
    protected virtual void Load(ContainerBuilder builder);
    private void RegisterGeneric(ContainerBuilder builder, Type implementationType, Type asType);
}
public enum MediatR.Extensions.Autofac.DependencyInjection.RegistrationScope : Enum {
    public int value__;
    public static RegistrationScope Transient;
    public static RegistrationScope Scoped;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class MediatR.Extensions.Autofac.DependencyInjection.ServiceProviderWrapper : object {
    private ILifetimeScope lifeTimeScope;
    public ServiceProviderWrapper(ILifetimeScope lifeTimeScope);
    public sealed virtual object GetService(Type serviceType);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
