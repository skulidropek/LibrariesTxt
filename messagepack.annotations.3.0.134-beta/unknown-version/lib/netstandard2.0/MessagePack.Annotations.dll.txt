[AttributeUsageAttribute("4")]
[ConditionalAttribute("NEVERDEFINED")]
public class MessagePack.ExcludeFormatterFromSourceGeneratedResolverAttribute : Attribute {
}
[AttributeUsageAttribute("384")]
public class MessagePack.IgnoreMemberAttribute : Attribute {
}
public interface MessagePack.IMessagePackSerializationCallbackReceiver {
    public abstract virtual void OnBeforeSerialize();
    public abstract virtual void OnAfterDeserialize();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("384")]
public class MessagePack.KeyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IntKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringKey>k__BackingField;
    public Nullable`1<int> IntKey { get; private set; }
    public string StringKey { get; private set; }
    public KeyAttribute(int x);
    [NullableContextAttribute("1")]
public KeyAttribute(string x);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_IntKey();
    [CompilerGeneratedAttribute]
private void set_IntKey(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_StringKey();
    [CompilerGeneratedAttribute]
private void set_StringKey(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("3")]
[ConditionalAttribute("NEVERDEFINED")]
public class MessagePack.MessagePackAssumedFormattableAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <FormattableType>k__BackingField;
    public Type FormattableType { get; }
    public MessagePackAssumedFormattableAttribute(Type formattableType);
    [CompilerGeneratedAttribute]
public Type get_FormattableType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("11676")]
public class MessagePack.MessagePackFormatterAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <FormatterType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public Type FormatterType { get; private set; }
    [NullableAttribute("2")]
public Object[] Arguments { get; private set; }
    public MessagePackFormatterAttribute(Type formatterType);
    public MessagePackFormatterAttribute(Type formatterType, Object[] arguments);
    [CompilerGeneratedAttribute]
public Type get_FormatterType();
    [CompilerGeneratedAttribute]
private void set_FormatterType(Type value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Object[] get_Arguments();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Arguments(Object[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("3")]
[ConditionalAttribute("NEVERDEFINED")]
public class MessagePack.MessagePackKnownFormatterAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <FormatterType>k__BackingField;
    public Type FormatterType { get; }
    public MessagePackKnownFormatterAttribute(Type formatterType);
    [CompilerGeneratedAttribute]
public Type get_FormatterType();
}
[AttributeUsageAttribute("12")]
public class MessagePack.MessagePackObjectAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <KeyAsPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SuppressSourceGeneration>k__BackingField;
    public bool KeyAsPropertyName { get; private set; }
    public bool SuppressSourceGeneration { get; public set; }
    public MessagePackObjectAttribute(bool keyAsPropertyName);
    [CompilerGeneratedAttribute]
public bool get_KeyAsPropertyName();
    [CompilerGeneratedAttribute]
private void set_KeyAsPropertyName(bool value);
    [CompilerGeneratedAttribute]
public bool get_SuppressSourceGeneration();
    [CompilerGeneratedAttribute]
public void set_SuppressSourceGeneration(bool value);
}
[AttributeUsageAttribute("32")]
public class MessagePack.SerializationConstructorAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1028")]
public class MessagePack.UnionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <SubType>k__BackingField;
    public int Key { get; private set; }
    public Type SubType { get; private set; }
    public UnionAttribute(int key, Type subType);
    public UnionAttribute(int key, string subType);
    [CompilerGeneratedAttribute]
public int get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(int value);
    [CompilerGeneratedAttribute]
public Type get_SubType();
    [CompilerGeneratedAttribute]
private void set_SubType(Type value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.139.59561")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
