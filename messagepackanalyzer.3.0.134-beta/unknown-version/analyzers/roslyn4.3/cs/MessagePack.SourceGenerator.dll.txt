public static class MessagePack.Internal.AutomataKeyGen : object {
    [NullableAttribute("1")]
public static MethodInfo GetKeyMethod;
    private static AutomataKeyGen();
    public static ulong GetKey(ReadOnlySpan`1& span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.MessagePackSerializationException : Exception {
    [NullableContextAttribute("2")]
public MessagePackSerializationException(string message);
    [NullableContextAttribute("2")]
public MessagePackSerializationException(string message, Exception inner);
    protected MessagePackSerializationException(SerializationInfo info, StreamingContext context);
    [DoesNotReturnAttribute]
internal static Exception ThrowUnexpectedNilWhileDeserializing();
}
internal static class MessagePack.SafeBitConverter : object {
    internal static long ToInt64(ReadOnlySpan`1<byte> value);
    internal static ulong ToUInt64(ReadOnlySpan`1<byte> value);
    internal static ushort ToUInt16(ReadOnlySpan`1<byte> value);
    internal static UInt32 ToUInt32(ReadOnlySpan`1<byte> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class MessagePack.SourceGenerator.Analyzers.MsgPack001SpecifyOptionsAnalyzer : DiagnosticAnalyzer {
    public static string MissingOptionsId;
    public static DiagnosticDescriptor MissingOptionsDescriptor;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableArray`1<DiagnosticDescriptor> ReusableSupportedDiagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static MsgPack001SpecifyOptionsAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyzeInvocation(OperationAnalysisContext ctxt, ITypeSymbol messagePackSerializationOptionsTypeSymbol);
    [CompilerGeneratedAttribute]
private void <Initialize>b__5_0(CompilationStartAnalysisContext compilationStartContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class MessagePack.SourceGenerator.Analyzers.MsgPack002UseConstantOptionsAnalyzer : DiagnosticAnalyzer {
    public static string MutableSharedOptionsId;
    public static DiagnosticDescriptor MutableSharedOptionsDescriptor;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableArray`1<DiagnosticDescriptor> ReusableSupportedDiagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static MsgPack002UseConstantOptionsAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private static bool IsLessWritableThanReadable(ISymbol symbol);
    private void AnalyzeMemberReference(OperationAnalysisContext ctxt, ITypeSymbol messagePackSerializationOptionsTypeSymbol);
    [CompilerGeneratedAttribute]
private void <Initialize>b__5_0(CompilationStartAnalysisContext compilationStartContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class MessagePack.SourceGenerator.Analyzers.MsgPack00xMessagePackAnalyzer : DiagnosticAnalyzer {
    public static string UseMessagePackObjectAttributeId;
    public static string AttributeMessagePackObjectMembersId;
    public static string InvalidMessagePackObjectId;
    public static string MessagePackFormatterMustBeMessagePackFormatterId;
    public static string DeserializingConstructorId;
    public static string AOTLimitationsId;
    public static string CollidingFormattersId;
    public static string InaccessibleFormatterTypeId;
    public static string PartialTypeRequiredId;
    public static string InaccessibleDataTypeId;
    public static string InaccessibleFormatterInstanceId;
    internal static string Category;
    internal static string MessagePackObjectAttributeShortName;
    internal static string KeyAttributeShortName;
    internal static string IgnoreShortName;
    internal static string IgnoreDataMemberShortName;
    private static string InvalidMessagePackObjectTitle;
    private static DiagnosticSeverity InvalidMessagePackObjectSeverity;
    public static DiagnosticDescriptor TypeMustBeMessagePackObject;
    public static DiagnosticDescriptor MessageFormatterMustBeMessagePackFormatter;
    public static DiagnosticDescriptor MemberNeedsKey;
    public static DiagnosticDescriptor BaseTypeContainsUnattributedPublicMembers;
    public static DiagnosticDescriptor InvalidMessagePackObject;
    public static DiagnosticDescriptor BothStringAndIntKeyAreNull;
    public static DiagnosticDescriptor DoNotMixStringAndIntKeys;
    public static DiagnosticDescriptor KeysMustBeUnique;
    public static DiagnosticDescriptor UnionAttributeRequired;
    public static DiagnosticDescriptor KeyAnnotatedMemberInMapMode;
    public static DiagnosticDescriptor NoDeserializingConstructor;
    public static DiagnosticDescriptor DeserializingConstructorParameterTypeMismatch;
    public static DiagnosticDescriptor DeserializingConstructorParameterIndexMissing;
    public static DiagnosticDescriptor DeserializingConstructorParameterNameMissing;
    public static DiagnosticDescriptor DeserializingConstructorParameterNameDuplicate;
    public static DiagnosticDescriptor AotUnionAttributeRequiresTypeArg;
    public static DiagnosticDescriptor AotArrayRankTooHigh;
    public static DiagnosticDescriptor CollidingFormatters;
    public static DiagnosticDescriptor InaccessibleFormatterInstance;
    public static DiagnosticDescriptor InaccessibleFormatterType;
    public static DiagnosticDescriptor PartialTypeRequired;
    public static DiagnosticDescriptor InaccessibleDataType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static MsgPack00xMessagePackAnalyzer();
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyzeSymbol(SymbolAnalysisContext context, ReferenceSymbols typeReferences, AnalyzerOptions options);
    [IteratorStateMachineAttribute("MessagePack.SourceGenerator.Analyzers.MsgPack00xMessagePackAnalyzer/<SearchForFormatters>d__45")]
private IEnumerable`1<FormatterDescriptor> SearchForFormatters(INamespaceOrTypeSymbol container);
    [CompilerGeneratedAttribute]
private void <Initialize>b__43_0(CompilationStartAnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class MessagePack.SourceGenerator.AnalyzerUtilities : object {
    public static String[] PrimitiveTypes;
    private static AnalyzerUtilities();
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetFullNamespaceName(INamespaceSymbol namespaceSymbol);
    [ExtensionAttribute]
public static string GetCanonicalTypeFullName(ITypeSymbol typeSymbol);
    internal static string GetHelpLink(string diagnosticId);
    internal static AnalyzerOptions ParseGeneratorAttribute(ImmutableArray`1<AttributeData> attributes, ISymbol targetSymbol, CancellationToken cancellationToken);
    internal static ImmutableHashSet`1<FormatterDescriptor> ParseKnownFormatterAttribute(ImmutableArray`1<AttributeData> attributes, CancellationToken cancellationToken);
    internal static ImmutableArray`1<FormattableType> ParseAssumedFormattableAttribute(ImmutableArray`1<AttributeData> attributes, CancellationToken cancellationToken);
    internal static IEnumerable`1<string> ResolverSymbolToInstanceExpression(SemanticModel semanticModel, IEnumerable`1<INamedTypeSymbol> resolverTypes);
    [IteratorStateMachineAttribute("MessagePack.SourceGenerator.AnalyzerUtilities/<SearchTypeForFormatterImplementations>d__8")]
internal static IEnumerable`1<INamedTypeSymbol> SearchTypeForFormatterImplementations(INamedTypeSymbol symbol);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.AnalyzerOptions : object {
    private ImmutableHashSet`1<FormatterDescriptor> knownFormatters;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableDictionary`2<QualifiedTypeName, ImmutableArray`1<FormattableType>> collidingFormatters;
    [CompilerGeneratedAttribute]
private ImmutableHashSet`1<FormattableType> <AssumedFormattableTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableDictionary`2<QualifiedTypeName, FormatterDescriptor> <KnownFormattersByName>k__BackingField;
    [CompilerGeneratedAttribute]
private GeneratorOptions <Generator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGeneratingSource>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ImmutableHashSet`1<FormattableType> AssumedFormattableTypes { get; public set; }
    public ImmutableHashSet`1<FormatterDescriptor> KnownFormatters { get; public set; }
    public ImmutableDictionary`2<QualifiedTypeName, FormatterDescriptor> KnownFormattersByName { get; private set; }
    public GeneratorOptions Generator { get; public set; }
    public bool IsGeneratingSource { get; public set; }
    [CompilerGeneratedAttribute]
protected AnalyzerOptions(AnalyzerOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ImmutableHashSet`1<FormattableType> get_AssumedFormattableTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AssumedFormattableTypes(ImmutableHashSet`1<FormattableType> value);
    public ImmutableHashSet`1<FormatterDescriptor> get_KnownFormatters();
    public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KnownFormatters(ImmutableHashSet`1<FormatterDescriptor> value);
    [CompilerGeneratedAttribute]
public ImmutableDictionary`2<QualifiedTypeName, FormatterDescriptor> get_KnownFormattersByName();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KnownFormattersByName(ImmutableDictionary`2<QualifiedTypeName, FormatterDescriptor> value);
    [CompilerGeneratedAttribute]
public GeneratorOptions get_Generator();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Generator(GeneratorOptions value);
    [CompilerGeneratedAttribute]
public bool get_IsGeneratingSource();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsGeneratingSource(bool value);
    internal AnalyzerOptions WithFormatterTypes(ImmutableArray`1<FormattableType> formattableTypes, ImmutableHashSet`1<FormatterDescriptor> customFormatters);
    internal AnalyzerOptions WithAssemblyAttributes(ImmutableArray`1<AttributeData> assemblyAttributes, CancellationToken cancellationToken);
    internal ImmutableArray`1<FormattableType> GetCollidingFormatterDataTypes(QualifiedTypeName formatter);
    [NullableContextAttribute("2")]
public virtual bool Equals(AnalyzerOptions other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(AnalyzerOptions left, AnalyzerOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(AnalyzerOptions left, AnalyzerOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual AnalyzerOptions <Clone>$();
    [CompilerGeneratedAttribute]
internal static int <GetHashCode>g__Hash|27_0(int hashCode, int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class MessagePack.SourceGenerator.CodeAnalysis.CodeAnalysisUtilities : object {
    private static HashSet`1<char> InvalidFileNameChars;
    private static CodeAnalysisUtilities();
    public static string QualifyWithOptionalNamespace(string leafTypeOrNamespace, string baseNamespace);
    public static string AppendNameToNamespace(string left, string right);
    public static string GetSanitizedFileName(string fileName);
    internal static IEnumerable`1<BaseTypeDeclarationSyntax> FindInaccessibleTypes(ITypeSymbol target);
    [IteratorStateMachineAttribute("MessagePack.SourceGenerator.CodeAnalysis.CodeAnalysisUtilities/<EnumerateTypeAndContainingTypes>d__6")]
internal static IEnumerable`1<ValueTuple`2<ITypeSymbol, BaseTypeDeclarationSyntax>> EnumerateTypeAndContainingTypes(ITypeSymbol target);
    internal static int GetArity(ITypeSymbol dataType);
    internal static ImmutableArray`1<string> GetTypeParameters(ITypeSymbol dataType);
    internal static ImmutableArray`1<string> GetTypeArguments(ITypeSymbol dataType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class MessagePack.SourceGenerator.CodeAnalysis.CustomFormatterRegisterInfo : ResolverRegisterInfo {
    [CompilerGeneratedAttribute]
private FormatterDescriptor <CustomFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public FormatterDescriptor CustomFormatter { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
protected CustomFormatterRegisterInfo(CustomFormatterRegisterInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public FormatterDescriptor get_CustomFormatter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CustomFormatter(FormatterDescriptor value);
    public virtual string GetFormatterInstanceForResolver();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CustomFormatterRegisterInfo left, CustomFormatterRegisterInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CustomFormatterRegisterInfo left, CustomFormatterRegisterInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ResolverRegisterInfo other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(CustomFormatterRegisterInfo other);
    [CompilerGeneratedAttribute]
public virtual ResolverRegisterInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class MessagePack.SourceGenerator.CodeAnalysis.EnumSerializationInfo : ResolverRegisterInfo {
    [CompilerGeneratedAttribute]
private string <UnderlyingTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public string UnderlyingTypeName { get; public set; }
    public string UnderlyingTypeKeyword { get; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private EnumSerializationInfo(EnumSerializationInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_UnderlyingTypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UnderlyingTypeName(string value);
    public string get_UnderlyingTypeKeyword();
    public static EnumSerializationInfo Create(INamedTypeSymbol dataType, ISymbol enumUnderlyingType, ResolverOptions resolverOptions);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(EnumSerializationInfo left, EnumSerializationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(EnumSerializationInfo left, EnumSerializationInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ResolverRegisterInfo other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(EnumSerializationInfo other);
    [CompilerGeneratedAttribute]
public virtual ResolverRegisterInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.FormattableType : object {
    [CompilerGeneratedAttribute]
private QualifiedTypeName <Name>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public QualifiedTypeName Name { get; public set; }
    public FormattableType(QualifiedTypeName Name);
    public FormattableType(ITypeSymbol type);
    [CompilerGeneratedAttribute]
protected FormattableType(FormattableType original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public QualifiedTypeName get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(QualifiedTypeName value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(FormattableType left, FormattableType right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(FormattableType left, FormattableType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(FormattableType other);
    [CompilerGeneratedAttribute]
public virtual FormattableType <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(QualifiedTypeName& Name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.FormatterDescriptor : object {
    [CompilerGeneratedAttribute]
private QualifiedTypeName <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <InstanceProvidingMember>k__BackingField;
    [CompilerGeneratedAttribute]
private QualifiedTypeName <InstanceTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableHashSet`1<FormattableType> <FormattableTypes>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private DiagnosticDescriptor <InaccessibleDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeFromSourceGeneratedResolver>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public QualifiedTypeName Name { get; public set; }
    [NullableAttribute("2")]
public string InstanceProvidingMember { get; public set; }
    public QualifiedTypeName InstanceTypeName { get; public set; }
    public ImmutableHashSet`1<FormattableType> FormattableTypes { get; public set; }
    [NullableAttribute("2")]
public DiagnosticDescriptor InaccessibleDescriptor { get; public set; }
    public bool ExcludeFromSourceGeneratedResolver { get; public set; }
    public string InstanceExpression { get; }
    public FormatterDescriptor(QualifiedTypeName Name, string InstanceProvidingMember, QualifiedTypeName InstanceTypeName, ImmutableHashSet`1<FormattableType> FormattableTypes);
    [CompilerGeneratedAttribute]
protected FormatterDescriptor(FormatterDescriptor original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public QualifiedTypeName get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(QualifiedTypeName value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_InstanceProvidingMember();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InstanceProvidingMember(string value);
    [CompilerGeneratedAttribute]
public QualifiedTypeName get_InstanceTypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InstanceTypeName(QualifiedTypeName value);
    [CompilerGeneratedAttribute]
public ImmutableHashSet`1<FormattableType> get_FormattableTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FormattableTypes(ImmutableHashSet`1<FormattableType> value);
    public static bool TryCreate(INamedTypeSymbol type, FormatterDescriptor& formatter);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public DiagnosticDescriptor get_InaccessibleDescriptor();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InaccessibleDescriptor(DiagnosticDescriptor value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeFromSourceGeneratedResolver();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExcludeFromSourceGeneratedResolver(bool value);
    public string get_InstanceExpression();
    [NullableContextAttribute("2")]
public virtual bool Equals(FormatterDescriptor other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(FormatterDescriptor left, FormatterDescriptor right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(FormatterDescriptor left, FormatterDescriptor right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual FormatterDescriptor <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(QualifiedTypeName& Name, String& InstanceProvidingMember, QualifiedTypeName& InstanceTypeName, ImmutableHashSet`1& FormattableTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.FormattersOptions : object {
    [CompilerGeneratedAttribute]
private bool <UsesMapMode>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool UsesMapMode { get; public set; }
    [CompilerGeneratedAttribute]
protected FormattersOptions(FormattersOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_UsesMapMode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UsesMapMode(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(FormattersOptions left, FormattersOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(FormattersOptions left, FormattersOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(FormattersOptions other);
    [CompilerGeneratedAttribute]
public virtual FormattersOptions <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.FullModel : object {
    [CompilerGeneratedAttribute]
private ImmutableSortedSet`1<ObjectSerializationInfo> <ObjectInfos>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableSortedSet`1<EnumSerializationInfo> <EnumInfos>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableSortedSet`1<GenericSerializationInfo> <GenericInfos>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableSortedSet`1<UnionSerializationInfo> <UnionInfos>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableSortedSet`1<CustomFormatterRegisterInfo> <CustomFormatterInfos>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzerOptions <Options>k__BackingField;
    public static FullModel Empty;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ImmutableSortedSet`1<ObjectSerializationInfo> ObjectInfos { get; public set; }
    public ImmutableSortedSet`1<EnumSerializationInfo> EnumInfos { get; public set; }
    public ImmutableSortedSet`1<GenericSerializationInfo> GenericInfos { get; public set; }
    public ImmutableSortedSet`1<UnionSerializationInfo> UnionInfos { get; public set; }
    public ImmutableSortedSet`1<CustomFormatterRegisterInfo> CustomFormatterInfos { get; public set; }
    public AnalyzerOptions Options { get; public set; }
    public bool IsEmpty { get; }
    public FullModel(ImmutableSortedSet`1<ObjectSerializationInfo> ObjectInfos, ImmutableSortedSet`1<EnumSerializationInfo> EnumInfos, ImmutableSortedSet`1<GenericSerializationInfo> GenericInfos, ImmutableSortedSet`1<UnionSerializationInfo> UnionInfos, ImmutableSortedSet`1<CustomFormatterRegisterInfo> CustomFormatterInfos, AnalyzerOptions Options);
    [CompilerGeneratedAttribute]
protected FullModel(FullModel original);
    private static FullModel();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ImmutableSortedSet`1<ObjectSerializationInfo> get_ObjectInfos();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ObjectInfos(ImmutableSortedSet`1<ObjectSerializationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableSortedSet`1<EnumSerializationInfo> get_EnumInfos();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnumInfos(ImmutableSortedSet`1<EnumSerializationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableSortedSet`1<GenericSerializationInfo> get_GenericInfos();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GenericInfos(ImmutableSortedSet`1<GenericSerializationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableSortedSet`1<UnionSerializationInfo> get_UnionInfos();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UnionInfos(ImmutableSortedSet`1<UnionSerializationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableSortedSet`1<CustomFormatterRegisterInfo> get_CustomFormatterInfos();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CustomFormatterInfos(ImmutableSortedSet`1<CustomFormatterRegisterInfo> value);
    [CompilerGeneratedAttribute]
public AnalyzerOptions get_Options();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Options(AnalyzerOptions value);
    public bool get_IsEmpty();
    public static FullModel Combine(ImmutableArray`1<FullModel> models);
    [NullableContextAttribute("2")]
public virtual bool Equals(FullModel other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(FullModel left, FullModel right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(FullModel left, FullModel right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual FullModel <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(ImmutableSortedSet`1& ObjectInfos, ImmutableSortedSet`1& EnumInfos, ImmutableSortedSet`1& GenericInfos, ImmutableSortedSet`1& UnionInfos, ImmutableSortedSet`1& CustomFormatterInfos, AnalyzerOptions& Options);
    [CompilerGeneratedAttribute]
internal static int <GetHashCode>g__Hash|32_0(int hashCode, int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.GeneratorOptions : object {
    [CompilerGeneratedAttribute]
private ResolverOptions <Resolver>k__BackingField;
    [CompilerGeneratedAttribute]
private FormattersOptions <Formatters>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ResolverOptions Resolver { get; public set; }
    public FormattersOptions Formatters { get; public set; }
    [CompilerGeneratedAttribute]
protected GeneratorOptions(GeneratorOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ResolverOptions get_Resolver();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Resolver(ResolverOptions value);
    [CompilerGeneratedAttribute]
public FormattersOptions get_Formatters();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Formatters(FormattersOptions value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GeneratorOptions left, GeneratorOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GeneratorOptions left, GeneratorOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GeneratorOptions other);
    [CompilerGeneratedAttribute]
public virtual GeneratorOptions <Clone>$();
}
public enum MessagePack.SourceGenerator.CodeAnalysis.GenericParameterStyle : Enum {
    public int value__;
    public static GenericParameterStyle None;
    public static GenericParameterStyle TypeDefinition;
    public static GenericParameterStyle Identifiers;
    public static GenericParameterStyle Arguments;
    public static GenericParameterStyle ArityOnly;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.GenericSerializationInfo : ResolverRegisterInfo {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool IsUnboundGenericType { get; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private GenericSerializationInfo(GenericSerializationInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public virtual bool get_IsUnboundGenericType();
    public static GenericSerializationInfo Create(ITypeSymbol dataType, ResolverOptions resolverOptions, FormatterPosition formatterLocation);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GenericSerializationInfo left, GenericSerializationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GenericSerializationInfo left, GenericSerializationInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ResolverRegisterInfo other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(GenericSerializationInfo other);
    [CompilerGeneratedAttribute]
public virtual ResolverRegisterInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.GenericTypeParameterInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Constraints>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; public set; }
    public string Constraints { get; public set; }
    public bool HasConstraints { get; }
    public GenericTypeParameterInfo(string Name, string Constraints);
    [CompilerGeneratedAttribute]
protected GenericTypeParameterInfo(GenericTypeParameterInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Constraints();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Constraints(string value);
    public bool get_HasConstraints();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GenericTypeParameterInfo left, GenericTypeParameterInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GenericTypeParameterInfo left, GenericTypeParameterInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GenericTypeParameterInfo other);
    [CompilerGeneratedAttribute]
public virtual GenericTypeParameterInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& Constraints);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.MemberSerializationInfo : object {
    [CompilerGeneratedAttribute]
private bool <IsProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWritable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadable>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IntKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortTypeName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private FormatterDescriptor <CustomFormatter>k__BackingField;
    private static IReadOnlyCollection`1<string> PrimitiveTypes;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool IsProperty { get; public set; }
    public bool IsWritable { get; public set; }
    public bool IsReadable { get; public set; }
    public int IntKey { get; public set; }
    public string StringKey { get; public set; }
    public string Name { get; public set; }
    public string Type { get; public set; }
    public string ShortTypeName { get; public set; }
    [NullableAttribute("2")]
public FormatterDescriptor CustomFormatter { get; public set; }
    public MemberSerializationInfo(bool IsProperty, bool IsWritable, bool IsReadable, int IntKey, string StringKey, string Name, string Type, string ShortTypeName, FormatterDescriptor CustomFormatter);
    [CompilerGeneratedAttribute]
protected MemberSerializationInfo(MemberSerializationInfo original);
    private static MemberSerializationInfo();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_IsProperty();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsProperty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsWritable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsWritable(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsReadable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsReadable(bool value);
    [CompilerGeneratedAttribute]
public int get_IntKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IntKey(int value);
    [CompilerGeneratedAttribute]
public string get_StringKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_StringKey(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_ShortTypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ShortTypeName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public FormatterDescriptor get_CustomFormatter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CustomFormatter(FormatterDescriptor value);
    public string GetSerializeMethodString();
    public string GetDeserializeMethodString();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(MemberSerializationInfo left, MemberSerializationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(MemberSerializationInfo left, MemberSerializationInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(MemberSerializationInfo other);
    [CompilerGeneratedAttribute]
public virtual MemberSerializationInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& IsProperty, Boolean& IsWritable, Boolean& IsReadable, Int32& IntKey, String& StringKey, String& Name, String& Type, String& ShortTypeName, FormatterDescriptor& CustomFormatter);
}
public class MessagePack.SourceGenerator.CodeAnalysis.MessagePackGeneratorResolveFailedException : Exception {
    [NullableContextAttribute("1")]
public MessagePackGeneratorResolveFailedException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class MessagePack.SourceGenerator.CodeAnalysis.ObjectSerializationInfo : ResolverRegisterInfo {
    [CompilerGeneratedAttribute]
private bool <IsClass>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludesPrivateMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private GenericTypeParameterInfo[] <GenericTypeParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberSerializationInfo[] <ConstructorParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIntKey>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberSerializationInfo[] <Members>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasIMessagePackSerializationCallbackReceiver>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NeedsCastOnAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NeedsCastOnBefore>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public bool IsClass { get; public set; }
    public bool IncludesPrivateMembers { get; public set; }
    [RequiredMemberAttribute]
public GenericTypeParameterInfo[] GenericTypeParameters { get; public set; }
    [RequiredMemberAttribute]
public MemberSerializationInfo[] ConstructorParameters { get; public set; }
    [RequiredMemberAttribute]
public bool IsIntKey { get; public set; }
    [RequiredMemberAttribute]
public MemberSerializationInfo[] Members { get; public set; }
    [RequiredMemberAttribute]
public bool HasIMessagePackSerializationCallbackReceiver { get; public set; }
    [RequiredMemberAttribute]
public bool NeedsCastOnAfter { get; public set; }
    [RequiredMemberAttribute]
public bool NeedsCastOnBefore { get; public set; }
    public bool IsStringKey { get; }
    public int WriteCount { get; }
    public int MaxKey { get; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
protected ObjectSerializationInfo(ObjectSerializationInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_IsClass();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsClass(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludesPrivateMembers();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludesPrivateMembers(bool value);
    [CompilerGeneratedAttribute]
public GenericTypeParameterInfo[] get_GenericTypeParameters();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GenericTypeParameters(GenericTypeParameterInfo[] value);
    [CompilerGeneratedAttribute]
public MemberSerializationInfo[] get_ConstructorParameters();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConstructorParameters(MemberSerializationInfo[] value);
    [CompilerGeneratedAttribute]
public bool get_IsIntKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsIntKey(bool value);
    [CompilerGeneratedAttribute]
public MemberSerializationInfo[] get_Members();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Members(MemberSerializationInfo[] value);
    [CompilerGeneratedAttribute]
public bool get_HasIMessagePackSerializationCallbackReceiver();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasIMessagePackSerializationCallbackReceiver(bool value);
    [CompilerGeneratedAttribute]
public bool get_NeedsCastOnAfter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NeedsCastOnAfter(bool value);
    [CompilerGeneratedAttribute]
public bool get_NeedsCastOnBefore();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NeedsCastOnBefore(bool value);
    public bool get_IsStringKey();
    public int get_WriteCount();
    public int get_MaxKey();
    public static ObjectSerializationInfo Create(INamedTypeSymbol dataType, bool isClass, bool includesPrivateMembers, GenericTypeParameterInfo[] genericTypeParameters, MemberSerializationInfo[] constructorParameters, bool isIntKey, MemberSerializationInfo[] members, bool hasIMessagePackSerializationCallbackReceiver, bool needsCastOnAfter, bool needsCastOnBefore, ResolverOptions resolverOptions);
    [NullableContextAttribute("2")]
public MemberSerializationInfo GetMember(int index);
    public string GetConstructorString();
    [NullableContextAttribute("2")]
public virtual bool Equals(ObjectSerializationInfo other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ObjectSerializationInfo left, ObjectSerializationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ObjectSerializationInfo left, ObjectSerializationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ResolverRegisterInfo other);
    [CompilerGeneratedAttribute]
public virtual ResolverRegisterInfo <Clone>$();
    [CompilerGeneratedAttribute]
internal static int <GetHashCode>g__Hash|48_0(int hashCode, int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.QualifiedTypeName : object {
    [NullableAttribute("2")]
private QualifiedTypeName nestingType;
    [NullableAttribute("2")]
private string namespace;
    [CompilerGeneratedAttribute]
private TypeKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRecord>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Accessibility> <AccessModifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <TypeParameters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <TypeArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ArrayRank>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("2")]
public string Namespace { get; public set; }
    [NullableAttribute("2")]
public QualifiedTypeName NestingType { get; public set; }
    public TypeKind Kind { get; public set; }
    public bool IsRecord { get; public set; }
    public Nullable`1<Accessibility> AccessModifier { get; public set; }
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> TypeParameters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> TypeArguments { get; public set; }
    public int Arity { get; }
    public int ArrayRank { get; public set; }
    public QualifiedTypeName(ITypeSymbol symbol);
    public QualifiedTypeName(string namespace, TypeKind kind, string name, Nullable`1<ImmutableArray`1<string>> typeParameters);
    [NullableContextAttribute("2")]
public QualifiedTypeName(string namespace, QualifiedTypeName nestingType, TypeKind kind, string name, ImmutableArray`1<string> typeParameters);
    [CompilerGeneratedAttribute]
protected QualifiedTypeName(QualifiedTypeName original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("2")]
public string get_Namespace();
    [NullableContextAttribute("2")]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Namespace(string value);
    [NullableContextAttribute("2")]
public QualifiedTypeName get_NestingType();
    [NullableContextAttribute("2")]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NestingType(QualifiedTypeName value);
    [CompilerGeneratedAttribute]
public TypeKind get_Kind();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Kind(TypeKind value);
    [CompilerGeneratedAttribute]
public bool get_IsRecord();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsRecord(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<Accessibility> get_AccessModifier();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AccessModifier(Nullable`1<Accessibility> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_TypeParameters();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeParameters(ImmutableArray`1<string> value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_TypeArguments();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeArguments(ImmutableArray`1<string> value);
    public int get_Arity();
    [CompilerGeneratedAttribute]
public int get_ArrayRank();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ArrayRank(int value);
    public string GetQualifiedName(Qualifiers qualifier, GenericParameterStyle genericStyle);
    public string GetTypeParametersOrArgs(GenericParameterStyle style);
    public sealed virtual int CompareTo(QualifiedTypeName other);
    [NullableContextAttribute("2")]
public virtual bool Equals(QualifiedTypeName other);
    public virtual int GetHashCode();
    public virtual string ToString();
    [NullableContextAttribute("2")]
private static int Compare(QualifiedTypeName left, QualifiedTypeName right);
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(QualifiedTypeName left, QualifiedTypeName right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(QualifiedTypeName left, QualifiedTypeName right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual QualifiedTypeName <Clone>$();
}
public enum MessagePack.SourceGenerator.CodeAnalysis.Qualifiers : Enum {
    public int value__;
    public static Qualifiers None;
    public static Qualifiers ContainingTypes;
    public static Qualifiers Namespace;
    public static Qualifiers GlobalNamespace;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.ReferenceSymbols : object {
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <MessagePackObjectAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <UnionAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <SerializationConstructorAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <KeyAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IgnoreAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <FormatterAttribute>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private INamedTypeSymbol <MessagePackFormatter>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private INamedTypeSymbol <IgnoreDataMemberAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IMessagePackSerializationCallbackReceiver>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public INamedTypeSymbol MessagePackObjectAttribute { get; public set; }
    public INamedTypeSymbol UnionAttribute { get; public set; }
    public INamedTypeSymbol SerializationConstructorAttribute { get; public set; }
    public INamedTypeSymbol KeyAttribute { get; public set; }
    public INamedTypeSymbol IgnoreAttribute { get; public set; }
    public INamedTypeSymbol FormatterAttribute { get; public set; }
    [NullableAttribute("2")]
public INamedTypeSymbol MessagePackFormatter { get; public set; }
    [NullableAttribute("2")]
public INamedTypeSymbol IgnoreDataMemberAttribute { get; public set; }
    public INamedTypeSymbol IMessagePackSerializationCallbackReceiver { get; public set; }
    public ReferenceSymbols(INamedTypeSymbol MessagePackObjectAttribute, INamedTypeSymbol UnionAttribute, INamedTypeSymbol SerializationConstructorAttribute, INamedTypeSymbol KeyAttribute, INamedTypeSymbol IgnoreAttribute, INamedTypeSymbol FormatterAttribute, INamedTypeSymbol MessagePackFormatter, INamedTypeSymbol IgnoreDataMemberAttribute, INamedTypeSymbol IMessagePackSerializationCallbackReceiver);
    [CompilerGeneratedAttribute]
protected ReferenceSymbols(ReferenceSymbols original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_MessagePackObjectAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MessagePackObjectAttribute(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_UnionAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UnionAttribute(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_SerializationConstructorAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SerializationConstructorAttribute(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_KeyAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KeyAttribute(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IgnoreAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IgnoreAttribute(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_FormatterAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FormatterAttribute(INamedTypeSymbol value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public INamedTypeSymbol get_MessagePackFormatter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MessagePackFormatter(INamedTypeSymbol value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public INamedTypeSymbol get_IgnoreDataMemberAttribute();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IgnoreDataMemberAttribute(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IMessagePackSerializationCallbackReceiver();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IMessagePackSerializationCallbackReceiver(INamedTypeSymbol value);
    public static bool TryCreate(Compilation compilation, ReferenceSymbols& instance);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ReferenceSymbols left, ReferenceSymbols right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ReferenceSymbols left, ReferenceSymbols right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ReferenceSymbols other);
    [CompilerGeneratedAttribute]
public virtual ReferenceSymbols <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(INamedTypeSymbol& MessagePackObjectAttribute, INamedTypeSymbol& UnionAttribute, INamedTypeSymbol& SerializationConstructorAttribute, INamedTypeSymbol& KeyAttribute, INamedTypeSymbol& IgnoreAttribute, INamedTypeSymbol& FormatterAttribute, INamedTypeSymbol& MessagePackFormatter, INamedTypeSymbol& IgnoreDataMemberAttribute, INamedTypeSymbol& IMessagePackSerializationCallbackReceiver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.ResolverOptions : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; public set; }
    [NullableAttribute("2")]
public string Namespace { get; public set; }
    [CompilerGeneratedAttribute]
protected ResolverOptions(ResolverOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Namespace();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Namespace(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ResolverOptions left, ResolverOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ResolverOptions left, ResolverOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ResolverOptions other);
    [CompilerGeneratedAttribute]
public virtual ResolverOptions <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class MessagePack.SourceGenerator.CodeAnalysis.ResolverRegisterInfo : object {
    protected static SymbolDisplayFormat ShortTypeNameFormat;
    protected static SymbolDisplayFormat BinaryWriteFormat;
    [CompilerGeneratedAttribute]
private QualifiedTypeName <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private QualifiedTypeName <Formatter>k__BackingField;
    [CompilerGeneratedAttribute]
private FormatterPosition <FormatterLocation>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public QualifiedTypeName DataType { get; public set; }
    [RequiredMemberAttribute]
public QualifiedTypeName Formatter { get; public set; }
    public FormatterPosition FormatterLocation { get; public set; }
    public bool IsUnboundGenericType { get; }
    public string FileNameHint { get; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
protected ResolverRegisterInfo(ResolverRegisterInfo original);
    private static ResolverRegisterInfo();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public static ResolverRegisterInfo Create(ITypeSymbol dataType, ResolverOptions resolverOptions, FormatterPosition formatterLocation);
    [CompilerGeneratedAttribute]
public QualifiedTypeName get_DataType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataType(QualifiedTypeName value);
    [CompilerGeneratedAttribute]
public QualifiedTypeName get_Formatter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Formatter(QualifiedTypeName value);
    [CompilerGeneratedAttribute]
public FormatterPosition get_FormatterLocation();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FormatterLocation(FormatterPosition value);
    public virtual string GetFormatterNameForResolver(GenericParameterStyle style);
    public virtual string GetFormatterInstanceForResolver();
    public virtual bool get_IsUnboundGenericType();
    public string get_FileNameHint();
    private static QualifiedTypeName GetNestingTypeForFormatterUnderResolver(QualifiedTypeName dataType, ResolverOptions resolverOptions);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ResolverRegisterInfo left, ResolverRegisterInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ResolverRegisterInfo left, ResolverRegisterInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ResolverRegisterInfo other);
    [CompilerGeneratedAttribute]
public virtual ResolverRegisterInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.ResolverRegisterInfoComparer : object {
    public static ResolverRegisterInfoComparer Default;
    private static ResolverRegisterInfoComparer();
    public sealed virtual int Compare(ResolverRegisterInfo x, ResolverRegisterInfo y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.TypeCollector : object {
    private static SymbolDisplayFormat BinaryWriteFormat;
    private static SymbolDisplayFormat ShortTypeNameFormat;
    private static HashSet`1<string> EmbeddedTypes;
    private static Dictionary`2<string, string> KnownGenericTypes;
    private AnalyzerOptions options;
    private ReferenceSymbols typeReferences;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`1<Diagnostic> reportDiagnostic;
    [NullableAttribute("2")]
private ITypeSymbol targetType;
    private Dictionary`2<ITypeSymbol, bool> alreadyCollected;
    private Builder<ObjectSerializationInfo> collectedObjectInfo;
    private Builder<EnumSerializationInfo> collectedEnumInfo;
    private Builder<GenericSerializationInfo> collectedGenericInfo;
    private Builder<UnionSerializationInfo> collectedUnionInfo;
    private Compilation compilation;
    private TypeCollector(Compilation compilation, AnalyzerOptions options, ReferenceSymbols referenceSymbols, ITypeSymbol targetType, Action`1<Diagnostic> reportAnalyzerDiagnostic, CancellationToken cancellationToken);
    private static TypeCollector();
    public static FullModel Collect(Compilation compilation, AnalyzerOptions options, ReferenceSymbols referenceSymbols, Action`1<Diagnostic> reportAnalyzerDiagnostic, ITypeSymbol targetType, CancellationToken cancellationToken);
    private void ResetWorkspace();
    public FullModel Collect();
    private bool CollectCore(ITypeSymbol typeSymbol);
    private bool CollectEnum(INamedTypeSymbol type, ISymbol enumUnderlyingType);
    private bool CollectUnion(INamedTypeSymbol type);
    private void CollectGenericUnion(INamedTypeSymbol type);
    private bool CollectArray(IArrayTypeSymbol array);
    private ITypeSymbol ToTupleUnderlyingType(ITypeSymbol typeSymbol);
    private bool CollectGeneric(INamedTypeSymbol type);
    private bool CollectObject(INamedTypeSymbol type);
    private bool CheckValidMessagePackFormatterAttribute(AttributeData formatterAttribute);
    private ObjectSerializationInfo GetObjectInfo(INamedTypeSymbol formattedType);
    private static IEnumerable`1<BaseTypeDeclarationSyntax> FindNonPartialTypes(ITypeSymbol target);
    private static GenericTypeParameterInfo ToGenericTypeParameterInfo(ITypeParameterSymbol typeParameter);
    private static Location GetIdentifierLocation(INamedTypeSymbol type);
    private static Location GetLocation(IParameterSymbol parameter);
    [NullableContextAttribute("2")]
private static Location GetParameterListLocation(IMethodSymbol method);
    private static string GetGenericFormatterClassName(INamedTypeSymbol type);
    private static string GetMinimallyQualifiedClassName(INamedTypeSymbol type);
    [NullableContextAttribute("2")]
private static bool TryGetNextConstructor(IEnumerator`1<IMethodSymbol> ctorEnumerator, IMethodSymbol& ctor);
    private static bool IsAllowedAccessibility(Accessibility accessibility);
    private static bool IsAllowAccessibility(ITypeSymbol symbol);
    private static bool IsOpenGenericTypeRecursively(INamedTypeSymbol type);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <.ctor>b__14_0(AttributeData x2);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <.ctor>b__14_1(AttributeData x2);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <.ctor>b__14_2(AttributeData x2);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <.ctor>b__14_3(AttributeData x2);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <CollectGenericUnion>b__21_0(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <CheckValidMessagePackFormatterAttribute>b__26_0(INamedTypeSymbol x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_0(AttributeData x);
    [CompilerGeneratedAttribute]
private FormatterDescriptor <GetObjectInfo>g__GetSpecialFormatter|27_1(ISymbol member);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_8(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_9(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_10(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_11(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_12(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_13(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_16(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_17(AttributeData x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_2(IMethodSymbol x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_18(AttributeData y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetObjectInfo>b__27_5(INamedTypeSymbol x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class MessagePack.SourceGenerator.CodeAnalysis.UnionSerializationInfo : ResolverRegisterInfo {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<UnionSubTypeInfo> <SubTypes>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableArray`1<UnionSubTypeInfo> SubTypes { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private UnionSerializationInfo(UnionSerializationInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<UnionSubTypeInfo> get_SubTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SubTypes(ImmutableArray`1<UnionSubTypeInfo> value);
    public static UnionSerializationInfo Create(INamedTypeSymbol dataType, ImmutableArray`1<UnionSubTypeInfo> subTypes, ResolverOptions resolverOptions);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(UnionSerializationInfo other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(UnionSerializationInfo left, UnionSerializationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(UnionSerializationInfo left, UnionSerializationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ResolverRegisterInfo other);
    [CompilerGeneratedAttribute]
public virtual ResolverRegisterInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MessagePack.SourceGenerator.CodeAnalysis.UnionSubTypeInfo : object {
    [CompilerGeneratedAttribute]
private int <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public int Key { get; public set; }
    public string Type { get; public set; }
    public UnionSubTypeInfo(int Key, string Type);
    [CompilerGeneratedAttribute]
protected UnionSubTypeInfo(UnionSubTypeInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public int get_Key();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Key(int value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Type(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(UnionSubTypeInfo left, UnionSubTypeInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(UnionSubTypeInfo left, UnionSubTypeInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(UnionSubTypeInfo other);
    [CompilerGeneratedAttribute]
public virtual UnionSubTypeInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int32& Key, String& Type);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class MessagePack.SourceGenerator.CompositeResolverGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class MessagePack.SourceGenerator.Constants : object {
    internal static string AttributeNamespace;
    internal static string CompositeResolverAttributeName;
    internal static string GeneratedMessagePackResolverAttributeName;
    internal static string MessagePackKnownFormatterAttributeName;
    internal static string ExcludeFormatterFromSourceGeneratedResolverAttributeName;
    internal static string MessagePackAssumedFormattableAttributeName;
    internal static string MessagePackObjectAttributeName;
    internal static string MessagePackUnionAttributeName;
    internal static string SuppressSourceGenerationPropertyName;
    internal static string IMessagePackFormatterInterfaceNamespace;
    internal static string IMessagePackFormatterInterfaceName;
}
[NullableContextAttribute("1")]
public interface MessagePack.SourceGenerator.IGeneratorContext {
    public CancellationToken CancellationToken { get; }
    public abstract virtual CancellationToken get_CancellationToken();
    public abstract virtual void AddSource(string hintName, string source);
    public abstract virtual void ReportDiagnostic(Diagnostic diagnostic);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class MessagePack.SourceGenerator.MessagePackGenerator : object {
    [NullableAttribute("1")]
private static string FileHeader;
    private static MessagePackGenerator();
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    [NullableContextAttribute("1")]
private static void Generate(IGeneratorContext context, FullModel model);
    [NullableContextAttribute("1")]
private static void GenerateResolver(IGeneratorContext context, FullModel model);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <Generate>g__AddTransform|4_0(string transformOutput, string uniqueFileName, <>c__DisplayClass4_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class MessagePack.SourceGenerator.RoslynAnalyzerExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool ApproximatelyEqual(INamedTypeSymbol left, INamedTypeSymbol right);
    [IteratorStateMachineAttribute("MessagePack.SourceGenerator.RoslynAnalyzerExtensions/<EnumerateBaseType>d__1")]
[ExtensionAttribute]
public static IEnumerable`1<INamedTypeSymbol> EnumerateBaseType(ITypeSymbol symbol);
    [ExtensionAttribute]
public static AttributeData FindAttribute(IEnumerable`1<AttributeData> attributeDataList, string typeName);
    [ExtensionAttribute]
public static AttributeData FindAttributeShortName(IEnumerable`1<AttributeData> attributeDataList, string typeName);
    [ExtensionAttribute]
public static AttributeData FindAttributeIncludeBasePropertyShortName(IPropertySymbol property, string typeName);
    [ExtensionAttribute]
public static AttributeSyntax FindAttribute(BaseTypeDeclarationSyntax typeDeclaration, SemanticModel model, string typeName);
    [ExtensionAttribute]
public static INamedTypeSymbol FindBaseTargetType(ITypeSymbol symbol, string typeName);
    [ExtensionAttribute]
public static object GetSingleNamedArgumentValue(AttributeData attribute, string key);
    [ExtensionAttribute]
public static bool IsNullable(INamedTypeSymbol symbol);
    [IteratorStateMachineAttribute("MessagePack.SourceGenerator.RoslynAnalyzerExtensions/<GetAllMembers>d__9")]
[ExtensionAttribute]
public static IEnumerable`1<ISymbol> GetAllMembers(ITypeSymbol symbol);
    [ExtensionAttribute]
public static IEnumerable`1<ISymbol> GetAllInterfaceMembers(ITypeSymbol symbol);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class MessagePack.SourceGenerator.Strings : object {
    [NullableAttribute("2")]
private static ResourceManager s_resourceManager;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    public static ResourceManager ResourceManager { get; }
    [NullableAttribute("2")]
public static CultureInfo Culture { get; public set; }
    public static string MsgPack001_Description { get; }
    public static string MsgPack001_MessageFormat { get; }
    public static string MsgPack001_Title { get; }
    public static string MsgPack002_Description { get; }
    public static string MsgPack002_MessageFormat { get; }
    public static string MsgPack002_Title { get; }
    public static ResourceManager get_ResourceManager();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static CultureInfo get_Culture();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_Culture(CultureInfo value);
    [NullableContextAttribute("2")]
internal static string GetResourceString(string resourceKey, string defaultValue);
    public static string get_MsgPack001_Description();
    public static string get_MsgPack001_MessageFormat();
    public static string get_MsgPack001_Title();
    public static string get_MsgPack002_Description();
    public static string get_MsgPack002_MessageFormat();
    public static string get_MsgPack002_Title();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.CompositeResolverTemplate : CompositeResolverTemplateBase {
    [CompilerGeneratedAttribute]
private string <ResolverNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResolverName>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ResolverInstanceExpressions>k__BackingField;
    public string FileName { get; }
    [RequiredMemberAttribute]
public string ResolverNamespace { get; public set; }
    [RequiredMemberAttribute]
public string ResolverName { get; public set; }
    private ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.Info { get; }
    [RequiredMemberAttribute]
public String[] ResolverInstanceExpressions { get; public set; }
    [NullableContextAttribute("0")]
public virtual string TransformText();
    public sealed virtual string get_FileName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ResolverNamespace();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResolverNamespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ResolverName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResolverName(string value);
    private sealed virtual override ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.get_Info();
    [CompilerGeneratedAttribute]
public String[] get_ResolverInstanceExpressions();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResolverInstanceExpressions(String[] value);
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.CompositeResolverTemplateBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    public StringBuilder GenerationEnvironment { get; public set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    public StringBuilder get_GenerationEnvironment();
    public void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class MessagePack.SourceGenerator.Transforms.EmbedStringHelper : object {
    public static Encoding Utf8;
    private static EmbedStringHelper();
    public static string ToByteArrayString(Byte[] binary);
    public static int GetHeaderLength(int byteCount);
    [NullableContextAttribute("0")]
public static void EmbedHeader(int byteCount, Span`1<byte> destination);
    public static Byte[] GetEncodedStringBytes(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.EnumTemplate : EnumTemplateBase {
    [CompilerGeneratedAttribute]
private AnalyzerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private EnumSerializationInfo <Info>k__BackingField;
    public AnalyzerOptions Options { get; }
    public string ResolverNamespace { get; }
    public string ResolverName { get; }
    public EnumSerializationInfo Info { get; }
    private ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.Info { get; }
    public string FileName { get; }
    public EnumTemplate(AnalyzerOptions options, EnumSerializationInfo info);
    [NullableContextAttribute("0")]
public virtual string TransformText();
    [CompilerGeneratedAttribute]
public AnalyzerOptions get_Options();
    public sealed virtual string get_ResolverNamespace();
    public sealed virtual string get_ResolverName();
    [CompilerGeneratedAttribute]
public EnumSerializationInfo get_Info();
    private sealed virtual override ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.get_Info();
    public sealed virtual string get_FileName();
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.EnumTemplateBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    public StringBuilder GenerationEnvironment { get; public set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    public StringBuilder get_GenerationEnvironment();
    public void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.FormatterTemplate : FormatterTemplateBase {
    [CompilerGeneratedAttribute]
private AnalyzerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ObjectSerializationInfo <Info>k__BackingField;
    public AnalyzerOptions Options { get; }
    public string ResolverNamespace { get; }
    public string ResolverName { get; }
    public ObjectSerializationInfo Info { get; }
    private ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.Info { get; }
    public string FileName { get; }
    public FormatterTemplate(AnalyzerOptions options, ObjectSerializationInfo info);
    [NullableContextAttribute("0")]
public virtual string TransformText();
    [CompilerGeneratedAttribute]
public AnalyzerOptions get_Options();
    public sealed virtual string get_ResolverNamespace();
    public sealed virtual string get_ResolverName();
    [CompilerGeneratedAttribute]
public ObjectSerializationInfo get_Info();
    private sealed virtual override ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.get_Info();
    public sealed virtual string get_FileName();
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.FormatterTemplateBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    public StringBuilder GenerationEnvironment { get; public set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    public StringBuilder get_GenerationEnvironment();
    public void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
internal static class MessagePack.SourceGenerator.Transforms.GeneratorUtilities : object {
    [NullableContextAttribute("1")]
internal static bool ShouldUseFormatterResolver(MemberSerializationInfo[] infos);
}
[NullableContextAttribute("1")]
public interface MessagePack.SourceGenerator.Transforms.IFormatterTemplate {
    public string FileName { get; }
    public string ResolverNamespace { get; }
    public string ResolverName { get; }
    public ResolverRegisterInfo Info { get; }
    public abstract virtual string get_FileName();
    public abstract virtual string get_ResolverNamespace();
    public abstract virtual string get_ResolverName();
    public abstract virtual ResolverRegisterInfo get_Info();
    public abstract virtual string TransformText();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class MessagePack.SourceGenerator.Transforms.MemberInfoTuple : ValueType {
    public MemberSerializationInfo Info;
    public bool IsConstructorParameter;
    public Byte[] Binary;
    public UInt64[] Key;
    public MemberInfoTuple(MemberSerializationInfo info, bool isConstructorParameter);
    public sealed virtual int CompareTo(MemberInfoTuple other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.ResolverTemplate : ResolverTemplateBase {
    [CompilerGeneratedAttribute]
private AnalyzerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ResolverRegisterInfo> <AllRegisterRegistrations>k__BackingField;
    public AnalyzerOptions Options { get; public set; }
    public string ResolverNamespace { get; }
    public string ResolverName { get; }
    public IReadOnlyList`1<ResolverRegisterInfo> AllRegisterRegistrations { get; }
    public IEnumerable`1<ResolverRegisterInfo> OpenGenericRegistrations { get; }
    public IEnumerable`1<ResolverRegisterInfo> ConstructedTypeRegistrations { get; }
    public string FileName { get; }
    public ResolverTemplate(AnalyzerOptions options, IReadOnlyList`1<ResolverRegisterInfo> registerInfos);
    [NullableContextAttribute("0")]
public virtual string TransformText();
    [CompilerGeneratedAttribute]
public AnalyzerOptions get_Options();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Options(AnalyzerOptions value);
    public string get_ResolverNamespace();
    public string get_ResolverName();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ResolverRegisterInfo> get_AllRegisterRegistrations();
    public IEnumerable`1<ResolverRegisterInfo> get_OpenGenericRegistrations();
    public IEnumerable`1<ResolverRegisterInfo> get_ConstructedTypeRegistrations();
    public string get_FileName();
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.ResolverTemplateBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    public StringBuilder GenerationEnvironment { get; public set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    public StringBuilder get_GenerationEnvironment();
    public void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class MessagePack.SourceGenerator.Transforms.StringKeyFormatterDeserializeHelper : object {
    public static string Classify(ObjectSerializationInfo objectSerializationInfo, string indent, bool canOverwrite);
    private static bool IsConstructorParameter(ObjectSerializationInfo objectSerializationInfo, MemberSerializationInfo member);
    private static void Assign(StringBuilder buffer, MemberInfoTuple& member, bool canOverwrite, string indent, string tab, int tabCount);
    private static void ClassifyRecursion(StringBuilder buffer, string indent, int tabCount, int keyLength, IEnumerable`1<MemberInfoTuple> memberCollection, bool canOverwrite);
    private static void EmbedOne(StringBuilder buffer, string indent, int tabCount, MemberInfoTuple& member, bool canOverwrite);
    private static void EmbedSequenceEqual(StringBuilder buffer, MemberInfoTuple member, int startPosition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.StringKeyFormatterTemplate : StringKeyFormatterTemplateBase {
    [CompilerGeneratedAttribute]
private AnalyzerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ObjectSerializationInfo <Info>k__BackingField;
    public AnalyzerOptions Options { get; }
    public string ResolverNamespace { get; }
    public string ResolverName { get; }
    public ObjectSerializationInfo Info { get; }
    private ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.Info { get; }
    public string FileName { get; }
    public StringKeyFormatterTemplate(AnalyzerOptions options, ObjectSerializationInfo info);
    [NullableContextAttribute("0")]
public virtual string TransformText();
    [CompilerGeneratedAttribute]
public AnalyzerOptions get_Options();
    public sealed virtual string get_ResolverNamespace();
    public sealed virtual string get_ResolverName();
    [CompilerGeneratedAttribute]
public ObjectSerializationInfo get_Info();
    private sealed virtual override ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.get_Info();
    public sealed virtual string get_FileName();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <TransformText>b__0_1(MemberSerializationInfo x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <TransformText>b__0_4(MemberSerializationInfo x);
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.StringKeyFormatterTemplateBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    public StringBuilder GenerationEnvironment { get; public set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    public StringBuilder get_GenerationEnvironment();
    public void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class MessagePack.SourceGenerator.Transforms.TransformUtilities : object {
    [ExtensionAttribute]
internal static IDisposable EmitNestingTypesAndNamespaces(IFormatterTemplate template, Action`1<string> writer);
    [ExtensionAttribute]
internal static IDisposable EmitNestingTypesAndNamespaces(IFormatterTemplate template, QualifiedTypeName nestedType, FormatterPosition formatterLocation, Action`1<string> writer);
    [ExtensionAttribute]
internal static IDisposable EmitClassesForNamespace(IFormatterTemplate template, String& formatterVisibility, Action`1<string> writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.UnionTemplate : UnionTemplateBase {
    [CompilerGeneratedAttribute]
private AnalyzerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private UnionSerializationInfo <Info>k__BackingField;
    public AnalyzerOptions Options { get; }
    public string ResolverNamespace { get; }
    public string ResolverName { get; }
    public UnionSerializationInfo Info { get; }
    private ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.Info { get; }
    public string FileName { get; }
    public UnionTemplate(AnalyzerOptions options, UnionSerializationInfo info);
    [CompilerGeneratedAttribute]
public AnalyzerOptions get_Options();
    public sealed virtual string get_ResolverNamespace();
    public sealed virtual string get_ResolverName();
    [CompilerGeneratedAttribute]
public UnionSerializationInfo get_Info();
    private sealed virtual override ResolverRegisterInfo MessagePack.SourceGenerator.Transforms.IFormatterTemplate.get_Info();
    public sealed virtual string get_FileName();
    [NullableContextAttribute("0")]
public virtual string TransformText();
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
public class MessagePack.SourceGenerator.Transforms.UnionTemplateBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    public StringBuilder GenerationEnvironment { get; public set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    public StringBuilder get_GenerationEnvironment();
    public void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class System.CodeDom.Compiler.CompilerError : object {
    [CompilerGeneratedAttribute]
private int <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorText>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWarning>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    public int Line { get; public set; }
    public int Column { get; public set; }
    public string ErrorNumber { get; public set; }
    public string ErrorText { get; public set; }
    public bool IsWarning { get; public set; }
    public string FileName { get; public set; }
    private string WarningString { get; }
    public CompilerError(string fileName, int line, int column, string errorNumber, string errorText);
    [CompilerGeneratedAttribute]
public int get_Line();
    [CompilerGeneratedAttribute]
public void set_Line(int value);
    [CompilerGeneratedAttribute]
public int get_Column();
    [CompilerGeneratedAttribute]
public void set_Column(int value);
    [CompilerGeneratedAttribute]
public string get_ErrorNumber();
    [CompilerGeneratedAttribute]
public void set_ErrorNumber(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorText();
    [CompilerGeneratedAttribute]
public void set_ErrorText(string value);
    [CompilerGeneratedAttribute]
public bool get_IsWarning();
    [CompilerGeneratedAttribute]
public void set_IsWarning(bool value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    public virtual string ToString();
    private string get_WarningString();
}
[DefaultMemberAttribute("Item")]
public class System.CodeDom.Compiler.CompilerErrorCollection : CollectionBase {
    public CompilerError Item { get; public set; }
    public bool HasErrors { get; }
    public bool HasWarnings { get; }
    public CompilerErrorCollection(CompilerErrorCollection value);
    public CompilerErrorCollection(CompilerError[] value);
    public CompilerError get_Item(int index);
    public void set_Item(int index, CompilerError value);
    public int Add(CompilerError value);
    public void AddRange(CompilerError[] value);
    public void AddRange(CompilerErrorCollection value);
    public bool Contains(CompilerError value);
    public void CopyTo(CompilerError[] array, int index);
    public bool get_HasErrors();
    public bool get_HasWarnings();
    public int IndexOf(CompilerError value);
    public void Insert(int index, CompilerError value);
    public void Remove(CompilerError value);
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("32")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax);
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[AttributeUsageAttribute("2240")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute : Attribute {
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
private string ToStringFromEnd();
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Range : ValueType {
    [CompilerGeneratedAttribute]
private Index <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Index <End>k__BackingField;
    public Index Start { get; }
    public Index End { get; }
    public static Range All { get; }
    public Range(Index start, Index end);
    [CompilerGeneratedAttribute]
public Index get_Start();
    [CompilerGeneratedAttribute]
public Index get_End();
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Range StartAt(Index start);
    public static Range EndAt(Index end);
    public static Range get_All();
    public ValueTuple`2<int, int> GetOffsetAndLength(int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CollectionBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public Type BuilderType { get; }
    public string MethodName { get; }
    public CollectionBuilderAttribute(Type builderType, string methodName);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Arguments>k__BackingField;
    public String[] Arguments { get; }
    public InterpolatedStringHandlerArgumentAttribute(string argument);
    public InterpolatedStringHandlerArgumentAttribute(String[] arguments);
    [CompilerGeneratedAttribute]
public String[] get_Arguments();
}
[AttributeUsageAttribute("12")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiresLocationAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.RequiresPreviewFeaturesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresPreviewFeaturesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.139.59561")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
