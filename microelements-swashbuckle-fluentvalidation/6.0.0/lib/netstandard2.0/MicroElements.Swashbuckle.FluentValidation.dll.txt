[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class MicroElements.OpenApi.OpenApiExtensions : object {
    [ExtensionAttribute]
internal static void SetNotNullableIfMinLengthGreaterThenZero(OpenApiSchema schemaProperty);
    [ExtensionAttribute]
internal static void SetNewMax(OpenApiSchema schemaProperty, Expression`1<Func`2<OpenApiSchema, Nullable`1<int>>> prop, Nullable`1<int> newValue);
    [ExtensionAttribute]
internal static void SetNewMax(OpenApiSchema schemaProperty, Expression`1<Func`2<OpenApiSchema, Nullable`1<decimal>>> prop, Nullable`1<decimal> newValue);
    [ExtensionAttribute]
internal static void SetNewMin(OpenApiSchema schemaProperty, Expression`1<Func`2<OpenApiSchema, Nullable`1<int>>> prop, Nullable`1<int> newValue, bool setNotNullableIfMinLengthGreaterThenZero);
    [ExtensionAttribute]
internal static void SetNewMin(OpenApiSchema schemaProperty, Expression`1<Func`2<OpenApiSchema, Nullable`1<decimal>>> prop, Nullable`1<decimal> newValue, bool setNotNullableIfMinLengthGreaterThenZero);
    private static int NewMaxValue(Nullable`1<int> current, int newValue);
    private static decimal NewMaxValue(Nullable`1<decimal> current, decimal newValue);
    private static int NewMinValue(Nullable`1<int> current, int newValue);
    private static decimal NewMinValue(Nullable`1<decimal> current, decimal newValue);
    [ExtensionAttribute]
private static void SetPropertyValue(T target, Expression`1<Func`2<T, TValue>> propertyLambda, TValue value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.AspNetCore.AspNetJsonSerializerOptions : object {
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <Value>k__BackingField;
    public JsonSerializerOptions Value { get; }
    public AspNetJsonSerializerOptions(JsonSerializerOptions value);
    [CompilerGeneratedAttribute]
public JsonSerializerOptions get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.AspNetCore.FillSchemaGenerationOptions : object {
    private IServiceProvider _serviceProvider;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IOptions`1<SwaggerGenOptions> _swaggerGenOptions;
    public FillSchemaGenerationOptions(IServiceProvider serviceProvider, IOptions`1<SwaggerGenOptions> swaggerGenOptions);
    public sealed virtual void PostConfigure(string name, SchemaGenerationOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class MicroElements.Swashbuckle.FluentValidation.AspNetCore.ReflectionDependencyInjectionExtensions : object {
    private static Type GetByFullName(string typeName);
    [ExtensionAttribute]
public static void ConfigureJsonOptionsForAspNetCore(IServiceCollection services, Action`1<JsonSerializerOptions> configureJson);
    [ExtensionAttribute]
public static JsonSerializerOptions GetJsonSerializerOptions(IServiceProvider serviceProvider);
    [ExtensionAttribute]
public static JsonSerializerOptions GetJsonSerializerOptionsOrDefault(IServiceProvider serviceProvider);
}
public class MicroElements.Swashbuckle.FluentValidation.AspNetCore.RegistrationOptions : object {
    [CompilerGeneratedAttribute]
private bool <RegisterFluentValidationRules>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RegisterJsonSerializerOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RegisterSystemTextJsonNameResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceLifetime <ServiceLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExperimentalUseDocumentFilter>k__BackingField;
    public bool RegisterFluentValidationRules { get; public set; }
    public bool RegisterJsonSerializerOptions { get; public set; }
    public bool RegisterSystemTextJsonNameResolver { get; public set; }
    public ServiceLifetime ServiceLifetime { get; public set; }
    public bool ExperimentalUseDocumentFilter { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RegisterFluentValidationRules();
    [CompilerGeneratedAttribute]
public void set_RegisterFluentValidationRules(bool value);
    [CompilerGeneratedAttribute]
public bool get_RegisterJsonSerializerOptions();
    [CompilerGeneratedAttribute]
public void set_RegisterJsonSerializerOptions(bool value);
    [CompilerGeneratedAttribute]
public bool get_RegisterSystemTextJsonNameResolver();
    [CompilerGeneratedAttribute]
public void set_RegisterSystemTextJsonNameResolver(bool value);
    [CompilerGeneratedAttribute]
public ServiceLifetime get_ServiceLifetime();
    [CompilerGeneratedAttribute]
public void set_ServiceLifetime(ServiceLifetime value);
    [CompilerGeneratedAttribute]
public bool get_ExperimentalUseDocumentFilter();
    [CompilerGeneratedAttribute]
public void set_ExperimentalUseDocumentFilter(bool value);
}
[ExtensionAttribute]
public static class MicroElements.Swashbuckle.FluentValidation.AspNetCore.ServiceCollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddFluentValidationRulesToSwagger(IServiceCollection services, Action`1<SchemaGenerationOptions> configure, Action`1<RegistrationOptions> configureRegistration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.DefaultFluentValidationRuleProvider : object {
    private IOptions`1<SchemaGenerationOptions> _options;
    public DefaultFluentValidationRuleProvider(IOptions`1<SchemaGenerationOptions> options);
    [IteratorStateMachineAttribute("MicroElements.Swashbuckle.FluentValidation.DefaultFluentValidationRuleProvider/<GetRules>d__2")]
public sealed virtual IEnumerable`1<IFluentValidationRule`1<OpenApiSchema>> GetRules();
    [CompilerGeneratedAttribute]
private void <GetRules>b__2_3(IRuleContext`1<OpenApiSchema> context);
    [CompilerGeneratedAttribute]
private void <GetRules>b__2_5(IRuleContext`1<OpenApiSchema> context);
    [CompilerGeneratedAttribute]
private void <GetRules>b__2_7(IRuleContext`1<OpenApiSchema> context);
    [CompilerGeneratedAttribute]
private void <GetRules>b__2_11(IRuleContext`1<OpenApiSchema> context);
    [CompilerGeneratedAttribute]
private void <GetRules>b__2_13(IRuleContext`1<OpenApiSchema> context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.DocumentFilterScopeAdapter`1 : object {
    private IDocumentFilter _documentFilter;
    public DocumentFilterScopeAdapter`1(IServiceProvider serviceProvider, ServiceLifetime serviceLifetime);
    public sealed virtual void Apply(OpenApiDocument swaggerDoc, DocumentFilterContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.FluentValidationDocumentFilter : object {
    private ILogger _logger;
    [NullableAttribute("2")]
private IValidatorRegistry _validatorRegistry;
    private IReadOnlyList`1<IFluentValidationRule`1<OpenApiSchema>> _rules;
    private SchemaGenerationOptions _schemaGenerationOptions;
    [NullableContextAttribute("2")]
public FluentValidationDocumentFilter(ILoggerFactory loggerFactory, IServiceProvider serviceProvider, IValidatorRegistry validatorRegistry, IEnumerable`1<FluentValidationRule> rules, IOptions`1<SchemaGenerationOptions> schemaGenerationOptions, INameResolver nameResolver);
    public sealed virtual void Apply(OpenApiDocument swaggerDoc, DocumentFilterContext context);
    private void ApplyRulesToSchema(SchemaGenerationContext schemaGenerationContext, IValidator validator);
    [ObsoleteAttribute("Есть повтор")]
private void AddRulesFromIncludedValidators(SchemaGenerationContext schemaGenerationContext, ValidatorContext validatorContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.FluentValidationOperationFilter : object {
    private ILogger _logger;
    [NullableAttribute("2")]
private IValidatorRegistry _validatorRegistry;
    private IReadOnlyList`1<IFluentValidationRule`1<OpenApiSchema>> _rules;
    private SchemaGenerationOptions _schemaGenerationOptions;
    [NullableContextAttribute("2")]
public FluentValidationOperationFilter(ILoggerFactory loggerFactory, IServiceProvider serviceProvider, IValidatorRegistry validatorRegistry, IFluentValidationRuleProvider`1<OpenApiSchema> fluentValidationRuleProvider, IEnumerable`1<FluentValidationRule> rules, IOptions`1<SchemaGenerationOptions> schemaGenerationOptions);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
    private void ApplyInternal(OpenApiOperation operation, OperationFilterContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.FluentValidationOperationFilterScopeAdapter : object {
    private FluentValidationOperationFilter _fluentValidationRules;
    public FluentValidationOperationFilterScopeAdapter(IServiceProvider serviceProvider, ServiceLifetime serviceLifetime);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.FluentValidationRule : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<Func`2<IPropertyValidator, bool>> <Conditions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IRuleContext`1<OpenApiSchema>> <Apply>k__BackingField;
    public string Name { get; }
    public IReadOnlyCollection`1<Func`2<IPropertyValidator, bool>> Conditions { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IRuleContext`1<OpenApiSchema>> Apply { get; }
    public FluentValidationRule(string name, IReadOnlyCollection`1<Func`2<IPropertyValidator, bool>> matches, Action`1<IRuleContext`1<OpenApiSchema>> apply);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<Func`2<IPropertyValidator, bool>> get_Conditions();
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IRuleContext`1<OpenApiSchema>> get_Apply();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class MicroElements.Swashbuckle.FluentValidation.FluentValidationRuleExtensions : object {
    [ExtensionAttribute]
public static FluentValidationRule WithCondition(FluentValidationRule rule, Func`2<IPropertyValidator, bool> validatorPredicate);
    [ExtensionAttribute]
public static FluentValidationRule WithApply(FluentValidationRule rule, Action`1<IRuleContext`1<OpenApiSchema>> applyAction);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.FluentValidationRules : object {
    private ILogger _logger;
    private IValidatorRegistry _validatorRegistry;
    private IReadOnlyList`1<IFluentValidationRule`1<OpenApiSchema>> _rules;
    private SchemaGenerationOptions _schemaGenerationOptions;
    [NullableContextAttribute("2")]
public FluentValidationRules(ILoggerFactory loggerFactory, IServiceProvider serviceProvider, IValidatorRegistry validatorRegistry, IFluentValidationRuleProvider`1<OpenApiSchema> fluentValidationRuleProvider, IEnumerable`1<FluentValidationRule> rules, IOptions`1<SchemaGenerationOptions> schemaGenerationOptions);
    public sealed virtual void Apply(OpenApiSchema schema, SchemaFilterContext context);
    private void ApplyRulesToSchema(SchemaGenerationContext schemaGenerationContext, IValidator validator);
    private void AddRulesFromIncludedValidators(SchemaGenerationContext schemaGenerationContext, ValidatorContext validatorContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.FluentValidationRulesScopeAdapter : object {
    private FluentValidationRules _fluentValidationRules;
    public FluentValidationRulesScopeAdapter(IServiceProvider serviceProvider, ServiceLifetime serviceLifetime);
    public sealed virtual void Apply(OpenApiSchema schema, SchemaFilterContext context);
}
public class MicroElements.Swashbuckle.FluentValidation.Generation.SystemTextJsonNameResolver : object {
    [NullableAttribute("2")]
private JsonSerializerOptions _serializerOptions;
    [NullableContextAttribute("2")]
public SystemTextJsonNameResolver(AspNetJsonSerializerOptions serializerOptions);
    [NullableContextAttribute("1")]
public sealed virtual string GetPropertyName(PropertyInfo propertyInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.OpenApiRuleContext : object {
    [CompilerGeneratedAttribute]
private string <PropertyKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IPropertyValidator <PropertyValidator>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenApiSchema <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationRuleContext <ValidationRuleInfo>k__BackingField;
    public string PropertyKey { get; }
    public IPropertyValidator PropertyValidator { get; }
    public OpenApiSchema Schema { get; }
    public OpenApiSchema Property { get; }
    private ValidationRuleContext ValidationRuleInfo { get; }
    public OpenApiRuleContext(OpenApiSchema schema, string propertyKey, ValidationRuleContext validationRuleInfo, IPropertyValidator propertyValidator);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PropertyKey();
    [CompilerGeneratedAttribute]
public sealed virtual IPropertyValidator get_PropertyValidator();
    [CompilerGeneratedAttribute]
public sealed virtual OpenApiSchema get_Schema();
    public sealed virtual OpenApiSchema get_Property();
    [CompilerGeneratedAttribute]
private ValidationRuleContext get_ValidationRuleInfo();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.SchemaGenerationContext : object {
    [CompilerGeneratedAttribute]
private Type <SchemaType>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IFluentValidationRule`1<OpenApiSchema>> <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaGenerationOptions <SchemaGenerationOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenApiSchema <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaProvider`1<OpenApiSchema> <SchemaProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private SchemaRepository <SchemaRepository>k__BackingField;
    protected Type EqualityContract { get; }
    public Type SchemaType { get; }
    private IReadOnlyList`1<IFluentValidationRule> MicroElements.OpenApi.FluentValidation.ISchemaGenerationContext.Rules { get; }
    public IReadOnlyList`1<IFluentValidationRule`1<OpenApiSchema>> Rules { get; }
    public ISchemaGenerationOptions SchemaGenerationOptions { get; }
    public OpenApiSchema Schema { get; }
    public ISchemaProvider`1<OpenApiSchema> SchemaProvider { get; }
    public IEnumerable`1<string> Properties { get; }
    internal ISchemaGenerator SchemaGenerator { get; }
    internal SchemaRepository SchemaRepository { get; }
    public SchemaGenerationContext(SchemaRepository schemaRepository, ISchemaGenerator schemaGenerator, OpenApiSchema schema, Type schemaType, IReadOnlyList`1<IFluentValidationRule`1<OpenApiSchema>> rules, ISchemaGenerationOptions schemaGenerationOptions, ISchemaProvider`1<OpenApiSchema> schemaProvider);
    protected SchemaGenerationContext(SchemaGenerationContext original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public sealed virtual Type get_SchemaType();
    private sealed virtual override IReadOnlyList`1<IFluentValidationRule> MicroElements.OpenApi.FluentValidation.ISchemaGenerationContext.get_Rules();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<IFluentValidationRule`1<OpenApiSchema>> get_Rules();
    [CompilerGeneratedAttribute]
public sealed virtual ISchemaGenerationOptions get_SchemaGenerationOptions();
    [CompilerGeneratedAttribute]
public sealed virtual OpenApiSchema get_Schema();
    [CompilerGeneratedAttribute]
public sealed virtual ISchemaProvider`1<OpenApiSchema> get_SchemaProvider();
    public sealed virtual IEnumerable`1<string> get_Properties();
    [CompilerGeneratedAttribute]
internal ISchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
internal SchemaRepository get_SchemaRepository();
    public sealed virtual ISchemaGenerationContext`1<OpenApiSchema> With(OpenApiSchema schema);
    public sealed virtual IRuleContext`1<OpenApiSchema> Create(string schemaPropertyName, ValidationRuleContext validationRuleContext, IPropertyValidator propertyValidator);
    public virtual string ToString();
    protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
public static bool op_Inequality(SchemaGenerationContext left, SchemaGenerationContext right);
    [NullableContextAttribute("2")]
public static bool op_Equality(SchemaGenerationContext left, SchemaGenerationContext right);
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public virtual bool Equals(SchemaGenerationContext other);
    public virtual SchemaGenerationContext <Clone>$();
}
[ExtensionAttribute]
public static class MicroElements.Swashbuckle.FluentValidation.SchemaGenerationOptionsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static SchemaGenerationOptions FillFromSwashbuckleOptions(SchemaGenerationOptions options, IOptions`1<SwaggerGenOptions> swaggerGenOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.ScopedSwaggerMiddleware : object {
    private RequestDelegate _next;
    private SwaggerOptions _options;
    public ScopedSwaggerMiddleware(RequestDelegate next, SwaggerOptions options);
    [AsyncStateMachineAttribute("MicroElements.Swashbuckle.FluentValidation.ScopedSwaggerMiddleware/<Invoke>d__3")]
public Task Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider);
}
[ExtensionAttribute]
public static class MicroElements.Swashbuckle.FluentValidation.SwaggerBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IApplicationBuilder UseScopedSwagger(IApplicationBuilder app, Action`1<SwaggerOptions> setupAction);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class MicroElements.Swashbuckle.FluentValidation.SwashbuckleSchemaProvider : object {
    private SchemaRepository _schemaRepository;
    private ISchemaGenerator _schemaGenerator;
    private Func`2<Type, string> _schemaIdSelector;
    public SwashbuckleSchemaProvider(SchemaRepository schemaRepository, ISchemaGenerator schemaGenerator, Func`2<Type, string> schemaIdSelector);
    public sealed virtual OpenApiSchema GetSchemaForType(Type type);
    private string DefaultSchemaIdSelector(Type type);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
