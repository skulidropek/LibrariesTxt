[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
public class Xamarin.Android.Tools.Aidl.AidlCompiler : object {
    private Dictionary`2<string, CompilationUnit> units;
    private string output_path;
    private string output_ns;
    [CompilerGeneratedAttribute]
private Action`2<string, string> FileWritten;
    [CompilerGeneratedAttribute]
public void add_FileWritten(Action`2<string, string> value);
    [CompilerGeneratedAttribute]
public void remove_FileWritten(Action`2<string, string> value);
    public Result Run(ConverterOptions opts, Func`2<string, AssemblyDefinition> resolveAssembly);
    public Result Run(ConverterOptions opts, Func`2<string, AssemblyDefinition> resolveAssembly, Func`3<string, string, string> outputFilenameSelector);
    public Result Run(string input, String& output, AssemblyDefinition[] references, ParcelableHandling parcelableHandling);
    [CompilerGeneratedAttribute]
private string <Run>b__7_0(string path, string sourceFile);
}
[LanguageAttribute("AIDL", "1.0", "AIDL pseudo grammar")]
public class Xamarin.Android.Tools.Aidl.AidlGrammar : Grammar {
    private NonTerminal DefaultNonTerminal(string label);
    private KeyTerm Keyword(string label);
    private AstNodeCreator CreateArrayCreator();
    private void SelectSingleChild(AstContext ctx, ParseTreeNode node);
    private void ProcessChildren(AstContext ctx, ParseTreeNode node);
    private void DoNothing(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <CreateArrayCreator>b__2_0(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_1(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_2(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_3(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_4(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_5(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_6(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_7(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_8(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_9(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_10(AstContext ctx, ParseTreeNode node);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_11(AstContext ctx, ParseTreeNode node);
}
public class Xamarin.Android.Tools.Aidl.Argument : object {
    [CompilerGeneratedAttribute]
private string <Modifier>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeName <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Modifier { get; private set; }
    public TypeName Type { get; private set; }
    public string Name { get; private set; }
    public Argument(string modifier, TypeName type, string name);
    [CompilerGeneratedAttribute]
public string get_Modifier();
    [CompilerGeneratedAttribute]
private void set_Modifier(string value);
    [CompilerGeneratedAttribute]
public TypeName get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(TypeName value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
public class Xamarin.Android.Tools.Aidl.BindingDatabase : object {
    private Dictionary`2<string, string> nsmap;
    private Dictionary`2<string, string> regs;
    private List`1<AssemblyDefinition> assems;
    public IDictionary`2<string, string> NamespaceMappings { get; }
    public IDictionary`2<string, string> RegisteredTypes { get; }
    public BindingDatabase(IEnumerable`1<string> assemblies, Func`2<string, AssemblyDefinition> resolveAssembly);
    public BindingDatabase(IEnumerable`1<AssemblyDefinition> assems);
    public IDictionary`2<string, string> get_NamespaceMappings();
    public IDictionary`2<string, string> get_RegisteredTypes();
    private void Initialize(IEnumerable`1<string> assemblies, Func`2<string, AssemblyDefinition> resolveAssembly);
}
public class Xamarin.Android.Tools.Aidl.CompilationUnit : object {
    [CompilerGeneratedAttribute]
private TypeName <Package>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeName[] <Imports>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeDeclaration[] <Types>k__BackingField;
    public TypeName Package { get; private set; }
    public TypeName[] Imports { get; private set; }
    public ITypeDeclaration[] Types { get; private set; }
    public CompilationUnit(TypeName package, TypeName[] imports, ITypeDeclaration[] types);
    [CompilerGeneratedAttribute]
public TypeName get_Package();
    [CompilerGeneratedAttribute]
private void set_Package(TypeName value);
    [CompilerGeneratedAttribute]
public TypeName[] get_Imports();
    [CompilerGeneratedAttribute]
private void set_Imports(TypeName[] value);
    [CompilerGeneratedAttribute]
public ITypeDeclaration[] get_Types();
    [CompilerGeneratedAttribute]
private void set_Types(ITypeDeclaration[] value);
}
public class Xamarin.Android.Tools.Aidl.ConverterOptions : object {
    public bool Verbose;
    public ParcelableHandling ParcelableHandling;
    public string OutputDirectory;
    public string OutputNS;
    public List`1<string> InputFiles;
    public List`1<string> References;
}
public class Xamarin.Android.Tools.Aidl.CSharpCodeGenerator : object {
    private TextWriter w;
    private BindingDatabase database;
    private CompilationUnit unit;
    private NameResoltionCache name_cache;
    private string self_ns;
    private String[] cs_units;
    private static CSharpCodeProvider csp;
    public CSharpCodeGenerator(TextWriter writer, BindingDatabase database);
    private static CSharpCodeGenerator();
    public void GenerateCode(CompilationUnit unit, IList`1<TypeName> parcelableNames, ConverterOptions opts);
    public void StubParcelable(Parcelable type);
    public void GenerateCode(Interface type);
    public void GenerateCode(Method method);
    private string GetCreateStatements(TypeName type, string parcel, string arg);
    private string GetReadStatements(TypeName type, string parcel, string arg);
    private string GetWriteStatements(TypeName type, string parcel, string arg, string parcelableWriteFlags);
    private string GetWriteOutStatements(TypeName type, string parcel, string arg);
    private string GetCreatorName(TypeName type);
    private string ToOutputTypeName(string name);
    private static string SafeCSharpName(string name);
    private string JoinArguments(Method m);
    [CompilerGeneratedAttribute]
private string <JoinArguments>b__20_0(Argument a);
}
public class Xamarin.Android.Tools.Aidl.Interface : object {
    [CompilerGeneratedAttribute]
private string <Modifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JavaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Method[] <Methods>k__BackingField;
    public string Modifier { get; private set; }
    public string JavaName { get; private set; }
    public string Name { get; private set; }
    public Method[] Methods { get; private set; }
    public Interface(string modifier, string name, Method[] methods);
    [CompilerGeneratedAttribute]
public string get_Modifier();
    [CompilerGeneratedAttribute]
private void set_Modifier(string value);
    [CompilerGeneratedAttribute]
public string get_JavaName();
    [CompilerGeneratedAttribute]
private void set_JavaName(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public Method[] get_Methods();
    [CompilerGeneratedAttribute]
private void set_Methods(Method[] value);
}
public interface Xamarin.Android.Tools.Aidl.ITypeDeclaration {
}
public class Xamarin.Android.Tools.Aidl.Method : object {
    [CompilerGeneratedAttribute]
private string <Modifier>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeName <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JavaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Argument[] <Arguments>k__BackingField;
    public string Modifier { get; private set; }
    public TypeName ReturnType { get; private set; }
    public string JavaName { get; private set; }
    public string Name { get; private set; }
    public Argument[] Arguments { get; private set; }
    public Method(string modifier, TypeName returnType, string name, Argument[] args);
    [CompilerGeneratedAttribute]
public string get_Modifier();
    [CompilerGeneratedAttribute]
private void set_Modifier(string value);
    [CompilerGeneratedAttribute]
public TypeName get_ReturnType();
    [CompilerGeneratedAttribute]
private void set_ReturnType(TypeName value);
    [CompilerGeneratedAttribute]
public string get_JavaName();
    [CompilerGeneratedAttribute]
private void set_JavaName(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public Argument[] get_Arguments();
    [CompilerGeneratedAttribute]
private void set_Arguments(Argument[] value);
}
public class Xamarin.Android.Tools.Aidl.Parcelable : object {
    [CompilerGeneratedAttribute]
private TypeName <Name>k__BackingField;
    public TypeName Name { get; private set; }
    public Parcelable(TypeName name);
    [CompilerGeneratedAttribute]
public TypeName get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(TypeName value);
}
public enum Xamarin.Android.Tools.Aidl.ParcelableHandling : Enum {
    public int value__;
    public static ParcelableHandling Ignore;
    public static ParcelableHandling Error;
    public static ParcelableHandling Stub;
}
public class Xamarin.Android.Tools.Aidl.TypeName : object {
    [CompilerGeneratedAttribute]
private String[] <Identifiers>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeName[] <GenericArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ArrayDimension>k__BackingField;
    public String[] Identifiers { get; private set; }
    public TypeName[] GenericArguments { get; private set; }
    public int ArrayDimension { get; internal set; }
    public TypeName(String[] identifiers);
    public TypeName(String[] identifiers, TypeName[] genericArguments);
    [CompilerGeneratedAttribute]
public String[] get_Identifiers();
    [CompilerGeneratedAttribute]
private void set_Identifiers(String[] value);
    [CompilerGeneratedAttribute]
public TypeName[] get_GenericArguments();
    [CompilerGeneratedAttribute]
private void set_GenericArguments(TypeName[] value);
    [CompilerGeneratedAttribute]
public int get_ArrayDimension();
    [CompilerGeneratedAttribute]
internal void set_ArrayDimension(int value);
    public string GetNamespace();
    public string GetPackage();
    public virtual string ToString();
    public string ToJavaString();
    private string GetJavaIdentifiers(int count);
    private string GetFormattedIdentifiers(int count);
}
internal static class Xamarin.Android.Tools.Aidl.Util : object {
    public static string ToPascalCase(string s);
}
