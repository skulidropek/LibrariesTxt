[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
public abstract class Xamarin.SourceWriter.AttributeWriter : object {
    public virtual void WriteAttribute(CodeWriter writer);
}
public class Xamarin.SourceWriter.ClassWriter : TypeWriter {
    [CompilerGeneratedAttribute]
private ObservableCollection`1<ConstructorWriter> <Constructors>k__BackingField;
    public ObservableCollection`1<ConstructorWriter> Constructors { get; }
    [CompilerGeneratedAttribute]
public ObservableCollection`1<ConstructorWriter> get_Constructors();
    public virtual void WriteConstructors(CodeWriter writer);
}
public class Xamarin.SourceWriter.CodeWriter : object {
    private TextWriter stream;
    private bool owns_stream;
    private int indent;
    private bool need_indent;
    private string base_indent;
    public CodeWriter(string filename);
    public CodeWriter(TextWriter streamWriter, string baseIndent);
    public void Write(string value);
    public void WriteLine();
    public void WriteLine(string value);
    public void WriteLine(string format, Object[] args);
    public void WriteLineNoIndent(string value);
    public void Indent(int count);
    public void Unindent(int count);
    private void WriteIndent();
    public sealed virtual void Dispose();
}
public class Xamarin.SourceWriter.CommentWriter : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    public string Value { get; public set; }
    public int Priority { get; public set; }
    public CommentWriter(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    public virtual void Write(CodeWriter writer);
}
public class Xamarin.SourceWriter.ConstructorWriter : MethodWriter {
    [CompilerGeneratedAttribute]
private string <BaseCall>k__BackingField;
    public string BaseCall { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BaseCall();
    [CompilerGeneratedAttribute]
public void set_BaseCall(string value);
    protected virtual void WriteReturnType(CodeWriter writer);
    protected virtual void WriteConstructorBaseCall(CodeWriter writer);
}
public class Xamarin.SourceWriter.DelegateWriter : object {
    private Visibility visibility;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MethodParameterWriter> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeReferenceWriter <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseExplicitPrivateKeyword>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConst>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStatic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadonly>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShadow>k__BackingField;
    public string Name { get; public set; }
    public List`1<MethodParameterWriter> Parameters { get; }
    public TypeReferenceWriter Type { get; public set; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public bool IsPublic { get; public set; }
    public bool UseExplicitPrivateKeyword { get; public set; }
    public bool IsInternal { get; public set; }
    public bool IsConst { get; public set; }
    public string Value { get; public set; }
    public bool IsStatic { get; public set; }
    public bool IsReadonly { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool IsProtected { get; public set; }
    public int Priority { get; public set; }
    public bool IsShadow { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<MethodParameterWriter> get_Parameters();
    [CompilerGeneratedAttribute]
public TypeReferenceWriter get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(TypeReferenceWriter value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    public bool get_IsPublic();
    public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseExplicitPrivateKeyword();
    [CompilerGeneratedAttribute]
public void set_UseExplicitPrivateKeyword(bool value);
    public bool get_IsInternal();
    public void set_IsInternal(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsConst();
    [CompilerGeneratedAttribute]
public void set_IsConst(bool value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public bool get_IsStatic();
    [CompilerGeneratedAttribute]
public void set_IsStatic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsReadonly();
    [CompilerGeneratedAttribute]
public void set_IsReadonly(bool value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    public bool get_IsProtected();
    public void set_IsProtected(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    [CompilerGeneratedAttribute]
public bool get_IsShadow();
    [CompilerGeneratedAttribute]
public void set_IsShadow(bool value);
    public void SetVisibility(string visibility);
    public virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
    protected virtual void WriteParameters(CodeWriter writer);
    protected virtual void WriteType(CodeWriter writer);
}
public class Xamarin.SourceWriter.EnumMemberWriter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    public string Name { get; public set; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public string Value { get; public set; }
    public int Priority { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    public virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
}
public class Xamarin.SourceWriter.EnumWriter : object {
    private Visibility visibility;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EnumMemberWriter> <Members>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    public string Name { get; public set; }
    public bool IsPublic { get; public set; }
    public bool IsInternal { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool IsProtected { get; public set; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public List`1<EnumMemberWriter> Members { get; }
    public int Priority { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public bool get_IsPublic();
    public void set_IsPublic(bool value);
    public bool get_IsInternal();
    public void set_IsInternal(bool value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    public bool get_IsProtected();
    public void set_IsProtected(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    [CompilerGeneratedAttribute]
public List`1<EnumMemberWriter> get_Members();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    public sealed virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
    public virtual void WriteMembers(CodeWriter writer);
    public virtual void WriteTypeClose(CodeWriter writer);
}
public class Xamarin.SourceWriter.EventWriter : object {
    private Visibility visibility;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeReferenceWriter <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseExplicitPrivateKeyword>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AddBody>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RemoveBody>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStatic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasAdd>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasRemove>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShadow>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAutoProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAbstract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVirtual>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnsafe>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <GetterComments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SetterComments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <GetterAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <SetterAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    public string Name { get; public set; }
    public TypeReferenceWriter EventType { get; public set; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public bool IsPublic { get; public set; }
    public bool UseExplicitPrivateKeyword { get; public set; }
    public bool IsInternal { get; public set; }
    public List`1<string> AddBody { get; }
    public List`1<string> RemoveBody { get; }
    public bool IsStatic { get; public set; }
    public bool IsProtected { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool IsOverride { get; public set; }
    public bool HasAdd { get; public set; }
    public bool HasRemove { get; public set; }
    public bool IsShadow { get; public set; }
    public bool IsAutoProperty { get; public set; }
    public bool IsAbstract { get; public set; }
    public bool IsVirtual { get; public set; }
    public bool IsUnsafe { get; public set; }
    public List`1<string> GetterComments { get; }
    public List`1<string> SetterComments { get; }
    public List`1<AttributeWriter> GetterAttributes { get; }
    public List`1<AttributeWriter> SetterAttributes { get; }
    public int Priority { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public TypeReferenceWriter get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(TypeReferenceWriter value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    public bool get_IsPublic();
    public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseExplicitPrivateKeyword();
    [CompilerGeneratedAttribute]
public void set_UseExplicitPrivateKeyword(bool value);
    public bool get_IsInternal();
    public void set_IsInternal(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AddBody();
    [CompilerGeneratedAttribute]
public List`1<string> get_RemoveBody();
    [CompilerGeneratedAttribute]
public bool get_IsStatic();
    [CompilerGeneratedAttribute]
public void set_IsStatic(bool value);
    public bool get_IsProtected();
    public void set_IsProtected(bool value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsOverride();
    [CompilerGeneratedAttribute]
public void set_IsOverride(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasAdd();
    [CompilerGeneratedAttribute]
public void set_HasAdd(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasRemove();
    [CompilerGeneratedAttribute]
public void set_HasRemove(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsShadow();
    [CompilerGeneratedAttribute]
public void set_IsShadow(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAutoProperty();
    [CompilerGeneratedAttribute]
public void set_IsAutoProperty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAbstract();
    [CompilerGeneratedAttribute]
public void set_IsAbstract(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVirtual();
    [CompilerGeneratedAttribute]
public void set_IsVirtual(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUnsafe();
    [CompilerGeneratedAttribute]
public void set_IsUnsafe(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_GetterComments();
    [CompilerGeneratedAttribute]
public List`1<string> get_SetterComments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_GetterAttributes();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_SetterAttributes();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    public void SetVisibility(string visibility);
    public virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteAddComments(CodeWriter writer);
    public virtual void WriteRemoveComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteAddAttributes(CodeWriter writer);
    public virtual void WriteRemoveAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
    protected virtual void WriteBody(CodeWriter writer);
    protected virtual void WriteAutomaticEventBody(CodeWriter writer);
    protected virtual void WriteAdd(CodeWriter writer);
    protected virtual void WriteAddBody(CodeWriter writer);
    protected virtual void WriteRemove(CodeWriter writer);
    protected virtual void WriteEventType(CodeWriter writer);
    protected virtual void WriteRemoveBody(CodeWriter writer);
}
public class Xamarin.SourceWriter.FieldWriter : object {
    private Visibility visibility;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeReferenceWriter <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseExplicitPrivateKeyword>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConst>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStatic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadonly>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShadow>k__BackingField;
    public string Name { get; public set; }
    public TypeReferenceWriter Type { get; public set; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public bool IsPublic { get; public set; }
    public bool UseExplicitPrivateKeyword { get; public set; }
    public bool IsInternal { get; public set; }
    public bool IsConst { get; public set; }
    public string Value { get; public set; }
    public bool IsStatic { get; public set; }
    public bool IsReadonly { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool IsProtected { get; public set; }
    public int Priority { get; public set; }
    public bool IsShadow { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public TypeReferenceWriter get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(TypeReferenceWriter value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    public bool get_IsPublic();
    public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseExplicitPrivateKeyword();
    [CompilerGeneratedAttribute]
public void set_UseExplicitPrivateKeyword(bool value);
    public bool get_IsInternal();
    public void set_IsInternal(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsConst();
    [CompilerGeneratedAttribute]
public void set_IsConst(bool value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public bool get_IsStatic();
    [CompilerGeneratedAttribute]
public void set_IsStatic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsReadonly();
    [CompilerGeneratedAttribute]
public void set_IsReadonly(bool value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    public bool get_IsProtected();
    public void set_IsProtected(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    [CompilerGeneratedAttribute]
public bool get_IsShadow();
    [CompilerGeneratedAttribute]
public void set_IsShadow(bool value);
    public void SetVisibility(string visibility);
    public virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
    protected virtual void WriteType(CodeWriter writer);
}
public class Xamarin.SourceWriter.InterfaceWriter : TypeWriter {
}
public interface Xamarin.SourceWriter.ISourceWriter {
    public int Priority { get; public set; }
    public abstract virtual void Write(CodeWriter writer);
    public abstract virtual int get_Priority();
    public abstract virtual void set_Priority(int value);
}
public interface Xamarin.SourceWriter.ITakeParameters {
    public List`1<MethodParameterWriter> Parameters { get; }
    public abstract virtual List`1<MethodParameterWriter> get_Parameters();
}
public class Xamarin.SourceWriter.MethodParameterWriter : object {
    [CompilerGeneratedAttribute]
private TypeReferenceWriter <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExtension>k__BackingField;
    public TypeReferenceWriter Type { get; public set; }
    public List`1<AttributeWriter> Attributes { get; }
    public string Name { get; public set; }
    public bool IsExtension { get; public set; }
    public MethodParameterWriter(string name, TypeReferenceWriter type);
    [CompilerGeneratedAttribute]
public TypeReferenceWriter get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(TypeReferenceWriter value);
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsExtension();
    [CompilerGeneratedAttribute]
public void set_IsExtension(bool value);
    public virtual void WriteParameter(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
}
public class Xamarin.SourceWriter.MethodWriter : object {
    private Visibility visibility;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MethodParameterWriter> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeReferenceWriter <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseExplicitPrivateKeyword>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSealed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStatic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPartial>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnsafe>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVirtual>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShadow>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAbstract>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExplicitInterfaceImplementation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NewFirst>k__BackingField;
    public string Name { get; public set; }
    public List`1<MethodParameterWriter> Parameters { get; }
    public TypeReferenceWriter ReturnType { get; public set; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public bool IsPublic { get; public set; }
    public bool UseExplicitPrivateKeyword { get; public set; }
    public bool IsInternal { get; public set; }
    public List`1<string> Body { get; public set; }
    public bool IsSealed { get; public set; }
    public bool IsStatic { get; public set; }
    public bool IsPartial { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool IsProtected { get; public set; }
    public bool IsOverride { get; public set; }
    public bool IsUnsafe { get; public set; }
    public bool IsVirtual { get; public set; }
    public bool IsShadow { get; public set; }
    public bool IsAbstract { get; public set; }
    public int Priority { get; public set; }
    public bool IsDeclaration { get; public set; }
    public string ExplicitInterfaceImplementation { get; public set; }
    public bool NewFirst { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<MethodParameterWriter> get_Parameters();
    [CompilerGeneratedAttribute]
public TypeReferenceWriter get_ReturnType();
    [CompilerGeneratedAttribute]
public void set_ReturnType(TypeReferenceWriter value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    public bool get_IsPublic();
    public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseExplicitPrivateKeyword();
    [CompilerGeneratedAttribute]
public void set_UseExplicitPrivateKeyword(bool value);
    public bool get_IsInternal();
    public void set_IsInternal(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IsSealed();
    [CompilerGeneratedAttribute]
public void set_IsSealed(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsStatic();
    [CompilerGeneratedAttribute]
public void set_IsStatic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPartial();
    [CompilerGeneratedAttribute]
public void set_IsPartial(bool value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    public bool get_IsProtected();
    public void set_IsProtected(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsOverride();
    [CompilerGeneratedAttribute]
public void set_IsOverride(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUnsafe();
    [CompilerGeneratedAttribute]
public void set_IsUnsafe(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVirtual();
    [CompilerGeneratedAttribute]
public void set_IsVirtual(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsShadow();
    [CompilerGeneratedAttribute]
public void set_IsShadow(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAbstract();
    [CompilerGeneratedAttribute]
public void set_IsAbstract(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    [CompilerGeneratedAttribute]
public bool get_IsDeclaration();
    [CompilerGeneratedAttribute]
public void set_IsDeclaration(bool value);
    [CompilerGeneratedAttribute]
public string get_ExplicitInterfaceImplementation();
    [CompilerGeneratedAttribute]
public void set_ExplicitInterfaceImplementation(string value);
    [CompilerGeneratedAttribute]
public bool get_NewFirst();
    [CompilerGeneratedAttribute]
public void set_NewFirst(bool value);
    public void SetVisibility(string visibility);
    public virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
    protected virtual void WriteBody(CodeWriter writer);
    protected virtual void WriteParameters(CodeWriter writer);
    protected virtual void WriteReturnType(CodeWriter writer);
    protected virtual void WriteConstructorBaseCall(CodeWriter writer);
}
public class Xamarin.SourceWriter.PropertyWriter : object {
    private Visibility visibility;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MethodParameterWriter> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeReferenceWriter <PropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseExplicitPrivateKeyword>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <GetBody>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SetBody>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStatic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShadow>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAutoProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAbstract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVirtual>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnsafe>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <GetterComments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SetterComments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <GetterAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <SetterAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExplicitInterfaceImplementation>k__BackingField;
    [CompilerGeneratedAttribute]
private Visibility <AutoSetterVisibility>k__BackingField;
    public string Name { get; public set; }
    public List`1<MethodParameterWriter> Parameters { get; }
    public TypeReferenceWriter PropertyType { get; public set; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public bool IsPublic { get; public set; }
    public bool UseExplicitPrivateKeyword { get; public set; }
    public bool IsInternal { get; public set; }
    public List`1<string> GetBody { get; }
    public List`1<string> SetBody { get; }
    public bool IsStatic { get; public set; }
    public bool IsProtected { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool IsOverride { get; public set; }
    public bool HasGet { get; public set; }
    public bool HasSet { get; public set; }
    public bool IsShadow { get; public set; }
    public bool IsAutoProperty { get; public set; }
    public bool IsAbstract { get; public set; }
    public bool IsVirtual { get; public set; }
    public bool IsUnsafe { get; public set; }
    public List`1<string> GetterComments { get; }
    public List`1<string> SetterComments { get; }
    public List`1<AttributeWriter> GetterAttributes { get; }
    public List`1<AttributeWriter> SetterAttributes { get; }
    public int Priority { get; public set; }
    public string ExplicitInterfaceImplementation { get; public set; }
    public Visibility AutoSetterVisibility { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<MethodParameterWriter> get_Parameters();
    [CompilerGeneratedAttribute]
public TypeReferenceWriter get_PropertyType();
    [CompilerGeneratedAttribute]
public void set_PropertyType(TypeReferenceWriter value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    public bool get_IsPublic();
    public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseExplicitPrivateKeyword();
    [CompilerGeneratedAttribute]
public void set_UseExplicitPrivateKeyword(bool value);
    public bool get_IsInternal();
    public void set_IsInternal(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_GetBody();
    [CompilerGeneratedAttribute]
public List`1<string> get_SetBody();
    [CompilerGeneratedAttribute]
public bool get_IsStatic();
    [CompilerGeneratedAttribute]
public void set_IsStatic(bool value);
    public bool get_IsProtected();
    public void set_IsProtected(bool value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsOverride();
    [CompilerGeneratedAttribute]
public void set_IsOverride(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasGet();
    [CompilerGeneratedAttribute]
public void set_HasGet(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasSet();
    [CompilerGeneratedAttribute]
public void set_HasSet(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsShadow();
    [CompilerGeneratedAttribute]
public void set_IsShadow(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAutoProperty();
    [CompilerGeneratedAttribute]
public void set_IsAutoProperty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAbstract();
    [CompilerGeneratedAttribute]
public void set_IsAbstract(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVirtual();
    [CompilerGeneratedAttribute]
public void set_IsVirtual(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUnsafe();
    [CompilerGeneratedAttribute]
public void set_IsUnsafe(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_GetterComments();
    [CompilerGeneratedAttribute]
public List`1<string> get_SetterComments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_GetterAttributes();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_SetterAttributes();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    [CompilerGeneratedAttribute]
public string get_ExplicitInterfaceImplementation();
    [CompilerGeneratedAttribute]
public void set_ExplicitInterfaceImplementation(string value);
    [CompilerGeneratedAttribute]
public Visibility get_AutoSetterVisibility();
    [CompilerGeneratedAttribute]
public void set_AutoSetterVisibility(Visibility value);
    public void SetVisibility(string visibility);
    public virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteGetterComments(CodeWriter writer);
    public virtual void WriteSetterComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteGetterAttributes(CodeWriter writer);
    public virtual void WriteSetterAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
    protected virtual void WriteBody(CodeWriter writer);
    protected virtual void WriteAutomaticPropertyBody(CodeWriter writer);
    protected virtual void WriteGetter(CodeWriter writer);
    protected virtual void WriteGetterBody(CodeWriter writer);
    protected virtual void WriteSetter(CodeWriter writer);
    protected virtual void WriteSetterBody(CodeWriter writer);
    protected virtual void WritePropertyType(CodeWriter writer);
    protected virtual void WriteConstructorBaseCall(CodeWriter writer);
}
[ExtensionAttribute]
public static class Xamarin.SourceWriter.StringExtensions : object {
    [ExtensionAttribute]
public static bool HasValue(string str);
}
public class Xamarin.SourceWriter.TypeReferenceWriter : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Nullable>k__BackingField;
    public string Namespace { get; public set; }
    public string Name { get; public set; }
    public bool Nullable { get; public set; }
    public static TypeReferenceWriter Bool { get; }
    public static TypeReferenceWriter Delegate { get; }
    public static TypeReferenceWriter IntPtr { get; }
    public static TypeReferenceWriter Float { get; }
    public static TypeReferenceWriter Object { get; }
    public static TypeReferenceWriter Void { get; }
    private string NullableOperator { get; }
    public TypeReferenceWriter(string name);
    public TypeReferenceWriter(string ns, string name);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Nullable();
    [CompilerGeneratedAttribute]
public void set_Nullable(bool value);
    public static TypeReferenceWriter get_Bool();
    public static TypeReferenceWriter get_Delegate();
    public static TypeReferenceWriter get_IntPtr();
    public static TypeReferenceWriter get_Float();
    public static TypeReferenceWriter get_Object();
    public static TypeReferenceWriter get_Void();
    public virtual void WriteTypeReference(CodeWriter writer);
    private string get_NullableOperator();
}
public abstract class Xamarin.SourceWriter.TypeWriter : object {
    private Visibility visibility;
    private int current_priority;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Inherits>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Implements>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPartial>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAbstract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShadow>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSealed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStatic>k__BackingField;
    [CompilerGeneratedAttribute]
private ObservableCollection`1<MethodWriter> <Methods>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeWriter> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private ObservableCollection`1<EventWriter> <Events>k__BackingField;
    [CompilerGeneratedAttribute]
private ObservableCollection`1<FieldWriter> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private ObservableCollection`1<PropertyWriter> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ObservableCollection`1<CommentWriter> <InlineComments>k__BackingField;
    [CompilerGeneratedAttribute]
private ObservableCollection`1<DelegateWriter> <Delegates>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsePriorityOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private ObservableCollection`1<TypeWriter> <NestedTypes>k__BackingField;
    public string Name { get; public set; }
    public string Inherits { get; public set; }
    public List`1<string> Implements { get; }
    public bool IsPartial { get; public set; }
    public bool IsPublic { get; public set; }
    public bool IsAbstract { get; public set; }
    public bool IsInternal { get; public set; }
    public bool IsShadow { get; public set; }
    public bool IsSealed { get; public set; }
    public bool IsStatic { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool IsProtected { get; public set; }
    public ObservableCollection`1<MethodWriter> Methods { get; }
    public List`1<string> Comments { get; }
    public List`1<AttributeWriter> Attributes { get; }
    public ObservableCollection`1<EventWriter> Events { get; }
    public ObservableCollection`1<FieldWriter> Fields { get; }
    public ObservableCollection`1<PropertyWriter> Properties { get; }
    public ObservableCollection`1<CommentWriter> InlineComments { get; }
    public ObservableCollection`1<DelegateWriter> Delegates { get; }
    public int Priority { get; public set; }
    public bool UsePriorityOrder { get; public set; }
    public ObservableCollection`1<TypeWriter> NestedTypes { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Inherits();
    [CompilerGeneratedAttribute]
public void set_Inherits(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Implements();
    [CompilerGeneratedAttribute]
public bool get_IsPartial();
    [CompilerGeneratedAttribute]
public void set_IsPartial(bool value);
    public bool get_IsPublic();
    public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAbstract();
    [CompilerGeneratedAttribute]
public void set_IsAbstract(bool value);
    public bool get_IsInternal();
    public void set_IsInternal(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsShadow();
    [CompilerGeneratedAttribute]
public void set_IsShadow(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSealed();
    [CompilerGeneratedAttribute]
public void set_IsSealed(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsStatic();
    [CompilerGeneratedAttribute]
public void set_IsStatic(bool value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    public bool get_IsProtected();
    public void set_IsProtected(bool value);
    [CompilerGeneratedAttribute]
public ObservableCollection`1<MethodWriter> get_Methods();
    [CompilerGeneratedAttribute]
public List`1<string> get_Comments();
    [CompilerGeneratedAttribute]
public List`1<AttributeWriter> get_Attributes();
    [CompilerGeneratedAttribute]
public ObservableCollection`1<EventWriter> get_Events();
    [CompilerGeneratedAttribute]
public ObservableCollection`1<FieldWriter> get_Fields();
    [CompilerGeneratedAttribute]
public ObservableCollection`1<PropertyWriter> get_Properties();
    [CompilerGeneratedAttribute]
public ObservableCollection`1<CommentWriter> get_InlineComments();
    [CompilerGeneratedAttribute]
public ObservableCollection`1<DelegateWriter> get_Delegates();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(int value);
    public int GetNextPriority();
    [CompilerGeneratedAttribute]
public bool get_UsePriorityOrder();
    [CompilerGeneratedAttribute]
public void set_UsePriorityOrder(bool value);
    [CompilerGeneratedAttribute]
public ObservableCollection`1<TypeWriter> get_NestedTypes();
    protected void MemberAdded(object sender, NotifyCollectionChangedEventArgs e);
    public void SetVisibility(string visibility);
    public virtual void Write(CodeWriter writer);
    public virtual void WriteComments(CodeWriter writer);
    public virtual void WriteAttributes(CodeWriter writer);
    public virtual void WriteSignature(CodeWriter writer);
    public virtual void WriteMembers(CodeWriter writer);
    public void AddInlineComment(string comment);
    public virtual void WriteMembersByPriority(CodeWriter writer);
    public virtual void WriteConstructors(CodeWriter writer);
    public virtual void WriteEvents(CodeWriter writer);
    public virtual void WriteFields(CodeWriter writer);
    public virtual void WriteMethods(CodeWriter writer);
    public virtual void WriteProperties(CodeWriter writer);
    public virtual void WriteDelegates(CodeWriter writer);
    public virtual void WriteTypeClose(CodeWriter writer);
}
public enum Xamarin.SourceWriter.Visibility : Enum {
    public int value__;
    public static Visibility Default;
    public static Visibility Private;
    public static Visibility Public;
    public static Visibility Protected;
    public static Visibility Internal;
}
