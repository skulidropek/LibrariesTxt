[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ApiDefinition.Messaging : object {
    internal static string LIBOBJC_DYLIB;
    internal static Assembly this_assembly;
    private static Messaging();
    public static IntPtr IntPtr_objc_msgSend(IntPtr receiever, IntPtr selector);
    public static IntPtr IntPtr_objc_msgSendSuper(IntPtr receiever, IntPtr selector);
    public static IntPtr IntPtr_objc_msgSend_IntPtr(IntPtr receiever, IntPtr selector, IntPtr arg1);
    public static IntPtr IntPtr_objc_msgSendSuper_IntPtr(IntPtr receiever, IntPtr selector, IntPtr arg1);
    public static void void_objc_msgSend_bool(IntPtr receiver, IntPtr selector, byte arg1);
    public static void void_objc_msgSendSuper_bool(IntPtr receiver, IntPtr selector, byte arg1);
    public static byte bool_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static byte bool_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSend_NativeHandle(IntPtr receiver, IntPtr selector, NativeHandle arg1);
    public static void void_objc_msgSendSuper_NativeHandle(IntPtr receiver, IntPtr selector, NativeHandle arg1);
    public static void void_objc_msgSend_NativeHandle_NativeHandle(IntPtr receiver, IntPtr selector, NativeHandle arg1, NativeHandle arg2);
    public static void void_objc_msgSendSuper_NativeHandle_NativeHandle(IntPtr receiver, IntPtr selector, NativeHandle arg1, NativeHandle arg2);
    public static void void_objc_msgSend_NativeHandle_NativeHandle_NativeHandle(IntPtr receiver, IntPtr selector, NativeHandle arg1, NativeHandle arg2, NativeHandle arg3);
    public static void void_objc_msgSendSuper_NativeHandle_NativeHandle_NativeHandle(IntPtr receiver, IntPtr selector, NativeHandle arg1, NativeHandle arg2, NativeHandle arg3);
    public static NativeHandle NativeHandle_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static NativeHandle NativeHandle_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
}
public class Microsoft.AppCenter.Analytics.Analytics : AppCenterService {
    [PreserveAttribute]
public static Type BindingType { get; }
    public static Type get_BindingType();
    public static Task`1<bool> IsEnabledAsync();
    public static Task SetEnabledAsync(bool enabled);
    internal static void Pause();
    internal static void Resume();
    public static void TrackEvent(string name, IDictionary`2<string, string> properties);
    public static void EnableManualSessionTracker();
    public static void StartSession();
    internal static void UnsetInstance();
    private static NSDictionary StringDictToNSDict(IDictionary`2<string, string> dict);
}
[ProtocolAttribute]
[ProtocolMemberAttribute]
[ProtocolMemberAttribute]
[ProtocolMemberAttribute]
public interface Microsoft.AppCenter.Analytics.Apple.Bindings.IMSACAnalyticsDelegate {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("MSACAnalytics", "True")]
public class Microsoft.AppCenter.Analytics.Apple.Bindings.MSACAnalytics : NSObject {
    [BindingImplAttribute]
private static string selEnableManualSessionTrackerX;
    private static NativeHandle selEnableManualSessionTrackerXHandle;
    [BindingImplAttribute]
private static string selIsEnabledX;
    private static NativeHandle selIsEnabledXHandle;
    [BindingImplAttribute]
private static string selPauseX;
    private static NativeHandle selPauseXHandle;
    [BindingImplAttribute]
private static string selResetSharedInstanceX;
    private static NativeHandle selResetSharedInstanceXHandle;
    [BindingImplAttribute]
private static string selResumeX;
    private static NativeHandle selResumeXHandle;
    [BindingImplAttribute]
private static string selSetDelegate_X;
    private static NativeHandle selSetDelegate_XHandle;
    [BindingImplAttribute]
private static string selSetEnabled_X;
    private static NativeHandle selSetEnabled_XHandle;
    [BindingImplAttribute]
private static string selStartSessionX;
    private static NativeHandle selStartSessionXHandle;
    [BindingImplAttribute]
private static string selTrackEvent_X;
    private static NativeHandle selTrackEvent_XHandle;
    [BindingImplAttribute]
private static string selTrackEvent_WithProperties_X;
    private static NativeHandle selTrackEvent_WithProperties_XHandle;
    [BindingImplAttribute]
private static NativeHandle class_ptr;
    public NativeHandle ClassHandle { get; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected MSACAnalytics(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal MSACAnalytics(NativeHandle handle);
    private static MSACAnalytics();
    public virtual NativeHandle get_ClassHandle();
    [ExportAttribute("enableManualSessionTracker")]
[BindingImplAttribute]
public static void EnableManualSessionTracker();
    [ExportAttribute("isEnabled")]
[BindingImplAttribute]
public static bool IsEnabled();
    [ExportAttribute("pause")]
[BindingImplAttribute]
public static void Pause();
    [ExportAttribute("resetSharedInstance")]
[BindingImplAttribute]
public static void ResetSharedInstance();
    [ExportAttribute("resume")]
[BindingImplAttribute]
public static void Resume();
    [NullableContextAttribute("2")]
[ExportAttribute("setDelegate:")]
[BindingImplAttribute]
public static void SetDelegate(MSACAnalyticsDelegate analyticsDelegate);
    [ExportAttribute("setEnabled:")]
[BindingImplAttribute]
public static void SetEnabled(bool isEnabled);
    [ExportAttribute("startSession")]
[BindingImplAttribute]
public static void StartSession();
    [NullableContextAttribute("2")]
[ExportAttribute("trackEvent:")]
[BindingImplAttribute]
public static void TrackEvent(string eventName);
    [NullableContextAttribute("2")]
[ExportAttribute("trackEvent:withProperties:")]
[BindingImplAttribute]
public static void TrackEvent(string eventName, NSDictionary properties);
}
[ProtocolAttribute]
[RegisterAttribute("ApiDefinition__Microsoft_AppCenter_Analytics_Apple_Bindings_MSACAnalyticsDelegate", "False")]
[ModelAttribute]
public class Microsoft.AppCenter.Analytics.Apple.Bindings.MSACAnalyticsDelegate : NSObject {
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected MSACAnalyticsDelegate(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal MSACAnalyticsDelegate(NativeHandle handle);
    [NullableContextAttribute("1")]
[ExportAttribute("analytics:didFailSendingEventLog:withError:")]
[BindingImplAttribute]
public virtual void DidFailSendingEventLog(MSACAnalytics analytics, MSACEventLog eventLog, NSError error);
    [NullableContextAttribute("1")]
[ExportAttribute("analytics:didSucceedSendingEventLog:")]
[BindingImplAttribute]
public virtual void DidSucceedSendingEventLog(MSACAnalytics analytics, MSACEventLog eventLog);
    [NullableContextAttribute("1")]
[ExportAttribute("analytics:willSendEventLog:")]
[BindingImplAttribute]
public virtual void WillSendEventLog(MSACAnalytics analytics, MSACEventLog eventLog);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AppCenter.Analytics.Apple.Bindings.MSACAnalyticsDelegate_Extensions : object {
    [ExtensionAttribute]
[BindingImplAttribute]
public static void WillSendEventLog(IMSACAnalyticsDelegate This, MSACAnalytics analytics, MSACEventLog eventLog);
    [ExtensionAttribute]
[BindingImplAttribute]
public static void DidSucceedSendingEventLog(IMSACAnalyticsDelegate This, MSACAnalytics analytics, MSACEventLog eventLog);
    [ExtensionAttribute]
[BindingImplAttribute]
public static void DidFailSendingEventLog(IMSACAnalyticsDelegate This, MSACAnalytics analytics, MSACEventLog eventLog, NSError error);
}
internal class Microsoft.AppCenter.Analytics.Apple.Bindings.MSACAnalyticsDelegateWrapper : BaseWrapper {
    [PreserveAttribute]
public MSACAnalyticsDelegateWrapper(NativeHandle handle, bool owns);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("MSACEventLog", "True")]
public class Microsoft.AppCenter.Analytics.Apple.Bindings.MSACEventLog : MSACLogWithProperties {
    [BindingImplAttribute]
private static string selEventIdX;
    private static NativeHandle selEventIdXHandle;
    [BindingImplAttribute]
private static string selNameX;
    private static NativeHandle selNameXHandle;
    [BindingImplAttribute]
private static string selPropertiesX;
    private static NativeHandle selPropertiesXHandle;
    [BindingImplAttribute]
private static string selSetEventId_X;
    private static NativeHandle selSetEventId_XHandle;
    [BindingImplAttribute]
private static string selSetName_X;
    private static NativeHandle selSetName_XHandle;
    [BindingImplAttribute]
private static string selSetProperties_X;
    private static NativeHandle selSetProperties_XHandle;
    [BindingImplAttribute]
private static NativeHandle class_ptr;
    public NativeHandle ClassHandle { get; }
    [BindingImplAttribute]
public string EventId { get; public set; }
    [BindingImplAttribute]
public string Name { get; public set; }
    [BindingImplAttribute]
public NSDictionary`2<NSString, NSString> Properties { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected MSACEventLog(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal MSACEventLog(NativeHandle handle);
    private static MSACEventLog();
    public virtual NativeHandle get_ClassHandle();
    [ExportAttribute("eventId")]
public virtual string get_EventId();
    [ExportAttribute("setEventId:")]
public virtual void set_EventId(string value);
    [ExportAttribute("name")]
public virtual string get_Name();
    [ExportAttribute("setName:")]
public virtual void set_Name(string value);
    [ExportAttribute("properties")]
public virtual NSDictionary`2<NSString, NSString> get_Properties();
    [ExportAttribute("setProperties:")]
public virtual void set_Properties(NSDictionary`2<NSString, NSString> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("MSACLogWithProperties", "True")]
public class Microsoft.AppCenter.Analytics.Apple.Bindings.MSACLogWithProperties : NSObject {
    [BindingImplAttribute]
private static string selPropertiesX;
    private static NativeHandle selPropertiesXHandle;
    [BindingImplAttribute]
private static string selSetProperties_X;
    private static NativeHandle selSetProperties_XHandle;
    [BindingImplAttribute]
private static NativeHandle class_ptr;
    public NativeHandle ClassHandle { get; }
    [BindingImplAttribute]
public NSDictionary`2<NSString, NSString> Properties { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected MSACLogWithProperties(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal MSACLogWithProperties(NativeHandle handle);
    private static MSACLogWithProperties();
    public virtual NativeHandle get_ClassHandle();
    [ExportAttribute("properties")]
public virtual NSDictionary`2<NSString, NSString> get_Properties();
    [ExportAttribute("setProperties:")]
public virtual void set_Properties(NSDictionary`2<NSString, NSString> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("MSACPageLog", "True")]
public class Microsoft.AppCenter.Analytics.Apple.Bindings.MSACPageLog : MSACLogWithProperties {
    [BindingImplAttribute]
private static string selNameX;
    private static NativeHandle selNameXHandle;
    [BindingImplAttribute]
private static string selPropertiesX;
    private static NativeHandle selPropertiesXHandle;
    [BindingImplAttribute]
private static string selSetName_X;
    private static NativeHandle selSetName_XHandle;
    [BindingImplAttribute]
private static string selSetProperties_X;
    private static NativeHandle selSetProperties_XHandle;
    [BindingImplAttribute]
private static NativeHandle class_ptr;
    public NativeHandle ClassHandle { get; }
    [BindingImplAttribute]
public string Name { get; public set; }
    [BindingImplAttribute]
public NSDictionary`2<NSString, NSString> Properties { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected MSACPageLog(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal MSACPageLog(NativeHandle handle);
    private static MSACPageLog();
    public virtual NativeHandle get_ClassHandle();
    [ExportAttribute("name")]
public virtual string get_Name();
    [ExportAttribute("setName:")]
public virtual void set_Name(string value);
    [ExportAttribute("properties")]
public virtual NSDictionary`2<NSString, NSString> get_Properties();
    [ExportAttribute("setProperties:")]
public virtual void set_Properties(NSDictionary`2<NSString, NSString> value);
}
internal class Microsoft.AppCenter.Analytics.NamespaceDoc : object {
}
