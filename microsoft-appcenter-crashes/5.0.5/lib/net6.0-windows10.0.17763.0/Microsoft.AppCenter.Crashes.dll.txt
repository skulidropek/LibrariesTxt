public class Microsoft.AppCenter.Crashes.AndroidErrorDetails : object {
    [CompilerGeneratedAttribute]
private object <Throwable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThreadName>k__BackingField;
    [ObsoleteAttribute("This property is no longer set due to a security issue, use StackTrace instead.")]
public object Throwable { get; }
    public string StackTrace { get; }
    public string ThreadName { get; }
    internal AndroidErrorDetails(string stackTrace, string threadName);
    [CompilerGeneratedAttribute]
public object get_Throwable();
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public string get_ThreadName();
}
public class Microsoft.AppCenter.Crashes.AppleErrorDetails : object {
    [CompilerGeneratedAttribute]
private string <ReporterKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Signal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExceptionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExceptionReason>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <AppProcessIdentifier>k__BackingField;
    public string ReporterKey { get; }
    public string Signal { get; }
    public string ExceptionName { get; }
    public string ExceptionReason { get; }
    public UInt32 AppProcessIdentifier { get; }
    internal AppleErrorDetails(string reporterKey, string signal, string exceptionName, string exceptionReason, UInt32 appProcessIdentifier);
    [CompilerGeneratedAttribute]
public string get_ReporterKey();
    [CompilerGeneratedAttribute]
public string get_Signal();
    [CompilerGeneratedAttribute]
public string get_ExceptionName();
    [CompilerGeneratedAttribute]
public string get_ExceptionReason();
    [CompilerGeneratedAttribute]
public UInt32 get_AppProcessIdentifier();
}
public class Microsoft.AppCenter.Crashes.Crashes : AppCenterService {
    internal static string LogTag;
    [CompilerGeneratedAttribute]
private static SendingErrorReportEventHandler SendingErrorReport;
    [CompilerGeneratedAttribute]
private static SentErrorReportEventHandler SentErrorReport;
    [CompilerGeneratedAttribute]
private static FailedToSendErrorReportEventHandler FailedToSendErrorReport;
    public static ShouldProcessErrorReportCallback ShouldProcessErrorReport;
    public static ShouldAwaitUserConfirmationCallback ShouldAwaitUserConfirmation;
    public static GetErrorAttachmentsCallback GetErrorAttachments;
    private static object CrashesLock;
    private static Crashes modreq(System.Runtime.CompilerServices.IsVolatile) _instanceField;
    private static int MaxAttachmentSize;
    internal static string PrefKeyAlwaysSend;
    internal IDictionary`2<Guid, ManagedErrorLog> _unprocessedManagedErrorLogs;
    private IDictionary`2<Guid, ErrorReport> _errorReportCache;
    [CompilerGeneratedAttribute]
private Task <ProcessPendingErrorsTask>k__BackingField;
    private TaskCompletionSource`1<ErrorReport> _lastSessionErrorReportTaskSource;
    public static Crashes Instance { get; public set; }
    protected string ChannelName { get; }
    protected int TriggerCount { get; }
    protected TimeSpan TriggerInterval { get; }
    public string ServiceName { get; }
    internal Task ProcessPendingErrorsTask { get; internal set; }
    public bool InstanceEnabled { get; public set; }
    private static Crashes();
    [CompilerGeneratedAttribute]
public static void add_SendingErrorReport(SendingErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_SendingErrorReport(SendingErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void add_SentErrorReport(SentErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_SentErrorReport(SentErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void add_FailedToSendErrorReport(FailedToSendErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_FailedToSendErrorReport(FailedToSendErrorReportEventHandler value);
    public static void NotifyUserConfirmation(UserConfirmation confirmation);
    public static Task`1<bool> IsEnabledAsync();
    public static Task SetEnabledAsync(bool enabled);
    public static Task`1<bool> HasCrashedInLastSessionAsync();
    public static Task`1<ErrorReport> GetLastSessionCrashReportAsync();
    public static Task`1<bool> HasReceivedMemoryWarningInLastSessionAsync();
    [ConditionalAttribute("DEBUG")]
public static void GenerateTestCrash();
    public static void TrackError(Exception exception, IDictionary`2<string, string> properties, ErrorAttachmentLog[] attachments);
    internal static void UnsetInstance();
    public static Crashes get_Instance();
    public static void set_Instance(Crashes value);
    private static Task`1<bool> PlatformIsEnabledAsync();
    private static Task PlatformSetEnabledAsync(bool enabled);
    private static void OnUnhandledExceptionOccurred(object sender, UnhandledExceptionOccurredEventArgs args);
    private static Task`1<bool> PlatformHasCrashedInLastSessionAsync();
    private static Task`1<bool> PlatformHasReceivedMemoryWarningInLastSessionAsync();
    private static Task`1<ErrorReport> PlatformGetLastSessionCrashReportAsync();
    private static void PlatformNotifyUserConfirmation(UserConfirmation userConfirmation);
    private static void PlatformTrackError(Exception exception, IDictionary`2<string, string> properties, ErrorAttachmentLog[] attachments);
    protected virtual string get_ChannelName();
    protected virtual int get_TriggerCount();
    protected virtual TimeSpan get_TriggerInterval();
    public virtual string get_ServiceName();
    [CompilerGeneratedAttribute]
internal Task get_ProcessPendingErrorsTask();
    [CompilerGeneratedAttribute]
internal void set_ProcessPendingErrorsTask(Task value);
    public virtual void OnChannelGroupReady(IChannelGroup channelGroup, string appSecret);
    private void ApplyEnabledState(bool enabled);
    public virtual bool get_InstanceEnabled();
    public virtual void set_InstanceEnabled(bool value);
    [AsyncStateMachineAttribute("Microsoft.AppCenter.Crashes.Crashes/<InstanceHasCrashedInLastSessionAsync>d__59")]
private Task`1<bool> InstanceHasCrashedInLastSessionAsync();
    private Task`1<ErrorReport> InstanceGetLastSessionCrashReportAsync();
    [AsyncStateMachineAttribute("Microsoft.AppCenter.Crashes.Crashes/<InstanceHasReceivedMemoryWarningInLastSessionAsync>d__61")]
private Task`1<bool> InstanceHasReceivedMemoryWarningInLastSessionAsync();
    private Task ProcessPendingErrorsAsync();
    private void RemoveAllStoredErrorLogFiles(Guid errorId);
    [AsyncStateMachineAttribute("Microsoft.AppCenter.Crashes.Crashes/<SendCrashReportsOrAwaitUserConfirmationAsync>d__64")]
private Task SendCrashReportsOrAwaitUserConfirmationAsync();
    private void InstanceHandlerUserConfirmation(UserConfirmation userConfirmation);
    private Task HandleUserConfirmationAsync(UserConfirmation userConfirmation);
    private void InstanceTrackError(Exception exception, IDictionary`2<string, string> properties, ErrorAttachmentLog[] attachments);
    private Task SendErrorAttachmentsAsync(Guid errorId, IEnumerable`1<ErrorAttachmentLog> attachments);
    private ErrorReport BuildErrorReport(ManagedErrorLog log);
    private void ChannelSendingLog(object sender, SendingLogEventArgs e);
    private void ChannelSentLog(object sender, SentLogEventArgs e);
    private void ChannelFailedToSendLog(object sender, FailedToSendLogEventArgs e);
    private ErrorReport MapLogEventToReportAndDeleteOnLastEvent(ChannelEventArgs channelEventArgs);
    internal static void PlatformUnsetInstance();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.AppCenter.Crashes.Crashes/<<ProcessPendingErrorsAsync>b__62_0>d")]
[CompilerGeneratedAttribute]
private Task <ProcessPendingErrorsAsync>b__62_0();
}
[JsonObjectAttribute("errorAttachment")]
public class Microsoft.AppCenter.Crashes.ErrorAttachmentLog : Log {
    internal static string JsonIdentifier;
    private static string ContentTypePlainText;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ErrorId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [JsonPropertyAttribute]
public Guid Id { get; public set; }
    [JsonPropertyAttribute]
public Guid ErrorId { get; public set; }
    [JsonPropertyAttribute]
public string ContentType { get; public set; }
    [JsonPropertyAttribute]
public string FileName { get; public set; }
    [JsonPropertyAttribute]
public Byte[] Data { get; public set; }
    public static ErrorAttachmentLog AttachmentWithText(string text, string fileName);
    public static ErrorAttachmentLog AttachmentWithBinary(Byte[] data, string fileName, string contentType);
    private static ErrorAttachmentLog PlatformAttachmentWithText(string text, string fileName);
    private static ErrorAttachmentLog PlatformAttachmentWithBinary(Byte[] data, string fileName, string contentType);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ErrorId();
    [CompilerGeneratedAttribute]
public void set_ErrorId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Byte[] value);
    public virtual void Validate();
    public bool ValidatePropertiesForAttachment();
}
public class Microsoft.AppCenter.Crashes.ErrorReport : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <AppStartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <AppErrorTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Device <Device>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private AndroidErrorDetails <AndroidDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private AppleErrorDetails <AppleDetails>k__BackingField;
    public string Id { get; }
    public DateTimeOffset AppStartTime { get; }
    public DateTimeOffset AppErrorTime { get; }
    public Device Device { get; }
    [ObsoleteAttribute("This property is no longer set due to a security issue, use StackTrace as an alternative.")]
public Exception Exception { get; }
    public string StackTrace { get; }
    public AndroidErrorDetails AndroidDetails { get; }
    public AppleErrorDetails AppleDetails { get; }
    public ErrorReport(ManagedErrorLog log, string stackTrace);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_AppStartTime();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_AppErrorTime();
    [CompilerGeneratedAttribute]
public Device get_Device();
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public AndroidErrorDetails get_AndroidDetails();
    [CompilerGeneratedAttribute]
public AppleErrorDetails get_AppleDetails();
}
public class Microsoft.AppCenter.Crashes.ErrorReportEventArgs : EventArgs {
    public ErrorReport Report;
}
public class Microsoft.AppCenter.Crashes.FailedToSendErrorReportEventArgs : ErrorReportEventArgs {
    public object Exception;
}
public class Microsoft.AppCenter.Crashes.FailedToSendErrorReportEventHandler : MulticastDelegate {
    public FailedToSendErrorReportEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, FailedToSendErrorReportEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, FailedToSendErrorReportEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.GetErrorAttachmentsCallback : MulticastDelegate {
    public GetErrorAttachmentsCallback(object object, IntPtr method);
    public virtual IEnumerable`1<ErrorAttachmentLog> Invoke(ErrorReport report);
    public virtual IAsyncResult BeginInvoke(ErrorReport report, AsyncCallback callback, object object);
    public virtual IEnumerable`1<ErrorAttachmentLog> EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.Ingestion.Models.AbstractErrorLog : Log {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcessName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ParentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentProcessName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ErrorThreadId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorThreadName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Fatal>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <AppLaunchTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [JsonPropertyAttribute]
public Guid Id { get; public set; }
    [JsonPropertyAttribute]
public int ProcessId { get; public set; }
    [JsonPropertyAttribute]
public string ProcessName { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ParentProcessId { get; public set; }
    [JsonPropertyAttribute]
public string ParentProcessName { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> ErrorThreadId { get; public set; }
    [JsonPropertyAttribute]
public string ErrorThreadName { get; public set; }
    [JsonPropertyAttribute]
public bool Fatal { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> AppLaunchTimestamp { get; public set; }
    [JsonPropertyAttribute]
public string Architecture { get; public set; }
    public AbstractErrorLog(Device device, Guid id, int processId, string processName, bool fatal, Nullable`1<DateTime> timestamp, Nullable`1<Guid> sid, string userId, string dataResidencyRegion, Nullable`1<int> parentProcessId, string parentProcessName, Nullable`1<long> errorThreadId, string errorThreadName, Nullable`1<DateTime> appLaunchTimestamp, string architecture);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public int get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(int value);
    [CompilerGeneratedAttribute]
public string get_ProcessName();
    [CompilerGeneratedAttribute]
public void set_ProcessName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ParentProcessId();
    [CompilerGeneratedAttribute]
public void set_ParentProcessId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ParentProcessName();
    [CompilerGeneratedAttribute]
public void set_ParentProcessName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ErrorThreadId();
    [CompilerGeneratedAttribute]
public void set_ErrorThreadId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_ErrorThreadName();
    [CompilerGeneratedAttribute]
public void set_ErrorThreadName(string value);
    [CompilerGeneratedAttribute]
public bool get_Fatal();
    [CompilerGeneratedAttribute]
public void set_Fatal(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_AppLaunchTimestamp();
    [CompilerGeneratedAttribute]
public void set_AppLaunchTimestamp(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
    public virtual void Validate();
}
public class Microsoft.AppCenter.Crashes.Ingestion.Models.Binary : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PrimaryArchitectureId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ArchitectureVariantId>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string StartAddress { get; public set; }
    [JsonPropertyAttribute]
public string EndAddress { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Path { get; public set; }
    [JsonPropertyAttribute]
public string Architecture { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> PrimaryArchitectureId { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> ArchitectureVariantId { get; public set; }
    public Binary(string id, string startAddress, string endAddress, string name, string path, string architecture, Nullable`1<long> primaryArchitectureId, Nullable`1<long> architectureVariantId);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_StartAddress();
    [CompilerGeneratedAttribute]
public void set_StartAddress(string value);
    [CompilerGeneratedAttribute]
public string get_EndAddress();
    [CompilerGeneratedAttribute]
public void set_EndAddress(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PrimaryArchitectureId();
    [CompilerGeneratedAttribute]
public void set_PrimaryArchitectureId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ArchitectureVariantId();
    [CompilerGeneratedAttribute]
public void set_ArchitectureVariantId(Nullable`1<long> value);
    public virtual void Validate();
}
public class Microsoft.AppCenter.Crashes.Ingestion.Models.Exception : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<StackFrame> <Frames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Exception> <InnerExceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WrapperSdkName>k__BackingField;
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Message { get; public set; }
    [JsonPropertyAttribute]
public string StackTrace { get; public set; }
    [JsonPropertyAttribute]
public IList`1<StackFrame> Frames { get; public set; }
    [JsonPropertyAttribute]
public IList`1<Exception> InnerExceptions { get; public set; }
    [JsonPropertyAttribute]
public string WrapperSdkName { get; public set; }
    public Exception(string type, string message, string stackTrace, IList`1<StackFrame> frames, IList`1<Exception> innerExceptions, string wrapperSdkName);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(string value);
    [CompilerGeneratedAttribute]
public IList`1<StackFrame> get_Frames();
    [CompilerGeneratedAttribute]
public void set_Frames(IList`1<StackFrame> value);
    [CompilerGeneratedAttribute]
public IList`1<Exception> get_InnerExceptions();
    [CompilerGeneratedAttribute]
public void set_InnerExceptions(IList`1<Exception> value);
    [CompilerGeneratedAttribute]
public string get_WrapperSdkName();
    [CompilerGeneratedAttribute]
public void set_WrapperSdkName(string value);
    public virtual void Validate();
}
[JsonObjectAttribute("handledError")]
public class Microsoft.AppCenter.Crashes.Ingestion.Models.HandledErrorLog : LogWithProperties {
    internal static string JsonIdentifier;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Binary> <Binaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<Guid> Id { get; public set; }
    [JsonPropertyAttribute]
public IList`1<Binary> Binaries { get; public set; }
    [JsonPropertyAttribute]
public Exception Exception { get; public set; }
    public HandledErrorLog(Device device, Exception exception, Nullable`1<DateTime> timestamp, Nullable`1<Guid> sid, string userId, string dataResidencyRegion, IDictionary`2<string, string> properties, Nullable`1<Guid> id, IList`1<Binary> binaries);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public IList`1<Binary> get_Binaries();
    [CompilerGeneratedAttribute]
public void set_Binaries(IList`1<Binary> value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    public virtual void Validate();
}
[JsonObjectAttribute("managedError")]
public class Microsoft.AppCenter.Crashes.Ingestion.Models.ManagedErrorLog : AbstractErrorLog {
    internal static string JsonIdentifier;
    [CompilerGeneratedAttribute]
private IList`1<Binary> <Binaries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildId>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<Binary> Binaries { get; public set; }
    [JsonPropertyAttribute]
public string BuildId { get; public set; }
    [JsonPropertyAttribute]
public Exception Exception { get; public set; }
    public ManagedErrorLog(Device device, Guid id, int processId, string processName, bool fatal, Exception exception, Nullable`1<DateTime> timestamp, Nullable`1<Guid> sid, string userId, string dataResidencyRegion, Nullable`1<int> parentProcessId, string parentProcessName, Nullable`1<long> errorThreadId, string errorThreadName, Nullable`1<DateTime> appLaunchTimestamp, string architecture, IList`1<Binary> binaries, string buildId);
    [CompilerGeneratedAttribute]
public IList`1<Binary> get_Binaries();
    [CompilerGeneratedAttribute]
public void set_Binaries(IList`1<Binary> value);
    [CompilerGeneratedAttribute]
public string get_BuildId();
    [CompilerGeneratedAttribute]
public void set_BuildId(string value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    public virtual void Validate();
}
public class Microsoft.AppCenter.Crashes.Ingestion.Models.StackFrame : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [JsonPropertyAttribute]
public string Address { get; public set; }
    [JsonPropertyAttribute]
public string Code { get; public set; }
    [JsonPropertyAttribute]
public string ClassName { get; public set; }
    [JsonPropertyAttribute]
public string MethodName { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> LineNumber { get; public set; }
    [JsonPropertyAttribute]
public string FileName { get; public set; }
    public StackFrame(string address, string code, string className, string methodName, Nullable`1<int> lineNumber, string fileName);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public void set_MethodName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
}
internal class Microsoft.AppCenter.Crashes.NamespaceDoc : object {
}
public class Microsoft.AppCenter.Crashes.SendingErrorReportEventArgs : ErrorReportEventArgs {
}
public class Microsoft.AppCenter.Crashes.SendingErrorReportEventHandler : MulticastDelegate {
    public SendingErrorReportEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, SendingErrorReportEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SendingErrorReportEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.SentErrorReportEventArgs : ErrorReportEventArgs {
}
public class Microsoft.AppCenter.Crashes.SentErrorReportEventHandler : MulticastDelegate {
    public SentErrorReportEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, SentErrorReportEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SentErrorReportEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.ShouldAwaitUserConfirmationCallback : MulticastDelegate {
    public ShouldAwaitUserConfirmationCallback(object object, IntPtr method);
    public virtual bool Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.ShouldProcessErrorReportCallback : MulticastDelegate {
    public ShouldProcessErrorReportCallback(object object, IntPtr method);
    public virtual bool Invoke(ErrorReport report);
    public virtual IAsyncResult BeginInvoke(ErrorReport report, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.TestCrashException : Exception {
    private static string CrashMessage;
    protected TestCrashException(SerializationInfo info, StreamingContext context);
}
public enum Microsoft.AppCenter.Crashes.UserConfirmation : Enum {
    public int value__;
    public static UserConfirmation DontSend;
    public static UserConfirmation Send;
    public static UserConfirmation AlwaysSend;
}
public class Microsoft.AppCenter.Crashes.Utils.ErrorLogHelper : object {
    public static string ErrorLogFileExtension;
    public static string ExceptionFileExtension;
    public static string ErrorStorageDirectoryName;
    internal IDeviceInformationHelper _deviceInformationHelper;
    internal IProcessInformation _processInformation;
    internal Directory _crashesDirectory;
    private static object LockObject;
    private static ErrorLogHelper _instanceField;
    internal static ErrorLogHelper Instance { get; internal set; }
    private static ErrorLogHelper();
    internal static ErrorExceptionAndBinaries CreateModelExceptionAndBinaries(Exception exception);
    internal static ErrorLogHelper get_Instance();
    internal static void set_Instance(ErrorLogHelper value);
    public static ManagedErrorLog CreateErrorLog(Exception exception);
    public static IEnumerable`1<File> GetErrorLogFiles();
    public static Directory GetErrorStorageDirectory();
    public static File GetStoredErrorLogFile(Guid errorId);
    public static File GetStoredExceptionFile(Guid errorId);
    public static ManagedErrorLog ReadErrorLogFile(File file);
    public static string ReadExceptionFile(File file);
    public static void SaveErrorLogFiles(Exception exception, ManagedErrorLog errorLog);
    public static void RemoveStoredErrorLogFile(Guid errorId);
    public static void RemoveStoredExceptionFile(Guid errorId);
    public static void RemoveAllStoredErrorLogFiles();
    private ManagedErrorLog InstanceCreateErrorLog(Exception exception);
    public virtual IEnumerable`1<File> InstanceGetErrorLogFiles();
    private File InstanceGetStoredErrorLogFile(Guid errorId);
    public virtual File InstanceGetStoredExceptionFile(Guid errorId);
    public virtual ManagedErrorLog InstanceReadErrorLogFile(File file);
    public virtual string InstanceReadExceptionFile(File file);
    public virtual Directory InstanceGetErrorStorageDirectory();
    public virtual void InstanceSaveErrorLogFiles(Exception exception, ManagedErrorLog errorLog);
    public virtual void InstanceRemoveStoredErrorLogFile(Guid errorId);
    public virtual void InstanceRemoveStoredExceptionFile(Guid errorId);
    public virtual void InstanceRemoveAllStoredErrorLogFiles();
    internal static string ObfuscateUserName(string errorString);
    private File GetStoredFile(Guid errorId, string extension);
}
public interface Microsoft.AppCenter.Crashes.Utils.IProcessInformation {
    public Nullable`1<DateTime> ProcessStartTime { get; }
    public Nullable`1<int> ProcessId { get; }
    public string ProcessName { get; }
    public Nullable`1<int> ParentProcessId { get; }
    public string ParentProcessName { get; }
    public string ProcessArchitecture { get; }
    public abstract virtual Nullable`1<DateTime> get_ProcessStartTime();
    public abstract virtual Nullable`1<int> get_ProcessId();
    public abstract virtual string get_ProcessName();
    public abstract virtual Nullable`1<int> get_ParentProcessId();
    public abstract virtual string get_ParentProcessName();
    public abstract virtual string get_ProcessArchitecture();
}
public class Microsoft.AppCenter.Crashes.Utils.ProcessInformation : object {
    public Nullable`1<DateTime> ProcessStartTime { get; }
    public Nullable`1<int> ProcessId { get; }
    public string ProcessName { get; }
    public Nullable`1<int> ParentProcessId { get; }
    public string ParentProcessName { get; }
    public string ProcessArchitecture { get; }
    public sealed virtual Nullable`1<DateTime> get_ProcessStartTime();
    public sealed virtual Nullable`1<int> get_ProcessId();
    public sealed virtual string get_ProcessName();
    public sealed virtual Nullable`1<int> get_ParentProcessId();
    public sealed virtual string get_ParentProcessName();
    public sealed virtual string get_ProcessArchitecture();
}
internal class Microsoft.AppCenter.Crashes.Windows.Utils.ErrorExceptionAndBinaries : object {
    public Exception Exception;
    public IList`1<Binary> Binaries;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
