public class Microsoft.AppCenter.Crashes.AndroidErrorDetails : object {
    [CompilerGeneratedAttribute]
private object <Throwable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThreadName>k__BackingField;
    [ObsoleteAttribute("This property is no longer set due to a security issue, use StackTrace instead.")]
public object Throwable { get; }
    public string StackTrace { get; }
    public string ThreadName { get; }
    internal AndroidErrorDetails(string stackTrace, string threadName);
    [CompilerGeneratedAttribute]
public object get_Throwable();
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public string get_ThreadName();
}
public class Microsoft.AppCenter.Crashes.AppleErrorDetails : object {
    [CompilerGeneratedAttribute]
private string <ReporterKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Signal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExceptionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExceptionReason>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <AppProcessIdentifier>k__BackingField;
    public string ReporterKey { get; }
    public string Signal { get; }
    public string ExceptionName { get; }
    public string ExceptionReason { get; }
    public UInt32 AppProcessIdentifier { get; }
    internal AppleErrorDetails(string reporterKey, string signal, string exceptionName, string exceptionReason, UInt32 appProcessIdentifier);
    [CompilerGeneratedAttribute]
public string get_ReporterKey();
    [CompilerGeneratedAttribute]
public string get_Signal();
    [CompilerGeneratedAttribute]
public string get_ExceptionName();
    [CompilerGeneratedAttribute]
public string get_ExceptionReason();
    [CompilerGeneratedAttribute]
public UInt32 get_AppProcessIdentifier();
}
public class Microsoft.AppCenter.Crashes.Crashes : object {
    internal static string LogTag;
    [CompilerGeneratedAttribute]
private static SendingErrorReportEventHandler SendingErrorReport;
    [CompilerGeneratedAttribute]
private static SentErrorReportEventHandler SentErrorReport;
    [CompilerGeneratedAttribute]
private static FailedToSendErrorReportEventHandler FailedToSendErrorReport;
    public static ShouldProcessErrorReportCallback ShouldProcessErrorReport;
    public static ShouldAwaitUserConfirmationCallback ShouldAwaitUserConfirmation;
    public static GetErrorAttachmentsCallback GetErrorAttachments;
    private static Task`1<bool> PlatformIsEnabledAsync();
    private static Task PlatformSetEnabledAsync(bool enabled);
    private static Task`1<bool> PlatformHasCrashedInLastSessionAsync();
    private static Task`1<ErrorReport> PlatformGetLastSessionCrashReportAsync();
    private static Task`1<bool> PlatformHasReceivedMemoryWarningInLastSessionAsync();
    private static void PlatformNotifyUserConfirmation(UserConfirmation confirmation);
    private static void PlatformTrackError(Exception exception, IDictionary`2<string, string> properties, ErrorAttachmentLog[] attachments);
    private static void PlatformUnsetInstance();
    [CompilerGeneratedAttribute]
public static void add_SendingErrorReport(SendingErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_SendingErrorReport(SendingErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void add_SentErrorReport(SentErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_SentErrorReport(SentErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void add_FailedToSendErrorReport(FailedToSendErrorReportEventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_FailedToSendErrorReport(FailedToSendErrorReportEventHandler value);
    public static void NotifyUserConfirmation(UserConfirmation confirmation);
    public static Task`1<bool> IsEnabledAsync();
    public static Task SetEnabledAsync(bool enabled);
    public static Task`1<bool> HasCrashedInLastSessionAsync();
    public static Task`1<ErrorReport> GetLastSessionCrashReportAsync();
    public static Task`1<bool> HasReceivedMemoryWarningInLastSessionAsync();
    [ConditionalAttribute("DEBUG")]
public static void GenerateTestCrash();
    public static void TrackError(Exception exception, IDictionary`2<string, string> properties, ErrorAttachmentLog[] attachments);
    internal static void UnsetInstance();
}
public class Microsoft.AppCenter.Crashes.ErrorAttachmentLog : object {
    private static ErrorAttachmentLog PlatformAttachmentWithText(string text, string fileName);
    private static ErrorAttachmentLog PlatformAttachmentWithBinary(Byte[] data, string filename, string contentType);
    public static ErrorAttachmentLog AttachmentWithText(string text, string fileName);
    public static ErrorAttachmentLog AttachmentWithBinary(Byte[] data, string fileName, string contentType);
}
public class Microsoft.AppCenter.Crashes.ErrorReport : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <AppStartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <AppErrorTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Device <Device>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private AndroidErrorDetails <AndroidDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private AppleErrorDetails <AppleDetails>k__BackingField;
    public string Id { get; }
    public DateTimeOffset AppStartTime { get; }
    public DateTimeOffset AppErrorTime { get; }
    public Device Device { get; }
    [ObsoleteAttribute("This property is no longer set due to a security issue, use StackTrace as an alternative.")]
public Exception Exception { get; }
    public string StackTrace { get; }
    public AndroidErrorDetails AndroidDetails { get; }
    public AppleErrorDetails AppleDetails { get; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_AppStartTime();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_AppErrorTime();
    [CompilerGeneratedAttribute]
public Device get_Device();
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public AndroidErrorDetails get_AndroidDetails();
    [CompilerGeneratedAttribute]
public AppleErrorDetails get_AppleDetails();
}
public class Microsoft.AppCenter.Crashes.ErrorReportEventArgs : EventArgs {
    public ErrorReport Report;
}
public class Microsoft.AppCenter.Crashes.FailedToSendErrorReportEventArgs : ErrorReportEventArgs {
    public object Exception;
}
public class Microsoft.AppCenter.Crashes.FailedToSendErrorReportEventHandler : MulticastDelegate {
    public FailedToSendErrorReportEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, FailedToSendErrorReportEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, FailedToSendErrorReportEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.GetErrorAttachmentsCallback : MulticastDelegate {
    public GetErrorAttachmentsCallback(object object, IntPtr method);
    public virtual IEnumerable`1<ErrorAttachmentLog> Invoke(ErrorReport report);
    public virtual IAsyncResult BeginInvoke(ErrorReport report, AsyncCallback callback, object object);
    public virtual IEnumerable`1<ErrorAttachmentLog> EndInvoke(IAsyncResult result);
}
internal class Microsoft.AppCenter.Crashes.NamespaceDoc : object {
}
public class Microsoft.AppCenter.Crashes.SendingErrorReportEventArgs : ErrorReportEventArgs {
}
public class Microsoft.AppCenter.Crashes.SendingErrorReportEventHandler : MulticastDelegate {
    public SendingErrorReportEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, SendingErrorReportEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SendingErrorReportEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.SentErrorReportEventArgs : ErrorReportEventArgs {
}
public class Microsoft.AppCenter.Crashes.SentErrorReportEventHandler : MulticastDelegate {
    public SentErrorReportEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, SentErrorReportEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SentErrorReportEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.ShouldAwaitUserConfirmationCallback : MulticastDelegate {
    public ShouldAwaitUserConfirmationCallback(object object, IntPtr method);
    public virtual bool Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.ShouldProcessErrorReportCallback : MulticastDelegate {
    public ShouldProcessErrorReportCallback(object object, IntPtr method);
    public virtual bool Invoke(ErrorReport report);
    public virtual IAsyncResult BeginInvoke(ErrorReport report, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Crashes.TestCrashException : Exception {
    private static string CrashMessage;
}
public enum Microsoft.AppCenter.Crashes.UserConfirmation : Enum {
    public int value__;
    public static UserConfirmation DontSend;
    public static UserConfirmation Send;
    public static UserConfirmation AlwaysSend;
}
