internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_J : MulticastDelegate {
    public _JniMarshal_PP_J(object object, IntPtr method);
    public virtual long Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual long EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_Z : MulticastDelegate {
    public _JniMarshal_PPLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
[RegisterAttribute("com/microsoft/appcenter/distribute/permissions/PermissionRequestActivity")]
public class Com.Microsoft.Appcenter.Distribute.Permissions.PermissionRequestActivity : Activity {
    private static JniPeerMembers _members;
    private static Delegate cb_onCreate_Landroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected PermissionRequestActivity(IntPtr javaReference, JniHandleOwnership transfer);
    private static PermissionRequestActivity();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnCreate_Landroid_os_Bundle_Handler();
    private static void n_OnCreate_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_savedInstanceState);
    [RegisterAttribute("onCreate", "(Landroid/os/Bundle;)V", "GetOnCreate_Landroid_os_Bundle_Handler")]
public virtual void OnCreate(Bundle savedInstanceState);
    [RegisterAttribute("requestPermissions", "(Landroid/content/Context;[Ljava/lang/String;)Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture RequestPermissions(Context context, String[] permissions);
}
[RegisterAttribute("com/microsoft/appcenter/distribute/permissions/PermissionUtils")]
public class Com.Microsoft.Appcenter.Distribute.Permissions.PermissionUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected PermissionUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static PermissionUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("permissionsAreGranted", "(Landroid/content/Context;[Ljava/lang/String;)Z", "")]
public static bool PermissionsAreGranted(Context context, String[] permissions);
    [RegisterAttribute("permissionsAreGranted", "([I)Z", "")]
public static bool PermissionsAreGranted(Int32[] permissionsState);
    [RegisterAttribute("permissionsState", "(Landroid/content/Context;[Ljava/lang/String;)[I", "")]
public static Int32[] PermissionsState(Context context, String[] permissions);
    [RegisterAttribute("requestPermissions", "(Landroid/content/Context;[Ljava/lang/String;)Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture RequestPermissions(Context context, String[] permissions);
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_com_microsoft_appcenter_distribute_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_com_microsoft_appcenter_distribute_package(string klass);
}
[RegisterAttribute("com/microsoft/appcenter/distribute/DeepLinkActivity")]
public class Microsoft.AppCenter.Distribute.Android.DeepLinkActivity : Activity {
    private static JniPeerMembers _members;
    private static Delegate cb_onCreate_Landroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DeepLinkActivity(IntPtr javaReference, JniHandleOwnership transfer);
    private static DeepLinkActivity();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnCreate_Landroid_os_Bundle_Handler();
    private static void n_OnCreate_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_savedInstanceState);
    [RegisterAttribute("onCreate", "(Landroid/os/Bundle;)V", "GetOnCreate_Landroid_os_Bundle_Handler")]
public virtual void OnCreate(Bundle savedInstanceState);
}
[RegisterAttribute("com/microsoft/appcenter/distribute/Distribute")]
public class Microsoft.AppCenter.Distribute.Android.Distribute : AbstractAppCenterService {
    private static JniPeerMembers _members;
    private static Delegate cb_getGroupName;
    private static Delegate cb_getLoggerTag;
    private static Delegate cb_getServiceName;
    private static Delegate cb_showUpdateSetupFailedDialog;
    private WeakReference weak_implementor_SetListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected string GroupName { get; }
    public static Distribute Instance { get; }
    protected string LoggerTag { get; }
    public string ServiceName { get; }
    public static int UpdateTrack { get; public set; }
    protected Distribute(IntPtr javaReference, JniHandleOwnership transfer);
    private static Distribute();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetGroupNameHandler();
    private static IntPtr n_GetGroupName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGroupName", "()Ljava/lang/String;", "GetGetGroupNameHandler")]
protected virtual string get_GroupName();
    [RegisterAttribute("getInstance", "()Lcom/microsoft/appcenter/distribute/Distribute;", "")]
public static Distribute get_Instance();
    private static Delegate GetGetLoggerTagHandler();
    private static IntPtr n_GetLoggerTag(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLoggerTag", "()Ljava/lang/String;", "GetGetLoggerTagHandler")]
protected virtual string get_LoggerTag();
    private static Delegate GetGetServiceNameHandler();
    private static IntPtr n_GetServiceName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getServiceName", "()Ljava/lang/String;", "GetGetServiceNameHandler")]
public virtual string get_ServiceName();
    [RegisterAttribute("getUpdateTrack", "()I", "")]
public static int get_UpdateTrack();
    [RegisterAttribute("setUpdateTrack", "(I)V", "")]
public static void set_UpdateTrack(int value);
    [RegisterAttribute("addStores", "(Ljava/util/Set;)V", "")]
public static void AddStores(ICollection`1<string> stores);
    [RegisterAttribute("checkForUpdate", "()V", "")]
public static void CheckForUpdate();
    [RegisterAttribute("disableAutomaticCheckForUpdate", "()V", "")]
public static void DisableAutomaticCheckForUpdate();
    [RegisterAttribute("isEnabled", "()Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture IsEnabled();
    [RegisterAttribute("notifyUpdateAction", "(I)V", "")]
public static void NotifyUpdateAction(int updateAction);
    [RegisterAttribute("setApiUrl", "(Ljava/lang/String;)V", "")]
public static void SetApiUrl(string apiUrl);
    [RegisterAttribute("setEnabled", "(Z)Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture SetEnabled(bool enabled);
    [RegisterAttribute("setEnabledForDebuggableBuild", "(Z)V", "")]
public static void SetEnabledForDebuggableBuild(bool enabled);
    [RegisterAttribute("setInstallUrl", "(Ljava/lang/String;)V", "")]
public static void SetInstallUrl(string installUrl);
    [RegisterAttribute("setListener", "(Lcom/microsoft/appcenter/distribute/DistributeListener;)V", "")]
public static void SetListener(IDistributeListener listener);
    private static Delegate GetShowUpdateSetupFailedDialogHandler();
    private static void n_ShowUpdateSetupFailedDialog(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("showUpdateSetupFailedDialog", "()V", "GetShowUpdateSetupFailedDialogHandler")]
protected virtual void ShowUpdateSetupFailedDialog();
    [RegisterAttribute("unsetInstance", "()V", "")]
public static void UnsetInstance();
    public void add_NoReleaseAvailable(EventHandler`1<NoReleaseAvailableEventArgs> value);
    public void remove_NoReleaseAvailable(EventHandler`1<NoReleaseAvailableEventArgs> value);
    public void add_ReleaseAvailable(EventHandler`1<ReleaseAvailableEventArgs> value);
    public void remove_ReleaseAvailable(EventHandler`1<ReleaseAvailableEventArgs> value);
    private IDistributeListenerImplementor __CreateIDistributeListenerImplementor();
}
[RegisterAttribute("com/microsoft/appcenter/distribute/DownloadManagerReceiver")]
public class Microsoft.AppCenter.Distribute.Android.DownloadManagerReceiver : BroadcastReceiver {
    private static JniPeerMembers _members;
    private static Delegate cb_onReceive_Landroid_content_Context_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DownloadManagerReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    private static DownloadManagerReceiver();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler();
    private static void n_OnReceive_Landroid_content_Context_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_intent);
    [RegisterAttribute("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")]
public virtual void OnReceive(Context context, Intent intent);
}
[RegisterAttribute("com/microsoft/appcenter/distribute/DistributeListener", "", "Microsoft.AppCenter.Distribute.Android.IDistributeListenerInvoker")]
public interface Microsoft.AppCenter.Distribute.Android.IDistributeListener {
    [RegisterAttribute("onNoReleaseAvailable", "(Landroid/app/Activity;)V", "GetOnNoReleaseAvailable_Landroid_app_Activity_Handler:Microsoft.AppCenter.Distribute.Android.IDistributeListenerInvoker, Microsoft.AppCenter.Distribute")]
public abstract virtual void OnNoReleaseAvailable(Activity activity);
    [RegisterAttribute("onReleaseAvailable", "(Landroid/app/Activity;Lcom/microsoft/appcenter/distribute/ReleaseDetails;)Z", "GetOnReleaseAvailable_Landroid_app_Activity_Lcom_microsoft_appcenter_distribute_ReleaseDetails_Handler:Microsoft.AppCenter.Distribute.Android.IDistributeListenerInvoker, Microsoft.AppCenter.Distribute")]
public abstract virtual bool OnReleaseAvailable(Activity activity, ReleaseDetails releaseDetails);
}
[RegisterAttribute("mono/com/microsoft/appcenter/distribute/DistributeListenerImplementor")]
internal class Microsoft.AppCenter.Distribute.Android.IDistributeListenerImplementor : Object {
    private object sender;
    public EventHandler`1<NoReleaseAvailableEventArgs> OnNoReleaseAvailableHandler;
    public EventHandler`1<ReleaseAvailableEventArgs> OnReleaseAvailableHandler;
    public IDistributeListenerImplementor(object sender);
    public sealed virtual void OnNoReleaseAvailable(Activity activity);
    public sealed virtual bool OnReleaseAvailable(Activity activity, ReleaseDetails releaseDetails);
    internal static bool __IsEmpty(IDistributeListenerImplementor value);
}
[RegisterAttribute("com/microsoft/appcenter/distribute/DistributeListener")]
internal class Microsoft.AppCenter.Distribute.Android.IDistributeListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onNoReleaseAvailable_Landroid_app_Activity_;
    private IntPtr id_onNoReleaseAvailable_Landroid_app_Activity_;
    private static Delegate cb_onReleaseAvailable_Landroid_app_Activity_Lcom_microsoft_appcenter_distribute_ReleaseDetails_;
    private IntPtr id_onReleaseAvailable_Landroid_app_Activity_Lcom_microsoft_appcenter_distribute_ReleaseDetails_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDistributeListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDistributeListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IDistributeListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnNoReleaseAvailable_Landroid_app_Activity_Handler();
    private static void n_OnNoReleaseAvailable_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual void OnNoReleaseAvailable(Activity activity);
    private static Delegate GetOnReleaseAvailable_Landroid_app_Activity_Lcom_microsoft_appcenter_distribute_ReleaseDetails_Handler();
    private static bool n_OnReleaseAvailable_Landroid_app_Activity_Lcom_microsoft_appcenter_distribute_ReleaseDetails_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_releaseDetails);
    public sealed virtual bool OnReleaseAvailable(Activity activity, ReleaseDetails releaseDetails);
}
public class Microsoft.AppCenter.Distribute.Android.NoReleaseAvailableEventArgs : EventArgs {
    private Activity activity;
    public Activity Activity { get; }
    public NoReleaseAvailableEventArgs(Activity activity);
    public Activity get_Activity();
}
public class Microsoft.AppCenter.Distribute.Android.ReleaseAvailableEventArgs : EventArgs {
    private bool handled;
    private Activity activity;
    private ReleaseDetails releaseDetails;
    public bool Handled { get; public set; }
    public Activity Activity { get; }
    public ReleaseDetails ReleaseDetails { get; }
    public ReleaseAvailableEventArgs(bool handled, Activity activity, ReleaseDetails releaseDetails);
    public bool get_Handled();
    public void set_Handled(bool value);
    public Activity get_Activity();
    public ReleaseDetails get_ReleaseDetails();
}
[RegisterAttribute("com/microsoft/appcenter/distribute/ReleaseDetails")]
public class Microsoft.AppCenter.Distribute.Android.ReleaseDetails : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getDistributionGroupId;
    private static Delegate cb_getDownloadUrl;
    private static Delegate cb_getId;
    private static Delegate cb_isMandatoryUpdate;
    private static Delegate cb_getReleaseHash;
    private static Delegate cb_getReleaseNotes;
    private static Delegate cb_getReleaseNotesUrl;
    private static Delegate cb_getShortVersion;
    private static Delegate cb_getSize;
    private static Delegate cb_getVersion;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string DistributionGroupId { get; }
    public Uri DownloadUrl { get; }
    public int Id { get; }
    public bool IsMandatoryUpdate { get; }
    public string ReleaseHash { get; }
    public string ReleaseNotes { get; }
    public Uri ReleaseNotesUrl { get; }
    public string ShortVersion { get; }
    public long Size { get; }
    public int Version { get; }
    protected ReleaseDetails(IntPtr javaReference, JniHandleOwnership transfer);
    private static ReleaseDetails();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDistributionGroupIdHandler();
    private static IntPtr n_GetDistributionGroupId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDistributionGroupId", "()Ljava/lang/String;", "GetGetDistributionGroupIdHandler")]
public virtual string get_DistributionGroupId();
    private static Delegate GetGetDownloadUrlHandler();
    private static IntPtr n_GetDownloadUrl(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDownloadUrl", "()Landroid/net/Uri;", "GetGetDownloadUrlHandler")]
public virtual Uri get_DownloadUrl();
    private static Delegate GetGetIdHandler();
    private static int n_GetId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getId", "()I", "GetGetIdHandler")]
public virtual int get_Id();
    private static Delegate GetIsMandatoryUpdateHandler();
    private static bool n_IsMandatoryUpdate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isMandatoryUpdate", "()Z", "GetIsMandatoryUpdateHandler")]
public virtual bool get_IsMandatoryUpdate();
    private static Delegate GetGetReleaseHashHandler();
    private static IntPtr n_GetReleaseHash(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getReleaseHash", "()Ljava/lang/String;", "GetGetReleaseHashHandler")]
public virtual string get_ReleaseHash();
    private static Delegate GetGetReleaseNotesHandler();
    private static IntPtr n_GetReleaseNotes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getReleaseNotes", "()Ljava/lang/String;", "GetGetReleaseNotesHandler")]
public virtual string get_ReleaseNotes();
    private static Delegate GetGetReleaseNotesUrlHandler();
    private static IntPtr n_GetReleaseNotesUrl(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getReleaseNotesUrl", "()Landroid/net/Uri;", "GetGetReleaseNotesUrlHandler")]
public virtual Uri get_ReleaseNotesUrl();
    private static Delegate GetGetShortVersionHandler();
    private static IntPtr n_GetShortVersion(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getShortVersion", "()Ljava/lang/String;", "GetGetShortVersionHandler")]
public virtual string get_ShortVersion();
    private static Delegate GetGetSizeHandler();
    private static long n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()J", "GetGetSizeHandler")]
public virtual long get_Size();
    private static Delegate GetGetVersionHandler();
    private static int n_GetVersion(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVersion", "()I", "GetGetVersionHandler")]
public virtual int get_Version();
}
[RegisterAttribute("com/microsoft/appcenter/distribute/UpdateReceiver")]
public class Microsoft.AppCenter.Distribute.Android.UpdateReceiver : BroadcastReceiver {
    private static JniPeerMembers _members;
    private static Delegate cb_onReceive_Landroid_content_Context_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UpdateReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    private static UpdateReceiver();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler();
    private static void n_OnReceive_Landroid_content_Context_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_intent);
    [RegisterAttribute("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")]
public virtual void OnReceive(Context context, Intent intent);
}
[PreserveAttribute]
internal class Microsoft.AppCenter.Distribute.DeepLinkActivity : DeepLinkActivity {
}
public static class Microsoft.AppCenter.Distribute.Distribute : object {
    private static Listener _listener;
    private static ReleaseAvailableCallback _releaseAvailableCallback;
    private static NoReleaseAvailableCallback _noReleaseAvailableCallback;
    [PreserveAttribute]
public static Type BindingType { get; }
    unknown static ReleaseAvailableCallback ReleaseAvailable {public set; }
    unknown static WillExitAppCallback WillExitApp {public set; }
    unknown static NoReleaseAvailableCallback NoReleaseAvailable {public set; }
    public static UpdateTrack UpdateTrack { get; public set; }
    public static Type get_BindingType();
    private static Task`1<bool> PlatformIsEnabledAsync();
    private static Task PlatformSetEnabledAsync(bool enabled);
    private static void PlatformSetInstallUrl(string installUrl);
    private static void PlatformSetApiUrl(string apiUrl);
    private static void PlatformUnsetInstance();
    private static void HandleUpdateAction(UpdateAction updateAction);
    private static void SetUpdateTrack(UpdateTrack updateTrack);
    private static UpdateTrack GetUpdateTrack();
    private static void PlatformCheckForUpdate();
    private static void PlatformDisableAutomaticCheckForUpdate();
    public static void SetEnabledForDebuggableBuild(bool enabled);
    private static void SetReleaseAvailableCallback(ReleaseAvailableCallback releaseAvailableCallback);
    private static void SetWillExitAppCallback(WillExitAppCallback willExitAppCallback);
    private static void SetNoReleaseAvailable(NoReleaseAvailableCallback noReleaseAvailable);
    public static Task`1<bool> IsEnabledAsync();
    public static Task SetEnabledAsync(bool enabled);
    public static void SetInstallUrl(string installUrl);
    public static void SetApiUrl(string apiUrl);
    public static void set_ReleaseAvailable(ReleaseAvailableCallback value);
    public static void set_WillExitApp(WillExitAppCallback value);
    public static void set_NoReleaseAvailable(NoReleaseAvailableCallback value);
    public static void NotifyUpdateAction(UpdateAction updateAction);
    public static UpdateTrack get_UpdateTrack();
    public static void set_UpdateTrack(UpdateTrack value);
    public static void CheckForUpdate();
    public static void DisableAutomaticCheckForUpdate();
    internal static void UnsetInstance();
}
[PreserveAttribute]
internal class Microsoft.AppCenter.Distribute.DownloadManagerReceiver : DownloadManagerReceiver {
}
internal class Microsoft.AppCenter.Distribute.NamespaceDoc : object {
}
public class Microsoft.AppCenter.Distribute.NoReleaseAvailableCallback : MulticastDelegate {
    public NoReleaseAvailableCallback(object object, IntPtr method);
    public virtual void Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Distribute.ReleaseAvailableCallback : MulticastDelegate {
    public ReleaseAvailableCallback(object object, IntPtr method);
    public virtual bool Invoke(ReleaseDetails releaseDetails);
    public virtual IAsyncResult BeginInvoke(ReleaseDetails releaseDetails, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
public class Microsoft.AppCenter.Distribute.ReleaseDetails : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ReleaseNotesUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MandatoryUpdate>k__BackingField;
    public int Id { get; internal set; }
    public string Version { get; internal set; }
    public string ShortVersion { get; internal set; }
    public string ReleaseNotes { get; internal set; }
    public Uri ReleaseNotesUrl { get; internal set; }
    public bool MandatoryUpdate { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ShortVersion();
    [CompilerGeneratedAttribute]
internal void set_ShortVersion(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
internal void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public Uri get_ReleaseNotesUrl();
    [CompilerGeneratedAttribute]
internal void set_ReleaseNotesUrl(Uri value);
    [CompilerGeneratedAttribute]
public bool get_MandatoryUpdate();
    [CompilerGeneratedAttribute]
internal void set_MandatoryUpdate(bool value);
}
public enum Microsoft.AppCenter.Distribute.UpdateAction : Enum {
    public int value__;
    public static UpdateAction Update;
    public static UpdateAction Postpone;
}
public enum Microsoft.AppCenter.Distribute.UpdateTrack : Enum {
    public int value__;
    public static UpdateTrack Public;
    public static UpdateTrack Private;
}
public class Microsoft.AppCenter.Distribute.WillExitAppCallback : MulticastDelegate {
    public WillExitAppCallback(object object, IntPtr method);
    public virtual void Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
