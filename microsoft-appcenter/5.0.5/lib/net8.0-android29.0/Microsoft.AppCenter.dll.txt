internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_J : MulticastDelegate {
    public _JniMarshal_PP_J(object object, IntPtr method);
    public virtual long Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual long EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_L : MulticastDelegate {
    public _JniMarshal_PPI_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_Z : MulticastDelegate {
    public _JniMarshal_PPJ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIJILL_V : MulticastDelegate {
    public _JniMarshal_PPLIJILL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, long p2, int p3, IntPtr p4, IntPtr p5);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, long p2, int p3, IntPtr p4, IntPtr p5, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_L : MulticastDelegate {
    public _JniMarshal_PPLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLI_V : MulticastDelegate {
    public _JniMarshal_PPLLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLJ_V : MulticastDelegate {
    public _JniMarshal_PPLLJ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, long p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, long p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_Z : MulticastDelegate {
    public _JniMarshal_PPLLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, IntPtr p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, IntPtr p4, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLLZ_V : MulticastDelegate {
    public _JniMarshal_PPLLLLZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, bool p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, bool p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_com_microsoft_appcenter_mappings;
    private static String[] package_com_microsoft_appcenter_channel_mappings;
    private static String[] package_com_microsoft_appcenter_http_mappings;
    private static String[] package_com_microsoft_appcenter_ingestion_mappings;
    private static String[] package_com_microsoft_appcenter_ingestion_models_mappings;
    private static String[] package_com_microsoft_appcenter_ingestion_models_json_mappings;
    private static String[] package_com_microsoft_appcenter_ingestion_models_one_mappings;
    private static String[] package_com_microsoft_appcenter_ingestion_models_properties_mappings;
    private static String[] package_com_microsoft_appcenter_utils_mappings;
    private static String[] package_com_microsoft_appcenter_utils_async_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_com_microsoft_appcenter_package(string klass);
    private static Type lookup_com_microsoft_appcenter_channel_package(string klass);
    private static Type lookup_com_microsoft_appcenter_http_package(string klass);
    private static Type lookup_com_microsoft_appcenter_ingestion_package(string klass);
    private static Type lookup_com_microsoft_appcenter_ingestion_models_package(string klass);
    private static Type lookup_com_microsoft_appcenter_ingestion_models_json_package(string klass);
    private static Type lookup_com_microsoft_appcenter_ingestion_models_one_package(string klass);
    private static Type lookup_com_microsoft_appcenter_ingestion_models_properties_package(string klass);
    private static Type lookup_com_microsoft_appcenter_utils_package(string klass);
    private static Type lookup_com_microsoft_appcenter_utils_async_package(string klass);
}
[RegisterAttribute("com/microsoft/appcenter/AbstractAppCenterService")]
public abstract class Microsoft.AppCenter.Android.AbstractAppCenterService : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getChannelListener;
    private static Delegate cb_getEnabledPreferenceKey;
    private static Delegate cb_getGroupName;
    private static Delegate cb_isInstanceEnabled;
    private static Delegate cb_setInstanceEnabled_Z;
    private static Delegate cb_isAppSecretRequired;
    private static Delegate cb_isStarted;
    private static Delegate cb_getLogFactories;
    private static Delegate cb_getLoggerTag;
    private static Delegate cb_getTriggerCount;
    private static Delegate cb_getTriggerInterval;
    private static Delegate cb_getTriggerMaxParallelRequests;
    private static Delegate cb_applyEnabledState_Z;
    private static Delegate cb_isInstanceEnabledAsync;
    private static Delegate cb_onActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_;
    private static Delegate cb_onActivityDestroyed_Landroid_app_Activity_;
    private static Delegate cb_onActivityPaused_Landroid_app_Activity_;
    private static Delegate cb_onActivityResumed_Landroid_app_Activity_;
    private static Delegate cb_onActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_;
    private static Delegate cb_onActivityStarted_Landroid_app_Activity_;
    private static Delegate cb_onActivityStopped_Landroid_app_Activity_;
    private static Delegate cb_onApplicationEnterBackground;
    private static Delegate cb_onApplicationEnterForeground;
    private static Delegate cb_onConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_onStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_Z;
    private static Delegate cb_post_Ljava_lang_Runnable_;
    private static Delegate cb_post_Ljava_lang_Runnable_Ljava_lang_Runnable_Ljava_lang_Runnable_;
    private static Delegate cb_postAsyncGetter_Ljava_lang_Runnable_Lcom_microsoft_appcenter_utils_async_DefaultAppCenterFuture_Ljava_lang_Object_;
    private static Delegate cb_getServiceName;
    [RegisterAttribute("mChannel")]
protected IChannel MChannel { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected IChannelGroupListener ChannelListener { get; }
    protected string EnabledPreferenceKey { get; }
    protected string GroupName { get; }
    public bool InstanceEnabled { get; public set; }
    public bool IsAppSecretRequired { get; }
    protected bool IsStarted { get; }
    public IDictionary`2<string, ILogFactory> LogFactories { get; }
    protected string LoggerTag { get; }
    protected int TriggerCount { get; }
    protected long TriggerInterval { get; }
    protected int TriggerMaxParallelRequests { get; }
    public string ServiceName { get; }
    protected AbstractAppCenterService(IntPtr javaReference, JniHandleOwnership transfer);
    private static AbstractAppCenterService();
    protected IChannel get_MChannel();
    protected void set_MChannel(IChannel value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetChannelListenerHandler();
    private static IntPtr n_GetChannelListener(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChannelListener", "()Lcom/microsoft/appcenter/channel/Channel$GroupListener;", "GetGetChannelListenerHandler")]
protected virtual IChannelGroupListener get_ChannelListener();
    private static Delegate GetGetEnabledPreferenceKeyHandler();
    private static IntPtr n_GetEnabledPreferenceKey(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEnabledPreferenceKey", "()Ljava/lang/String;", "GetGetEnabledPreferenceKeyHandler")]
protected virtual string get_EnabledPreferenceKey();
    private static Delegate GetGetGroupNameHandler();
    private static IntPtr n_GetGroupName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGroupName", "()Ljava/lang/String;", "GetGetGroupNameHandler")]
protected abstract virtual string get_GroupName();
    private static Delegate GetIsInstanceEnabledHandler();
    private static bool n_IsInstanceEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetInstanceEnabled_ZHandler();
    private static void n_SetInstanceEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isInstanceEnabled", "()Z", "GetIsInstanceEnabledHandler")]
public virtual bool get_InstanceEnabled();
    [RegisterAttribute("setInstanceEnabled", "(Z)V", "GetSetInstanceEnabled_ZHandler")]
public virtual void set_InstanceEnabled(bool value);
    private static Delegate GetIsAppSecretRequiredHandler();
    private static bool n_IsAppSecretRequired(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isAppSecretRequired", "()Z", "GetIsAppSecretRequiredHandler")]
public virtual bool get_IsAppSecretRequired();
    private static Delegate GetIsStartedHandler();
    private static bool n_IsStarted(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStarted", "()Z", "GetIsStartedHandler")]
protected virtual bool get_IsStarted();
    private static Delegate GetGetLogFactoriesHandler();
    private static IntPtr n_GetLogFactories(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLogFactories", "()Ljava/util/Map;", "GetGetLogFactoriesHandler")]
public virtual IDictionary`2<string, ILogFactory> get_LogFactories();
    private static Delegate GetGetLoggerTagHandler();
    private static IntPtr n_GetLoggerTag(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLoggerTag", "()Ljava/lang/String;", "GetGetLoggerTagHandler")]
protected abstract virtual string get_LoggerTag();
    private static Delegate GetGetTriggerCountHandler();
    private static int n_GetTriggerCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTriggerCount", "()I", "GetGetTriggerCountHandler")]
protected virtual int get_TriggerCount();
    private static Delegate GetGetTriggerIntervalHandler();
    private static long n_GetTriggerInterval(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTriggerInterval", "()J", "GetGetTriggerIntervalHandler")]
protected virtual long get_TriggerInterval();
    private static Delegate GetGetTriggerMaxParallelRequestsHandler();
    private static int n_GetTriggerMaxParallelRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTriggerMaxParallelRequests", "()I", "GetGetTriggerMaxParallelRequestsHandler")]
protected virtual int get_TriggerMaxParallelRequests();
    private static Delegate GetApplyEnabledState_ZHandler();
    private static void n_ApplyEnabledState_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("applyEnabledState", "(Z)V", "GetApplyEnabledState_ZHandler")]
protected virtual void ApplyEnabledState(bool enabled);
    private static Delegate GetIsInstanceEnabledAsyncHandler();
    private static IntPtr n_IsInstanceEnabledAsync(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isInstanceEnabledAsync", "()Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "GetIsInstanceEnabledAsyncHandler")]
protected virtual IAppCenterFuture IsInstanceEnabledAsync();
    private static Delegate GetOnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_Handler();
    private static void n_OnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_savedInstanceState);
    [RegisterAttribute("onActivityCreated", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetOnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_Handler")]
public virtual void OnActivityCreated(Activity activity, Bundle savedInstanceState);
    private static Delegate GetOnActivityDestroyed_Landroid_app_Activity_Handler();
    private static void n_OnActivityDestroyed_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityDestroyed", "(Landroid/app/Activity;)V", "GetOnActivityDestroyed_Landroid_app_Activity_Handler")]
public virtual void OnActivityDestroyed(Activity activity);
    private static Delegate GetOnActivityPaused_Landroid_app_Activity_Handler();
    private static void n_OnActivityPaused_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityPaused", "(Landroid/app/Activity;)V", "GetOnActivityPaused_Landroid_app_Activity_Handler")]
public virtual void OnActivityPaused(Activity activity);
    private static Delegate GetOnActivityResumed_Landroid_app_Activity_Handler();
    private static void n_OnActivityResumed_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityResumed", "(Landroid/app/Activity;)V", "GetOnActivityResumed_Landroid_app_Activity_Handler")]
public virtual void OnActivityResumed(Activity activity);
    private static Delegate GetOnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler();
    private static void n_OnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_outState);
    [RegisterAttribute("onActivitySaveInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetOnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler")]
public virtual void OnActivitySaveInstanceState(Activity activity, Bundle outState);
    private static Delegate GetOnActivityStarted_Landroid_app_Activity_Handler();
    private static void n_OnActivityStarted_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityStarted", "(Landroid/app/Activity;)V", "GetOnActivityStarted_Landroid_app_Activity_Handler")]
public virtual void OnActivityStarted(Activity activity);
    private static Delegate GetOnActivityStopped_Landroid_app_Activity_Handler();
    private static void n_OnActivityStopped_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityStopped", "(Landroid/app/Activity;)V", "GetOnActivityStopped_Landroid_app_Activity_Handler")]
public virtual void OnActivityStopped(Activity activity);
    private static Delegate GetOnApplicationEnterBackgroundHandler();
    private static void n_OnApplicationEnterBackground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onApplicationEnterBackground", "()V", "GetOnApplicationEnterBackgroundHandler")]
public virtual void OnApplicationEnterBackground();
    private static Delegate GetOnApplicationEnterForegroundHandler();
    private static void n_OnApplicationEnterForeground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onApplicationEnterForeground", "()V", "GetOnApplicationEnterForegroundHandler")]
public virtual void OnApplicationEnterForeground();
    private static Delegate GetOnConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_OnConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_appSecret, IntPtr native_transmissionTargetToken);
    [RegisterAttribute("onConfigurationUpdated", "(Ljava/lang/String;Ljava/lang/String;)V", "GetOnConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual void OnConfigurationUpdated(string appSecret, string transmissionTargetToken);
    private static Delegate GetOnStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_ZHandler();
    private static void n_OnStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_channel, IntPtr native_appSecret, IntPtr native_transmissionTargetToken, bool startedFromApp);
    [RegisterAttribute("onStarted", "(Landroid/content/Context;Lcom/microsoft/appcenter/channel/Channel;Ljava/lang/String;Ljava/lang/String;Z)V", "GetOnStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_ZHandler")]
public virtual void OnStarted(Context context, IChannel channel, string appSecret, string transmissionTargetToken, bool startedFromApp);
    [RegisterAttribute("onStarting", "(Lcom/microsoft/appcenter/AppCenterHandler;)V", "")]
public sealed virtual void OnStarting(IAppCenterHandler handler);
    private static Delegate GetPost_Ljava_lang_Runnable_Handler();
    private static void n_Post_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_runnable);
    [RegisterAttribute("post", "(Ljava/lang/Runnable;)V", "GetPost_Ljava_lang_Runnable_Handler")]
protected virtual void Post(IRunnable runnable);
    private static Delegate GetPost_Ljava_lang_Runnable_Ljava_lang_Runnable_Ljava_lang_Runnable_Handler();
    private static bool n_Post_Ljava_lang_Runnable_Ljava_lang_Runnable_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_runnable, IntPtr native_coreDisabledRunnable, IntPtr native_serviceDisabledRunnable);
    [RegisterAttribute("post", "(Ljava/lang/Runnable;Ljava/lang/Runnable;Ljava/lang/Runnable;)Z", "GetPost_Ljava_lang_Runnable_Ljava_lang_Runnable_Ljava_lang_Runnable_Handler")]
protected virtual bool Post(IRunnable runnable, IRunnable coreDisabledRunnable, IRunnable serviceDisabledRunnable);
    private static Delegate GetPostAsyncGetter_Ljava_lang_Runnable_Lcom_microsoft_appcenter_utils_async_DefaultAppCenterFuture_Ljava_lang_Object_Handler();
    private static void n_PostAsyncGetter_Ljava_lang_Runnable_Lcom_microsoft_appcenter_utils_async_DefaultAppCenterFuture_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_runnable, IntPtr native_future, IntPtr native_valueIfDisabledOrNotStarted);
    [RegisterAttribute("postAsyncGetter", "(Ljava/lang/Runnable;Lcom/microsoft/appcenter/utils/async/DefaultAppCenterFuture;Ljava/lang/Object;)V", "GetPostAsyncGetter_Ljava_lang_Runnable_Lcom_microsoft_appcenter_utils_async_DefaultAppCenterFuture_Ljava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected virtual void PostAsyncGetter(IRunnable runnable, DefaultAppCenterFuture future, Object valueIfDisabledOrNotStarted);
    [RegisterAttribute("setInstanceEnabledAsync", "(Z)Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
protected IAppCenterFuture SetInstanceEnabledAsync(bool enabled);
    private static Delegate GetGetServiceNameHandler();
    private static IntPtr n_GetServiceName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getServiceName", "()Ljava/lang/String;", "GetGetServiceNameHandler")]
public abstract virtual string get_ServiceName();
}
[RegisterAttribute("com/microsoft/appcenter/AbstractAppCenterService")]
internal class Microsoft.AppCenter.Android.AbstractAppCenterServiceInvoker : AbstractAppCenterService {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected string GroupName { get; }
    protected string LoggerTag { get; }
    public string ServiceName { get; }
    public AbstractAppCenterServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AbstractAppCenterServiceInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getGroupName", "()Ljava/lang/String;", "GetGetGroupNameHandler")]
protected virtual string get_GroupName();
    [RegisterAttribute("getLoggerTag", "()Ljava/lang/String;", "GetGetLoggerTagHandler")]
protected virtual string get_LoggerTag();
    [RegisterAttribute("getServiceName", "()Ljava/lang/String;", "GetGetServiceNameHandler")]
public virtual string get_ServiceName();
}
[RegisterAttribute("com/microsoft/appcenter/AppCenter")]
public class Microsoft.AppCenter.Android.AppCenter : Object {
    [RegisterAttribute("LOG_TAG")]
public static string LogTag;
    private static JniPeerMembers _members;
    private static Delegate cb_setChannel_Lcom_microsoft_appcenter_channel_Channel_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static string DataResidencyRegion { get; public set; }
    public static IAppCenterFuture InstallId { get; }
    public static AppCenter Instance { get; }
    public static bool IsConfigured { get; }
    public static bool IsRunningInAppCenterTestCloud { get; }
    public static int LogLevel { get; public set; }
    public static bool NetworkRequestsAllowed { get; public set; }
    public static string SdkVersion { get; }
    protected AppCenter(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppCenter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDataResidencyRegion", "()Ljava/lang/String;", "")]
public static string get_DataResidencyRegion();
    [RegisterAttribute("setDataResidencyRegion", "(Ljava/lang/String;)V", "")]
public static void set_DataResidencyRegion(string value);
    [RegisterAttribute("getInstallId", "()Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture get_InstallId();
    [RegisterAttribute("getInstance", "()Lcom/microsoft/appcenter/AppCenter;", "")]
public static AppCenter get_Instance();
    [RegisterAttribute("isConfigured", "()Z", "")]
public static bool get_IsConfigured();
    [RegisterAttribute("isRunningInAppCenterTestCloud", "()Z", "")]
public static bool get_IsRunningInAppCenterTestCloud();
    [RegisterAttribute("getLogLevel", "()I", "")]
public static int get_LogLevel();
    [RegisterAttribute("setLogLevel", "(I)V", "")]
public static void set_LogLevel(int value);
    [RegisterAttribute("isNetworkRequestsAllowed", "()Z", "")]
public static bool get_NetworkRequestsAllowed();
    [RegisterAttribute("setNetworkRequestsAllowed", "(Z)V", "")]
public static void set_NetworkRequestsAllowed(bool value);
    [RegisterAttribute("getSdkVersion", "()Ljava/lang/String;", "")]
public static string get_SdkVersion();
    [RegisterAttribute("configure", "(Landroid/app/Application;)V", "")]
public static void Configure(Application application);
    [RegisterAttribute("configure", "(Landroid/app/Application;Ljava/lang/String;)V", "")]
public static void Configure(Application application, string appSecret);
    [RegisterAttribute("isEnabled", "()Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture IsEnabled();
    private static Delegate GetSetChannel_Lcom_microsoft_appcenter_channel_Channel_Handler();
    private static void n_SetChannel_Lcom_microsoft_appcenter_channel_Channel_(IntPtr jnienv, IntPtr native__this, IntPtr native_channel);
    [RegisterAttribute("setChannel", "(Lcom/microsoft/appcenter/channel/Channel;)V", "GetSetChannel_Lcom_microsoft_appcenter_channel_Channel_Handler")]
public virtual void SetChannel(IChannel channel);
    [RegisterAttribute("setCountryCode", "(Ljava/lang/String;)V", "")]
public static void SetCountryCode(string countryCode);
    [RegisterAttribute("setEnabled", "(Z)Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture SetEnabled(bool enabled);
    [RegisterAttribute("setLogUrl", "(Ljava/lang/String;)V", "")]
public static void SetLogUrl(string logUrl);
    [RegisterAttribute("setLogger", "(Ljava/util/logging/Logger;)V", "")]
public static void SetLogger(Logger logger);
    [RegisterAttribute("setMaxStorageSize", "(J)Lcom/microsoft/appcenter/utils/async/AppCenterFuture;", "")]
public static IAppCenterFuture SetMaxStorageSize(long storageSizeInBytes);
    [RegisterAttribute("setUserId", "(Ljava/lang/String;)V", "")]
public static void SetUserId(string userId);
    [RegisterAttribute("setWrapperSdk", "(Lcom/microsoft/appcenter/ingestion/models/WrapperSdk;)V", "")]
public static void SetWrapperSdk(WrapperSdk wrapperSdk);
    [RegisterAttribute("start", "(Landroid/app/Application;[Ljava/lang/Class;)V", "")]
public static void Start(Application application, Class[] services);
    [RegisterAttribute("start", "(Landroid/app/Application;Ljava/lang/String;[Ljava/lang/Class;)V", "")]
public static void Start(Application application, string appSecret, Class[] services);
    [RegisterAttribute("start", "([Ljava/lang/Class;)V", "")]
public static void Start(Class[] services);
    [RegisterAttribute("startFromLibrary", "(Landroid/content/Context;[Ljava/lang/Class;)V", "")]
public static void StartFromLibrary(Context context, Class[] services);
    [RegisterAttribute("unsetInstance", "()V", "")]
public static void UnsetInstance();
}
[RegisterAttribute("com/microsoft/appcenter/channel/AbstractChannelListener")]
public class Microsoft.AppCenter.Android.Channel.AbstractChannelListener : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_onClear_Ljava_lang_String_;
    private static Delegate cb_onGloballyEnabled_Z;
    private static Delegate cb_onGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_J;
    private static Delegate cb_onGroupRemoved_Ljava_lang_String_;
    private static Delegate cb_onPaused_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_onPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I;
    private static Delegate cb_onPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_;
    private static Delegate cb_onResumed_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_shouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AbstractChannelListener(IntPtr javaReference, JniHandleOwnership transfer);
    private static AbstractChannelListener();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnClear_Ljava_lang_String_Handler();
    private static void n_OnClear_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName);
    [RegisterAttribute("onClear", "(Ljava/lang/String;)V", "GetOnClear_Ljava_lang_String_Handler")]
public virtual void OnClear(string groupName);
    private static Delegate GetOnGloballyEnabled_ZHandler();
    private static void n_OnGloballyEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isEnabled);
    [RegisterAttribute("onGloballyEnabled", "(Z)V", "GetOnGloballyEnabled_ZHandler")]
public virtual void OnGloballyEnabled(bool isEnabled);
    private static Delegate GetOnGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_JHandler();
    private static void n_OnGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_J(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_groupListener, long batchTimeInterval);
    [RegisterAttribute("onGroupAdded", "(Ljava/lang/String;Lcom/microsoft/appcenter/channel/Channel$GroupListener;J)V", "GetOnGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_JHandler")]
public virtual void OnGroupAdded(string groupName, IChannelGroupListener groupListener, long batchTimeInterval);
    private static Delegate GetOnGroupRemoved_Ljava_lang_String_Handler();
    private static void n_OnGroupRemoved_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName);
    [RegisterAttribute("onGroupRemoved", "(Ljava/lang/String;)V", "GetOnGroupRemoved_Ljava_lang_String_Handler")]
public virtual void OnGroupRemoved(string groupName);
    private static Delegate GetOnPaused_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_OnPaused_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_targetToken);
    [RegisterAttribute("onPaused", "(Ljava/lang/String;Ljava/lang/String;)V", "GetOnPaused_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual void OnPaused(string groupName, string targetToken);
    private static Delegate GetOnPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_IHandler();
    private static void n_OnPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_log, IntPtr native_groupName, int flags);
    [RegisterAttribute("onPreparedLog", "(Lcom/microsoft/appcenter/ingestion/models/Log;Ljava/lang/String;I)V", "GetOnPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_IHandler")]
public virtual void OnPreparedLog(ILog log, string groupName, int flags);
    private static Delegate GetOnPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_Handler();
    private static void n_OnPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_log, IntPtr native_groupName);
    [RegisterAttribute("onPreparingLog", "(Lcom/microsoft/appcenter/ingestion/models/Log;Ljava/lang/String;)V", "GetOnPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_Handler")]
public virtual void OnPreparingLog(ILog log, string groupName);
    private static Delegate GetOnResumed_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_OnResumed_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_targetToken);
    [RegisterAttribute("onResumed", "(Ljava/lang/String;Ljava/lang/String;)V", "GetOnResumed_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual void OnResumed(string groupName, string targetToken);
    private static Delegate GetShouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static bool n_ShouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    [RegisterAttribute("shouldFilter", "(Lcom/microsoft/appcenter/ingestion/models/Log;)Z", "GetShouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_Handler")]
public virtual bool ShouldFilter(ILog log);
}
public class Microsoft.AppCenter.Android.Channel.BeforeSendingEventArgs : EventArgs {
    private ILog log;
    public ILog Log { get; }
    public BeforeSendingEventArgs(ILog log);
    public ILog get_Log();
}
public class Microsoft.AppCenter.Android.Channel.ClearEventArgs : EventArgs {
    private string groupName;
    public string GroupName { get; }
    public ClearEventArgs(string groupName);
    public string get_GroupName();
}
public class Microsoft.AppCenter.Android.Channel.FailureEventArgs : EventArgs {
    private ILog log;
    private Exception e;
    public ILog Log { get; }
    public Exception Event { get; }
    public FailureEventArgs(ILog log, Exception e);
    public ILog get_Log();
    public Exception get_Event();
}
public class Microsoft.AppCenter.Android.Channel.GloballyEnabledEventArgs : EventArgs {
    private bool isEnabled;
    public bool IsEnabled { get; }
    public GloballyEnabledEventArgs(bool isEnabled);
    public bool get_IsEnabled();
}
public class Microsoft.AppCenter.Android.Channel.GroupAddedEventArgs : EventArgs {
    private string groupName;
    private IChannelGroupListener groupListener;
    private long batchTimeInterval;
    public string GroupName { get; }
    public IChannelGroupListener GroupListener { get; }
    public long BatchTimeInterval { get; }
    public GroupAddedEventArgs(string groupName, IChannelGroupListener groupListener, long batchTimeInterval);
    public string get_GroupName();
    public IChannelGroupListener get_GroupListener();
    public long get_BatchTimeInterval();
}
public class Microsoft.AppCenter.Android.Channel.GroupRemovedEventArgs : EventArgs {
    private string groupName;
    public string GroupName { get; }
    public GroupRemovedEventArgs(string groupName);
    public string get_GroupName();
}
[RegisterAttribute("com/microsoft/appcenter/channel/Channel", "", "Microsoft.AppCenter.Android.Channel.IChannelInvoker")]
public interface Microsoft.AppCenter.Android.Channel.IChannel {
    public bool Enabled { get; public set; }
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void set_Enabled(bool value);
    [RegisterAttribute("addGroup", "(Ljava/lang/String;IJILcom/microsoft/appcenter/ingestion/Ingestion;Lcom/microsoft/appcenter/channel/Channel$GroupListener;)V", "GetAddGroup_Ljava_lang_String_IJILcom_microsoft_appcenter_ingestion_Ingestion_Lcom_microsoft_appcenter_channel_Channel_GroupListener_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void AddGroup(string groupName, int maxLogsPerBatch, long batchTimeInterval, int maxParallelBatches, IIngestion ingestion, IChannelGroupListener groupListener);
    [RegisterAttribute("addListener", "(Lcom/microsoft/appcenter/channel/Channel$Listener;)V", "GetAddListener_Lcom_microsoft_appcenter_channel_Channel_Listener_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void AddListener(IChannelListener listener);
    [RegisterAttribute("clear", "(Ljava/lang/String;)V", "GetClear_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void Clear(string groupName);
    [RegisterAttribute("enqueue", "(Lcom/microsoft/appcenter/ingestion/models/Log;Ljava/lang/String;I)V", "GetEnqueue_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_IHandler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void Enqueue(ILog log, string groupName, int flags);
    [RegisterAttribute("invalidateDeviceCache", "()V", "GetInvalidateDeviceCacheHandler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void InvalidateDeviceCache();
    [RegisterAttribute("pauseGroup", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPauseGroup_Ljava_lang_String_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void PauseGroup(string groupName, string targetToken);
    [RegisterAttribute("removeGroup", "(Ljava/lang/String;)V", "GetRemoveGroup_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void RemoveGroup(string groupName);
    [RegisterAttribute("removeListener", "(Lcom/microsoft/appcenter/channel/Channel$Listener;)V", "GetRemoveListener_Lcom_microsoft_appcenter_channel_Channel_Listener_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void RemoveListener(IChannelListener listener);
    [RegisterAttribute("resumeGroup", "(Ljava/lang/String;Ljava/lang/String;)V", "GetResumeGroup_Ljava_lang_String_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void ResumeGroup(string groupName, string targetToken);
    [RegisterAttribute("setAppSecret", "(Ljava/lang/String;)V", "GetSetAppSecret_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void SetAppSecret(string appSecret);
    [RegisterAttribute("setLogUrl", "(Ljava/lang/String;)V", "GetSetLogUrl_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void SetLogUrl(string logUrl);
    [RegisterAttribute("setMaxStorageSize", "(J)Z", "GetSetMaxStorageSize_JHandler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual bool SetMaxStorageSize(long maxStorageSizeInBytes);
    [RegisterAttribute("setNetworkRequests", "(Z)V", "GetSetNetworkRequests_ZHandler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void SetNetworkRequests(bool isAllowed);
    [RegisterAttribute("shutdown", "()V", "GetShutdownHandler:Microsoft.AppCenter.Android.Channel.IChannelInvoker, Microsoft.AppCenter")]
public abstract virtual void Shutdown();
}
[RegisterAttribute("com/microsoft/appcenter/channel/Channel$GroupListener", "", "Microsoft.AppCenter.Android.Channel.IChannelGroupListenerInvoker")]
public interface Microsoft.AppCenter.Android.Channel.IChannelGroupListener {
    [RegisterAttribute("onBeforeSending", "(Lcom/microsoft/appcenter/ingestion/models/Log;)V", "GetOnBeforeSending_Lcom_microsoft_appcenter_ingestion_models_Log_Handler:Microsoft.AppCenter.Android.Channel.IChannelGroupListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnBeforeSending(ILog log);
    [RegisterAttribute("onFailure", "(Lcom/microsoft/appcenter/ingestion/models/Log;Ljava/lang/Exception;)V", "GetOnFailure_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_Exception_Handler:Microsoft.AppCenter.Android.Channel.IChannelGroupListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnFailure(ILog log, Exception e);
    [RegisterAttribute("onSuccess", "(Lcom/microsoft/appcenter/ingestion/models/Log;)V", "GetOnSuccess_Lcom_microsoft_appcenter_ingestion_models_Log_Handler:Microsoft.AppCenter.Android.Channel.IChannelGroupListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnSuccess(ILog log);
}
[RegisterAttribute("mono/com/microsoft/appcenter/channel/Channel_GroupListenerImplementor")]
internal class Microsoft.AppCenter.Android.Channel.IChannelGroupListenerImplementor : Object {
    private object sender;
    public EventHandler`1<BeforeSendingEventArgs> OnBeforeSendingHandler;
    public EventHandler`1<FailureEventArgs> OnFailureHandler;
    public EventHandler`1<SuccessEventArgs> OnSuccessHandler;
    public IChannelGroupListenerImplementor(object sender);
    public sealed virtual void OnBeforeSending(ILog log);
    public sealed virtual void OnFailure(ILog log, Exception e);
    public sealed virtual void OnSuccess(ILog log);
    internal static bool __IsEmpty(IChannelGroupListenerImplementor value);
}
[RegisterAttribute("com/microsoft/appcenter/channel/Channel$GroupListener")]
internal class Microsoft.AppCenter.Android.Channel.IChannelGroupListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onBeforeSending_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private IntPtr id_onBeforeSending_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private static Delegate cb_onFailure_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_Exception_;
    private IntPtr id_onFailure_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_Exception_;
    private static Delegate cb_onSuccess_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private IntPtr id_onSuccess_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IChannelGroupListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IChannelGroupListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IChannelGroupListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnBeforeSending_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static void n_OnBeforeSending_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    public sealed virtual void OnBeforeSending(ILog log);
    private static Delegate GetOnFailure_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_Exception_Handler();
    private static void n_OnFailure_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_Exception_(IntPtr jnienv, IntPtr native__this, IntPtr native_log, IntPtr native_e);
    public sealed virtual void OnFailure(ILog log, Exception e);
    private static Delegate GetOnSuccess_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static void n_OnSuccess_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    public sealed virtual void OnSuccess(ILog log);
}
[RegisterAttribute("com/microsoft/appcenter/channel/Channel")]
internal class Microsoft.AppCenter.Android.Channel.IChannelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isEnabled;
    private static Delegate cb_setEnabled_Z;
    private IntPtr id_isEnabled;
    private IntPtr id_setEnabled_Z;
    private static Delegate cb_addGroup_Ljava_lang_String_IJILcom_microsoft_appcenter_ingestion_Ingestion_Lcom_microsoft_appcenter_channel_Channel_GroupListener_;
    private IntPtr id_addGroup_Ljava_lang_String_IJILcom_microsoft_appcenter_ingestion_Ingestion_Lcom_microsoft_appcenter_channel_Channel_GroupListener_;
    private static Delegate cb_addListener_Lcom_microsoft_appcenter_channel_Channel_Listener_;
    private IntPtr id_addListener_Lcom_microsoft_appcenter_channel_Channel_Listener_;
    private static Delegate cb_clear_Ljava_lang_String_;
    private IntPtr id_clear_Ljava_lang_String_;
    private static Delegate cb_enqueue_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I;
    private IntPtr id_enqueue_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I;
    private static Delegate cb_invalidateDeviceCache;
    private IntPtr id_invalidateDeviceCache;
    private static Delegate cb_pauseGroup_Ljava_lang_String_Ljava_lang_String_;
    private IntPtr id_pauseGroup_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_removeGroup_Ljava_lang_String_;
    private IntPtr id_removeGroup_Ljava_lang_String_;
    private static Delegate cb_removeListener_Lcom_microsoft_appcenter_channel_Channel_Listener_;
    private IntPtr id_removeListener_Lcom_microsoft_appcenter_channel_Channel_Listener_;
    private static Delegate cb_resumeGroup_Ljava_lang_String_Ljava_lang_String_;
    private IntPtr id_resumeGroup_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_setAppSecret_Ljava_lang_String_;
    private IntPtr id_setAppSecret_Ljava_lang_String_;
    private static Delegate cb_setLogUrl_Ljava_lang_String_;
    private IntPtr id_setLogUrl_Ljava_lang_String_;
    private static Delegate cb_setMaxStorageSize_J;
    private IntPtr id_setMaxStorageSize_J;
    private static Delegate cb_setNetworkRequests_Z;
    private IntPtr id_setNetworkRequests_Z;
    private static Delegate cb_shutdown;
    private IntPtr id_shutdown;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool Enabled { get; public set; }
    public IChannelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IChannelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IChannel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetEnabled_ZHandler();
    private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual bool get_Enabled();
    public sealed virtual void set_Enabled(bool value);
    private static Delegate GetAddGroup_Ljava_lang_String_IJILcom_microsoft_appcenter_ingestion_Ingestion_Lcom_microsoft_appcenter_channel_Channel_GroupListener_Handler();
    private static void n_AddGroup_Ljava_lang_String_IJILcom_microsoft_appcenter_ingestion_Ingestion_Lcom_microsoft_appcenter_channel_Channel_GroupListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, int maxLogsPerBatch, long batchTimeInterval, int maxParallelBatches, IntPtr native_ingestion, IntPtr native_groupListener);
    public sealed virtual void AddGroup(string groupName, int maxLogsPerBatch, long batchTimeInterval, int maxParallelBatches, IIngestion ingestion, IChannelGroupListener groupListener);
    private static Delegate GetAddListener_Lcom_microsoft_appcenter_channel_Channel_Listener_Handler();
    private static void n_AddListener_Lcom_microsoft_appcenter_channel_Channel_Listener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void AddListener(IChannelListener listener);
    private static Delegate GetClear_Ljava_lang_String_Handler();
    private static void n_Clear_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName);
    public sealed virtual void Clear(string groupName);
    private static Delegate GetEnqueue_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_IHandler();
    private static void n_Enqueue_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_log, IntPtr native_groupName, int flags);
    public sealed virtual void Enqueue(ILog log, string groupName, int flags);
    private static Delegate GetInvalidateDeviceCacheHandler();
    private static void n_InvalidateDeviceCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void InvalidateDeviceCache();
    private static Delegate GetPauseGroup_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_PauseGroup_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_targetToken);
    public sealed virtual void PauseGroup(string groupName, string targetToken);
    private static Delegate GetRemoveGroup_Ljava_lang_String_Handler();
    private static void n_RemoveGroup_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName);
    public sealed virtual void RemoveGroup(string groupName);
    private static Delegate GetRemoveListener_Lcom_microsoft_appcenter_channel_Channel_Listener_Handler();
    private static void n_RemoveListener_Lcom_microsoft_appcenter_channel_Channel_Listener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void RemoveListener(IChannelListener listener);
    private static Delegate GetResumeGroup_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_ResumeGroup_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_targetToken);
    public sealed virtual void ResumeGroup(string groupName, string targetToken);
    private static Delegate GetSetAppSecret_Ljava_lang_String_Handler();
    private static void n_SetAppSecret_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_appSecret);
    public sealed virtual void SetAppSecret(string appSecret);
    private static Delegate GetSetLogUrl_Ljava_lang_String_Handler();
    private static void n_SetLogUrl_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_logUrl);
    public sealed virtual void SetLogUrl(string logUrl);
    private static Delegate GetSetMaxStorageSize_JHandler();
    private static bool n_SetMaxStorageSize_J(IntPtr jnienv, IntPtr native__this, long maxStorageSizeInBytes);
    public sealed virtual bool SetMaxStorageSize(long maxStorageSizeInBytes);
    private static Delegate GetSetNetworkRequests_ZHandler();
    private static void n_SetNetworkRequests_Z(IntPtr jnienv, IntPtr native__this, bool isAllowed);
    public sealed virtual void SetNetworkRequests(bool isAllowed);
    private static Delegate GetShutdownHandler();
    private static void n_Shutdown(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Shutdown();
}
[RegisterAttribute("com/microsoft/appcenter/channel/Channel$Listener", "", "Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker")]
public interface Microsoft.AppCenter.Android.Channel.IChannelListener {
    [RegisterAttribute("onClear", "(Ljava/lang/String;)V", "GetOnClear_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnClear(string groupName);
    [RegisterAttribute("onGloballyEnabled", "(Z)V", "GetOnGloballyEnabled_ZHandler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnGloballyEnabled(bool isEnabled);
    [RegisterAttribute("onGroupAdded", "(Ljava/lang/String;Lcom/microsoft/appcenter/channel/Channel$GroupListener;J)V", "GetOnGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_JHandler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnGroupAdded(string groupName, IChannelGroupListener groupListener, long batchTimeInterval);
    [RegisterAttribute("onGroupRemoved", "(Ljava/lang/String;)V", "GetOnGroupRemoved_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnGroupRemoved(string groupName);
    [RegisterAttribute("onPaused", "(Ljava/lang/String;Ljava/lang/String;)V", "GetOnPaused_Ljava_lang_String_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnPaused(string groupName, string targetToken);
    [RegisterAttribute("onPreparedLog", "(Lcom/microsoft/appcenter/ingestion/models/Log;Ljava/lang/String;I)V", "GetOnPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_IHandler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnPreparedLog(ILog log, string groupName, int flags);
    [RegisterAttribute("onPreparingLog", "(Lcom/microsoft/appcenter/ingestion/models/Log;Ljava/lang/String;)V", "GetOnPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnPreparingLog(ILog log, string groupName);
    [RegisterAttribute("onResumed", "(Ljava/lang/String;Ljava/lang/String;)V", "GetOnResumed_Ljava_lang_String_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual void OnResumed(string groupName, string targetToken);
    [RegisterAttribute("shouldFilter", "(Lcom/microsoft/appcenter/ingestion/models/Log;)Z", "GetShouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_Handler:Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker, Microsoft.AppCenter")]
public abstract virtual bool ShouldFilter(ILog log);
}
[RegisterAttribute("mono/com/microsoft/appcenter/channel/Channel_ListenerImplementor")]
internal class Microsoft.AppCenter.Android.Channel.IChannelListenerImplementor : Object {
    private object sender;
    public EventHandler`1<ClearEventArgs> OnClearHandler;
    public EventHandler`1<GloballyEnabledEventArgs> OnGloballyEnabledHandler;
    public EventHandler`1<GroupAddedEventArgs> OnGroupAddedHandler;
    public EventHandler`1<GroupRemovedEventArgs> OnGroupRemovedHandler;
    public EventHandler`1<PausedEventArgs> OnPausedHandler;
    public EventHandler`1<PreparedLogEventArgs> OnPreparedLogHandler;
    public EventHandler`1<PreparingLogEventArgs> OnPreparingLogHandler;
    public EventHandler`1<ResumedEventArgs> OnResumedHandler;
    public EventHandler`1<ShouldFilterEventArgs> ShouldFilterHandler;
    public IChannelListenerImplementor(object sender);
    public sealed virtual void OnClear(string groupName);
    public sealed virtual void OnGloballyEnabled(bool isEnabled);
    public sealed virtual void OnGroupAdded(string groupName, IChannelGroupListener groupListener, long batchTimeInterval);
    public sealed virtual void OnGroupRemoved(string groupName);
    public sealed virtual void OnPaused(string groupName, string targetToken);
    public sealed virtual void OnPreparedLog(ILog log, string groupName, int flags);
    public sealed virtual void OnPreparingLog(ILog log, string groupName);
    public sealed virtual void OnResumed(string groupName, string targetToken);
    public sealed virtual bool ShouldFilter(ILog log);
    internal static bool __IsEmpty(IChannelListenerImplementor value);
}
[RegisterAttribute("com/microsoft/appcenter/channel/Channel$Listener")]
internal class Microsoft.AppCenter.Android.Channel.IChannelListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onClear_Ljava_lang_String_;
    private IntPtr id_onClear_Ljava_lang_String_;
    private static Delegate cb_onGloballyEnabled_Z;
    private IntPtr id_onGloballyEnabled_Z;
    private static Delegate cb_onGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_J;
    private IntPtr id_onGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_J;
    private static Delegate cb_onGroupRemoved_Ljava_lang_String_;
    private IntPtr id_onGroupRemoved_Ljava_lang_String_;
    private static Delegate cb_onPaused_Ljava_lang_String_Ljava_lang_String_;
    private IntPtr id_onPaused_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_onPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I;
    private IntPtr id_onPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I;
    private static Delegate cb_onPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_;
    private IntPtr id_onPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_;
    private static Delegate cb_onResumed_Ljava_lang_String_Ljava_lang_String_;
    private IntPtr id_onResumed_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_shouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private IntPtr id_shouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IChannelListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IChannelListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IChannelListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnClear_Ljava_lang_String_Handler();
    private static void n_OnClear_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName);
    public sealed virtual void OnClear(string groupName);
    private static Delegate GetOnGloballyEnabled_ZHandler();
    private static void n_OnGloballyEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isEnabled);
    public sealed virtual void OnGloballyEnabled(bool isEnabled);
    private static Delegate GetOnGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_JHandler();
    private static void n_OnGroupAdded_Ljava_lang_String_Lcom_microsoft_appcenter_channel_Channel_GroupListener_J(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_groupListener, long batchTimeInterval);
    public sealed virtual void OnGroupAdded(string groupName, IChannelGroupListener groupListener, long batchTimeInterval);
    private static Delegate GetOnGroupRemoved_Ljava_lang_String_Handler();
    private static void n_OnGroupRemoved_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName);
    public sealed virtual void OnGroupRemoved(string groupName);
    private static Delegate GetOnPaused_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_OnPaused_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_targetToken);
    public sealed virtual void OnPaused(string groupName, string targetToken);
    private static Delegate GetOnPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_IHandler();
    private static void n_OnPreparedLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_log, IntPtr native_groupName, int flags);
    public sealed virtual void OnPreparedLog(ILog log, string groupName, int flags);
    private static Delegate GetOnPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_Handler();
    private static void n_OnPreparingLog_Lcom_microsoft_appcenter_ingestion_models_Log_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_log, IntPtr native_groupName);
    public sealed virtual void OnPreparingLog(ILog log, string groupName);
    private static Delegate GetOnResumed_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_OnResumed_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_groupName, IntPtr native_targetToken);
    public sealed virtual void OnResumed(string groupName, string targetToken);
    private static Delegate GetShouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static bool n_ShouldFilter_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    public sealed virtual bool ShouldFilter(ILog log);
}
public class Microsoft.AppCenter.Android.Channel.PausedEventArgs : EventArgs {
    private string groupName;
    private string targetToken;
    public string GroupName { get; }
    public string TargetToken { get; }
    public PausedEventArgs(string groupName, string targetToken);
    public string get_GroupName();
    public string get_TargetToken();
}
public class Microsoft.AppCenter.Android.Channel.PreparedLogEventArgs : EventArgs {
    private ILog log;
    private string groupName;
    private int flags;
    public ILog Log { get; }
    public string GroupName { get; }
    public int Flags { get; }
    public PreparedLogEventArgs(ILog log, string groupName, int flags);
    public ILog get_Log();
    public string get_GroupName();
    public int get_Flags();
}
public class Microsoft.AppCenter.Android.Channel.PreparingLogEventArgs : EventArgs {
    private ILog log;
    private string groupName;
    public ILog Log { get; }
    public string GroupName { get; }
    public PreparingLogEventArgs(ILog log, string groupName);
    public ILog get_Log();
    public string get_GroupName();
}
public class Microsoft.AppCenter.Android.Channel.ResumedEventArgs : EventArgs {
    private string groupName;
    private string targetToken;
    public string GroupName { get; }
    public string TargetToken { get; }
    public ResumedEventArgs(string groupName, string targetToken);
    public string get_GroupName();
    public string get_TargetToken();
}
public class Microsoft.AppCenter.Android.Channel.ShouldFilterEventArgs : EventArgs {
    private bool handled;
    private ILog log;
    public bool Handled { get; public set; }
    public ILog Log { get; }
    public ShouldFilterEventArgs(bool handled, ILog log);
    public bool get_Handled();
    public void set_Handled(bool value);
    public ILog get_Log();
}
public class Microsoft.AppCenter.Android.Channel.SuccessEventArgs : EventArgs {
    private ILog log;
    public ILog Log { get; }
    public SuccessEventArgs(ILog log);
    public ILog get_Log();
}
[RegisterAttribute("com/microsoft/appcenter/DependencyConfiguration")]
public class Microsoft.AppCenter.Android.DependencyConfiguration : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static IHttpClient HttpClient { get; public set; }
    internal DependencyConfiguration(IntPtr javaReference, JniHandleOwnership transfer);
    private static DependencyConfiguration();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getHttpClient", "()Lcom/microsoft/appcenter/http/HttpClient;", "")]
public static IHttpClient get_HttpClient();
    [RegisterAttribute("setHttpClient", "(Lcom/microsoft/appcenter/http/HttpClient;)V", "")]
public static void set_HttpClient(IHttpClient value);
}
[RegisterAttribute("com/microsoft/appcenter/http/HttpException")]
public class Microsoft.AppCenter.Android.Http.HttpException : IOException {
    private static JniPeerMembers _members;
    private static Delegate cb_getHttpResponse;
    private static Delegate cb_equals_Ljava_lang_Object_;
    private static Delegate cb_hashCode;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public HttpResponse HttpResponse { get; }
    protected HttpException(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/microsoft/appcenter/http/HttpResponse;)V", "")]
public HttpException(HttpResponse httpResponse);
    private static HttpException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetHttpResponseHandler();
    private static IntPtr n_GetHttpResponse(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getHttpResponse", "()Lcom/microsoft/appcenter/http/HttpResponse;", "GetGetHttpResponseHandler")]
public virtual HttpResponse get_HttpResponse();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_o);
    [RegisterAttribute("equals", "(Ljava/lang/Object;)Z", "GetEquals_Ljava_lang_Object_Handler")]
public virtual bool Equals(Object o);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hashCode", "()I", "GetGetHashCodeHandler")]
public virtual int GetHashCode();
}
[RegisterAttribute("com/microsoft/appcenter/http/HttpResponse")]
public class Microsoft.AppCenter.Android.Http.HttpResponse : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getHeaders;
    private static Delegate cb_getPayload;
    private static Delegate cb_getStatusCode;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDictionary`2<string, string> Headers { get; }
    public string Payload { get; }
    public int StatusCode { get; }
    protected HttpResponse(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public HttpResponse(int status);
    [RegisterAttribute(".ctor", "(ILjava/lang/String;)V", "")]
public HttpResponse(int status, string payload);
    [RegisterAttribute(".ctor", "(ILjava/lang/String;Ljava/util/Map;)V", "")]
public HttpResponse(int status, string payload, IDictionary`2<string, string> headers);
    private static HttpResponse();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetHeadersHandler();
    private static IntPtr n_GetHeaders(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getHeaders", "()Ljava/util/Map;", "GetGetHeadersHandler")]
public virtual IDictionary`2<string, string> get_Headers();
    private static Delegate GetGetPayloadHandler();
    private static IntPtr n_GetPayload(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPayload", "()Ljava/lang/String;", "GetGetPayloadHandler")]
public virtual string get_Payload();
    private static Delegate GetGetStatusCodeHandler();
    private static int n_GetStatusCode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStatusCode", "()I", "GetGetStatusCodeHandler")]
public virtual int get_StatusCode();
}
[RegisterAttribute("com/microsoft/appcenter/http/HttpClient", "", "Microsoft.AppCenter.Android.Http.IHttpClientInvoker")]
public interface Microsoft.AppCenter.Android.Http.IHttpClient {
    [RegisterAttribute("callAsync", "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lcom/microsoft/appcenter/http/HttpClient$CallTemplate;Lcom/microsoft/appcenter/http/ServiceCallback;)Lcom/microsoft/appcenter/http/ServiceCall;", "GetCallAsync_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_Handler:Microsoft.AppCenter.Android.Http.IHttpClientInvoker, Microsoft.AppCenter")]
public abstract virtual IServiceCall CallAsync(string url, string method, IDictionary`2<string, string> headers, IHttpClientCallTemplate callTemplate, IServiceCallback serviceCallback);
    [RegisterAttribute("reopen", "()V", "GetReopenHandler:Microsoft.AppCenter.Android.Http.IHttpClientInvoker, Microsoft.AppCenter")]
public abstract virtual void Reopen();
}
[RegisterAttribute("com/microsoft/appcenter/http/HttpClient$CallTemplate", "", "Microsoft.AppCenter.Android.Http.IHttpClientCallTemplateInvoker")]
public interface Microsoft.AppCenter.Android.Http.IHttpClientCallTemplate {
    [RegisterAttribute("buildRequestBody", "()Ljava/lang/String;", "GetBuildRequestBodyHandler:Microsoft.AppCenter.Android.Http.IHttpClientCallTemplateInvoker, Microsoft.AppCenter")]
public abstract virtual string BuildRequestBody();
    [RegisterAttribute("onBeforeCalling", "(Ljava/net/URL;Ljava/util/Map;)V", "GetOnBeforeCalling_Ljava_net_URL_Ljava_util_Map_Handler:Microsoft.AppCenter.Android.Http.IHttpClientCallTemplateInvoker, Microsoft.AppCenter")]
public abstract virtual void OnBeforeCalling(URL url, IDictionary`2<string, string> headers);
}
[RegisterAttribute("com/microsoft/appcenter/http/HttpClient$CallTemplate")]
internal class Microsoft.AppCenter.Android.Http.IHttpClientCallTemplateInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_buildRequestBody;
    private IntPtr id_buildRequestBody;
    private static Delegate cb_onBeforeCalling_Ljava_net_URL_Ljava_util_Map_;
    private IntPtr id_onBeforeCalling_Ljava_net_URL_Ljava_util_Map_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IHttpClientCallTemplateInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IHttpClientCallTemplateInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IHttpClientCallTemplate GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuildRequestBodyHandler();
    private static IntPtr n_BuildRequestBody(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string BuildRequestBody();
    private static Delegate GetOnBeforeCalling_Ljava_net_URL_Ljava_util_Map_Handler();
    private static void n_OnBeforeCalling_Ljava_net_URL_Ljava_util_Map_(IntPtr jnienv, IntPtr native__this, IntPtr native_url, IntPtr native_headers);
    public sealed virtual void OnBeforeCalling(URL url, IDictionary`2<string, string> headers);
}
[RegisterAttribute("com/microsoft/appcenter/http/HttpClient")]
internal class Microsoft.AppCenter.Android.Http.IHttpClientInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_callAsync_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_;
    private IntPtr id_callAsync_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_;
    private static Delegate cb_reopen;
    private IntPtr id_reopen;
    private static Delegate cb_close;
    private IntPtr id_close;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IHttpClientInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IHttpClientInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IHttpClient GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCallAsync_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_Handler();
    private static IntPtr n_CallAsync_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_url, IntPtr native_method, IntPtr native_headers, IntPtr native_callTemplate, IntPtr native_serviceCallback);
    public sealed virtual IServiceCall CallAsync(string url, string method, IDictionary`2<string, string> headers, IHttpClientCallTemplate callTemplate, IServiceCallback serviceCallback);
    private static Delegate GetReopenHandler();
    private static void n_Reopen(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Reopen();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
}
[RegisterAttribute("com/microsoft/appcenter/http/ServiceCall", "", "Microsoft.AppCenter.Android.Http.IServiceCallInvoker")]
public interface Microsoft.AppCenter.Android.Http.IServiceCall {
    [RegisterAttribute("cancel", "()V", "GetCancelHandler:Microsoft.AppCenter.Android.Http.IServiceCallInvoker, Microsoft.AppCenter")]
public abstract virtual void Cancel();
}
[RegisterAttribute("com/microsoft/appcenter/http/ServiceCallback", "", "Microsoft.AppCenter.Android.Http.IServiceCallbackInvoker")]
public interface Microsoft.AppCenter.Android.Http.IServiceCallback {
    [RegisterAttribute("onCallFailed", "(Ljava/lang/Exception;)V", "GetOnCallFailed_Ljava_lang_Exception_Handler:Microsoft.AppCenter.Android.Http.IServiceCallbackInvoker, Microsoft.AppCenter")]
public abstract virtual void OnCallFailed(Exception e);
    [RegisterAttribute("onCallSucceeded", "(Lcom/microsoft/appcenter/http/HttpResponse;)V", "GetOnCallSucceeded_Lcom_microsoft_appcenter_http_HttpResponse_Handler:Microsoft.AppCenter.Android.Http.IServiceCallbackInvoker, Microsoft.AppCenter")]
public abstract virtual void OnCallSucceeded(HttpResponse httpResponse);
}
[RegisterAttribute("com/microsoft/appcenter/http/ServiceCallback")]
internal class Microsoft.AppCenter.Android.Http.IServiceCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onCallFailed_Ljava_lang_Exception_;
    private IntPtr id_onCallFailed_Ljava_lang_Exception_;
    private static Delegate cb_onCallSucceeded_Lcom_microsoft_appcenter_http_HttpResponse_;
    private IntPtr id_onCallSucceeded_Lcom_microsoft_appcenter_http_HttpResponse_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IServiceCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IServiceCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IServiceCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCallFailed_Ljava_lang_Exception_Handler();
    private static void n_OnCallFailed_Ljava_lang_Exception_(IntPtr jnienv, IntPtr native__this, IntPtr native_e);
    public sealed virtual void OnCallFailed(Exception e);
    private static Delegate GetOnCallSucceeded_Lcom_microsoft_appcenter_http_HttpResponse_Handler();
    private static void n_OnCallSucceeded_Lcom_microsoft_appcenter_http_HttpResponse_(IntPtr jnienv, IntPtr native__this, IntPtr native_httpResponse);
    public sealed virtual void OnCallSucceeded(HttpResponse httpResponse);
}
[RegisterAttribute("com/microsoft/appcenter/http/ServiceCall")]
internal class Microsoft.AppCenter.Android.Http.IServiceCallInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_cancel;
    private IntPtr id_cancel;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IServiceCallInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IServiceCallInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IServiceCall GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Cancel();
}
[RegisterAttribute("com/microsoft/appcenter/AppCenterHandler", "", "Microsoft.AppCenter.Android.IAppCenterHandlerInvoker")]
public interface Microsoft.AppCenter.Android.IAppCenterHandler {
    [RegisterAttribute("post", "(Ljava/lang/Runnable;Ljava/lang/Runnable;)V", "GetPost_Ljava_lang_Runnable_Ljava_lang_Runnable_Handler:Microsoft.AppCenter.Android.IAppCenterHandlerInvoker, Microsoft.AppCenter")]
public abstract virtual void Post(IRunnable runnable, IRunnable disabledRunnable);
}
[RegisterAttribute("com/microsoft/appcenter/AppCenterHandler")]
internal class Microsoft.AppCenter.Android.IAppCenterHandlerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_post_Ljava_lang_Runnable_Ljava_lang_Runnable_;
    private IntPtr id_post_Ljava_lang_Runnable_Ljava_lang_Runnable_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IAppCenterHandlerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAppCenterHandlerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IAppCenterHandler GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetPost_Ljava_lang_Runnable_Ljava_lang_Runnable_Handler();
    private static void n_Post_Ljava_lang_Runnable_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_runnable, IntPtr native_disabledRunnable);
    public sealed virtual void Post(IRunnable runnable, IRunnable disabledRunnable);
}
[RegisterAttribute("com/microsoft/appcenter/AppCenterService", "", "Microsoft.AppCenter.Android.IAppCenterServiceInvoker")]
public interface Microsoft.AppCenter.Android.IAppCenterService {
    public bool InstanceEnabled { get; public set; }
    public bool IsAppSecretRequired { get; }
    public IDictionary`2<string, ILogFactory> LogFactories { get; }
    public string ServiceName { get; }
    [RegisterAttribute("isInstanceEnabled", "()Z", "GetIsInstanceEnabledHandler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual bool get_InstanceEnabled();
    [RegisterAttribute("setInstanceEnabled", "(Z)V", "GetSetInstanceEnabled_ZHandler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual void set_InstanceEnabled(bool value);
    [RegisterAttribute("isAppSecretRequired", "()Z", "GetIsAppSecretRequiredHandler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual bool get_IsAppSecretRequired();
    [RegisterAttribute("getLogFactories", "()Ljava/util/Map;", "GetGetLogFactoriesHandler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual IDictionary`2<string, ILogFactory> get_LogFactories();
    [RegisterAttribute("getServiceName", "()Ljava/lang/String;", "GetGetServiceNameHandler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual string get_ServiceName();
    [RegisterAttribute("onConfigurationUpdated", "(Ljava/lang/String;Ljava/lang/String;)V", "GetOnConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual void OnConfigurationUpdated(string appSecret, string transmissionTargetToken);
    [RegisterAttribute("onStarted", "(Landroid/content/Context;Lcom/microsoft/appcenter/channel/Channel;Ljava/lang/String;Ljava/lang/String;Z)V", "GetOnStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_ZHandler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual void OnStarted(Context context, IChannel channel, string appSecret, string transmissionTargetToken, bool startedFromApp);
    [RegisterAttribute("onStarting", "(Lcom/microsoft/appcenter/AppCenterHandler;)V", "GetOnStarting_Lcom_microsoft_appcenter_AppCenterHandler_Handler:Microsoft.AppCenter.Android.IAppCenterServiceInvoker, Microsoft.AppCenter")]
public abstract virtual void OnStarting(IAppCenterHandler handler);
}
[RegisterAttribute("com/microsoft/appcenter/AppCenterService")]
internal class Microsoft.AppCenter.Android.IAppCenterServiceInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isInstanceEnabled;
    private static Delegate cb_setInstanceEnabled_Z;
    private IntPtr id_isInstanceEnabled;
    private IntPtr id_setInstanceEnabled_Z;
    private static Delegate cb_isAppSecretRequired;
    private IntPtr id_isAppSecretRequired;
    private static Delegate cb_getLogFactories;
    private IntPtr id_getLogFactories;
    private static Delegate cb_getServiceName;
    private IntPtr id_getServiceName;
    private static Delegate cb_onConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_;
    private IntPtr id_onConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_onStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_Z;
    private IntPtr id_onStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_Z;
    private static Delegate cb_onStarting_Lcom_microsoft_appcenter_AppCenterHandler_;
    private IntPtr id_onStarting_Lcom_microsoft_appcenter_AppCenterHandler_;
    private static Delegate cb_onActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_;
    private IntPtr id_onActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_;
    private static Delegate cb_onActivityDestroyed_Landroid_app_Activity_;
    private IntPtr id_onActivityDestroyed_Landroid_app_Activity_;
    private static Delegate cb_onActivityPaused_Landroid_app_Activity_;
    private IntPtr id_onActivityPaused_Landroid_app_Activity_;
    private static Delegate cb_onActivityResumed_Landroid_app_Activity_;
    private IntPtr id_onActivityResumed_Landroid_app_Activity_;
    private static Delegate cb_onActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_;
    private IntPtr id_onActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_;
    private static Delegate cb_onActivityStarted_Landroid_app_Activity_;
    private IntPtr id_onActivityStarted_Landroid_app_Activity_;
    private static Delegate cb_onActivityStopped_Landroid_app_Activity_;
    private IntPtr id_onActivityStopped_Landroid_app_Activity_;
    private static Delegate cb_onApplicationEnterBackground;
    private IntPtr id_onApplicationEnterBackground;
    private static Delegate cb_onApplicationEnterForeground;
    private IntPtr id_onApplicationEnterForeground;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool InstanceEnabled { get; public set; }
    public bool IsAppSecretRequired { get; }
    public IDictionary`2<string, ILogFactory> LogFactories { get; }
    public string ServiceName { get; }
    public IAppCenterServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAppCenterServiceInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IAppCenterService GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsInstanceEnabledHandler();
    private static bool n_IsInstanceEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetInstanceEnabled_ZHandler();
    private static void n_SetInstanceEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual bool get_InstanceEnabled();
    public sealed virtual void set_InstanceEnabled(bool value);
    private static Delegate GetIsAppSecretRequiredHandler();
    private static bool n_IsAppSecretRequired(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsAppSecretRequired();
    private static Delegate GetGetLogFactoriesHandler();
    private static IntPtr n_GetLogFactories(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IDictionary`2<string, ILogFactory> get_LogFactories();
    private static Delegate GetGetServiceNameHandler();
    private static IntPtr n_GetServiceName(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_ServiceName();
    private static Delegate GetOnConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_OnConfigurationUpdated_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_appSecret, IntPtr native_transmissionTargetToken);
    public sealed virtual void OnConfigurationUpdated(string appSecret, string transmissionTargetToken);
    private static Delegate GetOnStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_ZHandler();
    private static void n_OnStarted_Landroid_content_Context_Lcom_microsoft_appcenter_channel_Channel_Ljava_lang_String_Ljava_lang_String_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_channel, IntPtr native_appSecret, IntPtr native_transmissionTargetToken, bool startedFromApp);
    public sealed virtual void OnStarted(Context context, IChannel channel, string appSecret, string transmissionTargetToken, bool startedFromApp);
    private static Delegate GetOnStarting_Lcom_microsoft_appcenter_AppCenterHandler_Handler();
    private static void n_OnStarting_Lcom_microsoft_appcenter_AppCenterHandler_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual void OnStarting(IAppCenterHandler handler);
    private static Delegate GetOnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_Handler();
    private static void n_OnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_savedInstanceState);
    public sealed virtual void OnActivityCreated(Activity activity, Bundle savedInstanceState);
    private static Delegate GetOnActivityDestroyed_Landroid_app_Activity_Handler();
    private static void n_OnActivityDestroyed_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual void OnActivityDestroyed(Activity activity);
    private static Delegate GetOnActivityPaused_Landroid_app_Activity_Handler();
    private static void n_OnActivityPaused_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual void OnActivityPaused(Activity activity);
    private static Delegate GetOnActivityResumed_Landroid_app_Activity_Handler();
    private static void n_OnActivityResumed_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual void OnActivityResumed(Activity activity);
    private static Delegate GetOnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler();
    private static void n_OnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_outState);
    public sealed virtual void OnActivitySaveInstanceState(Activity activity, Bundle outState);
    private static Delegate GetOnActivityStarted_Landroid_app_Activity_Handler();
    private static void n_OnActivityStarted_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual void OnActivityStarted(Activity activity);
    private static Delegate GetOnActivityStopped_Landroid_app_Activity_Handler();
    private static void n_OnActivityStopped_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual void OnActivityStopped(Activity activity);
    private static Delegate GetOnApplicationEnterBackgroundHandler();
    private static void n_OnApplicationEnterBackground(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnApplicationEnterBackground();
    private static Delegate GetOnApplicationEnterForegroundHandler();
    private static void n_OnApplicationEnterForeground(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnApplicationEnterForeground();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/AbstractAppCenterIngestion")]
public abstract class Microsoft.AppCenter.Android.Ingestion.AbstractAppCenterIngestion : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isEnabled;
    private static Delegate cb_getLogUrl;
    private static Delegate cb_close;
    private static Delegate cb_getServiceCall_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_;
    private static Delegate cb_reopen;
    private static Delegate cb_sendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_;
    private static Delegate cb_setHttpClient_Lcom_microsoft_appcenter_http_HttpClient_;
    private static Delegate cb_setLogUrl_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsEnabled { get; }
    public string LogUrl { get; }
    protected AbstractAppCenterIngestion(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/microsoft/appcenter/http/HttpClient;Ljava/lang/String;)V", "")]
public AbstractAppCenterIngestion(IHttpClient httpClient, string logUrl);
    private static AbstractAppCenterIngestion();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_IsEnabled();
    private static Delegate GetGetLogUrlHandler();
    private static IntPtr n_GetLogUrl(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLogUrl", "()Ljava/lang/String;", "GetGetLogUrlHandler")]
public virtual string get_LogUrl();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
    private static Delegate GetGetServiceCall_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_Handler();
    private static IntPtr n_GetServiceCall_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_url, IntPtr native_method, IntPtr native_headers, IntPtr native_callTemplate, IntPtr native_serviceCallback);
    [RegisterAttribute("getServiceCall", "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lcom/microsoft/appcenter/http/HttpClient$CallTemplate;Lcom/microsoft/appcenter/http/ServiceCallback;)Lcom/microsoft/appcenter/http/ServiceCall;", "GetGetServiceCall_Ljava_lang_String_Ljava_lang_String_Ljava_util_Map_Lcom_microsoft_appcenter_http_HttpClient_CallTemplate_Lcom_microsoft_appcenter_http_ServiceCallback_Handler")]
public virtual IServiceCall GetServiceCall(string url, string method, IDictionary`2<string, string> headers, IHttpClientCallTemplate callTemplate, IServiceCallback serviceCallback);
    private static Delegate GetReopenHandler();
    private static void n_Reopen(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reopen", "()V", "GetReopenHandler")]
public virtual void Reopen();
    private static Delegate GetSendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_Handler();
    private static IntPtr n_SendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_appSecret, IntPtr native_installId, IntPtr native_logContainer, IntPtr native_serviceCallback);
    [RegisterAttribute("sendAsync", "(Ljava/lang/String;Ljava/util/UUID;Lcom/microsoft/appcenter/ingestion/models/LogContainer;Lcom/microsoft/appcenter/http/ServiceCallback;)Lcom/microsoft/appcenter/http/ServiceCall;", "GetSendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_Handler")]
public virtual IServiceCall SendAsync(string appSecret, UUID installId, LogContainer logContainer, IServiceCallback serviceCallback);
    private static Delegate GetSetHttpClient_Lcom_microsoft_appcenter_http_HttpClient_Handler();
    private static void n_SetHttpClient_Lcom_microsoft_appcenter_http_HttpClient_(IntPtr jnienv, IntPtr native__this, IntPtr native_httpClient);
    [RegisterAttribute("setHttpClient", "(Lcom/microsoft/appcenter/http/HttpClient;)V", "GetSetHttpClient_Lcom_microsoft_appcenter_http_HttpClient_Handler")]
public virtual void SetHttpClient(IHttpClient httpClient);
    private static Delegate GetSetLogUrl_Ljava_lang_String_Handler();
    private static void n_SetLogUrl_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_logUrl);
    [RegisterAttribute("setLogUrl", "(Ljava/lang/String;)V", "GetSetLogUrl_Ljava_lang_String_Handler")]
public virtual void SetLogUrl(string logUrl);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/AbstractAppCenterIngestion")]
internal class Microsoft.AppCenter.Android.Ingestion.AbstractAppCenterIngestionInvoker : AbstractAppCenterIngestion {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AbstractAppCenterIngestionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AbstractAppCenterIngestionInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/Ingestion", "", "Microsoft.AppCenter.Android.Ingestion.IIngestionInvoker")]
public interface Microsoft.AppCenter.Android.Ingestion.IIngestion {
    public bool IsEnabled { get; }
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler:Microsoft.AppCenter.Android.Ingestion.IIngestionInvoker, Microsoft.AppCenter")]
public abstract virtual bool get_IsEnabled();
    [RegisterAttribute("reopen", "()V", "GetReopenHandler:Microsoft.AppCenter.Android.Ingestion.IIngestionInvoker, Microsoft.AppCenter")]
public abstract virtual void Reopen();
    [RegisterAttribute("sendAsync", "(Ljava/lang/String;Ljava/util/UUID;Lcom/microsoft/appcenter/ingestion/models/LogContainer;Lcom/microsoft/appcenter/http/ServiceCallback;)Lcom/microsoft/appcenter/http/ServiceCall;", "GetSendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_Handler:Microsoft.AppCenter.Android.Ingestion.IIngestionInvoker, Microsoft.AppCenter")]
public abstract virtual IServiceCall SendAsync(string appSecret, UUID installId, LogContainer logContainer, IServiceCallback serviceCallback);
    [RegisterAttribute("setLogUrl", "(Ljava/lang/String;)V", "GetSetLogUrl_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Ingestion.IIngestionInvoker, Microsoft.AppCenter")]
public abstract virtual void SetLogUrl(string logUrl);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/Ingestion")]
internal class Microsoft.AppCenter.Android.Ingestion.IIngestionInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isEnabled;
    private IntPtr id_isEnabled;
    private static Delegate cb_reopen;
    private IntPtr id_reopen;
    private static Delegate cb_sendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_;
    private IntPtr id_sendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_;
    private static Delegate cb_setLogUrl_Ljava_lang_String_;
    private IntPtr id_setLogUrl_Ljava_lang_String_;
    private static Delegate cb_close;
    private IntPtr id_close;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsEnabled { get; }
    public IIngestionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IIngestionInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IIngestion GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsEnabled();
    private static Delegate GetReopenHandler();
    private static void n_Reopen(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Reopen();
    private static Delegate GetSendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_Handler();
    private static IntPtr n_SendAsync_Ljava_lang_String_Ljava_util_UUID_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Lcom_microsoft_appcenter_http_ServiceCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_appSecret, IntPtr native_installId, IntPtr native_logContainer, IntPtr native_serviceCallback);
    public sealed virtual IServiceCall SendAsync(string appSecret, UUID installId, LogContainer logContainer, IServiceCallback serviceCallback);
    private static Delegate GetSetLogUrl_Ljava_lang_String_Handler();
    private static void n_SetLogUrl_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_logUrl);
    public sealed virtual void SetLogUrl(string logUrl);
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/AbstractLog")]
public abstract class Microsoft.AppCenter.Android.Ingestion.Models.AbstractLog : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getDataResidencyRegion;
    private static Delegate cb_setDataResidencyRegion_Ljava_lang_String_;
    private static Delegate cb_getDevice;
    private static Delegate cb_setDevice_Lcom_microsoft_appcenter_ingestion_models_Device_;
    private static Delegate cb_getDistributionGroupId;
    private static Delegate cb_setDistributionGroupId_Ljava_lang_String_;
    private static Delegate cb_getSid;
    private static Delegate cb_setSid_Ljava_util_UUID_;
    private static Delegate cb_getTag;
    private static Delegate cb_setTag_Ljava_lang_Object_;
    private static Delegate cb_getTimestamp;
    private static Delegate cb_setTimestamp_Ljava_util_Date_;
    private static Delegate cb_getTransmissionTargetTokens;
    private static Delegate cb_getUserId;
    private static Delegate cb_setUserId_Ljava_lang_String_;
    private static Delegate cb_addTransmissionTarget_Ljava_lang_String_;
    private static Delegate cb_read_Lorg_json_JSONObject_;
    private static Delegate cb_write_Lorg_json_JSONStringer_;
    private static Delegate cb_getType;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string DataResidencyRegion { get; public set; }
    public Device Device { get; public set; }
    public string DistributionGroupId { get; public set; }
    public UUID Sid { get; public set; }
    public Object Tag { get; public set; }
    public Date Timestamp { get; public set; }
    public ICollection`1<string> TransmissionTargetTokens { get; }
    public string UserId { get; public set; }
    public string Type { get; }
    protected AbstractLog(IntPtr javaReference, JniHandleOwnership transfer);
    private static AbstractLog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataResidencyRegionHandler();
    private static IntPtr n_GetDataResidencyRegion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDataResidencyRegion_Ljava_lang_String_Handler();
    private static void n_SetDataResidencyRegion_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataResidencyRegion);
    [RegisterAttribute("getDataResidencyRegion", "()Ljava/lang/String;", "GetGetDataResidencyRegionHandler")]
public virtual string get_DataResidencyRegion();
    [RegisterAttribute("setDataResidencyRegion", "(Ljava/lang/String;)V", "GetSetDataResidencyRegion_Ljava_lang_String_Handler")]
public virtual void set_DataResidencyRegion(string value);
    private static Delegate GetGetDeviceHandler();
    private static IntPtr n_GetDevice(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDevice_Lcom_microsoft_appcenter_ingestion_models_Device_Handler();
    private static void n_SetDevice_Lcom_microsoft_appcenter_ingestion_models_Device_(IntPtr jnienv, IntPtr native__this, IntPtr native_device);
    [RegisterAttribute("getDevice", "()Lcom/microsoft/appcenter/ingestion/models/Device;", "GetGetDeviceHandler")]
public virtual Device get_Device();
    [RegisterAttribute("setDevice", "(Lcom/microsoft/appcenter/ingestion/models/Device;)V", "GetSetDevice_Lcom_microsoft_appcenter_ingestion_models_Device_Handler")]
public virtual void set_Device(Device value);
    private static Delegate GetGetDistributionGroupIdHandler();
    private static IntPtr n_GetDistributionGroupId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDistributionGroupId_Ljava_lang_String_Handler();
    private static void n_SetDistributionGroupId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_distributionGroupId);
    [RegisterAttribute("getDistributionGroupId", "()Ljava/lang/String;", "GetGetDistributionGroupIdHandler")]
public virtual string get_DistributionGroupId();
    [RegisterAttribute("setDistributionGroupId", "(Ljava/lang/String;)V", "GetSetDistributionGroupId_Ljava_lang_String_Handler")]
public virtual void set_DistributionGroupId(string value);
    private static Delegate GetGetSidHandler();
    private static IntPtr n_GetSid(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSid_Ljava_util_UUID_Handler();
    private static void n_SetSid_Ljava_util_UUID_(IntPtr jnienv, IntPtr native__this, IntPtr native_sid);
    [RegisterAttribute("getSid", "()Ljava/util/UUID;", "GetGetSidHandler")]
public virtual UUID get_Sid();
    [RegisterAttribute("setSid", "(Ljava/util/UUID;)V", "GetSetSid_Ljava_util_UUID_Handler")]
public virtual void set_Sid(UUID value);
    private static Delegate GetGetTagHandler();
    private static IntPtr n_GetTag(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTag_Ljava_lang_Object_Handler();
    private static void n_SetTag_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [RegisterAttribute("getTag", "()Ljava/lang/Object;", "GetGetTagHandler")]
public virtual Object get_Tag();
    [RegisterAttribute("setTag", "(Ljava/lang/Object;)V", "GetSetTag_Ljava_lang_Object_Handler")]
public virtual void set_Tag(Object value);
    private static Delegate GetGetTimestampHandler();
    private static IntPtr n_GetTimestamp(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTimestamp_Ljava_util_Date_Handler();
    private static void n_SetTimestamp_Ljava_util_Date_(IntPtr jnienv, IntPtr native__this, IntPtr native_timestamp);
    [RegisterAttribute("getTimestamp", "()Ljava/util/Date;", "GetGetTimestampHandler")]
public virtual Date get_Timestamp();
    [RegisterAttribute("setTimestamp", "(Ljava/util/Date;)V", "GetSetTimestamp_Ljava_util_Date_Handler")]
public virtual void set_Timestamp(Date value);
    private static Delegate GetGetTransmissionTargetTokensHandler();
    private static IntPtr n_GetTransmissionTargetTokens(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTransmissionTargetTokens", "()Ljava/util/Set;", "GetGetTransmissionTargetTokensHandler")]
public virtual ICollection`1<string> get_TransmissionTargetTokens();
    private static Delegate GetGetUserIdHandler();
    private static IntPtr n_GetUserId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetUserId_Ljava_lang_String_Handler();
    private static void n_SetUserId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_userId);
    [RegisterAttribute("getUserId", "()Ljava/lang/String;", "GetGetUserIdHandler")]
public virtual string get_UserId();
    [RegisterAttribute("setUserId", "(Ljava/lang/String;)V", "GetSetUserId_Ljava_lang_String_Handler")]
public virtual void set_UserId(string value);
    private static Delegate GetAddTransmissionTarget_Ljava_lang_String_Handler();
    private static void n_AddTransmissionTarget_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_transmissionTargetToken);
    [RegisterAttribute("addTransmissionTarget", "(Ljava/lang/String;)V", "GetAddTransmissionTarget_Ljava_lang_String_Handler")]
public virtual void AddTransmissionTarget(string transmissionTargetToken);
    private static Delegate GetRead_Lorg_json_JSONObject_Handler();
    private static void n_Read_Lorg_json_JSONObject_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    [RegisterAttribute("read", "(Lorg/json/JSONObject;)V", "GetRead_Lorg_json_JSONObject_Handler")]
public virtual void Read(JSONObject object);
    private static Delegate GetWrite_Lorg_json_JSONStringer_Handler();
    private static void n_Write_Lorg_json_JSONStringer_(IntPtr jnienv, IntPtr native__this, IntPtr native_writer);
    [RegisterAttribute("write", "(Lorg/json/JSONStringer;)V", "GetWrite_Lorg_json_JSONStringer_Handler")]
public virtual void Write(JSONStringer writer);
    private static Delegate GetGetTypeHandler();
    private static IntPtr n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public abstract virtual string get_Type();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/AbstractLog")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.AbstractLogInvoker : AbstractLog {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Type { get; }
    public AbstractLogInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AbstractLogInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public virtual string get_Type();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/Device")]
public class Microsoft.AppCenter.Android.Ingestion.Models.Device : WrapperSdk {
    private static JniPeerMembers _members;
    private static Delegate cb_getAppBuild;
    private static Delegate cb_setAppBuild_Ljava_lang_String_;
    private static Delegate cb_getAppNamespace;
    private static Delegate cb_setAppNamespace_Ljava_lang_String_;
    private static Delegate cb_getAppVersion;
    private static Delegate cb_setAppVersion_Ljava_lang_String_;
    private static Delegate cb_getCarrierCountry;
    private static Delegate cb_setCarrierCountry_Ljava_lang_String_;
    private static Delegate cb_getCarrierName;
    private static Delegate cb_setCarrierName_Ljava_lang_String_;
    private static Delegate cb_getLocale;
    private static Delegate cb_setLocale_Ljava_lang_String_;
    private static Delegate cb_getModel;
    private static Delegate cb_setModel_Ljava_lang_String_;
    private static Delegate cb_getOemName;
    private static Delegate cb_setOemName_Ljava_lang_String_;
    private static Delegate cb_getOsApiLevel;
    private static Delegate cb_setOsApiLevel_Ljava_lang_Integer_;
    private static Delegate cb_getOsBuild;
    private static Delegate cb_setOsBuild_Ljava_lang_String_;
    private static Delegate cb_getOsName;
    private static Delegate cb_setOsName_Ljava_lang_String_;
    private static Delegate cb_getOsVersion;
    private static Delegate cb_setOsVersion_Ljava_lang_String_;
    private static Delegate cb_getScreenSize;
    private static Delegate cb_setScreenSize_Ljava_lang_String_;
    private static Delegate cb_getSdkName;
    private static Delegate cb_setSdkName_Ljava_lang_String_;
    private static Delegate cb_getSdkVersion;
    private static Delegate cb_setSdkVersion_Ljava_lang_String_;
    private static Delegate cb_getTimeZoneOffset;
    private static Delegate cb_setTimeZoneOffset_Ljava_lang_Integer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string AppBuild { get; public set; }
    public string AppNamespace { get; public set; }
    public string AppVersion { get; public set; }
    public string CarrierCountry { get; public set; }
    public string CarrierName { get; public set; }
    public string Locale { get; public set; }
    public string Model { get; public set; }
    public string OemName { get; public set; }
    public Integer OsApiLevel { get; public set; }
    public string OsBuild { get; public set; }
    public string OsName { get; public set; }
    public string OsVersion { get; public set; }
    public string ScreenSize { get; public set; }
    public string SdkName { get; public set; }
    public string SdkVersion { get; public set; }
    public Integer TimeZoneOffset { get; public set; }
    protected Device(IntPtr javaReference, JniHandleOwnership transfer);
    private static Device();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAppBuildHandler();
    private static IntPtr n_GetAppBuild(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAppBuild_Ljava_lang_String_Handler();
    private static void n_SetAppBuild_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_appBuild);
    [RegisterAttribute("getAppBuild", "()Ljava/lang/String;", "GetGetAppBuildHandler")]
public virtual string get_AppBuild();
    [RegisterAttribute("setAppBuild", "(Ljava/lang/String;)V", "GetSetAppBuild_Ljava_lang_String_Handler")]
public virtual void set_AppBuild(string value);
    private static Delegate GetGetAppNamespaceHandler();
    private static IntPtr n_GetAppNamespace(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAppNamespace_Ljava_lang_String_Handler();
    private static void n_SetAppNamespace_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_appNamespace);
    [RegisterAttribute("getAppNamespace", "()Ljava/lang/String;", "GetGetAppNamespaceHandler")]
public virtual string get_AppNamespace();
    [RegisterAttribute("setAppNamespace", "(Ljava/lang/String;)V", "GetSetAppNamespace_Ljava_lang_String_Handler")]
public virtual void set_AppNamespace(string value);
    private static Delegate GetGetAppVersionHandler();
    private static IntPtr n_GetAppVersion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAppVersion_Ljava_lang_String_Handler();
    private static void n_SetAppVersion_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_appVersion);
    [RegisterAttribute("getAppVersion", "()Ljava/lang/String;", "GetGetAppVersionHandler")]
public virtual string get_AppVersion();
    [RegisterAttribute("setAppVersion", "(Ljava/lang/String;)V", "GetSetAppVersion_Ljava_lang_String_Handler")]
public virtual void set_AppVersion(string value);
    private static Delegate GetGetCarrierCountryHandler();
    private static IntPtr n_GetCarrierCountry(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCarrierCountry_Ljava_lang_String_Handler();
    private static void n_SetCarrierCountry_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_carrierCountry);
    [RegisterAttribute("getCarrierCountry", "()Ljava/lang/String;", "GetGetCarrierCountryHandler")]
public virtual string get_CarrierCountry();
    [RegisterAttribute("setCarrierCountry", "(Ljava/lang/String;)V", "GetSetCarrierCountry_Ljava_lang_String_Handler")]
public virtual void set_CarrierCountry(string value);
    private static Delegate GetGetCarrierNameHandler();
    private static IntPtr n_GetCarrierName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCarrierName_Ljava_lang_String_Handler();
    private static void n_SetCarrierName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_carrierName);
    [RegisterAttribute("getCarrierName", "()Ljava/lang/String;", "GetGetCarrierNameHandler")]
public virtual string get_CarrierName();
    [RegisterAttribute("setCarrierName", "(Ljava/lang/String;)V", "GetSetCarrierName_Ljava_lang_String_Handler")]
public virtual void set_CarrierName(string value);
    private static Delegate GetGetLocaleHandler();
    private static IntPtr n_GetLocale(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLocale_Ljava_lang_String_Handler();
    private static void n_SetLocale_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_locale);
    [RegisterAttribute("getLocale", "()Ljava/lang/String;", "GetGetLocaleHandler")]
public virtual string get_Locale();
    [RegisterAttribute("setLocale", "(Ljava/lang/String;)V", "GetSetLocale_Ljava_lang_String_Handler")]
public virtual void set_Locale(string value);
    private static Delegate GetGetModelHandler();
    private static IntPtr n_GetModel(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetModel_Ljava_lang_String_Handler();
    private static void n_SetModel_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("getModel", "()Ljava/lang/String;", "GetGetModelHandler")]
public virtual string get_Model();
    [RegisterAttribute("setModel", "(Ljava/lang/String;)V", "GetSetModel_Ljava_lang_String_Handler")]
public virtual void set_Model(string value);
    private static Delegate GetGetOemNameHandler();
    private static IntPtr n_GetOemName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetOemName_Ljava_lang_String_Handler();
    private static void n_SetOemName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_oemName);
    [RegisterAttribute("getOemName", "()Ljava/lang/String;", "GetGetOemNameHandler")]
public virtual string get_OemName();
    [RegisterAttribute("setOemName", "(Ljava/lang/String;)V", "GetSetOemName_Ljava_lang_String_Handler")]
public virtual void set_OemName(string value);
    private static Delegate GetGetOsApiLevelHandler();
    private static IntPtr n_GetOsApiLevel(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetOsApiLevel_Ljava_lang_Integer_Handler();
    private static void n_SetOsApiLevel_Ljava_lang_Integer_(IntPtr jnienv, IntPtr native__this, IntPtr native_osApiLevel);
    [RegisterAttribute("getOsApiLevel", "()Ljava/lang/Integer;", "GetGetOsApiLevelHandler")]
public virtual Integer get_OsApiLevel();
    [RegisterAttribute("setOsApiLevel", "(Ljava/lang/Integer;)V", "GetSetOsApiLevel_Ljava_lang_Integer_Handler")]
public virtual void set_OsApiLevel(Integer value);
    private static Delegate GetGetOsBuildHandler();
    private static IntPtr n_GetOsBuild(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetOsBuild_Ljava_lang_String_Handler();
    private static void n_SetOsBuild_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_osBuild);
    [RegisterAttribute("getOsBuild", "()Ljava/lang/String;", "GetGetOsBuildHandler")]
public virtual string get_OsBuild();
    [RegisterAttribute("setOsBuild", "(Ljava/lang/String;)V", "GetSetOsBuild_Ljava_lang_String_Handler")]
public virtual void set_OsBuild(string value);
    private static Delegate GetGetOsNameHandler();
    private static IntPtr n_GetOsName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetOsName_Ljava_lang_String_Handler();
    private static void n_SetOsName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_osName);
    [RegisterAttribute("getOsName", "()Ljava/lang/String;", "GetGetOsNameHandler")]
public virtual string get_OsName();
    [RegisterAttribute("setOsName", "(Ljava/lang/String;)V", "GetSetOsName_Ljava_lang_String_Handler")]
public virtual void set_OsName(string value);
    private static Delegate GetGetOsVersionHandler();
    private static IntPtr n_GetOsVersion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetOsVersion_Ljava_lang_String_Handler();
    private static void n_SetOsVersion_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_osVersion);
    [RegisterAttribute("getOsVersion", "()Ljava/lang/String;", "GetGetOsVersionHandler")]
public virtual string get_OsVersion();
    [RegisterAttribute("setOsVersion", "(Ljava/lang/String;)V", "GetSetOsVersion_Ljava_lang_String_Handler")]
public virtual void set_OsVersion(string value);
    private static Delegate GetGetScreenSizeHandler();
    private static IntPtr n_GetScreenSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScreenSize_Ljava_lang_String_Handler();
    private static void n_SetScreenSize_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_screenSize);
    [RegisterAttribute("getScreenSize", "()Ljava/lang/String;", "GetGetScreenSizeHandler")]
public virtual string get_ScreenSize();
    [RegisterAttribute("setScreenSize", "(Ljava/lang/String;)V", "GetSetScreenSize_Ljava_lang_String_Handler")]
public virtual void set_ScreenSize(string value);
    private static Delegate GetGetSdkNameHandler();
    private static IntPtr n_GetSdkName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSdkName_Ljava_lang_String_Handler();
    private static void n_SetSdkName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_sdkName);
    [RegisterAttribute("getSdkName", "()Ljava/lang/String;", "GetGetSdkNameHandler")]
public virtual string get_SdkName();
    [RegisterAttribute("setSdkName", "(Ljava/lang/String;)V", "GetSetSdkName_Ljava_lang_String_Handler")]
public virtual void set_SdkName(string value);
    private static Delegate GetGetSdkVersionHandler();
    private static IntPtr n_GetSdkVersion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSdkVersion_Ljava_lang_String_Handler();
    private static void n_SetSdkVersion_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_sdkVersion);
    [RegisterAttribute("getSdkVersion", "()Ljava/lang/String;", "GetGetSdkVersionHandler")]
public virtual string get_SdkVersion();
    [RegisterAttribute("setSdkVersion", "(Ljava/lang/String;)V", "GetSetSdkVersion_Ljava_lang_String_Handler")]
public virtual void set_SdkVersion(string value);
    private static Delegate GetGetTimeZoneOffsetHandler();
    private static IntPtr n_GetTimeZoneOffset(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTimeZoneOffset_Ljava_lang_Integer_Handler();
    private static void n_SetTimeZoneOffset_Ljava_lang_Integer_(IntPtr jnienv, IntPtr native__this, IntPtr native_timeZoneOffset);
    [RegisterAttribute("getTimeZoneOffset", "()Ljava/lang/Integer;", "GetGetTimeZoneOffsetHandler")]
public virtual Integer get_TimeZoneOffset();
    [RegisterAttribute("setTimeZoneOffset", "(Ljava/lang/Integer;)V", "GetSetTimeZoneOffset_Ljava_lang_Integer_Handler")]
public virtual void set_TimeZoneOffset(Integer value);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/Log", "", "Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker")]
public interface Microsoft.AppCenter.Android.Ingestion.Models.ILog {
    public string DataResidencyRegion { get; public set; }
    public Device Device { get; public set; }
    public string DistributionGroupId { get; public set; }
    public UUID Sid { get; public set; }
    public Object Tag { get; public set; }
    public Date Timestamp { get; public set; }
    public ICollection`1<string> TransmissionTargetTokens { get; }
    public string Type { get; }
    public string UserId { get; public set; }
    [RegisterAttribute("getDataResidencyRegion", "()Ljava/lang/String;", "GetGetDataResidencyRegionHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual string get_DataResidencyRegion();
    [RegisterAttribute("setDataResidencyRegion", "(Ljava/lang/String;)V", "GetSetDataResidencyRegion_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void set_DataResidencyRegion(string value);
    [RegisterAttribute("getDevice", "()Lcom/microsoft/appcenter/ingestion/models/Device;", "GetGetDeviceHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual Device get_Device();
    [RegisterAttribute("setDevice", "(Lcom/microsoft/appcenter/ingestion/models/Device;)V", "GetSetDevice_Lcom_microsoft_appcenter_ingestion_models_Device_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void set_Device(Device value);
    [RegisterAttribute("getDistributionGroupId", "()Ljava/lang/String;", "GetGetDistributionGroupIdHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual string get_DistributionGroupId();
    [RegisterAttribute("setDistributionGroupId", "(Ljava/lang/String;)V", "GetSetDistributionGroupId_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void set_DistributionGroupId(string value);
    [RegisterAttribute("getSid", "()Ljava/util/UUID;", "GetGetSidHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual UUID get_Sid();
    [RegisterAttribute("setSid", "(Ljava/util/UUID;)V", "GetSetSid_Ljava_util_UUID_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void set_Sid(UUID value);
    [RegisterAttribute("getTag", "()Ljava/lang/Object;", "GetGetTagHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual Object get_Tag();
    [RegisterAttribute("setTag", "(Ljava/lang/Object;)V", "GetSetTag_Ljava_lang_Object_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void set_Tag(Object value);
    [RegisterAttribute("getTimestamp", "()Ljava/util/Date;", "GetGetTimestampHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual Date get_Timestamp();
    [RegisterAttribute("setTimestamp", "(Ljava/util/Date;)V", "GetSetTimestamp_Ljava_util_Date_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void set_Timestamp(Date value);
    [RegisterAttribute("getTransmissionTargetTokens", "()Ljava/util/Set;", "GetGetTransmissionTargetTokensHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual ICollection`1<string> get_TransmissionTargetTokens();
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual string get_Type();
    [RegisterAttribute("getUserId", "()Ljava/lang/String;", "GetGetUserIdHandler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual string get_UserId();
    [RegisterAttribute("setUserId", "(Ljava/lang/String;)V", "GetSetUserId_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void set_UserId(string value);
    [RegisterAttribute("addTransmissionTarget", "(Ljava/lang/String;)V", "GetAddTransmissionTarget_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker, Microsoft.AppCenter")]
public abstract virtual void AddTransmissionTarget(string transmissionTargetToken);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/Log")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.ILogInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getDataResidencyRegion;
    private static Delegate cb_setDataResidencyRegion_Ljava_lang_String_;
    private IntPtr id_getDataResidencyRegion;
    private IntPtr id_setDataResidencyRegion_Ljava_lang_String_;
    private static Delegate cb_getDevice;
    private static Delegate cb_setDevice_Lcom_microsoft_appcenter_ingestion_models_Device_;
    private IntPtr id_getDevice;
    private IntPtr id_setDevice_Lcom_microsoft_appcenter_ingestion_models_Device_;
    private static Delegate cb_getDistributionGroupId;
    private static Delegate cb_setDistributionGroupId_Ljava_lang_String_;
    private IntPtr id_getDistributionGroupId;
    private IntPtr id_setDistributionGroupId_Ljava_lang_String_;
    private static Delegate cb_getSid;
    private static Delegate cb_setSid_Ljava_util_UUID_;
    private IntPtr id_getSid;
    private IntPtr id_setSid_Ljava_util_UUID_;
    private static Delegate cb_getTag;
    private static Delegate cb_setTag_Ljava_lang_Object_;
    private IntPtr id_getTag;
    private IntPtr id_setTag_Ljava_lang_Object_;
    private static Delegate cb_getTimestamp;
    private static Delegate cb_setTimestamp_Ljava_util_Date_;
    private IntPtr id_getTimestamp;
    private IntPtr id_setTimestamp_Ljava_util_Date_;
    private static Delegate cb_getTransmissionTargetTokens;
    private IntPtr id_getTransmissionTargetTokens;
    private static Delegate cb_getType;
    private IntPtr id_getType;
    private static Delegate cb_getUserId;
    private static Delegate cb_setUserId_Ljava_lang_String_;
    private IntPtr id_getUserId;
    private IntPtr id_setUserId_Ljava_lang_String_;
    private static Delegate cb_addTransmissionTarget_Ljava_lang_String_;
    private IntPtr id_addTransmissionTarget_Ljava_lang_String_;
    private static Delegate cb_read_Lorg_json_JSONObject_;
    private IntPtr id_read_Lorg_json_JSONObject_;
    private static Delegate cb_write_Lorg_json_JSONStringer_;
    private IntPtr id_write_Lorg_json_JSONStringer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string DataResidencyRegion { get; public set; }
    public Device Device { get; public set; }
    public string DistributionGroupId { get; public set; }
    public UUID Sid { get; public set; }
    public Object Tag { get; public set; }
    public Date Timestamp { get; public set; }
    public ICollection`1<string> TransmissionTargetTokens { get; }
    public string Type { get; }
    public string UserId { get; public set; }
    public ILogInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILogInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILog GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetDataResidencyRegionHandler();
    private static IntPtr n_GetDataResidencyRegion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDataResidencyRegion_Ljava_lang_String_Handler();
    private static void n_SetDataResidencyRegion_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataResidencyRegion);
    public sealed virtual string get_DataResidencyRegion();
    public sealed virtual void set_DataResidencyRegion(string value);
    private static Delegate GetGetDeviceHandler();
    private static IntPtr n_GetDevice(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDevice_Lcom_microsoft_appcenter_ingestion_models_Device_Handler();
    private static void n_SetDevice_Lcom_microsoft_appcenter_ingestion_models_Device_(IntPtr jnienv, IntPtr native__this, IntPtr native_device);
    public sealed virtual Device get_Device();
    public sealed virtual void set_Device(Device value);
    private static Delegate GetGetDistributionGroupIdHandler();
    private static IntPtr n_GetDistributionGroupId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDistributionGroupId_Ljava_lang_String_Handler();
    private static void n_SetDistributionGroupId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_distributionGroupId);
    public sealed virtual string get_DistributionGroupId();
    public sealed virtual void set_DistributionGroupId(string value);
    private static Delegate GetGetSidHandler();
    private static IntPtr n_GetSid(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSid_Ljava_util_UUID_Handler();
    private static void n_SetSid_Ljava_util_UUID_(IntPtr jnienv, IntPtr native__this, IntPtr native_sid);
    public sealed virtual UUID get_Sid();
    public sealed virtual void set_Sid(UUID value);
    private static Delegate GetGetTagHandler();
    private static IntPtr n_GetTag(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTag_Ljava_lang_Object_Handler();
    private static void n_SetTag_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    public sealed virtual Object get_Tag();
    public sealed virtual void set_Tag(Object value);
    private static Delegate GetGetTimestampHandler();
    private static IntPtr n_GetTimestamp(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTimestamp_Ljava_util_Date_Handler();
    private static void n_SetTimestamp_Ljava_util_Date_(IntPtr jnienv, IntPtr native__this, IntPtr native_timestamp);
    public sealed virtual Date get_Timestamp();
    public sealed virtual void set_Timestamp(Date value);
    private static Delegate GetGetTransmissionTargetTokensHandler();
    private static IntPtr n_GetTransmissionTargetTokens(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICollection`1<string> get_TransmissionTargetTokens();
    private static Delegate GetGetTypeHandler();
    private static IntPtr n_GetType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_Type();
    private static Delegate GetGetUserIdHandler();
    private static IntPtr n_GetUserId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetUserId_Ljava_lang_String_Handler();
    private static void n_SetUserId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_userId);
    public sealed virtual string get_UserId();
    public sealed virtual void set_UserId(string value);
    private static Delegate GetAddTransmissionTarget_Ljava_lang_String_Handler();
    private static void n_AddTransmissionTarget_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_transmissionTargetToken);
    public sealed virtual void AddTransmissionTarget(string transmissionTargetToken);
    private static Delegate GetRead_Lorg_json_JSONObject_Handler();
    private static void n_Read_Lorg_json_JSONObject_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    public sealed virtual void Read(JSONObject object);
    private static Delegate GetWrite_Lorg_json_JSONStringer_Handler();
    private static void n_Write_Lorg_json_JSONStringer_(IntPtr jnienv, IntPtr native__this, IntPtr native_writer);
    public sealed virtual void Write(JSONStringer writer);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/Model", "", "Microsoft.AppCenter.Android.Ingestion.Models.IModelInvoker")]
public interface Microsoft.AppCenter.Android.Ingestion.Models.IModel {
    [RegisterAttribute("read", "(Lorg/json/JSONObject;)V", "GetRead_Lorg_json_JSONObject_Handler:Microsoft.AppCenter.Android.Ingestion.Models.IModelInvoker, Microsoft.AppCenter")]
public abstract virtual void Read(JSONObject object);
    [RegisterAttribute("write", "(Lorg/json/JSONStringer;)V", "GetWrite_Lorg_json_JSONStringer_Handler:Microsoft.AppCenter.Android.Ingestion.Models.IModelInvoker, Microsoft.AppCenter")]
public abstract virtual void Write(JSONStringer writer);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/Model")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.IModelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_read_Lorg_json_JSONObject_;
    private IntPtr id_read_Lorg_json_JSONObject_;
    private static Delegate cb_write_Lorg_json_JSONStringer_;
    private IntPtr id_write_Lorg_json_JSONStringer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IModelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IModelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IModel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetRead_Lorg_json_JSONObject_Handler();
    private static void n_Read_Lorg_json_JSONObject_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    public sealed virtual void Read(JSONObject object);
    private static Delegate GetWrite_Lorg_json_JSONStringer_Handler();
    private static void n_Write_Lorg_json_JSONStringer_(IntPtr jnienv, IntPtr native__this, IntPtr native_writer);
    public sealed virtual void Write(JSONStringer writer);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/AbstractLogFactory")]
public abstract class Microsoft.AppCenter.Android.Ingestion.Models.Json.AbstractLogFactory : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_toCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private static Delegate cb_create;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AbstractLogFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static AbstractLogFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetToCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static IntPtr n_ToCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    [RegisterAttribute("toCommonSchemaLogs", "(Lcom/microsoft/appcenter/ingestion/models/Log;)Ljava/util/Collection;", "GetToCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_Handler")]
public virtual ICollection`1<CommonSchemaLog> ToCommonSchemaLogs(ILog log);
    private static Delegate GetCreateHandler();
    private static IntPtr n_Create(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("create", "()Lcom/microsoft/appcenter/ingestion/models/Log;", "GetCreateHandler")]
public abstract virtual ILog Create();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/AbstractLogFactory")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.Json.AbstractLogFactoryInvoker : AbstractLogFactory {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AbstractLogFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AbstractLogFactoryInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "()Lcom/microsoft/appcenter/ingestion/models/Log;", "GetCreateHandler")]
public virtual ILog Create();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/LogFactory", "", "Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogFactoryInvoker")]
public interface Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogFactory {
    [RegisterAttribute("create", "()Lcom/microsoft/appcenter/ingestion/models/Log;", "GetCreateHandler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogFactoryInvoker, Microsoft.AppCenter")]
public abstract virtual ILog Create();
    [RegisterAttribute("toCommonSchemaLogs", "(Lcom/microsoft/appcenter/ingestion/models/Log;)Ljava/util/Collection;", "GetToCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_Handler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogFactoryInvoker, Microsoft.AppCenter")]
public abstract virtual ICollection`1<CommonSchemaLog> ToCommonSchemaLogs(ILog log);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/LogFactory")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_create;
    private IntPtr id_create;
    private static Delegate cb_toCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private IntPtr id_toCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILogFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILogFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILogFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCreateHandler();
    private static IntPtr n_Create(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ILog Create();
    private static Delegate GetToCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static IntPtr n_ToCommonSchemaLogs_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    public sealed virtual ICollection`1<CommonSchemaLog> ToCommonSchemaLogs(ILog log);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/LogSerializer", "", "Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker")]
public interface Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializer {
    [RegisterAttribute("addLogFactory", "(Ljava/lang/String;Lcom/microsoft/appcenter/ingestion/models/json/LogFactory;)V", "GetAddLogFactory_Ljava_lang_String_Lcom_microsoft_appcenter_ingestion_models_json_LogFactory_Handler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker, Microsoft.AppCenter")]
public abstract virtual void AddLogFactory(string logType, ILogFactory logFactory);
    [RegisterAttribute("deserializeContainer", "(Ljava/lang/String;Ljava/lang/String;)Lcom/microsoft/appcenter/ingestion/models/LogContainer;", "GetDeserializeContainer_Ljava_lang_String_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker, Microsoft.AppCenter")]
public abstract virtual LogContainer DeserializeContainer(string json, string type);
    [RegisterAttribute("deserializeLog", "(Ljava/lang/String;Ljava/lang/String;)Lcom/microsoft/appcenter/ingestion/models/Log;", "GetDeserializeLog_Ljava_lang_String_Ljava_lang_String_Handler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker, Microsoft.AppCenter")]
public abstract virtual ILog DeserializeLog(string json, string type);
    [RegisterAttribute("serializeContainer", "(Lcom/microsoft/appcenter/ingestion/models/LogContainer;)Ljava/lang/String;", "GetSerializeContainer_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Handler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker, Microsoft.AppCenter")]
public abstract virtual string SerializeContainer(LogContainer container);
    [RegisterAttribute("serializeLog", "(Lcom/microsoft/appcenter/ingestion/models/Log;)Ljava/lang/String;", "GetSerializeLog_Lcom_microsoft_appcenter_ingestion_models_Log_Handler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker, Microsoft.AppCenter")]
public abstract virtual string SerializeLog(ILog log);
    [RegisterAttribute("toCommonSchemaLog", "(Lcom/microsoft/appcenter/ingestion/models/Log;)Ljava/util/Collection;", "GetToCommonSchemaLog_Lcom_microsoft_appcenter_ingestion_models_Log_Handler:Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker, Microsoft.AppCenter")]
public abstract virtual ICollection`1<CommonSchemaLog> ToCommonSchemaLog(ILog log);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/LogSerializer")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.Json.ILogSerializerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_addLogFactory_Ljava_lang_String_Lcom_microsoft_appcenter_ingestion_models_json_LogFactory_;
    private IntPtr id_addLogFactory_Ljava_lang_String_Lcom_microsoft_appcenter_ingestion_models_json_LogFactory_;
    private static Delegate cb_deserializeContainer_Ljava_lang_String_Ljava_lang_String_;
    private IntPtr id_deserializeContainer_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_deserializeLog_Ljava_lang_String_Ljava_lang_String_;
    private IntPtr id_deserializeLog_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_serializeContainer_Lcom_microsoft_appcenter_ingestion_models_LogContainer_;
    private IntPtr id_serializeContainer_Lcom_microsoft_appcenter_ingestion_models_LogContainer_;
    private static Delegate cb_serializeLog_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private IntPtr id_serializeLog_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private static Delegate cb_toCommonSchemaLog_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private IntPtr id_toCommonSchemaLog_Lcom_microsoft_appcenter_ingestion_models_Log_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILogSerializerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILogSerializerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILogSerializer GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddLogFactory_Ljava_lang_String_Lcom_microsoft_appcenter_ingestion_models_json_LogFactory_Handler();
    private static void n_AddLogFactory_Ljava_lang_String_Lcom_microsoft_appcenter_ingestion_models_json_LogFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_logType, IntPtr native_logFactory);
    public sealed virtual void AddLogFactory(string logType, ILogFactory logFactory);
    private static Delegate GetDeserializeContainer_Ljava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_DeserializeContainer_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_json, IntPtr native_type);
    public sealed virtual LogContainer DeserializeContainer(string json, string type);
    private static Delegate GetDeserializeLog_Ljava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_DeserializeLog_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_json, IntPtr native_type);
    public sealed virtual ILog DeserializeLog(string json, string type);
    private static Delegate GetSerializeContainer_Lcom_microsoft_appcenter_ingestion_models_LogContainer_Handler();
    private static IntPtr n_SerializeContainer_Lcom_microsoft_appcenter_ingestion_models_LogContainer_(IntPtr jnienv, IntPtr native__this, IntPtr native_container);
    public sealed virtual string SerializeContainer(LogContainer container);
    private static Delegate GetSerializeLog_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static IntPtr n_SerializeLog_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    public sealed virtual string SerializeLog(ILog log);
    private static Delegate GetToCommonSchemaLog_Lcom_microsoft_appcenter_ingestion_models_Log_Handler();
    private static IntPtr n_ToCommonSchemaLog_Lcom_microsoft_appcenter_ingestion_models_Log_(IntPtr jnienv, IntPtr native__this, IntPtr native_log);
    public sealed virtual ICollection`1<CommonSchemaLog> ToCommonSchemaLog(ILog log);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/ModelFactory", "", "Microsoft.AppCenter.Android.Ingestion.Models.Json.IModelFactoryInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Microsoft.AppCenter.Android.Ingestion.Models.Json.IModelFactory {
    [RegisterAttribute("create", "()Lcom/microsoft/appcenter/ingestion/models/Model;", "GetCreateHandler:Microsoft.AppCenter.Android.Ingestion.Models.Json.IModelFactoryInvoker, Microsoft.AppCenter")]
public abstract virtual Object Create();
    [RegisterAttribute("createList", "(I)Ljava/util/List;", "GetCreateList_IHandler:Microsoft.AppCenter.Android.Ingestion.Models.Json.IModelFactoryInvoker, Microsoft.AppCenter")]
public abstract virtual IList CreateList(int capacity);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/json/ModelFactory")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.Json.IModelFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_create;
    private IntPtr id_create;
    private static Delegate cb_createList_I;
    private IntPtr id_createList_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IModelFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IModelFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IModelFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCreateHandler();
    private static IntPtr n_Create(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object Create();
    private static Delegate GetCreateList_IHandler();
    private static IntPtr n_CreateList_I(IntPtr jnienv, IntPtr native__this, int capacity);
    public sealed virtual IList CreateList(int capacity);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/LogContainer")]
public class Microsoft.AppCenter.Android.Ingestion.Models.LogContainer : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getLogs;
    private static Delegate cb_setLogs_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<ILog> Logs { get; public set; }
    protected LogContainer(IntPtr javaReference, JniHandleOwnership transfer);
    private static LogContainer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetLogsHandler();
    private static IntPtr n_GetLogs(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLogs_Ljava_util_List_Handler();
    private static void n_SetLogs_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_logs);
    [RegisterAttribute("getLogs", "()Ljava/util/List;", "GetGetLogsHandler")]
public virtual IList`1<ILog> get_Logs();
    [RegisterAttribute("setLogs", "(Ljava/util/List;)V", "GetSetLogs_Ljava_util_List_Handler")]
public virtual void set_Logs(IList`1<ILog> value);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/LogWithProperties")]
public abstract class Microsoft.AppCenter.Android.Ingestion.Models.LogWithProperties : AbstractLog {
    private static JniPeerMembers _members;
    private static Delegate cb_getProperties;
    private static Delegate cb_setProperties_Ljava_util_Map_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDictionary`2<string, string> Properties { get; public set; }
    protected LogWithProperties(IntPtr javaReference, JniHandleOwnership transfer);
    private static LogWithProperties();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetPropertiesHandler();
    private static IntPtr n_GetProperties(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetProperties_Ljava_util_Map_Handler();
    private static void n_SetProperties_Ljava_util_Map_(IntPtr jnienv, IntPtr native__this, IntPtr native_properties);
    [RegisterAttribute("getProperties", "()Ljava/util/Map;", "GetGetPropertiesHandler")]
public virtual IDictionary`2<string, string> get_Properties();
    [RegisterAttribute("setProperties", "(Ljava/util/Map;)V", "GetSetProperties_Ljava_util_Map_Handler")]
public virtual void set_Properties(IDictionary`2<string, string> value);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/LogWithProperties")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.LogWithPropertiesInvoker : LogWithProperties {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Type { get; }
    public LogWithPropertiesInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static LogWithPropertiesInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public virtual string get_Type();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/one/CommonSchemaLog")]
public abstract class Microsoft.AppCenter.Android.Ingestion.Models.One.CommonSchemaLog : AbstractLog {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CommonSchemaLog(IntPtr javaReference, JniHandleOwnership transfer);
    private static CommonSchemaLog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/one/CommonSchemaLog")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.One.CommonSchemaLogInvoker : CommonSchemaLog {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Type { get; }
    public CommonSchemaLogInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static CommonSchemaLogInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public virtual string get_Type();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/properties/TypedProperty")]
public abstract class Microsoft.AppCenter.Android.Ingestion.Models.Properties.TypedProperty : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_setName_Ljava_lang_String_;
    private static Delegate cb_getType;
    private static Delegate cb_read_Lorg_json_JSONObject_;
    private static Delegate cb_write_Lorg_json_JSONStringer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; public set; }
    public string Type { get; }
    protected TypedProperty(IntPtr javaReference, JniHandleOwnership transfer);
    private static TypedProperty();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetName_Ljava_lang_String_Handler();
    private static void n_SetName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_name);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    [RegisterAttribute("setName", "(Ljava/lang/String;)V", "GetSetName_Ljava_lang_String_Handler")]
public virtual void set_Name(string value);
    private static Delegate GetGetTypeHandler();
    private static IntPtr n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public abstract virtual string get_Type();
    private static Delegate GetRead_Lorg_json_JSONObject_Handler();
    private static void n_Read_Lorg_json_JSONObject_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    [RegisterAttribute("read", "(Lorg/json/JSONObject;)V", "GetRead_Lorg_json_JSONObject_Handler")]
public virtual void Read(JSONObject object);
    private static Delegate GetWrite_Lorg_json_JSONStringer_Handler();
    private static void n_Write_Lorg_json_JSONStringer_(IntPtr jnienv, IntPtr native__this, IntPtr native_writer);
    [RegisterAttribute("write", "(Lorg/json/JSONStringer;)V", "GetWrite_Lorg_json_JSONStringer_Handler")]
public virtual void Write(JSONStringer writer);
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/properties/TypedProperty")]
internal class Microsoft.AppCenter.Android.Ingestion.Models.Properties.TypedPropertyInvoker : TypedProperty {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Type { get; }
    public TypedPropertyInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static TypedPropertyInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public virtual string get_Type();
}
[RegisterAttribute("com/microsoft/appcenter/ingestion/models/WrapperSdk")]
public class Microsoft.AppCenter.Android.Ingestion.Models.WrapperSdk : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getLiveUpdateDeploymentKey;
    private static Delegate cb_setLiveUpdateDeploymentKey_Ljava_lang_String_;
    private static Delegate cb_getLiveUpdatePackageHash;
    private static Delegate cb_setLiveUpdatePackageHash_Ljava_lang_String_;
    private static Delegate cb_getLiveUpdateReleaseLabel;
    private static Delegate cb_setLiveUpdateReleaseLabel_Ljava_lang_String_;
    private static Delegate cb_getWrapperRuntimeVersion;
    private static Delegate cb_setWrapperRuntimeVersion_Ljava_lang_String_;
    private static Delegate cb_getWrapperSdkName;
    private static Delegate cb_setWrapperSdkName_Ljava_lang_String_;
    private static Delegate cb_getWrapperSdkVersion;
    private static Delegate cb_setWrapperSdkVersion_Ljava_lang_String_;
    private static Delegate cb_read_Lorg_json_JSONObject_;
    private static Delegate cb_write_Lorg_json_JSONStringer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string LiveUpdateDeploymentKey { get; public set; }
    public string LiveUpdatePackageHash { get; public set; }
    public string LiveUpdateReleaseLabel { get; public set; }
    public string WrapperRuntimeVersion { get; public set; }
    public string WrapperSdkName { get; public set; }
    public string WrapperSdkVersion { get; public set; }
    protected WrapperSdk(IntPtr javaReference, JniHandleOwnership transfer);
    private static WrapperSdk();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetLiveUpdateDeploymentKeyHandler();
    private static IntPtr n_GetLiveUpdateDeploymentKey(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLiveUpdateDeploymentKey_Ljava_lang_String_Handler();
    private static void n_SetLiveUpdateDeploymentKey_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_liveUpdateDeploymentKey);
    [RegisterAttribute("getLiveUpdateDeploymentKey", "()Ljava/lang/String;", "GetGetLiveUpdateDeploymentKeyHandler")]
public virtual string get_LiveUpdateDeploymentKey();
    [RegisterAttribute("setLiveUpdateDeploymentKey", "(Ljava/lang/String;)V", "GetSetLiveUpdateDeploymentKey_Ljava_lang_String_Handler")]
public virtual void set_LiveUpdateDeploymentKey(string value);
    private static Delegate GetGetLiveUpdatePackageHashHandler();
    private static IntPtr n_GetLiveUpdatePackageHash(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLiveUpdatePackageHash_Ljava_lang_String_Handler();
    private static void n_SetLiveUpdatePackageHash_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_liveUpdatePackageHash);
    [RegisterAttribute("getLiveUpdatePackageHash", "()Ljava/lang/String;", "GetGetLiveUpdatePackageHashHandler")]
public virtual string get_LiveUpdatePackageHash();
    [RegisterAttribute("setLiveUpdatePackageHash", "(Ljava/lang/String;)V", "GetSetLiveUpdatePackageHash_Ljava_lang_String_Handler")]
public virtual void set_LiveUpdatePackageHash(string value);
    private static Delegate GetGetLiveUpdateReleaseLabelHandler();
    private static IntPtr n_GetLiveUpdateReleaseLabel(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLiveUpdateReleaseLabel_Ljava_lang_String_Handler();
    private static void n_SetLiveUpdateReleaseLabel_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_liveUpdateReleaseLabel);
    [RegisterAttribute("getLiveUpdateReleaseLabel", "()Ljava/lang/String;", "GetGetLiveUpdateReleaseLabelHandler")]
public virtual string get_LiveUpdateReleaseLabel();
    [RegisterAttribute("setLiveUpdateReleaseLabel", "(Ljava/lang/String;)V", "GetSetLiveUpdateReleaseLabel_Ljava_lang_String_Handler")]
public virtual void set_LiveUpdateReleaseLabel(string value);
    private static Delegate GetGetWrapperRuntimeVersionHandler();
    private static IntPtr n_GetWrapperRuntimeVersion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetWrapperRuntimeVersion_Ljava_lang_String_Handler();
    private static void n_SetWrapperRuntimeVersion_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_wrapperRuntimeVersion);
    [RegisterAttribute("getWrapperRuntimeVersion", "()Ljava/lang/String;", "GetGetWrapperRuntimeVersionHandler")]
public virtual string get_WrapperRuntimeVersion();
    [RegisterAttribute("setWrapperRuntimeVersion", "(Ljava/lang/String;)V", "GetSetWrapperRuntimeVersion_Ljava_lang_String_Handler")]
public virtual void set_WrapperRuntimeVersion(string value);
    private static Delegate GetGetWrapperSdkNameHandler();
    private static IntPtr n_GetWrapperSdkName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetWrapperSdkName_Ljava_lang_String_Handler();
    private static void n_SetWrapperSdkName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_wrapperSdkName);
    [RegisterAttribute("getWrapperSdkName", "()Ljava/lang/String;", "GetGetWrapperSdkNameHandler")]
public virtual string get_WrapperSdkName();
    [RegisterAttribute("setWrapperSdkName", "(Ljava/lang/String;)V", "GetSetWrapperSdkName_Ljava_lang_String_Handler")]
public virtual void set_WrapperSdkName(string value);
    private static Delegate GetGetWrapperSdkVersionHandler();
    private static IntPtr n_GetWrapperSdkVersion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetWrapperSdkVersion_Ljava_lang_String_Handler();
    private static void n_SetWrapperSdkVersion_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_wrapperSdkVersion);
    [RegisterAttribute("getWrapperSdkVersion", "()Ljava/lang/String;", "GetGetWrapperSdkVersionHandler")]
public virtual string get_WrapperSdkVersion();
    [RegisterAttribute("setWrapperSdkVersion", "(Ljava/lang/String;)V", "GetSetWrapperSdkVersion_Ljava_lang_String_Handler")]
public virtual void set_WrapperSdkVersion(string value);
    private static Delegate GetRead_Lorg_json_JSONObject_Handler();
    private static void n_Read_Lorg_json_JSONObject_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    [RegisterAttribute("read", "(Lorg/json/JSONObject;)V", "GetRead_Lorg_json_JSONObject_Handler")]
public virtual void Read(JSONObject object);
    private static Delegate GetWrite_Lorg_json_JSONStringer_Handler();
    private static void n_Write_Lorg_json_JSONStringer_(IntPtr jnienv, IntPtr native__this, IntPtr native_writer);
    [RegisterAttribute("write", "(Lorg/json/JSONStringer;)V", "GetWrite_Lorg_json_JSONStringer_Handler")]
public virtual void Write(JSONStringer writer);
}
[RegisterAttribute("com/microsoft/appcenter/utils/AppCenterLog")]
public class Microsoft.AppCenter.Android.Utils.AppCenterLog : Object {
    [RegisterAttribute("LOG_TAG")]
public static string LogTag;
    [RegisterAttribute("NONE")]
public static int None;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static int LogLevel { get; public set; }
    protected AppCenterLog(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppCenterLog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLogLevel", "()I", "")]
public static int get_LogLevel();
    [RegisterAttribute("setLogLevel", "(I)V", "")]
public static void set_LogLevel(int value);
    [RegisterAttribute("debug", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
public static void Debug(string tag, string message);
    [RegisterAttribute("debug", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Debug(string tag, string message, Throwable throwable);
    [RegisterAttribute("error", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
public static void Error(string tag, string message);
    [RegisterAttribute("error", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Error(string tag, string message, Throwable throwable);
    [RegisterAttribute("info", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
public static void Info(string tag, string message);
    [RegisterAttribute("info", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Info(string tag, string message, Throwable throwable);
    [RegisterAttribute("logAssert", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
public static void LogAssert(string tag, string message);
    [RegisterAttribute("logAssert", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void LogAssert(string tag, string message, Throwable throwable);
    [RegisterAttribute("setLogger", "(Ljava/util/logging/Logger;)V", "")]
public static void SetLogger(Logger logger);
    [RegisterAttribute("verbose", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
public static void Verbose(string tag, string message);
    [RegisterAttribute("verbose", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Verbose(string tag, string message, Throwable throwable);
    [RegisterAttribute("warn", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
public static void Warn(string tag, string message);
    [RegisterAttribute("warn", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Warn(string tag, string message, Throwable throwable);
}
[RegisterAttribute("com/microsoft/appcenter/utils/ApplicationLifecycleListener")]
public class Microsoft.AppCenter.Android.Utils.ApplicationLifecycleListener : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_onActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_;
    private static Delegate cb_onActivityDestroyed_Landroid_app_Activity_;
    private static Delegate cb_onActivityPaused_Landroid_app_Activity_;
    private static Delegate cb_onActivityResumed_Landroid_app_Activity_;
    private static Delegate cb_onActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_;
    private static Delegate cb_onActivityStarted_Landroid_app_Activity_;
    private static Delegate cb_onActivityStopped_Landroid_app_Activity_;
    private static Delegate cb_registerApplicationLifecycleCallbacks_Lcom_microsoft_appcenter_utils_ApplicationLifecycleListener_ApplicationLifecycleCallbacks_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ApplicationLifecycleListener(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Handler;)V", "")]
public ApplicationLifecycleListener(Handler handler);
    private static ApplicationLifecycleListener();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_Handler();
    private static void n_OnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_savedInstanceState);
    [RegisterAttribute("onActivityCreated", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetOnActivityCreated_Landroid_app_Activity_Landroid_os_Bundle_Handler")]
public virtual void OnActivityCreated(Activity activity, Bundle savedInstanceState);
    private static Delegate GetOnActivityDestroyed_Landroid_app_Activity_Handler();
    private static void n_OnActivityDestroyed_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityDestroyed", "(Landroid/app/Activity;)V", "GetOnActivityDestroyed_Landroid_app_Activity_Handler")]
public virtual void OnActivityDestroyed(Activity activity);
    private static Delegate GetOnActivityPaused_Landroid_app_Activity_Handler();
    private static void n_OnActivityPaused_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityPaused", "(Landroid/app/Activity;)V", "GetOnActivityPaused_Landroid_app_Activity_Handler")]
public virtual void OnActivityPaused(Activity activity);
    private static Delegate GetOnActivityResumed_Landroid_app_Activity_Handler();
    private static void n_OnActivityResumed_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityResumed", "(Landroid/app/Activity;)V", "GetOnActivityResumed_Landroid_app_Activity_Handler")]
public virtual void OnActivityResumed(Activity activity);
    private static Delegate GetOnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler();
    private static void n_OnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_outState);
    [RegisterAttribute("onActivitySaveInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetOnActivitySaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler")]
public virtual void OnActivitySaveInstanceState(Activity activity, Bundle outState);
    private static Delegate GetOnActivityStarted_Landroid_app_Activity_Handler();
    private static void n_OnActivityStarted_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityStarted", "(Landroid/app/Activity;)V", "GetOnActivityStarted_Landroid_app_Activity_Handler")]
public virtual void OnActivityStarted(Activity activity);
    private static Delegate GetOnActivityStopped_Landroid_app_Activity_Handler();
    private static void n_OnActivityStopped_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("onActivityStopped", "(Landroid/app/Activity;)V", "GetOnActivityStopped_Landroid_app_Activity_Handler")]
public virtual void OnActivityStopped(Activity activity);
    private static Delegate GetRegisterApplicationLifecycleCallbacks_Lcom_microsoft_appcenter_utils_ApplicationLifecycleListener_ApplicationLifecycleCallbacks_Handler();
    private static void n_RegisterApplicationLifecycleCallbacks_Lcom_microsoft_appcenter_utils_ApplicationLifecycleListener_ApplicationLifecycleCallbacks_(IntPtr jnienv, IntPtr native__this, IntPtr native_lifecycleCallback);
    [RegisterAttribute("registerApplicationLifecycleCallbacks", "(Lcom/microsoft/appcenter/utils/ApplicationLifecycleListener$ApplicationLifecycleCallbacks;)V", "GetRegisterApplicationLifecycleCallbacks_Lcom_microsoft_appcenter_utils_ApplicationLifecycleListener_ApplicationLifecycleCallbacks_Handler")]
public virtual void RegisterApplicationLifecycleCallbacks(IApplicationLifecycleCallbacks lifecycleCallback);
}
[RegisterAttribute("com/microsoft/appcenter/utils/async/DefaultAppCenterFuture")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AppCenter.Android.Utils.Async.DefaultAppCenterFuture : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isDone;
    private static Delegate cb_complete_Ljava_lang_Object_;
    private static Delegate cb_get;
    private static Delegate cb_thenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsDone { get; }
    protected DefaultAppCenterFuture(IntPtr javaReference, JniHandleOwnership transfer);
    private static DefaultAppCenterFuture();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsDoneHandler();
    private static bool n_IsDone(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isDone", "()Z", "GetIsDoneHandler")]
public virtual bool get_IsDone();
    private static Delegate GetComplete_Ljava_lang_Object_Handler();
    private static void n_Complete_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("complete", "(Ljava/lang/Object;)V", "GetComplete_Ljava_lang_Object_Handler")]
public virtual void Complete(Object value);
    private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("get", "()Ljava/lang/Object;", "GetGetHandler")]
public virtual Object Get();
    private static Delegate GetThenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_Handler();
    private static void n_ThenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_function);
    [RegisterAttribute("thenAccept", "(Lcom/microsoft/appcenter/utils/async/AppCenterConsumer;)V", "GetThenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_Handler")]
public virtual void ThenAccept(IAppCenterConsumer function);
}
[RegisterAttribute("com/microsoft/appcenter/utils/async/AppCenterConsumer", "", "Microsoft.AppCenter.Android.Utils.Async.IAppCenterConsumerInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Microsoft.AppCenter.Android.Utils.Async.IAppCenterConsumer {
    [RegisterAttribute("accept", "(Ljava/lang/Object;)V", "GetAccept_Ljava_lang_Object_Handler:Microsoft.AppCenter.Android.Utils.Async.IAppCenterConsumerInvoker, Microsoft.AppCenter")]
public abstract virtual void Accept(Object t);
}
[RegisterAttribute("com/microsoft/appcenter/utils/async/AppCenterConsumer")]
internal class Microsoft.AppCenter.Android.Utils.Async.IAppCenterConsumerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_accept_Ljava_lang_Object_;
    private IntPtr id_accept_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IAppCenterConsumerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAppCenterConsumerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IAppCenterConsumer GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAccept_Ljava_lang_Object_Handler();
    private static void n_Accept_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_t);
    public sealed virtual void Accept(Object t);
}
[RegisterAttribute("com/microsoft/appcenter/utils/async/AppCenterFuture", "", "Microsoft.AppCenter.Android.Utils.Async.IAppCenterFutureInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Microsoft.AppCenter.Android.Utils.Async.IAppCenterFuture {
    public bool IsDone { get; }
    [RegisterAttribute("isDone", "()Z", "GetIsDoneHandler:Microsoft.AppCenter.Android.Utils.Async.IAppCenterFutureInvoker, Microsoft.AppCenter")]
public abstract virtual bool get_IsDone();
    [RegisterAttribute("get", "()Ljava/lang/Object;", "GetGetHandler:Microsoft.AppCenter.Android.Utils.Async.IAppCenterFutureInvoker, Microsoft.AppCenter")]
public abstract virtual Object Get();
    [RegisterAttribute("thenAccept", "(Lcom/microsoft/appcenter/utils/async/AppCenterConsumer;)V", "GetThenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_Handler:Microsoft.AppCenter.Android.Utils.Async.IAppCenterFutureInvoker, Microsoft.AppCenter")]
public abstract virtual void ThenAccept(IAppCenterConsumer function);
}
[RegisterAttribute("com/microsoft/appcenter/utils/async/AppCenterFuture")]
internal class Microsoft.AppCenter.Android.Utils.Async.IAppCenterFutureInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isDone;
    private IntPtr id_isDone;
    private static Delegate cb_get;
    private IntPtr id_get;
    private static Delegate cb_thenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_;
    private IntPtr id_thenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsDone { get; }
    public IAppCenterFutureInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAppCenterFutureInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IAppCenterFuture GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsDoneHandler();
    private static bool n_IsDone(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsDone();
    private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object Get();
    private static Delegate GetThenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_Handler();
    private static void n_ThenAccept_Lcom_microsoft_appcenter_utils_async_AppCenterConsumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_function);
    public sealed virtual void ThenAccept(IAppCenterConsumer function);
}
internal class Microsoft.AppCenter.AndroidHttpClientAdapter : Object {
    private IHttpNetworkAdapter _httpNetworkAdapter;
    public AndroidHttpClientAdapter(IHttpNetworkAdapter httpNetworkAdapter);
    public sealed virtual IServiceCall CallAsync(string uri, string method, IDictionary`2<string, string> headers, IHttpClientCallTemplate callTemplate, IServiceCallback serviceCallback);
    public sealed virtual void Close();
    public sealed virtual void Reopen();
}
public class Microsoft.AppCenter.AppCenter : object {
    private static string PlatformIdentifier;
    private static string SecretDelimiter;
    private static string PlatformKeyValueDelimiter;
    private static string TargetKeyName;
    private static string TargetKeyNameUpper;
    private static string AppSecretKeyName;
    private static string SecretsPattern;
    private static Regex _secretsRegex;
    private static LogLevel PlatformLogLevel { get; private set; }
    private static bool PlatformIsNetworkRequestsAllowed { get; private set; }
    private static bool PlatformConfigured { get; }
    public static LogLevel LogLevel { get; public set; }
    public static bool IsNetworkRequestsAllowed { get; public set; }
    public static string SdkVersion { get; }
    public static bool Configured { get; }
    private static AppCenter();
    private static LogLevel get_PlatformLogLevel();
    private static void set_PlatformLogLevel(LogLevel value);
    private static bool get_PlatformIsNetworkRequestsAllowed();
    private static void set_PlatformIsNetworkRequestsAllowed(bool value);
    private static void PlatformSetUserId(string userId);
    private static void PlatformSetLogUrl(string logUrl);
    private static void PlatformSetCountryCode(string countryCode);
    private static void PlatformSetDataResidencyRegion(string dataResidencyRegion);
    private static string PlatformGetDataResidencyRegion();
    private static bool get_PlatformConfigured();
    private static void PlatformConfigure(string appSecret);
    private static void PlatformStart(Type[] services);
    private static void PlatformStart(string appSecret, Type[] services);
    private static Task`1<bool> PlatformIsEnabledAsync();
    private static Task PlatformSetEnabledAsync(bool enabled);
    private static Task`1<Nullable`1<Guid>> PlatformGetInstallIdAsync();
    private static Application SetWrapperSdkAndGetApplication();
    private static Class[] GetServices(IEnumerable`1<Type> services);
    internal static void PlatformUnsetInstance();
    private static Task`1<bool> PlatformSetMaxStorageSizeAsync(long sizeInBytes);
    internal static string GetSecretAndTargetForPlatform(string secrets, string platformIdentifier);
    public static LogLevel get_LogLevel();
    public static void set_LogLevel(LogLevel value);
    public static bool get_IsNetworkRequestsAllowed();
    public static void set_IsNetworkRequestsAllowed(bool value);
    public static void SetCountryCode(string countryCode);
    public static void SetDataResidencyRegion(string dataResidencyRegion);
    public static string GetDataResidencyRegion();
    public static void SetUserId(string userId);
    public static string get_SdkVersion();
    public static Task`1<bool> IsEnabledAsync();
    public static Task SetEnabledAsync(bool enabled);
    public static Task`1<Nullable`1<Guid>> GetInstallIdAsync();
    public static void SetLogUrl(string logUrl);
    public static bool get_Configured();
    public static void Configure(string appSecret);
    public static void Start(Type[] services);
    public static void Start(string appSecret, Type[] services);
    public static Task`1<bool> SetMaxStorageSizeAsync(long sizeInBytes);
    internal static void UnsetInstance();
}
public class Microsoft.AppCenter.AppCenterException : Exception {
    public AppCenterException(string message);
    public AppCenterException(string message, Exception innerException);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.AppCenter.AppCenterLog : object {
    public static string LogTag;
    public static void Verbose(string tag, string message);
    public static void Debug(string tag, string message);
    public static void Info(string tag, string message);
    public static void Warn(string tag, string message);
    public static void Error(string tag, string message);
    public static void Assert(string tag, string message);
    [EditorBrowsableAttribute("1")]
public static void Verbose(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Debug(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Info(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Warn(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Error(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Assert(string tag, string message, Exception exception);
    private static string ConcatMessageException(string message, Exception exception);
}
public abstract class Microsoft.AppCenter.AppCenterService : object {
}
internal static class Microsoft.AppCenter.DependencyConfiguration : object {
    private static IHttpNetworkAdapter _httpNetworkAdapter;
    private static IHttpNetworkAdapter PlatformHttpNetworkAdapter { get; private set; }
    internal static IHttpNetworkAdapter HttpNetworkAdapter { get; internal set; }
    private static IHttpNetworkAdapter get_PlatformHttpNetworkAdapter();
    private static void set_PlatformHttpNetworkAdapter(IHttpNetworkAdapter value);
    internal static IHttpNetworkAdapter get_HttpNetworkAdapter();
    internal static void set_HttpNetworkAdapter(IHttpNetworkAdapter value);
}
public class Microsoft.AppCenter.Device : object {
    [CompilerGeneratedAttribute]
private string <SdkName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SdkVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OemName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OsName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OsVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OsBuild>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OsApiLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimeZoneOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CarrierName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CarrierCountry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppBuild>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppNamespace>k__BackingField;
    public string SdkName { get; }
    public string SdkVersion { get; }
    public string Model { get; }
    public string OemName { get; }
    public string OsName { get; }
    public string OsVersion { get; }
    public string OsBuild { get; }
    public Nullable`1<int> OsApiLevel { get; }
    public string Locale { get; }
    public int TimeZoneOffset { get; }
    public string ScreenSize { get; }
    public string AppVersion { get; }
    public string CarrierName { get; }
    public string CarrierCountry { get; }
    public string AppBuild { get; }
    public string AppNamespace { get; }
    public Device(Device device);
    [CompilerGeneratedAttribute]
public string get_SdkName();
    [CompilerGeneratedAttribute]
public string get_SdkVersion();
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
public string get_OemName();
    [CompilerGeneratedAttribute]
public string get_OsName();
    [CompilerGeneratedAttribute]
public string get_OsVersion();
    [CompilerGeneratedAttribute]
public string get_OsBuild();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OsApiLevel();
    [CompilerGeneratedAttribute]
public string get_Locale();
    [CompilerGeneratedAttribute]
public int get_TimeZoneOffset();
    [CompilerGeneratedAttribute]
public string get_ScreenSize();
    [CompilerGeneratedAttribute]
public string get_AppVersion();
    [CompilerGeneratedAttribute]
public string get_CarrierName();
    [CompilerGeneratedAttribute]
public string get_CarrierCountry();
    [CompilerGeneratedAttribute]
public string get_AppBuild();
    [CompilerGeneratedAttribute]
public string get_AppNamespace();
}
internal class Microsoft.AppCenter.HttpException : Exception {
    [CompilerGeneratedAttribute]
private HttpResponse <HttpResponse>k__BackingField;
    internal HttpResponse HttpResponse { get; private set; }
    internal HttpException(HttpResponse httpResponse);
    [CompilerGeneratedAttribute]
internal HttpResponse get_HttpResponse();
    [CompilerGeneratedAttribute]
private void set_HttpResponse(HttpResponse value);
}
internal class Microsoft.AppCenter.HttpResponse : object {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    internal int StatusCode { get; internal set; }
    internal string Content { get; internal set; }
    [CompilerGeneratedAttribute]
internal int get_StatusCode();
    [CompilerGeneratedAttribute]
internal void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
internal string get_Content();
    [CompilerGeneratedAttribute]
internal void set_Content(string value);
}
public interface Microsoft.AppCenter.IAppCenterService {
}
internal interface Microsoft.AppCenter.IHttpNetworkAdapter {
    public abstract virtual Task`1<HttpResponse> SendAsync(string uri, string method, IDictionary`2<string, string> headers, string jsonContent, CancellationToken cancellationToken);
}
public enum Microsoft.AppCenter.LogLevel : Enum {
    public int value__;
    public static LogLevel Verbose;
    public static LogLevel Debug;
    public static LogLevel Info;
    public static LogLevel Warn;
    public static LogLevel Error;
    public static LogLevel Assert;
    public static LogLevel None;
}
internal class Microsoft.AppCenter.NamespaceDoc : object {
}
internal class Microsoft.AppCenter.ServiceCall : Object {
    private CancellationTokenSource _cancellationTokenSource;
    internal ServiceCall(CancellationTokenSource cancellationTokenSource);
    public sealed virtual void Cancel();
}
public class Microsoft.AppCenter.WrapperSdk : object {
    public static string Name;
    internal static string Version;
}
