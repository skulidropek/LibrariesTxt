public class Microsoft.AppCenter.AppCenter : object {
    private static string ErrorMessage;
    [CompilerGeneratedAttribute]
private static LogLevel <PlatformLogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <PlatformIsNetworkRequestsAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <PlatformConfigured>k__BackingField;
    private static string SecretDelimiter;
    private static string PlatformKeyValueDelimiter;
    private static string TargetKeyName;
    private static string TargetKeyNameUpper;
    private static string AppSecretKeyName;
    private static string SecretsPattern;
    private static Regex _secretsRegex;
    private static LogLevel PlatformLogLevel { get; private set; }
    private static bool PlatformIsNetworkRequestsAllowed { get; private set; }
    private static bool PlatformConfigured { get; }
    public static LogLevel LogLevel { get; public set; }
    public static bool IsNetworkRequestsAllowed { get; public set; }
    public static string SdkVersion { get; }
    public static bool Configured { get; }
    private static AppCenter();
    [CompilerGeneratedAttribute]
private static LogLevel get_PlatformLogLevel();
    [CompilerGeneratedAttribute]
private static void set_PlatformLogLevel(LogLevel value);
    [CompilerGeneratedAttribute]
private static bool get_PlatformIsNetworkRequestsAllowed();
    [CompilerGeneratedAttribute]
private static void set_PlatformIsNetworkRequestsAllowed(bool value);
    private static Task`1<bool> PlatformIsEnabledAsync();
    private static Task PlatformSetEnabledAsync(bool enabled);
    private static Task`1<Nullable`1<Guid>> PlatformGetInstallIdAsync();
    private static void PlatformSetLogUrl(string logUrl);
    private static void PlatformSetUserId(string userId);
    private static void PlatformSetCountryCode(string countryCode);
    private static void PlatformSetDataResidencyRegion(string dataResidencyRegion);
    private static string PlatformGetDataResidencyRegion();
    [CompilerGeneratedAttribute]
private static bool get_PlatformConfigured();
    private static void PlatformConfigure(string appSecret);
    private static void PlatformStart(Type[] services);
    private static void PlatformStart(string appSecret, Type[] services);
    private static Task`1<bool> PlatformSetMaxStorageSizeAsync(long sizeInBytes);
    internal static void PlatformUnsetInstance();
    internal static string GetSecretAndTargetForPlatform(string secrets, string platformIdentifier);
    public static LogLevel get_LogLevel();
    public static void set_LogLevel(LogLevel value);
    public static bool get_IsNetworkRequestsAllowed();
    public static void set_IsNetworkRequestsAllowed(bool value);
    public static void SetCountryCode(string countryCode);
    public static void SetDataResidencyRegion(string dataResidencyRegion);
    public static string GetDataResidencyRegion();
    public static void SetUserId(string userId);
    public static string get_SdkVersion();
    public static Task`1<bool> IsEnabledAsync();
    public static Task SetEnabledAsync(bool enabled);
    public static Task`1<Nullable`1<Guid>> GetInstallIdAsync();
    public static void SetLogUrl(string logUrl);
    public static bool get_Configured();
    public static void Configure(string appSecret);
    public static void Start(Type[] services);
    public static void Start(string appSecret, Type[] services);
    public static Task`1<bool> SetMaxStorageSizeAsync(long sizeInBytes);
    internal static void UnsetInstance();
}
public class Microsoft.AppCenter.AppCenterException : Exception {
    public AppCenterException(string message);
    public AppCenterException(string message, Exception innerException);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.AppCenter.AppCenterLog : object {
    [EditorBrowsableAttribute("1")]
public static string LogTag;
    [EditorBrowsableAttribute("1")]
public static void Verbose(string tag, string message);
    [EditorBrowsableAttribute("1")]
public static void Debug(string tag, string message);
    [EditorBrowsableAttribute("1")]
public static void Info(string tag, string message);
    [EditorBrowsableAttribute("1")]
public static void Warn(string tag, string message);
    [EditorBrowsableAttribute("1")]
public static void Error(string tag, string message);
    [EditorBrowsableAttribute("1")]
public static void Assert(string tag, string message);
    [EditorBrowsableAttribute("1")]
public static void Verbose(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Debug(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Info(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Warn(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Error(string tag, string message, Exception exception);
    [EditorBrowsableAttribute("1")]
public static void Assert(string tag, string message, Exception exception);
    private static string ConcatMessageException(string message, Exception exception);
}
public abstract class Microsoft.AppCenter.AppCenterService : object {
}
internal static class Microsoft.AppCenter.DependencyConfiguration : object {
    [CompilerGeneratedAttribute]
private static IHttpNetworkAdapter <PlatformHttpNetworkAdapter>k__BackingField;
    private static IHttpNetworkAdapter PlatformHttpNetworkAdapter { get; private set; }
    internal static IHttpNetworkAdapter HttpNetworkAdapter { get; internal set; }
    [CompilerGeneratedAttribute]
private static IHttpNetworkAdapter get_PlatformHttpNetworkAdapter();
    [CompilerGeneratedAttribute]
private static void set_PlatformHttpNetworkAdapter(IHttpNetworkAdapter value);
    internal static IHttpNetworkAdapter get_HttpNetworkAdapter();
    internal static void set_HttpNetworkAdapter(IHttpNetworkAdapter value);
}
public class Microsoft.AppCenter.Device : object {
    [CompilerGeneratedAttribute]
private string <SdkName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SdkVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OemName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OsName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OsVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OsBuild>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OsApiLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimeZoneOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CarrierName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CarrierCountry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppBuild>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppNamespace>k__BackingField;
    public string SdkName { get; }
    public string SdkVersion { get; }
    public string Model { get; }
    public string OemName { get; }
    public string OsName { get; }
    public string OsVersion { get; }
    public string OsBuild { get; }
    public Nullable`1<int> OsApiLevel { get; }
    public string Locale { get; }
    public int TimeZoneOffset { get; }
    public string ScreenSize { get; }
    public string AppVersion { get; }
    public string CarrierName { get; }
    public string CarrierCountry { get; }
    public string AppBuild { get; }
    public string AppNamespace { get; }
    [CompilerGeneratedAttribute]
public string get_SdkName();
    [CompilerGeneratedAttribute]
public string get_SdkVersion();
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
public string get_OemName();
    [CompilerGeneratedAttribute]
public string get_OsName();
    [CompilerGeneratedAttribute]
public string get_OsVersion();
    [CompilerGeneratedAttribute]
public string get_OsBuild();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OsApiLevel();
    [CompilerGeneratedAttribute]
public string get_Locale();
    [CompilerGeneratedAttribute]
public int get_TimeZoneOffset();
    [CompilerGeneratedAttribute]
public string get_ScreenSize();
    [CompilerGeneratedAttribute]
public string get_AppVersion();
    [CompilerGeneratedAttribute]
public string get_CarrierName();
    [CompilerGeneratedAttribute]
public string get_CarrierCountry();
    [CompilerGeneratedAttribute]
public string get_AppBuild();
    [CompilerGeneratedAttribute]
public string get_AppNamespace();
}
internal class Microsoft.AppCenter.HttpException : Exception {
    [CompilerGeneratedAttribute]
private HttpResponse <HttpResponse>k__BackingField;
    internal HttpResponse HttpResponse { get; private set; }
    internal HttpException(HttpResponse httpResponse);
    [CompilerGeneratedAttribute]
internal HttpResponse get_HttpResponse();
    [CompilerGeneratedAttribute]
private void set_HttpResponse(HttpResponse value);
}
internal class Microsoft.AppCenter.HttpResponse : object {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    internal int StatusCode { get; internal set; }
    internal string Content { get; internal set; }
    [CompilerGeneratedAttribute]
internal int get_StatusCode();
    [CompilerGeneratedAttribute]
internal void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
internal string get_Content();
    [CompilerGeneratedAttribute]
internal void set_Content(string value);
}
public interface Microsoft.AppCenter.IAppCenterService {
}
internal interface Microsoft.AppCenter.IHttpNetworkAdapter {
    public abstract virtual Task`1<HttpResponse> SendAsync(string uri, string method, IDictionary`2<string, string> headers, string jsonContent, CancellationToken cancellationToken);
}
public enum Microsoft.AppCenter.LogLevel : Enum {
    public int value__;
    public static LogLevel Verbose;
    public static LogLevel Debug;
    public static LogLevel Info;
    public static LogLevel Warn;
    public static LogLevel Error;
    public static LogLevel Assert;
    public static LogLevel None;
}
internal class Microsoft.AppCenter.NamespaceDoc : object {
}
public class Microsoft.AppCenter.WrapperSdk : object {
    public static string Name;
    internal static string Version;
}
