internal static class AssemblyInfo : object {
    public static string PublicKey;
    public static string MoqPublicKey;
}
internal class Microsoft.ApplicationInsights.Implementation.SdkVersionUtils : object {
    internal static string GetSdkVersion(string versionPrefix);
}
public class Microsoft.ApplicationInsights.Log4NetAppender.ApplicationInsightsAppender : AppenderSkeleton {
    private TelemetryClient telemetryClient;
    [CompilerGeneratedAttribute]
private string <InstrumentationKey>k__BackingField;
    public string InstrumentationKey { get; public set; }
    internal TelemetryClient TelemetryClient { get; }
    protected bool RequiresLayout { get; }
    [CompilerGeneratedAttribute]
public string get_InstrumentationKey();
    [CompilerGeneratedAttribute]
public void set_InstrumentationKey(string value);
    internal TelemetryClient get_TelemetryClient();
    protected virtual bool get_RequiresLayout();
    public virtual void ActivateOptions();
    public virtual bool Flush(int millisecondsTimeout);
    protected virtual void Append(LoggingEvent loggingEvent);
    private static void AddLoggingEventProperty(string key, string value, IDictionary`2<string, string> metaData);
    private static void BuildCustomProperties(LoggingEvent loggingEvent, ITelemetry trace);
    private static Nullable`1<SeverityLevel> GetSeverityLevel(Level logginEventLevel);
    private void SendException(LoggingEvent loggingEvent);
    private void SendTrace(LoggingEvent loggingEvent);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
