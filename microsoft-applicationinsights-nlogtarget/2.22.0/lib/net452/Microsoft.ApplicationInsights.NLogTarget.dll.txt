internal static class AssemblyInfo : object {
    public static string PublicKey;
    public static string MoqPublicKey;
}
internal class Microsoft.ApplicationInsights.Implementation.SdkVersionUtils : object {
    internal static string GetSdkVersion(string versionPrefix);
}
[TargetAttribute("ApplicationInsightsTarget")]
public class Microsoft.ApplicationInsights.NLogTarget.ApplicationInsightsTarget : TargetWithLayout {
    private TelemetryClient telemetryClient;
    private DateTime lastLogEventTime;
    private Layout instrumentationKeyLayout;
    [CompilerGeneratedAttribute]
private IList`1<TargetPropertyWithContext> <ContextProperties>k__BackingField;
    public string InstrumentationKey { get; public set; }
    [ArrayParameterAttribute("Microsoft.ApplicationInsights.NLogTarget.TargetPropertyWithContext", "contextproperty")]
public IList`1<TargetPropertyWithContext> ContextProperties { get; }
    internal TelemetryClient TelemetryClient { get; }
    public string get_InstrumentationKey();
    public void set_InstrumentationKey(string value);
    [CompilerGeneratedAttribute]
public IList`1<TargetPropertyWithContext> get_ContextProperties();
    internal TelemetryClient get_TelemetryClient();
    internal void BuildPropertyBag(LogEventInfo logEvent, ITelemetry trace);
    protected virtual void InitializeTarget();
    protected virtual void Write(LogEventInfo logEvent);
    protected virtual void FlushAsync(AsyncContinuation asyncContinuation);
    private static void LoadLogEventProperties(LogEventInfo logEvent, IDictionary`2<string, string> propertyBag);
    private static void PopulatePropertyBag(IDictionary`2<string, string> propertyBag, string key, object valueObj);
    private static Nullable`1<SeverityLevel> GetSeverityLevel(LogLevel logEventLevel);
    private void SendException(LogEventInfo logEvent);
    private void SendTrace(LogEventInfo logEvent);
}
[NLogConfigurationItemAttribute]
[ThreadAgnosticAttribute]
public class Microsoft.ApplicationInsights.NLogTarget.TargetPropertyWithContext : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Layout <Layout>k__BackingField;
    [RequiredParameterAttribute]
public string Name { get; public set; }
    [RequiredParameterAttribute]
public Layout Layout { get; public set; }
    public TargetPropertyWithContext(string name, Layout layout);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Layout get_Layout();
    [CompilerGeneratedAttribute]
public void set_Layout(Layout value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
