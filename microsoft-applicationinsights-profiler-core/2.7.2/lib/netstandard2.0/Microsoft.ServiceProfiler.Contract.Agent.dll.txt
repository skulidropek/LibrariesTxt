public class Microsoft.ServiceProfiler.Contract.Agent.AcceptedArtifactResponse : CommittedArtifact {
    [CompilerGeneratedAttribute]
private string <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StampId>k__BackingField;
    public string CorrelationId { get; public set; }
    public string StampId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(string value);
    [CompilerGeneratedAttribute]
public string get_StampId();
    [CompilerGeneratedAttribute]
public void set_StampId(string value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.AppProfileResponse : object {
    [CompilerGeneratedAttribute]
private Guid <AppId>k__BackingField;
    public Guid AppId { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(Guid value);
}
public enum Microsoft.ServiceProfiler.Contract.Agent.ArtifactKind : Enum {
    public int value__;
    public static ArtifactKind Profile;
    public static ArtifactKind PrecomputedETL;
    public static ArtifactKind TraceAggregation;
    public static ArtifactKind Dump;
    public static ArtifactKind Symbol;
}
public class Microsoft.ServiceProfiler.Contract.Agent.BlobAccessPass : StampBlobUri {
    [CompilerGeneratedAttribute]
private string <SASToken>k__BackingField;
    public string SASToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SASToken();
    [CompilerGeneratedAttribute]
public void set_SASToken(string value);
}
[ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static class Microsoft.ServiceProfiler.Contract.Agent.BlobAccessPassExtensions : object {
    [ExtensionAttribute]
public static Uri GetUriWithSASToken(BlobAccessPass blobAccessPass);
}
public static class Microsoft.ServiceProfiler.Contract.Agent.BlobMetadata : object {
    public static string GetDataCubeNameString(Guid dataCube);
    public static string GetArtifactIdString(Guid artifactId);
}
public static class Microsoft.ServiceProfiler.Contract.Agent.BlobMetadataConstants : object {
    public static string DataCubeMetaName;
    public static string MachineNameMetaName;
    public static string StartTimeMetaName;
    public static string ApprovalTimeMetaName;
    public static string ProgrammingLanguageMetaName;
    public static string OSPlatformMetaName;
    public static string TraceFileFormatMetaName;
    public static string QuarantineUntil;
    public static string EtlActivities;
    public static string DumpType;
    public static string ProcessorArch;
    public static string ArtifactId;
    public static string RelatedArtifactId;
    public static string AgentVersion;
    public static string TriggerType;
    public static string TriggerDescription;
    public static string TriggerTime;
    public static string TriggerDuration;
    public static string Experiments;
    public static string ProcessId;
    public static string ProcessStartTime;
    public static string Provenance;
    public static string RoleName;
}
public class Microsoft.ServiceProfiler.Contract.Agent.CommittedArtifact : object {
    [CompilerGeneratedAttribute]
private DateTime <AcceptedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BlobUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ArtifactLocationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <DownloadUri>k__BackingField;
    public DateTime AcceptedTime { get; public set; }
    public Uri BlobUri { get; public set; }
    public string ArtifactLocationId { get; public set; }
    public Uri DownloadUri { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_AcceptedTime();
    [CompilerGeneratedAttribute]
public void set_AcceptedTime(DateTime value);
    [CompilerGeneratedAttribute]
public Uri get_BlobUri();
    [CompilerGeneratedAttribute]
public void set_BlobUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_ArtifactLocationId();
    [CompilerGeneratedAttribute]
public void set_ArtifactLocationId(string value);
    [CompilerGeneratedAttribute]
public Uri get_DownloadUri();
    [CompilerGeneratedAttribute]
public void set_DownloadUri(Uri value);
}
public interface Microsoft.ServiceProfiler.Contract.Agent.IConfigContract {
    public DateTimeOffset LastModified { get; public set; }
    public abstract virtual DateTimeOffset get_LastModified();
    public abstract virtual void set_LastModified(DateTimeOffset value);
}
public static class Microsoft.ServiceProfiler.Contract.Agent.IngestionMetadataConstants : object {
    public static string AverageCPUUsage;
    public static string AverageMemoryUsage;
}
public static class Microsoft.ServiceProfiler.Contract.Agent.LeaseNamespaces : object {
    public static string Profiler;
}
public class Microsoft.ServiceProfiler.Contract.Agent.PDBFileContract : PDBSignature {
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastWriteTime>k__BackingField;
    public DateTimeOffset LastWriteTime { get; public set; }
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastWriteTime();
    [CompilerGeneratedAttribute]
public void set_LastWriteTime(DateTimeOffset value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.PDBFileUploadContract : object {
    [CompilerGeneratedAttribute]
private PDBFileContract <PDBFile>k__BackingField;
    [CompilerGeneratedAttribute]
private BlobAccessPass <Pass>k__BackingField;
    public PDBFileContract PDBFile { get; public set; }
    public BlobAccessPass Pass { get; public set; }
    [CompilerGeneratedAttribute]
public PDBFileContract get_PDBFile();
    [CompilerGeneratedAttribute]
public void set_PDBFile(PDBFileContract value);
    [CompilerGeneratedAttribute]
public BlobAccessPass get_Pass();
    [CompilerGeneratedAttribute]
public void set_Pass(BlobAccessPass value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.PDBSignature : object {
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Age>k__BackingField;
    public string FileName { get; public set; }
    public Guid Signature { get; public set; }
    public UInt32 Age { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public Guid get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(Guid value);
    [CompilerGeneratedAttribute]
public UInt32 get_Age();
    [CompilerGeneratedAttribute]
public void set_Age(UInt32 value);
    public sealed virtual bool Equals(PDBSignature other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Microsoft.ServiceProfiler.Contract.Agent.StampBlobUri : object {
    [CompilerGeneratedAttribute]
private Uri <BlobUri>k__BackingField;
    public Uri BlobUri { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_BlobUri();
    [CompilerGeneratedAttribute]
public void set_BlobUri(Uri value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.SymbolBatchCommitRequest : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<SymbolCommitRequest> <Values>k__BackingField;
    public IEnumerable`1<SymbolCommitRequest> Values { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<SymbolCommitRequest> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IEnumerable`1<SymbolCommitRequest> value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.SymbolBatchCommitResponse : object {
    [CompilerGeneratedAttribute]
private string <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StampId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<CommittedArtifact> <Artifacts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Errors>k__BackingField;
    public string CorrelationId { get; public set; }
    public string StampId { get; public set; }
    public IEnumerable`1<CommittedArtifact> Artifacts { get; public set; }
    public string Errors { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(string value);
    [CompilerGeneratedAttribute]
public string get_StampId();
    [CompilerGeneratedAttribute]
public void set_StampId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<CommittedArtifact> get_Artifacts();
    [CompilerGeneratedAttribute]
public void set_Artifacts(IEnumerable`1<CommittedArtifact> value);
    [CompilerGeneratedAttribute]
public string get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(string value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.SymbolBatchGetTokenRequest : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<PDBSignature> <Signatures>k__BackingField;
    public IEnumerable`1<PDBSignature> Signatures { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<PDBSignature> get_Signatures();
    [CompilerGeneratedAttribute]
public void set_Signatures(IEnumerable`1<PDBSignature> value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.SymbolBatchGetTokenResponse : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<SymbolUploadToken> <Tokens>k__BackingField;
    public IEnumerable`1<SymbolUploadToken> Tokens { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<SymbolUploadToken> get_Tokens();
    [CompilerGeneratedAttribute]
public void set_Tokens(IEnumerable`1<SymbolUploadToken> value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.SymbolCommitRequest : object {
    [CompilerGeneratedAttribute]
private PDBSignature <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    public PDBSignature Signature { get; public set; }
    public string ETag { get; public set; }
    [CompilerGeneratedAttribute]
public PDBSignature get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(PDBSignature value);
    [CompilerGeneratedAttribute]
public string get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(string value);
}
public class Microsoft.ServiceProfiler.Contract.Agent.SymbolUploadToken : object {
    [CompilerGeneratedAttribute]
private PDBSignature <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Location>k__BackingField;
    public PDBSignature Signature { get; public set; }
    public Uri Location { get; public set; }
    [CompilerGeneratedAttribute]
public PDBSignature get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(PDBSignature value);
    [CompilerGeneratedAttribute]
public Uri get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Uri value);
}
public static class Microsoft.ServiceProfiler.Contract.Agent.TimestampContract : object {
    public static DateTime MinDateTimeUTC;
    public static DateTimeOffset MinDateTimeOffsetUTC;
    private static TimestampContract();
    public static string TimestampToString(DateTimeOffset timestamp);
    public static bool TryParseUTCTimestamp(string timestampStr, DateTimeOffset& timestampUTC, bool throwIfInvalid);
    public static string I8601TimeInterval(TimeSpan timeSpan);
}
public static class Microsoft.ServiceProfiler.Contract.Agent.XmsHeaderNames : object {
    public static string LeaseAction;
    public static string LeaseDuration;
    public static string LeaseId;
    public static string StampId;
    public static string MetaKeyPrefix;
}
internal class Microsoft.ServiceProfiler.Contract.ArtifactLocationFullStringV1Parser : ArtifactLocationPrefixStringV1Parser {
    public virtual bool TryParse(string input, ArtifactLocationProperties& properties);
    private static bool TryParseActivityIdentifier(string input, ArtifactLocationProperties properties);
    public static string ToString(ArtifactLocationProperties properties);
}
internal class Microsoft.ServiceProfiler.Contract.ArtifactLocationFullStringV2Parser : ArtifactLocationPrefixStringV2Parser {
    public virtual bool TryParse(string input, ArtifactLocationProperties& properties);
    public static string ToString(ArtifactLocationProperties properties);
}
internal abstract class Microsoft.ServiceProfiler.Contract.ArtifactLocationParserBase : object {
    protected static char DelimiterChar;
    public abstract virtual bool TryParse(string input, ArtifactLocationProperties& properties);
    [IteratorStateMachineAttribute("Microsoft.ServiceProfiler.Contract.ArtifactLocationParserBase/<Tokenize>d__1")]
protected static IEnumerable`1<ValueTuple`2<int, int>> Tokenize(string input);
    protected static int TokenCount(string input);
}
internal class Microsoft.ServiceProfiler.Contract.ArtifactLocationPrefixStringV1Parser : ArtifactLocationParserBase {
    protected static string V1Prefix;
    public virtual bool TryParse(string input, ArtifactLocationProperties& properties);
    protected static bool TryParseSessionIdentifier(string input, ArtifactLocationProperties& properties);
    protected static bool HasV1Prefix(string input);
}
internal class Microsoft.ServiceProfiler.Contract.ArtifactLocationPrefixStringV2Parser : ArtifactLocationParserBase {
    protected static string V2Prefix;
    public virtual bool TryParse(string input, ArtifactLocationProperties& properties);
    protected static bool TryParseArtifactReference(IEnumerator`1<string> it, ArtifactLocationProperties& properties);
    public static string ToString(ArtifactLocationProperties properties);
    protected static bool HasV2Prefix(string input);
}
public class Microsoft.ServiceProfiler.Contract.ArtifactLocationProperties : object {
    private static ArtifactLocationParserBase[] s_parserCollection;
    [CompilerGeneratedAttribute]
private string <StampID>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MachineName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProcessID>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <EtlFileSessionID>k__BackingField;
    [CompilerGeneratedAttribute]
private ArtifactKind <ArtifactKind>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ArtifactId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Extension>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActivityID>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ActivityStartTimeUTC>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ActivityStopTimeUTC>k__BackingField;
    internal static string Version1Identifier;
    internal static string Version2Identifier;
    internal static char Delimiter;
    internal static string DelimiterAsString;
    public string StampID { get; public set; }
    public Guid AppId { get; public set; }
    public string MachineName { get; public set; }
    public int ProcessID { get; public set; }
    public DateTimeOffset EtlFileSessionID { get; public set; }
    public ArtifactKind ArtifactKind { get; public set; }
    public Guid ArtifactId { get; public set; }
    public string Extension { get; public set; }
    [IgnoreDataMemberAttribute]
public string ExtensionForSerialization { get; }
    public string ActivityID { get; public set; }
    public DateTimeOffset ActivityStartTimeUTC { get; public set; }
    public DateTimeOffset ActivityStopTimeUTC { get; public set; }
    [IgnoreDataMemberAttribute]
public bool IsGenericArtifactReference { get; }
    [IgnoreDataMemberAttribute]
public bool HasActivity { get; }
    public ArtifactLocationProperties(string stampID, Guid appId, string machineName, int processID, string activityID, DateTimeOffset etlStartTime, DateTimeOffset activityStartTime, DateTimeOffset activityStopTime);
    public ArtifactLocationProperties(ArtifactReference artifactReference, string stampId);
    private static ArtifactLocationProperties();
    public ArtifactLocationProperties WithActivity(int processId, string activityId, DateTimeOffset activityStartTime, DateTimeOffset activityStopTime);
    public static ArtifactLocationProperties FromString(string input);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public string get_StampID();
    [CompilerGeneratedAttribute]
public void set_StampID(string value);
    [CompilerGeneratedAttribute]
public Guid get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(Guid value);
    [CompilerGeneratedAttribute]
public string get_MachineName();
    [CompilerGeneratedAttribute]
public void set_MachineName(string value);
    [CompilerGeneratedAttribute]
public int get_ProcessID();
    [CompilerGeneratedAttribute]
public void set_ProcessID(int value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_EtlFileSessionID();
    [CompilerGeneratedAttribute]
public void set_EtlFileSessionID(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public ArtifactKind get_ArtifactKind();
    [CompilerGeneratedAttribute]
public void set_ArtifactKind(ArtifactKind value);
    [CompilerGeneratedAttribute]
public Guid get_ArtifactId();
    [CompilerGeneratedAttribute]
public void set_ArtifactId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Extension();
    [CompilerGeneratedAttribute]
public void set_Extension(string value);
    public string get_ExtensionForSerialization();
    [CompilerGeneratedAttribute]
public string get_ActivityID();
    [CompilerGeneratedAttribute]
public void set_ActivityID(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ActivityStartTimeUTC();
    [CompilerGeneratedAttribute]
public void set_ActivityStartTimeUTC(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ActivityStopTimeUTC();
    [CompilerGeneratedAttribute]
public void set_ActivityStopTimeUTC(DateTimeOffset value);
    public bool get_IsGenericArtifactReference();
    public bool get_HasActivity();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private static int NullSafeGetHashCode(string s);
}
public class Microsoft.ServiceProfiler.Contract.ArtifactReference : object {
    [CompilerGeneratedAttribute]
private ArtifactKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ArtifactId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Extension>k__BackingField;
    public ArtifactKind Kind { get; public set; }
    public Guid AppId { get; public set; }
    public Guid ArtifactId { get; public set; }
    public string Extension { get; public set; }
    [CompilerGeneratedAttribute]
public ArtifactKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(ArtifactKind value);
    [CompilerGeneratedAttribute]
public Guid get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ArtifactId();
    [CompilerGeneratedAttribute]
public void set_ArtifactId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Extension();
    [CompilerGeneratedAttribute]
public void set_Extension(string value);
    public static ArtifactReference FromArtifactLocationProperties(ArtifactLocationProperties locationProperties);
}
public static class Microsoft.ServiceProfiler.Contract.DataContract.Utilities.HashingUtilities : object {
    public static int Djb2(string input);
}
public static class Microsoft.ServiceProfiler.Contract.FrontendEndpoints : object {
    public static string ProdGlobal;
    public static string TestGlobal;
}
public static class Microsoft.ServiceProfiler.Contract.MachineNameContract : object {
    public static string CheckAndSanitizeMachineName(string input, bool throwIfInvalid);
}
public abstract class Microsoft.ServiceProfiler.Contract.MergeableOptions`1 : object {
    public abstract virtual T Merge(T other);
    protected bool MergeIfNotDefault(TValue defaultValue, TValue otherValue, Action`1<TValue> setAction);
}
public static class Microsoft.ServiceProfiler.Contract.OSPlatforms : object {
    public static string Windows;
    public static string OSX;
    public static string Linux;
}
public static class Microsoft.ServiceProfiler.Contract.ProgramLanguages : object {
    public static string CSharp;
    public static string Java;
}
public class Microsoft.ServiceProfiler.Contract.Shell.BooleanShellArgument`1 : ShellArgument`2<T, bool> {
    public BooleanShellArgument`1(string match, string help, Action`2<T, bool> setter);
    public virtual void Mutate(T toMutate);
}
public class Microsoft.ServiceProfiler.Contract.Shell.MultiValueShellArgument`2 : ShellArgument`2<TSetting, TValue> {
    public MultiValueShellArgument`2(string match, string help, Action`2<TSetting, IEnumerable`1<TValue>> setter);
    public virtual void Mutate(TSetting toMutate);
}
public class Microsoft.ServiceProfiler.Contract.Shell.ShellArgument : object {
    [CompilerGeneratedAttribute]
private bool <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Argument>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Help>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Unrecognized>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExpectsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExpectsMultipleValues>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ShellValue> <Values>k__BackingField;
    public bool Active { get; public set; }
    public string Argument { get; public set; }
    public string Help { get; }
    public bool Unrecognized { get; public set; }
    public bool ExpectsValue { get; public set; }
    public bool ExpectsMultipleValues { get; public set; }
    public List`1<ShellValue> Values { get; }
    public ShellArgument(string argumentMatch, string help);
    [CompilerGeneratedAttribute]
public bool get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(bool value);
    [CompilerGeneratedAttribute]
public string get_Argument();
    [CompilerGeneratedAttribute]
public void set_Argument(string value);
    [CompilerGeneratedAttribute]
public string get_Help();
    [CompilerGeneratedAttribute]
public bool get_Unrecognized();
    [CompilerGeneratedAttribute]
public void set_Unrecognized(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExpectsValue();
    [CompilerGeneratedAttribute]
public void set_ExpectsValue(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExpectsMultipleValues();
    [CompilerGeneratedAttribute]
public void set_ExpectsMultipleValues(bool value);
    [CompilerGeneratedAttribute]
public List`1<ShellValue> get_Values();
    public void Add(ShellValue value);
    public void Reset();
    public string GetShellCommand(bool includeValues);
    public string GetHelpText();
}
public abstract class Microsoft.ServiceProfiler.Contract.Shell.ShellArgument`1 : ShellArgument {
    public ShellArgument`1(string match, string help);
    public abstract virtual void Mutate(T toMutate);
}
public abstract class Microsoft.ServiceProfiler.Contract.Shell.ShellArgument`2 : ShellArgument`1<TSetting> {
    private Action`2<TSetting, bool> _booleanSetter;
    private Action`2<TSetting, TValue> _setter;
    private Action`2<TSetting, IEnumerable`1<TValue>> _multiSetter;
    public ShellArgument`2(string match, string help, Action`2<TSetting, bool> setter);
    public ShellArgument`2(string match, string help, Action`2<TSetting, TValue> setter);
    public ShellArgument`2(string match, string help, Action`2<TSetting, IEnumerable`1<TValue>> setter);
    protected void MutateBoolean(TSetting toMutate);
    protected void MutateSingle(TSetting toMutate);
    protected void MutateMultiple(TSetting toMutate);
}
public class Microsoft.ServiceProfiler.Contract.Shell.ShellArgumentException : Exception {
    [CompilerGeneratedAttribute]
private ShellArgument <ShellArgument>k__BackingField;
    public ShellArgument ShellArgument { get; }
    public ShellArgumentException(string message, ShellArgument shellArgument);
    [CompilerGeneratedAttribute]
public ShellArgument get_ShellArgument();
}
public class Microsoft.ServiceProfiler.Contract.Shell.ShellArgumentExpectsValueException : ShellArgumentException {
    public ShellArgumentExpectsValueException(string message, ShellArgument shellArgument);
}
public abstract class Microsoft.ServiceProfiler.Contract.Shell.ShellMergeableOptions`1 : MergeableOptions`1<T> {
    public abstract virtual ShellArgument[] GetShellArguments();
}
public class Microsoft.ServiceProfiler.Contract.Shell.ShellParser : object {
    private ShellArgument[] _shellArguments;
    public ShellParser(ShellArgument[] shellArguments);
    public Dictionary`2<string, ShellArgument> Parse(string command);
    public Dictionary`2<string, ShellArgument> Parse(IEnumerable`1<string> args);
    public static object GetShellObject(string arg, Dictionary`2<string, ShellArgument> registeredArguments);
}
public static class Microsoft.ServiceProfiler.Contract.Shell.ShellParserFactory : object {
    public static bool TryParseArgumentsWithVerb(String[] args, String& verb, T& options);
    public static bool TryParseArguments(IEnumerable`1<string> args, T& options);
    public static void OutputHelpToConsole();
}
public class Microsoft.ServiceProfiler.Contract.Shell.ShellValue : object {
    [CompilerGeneratedAttribute]
private string <StringValue>k__BackingField;
    public string StringValue { get; }
    public ShellValue(string value);
    [CompilerGeneratedAttribute]
public string get_StringValue();
    public bool TryGet(T& val);
}
public class Microsoft.ServiceProfiler.Contract.Shell.SingleValueShellArgument`2 : ShellArgument`2<TSetting, TValue> {
    public SingleValueShellArgument`2(string match, string help, Action`2<TSetting, TValue> setter);
    public virtual void Mutate(TSetting toMutate);
}
public class Microsoft.ServiceProfiler.Contract.Shell.UnrecognizedShellArgumentException : ShellArgumentException {
    public UnrecognizedShellArgumentException(string message, ShellArgument shellArgument);
}
public static class Microsoft.ServiceProfiler.Contract.StoragePathContract : object {
    private static int NumPartitions;
    private static string PartitionFormatString;
    private static String[] s_partitions;
    private static string CustomerManagedStorageStampIdSuffix;
    private static int MaximumExtensionLength;
    [CompilerGeneratedAttribute]
private static int <DataCubeBlobCommonPathLength>k__BackingField;
    public static int DataCubeBlobCommonPathLength { get; }
    private static StoragePathContract();
    public static string GetDataCubeNameString(Guid dataCube);
    public static string GetArtifactIdString(Guid artifactId);
    public static Nullable`1<Guid> ParseDataCube(string input);
    public static string GetBlobContainerName(ArtifactKind artifactKind);
    public static string ExtensionFromArtifactKind(ArtifactKind artifactKind);
    public static string GetEtlBlobContainerName();
    public static string GetPrecomputedEtlBlobContainerName();
    public static string GetDumpBlobContainerName();
    public static string GetPDBBlobContainerName();
    public static string GetTasBlobContainerName();
    public static string GetDataCubeBlobCommonPath(Guid dataCube);
    public static string GetDataCubeBlobDatePartitionPath(Guid dataCube, DateTime dateTime);
    public static string GetGenericBlobName(ArtifactReference artifact);
    public static string GetGenericBlobName(Guid dataCube, Guid artifactId, string extension);
    public static string GetETLBlobName(Guid dataCube, string machineName, DateTimeOffset sessionId);
    public static string GetETLBlobName(ArtifactLocationProperties traceLocationProperties);
    public static string GetETLBlobFilename(DateTimeOffset sessionId);
    public static string GetEtlBlobAbsolutePath(Guid dataCube, string machineName, DateTimeOffset startTime);
    public static string GetPrecomputedEtlBasePath(ArtifactLocationProperties traceLocationProperties);
    public static string GetDumpBlobName(Guid dataCube, Guid snapshotId);
    public static string GetDumpBlobAbsolutePath(Guid dataCube, Guid snapshotId);
    public static string GetTasDateDirectoryPath(Guid dataCube, DateTime date);
    public static string GetDatePath(DateTime date);
    public static string GetPDBBlobName(Guid dataCube, PDBSignature pdbFile);
    public static string GetPDBBlobAbsolutePath(Guid dataCube, PDBSignature pdbFile);
    public static string GetPDBRootPath(Guid dataCube);
    public static string GetCustomerManagedStorageStampId(string location);
    public static bool IsCustomerManagedStorageStampId(string stampId);
    public static string GetCustomerManagedStorageLocationFromStampId(string stampId);
    public static void ValidateExtension(string extension);
    public static string GetLockBlobName(Guid dataCube, string leaseNamespace, int lockNumber);
    private static string GetPartitionNameForGuid(Guid dataCubeGuid);
    private static String[] CreatePartitions(int count, string format);
    [CompilerGeneratedAttribute]
public static int get_DataCubeBlobCommonPathLength();
}
public class Microsoft.ServiceProfiler.DataContract.Agent.Settings.AgentSettings : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstrumentationKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppInsightsEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private RuntimeEnvironment <RuntimeEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrontEndEndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private GeneralSettings <General>k__BackingField;
    [CompilerGeneratedAttribute]
private EngineSettings <Engine>k__BackingField;
    public bool Enabled { get; public set; }
    public string InstrumentationKey { get; public set; }
    public string AppInsightsEndpoint { get; public set; }
    public RuntimeEnvironment RuntimeEnvironment { get; public set; }
    public string FrontEndEndPoint { get; public set; }
    public GeneralSettings General { get; public set; }
    public EngineSettings Engine { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_InstrumentationKey();
    [CompilerGeneratedAttribute]
public void set_InstrumentationKey(string value);
    [CompilerGeneratedAttribute]
public string get_AppInsightsEndpoint();
    [CompilerGeneratedAttribute]
public void set_AppInsightsEndpoint(string value);
    [CompilerGeneratedAttribute]
public RuntimeEnvironment get_RuntimeEnvironment();
    [CompilerGeneratedAttribute]
public void set_RuntimeEnvironment(RuntimeEnvironment value);
    [CompilerGeneratedAttribute]
public string get_FrontEndEndPoint();
    [CompilerGeneratedAttribute]
public void set_FrontEndEndPoint(string value);
    [CompilerGeneratedAttribute]
public GeneralSettings get_General();
    [CompilerGeneratedAttribute]
public void set_General(GeneralSettings value);
    [CompilerGeneratedAttribute]
public EngineSettings get_Engine();
    [CompilerGeneratedAttribute]
public void set_Engine(EngineSettings value);
}
public class Microsoft.ServiceProfiler.DataContract.Settings.CpuTriggerSettings : MergeableOptions`1<CpuTriggerSettings> {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private float <CpuThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CpuAverageWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CpuRollingHistorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CpuRollingHistoryInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CpuTriggerCooldownInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CpuTriggerProfilingDurationInSeconds>k__BackingField;
    public static bool DEFAULT_CPU_TRIGGER_ENABLED;
    public static int DEFAULT_CPU_THRESHOLD;
    public static int DEFAULT_CPU_AVERAGE_WINDOW;
    public static int DEFAULT_CPU_ROLLING_HISTORY_SIZE;
    public static int DEFAULT_CPU_ROLLING_HISTORY_INTERVAL;
    public static int DEFAULT_CPU_TRIGGER_COOLDOWN_IN_SECONDS;
    public static int DEFAULT_CPU_TRIGGER_PROFILING_DURATION_IN_SECONDS;
    public static string CpuTriggerEnabled_AppSettingsKey;
    public static string CpuThreshold_AppSettingsKey;
    public static string CpuAverageWindow_AppSettingsKey;
    public static string RollingHistorySize_Cpu_AppSettingsKey;
    public static string RollingHistoryInterval_Cpu_AppSettingsKey;
    public static string CpuTriggerCooldownInSeconds_AppSettingsKey;
    public static string CpuTriggerProfilingInSeconds_AppSettingsKey;
    public bool Enabled { get; public set; }
    public float CpuThreshold { get; public set; }
    public int CpuAverageWindow { get; public set; }
    public int CpuRollingHistorySize { get; public set; }
    public int CpuRollingHistoryInterval { get; public set; }
    public int CpuTriggerCooldownInSeconds { get; public set; }
    public int CpuTriggerProfilingDurationInSeconds { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public float get_CpuThreshold();
    [CompilerGeneratedAttribute]
public void set_CpuThreshold(float value);
    [CompilerGeneratedAttribute]
public int get_CpuAverageWindow();
    [CompilerGeneratedAttribute]
public void set_CpuAverageWindow(int value);
    [CompilerGeneratedAttribute]
public int get_CpuRollingHistorySize();
    [CompilerGeneratedAttribute]
public void set_CpuRollingHistorySize(int value);
    [CompilerGeneratedAttribute]
public int get_CpuRollingHistoryInterval();
    [CompilerGeneratedAttribute]
public void set_CpuRollingHistoryInterval(int value);
    [CompilerGeneratedAttribute]
public int get_CpuTriggerCooldownInSeconds();
    [CompilerGeneratedAttribute]
public void set_CpuTriggerCooldownInSeconds(int value);
    [CompilerGeneratedAttribute]
public int get_CpuTriggerProfilingDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_CpuTriggerProfilingDurationInSeconds(int value);
    public virtual CpuTriggerSettings Merge(CpuTriggerSettings other);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_0(bool val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_1(float val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_2(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_3(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_4(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_5(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_6(int val);
}
public class Microsoft.ServiceProfiler.DataContract.Settings.EngineSettings : MergeableOptions`1<EngineSettings> {
    [CompilerGeneratedAttribute]
private EngineMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SettingsMoniker>k__BackingField;
    [CompilerGeneratedAttribute]
private StandbyOptions <StandbyOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmediateOptions <ImmediateOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private SamplingOptions <SamplingOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private CpuTriggerSettings <CpuTriggerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryTriggerSettings <MemoryTriggerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CircularMonitorAgentVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CircularMonitorAgentConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SymbolSearchPath>k__BackingField;
    public static EngineMode DEFAULT_ENGINE_MODE;
    public static long DEFAULT_ENGINE_SETTINGS_EXPIRATION;
    public static string DEFAULT_ENGINE_SETTINGS_MONIKER;
    public static int DEFAULT_CIRCULAR_MONITOR_AGENT_VERSION;
    public static string DEFAULT_CIRCULAR_MONITOR_AGENT_CONFIGURATION;
    public static string DEFAULT_SYMBOL_SEARCH_PATH;
    private static string AppSettingsKeyPrefix;
    public static string EngineMode_AppSettingsKey;
    public static string Expiration_AppSettingsKey;
    public static string SettingsMoniker_AppSettingsKey;
    public static string CircularMonitorAgentVersion_AppSettingsKey;
    public static string CircularMonitorAgentConfiguration_AppSettingsKey;
    public static string SymbolSearchPath_AppSettingsKey;
    public EngineMode Mode { get; public set; }
    public long Expiration { get; public set; }
    public string SettingsMoniker { get; public set; }
    public StandbyOptions StandbyOptions { get; public set; }
    public ImmediateOptions ImmediateOptions { get; public set; }
    public SamplingOptions SamplingOptions { get; public set; }
    public CpuTriggerSettings CpuTriggerSettings { get; public set; }
    public MemoryTriggerSettings MemoryTriggerSettings { get; public set; }
    public int CircularMonitorAgentVersion { get; public set; }
    public string CircularMonitorAgentConfiguration { get; public set; }
    public string SymbolSearchPath { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public EngineMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(EngineMode value);
    [CompilerGeneratedAttribute]
public long get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(long value);
    [CompilerGeneratedAttribute]
public string get_SettingsMoniker();
    [CompilerGeneratedAttribute]
public void set_SettingsMoniker(string value);
    [CompilerGeneratedAttribute]
public StandbyOptions get_StandbyOptions();
    [CompilerGeneratedAttribute]
public void set_StandbyOptions(StandbyOptions value);
    [CompilerGeneratedAttribute]
public ImmediateOptions get_ImmediateOptions();
    [CompilerGeneratedAttribute]
public void set_ImmediateOptions(ImmediateOptions value);
    [CompilerGeneratedAttribute]
public SamplingOptions get_SamplingOptions();
    [CompilerGeneratedAttribute]
public void set_SamplingOptions(SamplingOptions value);
    [CompilerGeneratedAttribute]
public CpuTriggerSettings get_CpuTriggerSettings();
    [CompilerGeneratedAttribute]
public void set_CpuTriggerSettings(CpuTriggerSettings value);
    [CompilerGeneratedAttribute]
public MemoryTriggerSettings get_MemoryTriggerSettings();
    [CompilerGeneratedAttribute]
public void set_MemoryTriggerSettings(MemoryTriggerSettings value);
    [CompilerGeneratedAttribute]
public int get_CircularMonitorAgentVersion();
    [CompilerGeneratedAttribute]
public void set_CircularMonitorAgentVersion(int value);
    [CompilerGeneratedAttribute]
public string get_CircularMonitorAgentConfiguration();
    [CompilerGeneratedAttribute]
public void set_CircularMonitorAgentConfiguration(string value);
    [CompilerGeneratedAttribute]
public string get_SymbolSearchPath();
    [CompilerGeneratedAttribute]
public void set_SymbolSearchPath(string value);
    public virtual EngineSettings Merge(EngineSettings other);
    [CompilerGeneratedAttribute]
private void <Merge>b__46_0(EngineMode val);
    [CompilerGeneratedAttribute]
private void <Merge>b__46_1(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__46_2(string val);
    [CompilerGeneratedAttribute]
private void <Merge>b__46_3(string val);
}
public class Microsoft.ServiceProfiler.DataContract.Settings.GeneralSettings : object {
    [CompilerGeneratedAttribute]
private string <LocalEtlFileFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProvideUsageTelemetryData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipETLUpload>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCloudSettings>k__BackingField;
    public string LocalEtlFileFolder { get; public set; }
    public bool ProvideUsageTelemetryData { get; public set; }
    public bool SkipETLUpload { get; public set; }
    public bool IgnoreCloudSettings { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public string get_LocalEtlFileFolder();
    [CompilerGeneratedAttribute]
public void set_LocalEtlFileFolder(string value);
    [CompilerGeneratedAttribute]
public bool get_ProvideUsageTelemetryData();
    [CompilerGeneratedAttribute]
public void set_ProvideUsageTelemetryData(bool value);
    [CompilerGeneratedAttribute]
public bool get_SkipETLUpload();
    [CompilerGeneratedAttribute]
public void set_SkipETLUpload(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCloudSettings();
    [CompilerGeneratedAttribute]
public void set_IgnoreCloudSettings(bool value);
}
public class Microsoft.ServiceProfiler.DataContract.Settings.MemoryTriggerSettings : MergeableOptions`1<MemoryTriggerSettings> {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private float <MemoryThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemoryAverageWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemoryRollingHistorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemoryRollingHistoryInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemoryTriggerCooldownInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemoryTriggerProfilingDurationInSeconds>k__BackingField;
    public static bool DEFAULT_MEMORY_TRIGGER_ENABLED;
    public static int DEFAULT_MEMORY_THRESHOLD;
    public static int DEFAULT_MEMORY_AVERAGE_WINDOW;
    public static int DEFAULT_MEMORY_ROLLING_HISTORY_SIZE;
    public static int DEFAULT_MEMORY_ROLLING_HISTORY_INTERVAL;
    public static int DEFAULT_MEMORY_TRIGGER_COOLDOWN_IN_SECONDS;
    public static int DEFAULT_MEMORY_TRIGGER_PROFILING_IN_SECONDS;
    public static string MemoryTriggerEnabled_AppSettingsKey;
    public static string MemoryThreshold_AppSettingsKey;
    public static string MemoryAverageWindow_AppSettingsKey;
    public static string RollingHistorySize_Memory_AppSettingsKey;
    public static string RollingHistoryInterval_Memory_AppSettingsKey;
    public static string MemoryTriggerCooldownInSeconds_AppSettingsKey;
    public static string MemoryTriggerProfilingDurationInSeconds_AppSettingsKey;
    public bool Enabled { get; public set; }
    public float MemoryThreshold { get; public set; }
    public int MemoryAverageWindow { get; public set; }
    public int MemoryRollingHistorySize { get; public set; }
    public int MemoryRollingHistoryInterval { get; public set; }
    public int MemoryTriggerCooldownInSeconds { get; public set; }
    public int MemoryTriggerProfilingDurationInSeconds { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public float get_MemoryThreshold();
    [CompilerGeneratedAttribute]
public void set_MemoryThreshold(float value);
    [CompilerGeneratedAttribute]
public int get_MemoryAverageWindow();
    [CompilerGeneratedAttribute]
public void set_MemoryAverageWindow(int value);
    [CompilerGeneratedAttribute]
public int get_MemoryRollingHistorySize();
    [CompilerGeneratedAttribute]
public void set_MemoryRollingHistorySize(int value);
    [CompilerGeneratedAttribute]
public int get_MemoryRollingHistoryInterval();
    [CompilerGeneratedAttribute]
public void set_MemoryRollingHistoryInterval(int value);
    [CompilerGeneratedAttribute]
public int get_MemoryTriggerCooldownInSeconds();
    [CompilerGeneratedAttribute]
public void set_MemoryTriggerCooldownInSeconds(int value);
    [CompilerGeneratedAttribute]
public int get_MemoryTriggerProfilingDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_MemoryTriggerProfilingDurationInSeconds(int value);
    public virtual MemoryTriggerSettings Merge(MemoryTriggerSettings other);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_0(bool val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_1(float val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_2(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_3(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_4(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_5(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__43_6(int val);
}
public class Microsoft.ServiceProfiler.DataContract.Settings.SettingsParser : object {
    [CompilerGeneratedAttribute]
private static SettingsParser <Instance>k__BackingField;
    private ShellParser _parser;
    public static SettingsParser Instance { get; }
    private static SettingsParser();
    [CompilerGeneratedAttribute]
public static SettingsParser get_Instance();
    public AgentSettings ParseManyAgentSettings(String[] commands, AgentSettings baseSettings);
    public AgentSettings ParseAgentSettings(string command, AgentSettings baseSettings);
    public AgentSettings ParseAgentSettings(String[] args, AgentSettings baseSettings);
    public EngineSettings ParseEngineSettings(String[] args, EngineSettings baseSettings);
}
public class Microsoft.ServiceProfiler.Orchestration.Modes.ImmediateOptions : MergeableOptions`1<ImmediateOptions> {
    [CompilerGeneratedAttribute]
private int <ProfilingDurationInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private EngineMode <FallbackMode>k__BackingField;
    public static int DEFAULT_IMMEDIATE_PROFILING_DURATION;
    public static EngineMode DEFAULT_IMMEDIATE_FALLBACK_MODE;
    public static string ImmediateProfilingDuration_AppSettingsKey;
    public static string ImmediateFallbackMode_AppSettingsKey;
    public int ProfilingDurationInSeconds { get; public set; }
    public EngineMode FallbackMode { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public int get_ProfilingDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_ProfilingDurationInSeconds(int value);
    [CompilerGeneratedAttribute]
public EngineMode get_FallbackMode();
    [CompilerGeneratedAttribute]
public void set_FallbackMode(EngineMode value);
    public virtual ImmediateOptions Merge(ImmediateOptions other);
    [CompilerGeneratedAttribute]
private void <Merge>b__13_0(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__13_1(EngineMode val);
}
public class Microsoft.ServiceProfiler.Orchestration.Modes.SamplingOptions : MergeableOptions`1<SamplingOptions> {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private double <SamplingRate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProfilingDurationInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StandbyDurationInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SemaphoreContainer>k__BackingField;
    public static bool DEFAULT_SAMPLING_ENABLED;
    public static int DEFAULT_SAMPLING_PROFILING_DURATION;
    public static int DEFAULT_SAMPLING_STANDBY_DURATION;
    public static double DEFAULT_SAMPLING_RATE;
    public static string DEFAULT_SEMAPHORE_CONTAINER;
    public static string SamplingRate_AppSettingsKey;
    public static string ProfilingDurationInSeconds_AppSettingsKey;
    public static string StandbyDurationInSeconds_AppSettingsKey;
    public static string DefaultSamplingEnabled_AppSettingsKey;
    public static string SemaphoreContainer_AppSettingsKey;
    public bool Enabled { get; public set; }
    public double SamplingRate { get; public set; }
    public int ProfilingDurationInSeconds { get; public set; }
    public int StandbyDurationInSeconds { get; public set; }
    public string SemaphoreContainer { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public double get_SamplingRate();
    [CompilerGeneratedAttribute]
public void set_SamplingRate(double value);
    [CompilerGeneratedAttribute]
public int get_ProfilingDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_ProfilingDurationInSeconds(int value);
    [CompilerGeneratedAttribute]
public int get_StandbyDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_StandbyDurationInSeconds(int value);
    [CompilerGeneratedAttribute]
public string get_SemaphoreContainer();
    [CompilerGeneratedAttribute]
public void set_SemaphoreContainer(string value);
    public virtual SamplingOptions Merge(SamplingOptions other);
    [CompilerGeneratedAttribute]
private void <Merge>b__31_0(bool val);
    [CompilerGeneratedAttribute]
private void <Merge>b__31_1(double val);
    [CompilerGeneratedAttribute]
private void <Merge>b__31_2(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__31_3(int val);
    [CompilerGeneratedAttribute]
private void <Merge>b__31_4(string val);
}
public class Microsoft.ServiceProfiler.Orchestration.Modes.StandbyOptions : MergeableOptions`1<StandbyOptions> {
    [CompilerGeneratedAttribute]
private int <StandbyDurationInSeconds>k__BackingField;
    public static int DEFAULT_STANDBY_DURATION;
    public static string StandbyDuration_AppSettingsKey;
    public int StandbyDurationInSeconds { get; public set; }
    public static ShellArgument[] GetShellArguments();
    [CompilerGeneratedAttribute]
public int get_StandbyDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_StandbyDurationInSeconds(int value);
    public virtual StandbyOptions Merge(StandbyOptions other);
    [CompilerGeneratedAttribute]
private void <Merge>b__7_0(int val);
}
public enum Microsoft.ServiceProfiler.RuntimeEnvironment : Enum {
    public int value__;
    public static RuntimeEnvironment Default;
    public static RuntimeEnvironment Antares;
    public static RuntimeEnvironment WADVM;
    public static RuntimeEnvironment WADCloudService;
    public static RuntimeEnvironment StandalonePackage;
    public static RuntimeEnvironment CloudServiceStartUpTask;
}
