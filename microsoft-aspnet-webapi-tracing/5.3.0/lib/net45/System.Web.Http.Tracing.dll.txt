internal static class System.Web.Http.Error : object {
    private static string HttpScheme;
    private static string HttpsScheme;
    internal static string Format(string format, Object[] args);
    internal static ArgumentException Argument(string messageFormat, Object[] messageArgs);
    internal static ArgumentException Argument(string parameterName, string messageFormat, Object[] messageArgs);
    internal static ArgumentException ArgumentUriNotHttpOrHttpsScheme(string parameterName, Uri actualValue);
    internal static ArgumentException ArgumentUriNotAbsolute(string parameterName, Uri actualValue);
    internal static ArgumentException ArgumentUriHasQueryOrFragment(string parameterName, Uri actualValue);
    internal static ArgumentNullException PropertyNull();
    internal static ArgumentNullException ArgumentNull(string parameterName);
    internal static ArgumentNullException ArgumentNull(string parameterName, string messageFormat, Object[] messageArgs);
    internal static ArgumentException ArgumentNullOrEmpty(string parameterName);
    internal static ArgumentOutOfRangeException ArgumentOutOfRange(string parameterName, object actualValue, string messageFormat, Object[] messageArgs);
    internal static ArgumentOutOfRangeException ArgumentMustBeGreaterThanOrEqualTo(string parameterName, object actualValue, object minValue);
    internal static ArgumentOutOfRangeException ArgumentMustBeLessThanOrEqualTo(string parameterName, object actualValue, object maxValue);
    internal static KeyNotFoundException KeyNotFound();
    internal static KeyNotFoundException KeyNotFound(string messageFormat, Object[] messageArgs);
    internal static ObjectDisposedException ObjectDisposed(string messageFormat, Object[] messageArgs);
    internal static OperationCanceledException OperationCanceled();
    internal static OperationCanceledException OperationCanceled(string messageFormat, Object[] messageArgs);
    internal static ArgumentException InvalidEnumArgument(string parameterName, int invalidValue, Type enumClass);
    internal static InvalidOperationException InvalidOperation(string messageFormat, Object[] messageArgs);
    internal static InvalidOperationException InvalidOperation(Exception innerException, string messageFormat, Object[] messageArgs);
    internal static NotSupportedException NotSupported(string messageFormat, Object[] messageArgs);
}
[ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static class System.Web.Http.HttpConfigurationTracingExtensions : object {
    [ExtensionAttribute]
public static SystemDiagnosticsTraceWriter EnableSystemDiagnosticsTracing(HttpConfiguration configuration);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class System.Web.Http.Properties.CommonWebApiResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentInvalidAbsoluteUri { get; }
    internal static string ArgumentInvalidHttpUriScheme { get; }
    internal static string ArgumentMustBeGreaterThanOrEqualTo { get; }
    internal static string ArgumentMustBeLessThanOrEqualTo { get; }
    internal static string ArgumentNullOrEmpty { get; }
    internal static string ArgumentUriHasQueryOrFragment { get; }
    internal static string InvalidEnumArgument { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ArgumentInvalidAbsoluteUri();
    internal static string get_ArgumentInvalidHttpUriScheme();
    internal static string get_ArgumentMustBeGreaterThanOrEqualTo();
    internal static string get_ArgumentMustBeLessThanOrEqualTo();
    internal static string get_ArgumentNullOrEmpty();
    internal static string get_ArgumentUriHasQueryOrFragment();
    internal static string get_InvalidEnumArgument();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class System.Web.Http.Tracing.Properties.SRResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CategoryFormat { get; }
    internal static string ExceptionFormat { get; }
    internal static string HttpMethodFormat { get; }
    internal static string HttpStatusFormat { get; }
    internal static string IdFormat { get; }
    internal static string MessageFormat { get; }
    internal static string OperationFormat { get; }
    internal static string ShortRequestFormat { get; }
    internal static string ShortResponseFormat { get; }
    internal static string TimeLevelKindFormat { get; }
    internal static string TimeRequestFormat { get; }
    internal static string TimeResponseFormat { get; }
    internal static string TraceLevelOutOfRange { get; }
    internal static string UrlFormat { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CategoryFormat();
    internal static string get_ExceptionFormat();
    internal static string get_HttpMethodFormat();
    internal static string get_HttpStatusFormat();
    internal static string get_IdFormat();
    internal static string get_MessageFormat();
    internal static string get_OperationFormat();
    internal static string get_ShortRequestFormat();
    internal static string get_ShortResponseFormat();
    internal static string get_TimeLevelKindFormat();
    internal static string get_TimeRequestFormat();
    internal static string get_TimeResponseFormat();
    internal static string get_TraceLevelOutOfRange();
    internal static string get_UrlFormat();
}
public class System.Web.Http.Tracing.SystemDiagnosticsTraceWriter : object {
    private static string SystemWebHttpRequestCategory;
    private static TraceEventType[] TraceLevelToTraceEventType;
    private TraceLevel _minLevel;
    [CompilerGeneratedAttribute]
private bool <IsVerbose>k__BackingField;
    [CompilerGeneratedAttribute]
private TraceSource <TraceSource>k__BackingField;
    public TraceLevel MinimumLevel { get; public set; }
    public bool IsVerbose { get; public set; }
    public TraceSource TraceSource { get; public set; }
    private static SystemDiagnosticsTraceWriter();
    public TraceLevel get_MinimumLevel();
    public void set_MinimumLevel(TraceLevel value);
    [CompilerGeneratedAttribute]
public bool get_IsVerbose();
    [CompilerGeneratedAttribute]
public void set_IsVerbose(bool value);
    [CompilerGeneratedAttribute]
public TraceSource get_TraceSource();
    [CompilerGeneratedAttribute]
public void set_TraceSource(TraceSource value);
    public virtual void Trace(HttpRequestMessage request, string category, TraceLevel level, Action`1<TraceRecord> traceAction);
    public virtual string Format(TraceRecord traceRecord);
    public virtual string FormatRequestEnvelope(TraceRecord traceRecord);
    public virtual void TranslateHttpResponseException(TraceRecord traceRecord);
    public virtual string FormatDateTime(DateTime dateTime);
    private void TraceMessage(TraceLevel level, string message);
}
internal static class System.Web.Http.Tracing.TraceWriterExceptionMapper : object {
    private static string HttpErrorExceptionMessageFormat;
    private static string HttpErrorExceptionTypeFormat;
    private static string HttpErrorMessageDetailFormat;
    private static string HttpErrorModelStateErrorFormat;
    private static string HttpErrorModelStatePairFormat;
    private static string HttpErrorStackTraceFormat;
    private static string HttpErrorUserMessageFormat;
    public static void TranslateHttpResponseException(TraceRecord traceRecord);
    public static Nullable`1<TraceLevel> GetMappedTraceLevel(Exception exception);
    public static Nullable`1<TraceLevel> GetMappedTraceLevel(HttpResponseException httpResponseException);
    private static HttpResponseException ExtractHttpResponseException(Exception exception);
    private static void AddExceptions(HttpError httpError, List`1<string> messages);
    private static string FormatModelStateErrors(HttpError modelStateError);
}
