[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Internal.Web.Utils.CommonResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Argument_Cannot_Be_Null_Or_Empty { get; }
    internal static string Argument_Must_Be_Between { get; }
    internal static string Argument_Must_Be_Enum_Member { get; }
    internal static string Argument_Must_Be_GreaterThan { get; }
    internal static string Argument_Must_Be_GreaterThanOrEqualTo { get; }
    internal static string Argument_Must_Be_LessThan { get; }
    internal static string Argument_Must_Be_LessThanOrEqualTo { get; }
    internal static string Argument_Must_Be_Null_Or_Non_Empty { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Argument_Cannot_Be_Null_Or_Empty();
    internal static string get_Argument_Must_Be_Between();
    internal static string get_Argument_Must_Be_Enum_Member();
    internal static string get_Argument_Must_Be_GreaterThan();
    internal static string get_Argument_Must_Be_GreaterThanOrEqualTo();
    internal static string get_Argument_Must_Be_LessThan();
    internal static string get_Argument_Must_Be_LessThanOrEqualTo();
    internal static string get_Argument_Must_Be_Null_Or_Non_Empty();
}
[GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
public class Microsoft.Web.Helpers.Analytics : HelperPage {
    public static HelperResult GetGoogleHtml(string webPropertyId);
    public static HelperResult GetGoogleAsyncHtml(string webPropertyId);
    public static HelperResult GetYahooHtml(string account);
    public static HelperResult GetStatCounterHtml(int project, string security);
}
[GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
public class Microsoft.Web.Helpers.Facebook : HelperPage {
    private static string FacebookCredentialsTableName;
    private static string FacebookCredentialsIdColumn;
    private static string FacebookCredentialsUserIdColumn;
    private static string DefaultUserIdColumn;
    private static string DefaultUserNameColumn;
    private static string DefaultUserTableName;
    private static string DefaultFacebookPerms;
    private static string DefaultCallbackUrl;
    private static string FacebookApiProfileUrl;
    private static string FacebookCookieAccessToken;
    private static object _isInitializedKey;
    private static object _membershipDBNameKey;
    private static object _appIdKey;
    private static object _appSecretKey;
    private static object _language;
    public static bool HasMembershipIntegration { get; }
    public static bool IsFacebookUserAuthenticated { get; }
    public static bool IsFacebookUserAssociated { get; }
    public static bool IsInitialized { get; private set; }
    public static string MembershipDBName { get; public set; }
    public static string AppId { get; public set; }
    public static string AppSecret { get; public set; }
    public static string Language { get; public set; }
    private static HttpContextBase HttpContext { get; }
    private static Facebook();
    public static bool get_HasMembershipIntegration();
    public static bool get_IsFacebookUserAuthenticated();
    public static bool get_IsFacebookUserAssociated();
    public static bool get_IsInitialized();
    private static void set_IsInitialized(bool value);
    public static string get_MembershipDBName();
    public static void set_MembershipDBName(string value);
    public static string get_AppId();
    public static void set_AppId(string value);
    public static string get_AppSecret();
    public static void set_AppSecret(string value);
    public static string get_Language();
    public static void set_Language(string value);
    private static HttpContextBase get_HttpContext();
    public static void Initialize(string appId, string appSecret, string membershipDbName);
    public static UserProfile GetFacebookUserProfile();
    public static void AssociateMembershipAccount(string userName);
    public static bool MembershipLogin();
    private static void InitializeMembershipProviderIfNeeded();
    private static void InitializeFacebookTableIfNeeded();
    private static string GetAssociatedMembershipUserName();
    private static string GetUserName(int userId);
    private static SimpleMembershipProvider GetMembershipProvider();
    private static bool IsMembershipProviderInitialized(SimpleMembershipProvider provider);
    internal static string GetFacebookCookieInfo(HttpContextBase httpContext, string key);
    private static bool IsFacebookCookieValid(NameValueCollection args);
    private static IHtmlString RawJS(string text);
    public static HelperResult GetInitializationScripts();
    public static HelperResult LoginButton(string registerUrl, string returnUrl, string callbackUrl, string buttonText, bool autoLogoutLink, string size, string length, bool showFaces, string extendedPermissions);
    public static HelperResult LoginButtonTagOnly(string buttonText, bool autoLogoutLink, string size, string length, string onLogin, bool showFaces, string extendedPermissions);
    public static HelperResult LikeButton(string href, string buttonLayout, bool showFaces, int width, int height, string action, string font, string colorScheme, string refLabel);
    public static HelperResult Comments(string xid, int width, int numPosts, bool reverseOrder, bool removeRoundedBox);
    public static HelperResult Recommendations(string site, int width, int height, bool showHeader, string colorScheme, string font, string borderColor, string filter, string refLabel);
    public static HelperResult LikeBox(string href, int width, int height, string colorScheme, int connections, bool showStream, bool showHeader);
    public static HelperResult Facepile(int maxRows, int width);
    public static HelperResult LiveStream(int width, int height, string xid, string viaUrl, bool alwaysPostToFriends);
    public static HelperResult ActivityFeed(string site, int width, int height, bool showHeader, string colorScheme, string font, string borderColor, bool showRecommendations);
    public static HelperResult OpenGraphRequiredProperties(string siteName, string title, string type, string url, string imageUrl, string description);
    public static HelperResult OpenGraphLocationProperties(string latitude, string longitude, string streetAddress, string locality, string region, string postalCode, string countryName);
    public static HelperResult OpenGraphContactProperties(string email, string phoneNumber, string faxNumber);
    public static HelperResult FbmlNamespaces();
}
[GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
public class Microsoft.Web.Helpers.FileUpload : HelperPage {
    public static HelperResult GetHtml(string name, int initialNumberOfFiles, bool allowMoreFilesToBeAdded, bool includeFormTag, string addText, string uploadText);
    internal static HelperResult _GetHtml(HttpContextBase context, string name, int initialNumberOfFiles, bool allowMoreFilesToBeAdded, bool includeFormTag, string addText, string uploadText);
}
[GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
public class Microsoft.Web.Helpers.GamerCard : HelperPage {
    public static HelperResult GetHtml(string gamerTag);
}
public static class Microsoft.Web.Helpers.Gravatar : object {
    private static string GravatarUrl;
    public static HtmlString GetHtml(string email, int imageSize, string defaultImage, GravatarRating rating, string imageExtension, object attributes);
    public static string GetUrl(string email, int imageSize, string defaultImage, GravatarRating rating, string imageExtension);
}
public enum Microsoft.Web.Helpers.GravatarRating : Enum {
    public int value__;
    public static GravatarRating Default;
    public static GravatarRating G;
    public static GravatarRating PG;
    public static GravatarRating R;
    public static GravatarRating X;
}
[GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
public class Microsoft.Web.Helpers.LinkShare : HelperPage {
    internal static object _bitlyApiKey;
    internal static object _bitlyLogin;
    private static Lazy`1<IEnumerable`1<LinkShareSite>> _allSites;
    public static string BitlyApiKey { get; public set; }
    public static string BitlyLogin { get; public set; }
    private static LinkShare();
    public static string get_BitlyApiKey();
    public static void set_BitlyApiKey(string value);
    public static string get_BitlyLogin();
    public static void set_BitlyLogin(string value);
    private static string GetShortenedUrl(string pageLinkBack);
    private static string GetWebResponse(string address);
    internal static IEnumerable`1<LinkShareSite> GetSitesInOrder(LinkShareSite[] linkSites);
    private static void ConstructPageLinkBack(String& pageLinkBack, String& shortenedUrl);
    public static HelperResult GetHtml(string pageTitle, string pageLinkBack, string twitterUserName, string additionalTweetText, LinkShareSite[] linkSites);
}
public enum Microsoft.Web.Helpers.LinkShareSite : Enum {
    public int value__;
    public static LinkShareSite Delicious;
    public static LinkShareSite Digg;
    public static LinkShareSite Facebook;
    public static LinkShareSite Reddit;
    public static LinkShareSite StumbleUpon;
    public static LinkShareSite Twitter;
    public static LinkShareSite All;
}
[GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
public class Microsoft.Web.Helpers.Maps : HelperPage {
    private static string DefaultWidth;
    private static string DefaultHeight;
    private static object _mapIdKey;
    private static object _mapQuestApiKey;
    private static object _bingApiKey;
    private static object _yahooApiKey;
    private static Func`1<HttpContextBase> _getCurrentHttpContext;
    public static string MapQuestApiKey { get; public set; }
    public static string YahooApiKey { get; public set; }
    public static string BingApiKey { get; public set; }
    private static Func`1<HttpContextBase> GetCurrentHttpContext { get; internal set; }
    private static int MapId { get; private set; }
    private static Maps();
    public static string get_MapQuestApiKey();
    public static void set_MapQuestApiKey(string value);
    public static string get_YahooApiKey();
    public static void set_YahooApiKey(string value);
    public static string get_BingApiKey();
    public static void set_BingApiKey(string value);
    private static Func`1<HttpContextBase> get_GetCurrentHttpContext();
    internal static void set_GetCurrentHttpContext(Func`1<HttpContextBase> value);
    private static int get_MapId();
    private static void set_MapId(int value);
    private static string GetMapElementId();
    private static string TryParseUnit(string value, string defaultValue);
    private static IHtmlString RawJS(string text);
    private static IHtmlString Raw(string text);
    private static string GetApiKey(string apiKey, object scopeStorageKey);
    internal static string GetDirectionsQuery(string location, string latitude, string longitude, Func`2<string, string> encoder);
    public static HelperResult GetMapQuestHtml(string key, string location, string latitude, string longitude, string width, string height, int zoom, string type, bool showDirectionsLink, string directionsLinkText, bool showZoomControl, IEnumerable`1<MapLocation> pushpins);
    public static HelperResult GetBingHtml(string key, string location, string latitude, string longitude, string width, string height, int zoom, string type, bool useAdaptiveOverlay, bool showDirectionsLink, string directionsLinkText, IEnumerable`1<MapLocation> pushpins);
    public static HelperResult GetGoogleHtml(string location, string latitude, string longitude, string width, string height, int zoom, string type, bool showDirectionsLink, string directionsLinkText, IEnumerable`1<MapLocation> pushpins);
    public static HelperResult GetYahooHtml(string key, string location, string latitude, string longitude, string width, string height, int zoom, string type, bool showDirectionsLink, string directionsLinkText, IEnumerable`1<MapLocation> pushpins);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.Web.Helpers.PreApplicationStartCode : object {
    private static bool _startWasCalled;
    public static void Start();
}
[GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
public class Microsoft.Web.Helpers.ReCaptcha : HelperPage {
    private static string _reCaptchaUrl;
    private static string _reCaptchaSecureUrl;
    private static object _errorCodeCacheKey;
    internal static object _privateKey;
    internal static object _publicKey;
    public static string PrivateKey { get; public set; }
    public static string PublicKey { get; public set; }
    private static ReCaptcha();
    public static string get_PrivateKey();
    public static void set_PrivateKey(string value);
    public static string get_PublicKey();
    public static void set_PublicKey(string value);
    public static bool Validate(string privateKey);
    internal static string GetLastError(HttpContextBase context);
    internal static bool Validate(HttpContextBase context, string privateKey, VirtualPathUtilityBase virtualPathUtility);
    internal static string GetValidatePostData(HttpContextBase context, string privateKey, VirtualPathUtilityBase virtualPathUtility);
    internal static bool HandleValidateResponse(HttpContextBase context, string response);
    internal static string GetChallengeUrl(HttpContextBase httpContext, string publicKey, string errorCode);
    private static string ExecuteValidateRequest(string formData);
    private static string GetUrlHelper(HttpContextBase context, string path, string publicKey, string errorCode);
    private static void SetLastError(HttpContextBase context, string value);
    public static HelperResult GetHtml(string publicKey, string theme, string language, int tabIndex);
    public static HelperResult GetHtmlWithOptions(string publicKey, object options);
    public static HelperResult GetHtml(HttpContextBase httpContext, string publicKey, object options);
}
public static class Microsoft.Web.Helpers.Themes : object {
    public static string ThemeDirectory { get; }
    public static string CurrentTheme { get; public set; }
    public static string DefaultTheme { get; }
    public static ReadOnlyCollection`1<string> AvailableThemes { get; }
    private static ThemesImplementation Implementation { get; }
    public static string get_ThemeDirectory();
    public static string get_CurrentTheme();
    public static void set_CurrentTheme(string value);
    public static string get_DefaultTheme();
    public static ReadOnlyCollection`1<string> get_AvailableThemes();
    private static ThemesImplementation get_Implementation();
    public static void Initialize(string themeDirectory, string defaultTheme);
    public static string GetResourcePath(string fileName);
    public static string GetResourcePath(string folder, string fileName);
}
internal class Microsoft.Web.Helpers.ThemesImplementation : object {
    internal static object CurrentThemeKey;
    internal static object ThemeDirectoryKey;
    internal static object DefaultThemeKey;
    internal static object ThemesInitializedKey;
    private VirtualPathProvider _vpp;
    private IDictionary`2<object, object> _currentScope;
    public string ThemeDirectory { get; private set; }
    public string DefaultTheme { get; private set; }
    public string CurrentTheme { get; public set; }
    public ReadOnlyCollection`1<string> AvailableThemes { get; }
    private string CurrentThemePath { get; }
    private string DefaultThemePath { get; }
    private bool ThemesInitialized { get; private set; }
    public ThemesImplementation(VirtualPathProvider vpp, IDictionary`2<object, object> scopeStorage);
    private static ThemesImplementation();
    public string get_ThemeDirectory();
    private void set_ThemeDirectory(string value);
    public string get_DefaultTheme();
    private void set_DefaultTheme(string value);
    public string get_CurrentTheme();
    public void set_CurrentTheme(string value);
    public ReadOnlyCollection`1<string> get_AvailableThemes();
    private string get_CurrentThemePath();
    private string get_DefaultThemePath();
    private bool get_ThemesInitialized();
    private void set_ThemesInitialized(bool value);
    public void Initialize(string themeDirectory, string defaultTheme);
    public string GetResourcePath(string fileName);
    public string GetResourcePath(string folder, string fileName);
    internal string FindMatchingFile(string folder, string name);
    private ReadOnlyCollection`1<string> GetAvailableThemes(string themesRoot);
    private void EnsureInitialized();
    private static bool IsValidTheme(IEnumerable`1<string> availableThemes, string theme);
}
public class Microsoft.Web.Helpers.UrlBuilder : object {
    private static VirtualPathUtilityWrapper _defaultVirtualPathUtility;
    private VirtualPathUtilityBase _virtualPathUtility;
    private StringBuilder _params;
    private string _path;
    internal static VirtualPathUtilityBase DefaultVirtualPathUtility { get; }
    public string Path { get; }
    public string QueryString { get; }
    private VirtualPathUtilityBase VirtualPathUtility { get; }
    public UrlBuilder(string path);
    public UrlBuilder(object parameters);
    public UrlBuilder(string path, object parameters);
    internal UrlBuilder(HttpContextBase httpContext, VirtualPathUtilityBase virtualPathUtility, string path, object parameters);
    private static UrlBuilder();
    internal static VirtualPathUtilityBase get_DefaultVirtualPathUtility();
    public string get_Path();
    public string get_QueryString();
    private VirtualPathUtilityBase get_VirtualPathUtility();
    public static UrlBuilder Create(string path, object parameters);
    public UrlBuilder AddPath(string path);
    public UrlBuilder AddPath(String[] pathTokens);
    public UrlBuilder AddParam(string name, object value);
    public UrlBuilder AddParam(object values);
    public virtual string ToString();
    private static HttpContextBase GetHttpContext();
    private static string EnsureTrailingSlash(string path);
    private string GetPageRelativePath(HttpContextBase httpContext, string path);
    public static string op_Implicit(UrlBuilder builder);
}
public static class Microsoft.Web.Helpers.Video : object {
    private static string FlashCab;
    private static string FlashClassId;
    private static string FlashMimeType;
    private static string MediaPlayerClassId;
    private static string MediaPlayerMimeType;
    private static string OleMimeType;
    private static string SilverlightMimeType;
    private static String[] _globalBlacklist;
    private static String[] _mediaPlayerBlacklist;
    private static String[] _silverlightBlacklist;
    private static String[] _flashBlacklist;
    private static VirtualPathUtilityWrapper _pathUtility;
    private static HttpContextBase HttpContext { get; }
    private static Video();
    private static HttpContextBase get_HttpContext();
    public static HelperResult Flash(string path, string width, string height, bool play, bool loop, bool menu, string bgColor, string quality, string scale, string windowMode, string baseUrl, string version, object options, object htmlAttributes, string embedName);
    public static HelperResult MediaPlayer(string path, string width, string height, bool autoStart, int playCount, string uiMode, bool stretchToFit, bool enableContextMenu, bool mute, int volume, string baseUrl, object options, object htmlAttributes, string embedName);
    public static HelperResult Silverlight(string path, string width, string height, string bgColor, string initParameters, string minimumVersion, bool autoUpgrade, object options, object htmlAttributes);
    internal static HelperResult Flash(HttpContextBase context, VirtualPathUtilityBase pathUtility, string path, string width, string height, bool play, bool loop, bool menu, string backgroundColor, string quality, string scale, string windowMode, string baseUrl, string version, object options, object htmlAttributes, string embedName);
    internal static HelperResult MediaPlayer(HttpContextBase context, VirtualPathUtilityBase pathUtility, string path, string width, string height, bool autoStart, int playCount, string uiMode, bool stretchToFit, bool enableContextMenu, bool mute, int volume, string baseUrl, object options, object htmlAttributes, string embedName);
    internal static HelperResult Silverlight(HttpContextBase context, VirtualPathUtilityBase pathUtility, string path, string width, string height, string backgroundColor, string initParameters, string minimumVersion, bool autoUpgrade, object options, object htmlAttributes);
    private static IDictionary`2<string, object> ObjectToDictionary(object o, string argName, String[] blackList);
    private static HelperResult GetHtml(HttpContextBase context, VirtualPathUtilityBase pathUtility, string path, string width, string height, string objectType, string objectDataType, string objectClassId, string objectCodeBase, string pathParamName, string embedContentType, IDictionary`2<string, object> parameters, object htmlAttributes, string embedName, Action`1<TextWriter> plugin);
    private static string ValidatePath(HttpContextBase context, VirtualPathUtilityBase pathUtility, string path);
    private static void WriteIfNotNullOrEmpty(TextWriter tw, string key, string value);
}
public abstract class Microsoft.Web.Helpers.VirtualPathUtilityBase : object {
    public abstract virtual string Combine(string basePath, string relativePath);
    public abstract virtual string ToAbsolute(string virtualPath);
}
internal class Microsoft.Web.Helpers.VirtualPathUtilityWrapper : VirtualPathUtilityBase {
    public virtual string Combine(string basePath, string relativePath);
    public virtual string ToAbsolute(string virtualPath);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Resources.HelpersToolkitResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string FileUpload_AddMore { get; }
    internal static string FileUpload_Upload { get; }
    internal static string Gravatar_InvalidImageSize { get; }
    internal static string LinkShareValue_NotSupported { get; }
    internal static string ReCaptcha_RemoteIPNotFound { get; }
    internal static string Themes_FolderCannotBeNull { get; }
    internal static string Themes_InvalidTheme { get; }
    internal static string Themes_NotInitialized { get; }
    internal static string Video_FileDoesNotExist { get; }
    internal static string Video_PropertyCannotBeSet { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_FileUpload_AddMore();
    internal static string get_FileUpload_Upload();
    internal static string get_Gravatar_InvalidImageSize();
    internal static string get_LinkShareValue_NotSupported();
    internal static string get_ReCaptcha_RemoteIPNotFound();
    internal static string get_Themes_FolderCannotBeNull();
    internal static string get_Themes_InvalidTheme();
    internal static string get_Themes_NotInitialized();
    internal static string get_Video_FileDoesNotExist();
    internal static string get_Video_PropertyCannotBeSet();
}
