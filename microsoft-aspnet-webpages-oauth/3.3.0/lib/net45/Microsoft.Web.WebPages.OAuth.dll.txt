[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Internal.Web.Utils.CommonResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Argument_Cannot_Be_Null_Or_Empty { get; }
    internal static string Argument_Must_Be_Between { get; }
    internal static string Argument_Must_Be_Enum_Member { get; }
    internal static string Argument_Must_Be_GreaterThan { get; }
    internal static string Argument_Must_Be_GreaterThanOrEqualTo { get; }
    internal static string Argument_Must_Be_LessThan { get; }
    internal static string Argument_Must_Be_LessThanOrEqualTo { get; }
    internal static string Argument_Must_Be_Null_Or_Non_Empty { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Argument_Cannot_Be_Null_Or_Empty();
    internal static string get_Argument_Must_Be_Between();
    internal static string get_Argument_Must_Be_Enum_Member();
    internal static string get_Argument_Must_Be_GreaterThan();
    internal static string get_Argument_Must_Be_GreaterThanOrEqualTo();
    internal static string get_Argument_Must_Be_LessThan();
    internal static string get_Argument_Must_Be_LessThanOrEqualTo();
    internal static string get_Argument_Must_Be_Null_Or_Non_Empty();
}
public class Microsoft.Web.WebPages.OAuth.AuthenticationClientData : object {
    [CompilerGeneratedAttribute]
private IAuthenticationClient <AuthenticationClient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <ExtraData>k__BackingField;
    public IAuthenticationClient AuthenticationClient { get; private set; }
    public string DisplayName { get; private set; }
    public IDictionary`2<string, object> ExtraData { get; private set; }
    public AuthenticationClientData(IAuthenticationClient authenticationClient, string displayName, IDictionary`2<string, object> extraData);
    [CompilerGeneratedAttribute]
public IAuthenticationClient get_AuthenticationClient();
    [CompilerGeneratedAttribute]
private void set_AuthenticationClient(IAuthenticationClient value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
private void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_ExtraData();
    [CompilerGeneratedAttribute]
private void set_ExtraData(IDictionary`2<string, object> value);
}
public class Microsoft.Web.WebPages.OAuth.OAuthAccount : object {
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderUserId>k__BackingField;
    public string Provider { get; private set; }
    public string ProviderUserId { get; private set; }
    public OAuthAccount(string provider, string providerUserId);
    [CompilerGeneratedAttribute]
public string get_Provider();
    [CompilerGeneratedAttribute]
private void set_Provider(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderUserId();
    [CompilerGeneratedAttribute]
private void set_ProviderUserId(string value);
}
public static class Microsoft.Web.WebPages.OAuth.OAuthWebSecurity : object {
    internal static IOpenAuthDataProvider OAuthDataProvider;
    private static Dictionary`2<string, AuthenticationClientData> _authenticationClients;
    public static bool IsAuthenticatedWithOAuth { get; }
    public static ICollection`1<AuthenticationClientData> RegisteredClientData { get; }
    private static OAuthWebSecurity();
    public static bool get_IsAuthenticatedWithOAuth();
    public static ICollection`1<AuthenticationClientData> get_RegisteredClientData();
    public static void RegisterFacebookClient(string appId, string appSecret);
    public static void RegisterFacebookClient(string appId, string appSecret, string displayName);
    public static void RegisterFacebookClient(string appId, string appSecret, string displayName, IDictionary`2<string, object> extraData);
    public static void RegisterMicrosoftClient(string clientId, string clientSecret);
    public static void RegisterMicrosoftClient(string clientId, string clientSecret, string displayName);
    public static void RegisterMicrosoftClient(string clientId, string clientSecret, string displayName, IDictionary`2<string, object> extraData);
    public static void RegisterTwitterClient(string consumerKey, string consumerSecret);
    public static void RegisterTwitterClient(string consumerKey, string consumerSecret, string displayName);
    public static void RegisterTwitterClient(string consumerKey, string consumerSecret, string displayName, IDictionary`2<string, object> extraData);
    public static void RegisterLinkedInClient(string consumerKey, string consumerSecret);
    public static void RegisterLinkedInClient(string consumerKey, string consumerSecret, string displayName);
    public static void RegisterLinkedInClient(string consumerKey, string consumerSecret, string displayName, IDictionary`2<string, object> extraData);
    public static void RegisterGoogleClient();
    public static void RegisterGoogleClient(string displayName);
    public static void RegisterGoogleClient(string displayName, IDictionary`2<string, object> extraData);
    public static void RegisterYahooClient();
    public static void RegisterYahooClient(string displayName);
    public static void RegisterYahooClient(string displayName, IDictionary`2<string, object> extraData);
    [CLSCompliantAttribute("False")]
public static void RegisterClient(IAuthenticationClient client);
    [CLSCompliantAttribute("False")]
public static void RegisterClient(IAuthenticationClient client, string displayName, IDictionary`2<string, object> extraData);
    public static void RequestAuthentication(string provider);
    public static void RequestAuthentication(string provider, string returnUrl);
    internal static void RequestAuthenticationCore(HttpContextBase context, string provider, string returnUrl);
    [CLSCompliantAttribute("False")]
public static AuthenticationResult VerifyAuthentication();
    [CLSCompliantAttribute("False")]
public static AuthenticationResult VerifyAuthentication(string returnUrl);
    internal static AuthenticationResult VerifyAuthenticationCore(HttpContextBase context, string returnUrl);
    public static bool Login(string providerName, string providerUserId, bool createPersistentCookie);
    internal static bool LoginCore(HttpContextBase context, string providerName, string providerUserId, bool createPersistentCookie);
    internal static bool GetIsAuthenticatedWithOAuthCore(HttpContextBase context);
    public static void CreateOrUpdateAccount(string providerName, string providerUserId, string userName);
    public static string GetUserName(string providerName, string providerUserId);
    public static ICollection`1<OAuthAccount> GetAccountsFromUserName(string userName);
    public static bool HasLocalAccount(int userId);
    public static bool DeleteAccount(string providerName, string providerUserId);
    public static AuthenticationClientData GetOAuthClientData(string providerName);
    public static bool TryGetOAuthClientData(string providerName, AuthenticationClientData& clientData);
    internal static IAuthenticationClient GetOAuthClient(string providerName);
    internal static bool TryGetOAuthClient(string provider, IAuthenticationClient& client);
    internal static void ClearProviders();
    private static ExtendedMembershipProvider VerifyProvider();
    public static string SerializeProviderUserId(string providerName, string providerUserId);
    public static bool TryDeserializeProviderUserId(string data, String& providerName, String& providerUserId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.Web.WebPages.OAuth.PreApplicationStartCode : object {
    public static void Start();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Web.WebPages.OAuth.Properties.WebResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Argument_Cannot_Be_Null_Or_Empty { get; }
    internal static string HttpContextNotAvailable { get; }
    internal static string InvalidServiceProviderName { get; }
    internal static string ServiceProviderNameExists { get; }
    internal static string ServiceProviderNotFound { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Argument_Cannot_Be_Null_Or_Empty();
    internal static string get_HttpContextNotAvailable();
    internal static string get_InvalidServiceProviderName();
    internal static string get_ServiceProviderNameExists();
    internal static string get_ServiceProviderNotFound();
}
internal static class Microsoft.Web.WebPages.OAuth.ProviderUserIdSerializationHelper : object {
    private static Byte[] _padding;
    private static ProviderUserIdSerializationHelper();
    public static string ProtectData(string providerName, string providerUserId);
    public static bool UnprotectData(string protectedData, String& providerName, String& providerUserId);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Web.WebPages.OAuth.Resources.OAuthResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Security_NoExtendedMembershipProvider { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Security_NoExtendedMembershipProvider();
}
internal class Microsoft.Web.WebPages.OAuth.WebPagesOAuthDataProvider : object {
    private static ExtendedMembershipProvider VerifyProvider();
    public sealed virtual string GetUserNameFromOpenAuth(string openAuthProvider, string openAuthId);
}
internal class Microsoft.Web.WebPages.OAuth.WebPagesOAuthTokenManager : object {
    private static ExtendedMembershipProvider VerifyProvider();
    public sealed virtual string GetTokenSecret(string token);
    public sealed virtual void ReplaceRequestTokenWithAccessToken(string requestToken, string accessToken, string accessTokenSecret);
    public sealed virtual void StoreRequestToken(string requestToken, string requestTokenSecret);
}
