internal static class FxResources.Microsoft.Extensions.Configuration.Binder.SourceGeneration.SR : object {
}
internal static class Microsoft.CodeAnalysis.DotnetRuntime.Extensions.DiagnosticDescriptorHelper : object {
    public static DiagnosticDescriptor Create(string id, LocalizableString title, LocalizableString messageFormat, string category, DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, LocalizableString description, String[] customTags);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.DotnetRuntime.Extensions.RoslynExtensions : object {
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, string fullyQualifiedMetadataName);
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, Type type);
    [ExtensionAttribute]
private static SymbolVisibility GetResultantVisibility(ISymbol symbol);
    [ExtensionAttribute]
internal static bool HasAttributeSuffix(string name, bool isCaseSensitive);
    [ExtensionAttribute]
public static ImmutableArray`1<T> ToImmutableArray(ReadOnlySpan`1<T> span);
    [ExtensionAttribute]
public static SimpleNameSyntax GetUnqualifiedName(NameSyntax name);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ArraySpec : CollectionSpec {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public ArraySpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private ArraySpec(ArraySpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ArraySpec left, ArraySpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ArraySpec left, ArraySpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CollectionSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ArraySpec other);
    [CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.BinderInvocation : object {
    [CompilerGeneratedAttribute]
private IInvocationOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    public IInvocationOperation Operation { get; }
    public Location Location { get; }
    private BinderInvocation(IInvocationOperation operation, Location location);
    [CompilerGeneratedAttribute]
public IInvocationOperation get_Operation();
    [CompilerGeneratedAttribute]
public Location get_Location();
    public static BinderInvocation Create(GeneratorSyntaxContext context, CancellationToken cancellationToken);
    public static bool IsCandidateSyntaxNode(SyntaxNode node);
    public static bool IsBindingOperation(IInvocationOperation operation);
    private static bool IsValidMethodName_ConfigurationBinder(string name);
    private static bool IsValidMethodName_OptionsBuilderConfigurationExtensions(string name);
    private static bool IsValidMethodName_OptionsConfigurationServiceCollectionExtensions(string name);
    [CompilerGeneratedAttribute]
internal static bool <IsCandidateSyntaxNode>g__IsCandidateBindingMethodName|8_0(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingHelperInfo : object {
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<string> <Namespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitConfigurationKeyCaches>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodsToGen_CoreBindingHelper <MethodsToGen>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<ComplexTypeSpec> <TypesForGen_BindCoreMain>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypeSpec> <TypesForGen_GetCore>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypeSpec> <TypesForGen_GetValueCore>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<ComplexTypeSpec> <TypesForGen_BindCore>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<ObjectSpec> <TypesForGen_Initialize>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<ParsableFromStringSpec> <TypesForGen_ParsePrimitive>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public ImmutableEquatableArray`1<string> Namespaces { get; public set; }
    [RequiredMemberAttribute]
public bool EmitConfigurationKeyCaches { get; public set; }
    [RequiredMemberAttribute]
public MethodsToGen_CoreBindingHelper MethodsToGen { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<ComplexTypeSpec> TypesForGen_BindCoreMain { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypeSpec> TypesForGen_GetCore { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypeSpec> TypesForGen_GetValueCore { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<ComplexTypeSpec> TypesForGen_BindCore { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<ObjectSpec> TypesForGen_Initialize { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<ParsableFromStringSpec> TypesForGen_ParsePrimitive { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private BindingHelperInfo(BindingHelperInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<string> get_Namespaces();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Namespaces(ImmutableEquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_EmitConfigurationKeyCaches();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EmitConfigurationKeyCaches(bool value);
    [CompilerGeneratedAttribute]
public MethodsToGen_CoreBindingHelper get_MethodsToGen();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MethodsToGen(MethodsToGen_CoreBindingHelper value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<ComplexTypeSpec> get_TypesForGen_BindCoreMain();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypesForGen_BindCoreMain(ImmutableEquatableArray`1<ComplexTypeSpec> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypeSpec> get_TypesForGen_GetCore();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypesForGen_GetCore(ImmutableEquatableArray`1<TypeSpec> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypeSpec> get_TypesForGen_GetValueCore();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypesForGen_GetValueCore(ImmutableEquatableArray`1<TypeSpec> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<ComplexTypeSpec> get_TypesForGen_BindCore();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypesForGen_BindCore(ImmutableEquatableArray`1<ComplexTypeSpec> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<ObjectSpec> get_TypesForGen_Initialize();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypesForGen_Initialize(ImmutableEquatableArray`1<ObjectSpec> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<ParsableFromStringSpec> get_TypesForGen_ParsePrimitive();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypesForGen_ParsePrimitive(ImmutableEquatableArray`1<ParsableFromStringSpec> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(BindingHelperInfo left, BindingHelperInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(BindingHelperInfo left, BindingHelperInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(BindingHelperInfo other);
    [CompilerGeneratedAttribute]
public BindingHelperInfo <Clone>$();
}
internal enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.CollectionInstantiationConcreteType : Enum {
    public int value__;
    public static CollectionInstantiationConcreteType Self;
    public static CollectionInstantiationConcreteType Dictionary;
    public static CollectionInstantiationConcreteType List;
    public static CollectionInstantiationConcreteType HashSet;
}
internal enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.CollectionInstantiationStrategy : Enum {
    public int value__;
    public static CollectionInstantiationStrategy NotApplicable;
    public static CollectionInstantiationStrategy ParameterlessConstructor;
    public static CollectionInstantiationStrategy CopyConstructor;
    public static CollectionInstantiationStrategy LinqToDictionary;
}
internal enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.CollectionPopulationCastType : Enum {
    public int value__;
    public static CollectionPopulationCastType NotApplicable;
    public static CollectionPopulationCastType IDictionary;
    public static CollectionPopulationCastType ICollection;
    public static CollectionPopulationCastType ISet;
}
[RequiredMemberAttribute]
internal abstract class Microsoft.Extensions.Configuration.Binder.SourceGeneration.CollectionSpec : ComplexTypeSpec {
    [CompilerGeneratedAttribute]
private TypeRef <ElementTypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public TypeRef ElementTypeRef { get; public set; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
protected CollectionSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
protected CollectionSpec(CollectionSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TypeRef get_ElementTypeRef();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ElementTypeRef(TypeRef value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CollectionSpec left, CollectionSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CollectionSpec left, CollectionSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ComplexTypeSpec other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CollectionSpec other);
    [CompilerGeneratedAttribute]
public abstract virtual TypeSpec <Clone>$();
}
[RequiredMemberAttribute]
internal abstract class Microsoft.Extensions.Configuration.Binder.SourceGeneration.CollectionWithCtorInitSpec : CollectionSpec {
    [CompilerGeneratedAttribute]
private CollectionInstantiationStrategy <InstantiationStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionInstantiationConcreteType <InstantiationConcreteType>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionPopulationCastType <PopulationCastType>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public CollectionInstantiationStrategy InstantiationStrategy { get; public set; }
    [RequiredMemberAttribute]
public CollectionInstantiationConcreteType InstantiationConcreteType { get; public set; }
    [RequiredMemberAttribute]
public CollectionPopulationCastType PopulationCastType { get; public set; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
protected CollectionWithCtorInitSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
protected CollectionWithCtorInitSpec(CollectionWithCtorInitSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public CollectionInstantiationStrategy get_InstantiationStrategy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InstantiationStrategy(CollectionInstantiationStrategy value);
    [CompilerGeneratedAttribute]
public CollectionInstantiationConcreteType get_InstantiationConcreteType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InstantiationConcreteType(CollectionInstantiationConcreteType value);
    [CompilerGeneratedAttribute]
public CollectionPopulationCastType get_PopulationCastType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PopulationCastType(CollectionPopulationCastType value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CollectionWithCtorInitSpec left, CollectionWithCtorInitSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CollectionWithCtorInitSpec left, CollectionWithCtorInitSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CollectionSpec other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CollectionWithCtorInitSpec other);
    [CompilerGeneratedAttribute]
public abstract virtual TypeSpec <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ComplexTypeSpec : TypeSpec {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    protected ComplexTypeSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
protected ComplexTypeSpec(ComplexTypeSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ComplexTypeSpec left, ComplexTypeSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ComplexTypeSpec left, ComplexTypeSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypeSpec other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ComplexTypeSpec other);
    [CompilerGeneratedAttribute]
public abstract virtual TypeSpec <Clone>$();
}
[GeneratorAttribute]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ConfigurationBindingGenerator : object {
    private static string ProjectName;
    [NullableAttribute("1")]
public static string GenSpecTrackingName;
    [CompilerGeneratedAttribute]
private Action`1<SourceGenerationSpec> <OnSourceEmitting>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<SourceGenerationSpec> OnSourceEmitting { get; public set; }
    private static ConfigurationBindingGenerator();
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    [CompilerGeneratedAttribute]
public Action`1<SourceGenerationSpec> get_OnSourceEmitting();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OnSourceEmitting(Action`1<SourceGenerationSpec> value);
    private void ReportDiagnosticsAndEmitSource(SourceProductionContext sourceProductionContext, ValueTuple`2<SourceGenerationSpec, ImmutableEquatableArray`1<DiagnosticInfo>> input);
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ConfigurationSectionSpec : SimpleTypeSpec {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ConfigurationSectionSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
private ConfigurationSectionSpec(ConfigurationSectionSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ConfigurationSectionSpec left, ConfigurationSectionSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ConfigurationSectionSpec left, ConfigurationSectionSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(SimpleTypeSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ConfigurationSectionSpec other);
    [CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
[RequiredMemberAttribute]
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.DictionarySpec : CollectionWithCtorInitSpec {
    [CompilerGeneratedAttribute]
private TypeRef <KeyTypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public TypeRef KeyTypeRef { get; public set; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public DictionarySpec(INamedTypeSymbol type);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private DictionarySpec(DictionarySpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TypeRef get_KeyTypeRef();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KeyTypeRef(TypeRef value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(DictionarySpec left, DictionarySpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(DictionarySpec left, DictionarySpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CollectionWithCtorInitSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(DictionarySpec other);
    [CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.EnumerableSpec : CollectionWithCtorInitSpec {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public EnumerableSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private EnumerableSpec(EnumerableSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(EnumerableSpec left, EnumerableSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(EnumerableSpec left, EnumerableSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(CollectionWithCtorInitSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(EnumerableSpec other);
    [CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.InterceptorInfo : object {
    [CompilerGeneratedAttribute]
private MethodsToGen <MethodsToGen>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> <ConfigBinder_Bind_instance>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> <ConfigBinder_Bind_instance_BinderOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> <ConfigBinder_Bind_key_instance>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<InvocationLocationInfo> <ConfigBinder>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<InvocationLocationInfo> <OptionsBuilderExt>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<InvocationLocationInfo> <ServiceCollectionExt>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public MethodsToGen MethodsToGen { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> ConfigBinder_Bind_instance { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> ConfigBinder_Bind_instance_BinderOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> ConfigBinder_Bind_key_instance { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<InvocationLocationInfo> ConfigBinder { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<InvocationLocationInfo> OptionsBuilderExt { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<InvocationLocationInfo> ServiceCollectionExt { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private InterceptorInfo(InterceptorInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public MethodsToGen get_MethodsToGen();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MethodsToGen(MethodsToGen value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> get_ConfigBinder_Bind_instance();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConfigBinder_Bind_instance(ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> get_ConfigBinder_Bind_instance_BinderOptions();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConfigBinder_Bind_instance_BinderOptions(ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> get_ConfigBinder_Bind_key_instance();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConfigBinder_Bind_key_instance(ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<InvocationLocationInfo> get_ConfigBinder();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConfigBinder(ImmutableEquatableArray`1<InvocationLocationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<InvocationLocationInfo> get_OptionsBuilderExt();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OptionsBuilderExt(ImmutableEquatableArray`1<InvocationLocationInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<InvocationLocationInfo> get_ServiceCollectionExt();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ServiceCollectionExt(ImmutableEquatableArray`1<InvocationLocationInfo> value);
    public IEnumerable`1<InvocationLocationInfo> GetInfo(MethodsToGen interceptor);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(InterceptorInfo left, InterceptorInfo right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(InterceptorInfo left, InterceptorInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(InterceptorInfo other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public InterceptorInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.InvocationLocationInfo : object {
    [CompilerGeneratedAttribute]
private MethodsToGen <Interceptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CharacterNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public MethodsToGen Interceptor { get; }
    public string FilePath { get; }
    public int LineNumber { get; }
    public int CharacterNumber { get; }
    public InvocationLocationInfo(MethodsToGen interceptor, IInvocationOperation invocation);
    [CompilerGeneratedAttribute]
private InvocationLocationInfo(InvocationLocationInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public MethodsToGen get_Interceptor();
    [CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public int get_CharacterNumber();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(InvocationLocationInfo left, InvocationLocationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(InvocationLocationInfo left, InvocationLocationInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(InvocationLocationInfo other);
    [CompilerGeneratedAttribute]
public InvocationLocationInfo <Clone>$();
    [CompilerGeneratedAttribute]
internal static string <.ctor>g__GetInterceptorFilePath|2_0(<>c__DisplayClass2_0& , <>c__DisplayClass2_1& );
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.KnownTypeSymbols : object {
    [CompilerGeneratedAttribute]
private CSharpCompilation <Compilation>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <String>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <CultureInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <DateOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <DateTimeOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <Guid>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <Half>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <Int128>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <TimeOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <TimeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <UInt128>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ActionOfBinderOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ConfigurationBinder>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ConfigurationKeyNameAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <OptionsBuilderConfigurationExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <OptionsBuilderOfT>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <OptionsBuilderOfT_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <OptionsConfigurationServiceCollectionExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <GenericIList_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <GenericICollection_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <GenericICollection>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <GenericIEnumerable_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IEnumerable>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <Dictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <GenericIDictionary_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <GenericIDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <HashSet>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IConfigurationSection>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IReadOnlyCollection_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IReadOnlyDictionary_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IReadOnlyList_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IReadOnlySet_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IServiceCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ISet_Unbound>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ISet>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <List>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <SerializationInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IntPtr>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <UIntPtr>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <MemberInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ParameterInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <Delegate>k__BackingField;
    public CSharpCompilation Compilation { get; }
    public INamedTypeSymbol String { get; }
    public INamedTypeSymbol CultureInfo { get; }
    public INamedTypeSymbol DateOnly { get; }
    public INamedTypeSymbol DateTimeOffset { get; }
    public INamedTypeSymbol Guid { get; }
    public INamedTypeSymbol Half { get; }
    public INamedTypeSymbol Int128 { get; }
    public INamedTypeSymbol TimeOnly { get; }
    public INamedTypeSymbol TimeSpan { get; }
    public INamedTypeSymbol UInt128 { get; }
    public INamedTypeSymbol Uri { get; }
    public INamedTypeSymbol Version { get; }
    public INamedTypeSymbol ActionOfBinderOptions { get; }
    public INamedTypeSymbol ConfigurationBinder { get; }
    public INamedTypeSymbol ConfigurationKeyNameAttribute { get; }
    public INamedTypeSymbol OptionsBuilderConfigurationExtensions { get; }
    public INamedTypeSymbol OptionsBuilderOfT { get; }
    public INamedTypeSymbol OptionsBuilderOfT_Unbound { get; }
    public INamedTypeSymbol OptionsConfigurationServiceCollectionExtensions { get; }
    public INamedTypeSymbol GenericIList_Unbound { get; }
    public INamedTypeSymbol GenericICollection_Unbound { get; }
    public INamedTypeSymbol GenericICollection { get; }
    public INamedTypeSymbol GenericIEnumerable_Unbound { get; }
    public INamedTypeSymbol IEnumerable { get; }
    public INamedTypeSymbol Dictionary { get; }
    public INamedTypeSymbol GenericIDictionary_Unbound { get; }
    public INamedTypeSymbol GenericIDictionary { get; }
    public INamedTypeSymbol HashSet { get; }
    public INamedTypeSymbol IConfiguration { get; }
    public INamedTypeSymbol IConfigurationSection { get; }
    public INamedTypeSymbol IDictionary { get; }
    public INamedTypeSymbol IReadOnlyCollection_Unbound { get; }
    public INamedTypeSymbol IReadOnlyDictionary_Unbound { get; }
    public INamedTypeSymbol IReadOnlyList_Unbound { get; }
    public INamedTypeSymbol IReadOnlySet_Unbound { get; }
    public INamedTypeSymbol IServiceCollection { get; }
    public INamedTypeSymbol ISet_Unbound { get; }
    public INamedTypeSymbol ISet { get; }
    public INamedTypeSymbol List { get; }
    public INamedTypeSymbol SerializationInfo { get; }
    public INamedTypeSymbol IntPtr { get; }
    public INamedTypeSymbol UIntPtr { get; }
    public INamedTypeSymbol MemberInfo { get; }
    public INamedTypeSymbol ParameterInfo { get; }
    public INamedTypeSymbol Delegate { get; }
    public KnownTypeSymbols(CSharpCompilation compilation);
    [CompilerGeneratedAttribute]
public CSharpCompilation get_Compilation();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_String();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_CultureInfo();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_DateOnly();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_DateTimeOffset();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_Guid();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_Half();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_Int128();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_TimeOnly();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_TimeSpan();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_UInt128();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_Uri();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_Version();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ActionOfBinderOptions();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ConfigurationBinder();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ConfigurationKeyNameAttribute();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_OptionsBuilderConfigurationExtensions();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_OptionsBuilderOfT();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_OptionsBuilderOfT_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_OptionsConfigurationServiceCollectionExtensions();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_GenericIList_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_GenericICollection_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_GenericICollection();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_GenericIEnumerable_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IEnumerable();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_Dictionary();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_GenericIDictionary_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_GenericIDictionary();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_HashSet();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IConfiguration();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IConfigurationSection();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IDictionary();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IReadOnlyCollection_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IReadOnlyDictionary_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IReadOnlyList_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IReadOnlySet_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IServiceCollection();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ISet_Unbound();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ISet();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_List();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_SerializationInfo();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IntPtr();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_UIntPtr();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_MemberInfo();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ParameterInfo();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_Delegate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public abstract class Microsoft.Extensions.Configuration.Binder.SourceGeneration.MemberSpec : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultValueExpr>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <TypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurationKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; }
    public string DefaultValueExpr { get; protected set; }
    public TypeRef TypeRef { get; }
    [RequiredMemberAttribute]
public string ConfigurationKeyName { get; public set; }
    public bool CanGet { get; }
    public bool CanSet { get; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public MemberSpec(ISymbol member, TypeRef typeRef);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
protected MemberSpec(MemberSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_DefaultValueExpr();
    [CompilerGeneratedAttribute]
protected void set_DefaultValueExpr(string value);
    [CompilerGeneratedAttribute]
public TypeRef get_TypeRef();
    [CompilerGeneratedAttribute]
public string get_ConfigurationKeyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConfigurationKeyName(string value);
    public abstract virtual bool get_CanGet();
    public abstract virtual bool get_CanSet();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(MemberSpec left, MemberSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(MemberSpec left, MemberSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(MemberSpec other);
    [CompilerGeneratedAttribute]
public abstract virtual MemberSpec <Clone>$();
}
[FlagsAttribute]
public enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.MethodsToGen : Enum {
    public int value__;
    public static MethodsToGen None;
    public static MethodsToGen Any;
    public static MethodsToGen ConfigBinder_Bind_instance;
    public static MethodsToGen ConfigBinder_Bind_instance_BinderOptions;
    public static MethodsToGen ConfigBinder_Bind_key_instance;
    public static MethodsToGen ConfigBinder_Get_T;
    public static MethodsToGen ConfigBinder_Get_T_BinderOptions;
    public static MethodsToGen ConfigBinder_Get_TypeOf;
    public static MethodsToGen ConfigBinder_Get_TypeOf_BinderOptions;
    public static MethodsToGen ConfigBinder_GetValue_TypeOf_key;
    public static MethodsToGen ConfigBinder_GetValue_TypeOf_key_defaultValue;
    public static MethodsToGen ConfigBinder_GetValue_T_key;
    public static MethodsToGen ConfigBinder_GetValue_T_key_defaultValue;
    public static MethodsToGen ConfigBinder_Bind;
    public static MethodsToGen ConfigBinder_Get;
    public static MethodsToGen ConfigBinder_GetValue;
    public static MethodsToGen ConfigBinder_Any;
    public static MethodsToGen OptionsBuilderExt_Bind_T;
    public static MethodsToGen OptionsBuilderExt_Bind_T_BinderOptions;
    public static MethodsToGen OptionsBuilderExt_BindConfiguration_T_path_BinderOptions;
    public static MethodsToGen OptionsBuilderExt_Bind;
    public static MethodsToGen OptionsBuilderExt_BindConfiguration;
    public static MethodsToGen OptionsBuilderExt_Any;
    public static MethodsToGen ServiceCollectionExt_Configure_T;
    public static MethodsToGen ServiceCollectionExt_Configure_T_name;
    public static MethodsToGen ServiceCollectionExt_Configure_T_BinderOptions;
    public static MethodsToGen ServiceCollectionExt_Configure_T_name_BinderOptions;
    public static MethodsToGen ServiceCollectionExt_Configure;
    public static MethodsToGen ServiceCollectionExt_Any;
}
[FlagsAttribute]
public enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.MethodsToGen_CoreBindingHelper : Enum {
    public int value__;
    public static MethodsToGen_CoreBindingHelper None;
    public static MethodsToGen_CoreBindingHelper BindCore;
    public static MethodsToGen_CoreBindingHelper GetCore;
    public static MethodsToGen_CoreBindingHelper GetValueCore;
    public static MethodsToGen_CoreBindingHelper BindCoreMain;
    public static MethodsToGen_CoreBindingHelper Initialize;
    public static MethodsToGen_CoreBindingHelper HasValueOrChildren;
    public static MethodsToGen_CoreBindingHelper AsConfigWithChildren;
    public static MethodsToGen_CoreBindingHelper ParsePrimitive;
}
public enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.NotSupportedReason : Enum {
    public int value__;
    public static NotSupportedReason UnknownType;
    public static NotSupportedReason MissingPublicInstanceConstructor;
    public static NotSupportedReason CollectionNotSupported;
    public static NotSupportedReason DictionaryKeyNotSupported;
    public static NotSupportedReason ElementTypeNotSupported;
    public static NotSupportedReason MultipleParameterizedConstructors;
    public static NotSupportedReason MultiDimArraysNotSupported;
    public static NotSupportedReason NullableUnderlyingTypeNotSupported;
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.NullableSpec : TypeSpec {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public NullableSpec(ITypeSymbol type, TypeRef underlyingTypeRef);
    [CompilerGeneratedAttribute]
private NullableSpec(NullableSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(NullableSpec left, NullableSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(NullableSpec left, NullableSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypeSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(NullableSpec other);
    [CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
public enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.ObjectInstantiationStrategy : Enum {
    public int value__;
    public static ObjectInstantiationStrategy None;
    public static ObjectInstantiationStrategy ParameterlessConstructor;
    public static ObjectInstantiationStrategy ParameterizedConstructor;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ObjectSpec : ComplexTypeSpec {
    [CompilerGeneratedAttribute]
private ObjectInstantiationStrategy <InstantiationStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<PropertySpec> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<ParameterSpec> <ConstructorParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitExceptionMessage>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ObjectInstantiationStrategy InstantiationStrategy { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableEquatableArray`1<PropertySpec> Properties { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableEquatableArray`1<ParameterSpec> ConstructorParameters { get; }
    public string InitExceptionMessage { get; }
    [NullableContextAttribute("1")]
public ObjectSpec(INamedTypeSymbol type, ObjectInstantiationStrategy instantiationStrategy, ImmutableEquatableArray`1<PropertySpec> properties, ImmutableEquatableArray`1<ParameterSpec> constructorParameters, string initExceptionMessage);
    [CompilerGeneratedAttribute]
private ObjectSpec(ObjectSpec original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ObjectInstantiationStrategy get_InstantiationStrategy();
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<PropertySpec> get_Properties();
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<ParameterSpec> get_ConstructorParameters();
    [CompilerGeneratedAttribute]
public string get_InitExceptionMessage();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ObjectSpec left, ObjectSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ObjectSpec left, ObjectSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ComplexTypeSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ObjectSpec other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ParameterSpec : MemberSpec {
    [CompilerGeneratedAttribute]
private bool <ErrorOnFailedBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private RefKind <RefKind>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool ErrorOnFailedBinding { get; private set; }
    public RefKind RefKind { get; }
    public bool CanGet { get; }
    public bool CanSet { get; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public ParameterSpec(IParameterSymbol parameter, TypeRef typeRef);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private ParameterSpec(ParameterSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_ErrorOnFailedBinding();
    [CompilerGeneratedAttribute]
private void set_ErrorOnFailedBinding(bool value);
    [CompilerGeneratedAttribute]
public RefKind get_RefKind();
    public virtual bool get_CanGet();
    public virtual bool get_CanSet();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ParameterSpec left, ParameterSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ParameterSpec left, ParameterSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(MemberSpec other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ParameterSpec other);
    [CompilerGeneratedAttribute]
public virtual MemberSpec <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ParsableFromStringSpec : SimpleTypeSpec {
    [CompilerGeneratedAttribute]
private StringParsableTypeKind <StringParsableTypeKind>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public StringParsableTypeKind StringParsableTypeKind { get; public set; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public ParsableFromStringSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private ParsableFromStringSpec(ParsableFromStringSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public StringParsableTypeKind get_StringParsableTypeKind();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_StringParsableTypeKind(StringParsableTypeKind value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ParsableFromStringSpec left, ParsableFromStringSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ParsableFromStringSpec left, ParsableFromStringSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(SimpleTypeSpec other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ParsableFromStringSpec other);
    [CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.Binder.SourceGeneration.ParserExtensions : object {
    private static SymbolDisplayFormat s_identifierCompatibleFormat;
    private static SymbolDisplayFormat s_minimalDisplayFormat;
    private static ParserExtensions();
    [ExtensionAttribute]
public static void RegisterCacheEntry(Dictionary`2<TKey, TValue> cache, TKey key, TEntry entry);
    [ExtensionAttribute]
public static string ToIdentifierCompatibleSubstring(ITypeSymbol type);
    [ExtensionAttribute]
public static ValueTuple`2<string, string> GetTypeNames(ITypeSymbol type);
    [ExtensionAttribute]
public static string GetFullName(ITypeSymbol type);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.PropertySpec : MemberSpec {
    [CompilerGeneratedAttribute]
private ParameterSpec <MatchingCtorParam>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStatic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetOnInit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanSet>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ParameterSpec MatchingCtorParam { get; public set; }
    public bool IsStatic { get; }
    public bool SetOnInit { get; }
    public bool CanGet { get; }
    public bool CanSet { get; }
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public PropertySpec(IPropertySymbol property, TypeRef typeRef);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private PropertySpec(PropertySpec original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ParameterSpec get_MatchingCtorParam();
    [CompilerGeneratedAttribute]
public void set_MatchingCtorParam(ParameterSpec value);
    [CompilerGeneratedAttribute]
public bool get_IsStatic();
    [CompilerGeneratedAttribute]
public bool get_SetOnInit();
    [CompilerGeneratedAttribute]
public virtual bool get_CanGet();
    [CompilerGeneratedAttribute]
public virtual bool get_CanSet();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(PropertySpec left, PropertySpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(PropertySpec left, PropertySpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(MemberSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(PropertySpec other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual MemberSpec <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.Binder.SourceGeneration.SimpleTypeSpec : TypeSpec {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public SimpleTypeSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
protected SimpleTypeSpec(SimpleTypeSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(SimpleTypeSpec left, SimpleTypeSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(SimpleTypeSpec left, SimpleTypeSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypeSpec other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(SimpleTypeSpec other);
    [CompilerGeneratedAttribute]
public abstract virtual TypeSpec <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.SourceGenerationSpec : object {
    [CompilerGeneratedAttribute]
private InterceptorInfo <InterceptorInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private BindingHelperInfo <BindingHelperInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypeSpec> <ConfigTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public InterceptorInfo InterceptorInfo { get; public set; }
    [RequiredMemberAttribute]
public BindingHelperInfo BindingHelperInfo { get; public set; }
    [RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypeSpec> ConfigTypes { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private SourceGenerationSpec(SourceGenerationSpec original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public InterceptorInfo get_InterceptorInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InterceptorInfo(InterceptorInfo value);
    [CompilerGeneratedAttribute]
public BindingHelperInfo get_BindingHelperInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_BindingHelperInfo(BindingHelperInfo value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypeSpec> get_ConfigTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConfigTypes(ImmutableEquatableArray`1<TypeSpec> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(SourceGenerationSpec left, SourceGenerationSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(SourceGenerationSpec left, SourceGenerationSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(SourceGenerationSpec other);
    [CompilerGeneratedAttribute]
public SourceGenerationSpec <Clone>$();
}
public enum Microsoft.Extensions.Configuration.Binder.SourceGeneration.StringParsableTypeKind : Enum {
    public int value__;
    public static StringParsableTypeKind None;
    public static StringParsableTypeKind AssignFromSectionValue;
    public static StringParsableTypeKind Enum;
    public static StringParsableTypeKind ByteArray;
    public static StringParsableTypeKind Integer;
    public static StringParsableTypeKind Float;
    public static StringParsableTypeKind Parse;
    public static StringParsableTypeKind ParseInvariant;
    public static StringParsableTypeKind CultureInfo;
    public static StringParsableTypeKind Uri;
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.TypedInterceptorInfoBuildler : object {
    private Dictionary`2<ComplexTypeSpec, Builder> _invocationInfoBuilderCache;
    public void RegisterInterceptor(MethodsToGen overload, ComplexTypeSpec type, IInvocationOperation invocation);
    public ImmutableEquatableArray`1<TypedInterceptorInvocationInfo> ToIncrementalValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Binder.SourceGeneration.TypedInterceptorInvocationInfo : object {
    [CompilerGeneratedAttribute]
private ComplexTypeSpec <TargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<InvocationLocationInfo> <Locations>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public ComplexTypeSpec TargetType { get; public set; }
    public ImmutableEquatableArray`1<InvocationLocationInfo> Locations { get; public set; }
    public TypedInterceptorInvocationInfo(ComplexTypeSpec TargetType, ImmutableEquatableArray`1<InvocationLocationInfo> Locations);
    [CompilerGeneratedAttribute]
private TypedInterceptorInvocationInfo(TypedInterceptorInvocationInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ComplexTypeSpec get_TargetType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TargetType(ComplexTypeSpec value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<InvocationLocationInfo> get_Locations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Locations(ImmutableEquatableArray`1<InvocationLocationInfo> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypedInterceptorInvocationInfo left, TypedInterceptorInvocationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypedInterceptorInvocationInfo left, TypedInterceptorInvocationInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypedInterceptorInvocationInfo other);
    [CompilerGeneratedAttribute]
public TypedInterceptorInvocationInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(ComplexTypeSpec& TargetType, ImmutableEquatableArray`1& Locations);
}
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.TypeIndex : object {
    private Dictionary`2<TypeRef, TypeSpec> _index;
    public TypeIndex(IEnumerable`1<TypeSpec> typeSpecs);
    public bool CanBindTo(TypeRef typeRef);
    public bool CanInstantiate(ComplexTypeSpec typeSpec);
    public bool HasBindableMembers(ComplexTypeSpec typeSpec);
    public bool ShouldBindTo(PropertySpec property);
    public TypeSpec GetEffectiveTypeSpec(TypeRef typeRef);
    public TypeSpec GetEffectiveTypeSpec(TypeSpec typeSpec);
    public TypeSpec GetTypeSpec(TypeRef typeRef);
    public static string GetInstantiationTypeDisplayString(CollectionWithCtorInitSpec type);
    public static string GetPopulationCastTypeDisplayString(CollectionWithCtorInitSpec type);
    public static string GetGenericTypeDisplayString(CollectionWithCtorInitSpec type, Enum genericProxyTypeName);
    public bool KeyIsSupported(DictionarySpec typeSpec);
    public static string GetConfigKeyCacheFieldName(ObjectSpec type);
    public static string GetParseMethodName(ParsableFromStringSpec type);
    [CompilerGeneratedAttribute]
private bool <ShouldBindTo>g__IsAccessible|5_0(<>c__DisplayClass5_0& );
    [CompilerGeneratedAttribute]
private bool <ShouldBindTo>g__IsDictWithUnsupportedKey|5_1(<>c__DisplayClass5_0& );
    [CompilerGeneratedAttribute]
private bool <ShouldBindTo>g__IsCollectionAndCannotOverride|5_2(<>c__DisplayClass5_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Name={DisplayString}, Kind={SpecKind}")]
public abstract class Microsoft.Extensions.Configuration.Binder.SourceGeneration.TypeSpec : object {
    [CompilerGeneratedAttribute]
private TypeRef <TypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <EffectiveTypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentifierCompatibleSubstring>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueType>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public TypeRef TypeRef { get; }
    public TypeRef EffectiveTypeRef { get; protected set; }
    public string FullName { get; }
    public string DisplayString { get; }
    public string IdentifierCompatibleSubstring { get; }
    public bool IsValueType { get; }
    public TypeSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
protected TypeSpec(TypeSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TypeRef get_TypeRef();
    [CompilerGeneratedAttribute]
public TypeRef get_EffectiveTypeRef();
    [CompilerGeneratedAttribute]
protected Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EffectiveTypeRef(TypeRef value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
public string get_DisplayString();
    [CompilerGeneratedAttribute]
public string get_IdentifierCompatibleSubstring();
    [CompilerGeneratedAttribute]
public bool get_IsValueType();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypeSpec left, TypeSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypeSpec left, TypeSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TypeSpec other);
    [CompilerGeneratedAttribute]
public abstract virtual TypeSpec <Clone>$();
}
[RequiredMemberAttribute]
internal class Microsoft.Extensions.Configuration.Binder.SourceGeneration.UnsupportedTypeSpec : TypeSpec {
    [CompilerGeneratedAttribute]
private NotSupportedReason <NotSupportedReason>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [RequiredMemberAttribute]
public NotSupportedReason NotSupportedReason { get; public set; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public UnsupportedTypeSpec(ITypeSymbol type);
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private UnsupportedTypeSpec(UnsupportedTypeSpec original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public NotSupportedReason get_NotSupportedReason();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NotSupportedReason(NotSupportedReason value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(UnsupportedTypeSpec left, UnsupportedTypeSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(UnsupportedTypeSpec left, UnsupportedTypeSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypeSpec other);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(UnsupportedTypeSpec other);
    [CompilerGeneratedAttribute]
public virtual TypeSpec <Clone>$();
}
internal static class SourceGenerators.CSharpSyntaxUtilities : object {
    public static string DoubleFormatString;
    public static string SingleFormatString;
    public static string FormatLiteral(object value, TypeRef type);
    [CompilerGeneratedAttribute]
internal static string <FormatLiteral>g__FormatNumber|2_0(<>c__DisplayClass2_0& );
}
[IsReadOnlyAttribute]
internal class SourceGenerators.DiagnosticInfo : ValueType {
    [CompilerGeneratedAttribute]
private DiagnosticDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <MessageArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    public DiagnosticDescriptor Descriptor { get; private set; }
    public Object[] MessageArgs { get; private set; }
    public Location Location { get; private set; }
    [CompilerGeneratedAttribute]
public DiagnosticDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Descriptor(DiagnosticDescriptor value);
    [CompilerGeneratedAttribute]
public Object[] get_MessageArgs();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MessageArgs(Object[] value);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Location(Location value);
    public static DiagnosticInfo Create(DiagnosticDescriptor descriptor, Location location, Object[] messageArgs);
    public Diagnostic CreateDiagnostic();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(DiagnosticInfo other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
internal static Location <Create>g__GetTrimmedLocation|12_0(Location location);
}
[ExtensionAttribute]
internal static class SourceGenerators.ImmutableEquatableArray : object {
    [ExtensionAttribute]
public static ImmutableEquatableArray`1<T> ToImmutableEquatableArray(IEnumerable`1<T> values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class SourceGenerators.ImmutableEquatableArray`1 : object {
    [CompilerGeneratedAttribute]
private static ImmutableEquatableArray`1<T> <Empty>k__BackingField;
    private T[] _values;
    public static ImmutableEquatableArray`1<T> Empty { get; }
    public T Item { get; }
    public int Count { get; }
    public ImmutableEquatableArray`1(IEnumerable`1<T> values);
    private static ImmutableEquatableArray`1();
    [CompilerGeneratedAttribute]
public static ImmutableEquatableArray`1<T> get_Empty();
    public sealed virtual T get_Item(int index);
    public sealed virtual int get_Count();
    public sealed virtual bool Equals(ImmutableEquatableArray`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("0")]
public Enumerator<T> GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class SourceGenerators.SourceWriter : object {
    private static char IndentationChar;
    private static int CharsPerIndentation;
    private StringBuilder _sb;
    private int _indentation;
    public int Indentation { get; public set; }
    public int get_Indentation();
    public void set_Indentation(int value);
    public void WriteLine(char value);
    public void WriteLine(string text);
    public void WriteLine();
    public SourceText ToSourceText();
    public void Reset();
    private void AddIndentation();
    private static ReadOnlySpan`1<char> GetNextLine(ReadOnlySpan`1& remainingText, Boolean& isFinalLine);
    private static void AppendSpan(StringBuilder builder, ReadOnlySpan`1<char> span);
    [CompilerGeneratedAttribute]
internal static void <set_Indentation>g__Throw|6_0();
}
[ExtensionAttribute]
internal static class SourceGenerators.TypeModelHelper : object {
    [ExtensionAttribute]
public static List`1<ITypeSymbol> GetAllTypeArgumentsInScope(INamedTypeSymbol type);
    [ExtensionAttribute]
public static string GetFullyQualifiedName(ITypeSymbol type);
    [CompilerGeneratedAttribute]
internal static void <GetAllTypeArgumentsInScope>g__TraverseContainingTypes|0_0(INamedTypeSymbol current, <>c__DisplayClass0_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Name = {Name}")]
public class SourceGenerators.TypeRef : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullyQualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeKind <TypeKind>k__BackingField;
    [CompilerGeneratedAttribute]
private SpecialType <SpecialType>k__BackingField;
    public string Name { get; }
    public string FullyQualifiedName { get; }
    public bool IsValueType { get; }
    public TypeKind TypeKind { get; }
    public SpecialType SpecialType { get; }
    public bool CanBeNull { get; }
    public TypeRef(ITypeSymbol type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedName();
    [CompilerGeneratedAttribute]
public bool get_IsValueType();
    [CompilerGeneratedAttribute]
public TypeKind get_TypeKind();
    [CompilerGeneratedAttribute]
public SpecialType get_SpecialType();
    public bool get_CanBeNull();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(TypeRef other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RefStructs")]
[DefaultMemberAttribute("Item")]
internal class System.Collections.Generic.ValueListBuilder`1 : ValueType {
    private Span`1<T> _span;
    private T[] _arrayFromPool;
    private int _pos;
    public int Length { get; public set; }
    public T& Item { get; }
    public ValueListBuilder`1(Span`1<T> initialSpan);
    public int get_Length();
    public void set_Length(int value);
    public T& get_Item(int index);
    public void Append(T item);
    public void Append(ReadOnlySpan`1<T> source);
    private void AppendMultiChar(ReadOnlySpan`1<T> source);
    public void Insert(int index, ReadOnlySpan`1<T> source);
    public Span`1<T> AppendSpan(int length);
    private Span`1<T> AppendSpanWithGrow(int length);
    private void AddWithResize(T item);
    public ReadOnlySpan`1<T> AsSpan();
    public bool TryCopyTo(Span`1<T> destination, Int32& itemsWritten);
    public void Dispose();
    private void Grow(int additionalCapacityRequired);
    public T Pop();
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("32")]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
internal static class System.Numerics.Hashing.HashHelpers : object {
    public static int Combine(int h1, int h2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
public class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsOptional(bool value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsByRefLikeAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
[EditorBrowsableAttribute("1")]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.ScopedRefAttribute : Attribute {
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string CollectionNotSupported { get; }
    internal static string CouldNotDetermineTypeInfoMessageFormat { get; }
    internal static string CouldNotDetermineTypeInfoTitle { get; }
    internal static string DictionaryKeyNotSupported { get; }
    internal static string ElementTypeNotSupported { get; }
    internal static string Language_VersionIsNotSupportedMessageFormat { get; }
    internal static string LanguageVersionIsNotSupportedTitle { get; }
    internal static string MissingPublicInstanceConstructor { get; }
    internal static string MultiDimArraysNotSupported { get; }
    internal static string MultipleParameterizedConstructors { get; }
    internal static string NullableUnderlyingTypeNotSupported { get; }
    internal static string PropertyNotSupportedMessageFormat { get; }
    internal static string PropertyNotSupportedTitle { get; }
    internal static string TypeNotSupported { get; }
    internal static string TypeNotSupportedTitle { get; }
    internal static string ValueTypesInvalidForBindMessageFormat { get; }
    internal static string ValueTypesInvalidForBindTitle { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_CollectionNotSupported();
    internal static string get_CouldNotDetermineTypeInfoMessageFormat();
    internal static string get_CouldNotDetermineTypeInfoTitle();
    internal static string get_DictionaryKeyNotSupported();
    internal static string get_ElementTypeNotSupported();
    internal static string get_Language_VersionIsNotSupportedMessageFormat();
    internal static string get_LanguageVersionIsNotSupportedTitle();
    internal static string get_MissingPublicInstanceConstructor();
    internal static string get_MultiDimArraysNotSupported();
    internal static string get_MultipleParameterizedConstructors();
    internal static string get_NullableUnderlyingTypeNotSupported();
    internal static string get_PropertyNotSupportedMessageFormat();
    internal static string get_PropertyNotSupportedTitle();
    internal static string get_TypeNotSupported();
    internal static string get_TypeNotSupportedTitle();
    internal static string get_ValueTypesInvalidForBindMessageFormat();
    internal static string get_ValueTypesInvalidForBindTitle();
}
