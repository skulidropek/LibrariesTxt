[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HttpExtensions : object {
    internal static string UrlEncodedFormContentType;
    internal static string MultipartFormContentType;
    internal static string OriginalEndpointKey;
    internal static bool IsValidHttpMethodForForm(string method);
    [NullableContextAttribute("2")]
internal static bool IsValidContentTypeForForm(string contentType);
    internal static Endpoint GetOriginalEndpoint(HttpContext context);
    internal static void ClearEndpoint(HttpContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.AntiforgeryFeature : object {
    public bool HaveDeserializedCookieToken { get; public set; }
    public AntiforgeryToken CookieToken { get; public set; }
    public bool HaveDeserializedRequestToken { get; public set; }
    public AntiforgeryToken RequestToken { get; public set; }
    public bool HaveGeneratedNewCookieToken { get; public set; }
    public AntiforgeryToken NewCookieToken { get; public set; }
    public string NewCookieTokenString { get; public set; }
    public AntiforgeryToken NewRequestToken { get; public set; }
    public string NewRequestTokenString { get; public set; }
    public bool HaveStoredNewCookieToken { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_HaveDeserializedCookieToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HaveDeserializedCookieToken(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual AntiforgeryToken get_CookieToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CookieToken(AntiforgeryToken value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_HaveDeserializedRequestToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HaveDeserializedRequestToken(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual AntiforgeryToken get_RequestToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestToken(AntiforgeryToken value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_HaveGeneratedNewCookieToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HaveGeneratedNewCookieToken(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual AntiforgeryToken get_NewCookieToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NewCookieToken(AntiforgeryToken value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NewCookieTokenString();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NewCookieTokenString(string value);
    [CompilerGeneratedAttribute]
public sealed virtual AntiforgeryToken get_NewRequestToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NewRequestToken(AntiforgeryToken value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NewRequestTokenString();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NewRequestTokenString(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_HaveStoredNewCookieToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HaveStoredNewCookieToken(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Antiforgery.AntiforgeryLoggerExtensions : object {
    [ExtensionAttribute]
[LoggerMessageAttribute("1", "3", "Antiforgery validation failed with message '{Message}'.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void ValidationFailed(ILogger logger, string message);
    [ExtensionAttribute]
[LoggerMessageAttribute("2", "1", "Antiforgery successfully validated a request.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void ValidatedAntiforgeryToken(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("3", "3", "The required antiforgery cookie '{CookieName}' is not present.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void MissingCookieToken(ILogger logger, string cookieName);
    [ExtensionAttribute]
[LoggerMessageAttribute("4", "3", "The required antiforgery request token was not provided in either form field '{FormFieldName}' or header '{HeaderName}'.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void MissingRequestToken(ILogger logger, string formFieldName, string headerName);
    [ExtensionAttribute]
[LoggerMessageAttribute("5", "1", "A new antiforgery cookie token was created.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void NewCookieToken(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("6", "1", "An antiforgery cookie token was reused.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void ReusedCookieToken(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("7", "4", "An exception was thrown while deserializing the token.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void TokenDeserializeException(ILogger logger, Exception exception);
    [ExtensionAttribute]
[LoggerMessageAttribute("8", "3", "The 'Cache-Control' and 'Pragma' headers have been overridden and set to 'no-cache, no-store' and 'no-cache' respectively to prevent caching of this response. Any response that uses antiforgery should not be cached.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void ResponseCacheHeadersOverridenToNoCache(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("9", "1", "Failed to deserialize antiforgery tokens.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void FailedToDeserialzeTokens(ILogger logger, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions : object {
    public static string DefaultCookiePrefix;
    public CookieBuilder Cookie { get; public set; }
    public string FormFieldName { get; public set; }
    [NullableAttribute("2")]
public string HeaderName { get; public set; }
    public bool SuppressXFrameOptionsHeader { get; public set; }
    public CookieBuilder get_Cookie();
    public void set_Cookie(CookieBuilder value);
    public string get_FormFieldName();
    public void set_FormFieldName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_HeaderName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_HeaderName(string value);
    [CompilerGeneratedAttribute]
public bool get_SuppressXFrameOptionsHeader();
    [CompilerGeneratedAttribute]
public void set_SuppressXFrameOptionsHeader(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.AntiforgeryOptionsSetup : object {
    public AntiforgeryOptionsSetup(IOptions`1<DataProtectionOptions> dataProtectionOptions);
    public sealed virtual void Configure(AntiforgeryOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.AntiforgerySerializationContext : object {
    public MemoryStream Stream { get; }
    public BinaryReader Reader { get; }
    public BinaryWriter Writer { get; }
    public MemoryStream get_Stream();
    public BinaryReader get_Reader();
    public BinaryWriter get_Writer();
    public Char[] GetChars(int count);
    public void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.AntiforgerySerializationContextPooledObjectPolicy : object {
    public sealed virtual AntiforgerySerializationContext Create();
    public sealed virtual bool Return(AntiforgerySerializationContext obj);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.AntiforgeryToken : object {
    internal static int SecurityTokenBitLength;
    internal static int ClaimUidBitLength;
    [NullableAttribute("1")]
public string AdditionalData { get; public set; }
    public BinaryBlob ClaimUid { get; public set; }
    public bool IsCookieToken { get; public set; }
    public BinaryBlob SecurityToken { get; public set; }
    public string Username { get; public set; }
    [NullableContextAttribute("1")]
public string get_AdditionalData();
    [NullableContextAttribute("1")]
public void set_AdditionalData(string value);
    [CompilerGeneratedAttribute]
public BinaryBlob get_ClaimUid();
    [CompilerGeneratedAttribute]
public void set_ClaimUid(BinaryBlob value);
    [CompilerGeneratedAttribute]
public bool get_IsCookieToken();
    [CompilerGeneratedAttribute]
public void set_IsCookieToken(bool value);
    public BinaryBlob get_SecurityToken();
    public void set_SecurityToken(BinaryBlob value);
    public string get_Username();
    public void set_Username(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet : object {
    public string RequestToken { get; }
    [NullableAttribute("1")]
public string FormFieldName { get; }
    public string HeaderName { get; }
    public string CookieToken { get; }
    public AntiforgeryTokenSet(string requestToken, string cookieToken, string formFieldName, string headerName);
    [CompilerGeneratedAttribute]
public string get_RequestToken();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_FormFieldName();
    [CompilerGeneratedAttribute]
public string get_HeaderName();
    [CompilerGeneratedAttribute]
public string get_CookieToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException : Exception {
    public AntiforgeryValidationException(string message);
    public AntiforgeryValidationException(string message, Exception innerException);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationFeature : object {
    [NullableAttribute("1")]
public static IAntiforgeryValidationFeature Valid;
    public bool IsValid { get; }
    public Exception Error { get; }
    public AntiforgeryValidationFeature(bool isValid, AntiforgeryValidationException exception);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_Error();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerString}")]
internal class Microsoft.AspNetCore.Antiforgery.BinaryBlob : object {
    public int BitLength { get; }
    public BinaryBlob(int bitLength);
    public BinaryBlob(int bitLength, Byte[] data);
    public int get_BitLength();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(BinaryBlob other);
    public Byte[] GetData();
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.DefaultAntiforgery : object {
    public DefaultAntiforgery(IOptions`1<AntiforgeryOptions> antiforgeryOptionsAccessor, IAntiforgeryTokenGenerator tokenGenerator, IAntiforgeryTokenSerializer tokenSerializer, IAntiforgeryTokenStore tokenStore, ILoggerFactory loggerFactory);
    public sealed virtual AntiforgeryTokenSet GetAndStoreTokens(HttpContext httpContext);
    public sealed virtual AntiforgeryTokenSet GetTokens(HttpContext httpContext);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Antiforgery.DefaultAntiforgery/<IsRequestValidAsync>d__8")]
public sealed virtual Task`1<bool> IsRequestValidAsync(HttpContext httpContext);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Antiforgery.DefaultAntiforgery/<ValidateRequestAsync>d__9")]
public sealed virtual Task ValidateRequestAsync(HttpContext httpContext);
    public sealed virtual void SetCookieTokenAndHeader(HttpContext httpContext);
}
internal class Microsoft.AspNetCore.Antiforgery.DefaultAntiforgeryAdditionalDataProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual string GetAdditionalData(HttpContext context);
    [NullableContextAttribute("1")]
public sealed virtual bool ValidateAdditionalData(HttpContext context, string additionalData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.DefaultAntiforgeryTokenGenerator : object {
    public DefaultAntiforgeryTokenGenerator(IClaimUidExtractor claimUidExtractor, IAntiforgeryAdditionalDataProvider additionalDataProvider);
    public sealed virtual AntiforgeryToken GenerateCookieToken();
    public sealed virtual AntiforgeryToken GenerateRequestToken(HttpContext httpContext, AntiforgeryToken cookieToken);
    [NullableContextAttribute("2")]
public sealed virtual bool IsCookieTokenValid(AntiforgeryToken cookieToken);
    public sealed virtual bool TryValidateTokenSet(HttpContext httpContext, AntiforgeryToken cookieToken, AntiforgeryToken requestToken, String& message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.DefaultAntiforgeryTokenSerializer : object {
    public DefaultAntiforgeryTokenSerializer(IDataProtectionProvider provider, ObjectPool`1<AntiforgerySerializationContext> pool);
    public sealed virtual AntiforgeryToken Deserialize(string serializedToken);
    public sealed virtual string Serialize(AntiforgeryToken token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.DefaultAntiforgeryTokenStore : object {
    public DefaultAntiforgeryTokenStore(IOptions`1<AntiforgeryOptions> optionsAccessor);
    public sealed virtual string GetCookieToken(HttpContext httpContext);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Antiforgery.DefaultAntiforgeryTokenStore/<GetRequestTokensAsync>d__3")]
public sealed virtual Task`1<AntiforgeryTokenSet> GetRequestTokensAsync(HttpContext httpContext);
    public sealed virtual void SaveCookieToken(HttpContext httpContext, string token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.DefaultClaimUidExtractor : object {
    public DefaultClaimUidExtractor(ObjectPool`1<AntiforgerySerializationContext> pool);
    public sealed virtual string ExtractClaimUid(ClaimsPrincipal claimsPrincipal);
    public static IList`1<string> GetUniqueIdentifierParameters(IEnumerable`1<ClaimsIdentity> claimsIdentities);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Antiforgery.IAntiforgery {
    public abstract virtual AntiforgeryTokenSet GetAndStoreTokens(HttpContext httpContext);
    public abstract virtual AntiforgeryTokenSet GetTokens(HttpContext httpContext);
    public abstract virtual Task`1<bool> IsRequestValidAsync(HttpContext httpContext);
    public abstract virtual Task ValidateRequestAsync(HttpContext httpContext);
    public abstract virtual void SetCookieTokenAndHeader(HttpContext httpContext);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Antiforgery.IAntiforgeryAdditionalDataProvider {
    public abstract virtual string GetAdditionalData(HttpContext context);
    public abstract virtual bool ValidateAdditionalData(HttpContext context, string additionalData);
}
[NullableContextAttribute("2")]
internal interface Microsoft.AspNetCore.Antiforgery.IAntiforgeryFeature {
    public AntiforgeryToken CookieToken { get; public set; }
    public bool HaveDeserializedCookieToken { get; public set; }
    public bool HaveDeserializedRequestToken { get; public set; }
    public bool HaveGeneratedNewCookieToken { get; public set; }
    public bool HaveStoredNewCookieToken { get; public set; }
    public AntiforgeryToken NewCookieToken { get; public set; }
    public string NewCookieTokenString { get; public set; }
    public AntiforgeryToken NewRequestToken { get; public set; }
    public string NewRequestTokenString { get; public set; }
    public AntiforgeryToken RequestToken { get; public set; }
    public abstract virtual AntiforgeryToken get_CookieToken();
    public abstract virtual void set_CookieToken(AntiforgeryToken value);
    public abstract virtual bool get_HaveDeserializedCookieToken();
    public abstract virtual void set_HaveDeserializedCookieToken(bool value);
    public abstract virtual bool get_HaveDeserializedRequestToken();
    public abstract virtual void set_HaveDeserializedRequestToken(bool value);
    public abstract virtual bool get_HaveGeneratedNewCookieToken();
    public abstract virtual void set_HaveGeneratedNewCookieToken(bool value);
    public abstract virtual bool get_HaveStoredNewCookieToken();
    public abstract virtual void set_HaveStoredNewCookieToken(bool value);
    public abstract virtual AntiforgeryToken get_NewCookieToken();
    public abstract virtual void set_NewCookieToken(AntiforgeryToken value);
    public abstract virtual string get_NewCookieTokenString();
    public abstract virtual void set_NewCookieTokenString(string value);
    public abstract virtual AntiforgeryToken get_NewRequestToken();
    public abstract virtual void set_NewRequestToken(AntiforgeryToken value);
    public abstract virtual string get_NewRequestTokenString();
    public abstract virtual void set_NewRequestTokenString(string value);
    public abstract virtual AntiforgeryToken get_RequestToken();
    public abstract virtual void set_RequestToken(AntiforgeryToken value);
}
[NullableContextAttribute("1")]
internal interface Microsoft.AspNetCore.Antiforgery.IAntiforgeryTokenGenerator {
    public abstract virtual AntiforgeryToken GenerateCookieToken();
    public abstract virtual AntiforgeryToken GenerateRequestToken(HttpContext httpContext, AntiforgeryToken cookieToken);
    [NullableContextAttribute("2")]
public abstract virtual bool IsCookieTokenValid(AntiforgeryToken cookieToken);
    public abstract virtual bool TryValidateTokenSet(HttpContext httpContext, AntiforgeryToken cookieToken, AntiforgeryToken requestToken, String& message);
}
[NullableContextAttribute("1")]
internal interface Microsoft.AspNetCore.Antiforgery.IAntiforgeryTokenSerializer {
    public abstract virtual AntiforgeryToken Deserialize(string serializedToken);
    public abstract virtual string Serialize(AntiforgeryToken token);
}
[NullableContextAttribute("1")]
internal interface Microsoft.AspNetCore.Antiforgery.IAntiforgeryTokenStore {
    public abstract virtual string GetCookieToken(HttpContext httpContext);
    public abstract virtual Task`1<AntiforgeryTokenSet> GetRequestTokensAsync(HttpContext httpContext);
    public abstract virtual void SaveCookieToken(HttpContext httpContext, string token);
}
[NullableContextAttribute("1")]
internal interface Microsoft.AspNetCore.Antiforgery.IClaimUidExtractor {
    public abstract virtual string ExtractClaimUid(ClaimsPrincipal claimsPrincipal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryMiddleware : object {
    public AntiforgeryMiddleware(IAntiforgery antiforgery, RequestDelegate next);
    public Task Invoke(HttpContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryMiddleware/<InvokeAwaited>d__6")]
public Task InvokeAwaited(HttpContext context);
}
[AttributeUsageAttribute("68")]
public class Microsoft.AspNetCore.Antiforgery.RequireAntiforgeryTokenAttribute : Attribute {
    public bool RequiresValidation { get; }
    public RequireAntiforgeryTokenAttribute(bool required);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_RequiresValidation();
}
internal static class Microsoft.AspNetCore.Antiforgery.Resources : object {
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string AntiforgeryTokenValidator_AuthenticatedUserWithoutUsername { get; }
    internal static string AntiforgeryToken_AdditionalDataCheckFailed { get; }
    internal static string AntiforgeryToken_ClaimUidMismatch { get; }
    internal static string AntiforgeryToken_DeserializationFailed { get; }
    internal static string AntiforgeryToken_SecurityTokenMismatch { get; }
    internal static string AntiforgeryToken_TokensSwapped { get; }
    internal static string AntiforgeryToken_UnableToReadRequest { get; }
    internal static string AntiforgeryToken_UsernameMismatch { get; }
    internal static string Antiforgery_CookieToken_IsInvalid { get; }
    internal static string Antiforgery_CookieToken_MustBeProvided { get; }
    internal static string Antiforgery_CookieToken_MustBeProvided_Generic { get; }
    internal static string Antiforgery_FormToken_MustBeProvided { get; }
    internal static string Antiforgery_HeaderToken_MustBeProvided { get; }
    internal static string Antiforgery_RequestToken_MustBeProvided { get; }
    internal static string Antiforgery_RequestToken_MustBeProvided_Generic { get; }
    internal static string Antiforgery_RequiresSSL { get; }
    internal static string ArgumentCannotBeNullOrEmpty { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_AntiforgeryTokenValidator_AuthenticatedUserWithoutUsername();
    internal static string FormatAntiforgeryTokenValidator_AuthenticatedUserWithoutUsername(object p0, object p1, object p2, object p3, object p4, object p5);
    internal static string get_AntiforgeryToken_AdditionalDataCheckFailed();
    internal static string get_AntiforgeryToken_ClaimUidMismatch();
    internal static string get_AntiforgeryToken_DeserializationFailed();
    internal static string get_AntiforgeryToken_SecurityTokenMismatch();
    internal static string get_AntiforgeryToken_TokensSwapped();
    internal static string get_AntiforgeryToken_UnableToReadRequest();
    internal static string get_AntiforgeryToken_UsernameMismatch();
    internal static string FormatAntiforgeryToken_UsernameMismatch(object p0, object p1);
    internal static string get_Antiforgery_CookieToken_IsInvalid();
    internal static string get_Antiforgery_CookieToken_MustBeProvided();
    internal static string FormatAntiforgery_CookieToken_MustBeProvided(object p0);
    internal static string get_Antiforgery_CookieToken_MustBeProvided_Generic();
    internal static string get_Antiforgery_FormToken_MustBeProvided();
    internal static string FormatAntiforgery_FormToken_MustBeProvided(object p0);
    internal static string get_Antiforgery_HeaderToken_MustBeProvided();
    internal static string FormatAntiforgery_HeaderToken_MustBeProvided(object p0);
    internal static string get_Antiforgery_RequestToken_MustBeProvided();
    internal static string FormatAntiforgery_RequestToken_MustBeProvided(object p0, object p1);
    internal static string get_Antiforgery_RequestToken_MustBeProvided_Generic();
    internal static string get_Antiforgery_RequiresSSL();
    internal static string FormatAntiforgery_RequiresSSL(object optionName, object value);
    internal static string get_ArgumentCannotBeNullOrEmpty();
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.AntiforgeryApplicationBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IApplicationBuilder UseAntiforgery(IApplicationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.AntiforgeryServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddAntiforgery(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddAntiforgery(IServiceCollection services, Action`1<AntiforgeryOptions> setupAction);
}
