internal static class Microsoft.AspNetCore.Authentication.Cookies.AuthenticateResults : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager : object {
    public static int DefaultChunkSize;
    public Nullable`1<int> ChunkSize { get; public set; }
    public bool ThrowForPartialCookies { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ChunkSize();
    [CompilerGeneratedAttribute]
public void set_ChunkSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_ThrowForPartialCookies();
    [CompilerGeneratedAttribute]
public void set_ThrowForPartialCookies(bool value);
    public sealed virtual string GetRequestCookie(HttpContext context, string key);
    public sealed virtual void AppendResponseCookie(HttpContext context, string key, string value, CookieOptions options);
    public sealed virtual void DeleteCookie(HttpContext context, string key, CookieOptions options);
}
internal static class Microsoft.AspNetCore.Authentication.Cookies.Constants : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults : object {
    public static string AuthenticationScheme;
    public static string CookiePrefix;
    public static PathString LoginPath;
    public static PathString LogoutPath;
    public static PathString AccessDeniedPath;
    public static string ReturnUrlParameter;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents : object {
    public Func`2<CookieValidatePrincipalContext, Task> OnValidatePrincipal { get; public set; }
    public Func`2<CookieSlidingExpirationContext, Task> OnCheckSlidingExpiration { get; public set; }
    public Func`2<CookieSigningInContext, Task> OnSigningIn { get; public set; }
    public Func`2<CookieSignedInContext, Task> OnSignedIn { get; public set; }
    public Func`2<CookieSigningOutContext, Task> OnSigningOut { get; public set; }
    public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> OnRedirectToLogin { get; public set; }
    public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> OnRedirectToAccessDenied { get; public set; }
    public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> OnRedirectToLogout { get; public set; }
    public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> OnRedirectToReturnUrl { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<CookieValidatePrincipalContext, Task> get_OnValidatePrincipal();
    [CompilerGeneratedAttribute]
public void set_OnValidatePrincipal(Func`2<CookieValidatePrincipalContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<CookieSlidingExpirationContext, Task> get_OnCheckSlidingExpiration();
    [CompilerGeneratedAttribute]
public void set_OnCheckSlidingExpiration(Func`2<CookieSlidingExpirationContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<CookieSigningInContext, Task> get_OnSigningIn();
    [CompilerGeneratedAttribute]
public void set_OnSigningIn(Func`2<CookieSigningInContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<CookieSignedInContext, Task> get_OnSignedIn();
    [CompilerGeneratedAttribute]
public void set_OnSignedIn(Func`2<CookieSignedInContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<CookieSigningOutContext, Task> get_OnSigningOut();
    [CompilerGeneratedAttribute]
public void set_OnSigningOut(Func`2<CookieSigningOutContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> get_OnRedirectToLogin();
    [CompilerGeneratedAttribute]
public void set_OnRedirectToLogin(Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> get_OnRedirectToAccessDenied();
    [CompilerGeneratedAttribute]
public void set_OnRedirectToAccessDenied(Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> get_OnRedirectToLogout();
    [CompilerGeneratedAttribute]
public void set_OnRedirectToLogout(Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> get_OnRedirectToReturnUrl();
    [CompilerGeneratedAttribute]
public void set_OnRedirectToReturnUrl(Func`2<RedirectContext`1<CookieAuthenticationOptions>, Task> value);
    public virtual Task ValidatePrincipal(CookieValidatePrincipalContext context);
    public virtual Task CheckSlidingExpiration(CookieSlidingExpirationContext context);
    public virtual Task SigningIn(CookieSigningInContext context);
    public virtual Task SignedIn(CookieSignedInContext context);
    public virtual Task SigningOut(CookieSigningOutContext context);
    public virtual Task RedirectToLogout(RedirectContext`1<CookieAuthenticationOptions> context);
    public virtual Task RedirectToLogin(RedirectContext`1<CookieAuthenticationOptions> context);
    public virtual Task RedirectToReturnUrl(RedirectContext`1<CookieAuthenticationOptions> context);
    public virtual Task RedirectToAccessDenied(RedirectContext`1<CookieAuthenticationOptions> context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler : SignInAuthenticationHandler`1<CookieAuthenticationOptions> {
    protected CookieAuthenticationEvents Events { get; protected set; }
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on AuthenticationSchemeOptions instead.")]
public CookieAuthenticationHandler(IOptionsMonitor`1<CookieAuthenticationOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    public CookieAuthenticationHandler(IOptionsMonitor`1<CookieAuthenticationOptions> options, ILoggerFactory logger, UrlEncoder encoder);
    protected CookieAuthenticationEvents get_Events();
    protected void set_Events(CookieAuthenticationEvents value);
    protected virtual Task InitializeHandlerAsync();
    protected virtual Task`1<object> CreateEventsAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler/<HandleAuthenticateAsync>d__24")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler/<FinishResponseAsync>d__26")]
protected virtual Task FinishResponseAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler/<HandleSignInAsync>d__27")]
protected virtual Task HandleSignInAsync(ClaimsPrincipal user, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler/<HandleSignOutAsync>d__28")]
protected virtual Task HandleSignOutAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler/<HandleForbiddenAsync>d__31")]
protected virtual Task HandleForbiddenAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler/<HandleChallengeAsync>d__32")]
protected virtual Task HandleChallengeAsync(AuthenticationProperties properties);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions : AuthenticationSchemeOptions {
    public CookieBuilder Cookie { get; public set; }
    [NullableAttribute("2")]
public IDataProtectionProvider DataProtectionProvider { get; public set; }
    public bool SlidingExpiration { get; public set; }
    public PathString LoginPath { get; public set; }
    public PathString LogoutPath { get; public set; }
    public PathString AccessDeniedPath { get; public set; }
    public string ReturnUrlParameter { get; public set; }
    public CookieAuthenticationEvents Events { get; public set; }
    public ISecureDataFormat`1<AuthenticationTicket> TicketDataFormat { get; public set; }
    public ICookieManager CookieManager { get; public set; }
    [NullableAttribute("2")]
public ITicketStore SessionStore { get; public set; }
    public TimeSpan ExpireTimeSpan { get; public set; }
    public CookieBuilder get_Cookie();
    public void set_Cookie(CookieBuilder value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IDataProtectionProvider get_DataProtectionProvider();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DataProtectionProvider(IDataProtectionProvider value);
    [CompilerGeneratedAttribute]
public bool get_SlidingExpiration();
    [CompilerGeneratedAttribute]
public void set_SlidingExpiration(bool value);
    [CompilerGeneratedAttribute]
public PathString get_LoginPath();
    [CompilerGeneratedAttribute]
public void set_LoginPath(PathString value);
    [CompilerGeneratedAttribute]
public PathString get_LogoutPath();
    [CompilerGeneratedAttribute]
public void set_LogoutPath(PathString value);
    [CompilerGeneratedAttribute]
public PathString get_AccessDeniedPath();
    [CompilerGeneratedAttribute]
public void set_AccessDeniedPath(PathString value);
    [CompilerGeneratedAttribute]
public string get_ReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_ReturnUrlParameter(string value);
    public CookieAuthenticationEvents get_Events();
    public void set_Events(CookieAuthenticationEvents value);
    [CompilerGeneratedAttribute]
public ISecureDataFormat`1<AuthenticationTicket> get_TicketDataFormat();
    [CompilerGeneratedAttribute]
public void set_TicketDataFormat(ISecureDataFormat`1<AuthenticationTicket> value);
    [CompilerGeneratedAttribute]
public ICookieManager get_CookieManager();
    [CompilerGeneratedAttribute]
public void set_CookieManager(ICookieManager value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ITicketStore get_SessionStore();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_SessionStore(ITicketStore value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ExpireTimeSpan();
    [CompilerGeneratedAttribute]
public void set_ExpireTimeSpan(TimeSpan value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieSignedInContext : PrincipalContext`1<CookieAuthenticationOptions> {
    public CookieSignedInContext(HttpContext context, AuthenticationScheme scheme, ClaimsPrincipal principal, AuthenticationProperties properties, CookieAuthenticationOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieSigningInContext : PrincipalContext`1<CookieAuthenticationOptions> {
    public CookieOptions CookieOptions { get; public set; }
    public CookieSigningInContext(HttpContext context, AuthenticationScheme scheme, CookieAuthenticationOptions options, ClaimsPrincipal principal, AuthenticationProperties properties, CookieOptions cookieOptions);
    [CompilerGeneratedAttribute]
public CookieOptions get_CookieOptions();
    [CompilerGeneratedAttribute]
public void set_CookieOptions(CookieOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieSigningOutContext : PropertiesContext`1<CookieAuthenticationOptions> {
    public CookieOptions CookieOptions { get; public set; }
    public CookieSigningOutContext(HttpContext context, AuthenticationScheme scheme, CookieAuthenticationOptions options, AuthenticationProperties properties, CookieOptions cookieOptions);
    [CompilerGeneratedAttribute]
public CookieOptions get_CookieOptions();
    [CompilerGeneratedAttribute]
public void set_CookieOptions(CookieOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext : PrincipalContext`1<CookieAuthenticationOptions> {
    public TimeSpan ElapsedTime { get; }
    public TimeSpan RemainingTime { get; }
    public bool ShouldRenew { get; public set; }
    public CookieSlidingExpirationContext(HttpContext context, AuthenticationScheme scheme, CookieAuthenticationOptions options, AuthenticationTicket ticket, TimeSpan elapsedTime, TimeSpan remainingTime);
    [CompilerGeneratedAttribute]
public TimeSpan get_ElapsedTime();
    [CompilerGeneratedAttribute]
public TimeSpan get_RemainingTime();
    [CompilerGeneratedAttribute]
public bool get_ShouldRenew();
    [CompilerGeneratedAttribute]
public void set_ShouldRenew(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext : PrincipalContext`1<CookieAuthenticationOptions> {
    public bool ShouldRenew { get; public set; }
    public CookieValidatePrincipalContext(HttpContext context, AuthenticationScheme scheme, CookieAuthenticationOptions options, AuthenticationTicket ticket);
    [CompilerGeneratedAttribute]
public bool get_ShouldRenew();
    [CompilerGeneratedAttribute]
public void set_ShouldRenew(bool value);
    public void ReplacePrincipal(ClaimsPrincipal principal);
    public void RejectPrincipal();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Authentication.Cookies.ICookieManager {
    public abstract virtual string GetRequestCookie(HttpContext context, string key);
    public abstract virtual void AppendResponseCookie(HttpContext context, string key, string value, CookieOptions options);
    public abstract virtual void DeleteCookie(HttpContext context, string key, CookieOptions options);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Authentication.Cookies.ITicketStore {
    public abstract virtual Task`1<string> StoreAsync(AuthenticationTicket ticket);
    public virtual Task`1<string> StoreAsync(AuthenticationTicket ticket, CancellationToken cancellationToken);
    public virtual Task`1<string> StoreAsync(AuthenticationTicket ticket, HttpContext httpContext, CancellationToken cancellationToken);
    public abstract virtual Task RenewAsync(string key, AuthenticationTicket ticket);
    public virtual Task RenewAsync(string key, AuthenticationTicket ticket, CancellationToken cancellationToken);
    public virtual Task RenewAsync(string key, AuthenticationTicket ticket, HttpContext httpContext, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthenticationTicket> RetrieveAsync(string key);
    public virtual Task`1<AuthenticationTicket> RetrieveAsync(string key, CancellationToken cancellationToken);
    public virtual Task`1<AuthenticationTicket> RetrieveAsync(string key, HttpContext httpContext, CancellationToken cancellationToken);
    public abstract virtual Task RemoveAsync(string key);
    public virtual Task RemoveAsync(string key, CancellationToken cancellationToken);
    public virtual Task RemoveAsync(string key, HttpContext httpContext, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.Cookies.PostConfigureCookieAuthenticationOptions : object {
    public PostConfigureCookieAuthenticationOptions(IDataProtectionProvider dataProtection);
    public sealed virtual void PostConfigure(string name, CookieAuthenticationOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.CookieExtensions : object {
    [ExtensionAttribute]
public static AuthenticationBuilder AddCookie(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static AuthenticationBuilder AddCookie(AuthenticationBuilder builder, string authenticationScheme);
    [ExtensionAttribute]
public static AuthenticationBuilder AddCookie(AuthenticationBuilder builder, Action`1<CookieAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddCookie(AuthenticationBuilder builder, string authenticationScheme, Action`1<CookieAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddCookie(AuthenticationBuilder builder, string authenticationScheme, string displayName, Action`1<CookieAuthenticationOptions> configureOptions);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Logging.LoggingExtensions : object {
    [ExtensionAttribute]
[LoggerMessageAttribute("10", "2", "AuthenticationScheme: {AuthenticationScheme} signed in.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeSignedIn(ILogger logger, string authenticationScheme);
    [ExtensionAttribute]
[LoggerMessageAttribute("11", "2", "AuthenticationScheme: {AuthenticationScheme} signed out.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeSignedOut(ILogger logger, string authenticationScheme);
}
