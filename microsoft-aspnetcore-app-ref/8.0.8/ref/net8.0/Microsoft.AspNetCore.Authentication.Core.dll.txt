public class Microsoft.AspNetCore.Authentication.AuthenticationFeature : object {
    public PathString OriginalPathBase { get; public set; }
    public PathString OriginalPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual PathString get_OriginalPathBase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginalPathBase(PathString value);
    [CompilerGeneratedAttribute]
public sealed virtual PathString get_OriginalPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginalPath(PathString value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider : object {
    public IAuthenticationSchemeProvider Schemes { get; }
    public AuthenticationHandlerProvider(IAuthenticationSchemeProvider schemes);
    [CompilerGeneratedAttribute]
public IAuthenticationSchemeProvider get_Schemes();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider/<GetHandlerAsync>d__5")]
public sealed virtual Task`1<IAuthenticationHandler> GetHandlerAsync(HttpContext context, string authenticationScheme);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider : object {
    public AuthenticationSchemeProvider(IOptions`1<AuthenticationOptions> options);
    protected AuthenticationSchemeProvider(IOptions`1<AuthenticationOptions> options, IDictionary`2<string, AuthenticationScheme> schemes);
    public virtual Task`1<AuthenticationScheme> GetDefaultAuthenticateSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultChallengeSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultForbidSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultSignInSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultSignOutSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetSchemeAsync(string name);
    public virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetRequestHandlerSchemesAsync();
    public virtual bool TryAddScheme(AuthenticationScheme scheme);
    public virtual void AddScheme(AuthenticationScheme scheme);
    public virtual void RemoveScheme(string name);
    public virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetAllSchemesAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.AuthenticationService : object {
    public IAuthenticationSchemeProvider Schemes { get; }
    public IAuthenticationHandlerProvider Handlers { get; }
    public IClaimsTransformation Transform { get; }
    public AuthenticationOptions Options { get; }
    public AuthenticationService(IAuthenticationSchemeProvider schemes, IAuthenticationHandlerProvider handlers, IClaimsTransformation transform, IOptions`1<AuthenticationOptions> options);
    [CompilerGeneratedAttribute]
public IAuthenticationSchemeProvider get_Schemes();
    [CompilerGeneratedAttribute]
public IAuthenticationHandlerProvider get_Handlers();
    [CompilerGeneratedAttribute]
public IClaimsTransformation get_Transform();
    [CompilerGeneratedAttribute]
public AuthenticationOptions get_Options();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<AuthenticateAsync>d__14")]
public virtual Task`1<AuthenticateResult> AuthenticateAsync(HttpContext context, string scheme);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<ChallengeAsync>d__15")]
public virtual Task ChallengeAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<ForbidAsync>d__16")]
public virtual Task ForbidAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<SignInAsync>d__17")]
public virtual Task SignInAsync(HttpContext context, string scheme, ClaimsPrincipal principal, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<SignOutAsync>d__18")]
public virtual Task SignOutAsync(HttpContext context, string scheme, AuthenticationProperties properties);
}
public class Microsoft.AspNetCore.Authentication.NoopClaimsTransformation : object {
    [NullableContextAttribute("1")]
public virtual Task`1<ClaimsPrincipal> TransformAsync(ClaimsPrincipal principal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.AuthenticationCoreServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddAuthenticationCore(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddAuthenticationCore(IServiceCollection services, Action`1<AuthenticationOptions> configureOptions);
}
