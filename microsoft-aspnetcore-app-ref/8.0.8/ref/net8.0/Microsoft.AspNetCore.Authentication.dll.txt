[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.AccessDeniedContext : HandleRequestContext`1<RemoteAuthenticationOptions> {
    public PathString AccessDeniedPath { get; public set; }
    public AuthenticationProperties Properties { get; public set; }
    public string ReturnUrl { get; public set; }
    [NullableAttribute("1")]
public string ReturnUrlParameter { get; public set; }
    [NullableContextAttribute("1")]
public AccessDeniedContext(HttpContext context, AuthenticationScheme scheme, RemoteAuthenticationOptions options);
    [CompilerGeneratedAttribute]
public PathString get_AccessDeniedPath();
    [CompilerGeneratedAttribute]
public void set_AccessDeniedPath(PathString value);
    [CompilerGeneratedAttribute]
public AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(AuthenticationProperties value);
    [CompilerGeneratedAttribute]
public string get_ReturnUrl();
    [CompilerGeneratedAttribute]
public void set_ReturnUrl(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ReturnUrlParameter();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ReturnUrlParameter(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.AuthenticationBuilder : object {
    public IServiceCollection Services { get; }
    public AuthenticationBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public virtual IServiceCollection get_Services();
    public virtual AuthenticationBuilder AddScheme(string authenticationScheme, string displayName, Action`1<TOptions> configureOptions);
    public virtual AuthenticationBuilder AddScheme(string authenticationScheme, Action`1<TOptions> configureOptions);
    public virtual AuthenticationBuilder AddRemoteScheme(string authenticationScheme, string displayName, Action`1<TOptions> configureOptions);
    public virtual AuthenticationBuilder AddPolicyScheme(string authenticationScheme, string displayName, Action`1<PolicySchemeOptions> configureOptions);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Authentication.AuthenticationConfigurationProviderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IConfiguration GetSchemeConfiguration(IAuthenticationConfigurationProvider provider, string authenticationScheme);
}
internal class Microsoft.AspNetCore.Authentication.AuthenticationFeatures : object {
    public AuthenticateResult AuthenticateResult { get; public set; }
    public ClaimsPrincipal User { get; public set; }
    public AuthenticationFeatures(AuthenticateResult result);
    public sealed virtual AuthenticateResult get_AuthenticateResult();
    public sealed virtual void set_AuthenticateResult(AuthenticateResult value);
    public sealed virtual ClaimsPrincipal get_User();
    public sealed virtual void set_User(ClaimsPrincipal value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Authentication.AuthenticationHandler`1 : object {
    public AuthenticationScheme Scheme { get; }
    public TOptions Options { get; }
    protected HttpContext Context { get; }
    protected HttpRequest Request { get; }
    protected HttpResponse Response { get; }
    protected PathString OriginalPath { get; }
    protected PathString OriginalPathBase { get; }
    protected ILogger Logger { get; }
    protected UrlEncoder UrlEncoder { get; }
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider instead.")]
protected ISystemClock Clock { get; }
    protected TimeProvider TimeProvider { get; }
    protected IOptionsMonitor`1<TOptions> OptionsMonitor { get; }
    [NullableAttribute("2")]
protected object Events { get; protected set; }
    protected string ClaimsIssuer { get; }
    protected string CurrentUri { get; }
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on AuthenticationSchemeOptions instead.")]
protected AuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    protected AuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder);
    [CompilerGeneratedAttribute]
public AuthenticationScheme get_Scheme();
    [CompilerGeneratedAttribute]
public TOptions get_Options();
    [CompilerGeneratedAttribute]
protected HttpContext get_Context();
    protected HttpRequest get_Request();
    protected HttpResponse get_Response();
    protected PathString get_OriginalPath();
    protected PathString get_OriginalPathBase();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected UrlEncoder get_UrlEncoder();
    [CompilerGeneratedAttribute]
protected ISystemClock get_Clock();
    [CompilerGeneratedAttribute]
protected TimeProvider get_TimeProvider();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<TOptions> get_OptionsMonitor();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual object get_Events();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual void set_Events(object value);
    protected virtual string get_ClaimsIssuer();
    protected string get_CurrentUri();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandler`1/<InitializeAsync>d__48")]
public sealed virtual Task InitializeAsync(AuthenticationScheme scheme, HttpContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandler`1/<InitializeEventsAsync>d__49")]
protected virtual Task InitializeEventsAsync();
    protected virtual Task`1<object> CreateEventsAsync();
    protected virtual Task InitializeHandlerAsync();
    protected string BuildRedirectUri(string targetPath);
    [NullableContextAttribute("2")]
protected virtual string ResolveTarget(string scheme);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandler`1/<AuthenticateAsync>d__54")]
public sealed virtual Task`1<AuthenticateResult> AuthenticateAsync();
    protected Task`1<AuthenticateResult> HandleAuthenticateOnceAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandler`1/<HandleAuthenticateOnceSafeAsync>d__56")]
protected Task`1<AuthenticateResult> HandleAuthenticateOnceSafeAsync();
    protected abstract virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    protected virtual Task HandleForbiddenAsync(AuthenticationProperties properties);
    protected virtual Task HandleChallengeAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandler`1/<ChallengeAsync>d__60")]
public sealed virtual Task ChallengeAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandler`1/<ForbidAsync>d__61")]
public sealed virtual Task ForbidAsync(AuthenticationProperties properties);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.AuthenticationMiddleware : object {
    public IAuthenticationSchemeProvider Schemes { get; public set; }
    public AuthenticationMiddleware(RequestDelegate next, IAuthenticationSchemeProvider schemes);
    [CompilerGeneratedAttribute]
public IAuthenticationSchemeProvider get_Schemes();
    [CompilerGeneratedAttribute]
public void set_Schemes(IAuthenticationSchemeProvider value);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationMiddleware/<Invoke>d__6")]
public Task Invoke(HttpContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions : object {
    public string ClaimsIssuer { get; public set; }
    public object Events { get; public set; }
    public Type EventsType { get; public set; }
    public string ForwardDefault { get; public set; }
    public string ForwardAuthenticate { get; public set; }
    public string ForwardChallenge { get; public set; }
    public string ForwardForbid { get; public set; }
    public string ForwardSignIn { get; public set; }
    public string ForwardSignOut { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpContext, string> ForwardDefaultSelector { get; public set; }
    public TimeProvider TimeProvider { get; public set; }
    public virtual void Validate();
    [NullableContextAttribute("1")]
public virtual void Validate(string scheme);
    [CompilerGeneratedAttribute]
public string get_ClaimsIssuer();
    [CompilerGeneratedAttribute]
public void set_ClaimsIssuer(string value);
    [CompilerGeneratedAttribute]
public object get_Events();
    [CompilerGeneratedAttribute]
public void set_Events(object value);
    [CompilerGeneratedAttribute]
public Type get_EventsType();
    [CompilerGeneratedAttribute]
public void set_EventsType(Type value);
    [CompilerGeneratedAttribute]
public string get_ForwardDefault();
    [CompilerGeneratedAttribute]
public void set_ForwardDefault(string value);
    [CompilerGeneratedAttribute]
public string get_ForwardAuthenticate();
    [CompilerGeneratedAttribute]
public void set_ForwardAuthenticate(string value);
    [CompilerGeneratedAttribute]
public string get_ForwardChallenge();
    [CompilerGeneratedAttribute]
public void set_ForwardChallenge(string value);
    [CompilerGeneratedAttribute]
public string get_ForwardForbid();
    [CompilerGeneratedAttribute]
public void set_ForwardForbid(string value);
    [CompilerGeneratedAttribute]
public string get_ForwardSignIn();
    [CompilerGeneratedAttribute]
public void set_ForwardSignIn(string value);
    [CompilerGeneratedAttribute]
public string get_ForwardSignOut();
    [CompilerGeneratedAttribute]
public void set_ForwardSignOut(string value);
    [CompilerGeneratedAttribute]
public Func`2<HttpContext, string> get_ForwardDefaultSelector();
    [CompilerGeneratedAttribute]
public void set_ForwardDefaultSelector(Func`2<HttpContext, string> value);
    [CompilerGeneratedAttribute]
public TimeProvider get_TimeProvider();
    [CompilerGeneratedAttribute]
public void set_TimeProvider(TimeProvider value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.Authentication.Base64UrlTextEncoder : object {
    public static string Encode(Byte[] data);
    public static Byte[] Decode(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Authentication.BaseContext`1 : object {
    public AuthenticationScheme Scheme { get; }
    public TOptions Options { get; }
    public HttpContext HttpContext { get; }
    public HttpRequest Request { get; }
    public HttpResponse Response { get; }
    protected BaseContext`1(HttpContext context, AuthenticationScheme scheme, TOptions options);
    [CompilerGeneratedAttribute]
public AuthenticationScheme get_Scheme();
    [CompilerGeneratedAttribute]
public TOptions get_Options();
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    public HttpRequest get_Request();
    public HttpResponse get_Response();
}
internal class Microsoft.AspNetCore.Authentication.DefaultAuthenticationConfigurationProvider : object {
    public IConfiguration AuthenticationConfiguration { get; }
    public DefaultAuthenticationConfigurationProvider(IConfiguration configuration);
    public sealed virtual IConfiguration get_AuthenticationConfiguration();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.HandleRequestContext`1 : BaseContext`1<TOptions> {
    public HandleRequestResult Result { get; protected set; }
    protected HandleRequestContext`1(HttpContext context, AuthenticationScheme scheme, TOptions options);
    [CompilerGeneratedAttribute]
public HandleRequestResult get_Result();
    [CompilerGeneratedAttribute]
protected void set_Result(HandleRequestResult value);
    public void HandleResponse();
    public void SkipHandler();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.HandleRequestResult : AuthenticateResult {
    public bool Handled { get; }
    public bool Skipped { get; }
    [CompilerGeneratedAttribute]
public bool get_Handled();
    [CompilerGeneratedAttribute]
public bool get_Skipped();
    public static HandleRequestResult Success(AuthenticationTicket ticket);
    public static HandleRequestResult Fail(Exception failure);
    public static HandleRequestResult Fail(Exception failure, AuthenticationProperties properties);
    public static HandleRequestResult Fail(string failureMessage);
    public static HandleRequestResult Fail(string failureMessage, AuthenticationProperties properties);
    public static HandleRequestResult Handle();
    public static HandleRequestResult SkipHandler();
    public static HandleRequestResult NoResult();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Authentication.IDataSerializer`1 {
    public abstract virtual Byte[] Serialize(TModel model);
    public abstract virtual TModel Deserialize(Byte[] data);
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Authentication.ISecureDataFormat`1 {
    [NullableContextAttribute("1")]
public abstract virtual string Protect(TData data);
    [NullableContextAttribute("1")]
public abstract virtual string Protect(TData data, string purpose);
    public abstract virtual TData Unprotect(string protectedText);
    public abstract virtual TData Unprotect(string protectedText, string purpose);
}
[ObsoleteAttribute("Use TimeProvider instead.")]
public interface Microsoft.AspNetCore.Authentication.ISystemClock {
    public DateTimeOffset UtcNow { get; }
    public abstract virtual DateTimeOffset get_UtcNow();
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Authentication.JsonDocumentAuthExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetString(JsonElement element, string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.PolicySchemeHandler : SignInAuthenticationHandler`1<PolicySchemeOptions> {
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on AuthenticationSchemeOptions instead.")]
public PolicySchemeHandler(IOptionsMonitor`1<PolicySchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    public PolicySchemeHandler(IOptionsMonitor`1<PolicySchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder);
    protected virtual Task HandleChallengeAsync(AuthenticationProperties properties);
    protected virtual Task HandleForbiddenAsync(AuthenticationProperties properties);
    protected virtual Task HandleSignInAsync(ClaimsPrincipal user, AuthenticationProperties properties);
    protected virtual Task HandleSignOutAsync(AuthenticationProperties properties);
    protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
}
public class Microsoft.AspNetCore.Authentication.PolicySchemeOptions : AuthenticationSchemeOptions {
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Authentication.PrincipalContext`1 : PropertiesContext`1<TOptions> {
    public ClaimsPrincipal Principal { get; public set; }
    [NullableContextAttribute("1")]
protected PrincipalContext`1(HttpContext context, AuthenticationScheme scheme, TOptions options, AuthenticationProperties properties);
    [CompilerGeneratedAttribute]
public virtual ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
public virtual void set_Principal(ClaimsPrincipal value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Authentication.PropertiesContext`1 : BaseContext`1<TOptions> {
    public AuthenticationProperties Properties { get; protected set; }
    protected PropertiesContext`1(HttpContext context, AuthenticationScheme scheme, TOptions options, AuthenticationProperties properties);
    [CompilerGeneratedAttribute]
public virtual AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
protected virtual void set_Properties(AuthenticationProperties value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.PropertiesDataFormat : SecureDataFormat`1<AuthenticationProperties> {
    public PropertiesDataFormat(IDataProtector protector);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.PropertiesSerializer : object {
    public static PropertiesSerializer Default { get; }
    [CompilerGeneratedAttribute]
public static PropertiesSerializer get_Default();
    public virtual Byte[] Serialize(AuthenticationProperties model);
    public virtual AuthenticationProperties Deserialize(Byte[] data);
    public virtual void Write(BinaryWriter writer, AuthenticationProperties properties);
    public virtual AuthenticationProperties Read(BinaryReader reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.RedirectContext`1 : PropertiesContext`1<TOptions> {
    public string RedirectUri { get; public set; }
    public RedirectContext`1(HttpContext context, AuthenticationScheme scheme, TOptions options, AuthenticationProperties properties, string redirectUri);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Authentication.RemoteAuthenticationContext`1 : HandleRequestContext`1<TOptions> {
    public ClaimsPrincipal Principal { get; public set; }
    public AuthenticationProperties Properties { get; public set; }
    [NullableContextAttribute("1")]
protected RemoteAuthenticationContext`1(HttpContext context, AuthenticationScheme scheme, TOptions options, AuthenticationProperties properties);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
public void set_Principal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public virtual AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
public virtual void set_Properties(AuthenticationProperties value);
    public void Success();
    [NullableContextAttribute("1")]
public void Fail(Exception failure);
    [NullableContextAttribute("1")]
public void Fail(string failureMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents : object {
    public Func`2<AccessDeniedContext, Task> OnAccessDenied { get; public set; }
    public Func`2<RemoteFailureContext, Task> OnRemoteFailure { get; public set; }
    public Func`2<TicketReceivedContext, Task> OnTicketReceived { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<AccessDeniedContext, Task> get_OnAccessDenied();
    [CompilerGeneratedAttribute]
public void set_OnAccessDenied(Func`2<AccessDeniedContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<RemoteFailureContext, Task> get_OnRemoteFailure();
    [CompilerGeneratedAttribute]
public void set_OnRemoteFailure(Func`2<RemoteFailureContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<TicketReceivedContext, Task> get_OnTicketReceived();
    [CompilerGeneratedAttribute]
public void set_OnTicketReceived(Func`2<TicketReceivedContext, Task> value);
    public virtual Task AccessDenied(AccessDeniedContext context);
    public virtual Task RemoteFailure(RemoteFailureContext context);
    public virtual Task TicketReceived(TicketReceivedContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1 : AuthenticationHandler`1<TOptions> {
    [NullableAttribute("2")]
protected string SignInScheme { get; }
    protected RemoteAuthenticationEvents Events { get; protected set; }
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on AuthenticationSchemeOptions instead.")]
protected RemoteAuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    protected RemoteAuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder);
    [NullableContextAttribute("2")]
protected string get_SignInScheme();
    protected RemoteAuthenticationEvents get_Events();
    protected void set_Events(RemoteAuthenticationEvents value);
    protected virtual Task`1<object> CreateEventsAsync();
    public virtual Task`1<bool> ShouldHandleRequestAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1/<HandleRequestAsync>d__12")]
public virtual Task`1<bool> HandleRequestAsync();
    protected abstract virtual Task`1<HandleRequestResult> HandleRemoteAuthenticateAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1/<HandleAuthenticateAsync>d__14")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    protected virtual Task HandleForbiddenAsync(AuthenticationProperties properties);
    protected virtual void GenerateCorrelationId(AuthenticationProperties properties);
    protected virtual bool ValidateCorrelationId(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1/<HandleAccessDeniedErrorAsync>d__18")]
protected virtual Task`1<HandleRequestResult> HandleAccessDeniedErrorAsync(AuthenticationProperties properties);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions : AuthenticationSchemeOptions {
    public TimeSpan BackchannelTimeout { get; public set; }
    [NullableAttribute("2")]
public HttpMessageHandler BackchannelHttpHandler { get; public set; }
    public HttpClient Backchannel { get; public set; }
    [NullableAttribute("2")]
public IDataProtectionProvider DataProtectionProvider { get; public set; }
    public PathString CallbackPath { get; public set; }
    public PathString AccessDeniedPath { get; public set; }
    public string ReturnUrlParameter { get; public set; }
    [NullableAttribute("2")]
public string SignInScheme { get; public set; }
    public TimeSpan RemoteAuthenticationTimeout { get; public set; }
    public RemoteAuthenticationEvents Events { get; public set; }
    public bool SaveTokens { get; public set; }
    public CookieBuilder CorrelationCookie { get; public set; }
    public virtual void Validate(string scheme);
    public virtual void Validate();
    [CompilerGeneratedAttribute]
public TimeSpan get_BackchannelTimeout();
    [CompilerGeneratedAttribute]
public void set_BackchannelTimeout(TimeSpan value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpMessageHandler get_BackchannelHttpHandler();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_BackchannelHttpHandler(HttpMessageHandler value);
    [CompilerGeneratedAttribute]
public HttpClient get_Backchannel();
    [CompilerGeneratedAttribute]
public void set_Backchannel(HttpClient value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IDataProtectionProvider get_DataProtectionProvider();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DataProtectionProvider(IDataProtectionProvider value);
    [CompilerGeneratedAttribute]
public PathString get_CallbackPath();
    [CompilerGeneratedAttribute]
public void set_CallbackPath(PathString value);
    [CompilerGeneratedAttribute]
public PathString get_AccessDeniedPath();
    [CompilerGeneratedAttribute]
public void set_AccessDeniedPath(PathString value);
    [CompilerGeneratedAttribute]
public string get_ReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_ReturnUrlParameter(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_SignInScheme();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_SignInScheme(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RemoteAuthenticationTimeout();
    [CompilerGeneratedAttribute]
public void set_RemoteAuthenticationTimeout(TimeSpan value);
    public RemoteAuthenticationEvents get_Events();
    public void set_Events(RemoteAuthenticationEvents value);
    [CompilerGeneratedAttribute]
public bool get_SaveTokens();
    [CompilerGeneratedAttribute]
public void set_SaveTokens(bool value);
    public CookieBuilder get_CorrelationCookie();
    public void set_CorrelationCookie(CookieBuilder value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.RemoteFailureContext : HandleRequestContext`1<RemoteAuthenticationOptions> {
    public Exception Failure { get; public set; }
    public AuthenticationProperties Properties { get; public set; }
    [NullableContextAttribute("1")]
public RemoteFailureContext(HttpContext context, AuthenticationScheme scheme, RemoteAuthenticationOptions options, Exception failure);
    [CompilerGeneratedAttribute]
public Exception get_Failure();
    [CompilerGeneratedAttribute]
public void set_Failure(Exception value);
    [CompilerGeneratedAttribute]
public AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(AuthenticationProperties value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.RequestPathBaseCookieBuilder : CookieBuilder {
    protected string AdditionalPath { get; }
    [CompilerGeneratedAttribute]
protected virtual string get_AdditionalPath();
    [NullableContextAttribute("1")]
public virtual CookieOptions Build(HttpContext context, DateTimeOffset expiresFrom);
}
internal static class Microsoft.AspNetCore.Authentication.Resources : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Authentication.ResultContext`1 : BaseContext`1<TOptions> {
    [NullableAttribute("2")]
public ClaimsPrincipal Principal { get; public set; }
    public AuthenticationProperties Properties { get; public set; }
    public AuthenticateResult Result { get; }
    protected ResultContext`1(HttpContext context, AuthenticationScheme scheme, TOptions options);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Principal(ClaimsPrincipal value);
    public AuthenticationProperties get_Properties();
    public void set_Properties(AuthenticationProperties value);
    [CompilerGeneratedAttribute]
public AuthenticateResult get_Result();
    public void Success();
    public void NoResult();
    public void Fail(Exception failure);
    public void Fail(string failureMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.SecureDataFormat`1 : object {
    public SecureDataFormat`1(IDataSerializer`1<TData> serializer, IDataProtector protector);
    public sealed virtual string Protect(TData data);
    public sealed virtual string Protect(TData data, string purpose);
    [NullableContextAttribute("2")]
public sealed virtual TData Unprotect(string protectedText);
    [NullableContextAttribute("2")]
public sealed virtual TData Unprotect(string protectedText, string purpose);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Authentication.SignInAuthenticationHandler`1 : SignOutAuthenticationHandler`1<TOptions> {
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on AuthenticationSchemeOptions instead.")]
public SignInAuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    public SignInAuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder);
    public virtual Task SignInAsync(ClaimsPrincipal user, AuthenticationProperties properties);
    protected abstract virtual Task HandleSignInAsync(ClaimsPrincipal user, AuthenticationProperties properties);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Authentication.SignOutAuthenticationHandler`1 : AuthenticationHandler`1<TOptions> {
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on AuthenticationSchemeOptions instead.")]
public SignOutAuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    public SignOutAuthenticationHandler`1(IOptionsMonitor`1<TOptions> options, ILoggerFactory logger, UrlEncoder encoder);
    public virtual Task SignOutAsync(AuthenticationProperties properties);
    protected abstract virtual Task HandleSignOutAsync(AuthenticationProperties properties);
}
[ObsoleteAttribute("Use TimeProvider instead.")]
public class Microsoft.AspNetCore.Authentication.SystemClock : object {
    public DateTimeOffset UtcNow { get; }
    public sealed virtual DateTimeOffset get_UtcNow();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.TicketDataFormat : SecureDataFormat`1<AuthenticationTicket> {
    public TicketDataFormat(IDataProtector protector);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.TicketReceivedContext : RemoteAuthenticationContext`1<RemoteAuthenticationOptions> {
    public string ReturnUri { get; public set; }
    [NullableContextAttribute("1")]
public TicketReceivedContext(HttpContext context, AuthenticationScheme scheme, RemoteAuthenticationOptions options, AuthenticationTicket ticket);
    [CompilerGeneratedAttribute]
public string get_ReturnUri();
    [CompilerGeneratedAttribute]
public void set_ReturnUri(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.TicketSerializer : object {
    public static TicketSerializer Default { get; }
    [CompilerGeneratedAttribute]
public static TicketSerializer get_Default();
    public virtual Byte[] Serialize(AuthenticationTicket ticket);
    public virtual AuthenticationTicket Deserialize(Byte[] data);
    public virtual void Write(BinaryWriter writer, AuthenticationTicket ticket);
    protected virtual void WriteIdentity(BinaryWriter writer, ClaimsIdentity identity);
    protected virtual void WriteClaim(BinaryWriter writer, Claim claim);
    public virtual AuthenticationTicket Read(BinaryReader reader);
    protected virtual ClaimsIdentity ReadIdentity(BinaryReader reader);
    protected virtual Claim ReadClaim(BinaryReader reader, ClaimsIdentity identity);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.AuthAppBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IApplicationBuilder UseAuthentication(IApplicationBuilder app);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.AuthenticationServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static AuthenticationBuilder AddAuthentication(IServiceCollection services);
    [ExtensionAttribute]
public static AuthenticationBuilder AddAuthentication(IServiceCollection services, string defaultScheme);
    [ExtensionAttribute]
public static AuthenticationBuilder AddAuthentication(IServiceCollection services, Action`1<AuthenticationOptions> configureOptions);
}
internal static class Microsoft.Extensions.Internal.SecurityHelper : object {
    public static ClaimsPrincipal MergeUserPrincipal(ClaimsPrincipal existingPrincipal, ClaimsPrincipal additionalPrincipal);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Logging.LoggingExtensions : object {
    [ExtensionAttribute]
[LoggerMessageAttribute("4", "2", "Error from RemoteAuthentication: {ErrorMessage}.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void RemoteAuthenticationError(ILogger logger, string errorMessage);
    [ExtensionAttribute]
[LoggerMessageAttribute("5", "1", "The SigningIn event returned Handled.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void SignInHandled(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("6", "1", "The SigningIn event returned Skipped.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void SignInSkipped(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("7", "2", "{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeNotAuthenticatedWithFailure(ILogger logger, string authenticationScheme, string failureMessage);
    [ExtensionAttribute]
[LoggerMessageAttribute("8", "1", "AuthenticationScheme: {AuthenticationScheme} was successfully authenticated.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeAuthenticated(ILogger logger, string authenticationScheme);
    [ExtensionAttribute]
[LoggerMessageAttribute("9", "1", "AuthenticationScheme: {AuthenticationScheme} was not authenticated.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeNotAuthenticated(ILogger logger, string authenticationScheme);
    [ExtensionAttribute]
[LoggerMessageAttribute("12", "2", "AuthenticationScheme: {AuthenticationScheme} was challenged.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeChallenged(ILogger logger, string authenticationScheme);
    [ExtensionAttribute]
[LoggerMessageAttribute("13", "2", "AuthenticationScheme: {AuthenticationScheme} was forbidden.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeForbidden(ILogger logger, string authenticationScheme);
    [ExtensionAttribute]
[LoggerMessageAttribute("14", "3", "{CorrelationProperty} state property not found.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void CorrelationPropertyNotFound(ILogger logger, string correlationProperty);
    [ExtensionAttribute]
[LoggerMessageAttribute("15", "3", "'{CorrelationCookieName}' cookie not found.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void CorrelationCookieNotFound(ILogger logger, string correlationCookieName);
    [ExtensionAttribute]
[LoggerMessageAttribute("16", "3", "The correlation cookie value '{CorrelationCookieName}' did not match the expected value '{CorrelationCookieValue}'.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void UnexpectedCorrelationCookieValue(ILogger logger, string correlationCookieName, string correlationCookieValue);
    [ExtensionAttribute]
[LoggerMessageAttribute("17", "2", "Access was denied by the resource owner or by the remote server.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AccessDeniedError(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("18", "1", "The AccessDenied event returned Handled.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AccessDeniedContextHandled(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("19", "1", "The AccessDenied event returned Skipped.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AccessDeniedContextSkipped(ILogger logger);
}
