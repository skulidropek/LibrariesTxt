[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class Microsoft.AspNetCore.Components.BindInputElementAttribute : Attribute {
    public string Type { get; }
    public string Suffix { get; }
    public string ValueAttribute { get; }
    public string ChangeAttribute { get; }
    public bool IsInvariantCulture { get; }
    public string Format { get; }
    public BindInputElementAttribute(string type, string suffix, string valueAttribute, string changeAttribute, bool isInvariantCulture, string format);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public string get_Suffix();
    [CompilerGeneratedAttribute]
public string get_ValueAttribute();
    [CompilerGeneratedAttribute]
public string get_ChangeAttribute();
    [CompilerGeneratedAttribute]
public bool get_IsInvariantCulture();
    [CompilerGeneratedAttribute]
public string get_Format();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Components.DomWrapperInterop : object {
    public static string Focus;
    public static string FocusBySelector;
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.ElementReferenceExtensions : object {
    [ExtensionAttribute]
public static ValueTask FocusAsync(ElementReference elementReference);
    [ExtensionAttribute]
public static ValueTask FocusAsync(ElementReference elementReference, bool preventScroll);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static IJSRuntime GetJSRuntime(ElementReference elementReference);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.AntiforgeryRequestToken : object {
    public string Value { get; }
    public string FormFieldName { get; }
    public AntiforgeryRequestToken(string value, string formFieldName);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public string get_FormFieldName();
}
public abstract class Microsoft.AspNetCore.Components.Forms.AntiforgeryStateProvider : object {
    [NullableContextAttribute("2")]
public abstract virtual AntiforgeryRequestToken GetAntiforgeryToken();
}
public class Microsoft.AspNetCore.Components.Forms.AntiforgeryToken : object {
    private sealed virtual override void Microsoft.AspNetCore.Components.IComponent.Attach(RenderHandle renderHandle);
    private sealed virtual override Task Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(ParameterView parameters);
}
internal static class Microsoft.AspNetCore.Components.Forms.AttributeUtilities : object {
    [NullableContextAttribute("2")]
public static string CombineClassNames(IReadOnlyDictionary`2<string, object> additionalAttributes, string classNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Forms.BrowserFile : object {
    internal InputFile Owner { get; internal set; }
    public int Id { get; public set; }
    public string Name { get; public set; }
    public DateTimeOffset LastModified { get; public set; }
    public long Size { get; public set; }
    public string ContentType { get; public set; }
    [NullableAttribute("2")]
public string RelativePath { get; public set; }
    [CompilerGeneratedAttribute]
internal InputFile get_Owner();
    [CompilerGeneratedAttribute]
internal void set_Owner(InputFile value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_LastModified();
    [CompilerGeneratedAttribute]
public void set_LastModified(DateTimeOffset value);
    public sealed virtual long get_Size();
    public void set_Size(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RelativePath();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RelativePath(string value);
    public sealed virtual Stream OpenReadStream(long maxAllowedSize, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.Forms.BrowserFileExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static ValueTask`1<IBrowserFile> RequestImageFileAsync(IBrowserFile browserFile, string format, int maxWidth, int maxHeight);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Forms.BrowserFileStream : Stream {
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public BrowserFileStream(IJSRuntime jsRuntime, ElementReference inputFileElement, BrowserFile file, long maxAllowedSize, CancellationToken cancellationToken);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Forms.BrowserFileStream/<ReadAsync>d__28")]
public virtual ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
}
internal class Microsoft.AspNetCore.Components.Forms.DefaultAntiforgeryStateProvider : AntiforgeryStateProvider {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
public DefaultAntiforgeryStateProvider(PersistentComponentState state);
    [NullableContextAttribute("2")]
public virtual AntiforgeryRequestToken GetAntiforgeryToken();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.Forms.EditContextFieldClassExtensions : object {
    [ExtensionAttribute]
public static string FieldCssClass(EditContext editContext, Expression`1<Func`1<TField>> accessor);
    [ExtensionAttribute]
public static string FieldCssClass(EditContext editContext, FieldIdentifier& fieldIdentifier);
    [ExtensionAttribute]
public static void SetFieldCssClassProvider(EditContext editContext, FieldCssClassProvider fieldCssClassProvider);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.EditForm : ComponentBase {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public IReadOnlyDictionary`2<string, object> AdditionalAttributes { get; public set; }
    [ParameterAttribute]
public EditContext EditContext { get; public set; }
    [ParameterAttribute]
public bool Enhance { get; public set; }
    [ParameterAttribute]
public object Model { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public RenderFragment`1<EditContext> ChildContent { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public EventCallback`1<EditContext> OnSubmit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public EventCallback`1<EditContext> OnValidSubmit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public EventCallback`1<EditContext> OnInvalidSubmit { get; public set; }
    [ParameterAttribute]
public string FormName { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_AdditionalAttributes();
    [CompilerGeneratedAttribute]
public void set_AdditionalAttributes(IReadOnlyDictionary`2<string, object> value);
    public EditContext get_EditContext();
    public void set_EditContext(EditContext value);
    [CompilerGeneratedAttribute]
public bool get_Enhance();
    [CompilerGeneratedAttribute]
public void set_Enhance(bool value);
    [CompilerGeneratedAttribute]
public object get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(object value);
    [CompilerGeneratedAttribute]
public RenderFragment`1<EditContext> get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment`1<EditContext> value);
    [CompilerGeneratedAttribute]
public EventCallback`1<EditContext> get_OnSubmit();
    [CompilerGeneratedAttribute]
public void set_OnSubmit(EventCallback`1<EditContext> value);
    [CompilerGeneratedAttribute]
public EventCallback`1<EditContext> get_OnValidSubmit();
    [CompilerGeneratedAttribute]
public void set_OnValidSubmit(EventCallback`1<EditContext> value);
    [CompilerGeneratedAttribute]
public EventCallback`1<EditContext> get_OnInvalidSubmit();
    [CompilerGeneratedAttribute]
public void set_OnInvalidSubmit(EventCallback`1<EditContext> value);
    [CompilerGeneratedAttribute]
public string get_FormName();
    [CompilerGeneratedAttribute]
public void set_FormName(string value);
    protected virtual void OnParametersSet();
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Components.Forms.Editor`1 : ComponentBase {
    [ParameterAttribute]
public T Value { get; public set; }
    [ParameterAttribute]
public Expression`1<Func`1<T>> ValueExpression { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public EventCallback`1<T> ValueChanged { get; public set; }
    private bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.IsFixed { get; }
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(T value);
    [CompilerGeneratedAttribute]
public Expression`1<Func`1<T>> get_ValueExpression();
    [CompilerGeneratedAttribute]
public void set_ValueExpression(Expression`1<Func`1<T>> value);
    [CompilerGeneratedAttribute]
public EventCallback`1<T> get_ValueChanged();
    [CompilerGeneratedAttribute]
public void set_ValueChanged(EventCallback`1<T> value);
    private sealed virtual override bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.get_IsFixed();
    protected string NameFor(LambdaExpression expression);
    protected virtual void OnParametersSet();
    private sealed virtual override bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.CanSupplyValue(CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override object Microsoft.AspNetCore.Components.ICascadingValueSupplier.GetCurrentValue(CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override void Microsoft.AspNetCore.Components.ICascadingValueSupplier.Subscribe(ComponentState subscriber, CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override void Microsoft.AspNetCore.Components.ICascadingValueSupplier.Unsubscribe(ComponentState subscriber, CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Components.Forms.ExpressionFormatter : object {
    internal static int StackAllocBufferSize;
    public static void ClearCache();
    public static string FormatLambda(LambdaExpression expression);
    public static string FormatLambda(LambdaExpression expression, string prefix);
    internal static bool IsSingleArgumentIndexer(Expression expression);
    internal static string FormatIndexArgument(Expression indexExpression);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2072")]
internal static MethodInfoData <GetOrCreateMethodInfoData>g__GetMethodInfoData|9_0(MethodInfo methodInfo);
    [CompilerGeneratedAttribute]
internal static Func`2<object, TResult> <CreateCapturedValueFormatter>g__CompileMemberEvaluator|13_0(MemberExpression memberExpression);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.FieldCssClassProvider : object {
    internal static FieldCssClassProvider Instance;
    public virtual string GetFieldCssClass(EditContext editContext, FieldIdentifier& modreq(System.Runtime.InteropServices.InAttribute) fieldIdentifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.FormMappingContext : object {
    public string MappingScopeName { get; }
    internal FormMappingContext(string mappingScopeName);
    [CompilerGeneratedAttribute]
public string get_MappingScopeName();
    public FormMappingError GetErrors(string key);
    public FormMappingError GetErrors(string formName, string key);
    public IEnumerable`1<FormMappingError> GetAllErrors();
    public IEnumerable`1<FormMappingError> GetAllErrors(string formName);
    public string GetAttemptedValue(string key);
    public string GetAttemptedValue(string formName, string key);
    internal void AddError(string key, FormattableString error, string attemptedValue);
    internal void AddError(string formName, string key, FormattableString error, string attemptedValue);
    internal void AttachParentValue(string key, object value);
    internal void SetErrors(string formName, FormMappingContext childContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.FormMappingScope : object {
    [ParameterAttribute]
[EditorRequiredAttribute]
public string Name { get; public set; }
    [ParameterAttribute]
public RenderFragment`1<FormMappingContext> ChildContent { get; public set; }
    [NullableAttribute("2")]
[InjectAttribute]
internal IFormValueMapper FormValueModelBinder { get; internal set; }
    private bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.IsFixed { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public RenderFragment`1<FormMappingContext> get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment`1<FormMappingContext> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IFormValueMapper get_FormValueModelBinder();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_FormValueModelBinder(IFormValueMapper value);
    private sealed virtual override void Microsoft.AspNetCore.Components.IComponent.Attach(RenderHandle renderHandle);
    private sealed virtual override Task Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(ParameterView parameters);
    private sealed virtual override bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.get_IsFixed();
    private sealed virtual override bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.CanSupplyValue(CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override object Microsoft.AspNetCore.Components.ICascadingValueSupplier.GetCurrentValue(CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override void Microsoft.AspNetCore.Components.ICascadingValueSupplier.Subscribe(ComponentState subscriber, CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override void Microsoft.AspNetCore.Components.ICascadingValueSupplier.Unsubscribe(ComponentState subscriber, CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Forms.HtmlFieldPrefix : object {
    public HtmlFieldPrefix(LambdaExpression initial);
    internal HtmlFieldPrefix(LambdaExpression expression, LambdaExpression[] rest);
    public HtmlFieldPrefix Combine(LambdaExpression other);
    public string GetFieldName(LambdaExpression expression);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Components.Forms.IBrowserFile {
    public string Name { get; }
    public DateTimeOffset LastModified { get; }
    public long Size { get; }
    public string ContentType { get; }
    public abstract virtual string get_Name();
    public abstract virtual DateTimeOffset get_LastModified();
    public abstract virtual long get_Size();
    public abstract virtual string get_ContentType();
    public abstract virtual Stream OpenReadStream(long maxAllowedSize, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.AspNetCore.Components.Forms.IInputFileJsCallbacks {
    public abstract virtual Task NotifyChange(BrowserFile[] files);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Components.Forms.InputBase`1 : ComponentBase {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public IReadOnlyDictionary`2<string, object> AdditionalAttributes { get; public set; }
    [ParameterAttribute]
public TValue Value { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public EventCallback`1<TValue> ValueChanged { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public Expression`1<Func`1<TValue>> ValueExpression { get; public set; }
    [ParameterAttribute]
public string DisplayName { get; public set; }
    [NullableAttribute("1")]
protected EditContext EditContext { get; protected set; }
    protected internal FieldIdentifier FieldIdentifier { get; protected internal set; }
    protected TValue CurrentValue { get; protected set; }
    protected string CurrentValueAsString { get; protected set; }
    [NullableAttribute("1")]
protected string CssClass { get; }
    [NullableAttribute("1")]
protected string NameAttributeValue { get; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_AdditionalAttributes();
    [CompilerGeneratedAttribute]
public void set_AdditionalAttributes(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public TValue get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(TValue value);
    [CompilerGeneratedAttribute]
public EventCallback`1<TValue> get_ValueChanged();
    [CompilerGeneratedAttribute]
public void set_ValueChanged(EventCallback`1<TValue> value);
    [CompilerGeneratedAttribute]
public Expression`1<Func`1<TValue>> get_ValueExpression();
    [CompilerGeneratedAttribute]
public void set_ValueExpression(Expression`1<Func`1<TValue>> value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected EditContext get_EditContext();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected void set_EditContext(EditContext value);
    [CompilerGeneratedAttribute]
protected internal FieldIdentifier get_FieldIdentifier();
    [CompilerGeneratedAttribute]
protected internal void set_FieldIdentifier(FieldIdentifier value);
    protected TValue get_CurrentValue();
    protected void set_CurrentValue(TValue value);
    protected string get_CurrentValueAsString();
    protected void set_CurrentValueAsString(string value);
    protected virtual string FormatValueAsString(TValue value);
    protected abstract virtual bool TryParseValueFromString(string value, TValue& result, String& validationErrorMessage);
    [NullableContextAttribute("1")]
protected string get_CssClass();
    [NullableContextAttribute("1")]
protected string get_NameAttributeValue();
    [NullableContextAttribute("1")]
public virtual Task SetParametersAsync(ParameterView parameters);
    protected virtual void Dispose(bool disposing);
    private sealed virtual override void System.IDisposable.Dispose();
}
public class Microsoft.AspNetCore.Components.Forms.InputCheckbox : InputBase`1<bool> {
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
public Nullable`1<ElementReference> get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(Nullable`1<ElementReference> value);
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    [NullableContextAttribute("2")]
protected virtual bool TryParseValueFromString(string value, Boolean& result, String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.Forms.InputDate`1 : InputBase`1<TValue> {
    [ParameterAttribute]
public InputDateType Type { get; public set; }
    [ParameterAttribute]
public string ParsingErrorMessage { get; public set; }
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
public InputDateType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(InputDateType value);
    [CompilerGeneratedAttribute]
public string get_ParsingErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ParsingErrorMessage(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<ElementReference> get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(Nullable`1<ElementReference> value);
    protected virtual void OnParametersSet();
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    protected virtual string FormatValueAsString(TValue value);
    [NullableContextAttribute("2")]
protected virtual bool TryParseValueFromString(string value, TValue& result, String& validationErrorMessage);
}
public enum Microsoft.AspNetCore.Components.Forms.InputDateType : Enum {
    public int value__;
    public static InputDateType Date;
    public static InputDateType DateTimeLocal;
    public static InputDateType Month;
    public static InputDateType Time;
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Components.Forms.InputExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool TryParseSelectableValueFromString(InputBase`1<TValue> input, string value, TValue& result, String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.InputFile : ComponentBase {
    [InjectAttribute]
internal IJSRuntime JSRuntime { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public EventCallback`1<InputFileChangeEventArgs> OnChange { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public IDictionary`2<string, object> AdditionalAttributes { get; public set; }
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
internal IJSRuntime get_JSRuntime();
    [CompilerGeneratedAttribute]
internal void set_JSRuntime(IJSRuntime value);
    [CompilerGeneratedAttribute]
public EventCallback`1<InputFileChangeEventArgs> get_OnChange();
    [CompilerGeneratedAttribute]
public void set_OnChange(EventCallback`1<InputFileChangeEventArgs> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalAttributes();
    [CompilerGeneratedAttribute]
public void set_AdditionalAttributes(IDictionary`2<string, object> value);
    public Nullable`1<ElementReference> get_Element();
    protected void set_Element(Nullable`1<ElementReference> value);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Forms.InputFile/<OnAfterRenderAsync>d__17")]
protected virtual Task OnAfterRenderAsync(bool firstRender);
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    internal Stream OpenReadStream(BrowserFile file, long maxAllowedSize, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Forms.InputFile/<ConvertToImageFileAsync>d__20")]
internal ValueTask`1<IBrowserFile> ConvertToImageFileAsync(BrowserFile file, string format, int maxWidth, int maxHeight);
    private sealed virtual override Task Microsoft.AspNetCore.Components.Forms.IInputFileJsCallbacks.NotifyChange(BrowserFile[] files);
    private sealed virtual override void System.IDisposable.Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs : EventArgs {
    public int FileCount { get; }
    public IBrowserFile File { get; }
    public InputFileChangeEventArgs(IReadOnlyList`1<IBrowserFile> files);
    public int get_FileCount();
    public IBrowserFile get_File();
    public IReadOnlyList`1<IBrowserFile> GetMultipleFiles(int maximumFileCount);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Components.Forms.InputFileInterop : object {
    public static string Init;
    public static string ReadFileData;
    public static string ToImageFile;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Forms.InputFileJsCallbacksRelay : object {
    public IDisposable DotNetReference { get; }
    [DynamicDependencyAttribute("NotifyChange")]
public InputFileJsCallbacksRelay(IInputFileJsCallbacks callbacks);
    [CompilerGeneratedAttribute]
public IDisposable get_DotNetReference();
    [JSInvokableAttribute]
public Task NotifyChange(BrowserFile[] files);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.Forms.InputNumber`1 : InputBase`1<TValue> {
    [ParameterAttribute]
public string ParsingErrorMessage { get; public set; }
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
public string get_ParsingErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ParsingErrorMessage(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<ElementReference> get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(Nullable`1<ElementReference> value);
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    [NullableContextAttribute("2")]
protected virtual bool TryParseValueFromString(string value, TValue& result, String& validationErrorMessage);
    [NullableContextAttribute("2")]
protected virtual string FormatValueAsString(TValue value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.InputRadio`1 : ComponentBase {
    internal InputRadioContext Context { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public IReadOnlyDictionary`2<string, object> AdditionalAttributes { get; public set; }
    [ParameterAttribute]
public TValue Value { get; public set; }
    [ParameterAttribute]
public string Name { get; public set; }
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
internal InputRadioContext get_Context();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_AdditionalAttributes();
    [CompilerGeneratedAttribute]
public void set_AdditionalAttributes(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public TValue get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(TValue value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<ElementReference> get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(Nullable`1<ElementReference> value);
    protected virtual void OnParametersSet();
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Forms.InputRadioContext : object {
    public InputRadioContext ParentContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventCallback`1<ChangeEventArgs> ChangeEventCallback { get; }
    public object CurrentValue { get; }
    public string GroupName { get; public set; }
    public string FieldClass { get; public set; }
    [NullableContextAttribute("1")]
public InputRadioContext(IInputRadioValueProvider valueProvider, InputRadioContext parentContext, EventCallback`1<ChangeEventArgs> changeEventCallback);
    [CompilerGeneratedAttribute]
public InputRadioContext get_ParentContext();
    [CompilerGeneratedAttribute]
public EventCallback`1<ChangeEventArgs> get_ChangeEventCallback();
    public object get_CurrentValue();
    [CompilerGeneratedAttribute]
public string get_GroupName();
    [CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [CompilerGeneratedAttribute]
public string get_FieldClass();
    [CompilerGeneratedAttribute]
public void set_FieldClass(string value);
    [NullableContextAttribute("1")]
public InputRadioContext FindContextInAncestors(string groupName);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1 : InputBase`1<TValue> {
    [ParameterAttribute]
public RenderFragment ChildContent { get; public set; }
    [ParameterAttribute]
public string Name { get; public set; }
    private object Microsoft.AspNetCore.Components.IInputRadioValueProvider.CurrentValue { get; }
    [CompilerGeneratedAttribute]
public RenderFragment get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    private sealed virtual override object Microsoft.AspNetCore.Components.IInputRadioValueProvider.get_CurrentValue();
    protected virtual void OnParametersSet();
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    protected virtual bool TryParseValueFromString(string value, TValue& result, String& validationErrorMessage);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.Forms.InputSelect`1 : InputBase`1<TValue> {
    [ParameterAttribute]
public RenderFragment ChildContent { get; public set; }
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
public RenderFragment get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment value);
    [CompilerGeneratedAttribute]
public Nullable`1<ElementReference> get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(Nullable`1<ElementReference> value);
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    protected virtual bool TryParseValueFromString(string value, TValue& result, String& validationErrorMessage);
    protected virtual string FormatValueAsString(TValue value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.Forms.InputText : InputBase`1<string> {
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
public Nullable`1<ElementReference> get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(Nullable`1<ElementReference> value);
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    [NullableContextAttribute("2")]
protected virtual bool TryParseValueFromString(string value, String& result, String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.Forms.InputTextArea : InputBase`1<string> {
    public Nullable`1<ElementReference> Element { get; protected set; }
    [CompilerGeneratedAttribute]
public Nullable`1<ElementReference> get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(Nullable`1<ElementReference> value);
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    [NullableContextAttribute("2")]
protected virtual bool TryParseValueFromString(string value, String& result, String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Components.Forms.Mapping.EditContextFormMappingExtensions : object {
    [ExtensionAttribute]
public static IDisposable EnableFormMappingContextExtensions(EditContext context, FormMappingContext mappingContext);
    [ExtensionAttribute]
public static string GetAttemptedValue(EditContext context, string fieldName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.Mapping.FormMappingError : object {
    public object Container { get; internal set; }
    public string Name { get; }
    public string Path { get; }
    public IReadOnlyList`1<FormattableString> ErrorMessages { get; }
    [NullableAttribute("2")]
public string AttemptedValue { get; }
    internal FormMappingError(string path, List`1<FormattableString> errorMessages, string attemptedValue);
    [CompilerGeneratedAttribute]
public object get_Container();
    [CompilerGeneratedAttribute]
internal void set_Container(object value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Path();
    public IReadOnlyList`1<FormattableString> get_ErrorMessages();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AttemptedValue();
    internal void AddError(FormattableString error);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Forms.Mapping.FormMappingValidator : ComponentBase {
    [ParameterAttribute]
public EditContext CurrentEditContext { get; public set; }
    [CascadingParameterAttribute]
internal FormMappingContext MappingContext { get; internal set; }
    [CompilerGeneratedAttribute]
public EditContext get_CurrentEditContext();
    [CompilerGeneratedAttribute]
public void set_CurrentEditContext(EditContext value);
    [CompilerGeneratedAttribute]
internal FormMappingContext get_MappingContext();
    [CompilerGeneratedAttribute]
internal void set_MappingContext(FormMappingContext value);
    protected virtual void OnInitialized();
    protected virtual void OnParametersSet();
    private sealed virtual override void System.IDisposable.Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext : object {
    public string AcceptMappingScopeName { get; }
    [NullableAttribute("2")]
public string AcceptFormName { get; }
    public string ParameterName { get; }
    public Type ValueType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`3<string, FormattableString, string> OnError { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<string, object> MapErrorToContainer { get; public set; }
    [NullableAttribute("2")]
public object Result { get; }
    internal FormValueMappingContext(string acceptMappingScopeName, string acceptFormName, Type valueType, string parameterName);
    [CompilerGeneratedAttribute]
public string get_AcceptMappingScopeName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AcceptFormName();
    [CompilerGeneratedAttribute]
public string get_ParameterName();
    [CompilerGeneratedAttribute]
public Type get_ValueType();
    [CompilerGeneratedAttribute]
public Action`3<string, FormattableString, string> get_OnError();
    [CompilerGeneratedAttribute]
public void set_OnError(Action`3<string, FormattableString, string> value);
    [CompilerGeneratedAttribute]
public Action`2<string, object> get_MapErrorToContainer();
    [CompilerGeneratedAttribute]
public void set_MapErrorToContainer(Action`2<string, object> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Result();
    [NullableContextAttribute("2")]
public void SetResult(object result);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Components.Forms.Mapping.IFormValueMapper {
    public abstract virtual bool CanMap(Type valueType, string scopeName, string formName);
    public abstract virtual void Map(FormValueMappingContext context);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.Forms.Mapping.SupplyParameterFromFormServiceCollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddSupplyValueFromFormProvider(IServiceCollection serviceCollection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Forms.Mapping.SupplyParameterFromFormValueProvider : object {
    public FormMappingContext MappingContext { get; }
    public string MappingScopeName { get; }
    private bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.IsFixed { get; }
    public SupplyParameterFromFormValueProvider(IFormValueMapper formValueMapper, string mappingScopeName);
    public FormMappingContext get_MappingContext();
    [CompilerGeneratedAttribute]
public string get_MappingScopeName();
    private sealed virtual override bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.get_IsFixed();
    public bool CanSupplyValue(CascadingParameterInfo& parameterInfo);
    [NullableContextAttribute("2")]
public object GetCurrentValue(CascadingParameterInfo& parameterInfo);
    private sealed virtual override void Microsoft.AspNetCore.Components.ICascadingValueSupplier.Subscribe(ComponentState subscriber, CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override void Microsoft.AspNetCore.Components.ICascadingValueSupplier.Unsubscribe(ComponentState subscriber, CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    [NullableContextAttribute("2")]
internal static object GetFormPostValue(IFormValueMapper formValueMapper, FormMappingContext mappingContext, CascadingParameterInfo& parameterInfo);
    private sealed virtual override bool Microsoft.AspNetCore.Components.ICascadingValueSupplier.CanSupplyValue(CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
    private sealed virtual override object Microsoft.AspNetCore.Components.ICascadingValueSupplier.GetCurrentValue(CascadingParameterInfo& modreq(System.Runtime.InteropServices.InAttribute) parameterInfo);
}
[UnsupportedOSPlatformAttribute("browser")]
[ObsoleteAttribute("RemoteJSDataStream defaults are utilized instead of the options here.")]
public class Microsoft.AspNetCore.Components.Forms.RemoteBrowserFileStreamOptions : object {
    public int MaxSegmentSize { get; public set; }
    public int MaxBufferSize { get; public set; }
    public TimeSpan SegmentFetchTimeout { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MaxSegmentSize();
    [CompilerGeneratedAttribute]
public void set_MaxSegmentSize(int value);
    [CompilerGeneratedAttribute]
public int get_MaxBufferSize();
    [CompilerGeneratedAttribute]
public void set_MaxBufferSize(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_SegmentFetchTimeout();
    [CompilerGeneratedAttribute]
public void set_SegmentFetchTimeout(TimeSpan value);
}
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RefStructs")]
internal class Microsoft.AspNetCore.Components.Forms.ReverseStringBuilder : ValueType {
    public static int MinimumRentedArraySize;
    private static ArrayPool`1<char> s_arrayPool;
    private int _nextEndIndex;
    private Span`1<char> _currentBuffer;
    private SequenceSegment _fallbackSequenceSegment;
    internal int SequenceSegmentCount { get; }
    public bool Empty { get; }
    public ReverseStringBuilder(int conservativeEstimatedStringLength);
    public ReverseStringBuilder(Span`1<char> initialBuffer);
    internal int get_SequenceSegmentCount();
    public bool get_Empty();
    public void InsertFront(ReadOnlySpan`1<char> span);
    [NullableContextAttribute("1")]
public void InsertFront(T value);
    [NullableContextAttribute("1")]
public void InsertFront(IFormattable formattable);
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    [IsReadOnlyAttribute]
public void Dispose();
}
public class Microsoft.AspNetCore.Components.Forms.ValidationMessage`1 : ComponentBase {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public IReadOnlyDictionary`2<string, object> AdditionalAttributes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public Expression`1<Func`1<TValue>> For { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_AdditionalAttributes();
    [CompilerGeneratedAttribute]
public void set_AdditionalAttributes(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Expression`1<Func`1<TValue>> get_For();
    [CompilerGeneratedAttribute]
public void set_For(Expression`1<Func`1<TValue>> value);
    protected virtual void OnParametersSet();
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    protected virtual void Dispose(bool disposing);
    private sealed virtual override void System.IDisposable.Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Forms.ValidationSummary : ComponentBase {
    [ParameterAttribute]
public object Model { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public IReadOnlyDictionary`2<string, object> AdditionalAttributes { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(object value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_AdditionalAttributes();
    [CompilerGeneratedAttribute]
public void set_AdditionalAttributes(IReadOnlyDictionary`2<string, object> value);
    protected virtual void OnParametersSet();
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    protected virtual void Dispose(bool disposing);
    private sealed virtual override void System.IDisposable.Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.HtmlRendering.Infrastructure.StaticHtmlRenderer : Renderer {
    public Dispatcher Dispatcher { get; }
    public StaticHtmlRenderer(IServiceProvider serviceProvider, ILoggerFactory loggerFactory);
    [CompilerGeneratedAttribute]
public virtual Dispatcher get_Dispatcher();
    public HtmlRootComponent BeginRenderingComponent(Type componentType, ParameterView initialParameters);
    public HtmlRootComponent BeginRenderingComponent(IComponent component, ParameterView initialParameters);
    protected virtual void HandleException(Exception exception);
    protected virtual Task UpdateDisplayAsync(RenderBatch& modreq(System.Runtime.InteropServices.InAttribute) renderBatch);
    [NullableContextAttribute("0")]
internal ArrayRange`1<RenderTreeFrame> GetCurrentRenderTreeFrames(int componentId);
    protected internal virtual void WriteComponentHtml(int componentId, TextWriter output);
    protected virtual void RenderChildComponent(TextWriter output, RenderTreeFrame& componentFrame);
    protected bool TryCreateScopeQualifiedEventName(int componentId, string assignedEventName, String& scopeQualifiedEventName);
}
[NullableContextAttribute("2")]
internal interface Microsoft.AspNetCore.Components.IInputRadioValueProvider {
    public object CurrentValue { get; }
    public abstract virtual object get_CurrentValue();
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddAttributeIfNotNullOrEmpty(RenderTreeBuilder builder, int sequence, string name, string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.RenderTree.WebEventDescriptor : object {
    public ulong EventHandlerId { get; public set; }
    public string EventName { get; public set; }
    [NullableAttribute("2")]
public EventFieldInfo EventFieldInfo { get; public set; }
    [CompilerGeneratedAttribute]
public ulong get_EventHandlerId();
    [CompilerGeneratedAttribute]
public void set_EventHandlerId(ulong value);
    [CompilerGeneratedAttribute]
public string get_EventName();
    [CompilerGeneratedAttribute]
public void set_EventName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public EventFieldInfo get_EventFieldInfo();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_EventFieldInfo(EventFieldInfo value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Components.RenderTree.WebRenderer : Renderer {
    protected int RendererId { get; protected set; }
    public WebRenderer(IServiceProvider serviceProvider, ILoggerFactory loggerFactory, JsonSerializerOptions jsonOptions, JSComponentInterop jsComponentInterop);
    protected int get_RendererId();
    [ObsoleteAttribute("The renderer ID can be assigned by overriding 'GetWebRendererId'.")]
protected Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RendererId(int value);
    protected virtual int GetWebRendererId();
    protected internal int AddRootComponent(Type componentType, string domElementSelector);
    protected abstract virtual void AttachRootComponentToBrowser(int componentId, string domElementSelector);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Routing.FocusOnNavigate : ComponentBase {
    [ParameterAttribute]
public RouteData RouteData { get; public set; }
    [ParameterAttribute]
public string Selector { get; public set; }
    [CompilerGeneratedAttribute]
public RouteData get_RouteData();
    [CompilerGeneratedAttribute]
public void set_RouteData(RouteData value);
    [CompilerGeneratedAttribute]
public string get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(string value);
    protected virtual void OnParametersSet();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Routing.FocusOnNavigate/<OnAfterRenderAsync>d__15")]
protected virtual Task OnAfterRenderAsync(bool firstRender);
}
public class Microsoft.AspNetCore.Components.Routing.NavigationLock : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public EventCallback`1<LocationChangingContext> OnBeforeInternalNavigation { get; public set; }
    [ParameterAttribute]
public bool ConfirmExternalNavigation { get; public set; }
    [CompilerGeneratedAttribute]
public EventCallback`1<LocationChangingContext> get_OnBeforeInternalNavigation();
    [CompilerGeneratedAttribute]
public void set_OnBeforeInternalNavigation(EventCallback`1<LocationChangingContext> value);
    [CompilerGeneratedAttribute]
public bool get_ConfirmExternalNavigation();
    [CompilerGeneratedAttribute]
public void set_ConfirmExternalNavigation(bool value);
    private sealed virtual override void Microsoft.AspNetCore.Components.IComponent.Attach(RenderHandle renderHandle);
    private sealed virtual override Task Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(ParameterView parameters);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Routing.NavigationLock/<Microsoft-AspNetCore-Components-IHandleAfterRender-OnAfterRenderAsync>d__25")]
private sealed virtual override Task Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Routing.NavigationLock/<System-IAsyncDisposable-DisposeAsync>d__27")]
private sealed virtual override ValueTask System.IAsyncDisposable.DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Routing.NavigationLockInterop : object {
    public static string EnableNavigationPrompt;
    public static string DisableNavigationPrompt;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Routing.NavLink : ComponentBase {
    [ParameterAttribute]
public string ActiveClass { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public IReadOnlyDictionary`2<string, object> AdditionalAttributes { get; public set; }
    protected string CssClass { get; protected set; }
    [ParameterAttribute]
public RenderFragment ChildContent { get; public set; }
    [ParameterAttribute]
public NavLinkMatch Match { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ActiveClass();
    [CompilerGeneratedAttribute]
public void set_ActiveClass(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_AdditionalAttributes();
    [CompilerGeneratedAttribute]
public void set_AdditionalAttributes(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
protected string get_CssClass();
    [CompilerGeneratedAttribute]
protected void set_CssClass(string value);
    [CompilerGeneratedAttribute]
public RenderFragment get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment value);
    [CompilerGeneratedAttribute]
public NavLinkMatch get_Match();
    [CompilerGeneratedAttribute]
public void set_Match(NavLinkMatch value);
    protected virtual void OnInitialized();
    protected virtual void OnParametersSet();
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
}
public enum Microsoft.AspNetCore.Components.Routing.NavLinkMatch : Enum {
    public int value__;
    public static NavLinkMatch Prefix;
    public static NavLinkMatch All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Components.SupplyParameterFromFormAttribute : CascadingParameterAttributeBase {
    public string Name { get; public set; }
    public string FormName { get; public set; }
    internal bool SingleDelivery { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_FormName();
    [CompilerGeneratedAttribute]
public void set_FormName(string value);
    internal virtual bool get_SingleDelivery();
}
[BindInputElementAttribute("", "", "value", "onchange", "False", "")]
[BindInputElementAttribute("", "value", "value", "onchange", "False", "")]
[BindInputElementAttribute("checkbox", "", "checked", "onchange", "False", "")]
[BindInputElementAttribute("text", "", "value", "onchange", "False", "")]
[BindInputElementAttribute("number", "", "value", "onchange", "True", "")]
[BindInputElementAttribute("number", "value", "value", "onchange", "True", "")]
[BindInputElementAttribute("date", "", "value", "onchange", "True", "yyyy-MM-dd")]
[BindInputElementAttribute("date", "value", "value", "onchange", "True", "yyyy-MM-dd")]
[BindInputElementAttribute("datetime-local", "", "value", "onchange", "True", "yyyy-MM-ddTHH:mm:ss")]
[BindInputElementAttribute("datetime-local", "value", "value", "onchange", "True", "yyyy-MM-ddTHH:mm:ss")]
[BindInputElementAttribute("month", "", "value", "onchange", "True", "yyyy-MM")]
[BindInputElementAttribute("month", "value", "value", "onchange", "True", "yyyy-MM")]
[BindInputElementAttribute("time", "", "value", "onchange", "True", "HH:mm:ss")]
[BindInputElementAttribute("time", "value", "value", "onchange", "True", "HH:mm:ss")]
[BindElementAttribute("select", "", "value", "onchange")]
[BindElementAttribute("textarea", "", "value", "onchange")]
public static class Microsoft.AspNetCore.Components.Web.BindAttributes : object {
}
internal static class Microsoft.AspNetCore.Components.Web.ChangeEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static ChangeEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.ClipboardEventArgs : EventArgs {
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
internal static class Microsoft.AspNetCore.Components.Web.ClipboardEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static ClipboardEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.DataTransfer : object {
    public string DropEffect { get; public set; }
    [NullableAttribute("2")]
public string EffectAllowed { get; public set; }
    public String[] Files { get; public set; }
    public DataTransferItem[] Items { get; public set; }
    public String[] Types { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DropEffect();
    [CompilerGeneratedAttribute]
public void set_DropEffect(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_EffectAllowed();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_EffectAllowed(string value);
    [CompilerGeneratedAttribute]
public String[] get_Files();
    [CompilerGeneratedAttribute]
public void set_Files(String[] value);
    [CompilerGeneratedAttribute]
public DataTransferItem[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(DataTransferItem[] value);
    [CompilerGeneratedAttribute]
public String[] get_Types();
    [CompilerGeneratedAttribute]
public void set_Types(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.DataTransferItem : object {
    public string Kind { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.DragEventArgs : MouseEventArgs {
    public DataTransfer DataTransfer { get; public set; }
    [CompilerGeneratedAttribute]
public DataTransfer get_DataTransfer();
    [CompilerGeneratedAttribute]
public void set_DataTransfer(DataTransfer value);
}
internal static class Microsoft.AspNetCore.Components.Web.DragEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static DragEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.ErrorBoundary : ErrorBoundaryBase {
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.ErrorBoundary/<OnErrorAsync>d__4")]
protected virtual Task OnErrorAsync(Exception exception);
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.ErrorEventArgs : EventArgs {
    public string Message { get; public set; }
    public string Filename { get; public set; }
    public int Lineno { get; public set; }
    public int Colno { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
    [CompilerGeneratedAttribute]
public int get_Lineno();
    [CompilerGeneratedAttribute]
public void set_Lineno(int value);
    [CompilerGeneratedAttribute]
public int get_Colno();
    [CompilerGeneratedAttribute]
public void set_Colno(int value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
internal static class Microsoft.AspNetCore.Components.Web.ErrorEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static ErrorEventArgs Read(JsonElement jsonElement);
}
[EventHandlerAttribute("onfocus", "Microsoft.AspNetCore.Components.Web.FocusEventArgs", "True", "True")]
[EventHandlerAttribute("onblur", "Microsoft.AspNetCore.Components.Web.FocusEventArgs", "True", "True")]
[EventHandlerAttribute("onfocusin", "Microsoft.AspNetCore.Components.Web.FocusEventArgs", "True", "True")]
[EventHandlerAttribute("onfocusout", "Microsoft.AspNetCore.Components.Web.FocusEventArgs", "True", "True")]
[EventHandlerAttribute("onmouseover", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onmouseout", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onmouseleave", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onmouseenter", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onmousemove", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onmousedown", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onmouseup", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onclick", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("ondblclick", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("onwheel", "Microsoft.AspNetCore.Components.Web.WheelEventArgs", "True", "True")]
[EventHandlerAttribute("onmousewheel", "Microsoft.AspNetCore.Components.Web.WheelEventArgs", "True", "True")]
[EventHandlerAttribute("oncontextmenu", "Microsoft.AspNetCore.Components.Web.MouseEventArgs", "True", "True")]
[EventHandlerAttribute("ondrag", "Microsoft.AspNetCore.Components.Web.DragEventArgs", "True", "True")]
[EventHandlerAttribute("ondragend", "Microsoft.AspNetCore.Components.Web.DragEventArgs", "True", "True")]
[EventHandlerAttribute("ondragenter", "Microsoft.AspNetCore.Components.Web.DragEventArgs", "True", "True")]
[EventHandlerAttribute("ondragleave", "Microsoft.AspNetCore.Components.Web.DragEventArgs", "True", "True")]
[EventHandlerAttribute("ondragover", "Microsoft.AspNetCore.Components.Web.DragEventArgs", "True", "True")]
[EventHandlerAttribute("ondragstart", "Microsoft.AspNetCore.Components.Web.DragEventArgs", "True", "True")]
[EventHandlerAttribute("ondrop", "Microsoft.AspNetCore.Components.Web.DragEventArgs", "True", "True")]
[EventHandlerAttribute("onkeydown", "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs", "True", "True")]
[EventHandlerAttribute("onkeyup", "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs", "True", "True")]
[EventHandlerAttribute("onkeypress", "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs", "True", "True")]
[EventHandlerAttribute("onchange", "Microsoft.AspNetCore.Components.ChangeEventArgs", "True", "True")]
[EventHandlerAttribute("oninput", "Microsoft.AspNetCore.Components.ChangeEventArgs", "True", "True")]
[EventHandlerAttribute("oninvalid", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onreset", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onselect", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onselectstart", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onselectionchange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onsubmit", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onbeforecopy", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onbeforecut", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onbeforepaste", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("oncopy", "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs", "True", "True")]
[EventHandlerAttribute("oncut", "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs", "True", "True")]
[EventHandlerAttribute("onpaste", "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs", "True", "True")]
[EventHandlerAttribute("ontouchcancel", "Microsoft.AspNetCore.Components.Web.TouchEventArgs", "True", "True")]
[EventHandlerAttribute("ontouchend", "Microsoft.AspNetCore.Components.Web.TouchEventArgs", "True", "True")]
[EventHandlerAttribute("ontouchmove", "Microsoft.AspNetCore.Components.Web.TouchEventArgs", "True", "True")]
[EventHandlerAttribute("ontouchstart", "Microsoft.AspNetCore.Components.Web.TouchEventArgs", "True", "True")]
[EventHandlerAttribute("ontouchenter", "Microsoft.AspNetCore.Components.Web.TouchEventArgs", "True", "True")]
[EventHandlerAttribute("ontouchleave", "Microsoft.AspNetCore.Components.Web.TouchEventArgs", "True", "True")]
[EventHandlerAttribute("ongotpointercapture", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onlostpointercapture", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointercancel", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointerdown", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointerenter", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointerleave", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointermove", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointerout", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointerover", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("onpointerup", "Microsoft.AspNetCore.Components.Web.PointerEventArgs", "True", "True")]
[EventHandlerAttribute("oncanplay", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("oncanplaythrough", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("oncuechange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("ondurationchange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onemptied", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onpause", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onplay", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onplaying", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onratechange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onseeked", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onseeking", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onstalled", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onstop", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onsuspend", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("ontimeupdate", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onvolumechange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onwaiting", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onloadstart", "Microsoft.AspNetCore.Components.Web.ProgressEventArgs", "True", "True")]
[EventHandlerAttribute("ontimeout", "Microsoft.AspNetCore.Components.Web.ProgressEventArgs", "True", "True")]
[EventHandlerAttribute("onabort", "Microsoft.AspNetCore.Components.Web.ProgressEventArgs", "True", "True")]
[EventHandlerAttribute("onload", "Microsoft.AspNetCore.Components.Web.ProgressEventArgs", "True", "True")]
[EventHandlerAttribute("onloadend", "Microsoft.AspNetCore.Components.Web.ProgressEventArgs", "True", "True")]
[EventHandlerAttribute("onprogress", "Microsoft.AspNetCore.Components.Web.ProgressEventArgs", "True", "True")]
[EventHandlerAttribute("onerror", "Microsoft.AspNetCore.Components.Web.ErrorEventArgs", "True", "True")]
[EventHandlerAttribute("onactivate", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onbeforeactivate", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onbeforedeactivate", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("ondeactivate", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onended", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onfullscreenchange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onfullscreenerror", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onloadeddata", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onloadedmetadata", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onpointerlockchange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onpointerlockerror", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onreadystatechange", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("onscroll", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("ontoggle", "System.EventArgs", "True", "True")]
[EventHandlerAttribute("oncancel", "System.EventArgs", "False", "True")]
[EventHandlerAttribute("onclose", "System.EventArgs", "False", "True")]
public static class Microsoft.AspNetCore.Components.Web.EventHandlers : object {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.FocusEventArgs : EventArgs {
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
internal static class Microsoft.AspNetCore.Components.Web.FocusEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static FocusEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.HeadContent : ComponentBase {
    [ParameterAttribute]
public RenderFragment ChildContent { get; public set; }
    [CompilerGeneratedAttribute]
public RenderFragment get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment value);
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.HeadOutlet : ComponentBase {
    internal static object HeadSectionId;
    internal static object TitleSectionId;
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.HeadOutlet/<OnAfterRenderAsync>d__8")]
protected virtual Task OnAfterRenderAsync(bool firstRender);
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.HtmlRenderer : object {
    public Dispatcher Dispatcher { get; }
    public HtmlRenderer(IServiceProvider services, ILoggerFactory loggerFactory);
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
    public Dispatcher get_Dispatcher();
    [NullableContextAttribute("0")]
public HtmlRootComponent BeginRenderingComponent();
    [NullableContextAttribute("0")]
public HtmlRootComponent BeginRenderingComponent(ParameterView parameters);
    public HtmlRootComponent BeginRenderingComponent(Type componentType);
    public HtmlRootComponent BeginRenderingComponent(Type componentType, ParameterView parameters);
    public Task`1<HtmlRootComponent> RenderComponentAsync();
    public Task`1<HtmlRootComponent> RenderComponentAsync(Type componentType);
    public Task`1<HtmlRootComponent> RenderComponentAsync(ParameterView parameters);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.HtmlRenderer/<RenderComponentAsync>d__13")]
public Task`1<HtmlRootComponent> RenderComponentAsync(Type componentType, ParameterView parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Components.Web.HtmlRendering.HtmlRootComponent : ValueType {
    private StaticHtmlRenderer _renderer;
    private int _componentId;
    [CompilerGeneratedAttribute]
private Task <QuiescenceTask>k__BackingField;
    public Task QuiescenceTask { get; }
    internal HtmlRootComponent(StaticHtmlRenderer renderer, int componentId, Task quiescenceTask);
    [CompilerGeneratedAttribute]
public Task get_QuiescenceTask();
    public string ToHtmlString();
    public void WriteHtmlTo(TextWriter output);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Components.Web.IErrorBoundaryLogger {
    public abstract virtual ValueTask LogErrorAsync(Exception exception);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Components.Web.IJSComponentConfiguration {
    public JSComponentConfigurationStore JSComponents { get; }
    public abstract virtual JSComponentConfigurationStore get_JSComponents();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public class Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop : object {
    internal JSComponentConfigurationStore Configuration { get; }
    public JSComponentInterop(JSComponentConfigurationStore configuration);
    [CompilerGeneratedAttribute]
internal JSComponentConfigurationStore get_Configuration();
    internal void AttachToRenderer(WebRenderer renderer);
    protected internal virtual int AddRootComponent(string identifier, string domElementSelector);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
protected internal void SetRootComponentParameters(int componentId, int parameterCount, JsonElement parametersJson, JsonSerializerOptions jsonOptions);
    protected internal virtual void RemoveRootComponent(int componentId);
    internal static ParameterTypeCache GetComponentParameters(Type componentType);
    internal static bool IsEventCallbackType(Type type);
}
public class Microsoft.AspNetCore.Components.Web.InteractiveAutoRenderMode : object {
    public bool Prerender { get; }
    public InteractiveAutoRenderMode(bool prerender);
    [CompilerGeneratedAttribute]
public bool get_Prerender();
}
public class Microsoft.AspNetCore.Components.Web.InteractiveServerRenderMode : object {
    public bool Prerender { get; }
    public InteractiveServerRenderMode(bool prerender);
    [CompilerGeneratedAttribute]
public bool get_Prerender();
}
public class Microsoft.AspNetCore.Components.Web.InteractiveWebAssemblyRenderMode : object {
    public bool Prerender { get; }
    public InteractiveWebAssemblyRenderMode(bool prerender);
    [CompilerGeneratedAttribute]
public bool get_Prerender();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.Web.JSComponentConfigurationExtensions : object {
    [ExtensionAttribute]
public static void RegisterForJavaScript(IJSComponentConfiguration configuration, string identifier);
    [ExtensionAttribute]
public static void RegisterForJavaScript(IJSComponentConfiguration configuration, string identifier, string javaScriptInitializer);
    [ExtensionAttribute]
[DynamicDependencyAttribute("8", "Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop")]
public static void RegisterForJavaScript(IJSComponentConfiguration configuration, Type componentType, string identifier);
    [ExtensionAttribute]
[DynamicDependencyAttribute("8", "Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop")]
public static void RegisterForJavaScript(IJSComponentConfiguration configuration, Type componentType, string identifier, string javaScriptInitializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore : object {
    internal Dictionary`2<string, JSComponentParameter[]> JSComponentParametersByIdentifier { get; }
    internal Dictionary`2<string, List`1<string>> JSComponentIdentifiersByInitializer { get; }
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, JSComponentParameter[]> get_JSComponentParametersByIdentifier();
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, List`1<string>> get_JSComponentIdentifiersByInitializer();
    internal void Add(Type componentType, string identifier);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2067")]
internal bool TryGetComponentType(string identifier, Type& componentType);
    [DynamicDependencyAttribute("512", "Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore/JSComponentParameter")]
[DynamicDependencyAttribute("AddRootComponent", "Microsoft.AspNetCore.Components.RenderTree.WebRenderer/WebRendererInteropMethods")]
[DynamicDependencyAttribute("SetRootComponentParameters", "Microsoft.AspNetCore.Components.RenderTree.WebRenderer/WebRendererInteropMethods")]
[DynamicDependencyAttribute("RemoveRootComponent", "Microsoft.AspNetCore.Components.RenderTree.WebRenderer/WebRendererInteropMethods")]
internal void Add(Type componentType, string identifier, string javaScriptInitializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.KeyboardEventArgs : EventArgs {
    public string Key { get; public set; }
    public string Code { get; public set; }
    public float Location { get; public set; }
    public bool Repeat { get; public set; }
    public bool CtrlKey { get; public set; }
    public bool ShiftKey { get; public set; }
    public bool AltKey { get; public set; }
    public bool MetaKey { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public float get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(float value);
    [CompilerGeneratedAttribute]
public bool get_Repeat();
    [CompilerGeneratedAttribute]
public void set_Repeat(bool value);
    [CompilerGeneratedAttribute]
public bool get_CtrlKey();
    [CompilerGeneratedAttribute]
public void set_CtrlKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShiftKey();
    [CompilerGeneratedAttribute]
public void set_ShiftKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_AltKey();
    [CompilerGeneratedAttribute]
public void set_AltKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_MetaKey();
    [CompilerGeneratedAttribute]
public void set_MetaKey(bool value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
internal static class Microsoft.AspNetCore.Components.Web.KeyboardEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static KeyboardEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.MouseEventArgs : EventArgs {
    public long Detail { get; public set; }
    public double ScreenX { get; public set; }
    public double ScreenY { get; public set; }
    public double ClientX { get; public set; }
    public double ClientY { get; public set; }
    public double OffsetX { get; public set; }
    public double OffsetY { get; public set; }
    public double PageX { get; public set; }
    public double PageY { get; public set; }
    public double MovementX { get; public set; }
    public double MovementY { get; public set; }
    public long Button { get; public set; }
    public long Buttons { get; public set; }
    public bool CtrlKey { get; public set; }
    public bool ShiftKey { get; public set; }
    public bool AltKey { get; public set; }
    public bool MetaKey { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(long value);
    [CompilerGeneratedAttribute]
public double get_ScreenX();
    [CompilerGeneratedAttribute]
public void set_ScreenX(double value);
    [CompilerGeneratedAttribute]
public double get_ScreenY();
    [CompilerGeneratedAttribute]
public void set_ScreenY(double value);
    [CompilerGeneratedAttribute]
public double get_ClientX();
    [CompilerGeneratedAttribute]
public void set_ClientX(double value);
    [CompilerGeneratedAttribute]
public double get_ClientY();
    [CompilerGeneratedAttribute]
public void set_ClientY(double value);
    [CompilerGeneratedAttribute]
public double get_OffsetX();
    [CompilerGeneratedAttribute]
public void set_OffsetX(double value);
    [CompilerGeneratedAttribute]
public double get_OffsetY();
    [CompilerGeneratedAttribute]
public void set_OffsetY(double value);
    [CompilerGeneratedAttribute]
public double get_PageX();
    [CompilerGeneratedAttribute]
public void set_PageX(double value);
    [CompilerGeneratedAttribute]
public double get_PageY();
    [CompilerGeneratedAttribute]
public void set_PageY(double value);
    [CompilerGeneratedAttribute]
public double get_MovementX();
    [CompilerGeneratedAttribute]
public void set_MovementX(double value);
    [CompilerGeneratedAttribute]
public double get_MovementY();
    [CompilerGeneratedAttribute]
public void set_MovementY(double value);
    [CompilerGeneratedAttribute]
public long get_Button();
    [CompilerGeneratedAttribute]
public void set_Button(long value);
    [CompilerGeneratedAttribute]
public long get_Buttons();
    [CompilerGeneratedAttribute]
public void set_Buttons(long value);
    [CompilerGeneratedAttribute]
public bool get_CtrlKey();
    [CompilerGeneratedAttribute]
public void set_CtrlKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShiftKey();
    [CompilerGeneratedAttribute]
public void set_ShiftKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_AltKey();
    [CompilerGeneratedAttribute]
public void set_AltKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_MetaKey();
    [CompilerGeneratedAttribute]
public void set_MetaKey(bool value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Components.Web.MouseEventArgsReader : object {
    internal static MouseEventArgs Read(JsonElement jsonElement);
    internal static void ReadProperty(MouseEventArgs eventArgs, JsonProperty property);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.PageTitle : ComponentBase {
    [ParameterAttribute]
public RenderFragment ChildContent { get; public set; }
    [CompilerGeneratedAttribute]
public RenderFragment get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment value);
    [NullableContextAttribute("1")]
protected virtual void BuildRenderTree(RenderTreeBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.PointerEventArgs : MouseEventArgs {
    public long PointerId { get; public set; }
    public float Width { get; public set; }
    public float Height { get; public set; }
    public float Pressure { get; public set; }
    public float TiltX { get; public set; }
    public float TiltY { get; public set; }
    public string PointerType { get; public set; }
    public bool IsPrimary { get; public set; }
    [CompilerGeneratedAttribute]
public long get_PointerId();
    [CompilerGeneratedAttribute]
public void set_PointerId(long value);
    [CompilerGeneratedAttribute]
public float get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(float value);
    [CompilerGeneratedAttribute]
public float get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(float value);
    [CompilerGeneratedAttribute]
public float get_Pressure();
    [CompilerGeneratedAttribute]
public void set_Pressure(float value);
    [CompilerGeneratedAttribute]
public float get_TiltX();
    [CompilerGeneratedAttribute]
public void set_TiltX(float value);
    [CompilerGeneratedAttribute]
public float get_TiltY();
    [CompilerGeneratedAttribute]
public void set_TiltY(float value);
    [CompilerGeneratedAttribute]
public string get_PointerType();
    [CompilerGeneratedAttribute]
public void set_PointerType(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimary();
    [CompilerGeneratedAttribute]
public void set_IsPrimary(bool value);
}
internal static class Microsoft.AspNetCore.Components.Web.PointerEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static PointerEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.ProgressEventArgs : EventArgs {
    public bool LengthComputable { get; public set; }
    public long Loaded { get; public set; }
    public long Total { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_LengthComputable();
    [CompilerGeneratedAttribute]
public void set_LengthComputable(bool value);
    [CompilerGeneratedAttribute]
public long get_Loaded();
    [CompilerGeneratedAttribute]
public void set_Loaded(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
internal static class Microsoft.AspNetCore.Components.Web.ProgressEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static ProgressEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.Components.Web.RenderMode : object {
    public static InteractiveServerRenderMode InteractiveServer { get; }
    public static InteractiveWebAssemblyRenderMode InteractiveWebAssembly { get; }
    public static InteractiveAutoRenderMode InteractiveAuto { get; }
    [CompilerGeneratedAttribute]
public static InteractiveServerRenderMode get_InteractiveServer();
    [CompilerGeneratedAttribute]
public static InteractiveWebAssemblyRenderMode get_InteractiveWebAssembly();
    [CompilerGeneratedAttribute]
public static InteractiveAutoRenderMode get_InteractiveAuto();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.TouchEventArgs : EventArgs {
    public long Detail { get; public set; }
    public TouchPoint[] Touches { get; public set; }
    public TouchPoint[] TargetTouches { get; public set; }
    public TouchPoint[] ChangedTouches { get; public set; }
    public bool CtrlKey { get; public set; }
    public bool ShiftKey { get; public set; }
    public bool AltKey { get; public set; }
    public bool MetaKey { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(long value);
    [CompilerGeneratedAttribute]
public TouchPoint[] get_Touches();
    [CompilerGeneratedAttribute]
public void set_Touches(TouchPoint[] value);
    [CompilerGeneratedAttribute]
public TouchPoint[] get_TargetTouches();
    [CompilerGeneratedAttribute]
public void set_TargetTouches(TouchPoint[] value);
    [CompilerGeneratedAttribute]
public TouchPoint[] get_ChangedTouches();
    [CompilerGeneratedAttribute]
public void set_ChangedTouches(TouchPoint[] value);
    [CompilerGeneratedAttribute]
public bool get_CtrlKey();
    [CompilerGeneratedAttribute]
public void set_CtrlKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShiftKey();
    [CompilerGeneratedAttribute]
public void set_ShiftKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_AltKey();
    [CompilerGeneratedAttribute]
public void set_AltKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_MetaKey();
    [CompilerGeneratedAttribute]
public void set_MetaKey(bool value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
internal static class Microsoft.AspNetCore.Components.Web.TouchEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static TouchEventArgs Read(JsonElement jsonElement);
}
public class Microsoft.AspNetCore.Components.Web.TouchPoint : object {
    public long Identifier { get; public set; }
    public double ScreenX { get; public set; }
    public double ScreenY { get; public set; }
    public double ClientX { get; public set; }
    public double ClientY { get; public set; }
    public double PageX { get; public set; }
    public double PageY { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(long value);
    [CompilerGeneratedAttribute]
public double get_ScreenX();
    [CompilerGeneratedAttribute]
public void set_ScreenX(double value);
    [CompilerGeneratedAttribute]
public double get_ScreenY();
    [CompilerGeneratedAttribute]
public void set_ScreenY(double value);
    [CompilerGeneratedAttribute]
public double get_ClientX();
    [CompilerGeneratedAttribute]
public void set_ClientX(double value);
    [CompilerGeneratedAttribute]
public double get_ClientY();
    [CompilerGeneratedAttribute]
public void set_ClientY(double value);
    [CompilerGeneratedAttribute]
public double get_PageX();
    [CompilerGeneratedAttribute]
public void set_PageX(double value);
    [CompilerGeneratedAttribute]
public double get_PageY();
    [CompilerGeneratedAttribute]
public void set_PageY(double value);
}
public class Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate`1 : MulticastDelegate {
    public ItemsProviderDelegate`1(object object, IntPtr method);
    public virtual ValueTask`1<ItemsProviderResult`1<TItem>> Invoke(ItemsProviderRequest request);
    public virtual IAsyncResult BeginInvoke(ItemsProviderRequest request, AsyncCallback callback, object object);
    public virtual ValueTask`1<ItemsProviderResult`1<TItem>> EndInvoke(IAsyncResult result);
}
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderRequest : ValueType {
    [CompilerGeneratedAttribute]
private int <StartIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public int StartIndex { get; }
    public int Count { get; }
    public CancellationToken CancellationToken { get; }
    public ItemsProviderRequest(int startIndex, int count, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public int get_StartIndex();
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderResult`1 : ValueType {
    [CompilerGeneratedAttribute]
private IEnumerable`1<TItem> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalItemCount>k__BackingField;
    public IEnumerable`1<TItem> Items { get; }
    public int TotalItemCount { get; }
    public ItemsProviderResult`1(IEnumerable`1<TItem> items, int totalItemCount);
    [CompilerGeneratedAttribute]
public IEnumerable`1<TItem> get_Items();
    [CompilerGeneratedAttribute]
public int get_TotalItemCount();
}
internal interface Microsoft.AspNetCore.Components.Web.Virtualization.IVirtualizeJsCallbacks {
    public abstract virtual void OnBeforeSpacerVisible(float spacerSize, float spacerSeparation, float containerSize);
    public abstract virtual void OnAfterSpacerVisible(float spacerSize, float spacerSeparation, float containerSize);
}
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext : ValueType {
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Size>k__BackingField;
    public int Index { get; }
    public float Size { get; }
    public PlaceholderContext(int index, float size);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public float get_Size();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1 : ComponentBase {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public RenderFragment`1<TItem> ChildContent { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public RenderFragment`1<TItem> ItemContent { get; public set; }
    [NullableAttribute("2")]
[ParameterAttribute]
public RenderFragment`1<PlaceholderContext> Placeholder { get; public set; }
    [NullableAttribute("2")]
[ParameterAttribute]
public RenderFragment EmptyContent { get; public set; }
    [ParameterAttribute]
public float ItemSize { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public ItemsProviderDelegate`1<TItem> ItemsProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public ICollection`1<TItem> Items { get; public set; }
    [ParameterAttribute]
public int OverscanCount { get; public set; }
    [ParameterAttribute]
public string SpacerElement { get; public set; }
    [CompilerGeneratedAttribute]
public RenderFragment`1<TItem> get_ChildContent();
    [CompilerGeneratedAttribute]
public void set_ChildContent(RenderFragment`1<TItem> value);
    [CompilerGeneratedAttribute]
public RenderFragment`1<TItem> get_ItemContent();
    [CompilerGeneratedAttribute]
public void set_ItemContent(RenderFragment`1<TItem> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RenderFragment`1<PlaceholderContext> get_Placeholder();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Placeholder(RenderFragment`1<PlaceholderContext> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RenderFragment get_EmptyContent();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_EmptyContent(RenderFragment value);
    [CompilerGeneratedAttribute]
public float get_ItemSize();
    [CompilerGeneratedAttribute]
public void set_ItemSize(float value);
    [CompilerGeneratedAttribute]
public ItemsProviderDelegate`1<TItem> get_ItemsProvider();
    [CompilerGeneratedAttribute]
public void set_ItemsProvider(ItemsProviderDelegate`1<TItem> value);
    [CompilerGeneratedAttribute]
public ICollection`1<TItem> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(ICollection`1<TItem> value);
    [CompilerGeneratedAttribute]
public int get_OverscanCount();
    [CompilerGeneratedAttribute]
public void set_OverscanCount(int value);
    [CompilerGeneratedAttribute]
public string get_SpacerElement();
    [CompilerGeneratedAttribute]
public void set_SpacerElement(string value);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1/<RefreshDataAsync>d__59")]
public Task RefreshDataAsync();
    protected virtual void OnParametersSet();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1/<OnAfterRenderAsync>d__61")]
protected virtual Task OnAfterRenderAsync(bool firstRender);
    protected virtual void BuildRenderTree(RenderTreeBuilder builder);
    private sealed virtual override void Microsoft.AspNetCore.Components.Web.Virtualization.IVirtualizeJsCallbacks.OnBeforeSpacerVisible(float spacerSize, float spacerSeparation, float containerSize);
    private sealed virtual override void Microsoft.AspNetCore.Components.Web.Virtualization.IVirtualizeJsCallbacks.OnAfterSpacerVisible(float spacerSize, float spacerSeparation, float containerSize);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1/<DisposeAsync>d__72")]
public sealed virtual ValueTask DisposeAsync();
}
internal class Microsoft.AspNetCore.Components.Web.Virtualization.VirtualizeJsInterop : object {
    [NullableContextAttribute("1")]
[DynamicDependencyAttribute("OnSpacerBeforeVisible")]
[DynamicDependencyAttribute("OnSpacerAfterVisible")]
public VirtualizeJsInterop(IVirtualizeJsCallbacks owner, IJSRuntime jsRuntime);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.Virtualization.VirtualizeJsInterop/<InitializeAsync>d__5")]
public ValueTask InitializeAsync(ElementReference spacerBefore, ElementReference spacerAfter);
    [JSInvokableAttribute]
public void OnSpacerBeforeVisible(float spacerSize, float spacerSeparation, float containerSize);
    [JSInvokableAttribute]
public void OnSpacerAfterVisible(float spacerSize, float spacerSeparation, float containerSize);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.Web.Virtualization.VirtualizeJsInterop/<DisposeAsync>d__8")]
public sealed virtual ValueTask DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.Web.WebEventCallbackFactoryEventArgsExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<ClipboardEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<ClipboardEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<ClipboardEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<ClipboardEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<DragEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<DragEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<DragEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<DragEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<ErrorEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<ErrorEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<ErrorEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<ErrorEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<FocusEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<FocusEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<FocusEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<FocusEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<KeyboardEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<KeyboardEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<KeyboardEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<KeyboardEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<MouseEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<MouseEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<MouseEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<MouseEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<PointerEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<PointerEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<PointerEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<PointerEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<ProgressEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<ProgressEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<ProgressEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<ProgressEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<TouchEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<TouchEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<TouchEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<TouchEventArgs, Task> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<WheelEventArgs> Create(EventCallbackFactory factory, object receiver, Action`1<WheelEventArgs> callback);
    [ExtensionAttribute]
[ObsoleteAttribute("This extension method is obsolete and will be removed in a future version. Use the generic overload instead.")]
public static EventCallback`1<WheelEventArgs> Create(EventCallbackFactory factory, object receiver, Func`2<WheelEventArgs, Task> callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.Web.WebEventData : object {
    public ulong EventHandlerId { get; }
    [NullableAttribute("2")]
public EventFieldInfo EventFieldInfo { get; }
    public EventArgs EventArgs { get; }
    public static WebEventData Parse(Renderer renderer, JsonSerializerOptions jsonSerializerOptions, JsonElement eventDescriptorJson, JsonElement eventArgsJson);
    public static WebEventData Parse(Renderer renderer, JsonSerializerOptions jsonSerializerOptions, WebEventDescriptor eventDescriptor, JsonElement eventArgsJson);
    [CompilerGeneratedAttribute]
public ulong get_EventHandlerId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public EventFieldInfo get_EventFieldInfo();
    [CompilerGeneratedAttribute]
public EventArgs get_EventArgs();
}
internal static class Microsoft.AspNetCore.Components.Web.WebEventDescriptorReader : object {
    [NullableContextAttribute("1")]
internal static WebEventDescriptor Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.Web.WebRenderTreeBuilderExtensions : object {
    [ExtensionAttribute]
public static void AddEventPreventDefaultAttribute(RenderTreeBuilder builder, int sequence, string eventName, bool value);
    [ExtensionAttribute]
public static void AddEventStopPropagationAttribute(RenderTreeBuilder builder, int sequence, string eventName, bool value);
}
public class Microsoft.AspNetCore.Components.Web.WheelEventArgs : MouseEventArgs {
    public double DeltaX { get; public set; }
    public double DeltaY { get; public set; }
    public double DeltaZ { get; public set; }
    public long DeltaMode { get; public set; }
    [CompilerGeneratedAttribute]
public double get_DeltaX();
    [CompilerGeneratedAttribute]
public void set_DeltaX(double value);
    [CompilerGeneratedAttribute]
public double get_DeltaY();
    [CompilerGeneratedAttribute]
public void set_DeltaY(double value);
    [CompilerGeneratedAttribute]
public double get_DeltaZ();
    [CompilerGeneratedAttribute]
public void set_DeltaZ(double value);
    [CompilerGeneratedAttribute]
public long get_DeltaMode();
    [CompilerGeneratedAttribute]
public void set_DeltaMode(long value);
}
internal static class Microsoft.AspNetCore.Components.Web.WheelEventArgsReader : object {
    [NullableContextAttribute("1")]
internal static WheelEventArgs Read(JsonElement jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.WebElementReferenceContext : ElementReferenceContext {
    internal IJSRuntime JSRuntime { get; }
    public WebElementReferenceContext(IJSRuntime jsRuntime);
    [CompilerGeneratedAttribute]
internal IJSRuntime get_JSRuntime();
}
