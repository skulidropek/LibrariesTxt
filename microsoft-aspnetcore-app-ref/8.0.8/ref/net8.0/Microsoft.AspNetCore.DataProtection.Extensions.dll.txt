[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.DataProtection.BitHelpers : object {
    public static ulong ReadUInt64(Byte[] buffer, int offset);
    public static void WriteUInt64(Byte[] buffer, int offset, ulong value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions : object {
    [ExtensionAttribute]
public static Byte[] Protect(ITimeLimitedDataProtector protector, Byte[] plaintext, TimeSpan lifetime);
    [ExtensionAttribute]
public static string Protect(ITimeLimitedDataProtector protector, string plaintext, DateTimeOffset expiration);
    [ExtensionAttribute]
public static string Protect(ITimeLimitedDataProtector protector, string plaintext, TimeSpan lifetime);
    [ExtensionAttribute]
public static ITimeLimitedDataProtector ToTimeLimitedDataProtector(IDataProtector protector);
    [ExtensionAttribute]
public static string Unprotect(ITimeLimitedDataProtector protector, string protectedData, DateTimeOffset& expiration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.DataProtection.DataProtectionProvider : object {
    public static IDataProtectionProvider Create(string applicationName);
    public static IDataProtectionProvider Create(DirectoryInfo keyDirectory);
    public static IDataProtectionProvider Create(DirectoryInfo keyDirectory, Action`1<IDataProtectionBuilder> setupAction);
    public static IDataProtectionProvider Create(string applicationName, X509Certificate2 certificate);
    public static IDataProtectionProvider Create(DirectoryInfo keyDirectory, X509Certificate2 certificate);
    public static IDataProtectionProvider Create(DirectoryInfo keyDirectory, Action`1<IDataProtectionBuilder> setupAction, X509Certificate2 certificate);
    internal static IDataProtectionProvider CreateProvider(DirectoryInfo keyDirectory, Action`1<IDataProtectionBuilder> setupAction, X509Certificate2 certificate);
}
internal static class Microsoft.AspNetCore.DataProtection.EncodingUtil : object {
    [NullableAttribute("1")]
public static UTF8Encoding SecureUtf8Encoding;
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.DataProtection.ExceptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool RequiresHomogenization(Exception ex);
}
internal static class Microsoft.AspNetCore.DataProtection.Extensions.Resources : object {
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string CryptCommon_GenericError { get; }
    internal static string TimeLimitedDataProtector_PayloadExpired { get; }
    internal static string TimeLimitedDataProtector_PayloadInvalid { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_CryptCommon_GenericError();
    internal static string get_TimeLimitedDataProtector_PayloadExpired();
    internal static string FormatTimeLimitedDataProtector_PayloadExpired(object p0);
    internal static string get_TimeLimitedDataProtector_PayloadInvalid();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector {
    public abstract virtual ITimeLimitedDataProtector CreateProtector(string purpose);
    public abstract virtual Byte[] Protect(Byte[] plaintext, DateTimeOffset expiration);
    public abstract virtual Byte[] Unprotect(Byte[] protectedData, DateTimeOffset& expiration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtector : object {
    public TimeLimitedDataProtector(IDataProtector innerProtector);
    public sealed virtual ITimeLimitedDataProtector CreateProtector(string purpose);
    public sealed virtual Byte[] Protect(Byte[] plaintext, DateTimeOffset expiration);
    public sealed virtual Byte[] Unprotect(Byte[] protectedData, DateTimeOffset& expiration);
    internal Byte[] UnprotectCore(Byte[] protectedData, DateTimeOffset now, DateTimeOffset& expiration);
    private sealed virtual override IDataProtector Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(string purpose);
    private sealed virtual override Byte[] Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(Byte[] plaintext);
    private sealed virtual override Byte[] Microsoft.AspNetCore.DataProtection.IDataProtector.Unprotect(Byte[] protectedData);
}
internal static class Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper : object {
    [NullableContextAttribute("2")]
public static void ThrowIfNull(object argument, string paramName);
}
internal static class Microsoft.AspNetCore.Shared.ArgumentThrowHelper : object {
    [NullableContextAttribute("2")]
public static void ThrowIfNullOrEmpty(string argument, string paramName);
}
