[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This type is obsolete and will be removed in a future version. The recommended alternative is Microsoft.Extensions.Hosting.Environments.", "False")]
public static class Microsoft.AspNetCore.Hosting.EnvironmentName : object {
    public static string Development;
    public static string Staging;
    public static string Production;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions : object {
    [ExtensionAttribute]
public static IWebHostBuilder UseConfiguration(IWebHostBuilder hostBuilder, IConfiguration configuration);
    [ExtensionAttribute]
public static IWebHostBuilder CaptureStartupErrors(IWebHostBuilder hostBuilder, bool captureStartupErrors);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("This API searches the specified assembly for a startup type using reflection. The startup type may be trimmed. Please use UseStartup<TStartup>() to specify the startup type explicitly.")]
public static IWebHostBuilder UseStartup(IWebHostBuilder hostBuilder, string startupAssemblyName);
    [ExtensionAttribute]
public static IWebHostBuilder UseServer(IWebHostBuilder hostBuilder, IServer server);
    [ExtensionAttribute]
public static IWebHostBuilder UseEnvironment(IWebHostBuilder hostBuilder, string environment);
    [ExtensionAttribute]
public static IWebHostBuilder UseContentRoot(IWebHostBuilder hostBuilder, string contentRoot);
    [ExtensionAttribute]
public static IWebHostBuilder UseWebRoot(IWebHostBuilder hostBuilder, string webRoot);
    [ExtensionAttribute]
public static IWebHostBuilder UseUrls(IWebHostBuilder hostBuilder, String[] urls);
    [ExtensionAttribute]
public static IWebHostBuilder PreferHostingUrls(IWebHostBuilder hostBuilder, bool preferHostingUrls);
    [ExtensionAttribute]
public static IWebHostBuilder SuppressStatusMessages(IWebHostBuilder hostBuilder, bool suppressStatusMessages);
    [ExtensionAttribute]
public static IWebHostBuilder UseShutdownTimeout(IWebHostBuilder hostBuilder, TimeSpan timeout);
    [ExtensionAttribute]
public static IWebHost Start(IWebHostBuilder hostBuilder, String[] urls);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Hosting.HostingEnvironmentExtensions : object {
    [ExtensionAttribute]
public static bool IsDevelopment(IHostingEnvironment hostingEnvironment);
    [ExtensionAttribute]
public static bool IsStaging(IHostingEnvironment hostingEnvironment);
    [ExtensionAttribute]
public static bool IsProduction(IHostingEnvironment hostingEnvironment);
    [ExtensionAttribute]
public static bool IsEnvironment(IHostingEnvironment hostingEnvironment, string environmentName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
public class Microsoft.AspNetCore.Hosting.HostingStartupAttribute : Attribute {
    [DynamicallyAccessedMembersAttribute("1")]
public Type HostingStartupType { get; }
    public HostingStartupAttribute(Type hostingStartupType);
    [CompilerGeneratedAttribute]
public Type get_HostingStartupType();
}
[ObsoleteAttribute("This type is obsolete and will be removed in a future version. The recommended alternative is Microsoft.Extensions.Hosting.IHostApplicationLifetime.", "False")]
public interface Microsoft.AspNetCore.Hosting.IApplicationLifetime {
    public CancellationToken ApplicationStarted { get; }
    public CancellationToken ApplicationStopping { get; }
    public CancellationToken ApplicationStopped { get; }
    public abstract virtual CancellationToken get_ApplicationStarted();
    public abstract virtual CancellationToken get_ApplicationStopping();
    public abstract virtual CancellationToken get_ApplicationStopped();
    public abstract virtual void StopApplication();
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("This type is obsolete and will be removed in a future version. The recommended alternative is Microsoft.AspNetCore.Hosting.IWebHostEnvironment.", "False")]
public interface Microsoft.AspNetCore.Hosting.IHostingEnvironment {
    public string EnvironmentName { get; public set; }
    public string ApplicationName { get; public set; }
    public string WebRootPath { get; public set; }
    public IFileProvider WebRootFileProvider { get; public set; }
    public string ContentRootPath { get; public set; }
    public IFileProvider ContentRootFileProvider { get; public set; }
    public abstract virtual string get_EnvironmentName();
    public abstract virtual void set_EnvironmentName(string value);
    public abstract virtual string get_ApplicationName();
    public abstract virtual void set_ApplicationName(string value);
    public abstract virtual string get_WebRootPath();
    public abstract virtual void set_WebRootPath(string value);
    public abstract virtual IFileProvider get_WebRootFileProvider();
    public abstract virtual void set_WebRootFileProvider(IFileProvider value);
    public abstract virtual string get_ContentRootPath();
    public abstract virtual void set_ContentRootPath(string value);
    public abstract virtual IFileProvider get_ContentRootFileProvider();
    public abstract virtual void set_ContentRootFileProvider(IFileProvider value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.IHostingStartup {
    public abstract virtual void Configure(IWebHostBuilder builder);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.IStartup {
    public abstract virtual IServiceProvider ConfigureServices(IServiceCollection services);
    public abstract virtual void Configure(IApplicationBuilder app);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute]
public interface Microsoft.AspNetCore.Hosting.IStartupConfigureContainerFilter`1 {
    public abstract virtual Action`1<TContainerBuilder> ConfigureContainer(Action`1<TContainerBuilder> container);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute]
public interface Microsoft.AspNetCore.Hosting.IStartupConfigureServicesFilter {
    public abstract virtual Action`1<IServiceCollection> ConfigureServices(Action`1<IServiceCollection> next);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.IStartupFilter {
    public abstract virtual Action`1<IApplicationBuilder> Configure(Action`1<IApplicationBuilder> next);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.IWebHost {
    public IFeatureCollection ServerFeatures { get; }
    public IServiceProvider Services { get; }
    public abstract virtual IFeatureCollection get_ServerFeatures();
    public abstract virtual IServiceProvider get_Services();
    public abstract virtual void Start();
    public abstract virtual Task StartAsync(CancellationToken cancellationToken);
    public abstract virtual Task StopAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.IWebHostBuilder {
    public abstract virtual IWebHost Build();
    public abstract virtual IWebHostBuilder ConfigureAppConfiguration(Action`2<WebHostBuilderContext, IConfigurationBuilder> configureDelegate);
    public abstract virtual IWebHostBuilder ConfigureServices(Action`1<IServiceCollection> configureServices);
    public abstract virtual IWebHostBuilder ConfigureServices(Action`2<WebHostBuilderContext, IServiceCollection> configureServices);
    public abstract virtual string GetSetting(string key);
    public abstract virtual IWebHostBuilder UseSetting(string key, string value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.IWebHostEnvironment {
    public string WebRootPath { get; public set; }
    public IFileProvider WebRootFileProvider { get; public set; }
    public abstract virtual string get_WebRootPath();
    public abstract virtual void set_WebRootPath(string value);
    public abstract virtual IFileProvider get_WebRootFileProvider();
    public abstract virtual void set_WebRootFileProvider(IFileProvider value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Hosting.WebHostBuilderContext : object {
    public IWebHostEnvironment HostingEnvironment { get; public set; }
    public IConfiguration Configuration { get; public set; }
    [CompilerGeneratedAttribute]
public IWebHostEnvironment get_HostingEnvironment();
    [CompilerGeneratedAttribute]
public void set_HostingEnvironment(IWebHostEnvironment value);
    [CompilerGeneratedAttribute]
public IConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(IConfiguration value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.Hosting.WebHostDefaults : object {
    public static string ApplicationKey;
    public static string StartupAssemblyKey;
    public static string HostingStartupAssembliesKey;
    public static string HostingStartupExcludeAssembliesKey;
    public static string DetailedErrorsKey;
    public static string EnvironmentKey;
    public static string WebRootKey;
    public static string CaptureStartupErrorsKey;
    public static string ServerUrlsKey;
    public static string HttpPortsKey;
    public static string HttpsPortsKey;
    public static string ContentRootKey;
    public static string PreferHostingUrlsKey;
    public static string PreventHostingStartupKey;
    public static string SuppressStatusMessagesKey;
    public static string ShutdownTimeoutKey;
    public static string StaticWebAssetsKey;
}
