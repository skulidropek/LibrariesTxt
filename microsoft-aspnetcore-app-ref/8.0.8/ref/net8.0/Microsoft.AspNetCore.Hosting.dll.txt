[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HttpExtensions : object {
    internal static string UrlEncodedFormContentType;
    internal static string MultipartFormContentType;
    internal static string OriginalEndpointKey;
    internal static bool IsValidHttpMethodForForm(string method);
    [NullableContextAttribute("2")]
internal static bool IsValidContentTypeForForm(string contentType);
    internal static Endpoint GetOriginalEndpoint(HttpContext context);
    internal static void ClearEndpoint(HttpContext context);
}
[DebuggerDisplayAttribute("ApplicationStarted = {ApplicationStarted.IsCancellationRequested}, ApplicationStopping = {ApplicationStopping.IsCancellationRequested}, ApplicationStopped = {ApplicationStopped.IsCancellationRequested}")]
internal class Microsoft.AspNetCore.Hosting.ApplicationLifetime : object {
    public CancellationToken ApplicationStarted { get; }
    public CancellationToken ApplicationStopping { get; }
    public CancellationToken ApplicationStopped { get; }
    [NullableContextAttribute("1")]
public ApplicationLifetime(ILogger`1<ApplicationLifetime> logger);
    public sealed virtual CancellationToken get_ApplicationStarted();
    public sealed virtual CancellationToken get_ApplicationStopping();
    public sealed virtual CancellationToken get_ApplicationStopped();
    public sealed virtual void StopApplication();
    public void NotifyStarted();
    public void NotifyStopped();
}
public class Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory : object {
    [NullableContextAttribute("1")]
public ApplicationBuilderFactory(IServiceProvider serviceProvider);
    [NullableContextAttribute("1")]
public sealed virtual IApplicationBuilder CreateBuilder(IFeatureCollection serverFeatures);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory {
    public abstract virtual IApplicationBuilder CreateBuilder(IFeatureCollection serverFeatures);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.ConfigureBuilder : object {
    public MethodInfo MethodInfo { get; }
    public ConfigureBuilder(MethodInfo configure);
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    public Action`1<IApplicationBuilder> Build(object instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.ConfigureContainerBuilder : object {
    [NullableAttribute("2")]
public MethodInfo MethodInfo { get; }
    public Func`2<Action`1<object>, Action`1<object>> ConfigureContainerFilters { get; public set; }
    [NullableContextAttribute("2")]
public ConfigureContainerBuilder(MethodInfo configureContainerMethod);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public Func`2<Action`1<object>, Action`1<object>> get_ConfigureContainerFilters();
    [CompilerGeneratedAttribute]
public void set_ConfigureContainerFilters(Func`2<Action`1<object>, Action`1<object>> value);
    public Action`1<object> Build(object instance);
    public Type GetContainerType();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.ConfigureServicesBuilder : object {
    public MethodInfo MethodInfo { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<Func`2<IServiceCollection, IServiceProvider>, Func`2<IServiceCollection, IServiceProvider>> StartupServiceFilters { get; public set; }
    public ConfigureServicesBuilder(MethodInfo configureServices);
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public Func`2<Func`2<IServiceCollection, IServiceProvider>, Func`2<IServiceCollection, IServiceProvider>> get_StartupServiceFilters();
    [CompilerGeneratedAttribute]
public void set_StartupServiceFilters(Func`2<Func`2<IServiceCollection, IServiceProvider>, Func`2<IServiceCollection, IServiceProvider>> value);
    [NullableContextAttribute("1")]
public Func`2<IServiceCollection, IServiceProvider> Build(object instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.ConventionBasedStartup : object {
    public ConventionBasedStartup(StartupMethods methods);
    public sealed virtual void Configure(IApplicationBuilder app);
    public sealed virtual IServiceProvider ConfigureServices(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Hosting.DelegateStartup : StartupBase`1<IServiceCollection> {
    public DelegateStartup(IServiceProviderFactory`1<IServiceCollection> factory, Action`1<IApplicationBuilder> configureApp);
    public virtual void Configure(IApplicationBuilder app);
}
internal static class Microsoft.AspNetCore.Hosting.ErrorPageBuilder : object {
    [NullableContextAttribute("1")]
public static RequestDelegate BuildErrorPageApplication(IFileProvider contentRootFileProvider, ILogger logger, bool showDetailedErrors, Exception exception);
}
internal class Microsoft.AspNetCore.Hosting.GenericWebHostApplicationLifetime : object {
    public CancellationToken ApplicationStarted { get; }
    public CancellationToken ApplicationStopping { get; }
    public CancellationToken ApplicationStopped { get; }
    [NullableContextAttribute("1")]
public GenericWebHostApplicationLifetime(IHostApplicationLifetime applicationLifetime);
    public sealed virtual CancellationToken get_ApplicationStarted();
    public sealed virtual CancellationToken get_ApplicationStopping();
    public sealed virtual CancellationToken get_ApplicationStopped();
    public sealed virtual void StopApplication();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.GenericWebHostBuilder : WebHostBuilderBase {
    public GenericWebHostBuilder(IHostBuilder builder, WebHostBuilderOptions options);
    public sealed virtual IWebHostBuilder UseStartup(Type startupType);
    public sealed virtual IWebHostBuilder UseStartup(Func`2<WebHostBuilderContext, TStartup> startupFactory);
    public sealed virtual IWebHostBuilder Configure(Action`1<IApplicationBuilder> configure);
    public sealed virtual IWebHostBuilder Configure(Action`2<WebHostBuilderContext, IApplicationBuilder> configure);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:RequiresDynamicCode")]
internal static void <UseStartup>g__InvokeContainer|9_1(GenericWebHostBuilder genericWebHostBuilder, ConfigureContainerBuilder configureContainerBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.GenericWebHostService : object {
    public GenericWebHostServiceOptions Options { get; }
    public IServer Server { get; }
    public ILogger Logger { get; }
    public ILogger LifetimeLogger { get; }
    public DiagnosticListener DiagnosticListener { get; }
    public ActivitySource ActivitySource { get; }
    public DistributedContextPropagator Propagator { get; }
    public IHttpContextFactory HttpContextFactory { get; }
    public IApplicationBuilderFactory ApplicationBuilderFactory { get; }
    public IEnumerable`1<IStartupFilter> StartupFilters { get; }
    public IConfiguration Configuration { get; }
    public IWebHostEnvironment HostingEnvironment { get; }
    public HostingMetrics HostingMetrics { get; }
    public GenericWebHostService(IOptions`1<GenericWebHostServiceOptions> options, IServer server, ILoggerFactory loggerFactory, DiagnosticListener diagnosticListener, ActivitySource activitySource, DistributedContextPropagator propagator, IHttpContextFactory httpContextFactory, IApplicationBuilderFactory applicationBuilderFactory, IEnumerable`1<IStartupFilter> startupFilters, IConfiguration configuration, IWebHostEnvironment hostingEnvironment, HostingMetrics hostingMetrics);
    [CompilerGeneratedAttribute]
public GenericWebHostServiceOptions get_Options();
    [CompilerGeneratedAttribute]
public IServer get_Server();
    [CompilerGeneratedAttribute]
public ILogger get_Logger();
    [CompilerGeneratedAttribute]
public ILogger get_LifetimeLogger();
    [CompilerGeneratedAttribute]
public DiagnosticListener get_DiagnosticListener();
    [CompilerGeneratedAttribute]
public ActivitySource get_ActivitySource();
    [CompilerGeneratedAttribute]
public DistributedContextPropagator get_Propagator();
    [CompilerGeneratedAttribute]
public IHttpContextFactory get_HttpContextFactory();
    [CompilerGeneratedAttribute]
public IApplicationBuilderFactory get_ApplicationBuilderFactory();
    [CompilerGeneratedAttribute]
public IEnumerable`1<IStartupFilter> get_StartupFilters();
    [CompilerGeneratedAttribute]
public IConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
public IWebHostEnvironment get_HostingEnvironment();
    [CompilerGeneratedAttribute]
public HostingMetrics get_HostingMetrics();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.GenericWebHostService/<StartAsync>d__40")]
public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.GenericWebHostService/<StopAsync>d__41")]
public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static string <StartAsync>g__ExpandPorts|40_0(string ports, string scheme);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.GenericWebHostServiceOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> ConfigureApplication { get; public set; }
    public WebHostOptions WebHostOptions { get; public set; }
    [NullableAttribute("2")]
public AggregateException HostingStartupExceptions { get; public set; }
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_ConfigureApplication();
    [CompilerGeneratedAttribute]
public void set_ConfigureApplication(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public WebHostOptions get_WebHostOptions();
    [CompilerGeneratedAttribute]
public void set_WebHostOptions(WebHostOptions value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public AggregateException get_HostingStartupExceptions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_HostingStartupExceptions(AggregateException value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.HostedServiceExecutor : object {
    public HostedServiceExecutor(ILogger`1<HostedServiceExecutor> logger, IEnumerable`1<IHostedService> services);
    public Task StartAsync(CancellationToken token);
    public Task StopAsync(CancellationToken token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.HostingApplication : object {
    public HostingApplication(RequestDelegate application, ILogger logger, DiagnosticListener diagnosticSource, ActivitySource activitySource, DistributedContextPropagator propagator, IHttpContextFactory httpContextFactory, HostingEventSource eventSource, HostingMetrics metrics);
    public sealed virtual Context CreateContext(IFeatureCollection contextFeatures);
    public sealed virtual Task ProcessRequestAsync(Context context);
    public sealed virtual void DisposeContext(Context context, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics : object {
    internal static string ActivityName;
    public HostingApplicationDiagnostics(ILogger logger, DiagnosticListener diagnosticListener, ActivitySource activitySource, DistributedContextPropagator propagator, HostingEventSource eventSource, HostingMetrics metrics);
    public void BeginRequest(HttpContext httpContext, Context context);
    public void RequestEnd(HttpContext httpContext, Exception exception, Context context);
    public void ContextDisposed(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("ApplicationName = {ApplicationName}, EnvironmentName = {EnvironmentName}")]
internal class Microsoft.AspNetCore.Hosting.HostingEnvironment : object {
    public string EnvironmentName { get; public set; }
    [NullableAttribute("2")]
public string ApplicationName { get; public set; }
    public string WebRootPath { get; public set; }
    public IFileProvider WebRootFileProvider { get; public set; }
    public string ContentRootPath { get; public set; }
    public IFileProvider ContentRootFileProvider { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_EnvironmentName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_ApplicationName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebRootPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebRootPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IFileProvider get_WebRootFileProvider();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebRootFileProvider(IFileProvider value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentRootPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentRootPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IFileProvider get_ContentRootFileProvider();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentRootFileProvider(IFileProvider value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Hosting.HostingEnvironmentExtensions : object {
    [ExtensionAttribute]
internal static void Initialize(IHostingEnvironment hostingEnvironment, string contentRootPath, WebHostOptions options);
    [ExtensionAttribute]
internal static void Initialize(IWebHostEnvironment hostingEnvironment, string contentRootPath, WebHostOptions options, IHostEnvironment baseEnvironment);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.HostingEventSource : EventSource {
    public static HostingEventSource Log;
    internal HostingEventSource(string eventSourceName);
    [EventAttribute("1")]
public void HostStart();
    [EventAttribute("2")]
public void HostStop();
    [EventAttribute("3")]
public void RequestStart(string method, string path);
    [EventAttribute("4")]
public void RequestStop();
    [EventAttribute("5")]
public void UnhandledException();
    [EventAttribute("6")]
public void ServerReady();
    [NonEventAttribute]
internal void RequestFailed();
    protected virtual void OnEventCommand(EventCommandEventArgs command);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Hosting.HostingLoggerExtensions : object {
    [ExtensionAttribute]
public static void ApplicationError(ILogger logger, Exception exception);
    [ExtensionAttribute]
public static void HostingStartupAssemblyError(ILogger logger, Exception exception);
    [ExtensionAttribute]
public static void ApplicationError(ILogger logger, EventId eventId, string message, Exception exception);
    [ExtensionAttribute]
public static void PortsOverridenByUrls(ILogger logger, string httpPorts, string httpsPorts, string urls);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.HostingMetrics : object {
    public static string MeterName;
    public HostingMetrics(IMeterFactory meterFactory);
    public void RequestStart(bool isHttps, string scheme, string method, HostString host);
    public void RequestEnd(string protocol, bool isHttps, string scheme, string method, HostString host, string route, int statusCode, bool unhandledRequest, Exception exception, List`1<KeyValuePair`2<string, object>> customTags, long startTimestamp, long currentTimestamp);
    public sealed virtual void Dispose();
    public bool IsEnabled();
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.AspNetCore.Hosting.HostingRequestFinishedLog : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static Func`3<object, Exception, string> Callback;
    public TimeSpan Elapsed { get; }
    public int Count { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2<string, object> Item { get; }
    [NullableContextAttribute("1")]
public HostingRequestFinishedLog(Context context, TimeSpan elapsed);
    [CompilerGeneratedAttribute]
public TimeSpan get_Elapsed();
    public sealed virtual int get_Count();
    public sealed virtual KeyValuePair`2<string, object> get_Item(int index);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Hosting.HostingRequestFinishedLog/<GetEnumerator>d__13")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.AspNetCore.Hosting.HostingRequestStartingLog : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static Func`3<object, Exception, string> Callback;
    public int Count { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2<string, object> Item { get; }
    [NullableContextAttribute("1")]
public HostingRequestStartingLog(HttpContext httpContext);
    public sealed virtual int get_Count();
    public sealed virtual KeyValuePair`2<string, object> get_Item(int index);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Hosting.HostingRequestStartingLog/<GetEnumerator>d__11")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [NullableContextAttribute("1")]
internal static string EscapedValueOrEmptyMarker(string potentialValue);
    internal static string ValueOrEmptyMarker(Nullable`1<T> potentialValue);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.AspNetCore.Hosting.HostingRequestUnhandledLog : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static Func`3<object, Exception, string> Callback;
    public int Count { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2<string, object> Item { get; }
    [NullableContextAttribute("1")]
public HostingRequestUnhandledLog(HttpContext httpContext);
    public sealed virtual int get_Count();
    public sealed virtual KeyValuePair`2<string, object> get_Item(int index);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Hosting.HostingRequestUnhandledLog/<GetEnumerator>d__10")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.HostingStartupWebHostBuilder : object {
    public HostingStartupWebHostBuilder(GenericWebHostBuilder builder);
    public sealed virtual IWebHost Build();
    public sealed virtual IWebHostBuilder ConfigureAppConfiguration(Action`2<WebHostBuilderContext, IConfigurationBuilder> configureDelegate);
    public sealed virtual IWebHostBuilder ConfigureServices(Action`1<IServiceCollection> configureServices);
    public sealed virtual IWebHostBuilder ConfigureServices(Action`2<WebHostBuilderContext, IServiceCollection> configureServices);
    public sealed virtual string GetSetting(string key);
    public sealed virtual IWebHostBuilder UseSetting(string key, string value);
    public void ConfigureServices(WebHostBuilderContext context, IServiceCollection services);
    public void ConfigureAppConfiguration(WebHostBuilderContext context, IConfigurationBuilder builder);
    public sealed virtual IWebHostBuilder UseDefaultServiceProvider(Action`2<WebHostBuilderContext, ServiceProviderOptions> configure);
    public sealed virtual IWebHostBuilder Configure(Action`1<IApplicationBuilder> configure);
    public sealed virtual IWebHostBuilder Configure(Action`2<WebHostBuilderContext, IApplicationBuilder> configure);
    public sealed virtual IWebHostBuilder UseStartup(Type startupType);
    public sealed virtual IWebHostBuilder UseStartup(Func`2<WebHostBuilderContext, TStartup> startupFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.HttpActivityFeature : object {
    public Activity Activity { get; public set; }
    internal HttpActivityFeature(Activity activity);
    [CompilerGeneratedAttribute]
public sealed virtual Activity get_Activity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Activity(Activity value);
}
internal class Microsoft.AspNetCore.Hosting.HttpMetricsTagsFeature : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ICollection`1<KeyValuePair`2<string, object>> Microsoft.AspNetCore.Http.Features.IHttpMetricsTagsFeature.Tags { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<string, object>> TagsList { get; }
    private sealed virtual override ICollection`1<KeyValuePair`2<string, object>> Microsoft.AspNetCore.Http.Features.IHttpMetricsTagsFeature.get_Tags();
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, object>> get_TagsList();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost {
    public abstract virtual IHostBuilder ConfigureWebHost(Action`1<IWebHostBuilder> configure, Action`1<WebHostBuilderOptions> configureOptions);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsStartup {
    public abstract virtual IWebHostBuilder Configure(Action`1<IApplicationBuilder> configure);
    public abstract virtual IWebHostBuilder Configure(Action`2<WebHostBuilderContext, IApplicationBuilder> configure);
    public abstract virtual IWebHostBuilder UseStartup(Type startupType);
    public abstract virtual IWebHostBuilder UseStartup(Func`2<WebHostBuilderContext, TStartup> startupFactory);
}
internal static class Microsoft.AspNetCore.Hosting.Internal.StartupLinkerOptions : object {
    public static DynamicallyAccessedMemberTypes Accessibility;
}
[NullableContextAttribute("1")]
internal interface Microsoft.AspNetCore.Hosting.ISupportsUseDefaultServiceProvider {
    public abstract virtual IWebHostBuilder UseDefaultServiceProvider(Action`2<WebHostBuilderContext, ServiceProviderOptions> configure);
}
internal static class Microsoft.AspNetCore.Hosting.LoggerEventIds : object {
    public static int RequestStarting;
    public static int RequestFinished;
    public static int Starting;
    public static int Started;
    public static int Shutdown;
    public static int ApplicationStartupException;
    public static int ApplicationStoppingException;
    public static int ApplicationStoppedException;
    public static int HostedServiceStartException;
    public static int HostedServiceStopException;
    public static int HostingStartupAssemblyException;
    public static int ServerShutdownException;
    public static int HostingStartupAssemblyLoaded;
    public static int ServerListeningOnAddresses;
    public static int PortsOverridenByUrls;
    public static int RequestUnhandled;
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Hosting.MethodInfoExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static object InvokeWithoutWrappingExceptions(MethodInfo methodInfo, object obj, Object[] parameters);
}
internal static class Microsoft.AspNetCore.Hosting.Resources : object {
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string WebHostBuilder_SingleInstance { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_WebHostBuilder_SingleInstance();
}
public class Microsoft.AspNetCore.Hosting.Server.Features.ServerAddressesFeature : object {
    [NullableAttribute("1")]
public ICollection`1<string> Addresses { get; }
    public bool PreferHostingUrls { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual ICollection`1<string> get_Addresses();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_PreferHostingUrls();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreferHostingUrls(bool value);
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Hosting.ServiceCollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection Clone(IServiceCollection serviceCollection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.SlimWebHostBuilder : WebHostBuilderBase {
    public SlimWebHostBuilder(IHostBuilder builder, WebHostBuilderOptions options);
    public sealed virtual IWebHostBuilder Configure(Action`1<IApplicationBuilder> configure);
    public sealed virtual IWebHostBuilder UseStartup(Type startupType);
    public sealed virtual IWebHostBuilder UseStartup(Func`2<WebHostBuilderContext, TStartup> startupFactory);
    public sealed virtual IWebHostBuilder Configure(Action`2<WebHostBuilderContext, IApplicationBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Hosting.StartupBase : object {
    public abstract virtual void Configure(IApplicationBuilder app);
    private sealed virtual override IServiceProvider Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(IServiceCollection services);
    public virtual void ConfigureServices(IServiceCollection services);
    public virtual IServiceProvider CreateServiceProvider(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Hosting.StartupBase`1 : StartupBase {
    public StartupBase`1(IServiceProviderFactory`1<TBuilder> factory);
    public virtual IServiceProvider CreateServiceProvider(IServiceCollection services);
    public virtual void ConfigureContainer(TBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.StartupLoader : object {
    public static StartupMethods LoadMethods(IServiceProvider hostingServiceProvider, Type startupType, string environmentName, object instance);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public static Type FindStartupType(string startupAssemblyName, string environmentName);
    internal static ConfigureBuilder FindConfigureDelegate(Type startupType, string environmentName);
    internal static ConfigureContainerBuilder FindConfigureContainerDelegate(Type startupType, string environmentName);
    internal static bool HasConfigureServicesIServiceProviderDelegate(Type startupType, string environmentName);
    internal static ConfigureServicesBuilder FindConfigureServicesDelegate(Type startupType, string environmentName);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:RequiresDynamicCode")]
internal static Type <LoadMethods>g__CreateConfigureServicesDelegateBuilder|0_0(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.StartupMethods : object {
    [NullableAttribute("2")]
public object StartupInstance { get; }
    public Func`2<IServiceCollection, IServiceProvider> ConfigureServicesDelegate { get; }
    public Action`1<IApplicationBuilder> ConfigureDelegate { get; }
    public StartupMethods(object instance, Action`1<IApplicationBuilder> configure, Func`2<IServiceCollection, IServiceProvider> configureServices);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_StartupInstance();
    [CompilerGeneratedAttribute]
public Func`2<IServiceCollection, IServiceProvider> get_ConfigureServicesDelegate();
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_ConfigureDelegate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Hosting.StaticWebAssets.StaticWebAssetsLoader : object {
    public static void UseStaticWebAssets(IWebHostEnvironment environment, IConfiguration configuration);
    internal static void UseStaticWebAssetsCore(IWebHostEnvironment environment, Stream manifest);
    internal static Stream ResolveManifest(IWebHostEnvironment environment, IConfiguration configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.Views.ErrorPage : BaseView {
    public ErrorPageModel Model { get; public set; }
    public ErrorPage(ErrorPageModel model);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.Views.ErrorPage/<ExecuteAsync>d__0")]
public virtual Task ExecuteAsync();
    [CompilerGeneratedAttribute]
public ErrorPageModel get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(ErrorPageModel value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.Views.ErrorPageModel : object {
    public IEnumerable`1<ExceptionDetails> ErrorDetails { get; }
    public bool ShowRuntimeDetails { get; }
    public string RuntimeDisplayName { get; }
    public string RuntimeArchitecture { get; }
    public string ClrVersion { get; }
    public string CurrentAssemblyVesion { get; }
    public string OperatingSystemDescription { get; }
    public ErrorPageModel(IEnumerable`1<ExceptionDetails> errorDetails, bool showRuntimeDetails, string runtimeDisplayName, string runtimeArchitecture, string clrVersion, string currentAssemblyVesion, string operatingSystemDescription);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ExceptionDetails> get_ErrorDetails();
    [CompilerGeneratedAttribute]
public bool get_ShowRuntimeDetails();
    [CompilerGeneratedAttribute]
public string get_RuntimeDisplayName();
    [CompilerGeneratedAttribute]
public string get_RuntimeArchitecture();
    [CompilerGeneratedAttribute]
public string get_ClrVersion();
    [CompilerGeneratedAttribute]
public string get_CurrentAssemblyVesion();
    [CompilerGeneratedAttribute]
public string get_OperatingSystemDescription();
}
internal static class Microsoft.AspNetCore.Hosting.Views.ErrorPageModelBuilder : object {
    [NullableContextAttribute("1")]
public static ErrorPageModel CreateErrorPageModel(IFileProvider contentRootFileProvider, ILogger logger, bool showDetailedErrors, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.WebHost : object {
    internal WebHostOptions Options { get; }
    public IServiceProvider Services { get; }
    public IFeatureCollection ServerFeatures { get; }
    public WebHost(IServiceCollection appServices, IServiceProvider hostingServiceProvider, WebHostOptions options, IConfiguration config, AggregateException hostingStartupErrors);
    internal WebHostOptions get_Options();
    public sealed virtual IServiceProvider get_Services();
    public sealed virtual IFeatureCollection get_ServerFeatures();
    public void Initialize();
    public sealed virtual void Start();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.WebHost/<StartAsync>d__27")]
public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.WebHost/<StopAsync>d__32")]
public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.WebHost/<DisposeAsync>d__34")]
public sealed virtual ValueTask DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Hosting.WebHostBuilder : object {
    public sealed virtual string GetSetting(string key);
    public sealed virtual IWebHostBuilder UseSetting(string key, string value);
    public sealed virtual IWebHostBuilder ConfigureServices(Action`1<IServiceCollection> configureServices);
    public sealed virtual IWebHostBuilder ConfigureServices(Action`2<WebHostBuilderContext, IServiceCollection> configureServices);
    public sealed virtual IWebHostBuilder ConfigureAppConfiguration(Action`2<WebHostBuilderContext, IConfigurationBuilder> configureDelegate);
    public sealed virtual IWebHost Build();
    [CompilerGeneratedAttribute]
internal static IServiceProvider <Build>g__GetProviderFromFactory|13_0(IServiceCollection collection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.AspNetCore.Hosting.WebHostBuilderBase : object {
    private protected IHostBuilder _builder;
    private protected IConfiguration _config;
    public WebHostBuilderBase(IHostBuilder builder, WebHostBuilderOptions options);
    public sealed virtual IWebHost Build();
    public sealed virtual IWebHostBuilder ConfigureAppConfiguration(Action`2<WebHostBuilderContext, IConfigurationBuilder> configureDelegate);
    public sealed virtual IWebHostBuilder ConfigureServices(Action`1<IServiceCollection> configureServices);
    public sealed virtual IWebHostBuilder ConfigureServices(Action`2<WebHostBuilderContext, IServiceCollection> configureServices);
    public sealed virtual IWebHostBuilder UseDefaultServiceProvider(Action`2<WebHostBuilderContext, ServiceProviderOptions> configure);
    protected WebHostBuilderContext GetWebHostBuilderContext(HostBuilderContext context);
    public sealed virtual string GetSetting(string key);
    public sealed virtual IWebHostBuilder UseSetting(string key, string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions : object {
    [ExtensionAttribute]
public static IWebHostBuilder Configure(IWebHostBuilder hostBuilder, Action`1<IApplicationBuilder> configureApp);
    [ExtensionAttribute]
public static IWebHostBuilder Configure(IWebHostBuilder hostBuilder, Action`2<WebHostBuilderContext, IApplicationBuilder> configureApp);
    [ExtensionAttribute]
public static IWebHostBuilder UseStartup(IWebHostBuilder hostBuilder, Func`2<WebHostBuilderContext, TStartup> startupFactory);
    [ExtensionAttribute]
public static IWebHostBuilder UseStartup(IWebHostBuilder hostBuilder, Type startupType);
    [ExtensionAttribute]
public static IWebHostBuilder UseStartup(IWebHostBuilder hostBuilder);
    [ExtensionAttribute]
public static IWebHostBuilder UseDefaultServiceProvider(IWebHostBuilder hostBuilder, Action`1<ServiceProviderOptions> configure);
    [ExtensionAttribute]
public static IWebHostBuilder UseDefaultServiceProvider(IWebHostBuilder hostBuilder, Action`2<WebHostBuilderContext, ServiceProviderOptions> configure);
    [ExtensionAttribute]
public static IWebHostBuilder ConfigureAppConfiguration(IWebHostBuilder hostBuilder, Action`1<IConfigurationBuilder> configureDelegate);
    [ExtensionAttribute]
public static IWebHostBuilder ConfigureLogging(IWebHostBuilder hostBuilder, Action`1<ILoggingBuilder> configureLogging);
    [ExtensionAttribute]
public static IWebHostBuilder ConfigureLogging(IWebHostBuilder hostBuilder, Action`2<WebHostBuilderContext, ILoggingBuilder> configureLogging);
    [ExtensionAttribute]
public static IWebHostBuilder UseStaticWebAssets(IWebHostBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Hosting.WebHostExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.WebHostExtensions/<StopAsync>d__0")]
[ExtensionAttribute]
public static Task StopAsync(IWebHost host, TimeSpan timeout);
    [ExtensionAttribute]
public static void WaitForShutdown(IWebHost host);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.WebHostExtensions/<WaitForShutdownAsync>d__2")]
[ExtensionAttribute]
public static Task WaitForShutdownAsync(IWebHost host, CancellationToken token);
    [ExtensionAttribute]
public static void Run(IWebHost host);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Hosting.WebHostExtensions/<RunAsync>d__4")]
[ExtensionAttribute]
public static Task RunAsync(IWebHost host, CancellationToken token);
}
internal class Microsoft.AspNetCore.Hosting.WebHostLifetime : object {
    [NullableContextAttribute("1")]
public WebHostLifetime(CancellationTokenSource cts, ManualResetEventSlim resetEvent, string shutdownMessage);
    internal void SetExitedGracefully();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Hosting.WebHostOptions : object {
    [NullableAttribute("1")]
public string ApplicationName { get; }
    public bool PreventHostingStartup { get; }
    public bool SuppressStatusMessages { get; }
    [NullableAttribute("1")]
public IReadOnlyList`1<string> HostingStartupAssemblies { get; }
    [NullableAttribute("1")]
public IReadOnlyList`1<string> HostingStartupExcludeAssemblies { get; }
    public bool DetailedErrors { get; }
    public bool CaptureStartupErrors { get; }
    public string Environment { get; }
    public string StartupAssembly { get; }
    public string WebRoot { get; }
    public string ContentRootPath { get; }
    public TimeSpan ShutdownTimeout { get; }
    public string ServerUrls { get; }
    public bool PreferHostingUrls { get; }
    public WebHostOptions(IConfiguration primaryConfiguration, IConfiguration fallbackConfiguration, IHostEnvironment environment);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
public bool get_PreventHostingStartup();
    [CompilerGeneratedAttribute]
public bool get_SuppressStatusMessages();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_HostingStartupAssemblies();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_HostingStartupExcludeAssemblies();
    [CompilerGeneratedAttribute]
public bool get_DetailedErrors();
    [CompilerGeneratedAttribute]
public bool get_CaptureStartupErrors();
    [CompilerGeneratedAttribute]
public string get_Environment();
    [CompilerGeneratedAttribute]
public string get_StartupAssembly();
    [CompilerGeneratedAttribute]
public string get_WebRoot();
    [CompilerGeneratedAttribute]
public string get_ContentRootPath();
    [CompilerGeneratedAttribute]
public TimeSpan get_ShutdownTimeout();
    [CompilerGeneratedAttribute]
public string get_ServerUrls();
    [CompilerGeneratedAttribute]
public bool get_PreferHostingUrls();
    [NullableContextAttribute("1")]
public IEnumerable`1<string> GetFinalHostingStartupAssemblies();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static string <.ctor>g__GetConfig|0_0(string key, <>c__DisplayClass0_0& );
}
internal class Microsoft.AspNetCore.Hosting.WebHostUtilities : object {
    [NullableContextAttribute("2")]
public static bool ParseBool(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.DefaultHttpContextFactory : object {
    [NullableAttribute("2")]
internal IHttpContextAccessor HttpContextAccessor { get; }
    public DefaultHttpContextFactory(IServiceProvider serviceProvider);
    [NullableContextAttribute("2")]
internal IHttpContextAccessor get_HttpContextAccessor();
    public sealed virtual HttpContext Create(IFeatureCollection featureCollection);
    internal void Initialize(DefaultHttpContext httpContext, IFeatureCollection featureCollection);
    public sealed virtual void Dispose(HttpContext httpContext);
    internal void Dispose(DefaultHttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Http.MetricsExtensions : object {
    [ExtensionAttribute]
public static bool TryAddTag(IHttpMetricsTagsFeature feature, string name, object value);
    [ExtensionAttribute]
public static bool TryAddTag(TagList& tags, string name, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.StaticWebAssets.ManifestStaticWebAssetFileProvider : object {
    internal IFileProvider[] FileProviders { get; }
    public ManifestStaticWebAssetFileProvider(StaticWebAssetManifest manifest, Func`2<string, IFileProvider> fileProviderFactory);
    internal IFileProvider[] get_FileProviders();
    public sealed virtual IDirectoryContents GetDirectoryContents(string subpath);
    public sealed virtual IFileInfo GetFileInfo(string subpath);
    public sealed virtual IChangeToken Watch(string filter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Hosting.GenericHostWebHostBuilderExtensions : object {
    [ExtensionAttribute]
public static IHostBuilder ConfigureWebHost(IHostBuilder builder, Action`1<IWebHostBuilder> configure);
    [ExtensionAttribute]
public static IHostBuilder ConfigureWebHost(IHostBuilder builder, Action`1<IWebHostBuilder> configure, Action`1<WebHostBuilderOptions> configureWebHostBuilder);
    [ExtensionAttribute]
public static IHostBuilder ConfigureSlimWebHost(IHostBuilder builder, Action`1<IWebHostBuilder> configure, Action`1<WebHostBuilderOptions> configureWebHostBuilder);
}
public class Microsoft.Extensions.Hosting.WebHostBuilderOptions : object {
    public bool SuppressEnvironmentConfiguration { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_SuppressEnvironmentConfiguration();
    [CompilerGeneratedAttribute]
public void set_SuppressEnvironmentConfiguration(bool value);
}
internal static class Microsoft.Extensions.Internal.TypeNameHelper : object {
    [NullableContextAttribute("2")]
public static string GetTypeDisplayName(object item, bool fullName);
    [NullableContextAttribute("1")]
public static string GetTypeDisplayName(Type type, bool fullName, bool includeGenericParameterNames, bool includeGenericParameters, char nestedTypeDelimiter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.RazorViews.AttributeValue : object {
    public string Prefix { get; }
    public object Value { get; }
    public bool Literal { get; }
    public AttributeValue(string prefix, object value, bool literal);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public bool get_Literal();
    public static AttributeValue FromTuple(Tuple`3<string, object, bool> value);
    public static AttributeValue FromTuple(Tuple`3<string, string, bool> value);
    public static AttributeValue op_Implicit(Tuple`3<string, object, bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.Extensions.RazorViews.BaseView : object {
    protected HttpContext Context { get; }
    protected HttpRequest Request { get; }
    protected HttpResponse Response { get; }
    protected TextWriter Output { get; }
    protected HtmlEncoder HtmlEncoder { get; protected set; }
    protected UrlEncoder UrlEncoder { get; protected set; }
    protected JavaScriptEncoder JavaScriptEncoder { get; protected set; }
    [CompilerGeneratedAttribute]
protected HttpContext get_Context();
    [CompilerGeneratedAttribute]
protected HttpRequest get_Request();
    [CompilerGeneratedAttribute]
protected HttpResponse get_Response();
    [CompilerGeneratedAttribute]
protected TextWriter get_Output();
    [CompilerGeneratedAttribute]
protected HtmlEncoder get_HtmlEncoder();
    [CompilerGeneratedAttribute]
protected void set_HtmlEncoder(HtmlEncoder value);
    [CompilerGeneratedAttribute]
protected UrlEncoder get_UrlEncoder();
    [CompilerGeneratedAttribute]
protected void set_UrlEncoder(UrlEncoder value);
    [CompilerGeneratedAttribute]
protected JavaScriptEncoder get_JavaScriptEncoder();
    [CompilerGeneratedAttribute]
protected void set_JavaScriptEncoder(JavaScriptEncoder value);
    [AsyncStateMachineAttribute("Microsoft.Extensions.RazorViews.BaseView/<ExecuteAsync>d__31")]
public Task ExecuteAsync(Stream stream);
    [AsyncStateMachineAttribute("Microsoft.Extensions.RazorViews.BaseView/<ExecuteAsync>d__32")]
public Task ExecuteAsync(HttpContext context);
    public abstract virtual Task ExecuteAsync();
    protected virtual void PushWriter(TextWriter writer);
    protected virtual TextWriter PopWriter();
    protected void WriteLiteral(object value);
    [NullableContextAttribute("2")]
protected void WriteLiteral(string value);
    protected void WriteAttributeValue(string thingy, int startPostion, object value, int endValue, int dealyo, bool yesno);
    protected void BeginWriteAttribute(string name, string beginning, int startPosition, string ending, int endPosition, int thingy);
    protected void EndWriteAttribute();
    protected void WriteAttribute(string name, string leader, string trailer, AttributeValue[] values);
    protected void Write(HelperResult result);
    protected void Write(object value);
    [NullableContextAttribute("2")]
protected void Write(string value);
    protected string HtmlEncodeAndReplaceLineBreaks(string input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.RazorViews.HelperResult : object {
    public Action`1<TextWriter> WriteAction { get; }
    public HelperResult(Action`1<TextWriter> action);
    [CompilerGeneratedAttribute]
public Action`1<TextWriter> get_WriteAction();
    public void WriteTo(TextWriter writer);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.StackTrace.Sources.ExceptionDetails : object {
    public Exception Error { get; }
    [NullableAttribute("1")]
public IEnumerable`1<StackFrameSourceCodeInfo> StackFrames { get; }
    public string ErrorMessage { get; public set; }
    [NullableContextAttribute("1")]
public ExceptionDetails(Exception error, IEnumerable`1<StackFrameSourceCodeInfo> stackFrames);
    [NullableContextAttribute("1")]
public ExceptionDetails(string errorMessage, IEnumerable`1<StackFrameSourceCodeInfo> stackFrames);
    [CompilerGeneratedAttribute]
public Exception get_Error();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<StackFrameSourceCodeInfo> get_StackFrames();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.StackTrace.Sources.ExceptionDetailsProvider : object {
    public ExceptionDetailsProvider(IFileProvider fileProvider, ILogger logger, int sourceCodeLineCount);
    [IteratorStateMachineAttribute("Microsoft.Extensions.StackTrace.Sources.ExceptionDetailsProvider/<GetDetails>d__4")]
public IEnumerable`1<ExceptionDetails> GetDetails(Exception exception);
    [NullableContextAttribute("2")]
internal StackFrameSourceCodeInfo GetStackFrameSourceCodeInfo(string method, string filePath, int lineNumber);
    internal void ReadFrameContent(StackFrameSourceCodeInfo frame, IEnumerable`1<string> allLines, int errorStartLineNumberInFile, int errorEndLineNumberInFile);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.StackTrace.Sources.LoggerExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[LoggerMessageAttribute("0", "1", "Failed to read stack trace information for exception.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void FailedToReadStackTraceInfo(ILogger logger, Exception exception);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.StackTrace.Sources.MethodDisplayInfo : object {
    public string DeclaringTypeName { get; }
    [NullableAttribute("1")]
public string Name { get; }
    public string GenericArguments { get; }
    public string SubMethod { get; }
    [NullableAttribute("1")]
public IEnumerable`1<ParameterDisplayInfo> Parameters { get; }
    public MethodDisplayInfo(string declaringTypeName, string name, string genericArguments, string subMethod, IEnumerable`1<ParameterDisplayInfo> parameters);
    [CompilerGeneratedAttribute]
public string get_DeclaringTypeName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_GenericArguments();
    [CompilerGeneratedAttribute]
public string get_SubMethod();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<ParameterDisplayInfo> get_Parameters();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.StackTrace.Sources.ParameterDisplayInfo : object {
    public string Name { get; public set; }
    public string Type { get; public set; }
    public string Prefix { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.StackTrace.Sources.StackFrameInfo : object {
    public int LineNumber { get; }
    public string FilePath { get; }
    public StackFrame StackFrame { get; }
    public MethodDisplayInfo MethodDisplayInfo { get; }
    public StackFrameInfo(int lineNumber, string filePath, StackFrame stackFrame, MethodDisplayInfo methodDisplayInfo);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
public StackFrame get_StackFrame();
    [CompilerGeneratedAttribute]
public MethodDisplayInfo get_MethodDisplayInfo();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo : object {
    [NullableAttribute("2")]
public string Function { get; public set; }
    [NullableAttribute("2")]
public string File { get; public set; }
    public int Line { get; public set; }
    public int PreContextLine { get; public set; }
    public IEnumerable`1<string> PreContextCode { get; public set; }
    public IEnumerable`1<string> ContextCode { get; public set; }
    public IEnumerable`1<string> PostContextCode { get; public set; }
    [NullableAttribute("2")]
public string ErrorDetails { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Function();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Function(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_File();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_File(string value);
    [CompilerGeneratedAttribute]
public int get_Line();
    [CompilerGeneratedAttribute]
public void set_Line(int value);
    [CompilerGeneratedAttribute]
public int get_PreContextLine();
    [CompilerGeneratedAttribute]
public void set_PreContextLine(int value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PreContextCode();
    [CompilerGeneratedAttribute]
public void set_PreContextCode(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ContextCode();
    [CompilerGeneratedAttribute]
public void set_ContextCode(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PostContextCode();
    [CompilerGeneratedAttribute]
public void set_PostContextCode(IEnumerable`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ErrorDetails();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ErrorDetails(string value);
}
internal class Microsoft.Extensions.StackTrace.Sources.StackTraceHelper : object {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimmer", "IL2026")]
public static IList`1<StackFrameInfo> GetFrames(Exception exception, AggregateException& error);
    [NullableContextAttribute("2")]
internal static MethodDisplayInfo GetMethodDisplayString(MethodBase method);
}
