internal class Microsoft.AspNetCore.Authentication.TimeProviderClock : object {
    public DateTimeOffset UtcNow { get; }
    [NullableContextAttribute("1")]
internal TimeProviderClock(TimeProvider timeProvider);
    public sealed virtual DateTimeOffset get_UtcNow();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.AspNetCore.Http.RequestDelegateGenerator, Version=8.0.8.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "8.0.8.0")]
internal static class Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__GeneratedMetadataConstants : object {
    public static String[] JsonContentType;
    public static String[] PlaintextContentType;
    public static String[] FormFileContentType;
    public static String[] FormContentType;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[GeneratedCodeAttribute("Microsoft.AspNetCore.Http.RequestDelegateGenerator, Version=8.0.8.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "8.0.8.0")]
internal static class Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__GeneratedRouteBuilderExtensionsCore : object {
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "57", "20")]
internal static RouteHandlerBuilder MapPost0(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "90", "20")]
internal static RouteHandlerBuilder MapPost1(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "122", "20")]
internal static RouteHandlerBuilder MapPost2(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "142", "20")]
internal static RouteHandlerBuilder MapGet3(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "193", "20")]
internal static RouteHandlerBuilder MapPost4(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "206", "20")]
internal static RouteHandlerBuilder MapPost5(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "225", "20")]
internal static RouteHandlerBuilder MapPost6(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "260", "22")]
internal static RouteHandlerBuilder MapPost7(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "334", "22")]
internal static RouteHandlerBuilder MapGet8(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
[<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute("/_/src/Identity/Core/src/IdentityApiEndpointRouteBuilderExtensions.cs", "346", "22")]
internal static RouteHandlerBuilder MapPost9(IEndpointRouteBuilder endpoints, string pattern, Delegate handler);
    [ExtensionAttribute]
internal static RouteHandlerBuilder MapCore(IEndpointRouteBuilder routes, string pattern, Delegate handler, IEnumerable`1<string> httpMethods, Func`3<MethodInfo, RequestDelegateFactoryOptions, RequestDelegateMetadataResult> populateMetadata, Func`4<Delegate, RequestDelegateFactoryOptions, RequestDelegateMetadataResult, RequestDelegateResult> createRequestDelegate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.AspNetCore.Http.RequestDelegateGenerator, Version=8.0.8.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "8.0.8.0")]
internal class Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__LogOrThrowExceptionHelper : object {
    [NullableContextAttribute("2")]
public <GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__LogOrThrowExceptionHelper(IServiceProvider serviceProvider, RequestDelegateFactoryOptions options);
    public void RequestBodyIOException(IOException exception);
    public void InvalidJsonRequestBody(string parameterTypeName, string parameterName, Exception exception);
    public void ParameterBindingFailed(string parameterTypeName, string parameterName, string sourceValue);
    public void RequiredParameterNotProvided(string parameterTypeName, string parameterName, string source);
    public void ImplicitBodyNotProvided(string parameterName);
    [NullableContextAttribute("2")]
public void UnexpectedJsonContentType(string contentType);
    [NullableContextAttribute("2")]
public void UnexpectedNonFormContentType(string contentType);
    public void InvalidFormRequestBody(string parameterTypeName, string parameterName, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Identity.AspNetRoleManager`1 : RoleManager`1<TRole> {
    protected CancellationToken CancellationToken { get; }
    public AspNetRoleManager`1(IRoleStore`1<TRole> store, IEnumerable`1<IRoleValidator`1<TRole>> roleValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, ILogger`1<RoleManager`1<TRole>> logger, IHttpContextAccessor contextAccessor);
    protected virtual CancellationToken get_CancellationToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Identity.AspNetUserManager`1 : UserManager`1<TUser> {
    protected CancellationToken CancellationToken { get; }
    public AspNetUserManager`1(IUserStore`1<TUser> store, IOptions`1<IdentityOptions> optionsAccessor, IPasswordHasher`1<TUser> passwordHasher, IEnumerable`1<IUserValidator`1<TUser>> userValidators, IEnumerable`1<IPasswordValidator`1<TUser>> passwordValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, IServiceProvider services, ILogger`1<UserManager`1<TUser>> logger);
    protected virtual CancellationToken get_CancellationToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest : object {
    [RequiredMemberAttribute]
public string Email { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Email(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.RegisterRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.LoginRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.RefreshRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.InfoRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.InfoResponse")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.TwoFactorRequest")]
[JsonSerializableAttribute("Microsoft.AspNetCore.Identity.Data.TwoFactorResponse")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.36612")]
internal class Microsoft.AspNetCore.Identity.Data.IdentityEndpointsJsonSerializerContext : JsonSerializerContext {
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<Nullable`1<bool>> NullableBoolean { get; }
    public JsonTypeInfo`1<ForgotPasswordRequest> ForgotPasswordRequest { get; }
    public JsonTypeInfo`1<InfoRequest> InfoRequest { get; }
    public JsonTypeInfo`1<InfoResponse> InfoResponse { get; }
    public JsonTypeInfo`1<LoginRequest> LoginRequest { get; }
    public JsonTypeInfo`1<RefreshRequest> RefreshRequest { get; }
    public JsonTypeInfo`1<RegisterRequest> RegisterRequest { get; }
    public JsonTypeInfo`1<ResendConfirmationEmailRequest> ResendConfirmationEmailRequest { get; }
    public JsonTypeInfo`1<ResetPasswordRequest> ResetPasswordRequest { get; }
    public JsonTypeInfo`1<TwoFactorRequest> TwoFactorRequest { get; }
    public JsonTypeInfo`1<TwoFactorResponse> TwoFactorResponse { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<String[]> StringArray { get; }
    public static IdentityEndpointsJsonSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public IdentityEndpointsJsonSerializerContext(JsonSerializerOptions options);
    public JsonTypeInfo`1<bool> get_Boolean();
    public JsonTypeInfo`1<Nullable`1<bool>> get_NullableBoolean();
    public JsonTypeInfo`1<ForgotPasswordRequest> get_ForgotPasswordRequest();
    public JsonTypeInfo`1<InfoRequest> get_InfoRequest();
    public JsonTypeInfo`1<InfoResponse> get_InfoResponse();
    public JsonTypeInfo`1<LoginRequest> get_LoginRequest();
    public JsonTypeInfo`1<RefreshRequest> get_RefreshRequest();
    public JsonTypeInfo`1<RegisterRequest> get_RegisterRequest();
    public JsonTypeInfo`1<ResendConfirmationEmailRequest> get_ResendConfirmationEmailRequest();
    public JsonTypeInfo`1<ResetPasswordRequest> get_ResetPasswordRequest();
    public JsonTypeInfo`1<TwoFactorRequest> get_TwoFactorRequest();
    public JsonTypeInfo`1<TwoFactorResponse> get_TwoFactorResponse();
    public JsonTypeInfo`1<int> get_Int32();
    public JsonTypeInfo`1<string> get_String();
    public JsonTypeInfo`1<String[]> get_StringArray();
    [CompilerGeneratedAttribute]
public static IdentityEndpointsJsonSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.Data.InfoRequest : object {
    public string NewEmail { get; public set; }
    public string NewPassword { get; public set; }
    public string OldPassword { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NewEmail();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NewEmail(string value);
    [CompilerGeneratedAttribute]
public string get_NewPassword();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NewPassword(string value);
    [CompilerGeneratedAttribute]
public string get_OldPassword();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OldPassword(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.InfoResponse : object {
    [RequiredMemberAttribute]
public string Email { get; public set; }
    [RequiredMemberAttribute]
public bool IsEmailConfirmed { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Email(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEmailConfirmed();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsEmailConfirmed(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.LoginRequest : object {
    [RequiredMemberAttribute]
public string Email { get; public set; }
    [RequiredMemberAttribute]
public string Password { get; public set; }
    [NullableAttribute("2")]
public string TwoFactorCode { get; public set; }
    [NullableAttribute("2")]
public string TwoFactorRecoveryCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Password(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TwoFactorCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TwoFactorCode(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TwoFactorRecoveryCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TwoFactorRecoveryCode(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.RefreshRequest : object {
    [RequiredMemberAttribute]
public string RefreshToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RefreshToken(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.RegisterRequest : object {
    [RequiredMemberAttribute]
public string Email { get; public set; }
    [RequiredMemberAttribute]
public string Password { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Password(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest : object {
    [RequiredMemberAttribute]
public string Email { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Email(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest : object {
    [RequiredMemberAttribute]
public string Email { get; public set; }
    [RequiredMemberAttribute]
public string ResetCode { get; public set; }
    [RequiredMemberAttribute]
public string NewPassword { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_ResetCode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResetCode(string value);
    [CompilerGeneratedAttribute]
public string get_NewPassword();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NewPassword(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.Data.TwoFactorRequest : object {
    public Nullable`1<bool> Enable { get; public set; }
    public string TwoFactorCode { get; public set; }
    public bool ResetSharedKey { get; public set; }
    public bool ResetRecoveryCodes { get; public set; }
    public bool ForgetMachine { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Enable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TwoFactorCode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TwoFactorCode(string value);
    [CompilerGeneratedAttribute]
public bool get_ResetSharedKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResetSharedKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_ResetRecoveryCodes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ResetRecoveryCodes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ForgetMachine();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ForgetMachine(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Identity.Data.TwoFactorResponse : object {
    [RequiredMemberAttribute]
public string SharedKey { get; public set; }
    [RequiredMemberAttribute]
public int RecoveryCodesLeft { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] RecoveryCodes { get; public set; }
    [RequiredMemberAttribute]
public bool IsTwoFactorEnabled { get; public set; }
    [RequiredMemberAttribute]
public bool IsMachineRemembered { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SharedKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SharedKey(string value);
    [CompilerGeneratedAttribute]
public int get_RecoveryCodesLeft();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RecoveryCodesLeft(int value);
    [CompilerGeneratedAttribute]
public String[] get_RecoveryCodes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RecoveryCodes(String[] value);
    [CompilerGeneratedAttribute]
public bool get_IsTwoFactorEnabled();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsTwoFactorEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsMachineRemembered();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsMachineRemembered(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions : object {
    public string Name { get; public set; }
    public TimeSpan TokenLifespan { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_TokenLifespan();
    [CompilerGeneratedAttribute]
public void set_TokenLifespan(TimeSpan value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.DataProtectorTokenProvider`1 : object {
    protected DataProtectionTokenProviderOptions Options { get; }
    protected IDataProtector Protector { get; }
    public string Name { get; }
    public ILogger`1<DataProtectorTokenProvider`1<TUser>> Logger { get; }
    public DataProtectorTokenProvider`1(IDataProtectionProvider dataProtectionProvider, IOptions`1<DataProtectionTokenProviderOptions> options, ILogger`1<DataProtectorTokenProvider`1<TUser>> logger);
    [CompilerGeneratedAttribute]
protected DataProtectionTokenProviderOptions get_Options();
    [CompilerGeneratedAttribute]
protected IDataProtector get_Protector();
    public string get_Name();
    [CompilerGeneratedAttribute]
public ILogger`1<DataProtectorTokenProvider`1<TUser>> get_Logger();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.DataProtectorTokenProvider`1/<GenerateAsync>d__14")]
public virtual Task`1<string> GenerateAsync(string purpose, UserManager`1<TUser> manager, TUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.DataProtectorTokenProvider`1/<ValidateAsync>d__15")]
public virtual Task`1<bool> ValidateAsync(string purpose, string token, UserManager`1<TUser> manager, TUser user);
    public virtual Task`1<bool> CanGenerateTwoFactorTokenAsync(UserManager`1<TUser> manager, TUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Identity.DefaultMessageEmailSender`1 : object {
    internal bool IsNoOp { get; }
    public DefaultMessageEmailSender`1(IEmailSender emailSender);
    internal bool get_IsNoOp();
    public sealed virtual Task SendConfirmationLinkAsync(TUser user, string email, string confirmationLink);
    public sealed virtual Task SendPasswordResetLinkAsync(TUser user, string email, string resetLink);
    public sealed virtual Task SendPasswordResetCodeAsync(TUser user, string email, string resetCode);
}
internal static class Microsoft.AspNetCore.Identity.EventIds : object {
    public static EventId UserCannotSignInWithoutConfirmedEmail;
    public static EventId SecurityStampValidationFailed;
    public static EventId SecurityStampValidationFailedId4;
    public static EventId UserCannotSignInWithoutConfirmedPhoneNumber;
    public static EventId InvalidPassword;
    public static EventId UserLockedOut;
    public static EventId UserCannotSignInWithoutConfirmedAccount;
    public static EventId TwoFactorSecurityStampValidationFailed;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.ExternalLoginInfo : UserLoginInfo {
    public ClaimsPrincipal Principal { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<AuthenticationToken> AuthenticationTokens { get; public set; }
    [NullableAttribute("2")]
public AuthenticationProperties AuthenticationProperties { get; public set; }
    public ExternalLoginInfo(ClaimsPrincipal principal, string loginProvider, string providerKey, string displayName);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
public void set_Principal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AuthenticationToken> get_AuthenticationTokens();
    [CompilerGeneratedAttribute]
public void set_AuthenticationTokens(IEnumerable`1<AuthenticationToken> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public AuthenticationProperties get_AuthenticationProperties();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_AuthenticationProperties(AuthenticationProperties value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Identity.IdentityBuilderExtensions : object {
    [ExtensionAttribute]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public static IdentityBuilder AddDefaultTokenProviders(IdentityBuilder builder);
    [ExtensionAttribute]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public static IdentityBuilder AddSignInManager(IdentityBuilder builder);
    [ExtensionAttribute]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public static IdentityBuilder AddSignInManager(IdentityBuilder builder);
    [ExtensionAttribute]
public static IdentityBuilder AddApiEndpoints(IdentityBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityConstants : object {
    public static string ApplicationScheme;
    public static string BearerScheme;
    internal static string BearerAndApplicationScheme;
    public static string ExternalScheme;
    public static string TwoFactorRememberMeScheme;
    public static string TwoFactorUserIdScheme;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Identity.IdentityCookieAuthenticationBuilderExtensions : object {
    [ExtensionAttribute]
public static IdentityCookiesBuilder AddIdentityCookies(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static IdentityCookiesBuilder AddIdentityCookies(AuthenticationBuilder builder, Action`1<IdentityCookiesBuilder> configureCookies);
    [ExtensionAttribute]
public static OptionsBuilder`1<CookieAuthenticationOptions> AddApplicationCookie(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static OptionsBuilder`1<CookieAuthenticationOptions> AddExternalCookie(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static OptionsBuilder`1<CookieAuthenticationOptions> AddTwoFactorRememberMeCookie(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static OptionsBuilder`1<CookieAuthenticationOptions> AddTwoFactorUserIdCookie(AuthenticationBuilder builder);
}
public class Microsoft.AspNetCore.Identity.IdentityCookiesBuilder : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public OptionsBuilder`1<CookieAuthenticationOptions> ApplicationCookie { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public OptionsBuilder`1<CookieAuthenticationOptions> ExternalCookie { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public OptionsBuilder`1<CookieAuthenticationOptions> TwoFactorRememberMeCookie { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public OptionsBuilder`1<CookieAuthenticationOptions> TwoFactorUserIdCookie { get; public set; }
    [CompilerGeneratedAttribute]
public OptionsBuilder`1<CookieAuthenticationOptions> get_ApplicationCookie();
    [CompilerGeneratedAttribute]
public void set_ApplicationCookie(OptionsBuilder`1<CookieAuthenticationOptions> value);
    [CompilerGeneratedAttribute]
public OptionsBuilder`1<CookieAuthenticationOptions> get_ExternalCookie();
    [CompilerGeneratedAttribute]
public void set_ExternalCookie(OptionsBuilder`1<CookieAuthenticationOptions> value);
    [CompilerGeneratedAttribute]
public OptionsBuilder`1<CookieAuthenticationOptions> get_TwoFactorRememberMeCookie();
    [CompilerGeneratedAttribute]
public void set_TwoFactorRememberMeCookie(OptionsBuilder`1<CookieAuthenticationOptions> value);
    [CompilerGeneratedAttribute]
public OptionsBuilder`1<CookieAuthenticationOptions> get_TwoFactorUserIdCookie();
    [CompilerGeneratedAttribute]
public void set_TwoFactorUserIdCookie(OptionsBuilder`1<CookieAuthenticationOptions> value);
}
internal class Microsoft.AspNetCore.Identity.IdentityEndpointsJsonOptionsSetup : object {
    [NullableContextAttribute("1")]
public sealed virtual void Configure(JsonOptions options);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Identity.IEmailSender`1 {
    public abstract virtual Task SendConfirmationLinkAsync(TUser user, string email, string confirmationLink);
    public abstract virtual Task SendPasswordResetLinkAsync(TUser user, string email, string resetLink);
    public abstract virtual Task SendPasswordResetCodeAsync(TUser user, string email, string resetCode);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Identity.ISecurityStampValidator {
    public abstract virtual Task ValidateAsync(CookieValidatePrincipalContext context);
}
public interface Microsoft.AspNetCore.Identity.ITwoFactorSecurityStampValidator {
}
internal static class Microsoft.AspNetCore.Identity.Resources : object {
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string InvalidManagerType { get; }
    internal static string InvalidPasswordHasherCompatibilityMode { get; }
    internal static string InvalidPasswordHasherIterationCount { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_InvalidManagerType();
    internal static string FormatInvalidManagerType(object p0, object p1, object p2);
    internal static string get_InvalidPasswordHasherCompatibilityMode();
    internal static string get_InvalidPasswordHasherIterationCount();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.SecurityStampRefreshingPrincipalContext : object {
    public ClaimsPrincipal CurrentPrincipal { get; public set; }
    public ClaimsPrincipal NewPrincipal { get; public set; }
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_CurrentPrincipal();
    [CompilerGeneratedAttribute]
public void set_CurrentPrincipal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_NewPrincipal();
    [CompilerGeneratedAttribute]
public void set_NewPrincipal(ClaimsPrincipal value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.Identity.SecurityStampValidator : object {
    public static Task ValidatePrincipalAsync(CookieValidatePrincipalContext context);
    public static Task ValidateAsync(CookieValidatePrincipalContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.SecurityStampValidator`1 : object {
    public SignInManager`1<TUser> SignInManager { get; }
    public SecurityStampValidatorOptions Options { get; }
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider instead.")]
public ISystemClock Clock { get; }
    public TimeProvider TimeProvider { get; }
    public ILogger Logger { get; public set; }
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on SecurityStampValidatorOptions instead.")]
public SecurityStampValidator`1(IOptions`1<SecurityStampValidatorOptions> options, SignInManager`1<TUser> signInManager, ISystemClock clock, ILoggerFactory logger);
    public SecurityStampValidator`1(IOptions`1<SecurityStampValidatorOptions> options, SignInManager`1<TUser> signInManager, ILoggerFactory logger);
    [CompilerGeneratedAttribute]
public SignInManager`1<TUser> get_SignInManager();
    [CompilerGeneratedAttribute]
public SecurityStampValidatorOptions get_Options();
    [CompilerGeneratedAttribute]
public ISystemClock get_Clock();
    [CompilerGeneratedAttribute]
public TimeProvider get_TimeProvider();
    [CompilerGeneratedAttribute]
public ILogger get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger value);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SecurityStampValidator`1/<SecurityStampVerified>d__18")]
protected virtual Task SecurityStampVerified(TUser user, CookieValidatePrincipalContext context);
    [NullableContextAttribute("2")]
protected virtual Task`1<TUser> VerifySecurityStamp(ClaimsPrincipal principal);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SecurityStampValidator`1/<ValidateAsync>d__20")]
public virtual Task ValidateAsync(CookieValidatePrincipalContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.SecurityStampValidatorOptions : object {
    public TimeSpan ValidationInterval { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<SecurityStampRefreshingPrincipalContext, Task> OnRefreshingPrincipal { get; public set; }
    public TimeProvider TimeProvider { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_ValidationInterval();
    [CompilerGeneratedAttribute]
public void set_ValidationInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public Func`2<SecurityStampRefreshingPrincipalContext, Task> get_OnRefreshingPrincipal();
    [CompilerGeneratedAttribute]
public void set_OnRefreshingPrincipal(Func`2<SecurityStampRefreshingPrincipalContext, Task> value);
    [CompilerGeneratedAttribute]
public TimeProvider get_TimeProvider();
    [CompilerGeneratedAttribute]
public void set_TimeProvider(TimeProvider value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.SignInManager`1 : object {
    public ILogger Logger { get; public set; }
    public UserManager`1<TUser> UserManager { get; public set; }
    public IUserClaimsPrincipalFactory`1<TUser> ClaimsFactory { get; public set; }
    public IdentityOptions Options { get; public set; }
    public string AuthenticationScheme { get; public set; }
    public HttpContext Context { get; public set; }
    public SignInManager`1(UserManager`1<TUser> userManager, IHttpContextAccessor contextAccessor, IUserClaimsPrincipalFactory`1<TUser> claimsFactory, IOptions`1<IdentityOptions> optionsAccessor, ILogger`1<SignInManager`1<TUser>> logger, IAuthenticationSchemeProvider schemes, IUserConfirmation`1<TUser> confirmation);
    [CompilerGeneratedAttribute]
public virtual ILogger get_Logger();
    [CompilerGeneratedAttribute]
public virtual void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
public UserManager`1<TUser> get_UserManager();
    [CompilerGeneratedAttribute]
public void set_UserManager(UserManager`1<TUser> value);
    [CompilerGeneratedAttribute]
public IUserClaimsPrincipalFactory`1<TUser> get_ClaimsFactory();
    [CompilerGeneratedAttribute]
public void set_ClaimsFactory(IUserClaimsPrincipalFactory`1<TUser> value);
    [CompilerGeneratedAttribute]
public IdentityOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(IdentityOptions value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationScheme();
    [CompilerGeneratedAttribute]
public void set_AuthenticationScheme(string value);
    public HttpContext get_Context();
    public void set_Context(HttpContext value);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<CreateUserPrincipalAsync>d__31")]
public virtual Task`1<ClaimsPrincipal> CreateUserPrincipalAsync(TUser user);
    public virtual bool IsSignedIn(ClaimsPrincipal principal);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<CanSignInAsync>d__33")]
public virtual Task`1<bool> CanSignInAsync(TUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<RefreshSignInAsync>d__34")]
public virtual Task RefreshSignInAsync(TUser user);
    public virtual Task SignInAsync(TUser user, bool isPersistent, string authenticationMethod);
    public virtual Task SignInAsync(TUser user, AuthenticationProperties authenticationProperties, string authenticationMethod);
    public virtual Task SignInWithClaimsAsync(TUser user, bool isPersistent, IEnumerable`1<Claim> additionalClaims);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<SignInWithClaimsAsync>d__38")]
public virtual Task SignInWithClaimsAsync(TUser user, AuthenticationProperties authenticationProperties, IEnumerable`1<Claim> additionalClaims);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<SignOutAsync>d__39")]
public virtual Task SignOutAsync();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<ValidateSecurityStampAsync>d__40")]
public virtual Task`1<TUser> ValidateSecurityStampAsync(ClaimsPrincipal principal);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<ValidateTwoFactorSecurityStampAsync>d__41")]
public virtual Task`1<TUser> ValidateTwoFactorSecurityStampAsync(ClaimsPrincipal principal);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<ValidateSecurityStampAsync>d__42")]
public virtual Task`1<bool> ValidateSecurityStampAsync(TUser user, string securityStamp);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<PasswordSignInAsync>d__43")]
public virtual Task`1<SignInResult> PasswordSignInAsync(TUser user, string password, bool isPersistent, bool lockoutOnFailure);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<PasswordSignInAsync>d__44")]
public virtual Task`1<SignInResult> PasswordSignInAsync(string userName, string password, bool isPersistent, bool lockoutOnFailure);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<CheckPasswordSignInAsync>d__45")]
public virtual Task`1<SignInResult> CheckPasswordSignInAsync(TUser user, string password, bool lockoutOnFailure);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<IsTwoFactorClientRememberedAsync>d__46")]
public virtual Task`1<bool> IsTwoFactorClientRememberedAsync(TUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<RememberTwoFactorClientAsync>d__47")]
public virtual Task RememberTwoFactorClientAsync(TUser user);
    public virtual Task ForgetTwoFactorClientAsync();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<TwoFactorRecoveryCodeSignInAsync>d__49")]
public virtual Task`1<SignInResult> TwoFactorRecoveryCodeSignInAsync(string recoveryCode);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<TwoFactorAuthenticatorSignInAsync>d__51")]
public virtual Task`1<SignInResult> TwoFactorAuthenticatorSignInAsync(string code, bool isPersistent, bool rememberClient);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<TwoFactorSignInAsync>d__52")]
public virtual Task`1<SignInResult> TwoFactorSignInAsync(string provider, string code, bool isPersistent, bool rememberClient);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<GetTwoFactorAuthenticationUserAsync>d__53")]
public virtual Task`1<TUser> GetTwoFactorAuthenticationUserAsync();
    public virtual Task`1<SignInResult> ExternalLoginSignInAsync(string loginProvider, string providerKey, bool isPersistent);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<ExternalLoginSignInAsync>d__55")]
public virtual Task`1<SignInResult> ExternalLoginSignInAsync(string loginProvider, string providerKey, bool isPersistent, bool bypassTwoFactor);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<GetExternalAuthenticationSchemesAsync>d__56")]
public virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetExternalAuthenticationSchemesAsync();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<GetExternalLoginInfoAsync>d__57")]
public virtual Task`1<ExternalLoginInfo> GetExternalLoginInfoAsync(string expectedXsrf);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<UpdateExternalAuthenticationTokensAsync>d__58")]
public virtual Task`1<IdentityResult> UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo externalLogin);
    [NullableContextAttribute("2")]
public virtual AuthenticationProperties ConfigureExternalAuthenticationProperties(string provider, string redirectUrl, string userId);
    internal static ClaimsPrincipal StoreTwoFactorInfo(string userId, string loginProvider);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<StoreRememberClient>d__61")]
internal Task`1<ClaimsPrincipal> StoreRememberClient(TUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<IsTwoFactorEnabledAsync>d__62")]
public virtual Task`1<bool> IsTwoFactorEnabledAsync(TUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<SignInOrTwoFactorAsync>d__63")]
protected virtual Task`1<SignInResult> SignInOrTwoFactorAsync(TUser user, bool isPersistent, string loginProvider, bool bypassTwoFactor);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<IsLockedOut>d__65")]
protected virtual Task`1<bool> IsLockedOut(TUser user);
    protected virtual Task`1<SignInResult> LockedOut(TUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<PreSignInCheck>d__67")]
protected virtual Task`1<SignInResult> PreSignInCheck(TUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.SignInManager`1/<ResetLockout>d__68")]
protected virtual Task ResetLockout(TUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Identity.StreamExtensions : object {
    internal static Encoding DefaultEncoding;
    [ExtensionAttribute]
public static BinaryReader CreateReader(Stream stream);
    [ExtensionAttribute]
public static BinaryWriter CreateWriter(Stream stream);
    [ExtensionAttribute]
public static DateTimeOffset ReadDateTimeOffset(BinaryReader reader);
    [ExtensionAttribute]
public static void Write(BinaryWriter writer, DateTimeOffset value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Identity.TwoFactorSecurityStampValidator`1 : SecurityStampValidator`1<TUser> {
    [ObsoleteAttribute("ISystemClock is obsolete, use TimeProvider on SecurityStampValidatorOptions instead.")]
public TwoFactorSecurityStampValidator`1(IOptions`1<SecurityStampValidatorOptions> options, SignInManager`1<TUser> signInManager, ISystemClock clock, ILoggerFactory logger);
    public TwoFactorSecurityStampValidator`1(IOptions`1<SecurityStampValidatorOptions> options, SignInManager`1<TUser> signInManager, ILoggerFactory logger);
    [NullableContextAttribute("2")]
protected virtual Task`1<TUser> VerifySecurityStamp(ClaimsPrincipal principal);
    protected virtual Task SecurityStampVerified(TUser user, CookieValidatePrincipalContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Identity.UI.Services.IEmailSender {
    public abstract virtual Task SendEmailAsync(string email, string subject, string htmlMessage);
}
public class Microsoft.AspNetCore.Identity.UI.Services.NoOpEmailSender : object {
    [NullableContextAttribute("1")]
public sealed virtual Task SendEmailAsync(string email, string subject, string htmlMessage);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEndpointConventionBuilder MapIdentityApi(IEndpointRouteBuilder endpoints);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions : object {
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("Identity middleware does not currently support trimming or native AOT.")]
public static IdentityBuilder AddIdentity(IServiceCollection services);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("Identity middleware does not currently support trimming or native AOT.")]
public static IdentityBuilder AddIdentity(IServiceCollection services, Action`1<IdentityOptions> setupAction);
    [ExtensionAttribute]
public static IdentityBuilder AddIdentityApiEndpoints(IServiceCollection services);
    [ExtensionAttribute]
public static IdentityBuilder AddIdentityApiEndpoints(IServiceCollection services, Action`1<IdentityOptions> configure);
    [ExtensionAttribute]
public static IServiceCollection ConfigureApplicationCookie(IServiceCollection services, Action`1<CookieAuthenticationOptions> configure);
    [ExtensionAttribute]
public static IServiceCollection ConfigureExternalCookie(IServiceCollection services, Action`1<CookieAuthenticationOptions> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.Logging.LoggingExtensions : object {
    [ExtensionAttribute]
[LoggerMessageAttribute("0", "1", "ValidateAsync failed: the expiration time is invalid.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void InvalidExpirationTime(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("1", "1", "ValidateAsync failed: did not find expected UserId.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void UserIdsNotEquals(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("2", "1", "ValidateAsync failed: did not find expected purpose. '{ActualPurpose}' does not match the expected purpose '{ExpectedPurpose}'.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void PurposeNotEquals(ILogger logger, string actualPurpose, string expectedPurpose);
    [ExtensionAttribute]
[LoggerMessageAttribute("3", "1", "ValidateAsync failed: unexpected end of input.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void UnexpectedEndOfInput(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("4", "1", "ValidateAsync failed: did not find expected security stamp.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void SecurityStampNotEquals(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("5", "1", "ValidateAsync failed: the expected stamp is not empty.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void SecurityStampIsNotEmpty(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute("6", "1", "ValidateAsync failed: unhandled exception was thrown.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void UnhandledException(ILogger logger);
}
[GeneratedCodeAttribute("Microsoft.AspNetCore.Http.RequestDelegateGenerator, Version=8.0.8.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "8.0.8.0")]
[AttributeUsageAttribute("64")]
internal class System.Runtime.CompilerServices.<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute : Attribute {
    [NullableContextAttribute("1")]
public <GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__InterceptsLocationAttribute(string filePath, int line, int column);
}
