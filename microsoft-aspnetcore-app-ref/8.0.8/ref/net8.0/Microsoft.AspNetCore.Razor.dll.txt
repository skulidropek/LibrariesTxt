[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
public class Microsoft.AspNetCore.Razor.TagHelpers.DefaultTagHelperContent : TagHelperContent {
    public bool IsModified { get; }
    public bool IsEmptyOrWhiteSpace { get; }
    public virtual bool get_IsModified();
    public virtual bool get_IsEmptyOrWhiteSpace();
    public virtual TagHelperContent Append(string unencoded);
    public virtual TagHelperContent AppendHtml(IHtmlContent htmlContent);
    public virtual TagHelperContent AppendHtml(string encoded);
    public virtual void CopyTo(IHtmlContentBuilder destination);
    public virtual void MoveTo(IHtmlContentBuilder destination);
    public virtual TagHelperContent Clear();
    public virtual void Reinitialize();
    public virtual string GetContent();
    public virtual string GetContent(HtmlEncoder encoder);
    public virtual void WriteTo(TextWriter writer, HtmlEncoder encoder);
}
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute : Attribute {
    public string Name { get; }
    public string DictionaryAttributePrefix { get; public set; }
    public bool DictionaryAttributePrefixSet { get; }
    public HtmlAttributeNameAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    public string get_DictionaryAttributePrefix();
    public void set_DictionaryAttributePrefix(string value);
    [CompilerGeneratedAttribute]
public bool get_DictionaryAttributePrefixSet();
}
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNotBoundAttribute : Attribute {
}
public enum Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle : Enum {
    public int value__;
    public static HtmlAttributeValueStyle DoubleQuotes;
    public static HtmlAttributeValueStyle SingleQuotes;
    public static HtmlAttributeValueStyle NoQuotes;
    public static HtmlAttributeValueStyle Minimized;
}
[AttributeUsageAttribute("4")]
public class Microsoft.AspNetCore.Razor.TagHelpers.HtmlTargetElementAttribute : Attribute {
    public static string ElementCatchAllTarget;
    public string Tag { get; }
    public string Attributes { get; public set; }
    public TagStructure TagStructure { get; public set; }
    public string ParentTag { get; public set; }
    public HtmlTargetElementAttribute(string tag);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public string get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(string value);
    [CompilerGeneratedAttribute]
public TagStructure get_TagStructure();
    [CompilerGeneratedAttribute]
public void set_TagStructure(TagStructure value);
    [CompilerGeneratedAttribute]
public string get_ParentTag();
    [CompilerGeneratedAttribute]
public void set_ParentTag(string value);
}
public interface Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper {
}
public interface Microsoft.AspNetCore.Razor.TagHelpers.ITagHelperComponent {
    public int Order { get; }
    public abstract virtual int get_Order();
    public abstract virtual void Init(TagHelperContext context);
    public abstract virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
}
public class Microsoft.AspNetCore.Razor.TagHelpers.NullHtmlEncoder : HtmlEncoder {
    public static NullHtmlEncoder Default { get; }
    public int MaxOutputCharactersPerInputCharacter { get; }
    [CompilerGeneratedAttribute]
public static NullHtmlEncoder get_Default();
    public virtual int get_MaxOutputCharactersPerInputCharacter();
    public virtual string Encode(string value);
    public virtual void Encode(TextWriter output, Char[] value, int startIndex, int characterCount);
    public virtual void Encode(TextWriter output, string value, int startIndex, int characterCount);
    public virtual int FindFirstCharacterToEncode(Char* text, int textLength);
    public virtual bool TryEncodeUnicodeScalar(int unicodeScalar, Char* buffer, int bufferLength, Int32& numberOfCharactersWritten);
    public virtual bool WillEncode(int unicodeScalar);
}
[AttributeUsageAttribute("4")]
public class Microsoft.AspNetCore.Razor.TagHelpers.OutputElementHintAttribute : Attribute {
    public string OutputElement { get; }
    public OutputElementHintAttribute(string outputElement);
    [CompilerGeneratedAttribute]
public string get_OutputElement();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList : ReadOnlyCollection`1<TagHelperAttribute> {
    public TagHelperAttribute Item { get; }
    public ReadOnlyTagHelperAttributeList(IList`1<TagHelperAttribute> attributes);
    public TagHelperAttribute get_Item(string name);
    public bool ContainsName(string name);
    public bool TryGetAttribute(string name, TagHelperAttribute& attribute);
    public bool TryGetAttributes(string name, IReadOnlyList`1& attributes);
    public int IndexOfName(string name);
    protected static bool NameEquals(string name, TagHelperAttribute attribute);
}
[AttributeUsageAttribute("4")]
public class Microsoft.AspNetCore.Razor.TagHelpers.RestrictChildrenAttribute : Attribute {
    public IEnumerable`1<string> ChildTags { get; }
    public RestrictChildrenAttribute(string childTag, String[] childTags);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ChildTags();
}
public abstract class Microsoft.AspNetCore.Razor.TagHelpers.TagHelper : object {
    public int Order { get; }
    [CompilerGeneratedAttribute]
public virtual int get_Order();
    public virtual void Init(TagHelperContext context);
    public virtual void Process(TagHelperContext context, TagHelperOutput output);
    public virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
}
public class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute : object {
    public string Name { get; }
    public object Value { get; }
    public HtmlAttributeValueStyle ValueStyle { get; }
    public TagHelperAttribute(string name);
    public TagHelperAttribute(string name, object value);
    public TagHelperAttribute(string name, object value, HtmlAttributeValueStyle valueStyle);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public HtmlAttributeValueStyle get_ValueStyle();
    public bool Equals(TagHelperAttribute other);
    public sealed virtual void WriteTo(TextWriter writer, HtmlEncoder encoder);
    public sealed virtual void CopyTo(IHtmlContentBuilder destination);
    public sealed virtual void MoveTo(IHtmlContentBuilder destination);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList : ReadOnlyTagHelperAttributeList {
    public TagHelperAttribute Item { get; public set; }
    private bool System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly { get; }
    public TagHelperAttributeList(IEnumerable`1<TagHelperAttribute> attributes);
    public TagHelperAttributeList(List`1<TagHelperAttribute> attributes);
    public sealed virtual TagHelperAttribute get_Item(int index);
    public sealed virtual void set_Item(int index, TagHelperAttribute value);
    public void SetAttribute(string name, object value);
    public void SetAttribute(TagHelperAttribute attribute);
    private sealed virtual override bool System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.get_IsReadOnly();
    public void Add(string name, object value);
    public sealed virtual void Add(TagHelperAttribute attribute);
    public sealed virtual void Insert(int index, TagHelperAttribute attribute);
    public sealed virtual bool Remove(TagHelperAttribute attribute);
    public sealed virtual void RemoveAt(int index);
    public bool RemoveAll(string name);
    public sealed virtual void Clear();
}
public abstract class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperComponent : object {
    public int Order { get; }
    public virtual int get_Order();
    public virtual void Init(TagHelperContext context);
    public virtual void Process(TagHelperContext context, TagHelperOutput output);
    public virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
}
public abstract class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent : object {
    public bool IsModified { get; }
    public bool IsEmptyOrWhiteSpace { get; }
    public abstract virtual bool get_IsModified();
    public abstract virtual bool get_IsEmptyOrWhiteSpace();
    public TagHelperContent SetHtmlContent(IHtmlContent htmlContent);
    public TagHelperContent SetContent(string unencoded);
    public TagHelperContent SetHtmlContent(string encoded);
    public abstract virtual TagHelperContent Append(string unencoded);
    public abstract virtual TagHelperContent AppendHtml(IHtmlContent htmlContent);
    public abstract virtual TagHelperContent AppendHtml(string encoded);
    public TagHelperContent AppendFormat(string format, Object[] args);
    public TagHelperContent AppendFormat(IFormatProvider provider, string format, Object[] args);
    public abstract virtual TagHelperContent Clear();
    public abstract virtual void Reinitialize();
    public abstract virtual void CopyTo(IHtmlContentBuilder destination);
    public abstract virtual void MoveTo(IHtmlContentBuilder destination);
    public abstract virtual string GetContent();
    public abstract virtual string GetContent(HtmlEncoder encoder);
    public abstract virtual void WriteTo(TextWriter writer, HtmlEncoder encoder);
    private sealed virtual override IHtmlContentBuilder Microsoft.AspNetCore.Html.IHtmlContentBuilder.AppendHtml(IHtmlContent content);
    private sealed virtual override IHtmlContentBuilder Microsoft.AspNetCore.Html.IHtmlContentBuilder.Append(string unencoded);
    private sealed virtual override IHtmlContentBuilder Microsoft.AspNetCore.Html.IHtmlContentBuilder.AppendHtml(string encoded);
    private sealed virtual override IHtmlContentBuilder Microsoft.AspNetCore.Html.IHtmlContentBuilder.Clear();
}
public class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext : object {
    public string TagName { get; }
    public ReadOnlyTagHelperAttributeList AllAttributes { get; }
    public IDictionary`2<object, object> Items { get; }
    public string UniqueId { get; }
    public TagHelperContext(string tagName, TagHelperAttributeList allAttributes, IDictionary`2<object, object> items, string uniqueId);
    public TagHelperContext(TagHelperAttributeList allAttributes, IDictionary`2<object, object> items, string uniqueId);
    [CompilerGeneratedAttribute]
public string get_TagName();
    public ReadOnlyTagHelperAttributeList get_AllAttributes();
    [CompilerGeneratedAttribute]
public IDictionary`2<object, object> get_Items();
    [CompilerGeneratedAttribute]
public string get_UniqueId();
    public void Reinitialize(string tagName, IDictionary`2<object, object> items, string uniqueId);
    public void Reinitialize(IDictionary`2<object, object> items, string uniqueId);
}
public class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput : object {
    public string TagName { get; public set; }
    public TagHelperContent PreElement { get; }
    public TagHelperContent PreContent { get; }
    public TagHelperContent Content { get; public set; }
    public TagHelperContent PostContent { get; }
    public TagHelperContent PostElement { get; }
    public bool IsContentModified { get; }
    public TagMode TagMode { get; public set; }
    public TagHelperAttributeList Attributes { get; }
    internal TagHelperOutput(string tagName);
    public TagHelperOutput(string tagName, TagHelperAttributeList attributes, Func`3<bool, HtmlEncoder, Task`1<TagHelperContent>> getChildContentAsync);
    [CompilerGeneratedAttribute]
public string get_TagName();
    [CompilerGeneratedAttribute]
public void set_TagName(string value);
    public TagHelperContent get_PreElement();
    public TagHelperContent get_PreContent();
    public TagHelperContent get_Content();
    public void set_Content(TagHelperContent value);
    public TagHelperContent get_PostContent();
    public TagHelperContent get_PostElement();
    public bool get_IsContentModified();
    [CompilerGeneratedAttribute]
public TagMode get_TagMode();
    [CompilerGeneratedAttribute]
public void set_TagMode(TagMode value);
    [CompilerGeneratedAttribute]
public TagHelperAttributeList get_Attributes();
    public void Reinitialize(string tagName, TagMode tagMode);
    public void SuppressOutput();
    public Task`1<TagHelperContent> GetChildContentAsync();
    public Task`1<TagHelperContent> GetChildContentAsync(bool useCachedResult);
    public Task`1<TagHelperContent> GetChildContentAsync(HtmlEncoder encoder);
    public Task`1<TagHelperContent> GetChildContentAsync(bool useCachedResult, HtmlEncoder encoder);
    private sealed virtual override void Microsoft.AspNetCore.Html.IHtmlContentContainer.CopyTo(IHtmlContentBuilder destination);
    private sealed virtual override void Microsoft.AspNetCore.Html.IHtmlContentContainer.MoveTo(IHtmlContentBuilder destination);
    public sealed virtual void WriteTo(TextWriter writer, HtmlEncoder encoder);
}
public enum Microsoft.AspNetCore.Razor.TagHelpers.TagMode : Enum {
    public int value__;
    public static TagMode StartTagAndEndTag;
    public static TagMode SelfClosing;
    public static TagMode StartTagOnly;
}
public enum Microsoft.AspNetCore.Razor.TagHelpers.TagStructure : Enum {
    public int value__;
    public static TagStructure Unspecified;
    public static TagStructure NormalOrSelfClosing;
    public static TagStructure WithoutEndTag;
}
