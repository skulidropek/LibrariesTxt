[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Configuration.ConfigurationDebugViewContext : ValueType {
    private object _dummy;
    private int _dummyPrimitive;
    public IConfigurationProvider ConfigurationProvider { get; }
    public string Key { get; }
    public string Path { get; }
    [NullableAttribute("2")]
public string Value { get; }
    public ConfigurationDebugViewContext(string path, string key, string value, IConfigurationProvider configurationProvider);
    public IConfigurationProvider get_ConfigurationProvider();
    public string get_Key();
    public string get_Path();
    [NullableContextAttribute("2")]
public string get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder Add(IConfigurationBuilder builder, Action`1<TSource> configureSource);
    [ExtensionAttribute]
public static IEnumerable`1<KeyValuePair`2<string, string>> AsEnumerable(IConfiguration configuration);
    [ExtensionAttribute]
public static IEnumerable`1<KeyValuePair`2<string, string>> AsEnumerable(IConfiguration configuration, bool makePathsRelative);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool Exists(IConfigurationSection section);
    [ExtensionAttribute]
public static string GetConnectionString(IConfiguration configuration, string name);
    [ExtensionAttribute]
public static IConfigurationSection GetRequiredSection(IConfiguration configuration, string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Microsoft.Extensions.Configuration.ConfigurationKeyNameAttribute : Attribute {
    public string Name { get; }
    public ConfigurationKeyNameAttribute(string name);
    public string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.Extensions.Configuration.ConfigurationPath : object {
    public static string KeyDelimiter;
    public static string Combine(IEnumerable`1<string> pathSegments);
    public static string Combine(String[] pathSegments);
    [NullableContextAttribute("2")]
public static string GetParentPath(string path);
    [NullableContextAttribute("2")]
public static string GetSectionKey(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ConfigurationRootExtensions : object {
    [ExtensionAttribute]
public static string GetDebugView(IConfigurationRoot root);
    [ExtensionAttribute]
public static string GetDebugView(IConfigurationRoot root, Func`2<ConfigurationDebugViewContext, string> processValue);
}
[NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
public interface Microsoft.Extensions.Configuration.IConfiguration {
    [NullableAttribute("2")]
public string Item { get; public set; }
    public abstract virtual string get_Item(string key);
    public abstract virtual void set_Item(string key, string value);
    public abstract virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public abstract virtual IChangeToken GetReloadToken();
    public abstract virtual IConfigurationSection GetSection(string key);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationBuilder {
    public IDictionary`2<string, object> Properties { get; }
    public IList`1<IConfigurationSource> Sources { get; }
    public abstract virtual IDictionary`2<string, object> get_Properties();
    public abstract virtual IList`1<IConfigurationSource> get_Sources();
    public abstract virtual IConfigurationBuilder Add(IConfigurationSource source);
    public abstract virtual IConfigurationRoot Build();
}
public interface Microsoft.Extensions.Configuration.IConfigurationManager {
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationProvider {
    public abstract virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
    public abstract virtual IChangeToken GetReloadToken();
    public abstract virtual void Load();
    public abstract virtual void Set(string key, string value);
    public abstract virtual bool TryGet(string key, String& value);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationRoot {
    public IEnumerable`1<IConfigurationProvider> Providers { get; }
    public abstract virtual IEnumerable`1<IConfigurationProvider> get_Providers();
    public abstract virtual void Reload();
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationSection {
    public string Key { get; }
    public string Path { get; }
    [NullableAttribute("2")]
public string Value { get; public set; }
    public abstract virtual string get_Key();
    public abstract virtual string get_Path();
    [NullableContextAttribute("2")]
public abstract virtual string get_Value();
    [NullableContextAttribute("2")]
public abstract virtual void set_Value(string value);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationSource {
    public abstract virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
