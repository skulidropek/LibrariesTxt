[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.FileConfigurationExtensions : object {
    [ExtensionAttribute]
public static Action`1<FileLoadExceptionContext> GetFileLoadExceptionHandler(IConfigurationBuilder builder);
    [ExtensionAttribute]
public static IFileProvider GetFileProvider(IConfigurationBuilder builder);
    [ExtensionAttribute]
public static IConfigurationBuilder SetBasePath(IConfigurationBuilder builder, string basePath);
    [ExtensionAttribute]
public static IConfigurationBuilder SetFileLoadExceptionHandler(IConfigurationBuilder builder, Action`1<FileLoadExceptionContext> handler);
    [ExtensionAttribute]
public static IConfigurationBuilder SetFileProvider(IConfigurationBuilder builder, IFileProvider fileProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.FileConfigurationProvider : ConfigurationProvider {
    public FileConfigurationSource Source { get; }
    public FileConfigurationProvider(FileConfigurationSource source);
    public FileConfigurationSource get_Source();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public virtual void Load();
    public abstract virtual void Load(Stream stream);
    public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.FileConfigurationSource : object {
    public IFileProvider FileProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<FileLoadExceptionContext> OnLoadException { get; public set; }
    public bool Optional { get; public set; }
    public string Path { get; public set; }
    public int ReloadDelay { get; public set; }
    public bool ReloadOnChange { get; public set; }
    public IFileProvider get_FileProvider();
    public void set_FileProvider(IFileProvider value);
    public Action`1<FileLoadExceptionContext> get_OnLoadException();
    public void set_OnLoadException(Action`1<FileLoadExceptionContext> value);
    public bool get_Optional();
    public void set_Optional(bool value);
    public string get_Path();
    public void set_Path(string value);
    public int get_ReloadDelay();
    public void set_ReloadDelay(int value);
    public bool get_ReloadOnChange();
    public void set_ReloadOnChange(bool value);
    [NullableContextAttribute("1")]
public abstract virtual IConfigurationProvider Build(IConfigurationBuilder builder);
    [NullableContextAttribute("1")]
public void EnsureDefaults(IConfigurationBuilder builder);
    public void ResolveFileProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.FileLoadExceptionContext : object {
    public Exception Exception { get; public set; }
    public bool Ignore { get; public set; }
    public FileConfigurationProvider Provider { get; public set; }
    public Exception get_Exception();
    public void set_Exception(Exception value);
    public bool get_Ignore();
    public void set_Ignore(bool value);
    public FileConfigurationProvider get_Provider();
    public void set_Provider(FileConfigurationProvider value);
}
