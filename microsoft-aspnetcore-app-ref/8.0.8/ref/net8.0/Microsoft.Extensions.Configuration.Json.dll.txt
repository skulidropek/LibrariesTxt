[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider : FileConfigurationProvider {
    public JsonConfigurationProvider(JsonConfigurationSource source);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Json.JsonConfigurationSource : FileConfigurationSource {
    [NullableContextAttribute("1")]
public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider : StreamConfigurationProvider {
    public JsonStreamConfigurationProvider(JsonStreamConfigurationSource source);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource : StreamConfigurationSource {
    [NullableContextAttribute("1")]
public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.JsonConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, IFileProvider provider, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, Action`1<JsonConfigurationSource> configureSource);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path, bool optional);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonStream(IConfigurationBuilder builder, Stream stream);
}
