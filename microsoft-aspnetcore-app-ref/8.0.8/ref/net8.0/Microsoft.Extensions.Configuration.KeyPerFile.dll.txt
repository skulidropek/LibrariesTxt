[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.KeyPerFile.KeyPerFileConfigurationProvider : ConfigurationProvider {
    public KeyPerFileConfigurationProvider(KeyPerFileConfigurationSource source);
    public virtual void Load();
    public virtual string ToString();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.KeyPerFile.KeyPerFileConfigurationSource : object {
    [NullableAttribute("2")]
public IFileProvider FileProvider { get; public set; }
    public string IgnorePrefix { get; public set; }
    public Func`2<string, bool> IgnoreCondition { get; public set; }
    public bool Optional { get; public set; }
    public bool ReloadOnChange { get; public set; }
    public int ReloadDelay { get; public set; }
    public string SectionDelimiter { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IFileProvider get_FileProvider();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_FileProvider(IFileProvider value);
    [CompilerGeneratedAttribute]
public string get_IgnorePrefix();
    [CompilerGeneratedAttribute]
public void set_IgnorePrefix(string value);
    [CompilerGeneratedAttribute]
public Func`2<string, bool> get_IgnoreCondition();
    [CompilerGeneratedAttribute]
public void set_IgnoreCondition(Func`2<string, bool> value);
    [CompilerGeneratedAttribute]
public bool get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(bool value);
    [CompilerGeneratedAttribute]
public bool get_ReloadOnChange();
    [CompilerGeneratedAttribute]
public void set_ReloadOnChange(bool value);
    [CompilerGeneratedAttribute]
public int get_ReloadDelay();
    [CompilerGeneratedAttribute]
public void set_ReloadDelay(int value);
    [CompilerGeneratedAttribute]
public string get_SectionDelimiter();
    [CompilerGeneratedAttribute]
public void set_SectionDelimiter(string value);
    public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.KeyPerFileConfigurationBuilderExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddKeyPerFile(IConfigurationBuilder builder, string directoryPath);
    [ExtensionAttribute]
public static IConfigurationBuilder AddKeyPerFile(IConfigurationBuilder builder, string directoryPath, bool optional);
    [ExtensionAttribute]
public static IConfigurationBuilder AddKeyPerFile(IConfigurationBuilder builder, string directoryPath, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddKeyPerFile(IConfigurationBuilder builder, Action`1<KeyPerFileConfigurationSource> configureSource);
}
