[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ChainedBuilderExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddConfiguration(IConfigurationBuilder configurationBuilder, IConfiguration config);
    [ExtensionAttribute]
public static IConfigurationBuilder AddConfiguration(IConfigurationBuilder configurationBuilder, IConfiguration config, bool shouldDisposeConfiguration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.ChainedConfigurationProvider : object {
    public IConfiguration Configuration { get; }
    public ChainedConfigurationProvider(ChainedConfigurationSource source);
    public IConfiguration get_Configuration();
    public sealed virtual void Dispose();
    public sealed virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual void Load();
    public sealed virtual void Set(string key, string value);
    public sealed virtual bool TryGet(string key, String& value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.ChainedConfigurationSource : object {
    public IConfiguration Configuration { get; public set; }
    public bool ShouldDisposeConfiguration { get; public set; }
    public IConfiguration get_Configuration();
    public void set_Configuration(IConfiguration value);
    public bool get_ShouldDisposeConfiguration();
    public void set_ShouldDisposeConfiguration(bool value);
    [NullableContextAttribute("1")]
public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.ConfigurationBuilder : object {
    public IDictionary`2<string, object> Properties { get; }
    public IList`1<IConfigurationSource> Sources { get; }
    public sealed virtual IDictionary`2<string, object> get_Properties();
    public sealed virtual IList`1<IConfigurationSource> get_Sources();
    public sealed virtual IConfigurationBuilder Add(IConfigurationSource source);
    public sealed virtual IConfigurationRoot Build();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.ConfigurationKeyComparer : object {
    public static ConfigurationKeyComparer Instance { get; }
    public static ConfigurationKeyComparer get_Instance();
    [NullableContextAttribute("2")]
public sealed virtual int Compare(string x, string y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Microsoft.Extensions.Configuration.ConfigurationManager : object {
    [NullableAttribute("2")]
public string Item { get; public set; }
    private IDictionary`2<string, object> Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties { get; }
    private IEnumerable`1<IConfigurationProvider> Microsoft.Extensions.Configuration.IConfigurationRoot.Providers { get; }
    public IList`1<IConfigurationSource> Sources { get; }
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    private sealed virtual override IDictionary`2<string, object> Microsoft.Extensions.Configuration.IConfigurationBuilder.get_Properties();
    private sealed virtual override IEnumerable`1<IConfigurationProvider> Microsoft.Extensions.Configuration.IConfigurationRoot.get_Providers();
    public sealed virtual IList`1<IConfigurationSource> get_Sources();
    public sealed virtual void Dispose();
    public sealed virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public sealed virtual IConfigurationSection GetSection(string key);
    private sealed virtual override IChangeToken Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken();
    private sealed virtual override IConfigurationBuilder Microsoft.Extensions.Configuration.IConfigurationBuilder.Add(IConfigurationSource source);
    private sealed virtual override IConfigurationRoot Microsoft.Extensions.Configuration.IConfigurationBuilder.Build();
    private sealed virtual override void Microsoft.Extensions.Configuration.IConfigurationRoot.Reload();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.ConfigurationProvider : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IDictionary`2<string, string> Data { get; protected set; }
    protected IDictionary`2<string, string> get_Data();
    protected void set_Data(IDictionary`2<string, string> value);
    public virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
    public sealed virtual IChangeToken GetReloadToken();
    public virtual void Load();
    protected void OnReload();
    public virtual void Set(string key, string value);
    public virtual string ToString();
    public virtual bool TryGet(string key, String& value);
}
public class Microsoft.Extensions.Configuration.ConfigurationReloadToken : object {
    public bool ActiveChangeCallbacks { get; }
    public bool HasChanged { get; }
    public sealed virtual bool get_ActiveChangeCallbacks();
    public sealed virtual bool get_HasChanged();
    public void OnReload();
    [NullableContextAttribute("1")]
public sealed virtual IDisposable RegisterChangeCallback(Action`1<object> callback, object state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Microsoft.Extensions.Configuration.ConfigurationRoot : object {
    [NullableAttribute("2")]
public string Item { get; public set; }
    public IEnumerable`1<IConfigurationProvider> Providers { get; }
    public ConfigurationRoot(IList`1<IConfigurationProvider> providers);
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual IEnumerable`1<IConfigurationProvider> get_Providers();
    public sealed virtual void Dispose();
    public sealed virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual IConfigurationSection GetSection(string key);
    public sealed virtual void Reload();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Microsoft.Extensions.Configuration.ConfigurationSection : object {
    [NullableAttribute("2")]
public string Item { get; public set; }
    public string Key { get; }
    public string Path { get; }
    [NullableAttribute("2")]
public string Value { get; public set; }
    public ConfigurationSection(IConfigurationRoot root, string path);
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual string get_Key();
    public sealed virtual string get_Path();
    [NullableContextAttribute("2")]
public sealed virtual string get_Value();
    [NullableContextAttribute("2")]
public sealed virtual void set_Value(string value);
    public sealed virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual IConfigurationSection GetSection(string key);
}
public class Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider : ConfigurationProvider {
    [NullableContextAttribute("1")]
public MemoryConfigurationProvider(MemoryConfigurationSource source);
    [NullableContextAttribute("1")]
public void Add(string key, string value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<string, string>> InitialData { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> get_InitialData();
    public void set_InitialData(IEnumerable`1<KeyValuePair`2<string, string>> value);
    [NullableContextAttribute("1")]
public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddInMemoryCollection(IConfigurationBuilder configurationBuilder);
    [ExtensionAttribute]
public static IConfigurationBuilder AddInMemoryCollection(IConfigurationBuilder configurationBuilder, IEnumerable`1<KeyValuePair`2<string, string>> initialData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.StreamConfigurationProvider : ConfigurationProvider {
    public StreamConfigurationSource Source { get; }
    public StreamConfigurationProvider(StreamConfigurationSource source);
    public StreamConfigurationSource get_Source();
    public virtual void Load();
    public abstract virtual void Load(Stream stream);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.StreamConfigurationSource : object {
    public Stream Stream { get; public set; }
    public Stream get_Stream();
    public void set_Stream(Stream value);
    [NullableContextAttribute("1")]
public abstract virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
