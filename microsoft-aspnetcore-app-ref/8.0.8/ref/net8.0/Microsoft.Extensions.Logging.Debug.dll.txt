[ProviderAliasAttribute("Debug")]
public class Microsoft.Extensions.Logging.Debug.DebugLoggerProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual ILogger CreateLogger(string name);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions : object {
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("This method is retained only for compatibility. The recommended alternative is AddDebug(this ILoggingBuilder builder).", "True")]
public static ILoggerFactory AddDebug(ILoggerFactory factory);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("This method is retained only for compatibility. The recommended alternative is AddDebug(this ILoggingBuilder builder).", "True")]
public static ILoggerFactory AddDebug(ILoggerFactory factory, LogLevel minLevel);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("This method is retained only for compatibility. The recommended alternative is AddDebug(this ILoggingBuilder builder).", "True")]
public static ILoggerFactory AddDebug(ILoggerFactory factory, Func`3<string, LogLevel, bool> filter);
    [ExtensionAttribute]
public static ILoggingBuilder AddDebug(ILoggingBuilder builder);
}
