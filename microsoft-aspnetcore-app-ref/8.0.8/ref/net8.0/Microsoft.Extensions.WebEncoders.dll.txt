internal static class Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper : object {
    public static void ThrowIfNull(object argument, string paramName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.EncoderServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddWebEncoders(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddWebEncoders(IServiceCollection services, Action`1<WebEncoderOptions> setupAction);
}
public class Microsoft.Extensions.WebEncoders.Testing.HtmlTestEncoder : HtmlEncoder {
    public int MaxOutputCharactersPerInputCharacter { get; }
    public virtual int get_MaxOutputCharactersPerInputCharacter();
    [NullableContextAttribute("1")]
public virtual string Encode(string value);
    [NullableContextAttribute("1")]
public virtual void Encode(TextWriter output, Char[] value, int startIndex, int characterCount);
    [NullableContextAttribute("1")]
public virtual void Encode(TextWriter output, string value, int startIndex, int characterCount);
    public virtual bool WillEncode(int unicodeScalar);
    public virtual int FindFirstCharacterToEncode(Char* text, int textLength);
    public virtual bool TryEncodeUnicodeScalar(int unicodeScalar, Char* buffer, int bufferLength, Int32& numberOfCharactersWritten);
}
public class Microsoft.Extensions.WebEncoders.Testing.JavaScriptTestEncoder : JavaScriptEncoder {
    public int MaxOutputCharactersPerInputCharacter { get; }
    public virtual int get_MaxOutputCharactersPerInputCharacter();
    [NullableContextAttribute("1")]
public virtual string Encode(string value);
    [NullableContextAttribute("1")]
public virtual void Encode(TextWriter output, Char[] value, int startIndex, int characterCount);
    [NullableContextAttribute("1")]
public virtual void Encode(TextWriter output, string value, int startIndex, int characterCount);
    public virtual bool WillEncode(int unicodeScalar);
    public virtual int FindFirstCharacterToEncode(Char* text, int textLength);
    public virtual bool TryEncodeUnicodeScalar(int unicodeScalar, Char* buffer, int bufferLength, Int32& numberOfCharactersWritten);
}
public class Microsoft.Extensions.WebEncoders.Testing.UrlTestEncoder : UrlEncoder {
    public int MaxOutputCharactersPerInputCharacter { get; }
    public virtual int get_MaxOutputCharactersPerInputCharacter();
    [NullableContextAttribute("1")]
public virtual string Encode(string value);
    [NullableContextAttribute("1")]
public virtual void Encode(TextWriter output, Char[] value, int startIndex, int characterCount);
    [NullableContextAttribute("1")]
public virtual void Encode(TextWriter output, string value, int startIndex, int characterCount);
    public virtual bool WillEncode(int unicodeScalar);
    public virtual int FindFirstCharacterToEncode(Char* text, int textLength);
    public virtual bool TryEncodeUnicodeScalar(int unicodeScalar, Char* buffer, int bufferLength, Int32& numberOfCharactersWritten);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Extensions.WebEncoders.WebEncoderOptions : object {
    public TextEncoderSettings TextEncoderSettings { get; public set; }
    [CompilerGeneratedAttribute]
public TextEncoderSettings get_TextEncoderSettings();
    [CompilerGeneratedAttribute]
public void set_TextEncoderSettings(TextEncoderSettings value);
}
