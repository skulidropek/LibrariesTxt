[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.HealthCheckApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, HealthCheckOptions options);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, int port);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, string port);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, int port, HealthCheckOptions options);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, string port, HealthCheckOptions options);
    private static void UseHealthChecksCore(IApplicationBuilder app, PathString path, Nullable`1<int> port, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.HealthCheckEndpointRouteBuilderExtensions : object {
    private static string DefaultDisplayName;
    [ExtensionAttribute]
public static IEndpointConventionBuilder MapHealthChecks(IEndpointRouteBuilder endpoints, string pattern);
    [ExtensionAttribute]
public static IEndpointConventionBuilder MapHealthChecks(IEndpointRouteBuilder endpoints, string pattern, HealthCheckOptions options);
    [UnconditionalSuppressMessageAttribute("Trimmer", "IL2026")]
private static IEndpointConventionBuilder MapHealthChecksCore(IEndpointRouteBuilder endpoints, string pattern, HealthCheckOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckMiddleware : object {
    private RequestDelegate _next;
    private HealthCheckOptions _healthCheckOptions;
    private HealthCheckService _healthCheckService;
    public HealthCheckMiddleware(RequestDelegate next, IOptions`1<HealthCheckOptions> healthCheckOptions, HealthCheckService healthCheckService);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckMiddleware/<InvokeAsync>d__4")]
public Task InvokeAsync(HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckOptions : object {
    [CompilerGeneratedAttribute]
private Func`2<HealthCheckRegistration, bool> <Predicate>k__BackingField;
    private IDictionary`2<HealthStatus, int> _resultStatusCodes;
    private static IReadOnlyDictionary`2<HealthStatus, int> DefaultStatusCodesMapping;
    [CompilerGeneratedAttribute]
private Func`3<HttpContext, HealthReport, Task> <ResponseWriter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCachingResponses>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HealthCheckRegistration, bool> Predicate { get; public set; }
    public IDictionary`2<HealthStatus, int> ResultStatusCodes { get; public set; }
    public Func`3<HttpContext, HealthReport, Task> ResponseWriter { get; public set; }
    public bool AllowCachingResponses { get; public set; }
    private static HealthCheckOptions();
    [CompilerGeneratedAttribute]
public Func`2<HealthCheckRegistration, bool> get_Predicate();
    [CompilerGeneratedAttribute]
public void set_Predicate(Func`2<HealthCheckRegistration, bool> value);
    public IDictionary`2<HealthStatus, int> get_ResultStatusCodes();
    public void set_ResultStatusCodes(IDictionary`2<HealthStatus, int> value);
    private static IDictionary`2<HealthStatus, int> ValidateStatusCodesMapping(IDictionary`2<HealthStatus, int> mapping);
    [CompilerGeneratedAttribute]
public Func`3<HttpContext, HealthReport, Task> get_ResponseWriter();
    [CompilerGeneratedAttribute]
public void set_ResponseWriter(Func`3<HttpContext, HealthReport, Task> value);
    [CompilerGeneratedAttribute]
public bool get_AllowCachingResponses();
    [CompilerGeneratedAttribute]
public void set_AllowCachingResponses(bool value);
}
internal static class Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckResponseWriters : object {
    private static Byte[] DegradedBytes;
    private static Byte[] HealthyBytes;
    private static Byte[] UnhealthyBytes;
    private static HealthCheckResponseWriters();
    public static Task WriteMinimalPlaintext(HttpContext httpContext, HealthReport result);
}
internal static class Microsoft.AspNetCore.Diagnostics.HealthChecks.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string UnableToFindServices { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_UnableToFindServices();
    internal static string FormatUnableToFindServices(object p0, object p1, object p2);
}
