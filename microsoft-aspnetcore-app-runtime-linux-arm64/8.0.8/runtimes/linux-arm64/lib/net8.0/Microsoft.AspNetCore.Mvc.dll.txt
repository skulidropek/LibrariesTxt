internal class Microsoft.AspNetCore.Mvc.HotReload.HotReloadService : object {
    private DefaultModelMetadataProvider _modelMetadataProvider;
    private DefaultControllerPropertyActivator _controllerPropertyActivator;
    private RazorHotReload _razorHotReload;
    private CancellationTokenSource _tokenSource;
    [CompilerGeneratedAttribute]
private static Action`1<Type[]> ClearCacheEvent;
    [CompilerGeneratedAttribute]
private static Action`1<Type[]> UpdateApplicationEvent;
    [NullableContextAttribute("1")]
public HotReloadService(IModelMetadataProvider modelMetadataProvider, IControllerPropertyActivator controllerPropertyActivator);
    [NullableContextAttribute("1")]
public HotReloadService(IModelMetadataProvider modelMetadataProvider, IControllerPropertyActivator controllerPropertyActivator, RazorHotReload razorHotReload);
    [CompilerGeneratedAttribute]
private static void add_ClearCacheEvent(Action`1<Type[]> value);
    [CompilerGeneratedAttribute]
private static void remove_ClearCacheEvent(Action`1<Type[]> value);
    [CompilerGeneratedAttribute]
private static void add_UpdateApplicationEvent(Action`1<Type[]> value);
    [CompilerGeneratedAttribute]
private static void remove_UpdateApplicationEvent(Action`1<Type[]> value);
    public static void ClearCache(Type[] changedTypes);
    public static void UpdateApplication(Type[] changedTypes);
    private sealed virtual override IChangeToken Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorChangeProvider.GetChangeToken();
    private void NotifyClearCache(Type[] changedTypes);
    private void NotifyUpdateApplication(Type[] changedTypes);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions : object {
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("MVC does not currently support trimming or native AOT.")]
public static IMvcBuilder AddMvc(IServiceCollection services);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("MVC does not currently support trimming or native AOT.")]
public static IMvcBuilder AddMvc(IServiceCollection services, Action`1<MvcOptions> setupAction);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("MVC does not currently support trimming or native AOT.")]
public static IMvcBuilder AddControllers(IServiceCollection services);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("MVC does not currently support trimming or native AOT.")]
public static IMvcBuilder AddControllers(IServiceCollection services, Action`1<MvcOptions> configure);
    private static IMvcCoreBuilder AddControllersCore(IServiceCollection services);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("MVC does not currently support trimming or native AOT.")]
public static IMvcBuilder AddControllersWithViews(IServiceCollection services);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("MVC does not currently support trimming or native AOT.")]
public static IMvcBuilder AddControllersWithViews(IServiceCollection services, Action`1<MvcOptions> configure);
    private static IMvcCoreBuilder AddControllersWithViewsCore(IServiceCollection services);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("Razor Pages does not currently support trimming or native AOT.")]
public static IMvcBuilder AddRazorPages(IServiceCollection services);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("Razor Pages does not currently support trimming or native AOT.")]
public static IMvcBuilder AddRazorPages(IServiceCollection services, Action`1<RazorPagesOptions> configure);
    private static IMvcCoreBuilder AddRazorPagesCore(IServiceCollection services);
    internal static void AddTagHelpersFrameworkParts(ApplicationPartManager partManager);
}
