internal static class Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper : object {
    public static void ThrowIfNull(object argument, string paramName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext : object {
    [CompilerGeneratedAttribute]
private HealthCheckRegistration <Registration>k__BackingField;
    public HealthCheckRegistration Registration { get; public set; }
    [CompilerGeneratedAttribute]
public HealthCheckRegistration get_Registration();
    [CompilerGeneratedAttribute]
public void set_Registration(HealthCheckRegistration value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration : object {
    private Func`2<IServiceProvider, IHealthCheck> _factory;
    private string _name;
    private TimeSpan _timeout;
    [CompilerGeneratedAttribute]
private HealthStatus <FailureStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Delay>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Period>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <Tags>k__BackingField;
    public Func`2<IServiceProvider, IHealthCheck> Factory { get; public set; }
    public HealthStatus FailureStatus { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public Nullable`1<TimeSpan> Delay { get; public set; }
    public Nullable`1<TimeSpan> Period { get; public set; }
    public string Name { get; public set; }
    public ISet`1<string> Tags { get; }
    public HealthCheckRegistration(string name, IHealthCheck instance, Nullable`1<HealthStatus> failureStatus, IEnumerable`1<string> tags);
    public HealthCheckRegistration(string name, IHealthCheck instance, Nullable`1<HealthStatus> failureStatus, IEnumerable`1<string> tags, Nullable`1<TimeSpan> timeout);
    public HealthCheckRegistration(string name, Func`2<IServiceProvider, IHealthCheck> factory, Nullable`1<HealthStatus> failureStatus, IEnumerable`1<string> tags);
    public HealthCheckRegistration(string name, Func`2<IServiceProvider, IHealthCheck> factory, Nullable`1<HealthStatus> failureStatus, IEnumerable`1<string> tags, Nullable`1<TimeSpan> timeout);
    public Func`2<IServiceProvider, IHealthCheck> get_Factory();
    public void set_Factory(Func`2<IServiceProvider, IHealthCheck> value);
    [CompilerGeneratedAttribute]
public HealthStatus get_FailureStatus();
    [CompilerGeneratedAttribute]
public void set_FailureStatus(HealthStatus value);
    public TimeSpan get_Timeout();
    public void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Delay();
    [CompilerGeneratedAttribute]
public void set_Delay(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Period();
    [CompilerGeneratedAttribute]
public void set_Period(Nullable`1<TimeSpan> value);
    public string get_Name();
    public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Tags();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult : ValueType {
    private static IReadOnlyDictionary`2<string, object> _emptyReadOnlyDictionary;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthStatus <Status>k__BackingField;
    [NullableAttribute("1")]
public IReadOnlyDictionary`2<string, object> Data { get; }
    public string Description { get; }
    public Exception Exception { get; }
    public HealthStatus Status { get; }
    public HealthCheckResult(HealthStatus status, string description, Exception exception, IReadOnlyDictionary`2<string, object> data);
    private static HealthCheckResult();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Data();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Description();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Exception get_Exception();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public HealthStatus get_Status();
    public static HealthCheckResult Healthy(string description, IReadOnlyDictionary`2<string, object> data);
    public static HealthCheckResult Degraded(string description, Exception exception, IReadOnlyDictionary`2<string, object> data);
    public static HealthCheckResult Unhealthy(string description, Exception exception, IReadOnlyDictionary`2<string, object> data);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Diagnostics.HealthChecks.HealthReport : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, HealthReportEntry> <Entries>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TotalDuration>k__BackingField;
    public IReadOnlyDictionary`2<string, HealthReportEntry> Entries { get; }
    public HealthStatus Status { get; }
    public TimeSpan TotalDuration { get; }
    public HealthReport(IReadOnlyDictionary`2<string, HealthReportEntry> entries, TimeSpan totalDuration);
    public HealthReport(IReadOnlyDictionary`2<string, HealthReportEntry> entries, HealthStatus status, TimeSpan totalDuration);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, HealthReportEntry> get_Entries();
    [CompilerGeneratedAttribute]
public HealthStatus get_Status();
    [CompilerGeneratedAttribute]
public TimeSpan get_TotalDuration();
    private static HealthStatus CalculateAggregateStatus(IEnumerable`1<HealthReportEntry> entries);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Diagnostics.HealthChecks.HealthReportEntry : ValueType {
    private static IReadOnlyDictionary`2<string, object> _emptyReadOnlyDictionary;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Tags>k__BackingField;
    [NullableAttribute("1")]
public IReadOnlyDictionary`2<string, object> Data { get; }
    public string Description { get; }
    public TimeSpan Duration { get; }
    public Exception Exception { get; }
    public HealthStatus Status { get; }
    [NullableAttribute("1")]
public IEnumerable`1<string> Tags { get; }
    public HealthReportEntry(HealthStatus status, string description, TimeSpan duration, Exception exception, IReadOnlyDictionary`2<string, object> data);
    public HealthReportEntry(HealthStatus status, string description, TimeSpan duration, Exception exception, IReadOnlyDictionary`2<string, object> data, IEnumerable`1<string> tags);
    private static HealthReportEntry();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Data();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Description();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public TimeSpan get_Duration();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Exception get_Exception();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public HealthStatus get_Status();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Tags();
}
public enum Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus : Enum {
    public int value__;
    public static HealthStatus Unhealthy;
    public static HealthStatus Degraded;
    public static HealthStatus Healthy;
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck {
    public abstract virtual Task`1<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheckPublisher {
    public abstract virtual Task PublishAsync(HealthReport report, CancellationToken cancellationToken);
}
