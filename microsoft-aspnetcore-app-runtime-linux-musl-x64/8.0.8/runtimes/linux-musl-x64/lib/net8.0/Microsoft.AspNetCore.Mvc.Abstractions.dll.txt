[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiresUnreferencedCodeAttribute("Uses unbounded Reflection to inspect property types.")]
internal class Microsoft.AspNetCore.Http.ParameterBindingMethodCache : object {
    private static MethodInfo ConvertValueTaskMethod;
    private static MethodInfo ConvertValueTaskOfNullableResultMethod;
    private static MethodInfo BindAsyncMethod;
    private static MethodInfo UriTryCreateMethod;
    private MethodInfo _enumTryParseMethod;
    private bool _throwOnInvalidMethod;
    private ConcurrentDictionary`2<Type, Func`3<ParameterExpression, Expression, Expression>> _stringMethodCallCache;
    private ConcurrentDictionary`2<Type, ValueTuple`2<Func`2<ParameterInfo, Expression>, int>> _bindAsyncMethodCallCache;
    private ConcurrentDictionary`2<Type, ValueTuple`2<ConstructorInfo, ConstructorParameter[]>> _constructorCache;
    public ParameterBindingMethodCache(bool throwOnInvalidMethod);
    public ParameterBindingMethodCache(bool preferNonGenericEnumParseOverload, bool throwOnInvalidMethod);
    private static ParameterBindingMethodCache();
    [RequiresUnreferencedCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
[RequiresDynamicCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
public bool HasTryParseMethod(Type type);
    [RequiresUnreferencedCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
[RequiresDynamicCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
public bool HasBindAsyncMethod(ParameterInfo parameter);
    [RequiresUnreferencedCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
[RequiresDynamicCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
public Func`3<ParameterExpression, Expression, Expression> FindTryParseMethod(Type type);
    [RequiresUnreferencedCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
[RequiresDynamicCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
public ValueTuple`2<Expression, int> FindBindAsyncMethod(ParameterInfo parameter);
    public ValueTuple`2<ConstructorInfo, ConstructorParameter[]> FindConstructor(Type type);
    private static ConstructorInfo GetConstructor(Type type);
    [RequiresDynamicCodeAttribute("MakeGenericMethod is possible used with ValueTypes and isn't compatible with AOT.")]
private static MethodInfo GetIBindableFromHttpContextMethod(Type type);
    private static ValueTask`1<TValue> BindAsync(HttpContext httpContext, ParameterInfo parameter);
    [RequiresUnreferencedCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
private static bool TryGetExplicitIParsableTryParseMethod(Type type, MethodInfo& methodInfo);
    [RequiresUnreferencedCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
private MethodInfo GetStaticMethodFromHierarchy(Type type, string name, Type[] parameterTypes, Func`2<MethodInfo, bool> validateReturnType);
    [RequiresUnreferencedCodeAttribute("Performs reflection on type hierarchy. This cannot be statically analyzed.")]
private static MethodInfo GetAnyMethodFromHierarchy(Type type, string name);
    private static MethodInfo GetEnumTryParseMethod(bool preferNonGenericEnumParseOverload);
    private static bool TryGetDateTimeTryParseMethod(Type type, MethodInfo& methodInfo);
    private static bool TryGetNumberStylesTryGetMethod(Type type, MethodInfo& method, Nullable`1& numberStyles);
    private static ValueTask`1<object> ConvertValueTask(ValueTask`1<T> typedValueTask);
    private static ValueTask`1<object> ConvertValueTaskOfNullableResult(ValueTask`1<Nullable`1<T>> typedValueTask);
    [CompilerGeneratedAttribute]
private Func`3<ParameterExpression, Expression, Expression> <FindTryParseMethod>g__Finder|14_0(Type type);
    [CompilerGeneratedAttribute]
internal static bool <FindTryParseMethod>g__ValidateReturnType|14_8(MethodInfo methodInfo);
    [CompilerGeneratedAttribute]
private ValueTuple`2<Func`2<ParameterInfo, Expression>, int> <FindBindAsyncMethod>g__Finder|15_0(Type nonNullableParameterType);
    [CompilerGeneratedAttribute]
internal static bool <FindBindAsyncMethod>g__ValidateReturnType|15_1(MethodInfo methodInfo);
    [CompilerGeneratedAttribute]
internal static ValueTuple`2<ConstructorInfo, ConstructorParameter[]> <FindConstructor>g__Finder|16_0(Type type);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static bool <GetStaticMethodFromHierarchy>g__IsMatch|21_0(MethodInfo method, <>c__DisplayClass21_0& );
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.ParameterBindingMethodCache/<<ConvertValueTask>g__ConvertAwaited|26_0>d`1")]
[CompilerGeneratedAttribute]
internal static ValueTask`1<object> <ConvertValueTask>g__ConvertAwaited|26_0(ValueTask`1<T> typedValueTask);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.ParameterBindingMethodCache/<<ConvertValueTaskOfNullableResult>g__ConvertAwaited|27_0>d`1")]
[CompilerGeneratedAttribute]
internal static ValueTask`1<object> <ConvertValueTaskOfNullableResult>g__ConvertAwaited|27_0(ValueTask`1<Nullable`1<T>> typedValueTask);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <RouteValues>k__BackingField;
    [CompilerGeneratedAttribute]
private AttributeRouteInfo <AttributeRouteInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IActionConstraintMetadata> <ActionConstraints>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<object> <EndpointMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ParameterDescriptor> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ParameterDescriptor> <BoundProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<FilterDescriptor> <FilterDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<object, object> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IFilterMetadata[] <CachedReusableFilters>k__BackingField;
    public string Id { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> RouteValues { get; public set; }
    [NullableAttribute("2")]
public AttributeRouteInfo AttributeRouteInfo { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<IActionConstraintMetadata> ActionConstraints { get; public set; }
    public IList`1<object> EndpointMetadata { get; public set; }
    public IList`1<ParameterDescriptor> Parameters { get; public set; }
    public IList`1<ParameterDescriptor> BoundProperties { get; public set; }
    public IList`1<FilterDescriptor> FilterDescriptors { get; public set; }
    [NullableAttribute("2")]
public string DisplayName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<object, object> Properties { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IFilterMetadata[] CachedReusableFilters { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_RouteValues();
    [CompilerGeneratedAttribute]
public void set_RouteValues(IDictionary`2<string, string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public AttributeRouteInfo get_AttributeRouteInfo();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_AttributeRouteInfo(AttributeRouteInfo value);
    [CompilerGeneratedAttribute]
public IList`1<IActionConstraintMetadata> get_ActionConstraints();
    [CompilerGeneratedAttribute]
public void set_ActionConstraints(IList`1<IActionConstraintMetadata> value);
    [CompilerGeneratedAttribute]
public IList`1<object> get_EndpointMetadata();
    [CompilerGeneratedAttribute]
public void set_EndpointMetadata(IList`1<object> value);
    [CompilerGeneratedAttribute]
public IList`1<ParameterDescriptor> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IList`1<ParameterDescriptor> value);
    [CompilerGeneratedAttribute]
public IList`1<ParameterDescriptor> get_BoundProperties();
    [CompilerGeneratedAttribute]
public void set_BoundProperties(IList`1<ParameterDescriptor> value);
    [CompilerGeneratedAttribute]
public IList`1<FilterDescriptor> get_FilterDescriptors();
    [CompilerGeneratedAttribute]
public void set_FilterDescriptors(IList`1<FilterDescriptor> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual string get_DisplayName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<object, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<object, object> value);
    [CompilerGeneratedAttribute]
internal IFilterMetadata[] get_CachedReusableFilters();
    [CompilerGeneratedAttribute]
internal void set_CachedReusableFilters(IFilterMetadata[] value);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T GetProperty(ActionDescriptor actionDescriptor);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void SetProperty(ActionDescriptor actionDescriptor, T value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext : object {
    [CompilerGeneratedAttribute]
private IList`1<ActionDescriptor> <Results>k__BackingField;
    public IList`1<ActionDescriptor> Results { get; }
    [CompilerGeneratedAttribute]
public IList`1<ActionDescriptor> get_Results();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext : object {
    [CompilerGeneratedAttribute]
private ActionContext <ActionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionInvoker <Result>k__BackingField;
    public ActionContext ActionContext { get; }
    [NullableAttribute("2")]
public IActionInvoker Result { get; public set; }
    public ActionInvokerProviderContext(ActionContext actionContext);
    [CompilerGeneratedAttribute]
public ActionContext get_ActionContext();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IActionInvoker get_Result();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Result(IActionInvoker value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Abstractions.IActionDescriptorProvider {
    public int Order { get; }
    public abstract virtual int get_Order();
    public abstract virtual void OnProvidersExecuting(ActionDescriptorProviderContext context);
    public abstract virtual void OnProvidersExecuted(ActionDescriptorProviderContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker {
    public abstract virtual Task InvokeAsync();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider {
    public int Order { get; }
    public abstract virtual int get_Order();
    public abstract virtual void OnProvidersExecuting(ActionInvokerProviderContext context);
    public abstract virtual void OnProvidersExecuted(ActionInvokerProviderContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ParameterType>k__BackingField;
    [CompilerGeneratedAttribute]
private BindingInfo <BindingInfo>k__BackingField;
    public string Name { get; public set; }
    public Type ParameterType { get; public set; }
    [NullableAttribute("2")]
public BindingInfo BindingInfo { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Type get_ParameterType();
    [CompilerGeneratedAttribute]
public void set_ParameterType(Type value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public BindingInfo get_BindingInfo();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_BindingInfo(BindingInfo value);
}
internal static class Microsoft.AspNetCore.Mvc.Abstractions.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentCannotBeNullOrEmpty { get; }
    internal static string ModelBindingContext_ModelMetadataMustBeSet { get; }
    internal static string Validation_InvalidFieldCannotBeReset { get; }
    internal static string Validation_InvalidFieldCannotBeReset_ToSkipped { get; }
    internal static string ModelStateDictionary_MaxModelStateErrors { get; }
    internal static string BindingSource_Body { get; }
    internal static string BindingSource_Custom { get; }
    internal static string BindingSource_Form { get; }
    internal static string BindingSource_Header { get; }
    internal static string BindingSource_Services { get; }
    internal static string BindingSource_ModelBinding { get; }
    internal static string BindingSource_Path { get; }
    internal static string BindingSource_Query { get; }
    internal static string BindingSource_CannotBeComposite { get; }
    internal static string BindingSource_MustBeFromRequest { get; }
    internal static string BindingSource_CannotBeGreedy { get; }
    internal static string BindingSource_MustBeGreedy { get; }
    internal static string BindingSource_Special { get; }
    internal static string BindingSource_FormFile { get; }
    internal static string BinderType_MustBeIModelBinder { get; }
    internal static string RecordTypeHasValidationOnProperties { get; }
    internal static string ModelStateDictionary_MaxModelStateDepth { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_ArgumentCannotBeNullOrEmpty();
    internal static string get_ModelBindingContext_ModelMetadataMustBeSet();
    internal static string get_Validation_InvalidFieldCannotBeReset();
    internal static string get_Validation_InvalidFieldCannotBeReset_ToSkipped();
    internal static string get_ModelStateDictionary_MaxModelStateErrors();
    internal static string get_BindingSource_Body();
    internal static string get_BindingSource_Custom();
    internal static string get_BindingSource_Form();
    internal static string get_BindingSource_Header();
    internal static string get_BindingSource_Services();
    internal static string get_BindingSource_ModelBinding();
    internal static string get_BindingSource_Path();
    internal static string get_BindingSource_Query();
    internal static string get_BindingSource_CannotBeComposite();
    internal static string FormatBindingSource_CannotBeComposite(object p0, object p1);
    internal static string get_BindingSource_MustBeFromRequest();
    internal static string FormatBindingSource_MustBeFromRequest(object p0, object p1);
    internal static string get_BindingSource_CannotBeGreedy();
    internal static string FormatBindingSource_CannotBeGreedy(object p0, object p1);
    internal static string get_BindingSource_MustBeGreedy();
    internal static string FormatBindingSource_MustBeGreedy(object p0, object p1);
    internal static string get_BindingSource_Special();
    internal static string get_BindingSource_FormFile();
    internal static string get_BinderType_MustBeIModelBinder();
    internal static string FormatBinderType_MustBeIModelBinder(object p0, object p1);
    internal static string get_RecordTypeHasValidationOnProperties();
    internal static string FormatRecordTypeHasValidationOnProperties(object p0, object p1);
    internal static string get_ModelStateDictionary_MaxModelStateDepth();
    internal static string FormatModelStateDictionary_MaxModelStateDepth(object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ActionSelectorCandidate> <Candidates>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionSelectorCandidate <CurrentCandidate>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteContext <RouteContext>k__BackingField;
    public IReadOnlyList`1<ActionSelectorCandidate> Candidates { get; public set; }
    public ActionSelectorCandidate CurrentCandidate { get; public set; }
    public RouteContext RouteContext { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ActionSelectorCandidate> get_Candidates();
    [CompilerGeneratedAttribute]
public void set_Candidates(IReadOnlyList`1<ActionSelectorCandidate> value);
    [CompilerGeneratedAttribute]
public ActionSelectorCandidate get_CurrentCandidate();
    [CompilerGeneratedAttribute]
public void set_CurrentCandidate(ActionSelectorCandidate value);
    [CompilerGeneratedAttribute]
public RouteContext get_RouteContext();
    [CompilerGeneratedAttribute]
public void set_RouteContext(RouteContext value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem : object {
    [CompilerGeneratedAttribute]
private IActionConstraint <Constraint>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionConstraintMetadata <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReusable>k__BackingField;
    [NullableAttribute("2")]
public IActionConstraint Constraint { get; public set; }
    public IActionConstraintMetadata Metadata { get; }
    public bool IsReusable { get; public set; }
    public ActionConstraintItem(IActionConstraintMetadata metadata);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IActionConstraint get_Constraint();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Constraint(IActionConstraint value);
    [CompilerGeneratedAttribute]
public IActionConstraintMetadata get_Metadata();
    [CompilerGeneratedAttribute]
public bool get_IsReusable();
    [CompilerGeneratedAttribute]
public void set_IsReusable(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext : object {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionDescriptor <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ActionConstraintItem> <Results>k__BackingField;
    public HttpContext HttpContext { get; }
    public ActionDescriptor Action { get; }
    public IList`1<ActionConstraintItem> Results { get; }
    public ActionConstraintProviderContext(HttpContext context, ActionDescriptor action, IList`1<ActionConstraintItem> items);
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public ActionDescriptor get_Action();
    [CompilerGeneratedAttribute]
public IList`1<ActionConstraintItem> get_Results();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate : ValueType {
    [CompilerGeneratedAttribute]
private ActionDescriptor <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IActionConstraint> <Constraints>k__BackingField;
    public ActionDescriptor Action { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<IActionConstraint> Constraints { get; }
    public ActionSelectorCandidate(ActionDescriptor action, IReadOnlyList`1<IActionConstraint> constraints);
    [CompilerGeneratedAttribute]
public ActionDescriptor get_Action();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IActionConstraint> get_Constraints();
}
public interface Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint {
    public int Order { get; }
    public abstract virtual int get_Order();
    [NullableContextAttribute("1")]
public abstract virtual bool Accept(ActionConstraintContext context);
}
public interface Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintFactory {
    public bool IsReusable { get; }
    public abstract virtual bool get_IsReusable();
    [NullableContextAttribute("1")]
public abstract virtual IActionConstraint CreateInstance(IServiceProvider services);
}
public interface Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata {
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintProvider {
    public int Order { get; }
    public abstract virtual int get_Order();
    public abstract virtual void OnProvidersExecuting(ActionConstraintProviderContext context);
    public abstract virtual void OnProvidersExecuted(ActionConstraintProviderContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ActionContext : object {
    [CompilerGeneratedAttribute]
private ActionDescriptor <ActionDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelStateDictionary <ModelState>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteData <RouteData>k__BackingField;
    public ActionDescriptor ActionDescriptor { get; public set; }
    public HttpContext HttpContext { get; public set; }
    public ModelStateDictionary ModelState { get; }
    public RouteData RouteData { get; public set; }
    public ActionContext(ActionContext actionContext);
    public ActionContext(HttpContext httpContext, RouteData routeData, ActionDescriptor actionDescriptor);
    public ActionContext(HttpContext httpContext, RouteData routeData, ActionDescriptor actionDescriptor, ModelStateDictionary modelState);
    [CompilerGeneratedAttribute]
public ActionDescriptor get_ActionDescriptor();
    [CompilerGeneratedAttribute]
public void set_ActionDescriptor(ActionDescriptor value);
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public void set_HttpContext(HttpContext value);
    [CompilerGeneratedAttribute]
public ModelStateDictionary get_ModelState();
    [CompilerGeneratedAttribute]
public RouteData get_RouteData();
    [CompilerGeneratedAttribute]
public void set_RouteData(RouteData value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{ActionDescriptor.DisplayName,nq}")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription : object {
    [CompilerGeneratedAttribute]
private ActionDescriptor <ActionDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ApiParameterDescription> <ParameterDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<object, object> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativePath>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ApiRequestFormat> <SupportedRequestFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ApiResponseType> <SupportedResponseTypes>k__BackingField;
    public ActionDescriptor ActionDescriptor { get; public set; }
    [NullableAttribute("2")]
public string GroupName { get; public set; }
    [NullableAttribute("2")]
public string HttpMethod { get; public set; }
    public IList`1<ApiParameterDescription> ParameterDescriptions { get; }
    public IDictionary`2<object, object> Properties { get; }
    [NullableAttribute("2")]
public string RelativePath { get; public set; }
    public IList`1<ApiRequestFormat> SupportedRequestFormats { get; }
    public IList`1<ApiResponseType> SupportedResponseTypes { get; }
    [CompilerGeneratedAttribute]
public ActionDescriptor get_ActionDescriptor();
    [CompilerGeneratedAttribute]
public void set_ActionDescriptor(ActionDescriptor value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_GroupName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_HttpMethod();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_HttpMethod(string value);
    [CompilerGeneratedAttribute]
public IList`1<ApiParameterDescription> get_ParameterDescriptions();
    [CompilerGeneratedAttribute]
public IDictionary`2<object, object> get_Properties();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RelativePath();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RelativePath(string value);
    [CompilerGeneratedAttribute]
public IList`1<ApiRequestFormat> get_SupportedRequestFormats();
    [CompilerGeneratedAttribute]
public IList`1<ApiResponseType> get_SupportedResponseTypes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ActionDescriptor> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ApiDescription> <Results>k__BackingField;
    public IReadOnlyList`1<ActionDescriptor> Actions { get; }
    public IList`1<ApiDescription> Results { get; }
    public ApiDescriptionProviderContext(IReadOnlyList`1<ActionDescriptor> actions);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ActionDescriptor> get_Actions();
    [CompilerGeneratedAttribute]
public IList`1<ApiDescription> get_Results();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription : object {
    [CompilerGeneratedAttribute]
private ModelMetadata <ModelMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiParameterRouteInfo <RouteInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private BindingSource <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private BindingInfo <BindingInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterDescriptor <ParameterDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private object <DefaultValue>k__BackingField;
    public ModelMetadata ModelMetadata { get; public set; }
    public string Name { get; public set; }
    [NullableAttribute("2")]
public ApiParameterRouteInfo RouteInfo { get; public set; }
    public BindingSource Source { get; public set; }
    [NullableAttribute("2")]
public BindingInfo BindingInfo { get; public set; }
    public Type Type { get; public set; }
    public ParameterDescriptor ParameterDescriptor { get; public set; }
    public bool IsRequired { get; public set; }
    [NullableAttribute("2")]
public object DefaultValue { get; public set; }
    [CompilerGeneratedAttribute]
public ModelMetadata get_ModelMetadata();
    [CompilerGeneratedAttribute]
public void set_ModelMetadata(ModelMetadata value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ApiParameterRouteInfo get_RouteInfo();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RouteInfo(ApiParameterRouteInfo value);
    [CompilerGeneratedAttribute]
public BindingSource get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(BindingSource value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public BindingInfo get_BindingInfo();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_BindingInfo(BindingInfo value);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public ParameterDescriptor get_ParameterDescriptor();
    [CompilerGeneratedAttribute]
public void set_ParameterDescriptor(ParameterDescriptor value);
    [CompilerGeneratedAttribute]
public bool get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_DefaultValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DefaultValue(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IRouteConstraint> <Constraints>k__BackingField;
    [CompilerGeneratedAttribute]
private object <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<IRouteConstraint> Constraints { get; public set; }
    public object DefaultValue { get; public set; }
    public bool IsOptional { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<IRouteConstraint> get_Constraints();
    [CompilerGeneratedAttribute]
public void set_Constraints(IEnumerable`1<IRouteConstraint> value);
    [CompilerGeneratedAttribute]
public object get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(object value);
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat : object {
    [CompilerGeneratedAttribute]
private IInputFormatter <Formatter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    public IInputFormatter Formatter { get; public set; }
    public string MediaType { get; public set; }
    [CompilerGeneratedAttribute]
public IInputFormatter get_Formatter();
    [CompilerGeneratedAttribute]
public void set_Formatter(IInputFormatter value);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
public void set_MediaType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat : object {
    [CompilerGeneratedAttribute]
private IOutputFormatter <Formatter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    public IOutputFormatter Formatter { get; public set; }
    public string MediaType { get; public set; }
    [CompilerGeneratedAttribute]
public IOutputFormatter get_Formatter();
    [CompilerGeneratedAttribute]
public void set_Formatter(IOutputFormatter value);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
public void set_MediaType(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType : object {
    [CompilerGeneratedAttribute]
private IList`1<ApiResponseFormat> <ApiResponseFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <ModelMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefaultResponse>k__BackingField;
    [NullableAttribute("1")]
public IList`1<ApiResponseFormat> ApiResponseFormats { get; public set; }
    public ModelMetadata ModelMetadata { get; public set; }
    public Type Type { get; public set; }
    public int StatusCode { get; public set; }
    public bool IsDefaultResponse { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<ApiResponseFormat> get_ApiResponseFormats();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ApiResponseFormats(IList`1<ApiResponseFormat> value);
    [CompilerGeneratedAttribute]
public ModelMetadata get_ModelMetadata();
    [CompilerGeneratedAttribute]
public void set_ModelMetadata(ModelMetadata value);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
public bool get_IsDefaultResponse();
    [CompilerGeneratedAttribute]
public void set_IsDefaultResponse(bool value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider {
    public int Order { get; }
    public abstract virtual int get_Order();
    public abstract virtual void OnProvidersExecuting(ApiDescriptionProviderContext context);
    public abstract virtual void OnProvidersExecuted(ApiDescriptionProviderContext context);
}
public interface Microsoft.AspNetCore.Mvc.Authorization.IAllowAnonymousFilter {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext : FilterContext {
    private Exception _exception;
    private ExceptionDispatchInfo _exceptionDispatchInfo;
    [CompilerGeneratedAttribute]
private bool <Canceled>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExceptionHandled>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    public bool Canceled { get; public set; }
    [NullableAttribute("1")]
public object Controller { get; }
    public Exception Exception { get; public set; }
    public ExceptionDispatchInfo ExceptionDispatchInfo { get; public set; }
    public bool ExceptionHandled { get; public set; }
    public IActionResult Result { get; public set; }
    [NullableContextAttribute("1")]
public ActionExecutedContext(ActionContext actionContext, IList`1<IFilterMetadata> filters, object controller);
    [CompilerGeneratedAttribute]
public virtual bool get_Canceled();
    [CompilerGeneratedAttribute]
public virtual void set_Canceled(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual object get_Controller();
    public virtual Exception get_Exception();
    public virtual void set_Exception(Exception value);
    public virtual ExceptionDispatchInfo get_ExceptionDispatchInfo();
    public virtual void set_ExceptionDispatchInfo(ExceptionDispatchInfo value);
    [CompilerGeneratedAttribute]
public virtual bool get_ExceptionHandled();
    [CompilerGeneratedAttribute]
public virtual void set_ExceptionHandled(bool value);
    [CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
    [CompilerGeneratedAttribute]
public virtual void set_Result(IActionResult value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext : FilterContext {
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <ActionArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Controller>k__BackingField;
    [NullableAttribute("2")]
public IActionResult Result { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> ActionArguments { get; }
    public object Controller { get; }
    public ActionExecutingContext(ActionContext actionContext, IList`1<IFilterMetadata> filters, IDictionary`2<string, object> actionArguments, object controller);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_Result(IActionResult value);
    [CompilerGeneratedAttribute]
public virtual IDictionary`2<string, object> get_ActionArguments();
    [CompilerGeneratedAttribute]
public virtual object get_Controller();
}
public class Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate : MulticastDelegate {
    public ActionExecutionDelegate(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task`1<ActionExecutedContext> Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual Task`1<ActionExecutedContext> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext : FilterContext {
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    public IActionResult Result { get; public set; }
    [NullableContextAttribute("1")]
public AuthorizationFilterContext(ActionContext actionContext, IList`1<IFilterMetadata> filters);
    [CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
    [CompilerGeneratedAttribute]
public virtual void set_Result(IActionResult value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.ExceptionContext : FilterContext {
    private Exception _exception;
    private ExceptionDispatchInfo _exceptionDispatchInfo;
    [CompilerGeneratedAttribute]
private bool <ExceptionHandled>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    [NullableAttribute("1")]
public Exception Exception { get; public set; }
    public ExceptionDispatchInfo ExceptionDispatchInfo { get; public set; }
    public bool ExceptionHandled { get; public set; }
    public IActionResult Result { get; public set; }
    [NullableContextAttribute("1")]
public ExceptionContext(ActionContext actionContext, IList`1<IFilterMetadata> filters);
    [NullableContextAttribute("1")]
public virtual Exception get_Exception();
    [NullableContextAttribute("1")]
public virtual void set_Exception(Exception value);
    public virtual ExceptionDispatchInfo get_ExceptionDispatchInfo();
    public virtual void set_ExceptionDispatchInfo(ExceptionDispatchInfo value);
    [CompilerGeneratedAttribute]
public virtual bool get_ExceptionHandled();
    [CompilerGeneratedAttribute]
public virtual void set_ExceptionHandled(bool value);
    [CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
    [CompilerGeneratedAttribute]
public virtual void set_Result(IActionResult value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.Filters.FilterContext : ActionContext {
    [CompilerGeneratedAttribute]
private IList`1<IFilterMetadata> <Filters>k__BackingField;
    public IList`1<IFilterMetadata> Filters { get; }
    public FilterContext(ActionContext actionContext, IList`1<IFilterMetadata> filters);
    [CompilerGeneratedAttribute]
public virtual IList`1<IFilterMetadata> get_Filters();
    public bool IsEffectivePolicy(TMetadata policy);
    public TMetadata FindEffectivePolicy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Filter = {Filter.ToString(),nq}, Order = {Order}")]
public class Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor : object {
    [CompilerGeneratedAttribute]
private IFilterMetadata <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Scope>k__BackingField;
    public IFilterMetadata Filter { get; }
    public int Order { get; public set; }
    public int Scope { get; }
    public FilterDescriptor(IFilterMetadata filter, int filterScope);
    [CompilerGeneratedAttribute]
public IFilterMetadata get_Filter();
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    [CompilerGeneratedAttribute]
public int get_Scope();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Filter = {Filter}")]
public class Microsoft.AspNetCore.Mvc.Filters.FilterItem : object {
    [CompilerGeneratedAttribute]
private FilterDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private IFilterMetadata <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReusable>k__BackingField;
    public FilterDescriptor Descriptor { get; }
    [NullableAttribute("2")]
public IFilterMetadata Filter { get; public set; }
    public bool IsReusable { get; public set; }
    public FilterItem(FilterDescriptor descriptor);
    public FilterItem(FilterDescriptor descriptor, IFilterMetadata filter);
    [CompilerGeneratedAttribute]
public FilterDescriptor get_Descriptor();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IFilterMetadata get_Filter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Filter(IFilterMetadata value);
    [CompilerGeneratedAttribute]
public bool get_IsReusable();
    [CompilerGeneratedAttribute]
public void set_IsReusable(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext : object {
    [CompilerGeneratedAttribute]
private ActionContext <ActionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<FilterItem> <Results>k__BackingField;
    public ActionContext ActionContext { get; public set; }
    public IList`1<FilterItem> Results { get; public set; }
    public FilterProviderContext(ActionContext actionContext, IList`1<FilterItem> items);
    [CompilerGeneratedAttribute]
public ActionContext get_ActionContext();
    [CompilerGeneratedAttribute]
public void set_ActionContext(ActionContext value);
    [CompilerGeneratedAttribute]
public IList`1<FilterItem> get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(IList`1<FilterItem> value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Filters.IActionFilter {
    public abstract virtual void OnActionExecuting(ActionExecutingContext context);
    public abstract virtual void OnActionExecuted(ActionExecutedContext context);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAlwaysRunResultFilter {
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter {
    [NullableContextAttribute("1")]
public abstract virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAsyncAlwaysRunResultFilter {
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter {
    [NullableContextAttribute("1")]
public abstract virtual Task OnAuthorizationAsync(AuthorizationFilterContext context);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter {
    [NullableContextAttribute("1")]
public abstract virtual Task OnExceptionAsync(ExceptionContext context);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter {
    [NullableContextAttribute("1")]
public abstract virtual Task OnResourceExecutionAsync(ResourceExecutingContext context, ResourceExecutionDelegate next);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter {
    [NullableContextAttribute("1")]
public abstract virtual Task OnResultExecutionAsync(ResultExecutingContext context, ResultExecutionDelegate next);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter {
    [NullableContextAttribute("1")]
public abstract virtual void OnAuthorization(AuthorizationFilterContext context);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter {
    [NullableContextAttribute("1")]
public abstract virtual void OnException(ExceptionContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Filters.IFilterContainer {
    public IFilterMetadata FilterDefinition { get; public set; }
    public abstract virtual IFilterMetadata get_FilterDefinition();
    public abstract virtual void set_FilterDefinition(IFilterMetadata value);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IFilterFactory {
    public bool IsReusable { get; }
    public abstract virtual bool get_IsReusable();
    [NullableContextAttribute("1")]
public abstract virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata {
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Filters.IFilterProvider {
    public int Order { get; }
    public abstract virtual int get_Order();
    public abstract virtual void OnProvidersExecuting(FilterProviderContext context);
    public abstract virtual void OnProvidersExecuted(FilterProviderContext context);
}
public interface Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter {
    public int Order { get; }
    public abstract virtual int get_Order();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Filters.IResourceFilter {
    public abstract virtual void OnResourceExecuting(ResourceExecutingContext context);
    public abstract virtual void OnResourceExecuted(ResourceExecutedContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Filters.IResultFilter {
    public abstract virtual void OnResultExecuting(ResultExecutingContext context);
    public abstract virtual void OnResultExecuted(ResultExecutedContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext : FilterContext {
    private Exception _exception;
    private ExceptionDispatchInfo _exceptionDispatchInfo;
    [CompilerGeneratedAttribute]
private bool <Canceled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExceptionHandled>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    public bool Canceled { get; public set; }
    public Exception Exception { get; public set; }
    public ExceptionDispatchInfo ExceptionDispatchInfo { get; public set; }
    public bool ExceptionHandled { get; public set; }
    public IActionResult Result { get; public set; }
    [NullableContextAttribute("1")]
public ResourceExecutedContext(ActionContext actionContext, IList`1<IFilterMetadata> filters);
    [CompilerGeneratedAttribute]
public virtual bool get_Canceled();
    [CompilerGeneratedAttribute]
public virtual void set_Canceled(bool value);
    public virtual Exception get_Exception();
    public virtual void set_Exception(Exception value);
    public virtual ExceptionDispatchInfo get_ExceptionDispatchInfo();
    public virtual void set_ExceptionDispatchInfo(ExceptionDispatchInfo value);
    [CompilerGeneratedAttribute]
public virtual bool get_ExceptionHandled();
    [CompilerGeneratedAttribute]
public virtual void set_ExceptionHandled(bool value);
    [CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
    [CompilerGeneratedAttribute]
public virtual void set_Result(IActionResult value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext : FilterContext {
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IValueProviderFactory> <ValueProviderFactories>k__BackingField;
    [NullableAttribute("2")]
public IActionResult Result { get; public set; }
    public IList`1<IValueProviderFactory> ValueProviderFactories { get; }
    public ResourceExecutingContext(ActionContext actionContext, IList`1<IFilterMetadata> filters, IList`1<IValueProviderFactory> valueProviderFactories);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_Result(IActionResult value);
    [CompilerGeneratedAttribute]
public IList`1<IValueProviderFactory> get_ValueProviderFactories();
}
public class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate : MulticastDelegate {
    public ResourceExecutionDelegate(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task`1<ResourceExecutedContext> Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual Task`1<ResourceExecutedContext> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext : FilterContext {
    private Exception _exception;
    private ExceptionDispatchInfo _exceptionDispatchInfo;
    [CompilerGeneratedAttribute]
private bool <Canceled>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExceptionHandled>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    public bool Canceled { get; public set; }
    [NullableAttribute("1")]
public object Controller { get; }
    public Exception Exception { get; public set; }
    public ExceptionDispatchInfo ExceptionDispatchInfo { get; public set; }
    public bool ExceptionHandled { get; public set; }
    [NullableAttribute("1")]
public IActionResult Result { get; }
    [NullableContextAttribute("1")]
public ResultExecutedContext(ActionContext actionContext, IList`1<IFilterMetadata> filters, IActionResult result, object controller);
    [CompilerGeneratedAttribute]
public virtual bool get_Canceled();
    [CompilerGeneratedAttribute]
public virtual void set_Canceled(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual object get_Controller();
    public virtual Exception get_Exception();
    public virtual void set_Exception(Exception value);
    public virtual ExceptionDispatchInfo get_ExceptionDispatchInfo();
    public virtual void set_ExceptionDispatchInfo(ExceptionDispatchInfo value);
    [CompilerGeneratedAttribute]
public virtual bool get_ExceptionHandled();
    [CompilerGeneratedAttribute]
public virtual void set_ExceptionHandled(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext : FilterContext {
    [CompilerGeneratedAttribute]
private object <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionResult <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Cancel>k__BackingField;
    public object Controller { get; }
    public IActionResult Result { get; public set; }
    public bool Cancel { get; public set; }
    public ResultExecutingContext(ActionContext actionContext, IList`1<IFilterMetadata> filters, IActionResult result, object controller);
    [CompilerGeneratedAttribute]
public virtual object get_Controller();
    [CompilerGeneratedAttribute]
public virtual IActionResult get_Result();
    [CompilerGeneratedAttribute]
public virtual void set_Result(IActionResult value);
    [CompilerGeneratedAttribute]
public virtual bool get_Cancel();
    [CompilerGeneratedAttribute]
public virtual void set_Cancel(bool value);
}
public class Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate : MulticastDelegate {
    public ResultExecutionDelegate(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task`1<ResultExecutedContext> Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual Task`1<ResultExecutedContext> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1 : Collection`1<TFormatter> {
    public FormatterCollection`1(IList`1<TFormatter> list);
    [NullableContextAttribute("0")]
public void RemoveType();
    public void RemoveType(Type formatterType);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter {
    public abstract virtual bool CanRead(InputFormatterContext context);
    public abstract virtual Task`1<InputFormatterResult> ReadAsync(InputFormatterContext context);
}
public interface Microsoft.AspNetCore.Mvc.Formatters.IInputFormatterExceptionPolicy {
    public InputFormatterExceptionPolicy ExceptionPolicy { get; }
    public abstract virtual InputFormatterExceptionPolicy get_ExceptionPolicy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext : object {
    [CompilerGeneratedAttribute]
private bool <TreatEmptyInputAsDefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModelName>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelStateDictionary <ModelState>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ModelType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<Stream, Encoding, TextReader> <ReaderFactory>k__BackingField;
    public bool TreatEmptyInputAsDefaultValue { get; }
    public HttpContext HttpContext { get; }
    public string ModelName { get; }
    public ModelStateDictionary ModelState { get; }
    public ModelMetadata Metadata { get; }
    public Type ModelType { get; }
    public Func`3<Stream, Encoding, TextReader> ReaderFactory { get; }
    public InputFormatterContext(HttpContext httpContext, string modelName, ModelStateDictionary modelState, ModelMetadata metadata, Func`3<Stream, Encoding, TextReader> readerFactory);
    public InputFormatterContext(HttpContext httpContext, string modelName, ModelStateDictionary modelState, ModelMetadata metadata, Func`3<Stream, Encoding, TextReader> readerFactory, bool treatEmptyInputAsDefaultValue);
    [CompilerGeneratedAttribute]
public bool get_TreatEmptyInputAsDefaultValue();
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public string get_ModelName();
    [CompilerGeneratedAttribute]
public ModelStateDictionary get_ModelState();
    [CompilerGeneratedAttribute]
public ModelMetadata get_Metadata();
    [CompilerGeneratedAttribute]
public Type get_ModelType();
    [CompilerGeneratedAttribute]
public Func`3<Stream, Encoding, TextReader> get_ReaderFactory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Formatters.InputFormatterException : Exception {
    public InputFormatterException(string message);
    public InputFormatterException(string message, Exception innerException);
}
public enum Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy : Enum {
    public int value__;
    public static InputFormatterExceptionPolicy AllExceptions;
    public static InputFormatterExceptionPolicy MalformedInputExceptions;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult : object {
    private static InputFormatterResult _failure;
    private static InputFormatterResult _noValue;
    private static Task`1<InputFormatterResult> _failureAsync;
    private static Task`1<InputFormatterResult> _noValueAsync;
    [CompilerGeneratedAttribute]
private bool <HasError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsModelSet>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Model>k__BackingField;
    public bool HasError { get; }
    public bool IsModelSet { get; }
    [NullableAttribute("2")]
public object Model { get; }
    private InputFormatterResult(bool hasError);
    private InputFormatterResult(object model);
    private static InputFormatterResult();
    [CompilerGeneratedAttribute]
public bool get_HasError();
    [CompilerGeneratedAttribute]
public bool get_IsModelSet();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Model();
    public static InputFormatterResult Failure();
    public static Task`1<InputFormatterResult> FailureAsync();
    public static InputFormatterResult Success(object model);
    public static Task`1<InputFormatterResult> SuccessAsync(object model);
    public static InputFormatterResult NoValue();
    public static Task`1<InputFormatterResult> NoValueAsync();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter {
    public abstract virtual bool CanWriteResult(OutputFormatterCanWriteContext context);
    public abstract virtual Task WriteAsync(OutputFormatterWriteContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext : object {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private StringSegment <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContentTypeIsServerDefined>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Object>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ObjectType>k__BackingField;
    [NullableAttribute("1")]
public HttpContext HttpContext { get; protected set; }
    public StringSegment ContentType { get; public set; }
    public bool ContentTypeIsServerDefined { get; public set; }
    public object Object { get; protected set; }
    public Type ObjectType { get; protected set; }
    [NullableContextAttribute("1")]
protected OutputFormatterCanWriteContext(HttpContext httpContext);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual void set_HttpContext(HttpContext value);
    [CompilerGeneratedAttribute]
public virtual StringSegment get_ContentType();
    [CompilerGeneratedAttribute]
public virtual void set_ContentType(StringSegment value);
    [CompilerGeneratedAttribute]
public virtual bool get_ContentTypeIsServerDefined();
    [CompilerGeneratedAttribute]
public virtual void set_ContentTypeIsServerDefined(bool value);
    [CompilerGeneratedAttribute]
public virtual object get_Object();
    [CompilerGeneratedAttribute]
protected virtual void set_Object(object value);
    [CompilerGeneratedAttribute]
public virtual Type get_ObjectType();
    [CompilerGeneratedAttribute]
protected virtual void set_ObjectType(Type value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext : OutputFormatterCanWriteContext {
    [CompilerGeneratedAttribute]
private Func`3<Stream, Encoding, TextWriter> <WriterFactory>k__BackingField;
    public Func`3<Stream, Encoding, TextWriter> WriterFactory { get; protected set; }
    public OutputFormatterWriteContext(HttpContext httpContext, Func`3<Stream, Encoding, TextWriter> writerFactory, Type objectType, object object);
    [CompilerGeneratedAttribute]
public virtual Func`3<Stream, Encoding, TextWriter> get_WriterFactory();
    [CompilerGeneratedAttribute]
protected virtual void set_WriterFactory(Func`3<Stream, Encoding, TextWriter> value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.IActionResult {
    public abstract virtual Task ExecuteResultAsync(ActionContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.IUrlHelper {
    public ActionContext ActionContext { get; }
    public abstract virtual ActionContext get_ActionContext();
    public abstract virtual string Action(UrlActionContext actionContext);
    [NullableContextAttribute("2")]
public abstract virtual string Content(string contentPath);
    [NullableContextAttribute("2")]
public abstract virtual bool IsLocalUrl(string url);
    public abstract virtual string RouteUrl(UrlRouteContext routeContext);
    [NullableContextAttribute("2")]
public abstract virtual string Link(string routeName, object values);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo : object {
    private Type _binderType;
    [CompilerGeneratedAttribute]
private BindingSource <BindingSource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BinderModelName>k__BackingField;
    [CompilerGeneratedAttribute]
private IPropertyFilterProvider <PropertyFilterProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<ActionContext, bool> <RequestPredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private EmptyBodyBehavior <EmptyBodyBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private object <ServiceKey>k__BackingField;
    public BindingSource BindingSource { get; public set; }
    public string BinderModelName { get; public set; }
    public Type BinderType { get; public set; }
    public IPropertyFilterProvider PropertyFilterProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ActionContext, bool> RequestPredicate { get; public set; }
    public EmptyBodyBehavior EmptyBodyBehavior { get; public set; }
    public object ServiceKey { get; public set; }
    [NullableContextAttribute("1")]
public BindingInfo(BindingInfo other);
    [CompilerGeneratedAttribute]
public BindingSource get_BindingSource();
    [CompilerGeneratedAttribute]
public void set_BindingSource(BindingSource value);
    [CompilerGeneratedAttribute]
public string get_BinderModelName();
    [CompilerGeneratedAttribute]
public void set_BinderModelName(string value);
    public Type get_BinderType();
    public void set_BinderType(Type value);
    [CompilerGeneratedAttribute]
public IPropertyFilterProvider get_PropertyFilterProvider();
    [CompilerGeneratedAttribute]
public void set_PropertyFilterProvider(IPropertyFilterProvider value);
    [CompilerGeneratedAttribute]
public Func`2<ActionContext, bool> get_RequestPredicate();
    [CompilerGeneratedAttribute]
public void set_RequestPredicate(Func`2<ActionContext, bool> value);
    [CompilerGeneratedAttribute]
public EmptyBodyBehavior get_EmptyBodyBehavior();
    [CompilerGeneratedAttribute]
public void set_EmptyBodyBehavior(EmptyBodyBehavior value);
    [CompilerGeneratedAttribute]
public object get_ServiceKey();
    [CompilerGeneratedAttribute]
public void set_ServiceKey(object value);
    [NullableContextAttribute("1")]
public static BindingInfo GetBindingInfo(IEnumerable`1<object> attributes);
    [NullableContextAttribute("1")]
public static BindingInfo GetBindingInfo(IEnumerable`1<object> attributes, ModelMetadata modelMetadata);
    [NullableContextAttribute("1")]
public bool TryApplyBindingInfo(ModelMetadata modelMetadata);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Source = {DisplayName}")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource : object {
    public static BindingSource Body;
    public static BindingSource Custom;
    public static BindingSource Form;
    public static BindingSource Header;
    public static BindingSource ModelBinding;
    public static BindingSource Path;
    public static BindingSource Query;
    public static BindingSource Services;
    public static BindingSource Special;
    public static BindingSource FormFile;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGreedy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFromRequest>k__BackingField;
    public string DisplayName { get; }
    public string Id { get; }
    public bool IsGreedy { get; }
    public bool IsFromRequest { get; }
    public BindingSource(string id, string displayName, bool isGreedy, bool isFromRequest);
    private static BindingSource();
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public bool get_IsGreedy();
    [CompilerGeneratedAttribute]
public bool get_IsFromRequest();
    public virtual bool CanAcceptDataFrom(BindingSource bindingSource);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(BindingSource other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public static bool op_Equality(BindingSource s1, BindingSource s2);
    [NullableContextAttribute("2")]
public static bool op_Inequality(BindingSource s1, BindingSource s2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.CompositeBindingSource : BindingSource {
    [CompilerGeneratedAttribute]
private IEnumerable`1<BindingSource> <BindingSources>k__BackingField;
    public IEnumerable`1<BindingSource> BindingSources { get; }
    private CompositeBindingSource(string id, string displayName, IEnumerable`1<BindingSource> bindingSources);
    public static CompositeBindingSource Create(IEnumerable`1<BindingSource> bindingSources, string displayName);
    [CompilerGeneratedAttribute]
public IEnumerable`1<BindingSource> get_BindingSources();
    public virtual bool CanAcceptDataFrom(BindingSource bindingSource);
}
public enum Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior : Enum {
    public int value__;
    public static EmptyBodyBehavior Default;
    public static EmptyBodyBehavior Allow;
    public static EmptyBodyBehavior Disallow;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName : ValueType {
    private Func`1<string> _name;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    public string Group { get; }
    public string Name { get; }
    public EnumGroupAndName(string group, string name);
    public EnumGroupAndName(string group, Func`1<string> name);
    [CompilerGeneratedAttribute]
public string get_Group();
    public string get_Name();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IBinderTypeProviderMetadata {
    public Type BinderType { get; }
    public abstract virtual Type get_BinderType();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceMetadata {
    public BindingSource BindingSource { get; }
    public abstract virtual BindingSource get_BindingSource();
}
internal interface Microsoft.AspNetCore.Mvc.ModelBinding.IConfigureEmptyBodyBehavior {
    public EmptyBodyBehavior EmptyBodyBehavior { get; }
    public abstract virtual EmptyBodyBehavior get_EmptyBodyBehavior();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder {
    public abstract virtual Task BindModelAsync(ModelBindingContext bindingContext);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider {
    public abstract virtual IModelBinder GetBinder(ModelBinderProviderContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider {
    public abstract virtual ModelMetadata GetMetadataForType(Type modelType);
    public abstract virtual IEnumerable`1<ModelMetadata> GetMetadataForProperties(Type modelType);
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IModelNameProvider {
    public string Name { get; }
    public abstract virtual string get_Name();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider {
    public Func`2<ModelMetadata, bool> PropertyFilter { get; }
    public abstract virtual Func`2<ModelMetadata, bool> get_PropertyFilter();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IRequestPredicateProvider {
    public Func`2<ActionContext, bool> RequestPredicate { get; }
    public abstract virtual Func`2<ActionContext, bool> get_RequestPredicate();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider {
    public abstract virtual bool ContainsPrefix(string prefix);
    public abstract virtual ValueProviderResult GetValue(string key);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory {
    public abstract virtual Task CreateValueProviderAsync(ValueProviderFactoryContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider : object {
    [CompilerGeneratedAttribute]
private Func`2<string, string> <MissingBindRequiredValueAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<string> <MissingKeyOrValueAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<string> <MissingRequestBodyRequiredValueAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <ValueMustNotBeNullAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<string, string, string> <AttemptedValueIsInvalidAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <NonPropertyAttemptedValueIsInvalidAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <UnknownValueIsInvalidAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<string> <NonPropertyUnknownValueIsInvalidAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <ValueIsInvalidAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <ValueMustBeANumberAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<string> <NonPropertyValueMustBeANumberAccessor>k__BackingField;
    public Func`2<string, string> MissingBindRequiredValueAccessor { get; }
    public Func`1<string> MissingKeyOrValueAccessor { get; }
    public Func`1<string> MissingRequestBodyRequiredValueAccessor { get; }
    public Func`2<string, string> ValueMustNotBeNullAccessor { get; }
    public Func`3<string, string, string> AttemptedValueIsInvalidAccessor { get; }
    public Func`2<string, string> NonPropertyAttemptedValueIsInvalidAccessor { get; }
    public Func`2<string, string> UnknownValueIsInvalidAccessor { get; }
    public Func`1<string> NonPropertyUnknownValueIsInvalidAccessor { get; }
    public Func`2<string, string> ValueIsInvalidAccessor { get; }
    public Func`2<string, string> ValueMustBeANumberAccessor { get; }
    public Func`1<string> NonPropertyValueMustBeANumberAccessor { get; }
    [CompilerGeneratedAttribute]
public virtual Func`2<string, string> get_MissingBindRequiredValueAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`1<string> get_MissingKeyOrValueAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`1<string> get_MissingRequestBodyRequiredValueAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`2<string, string> get_ValueMustNotBeNullAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`3<string, string, string> get_AttemptedValueIsInvalidAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`2<string, string> get_NonPropertyAttemptedValueIsInvalidAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`2<string, string> get_UnknownValueIsInvalidAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`1<string> get_NonPropertyUnknownValueIsInvalidAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`2<string, string> get_ValueIsInvalidAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`2<string, string> get_ValueMustBeANumberAccessor();
    [CompilerGeneratedAttribute]
public virtual Func`1<string> get_NonPropertyValueMustBeANumberAccessor();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity : ValueType {
    [CompilerGeneratedAttribute]
private Type <ContainerType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ModelType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <FieldInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private ConstructorInfo <ConstructorInfo>k__BackingField;
    public Type ContainerType { get; }
    [NullableAttribute("1")]
public Type ModelType { get; }
    public ModelMetadataKind MetadataKind { get; }
    public string Name { get; }
    private object FieldInfo { get; }
    public ParameterInfo ParameterInfo { get; }
    public PropertyInfo PropertyInfo { get; }
    public ConstructorInfo ConstructorInfo { get; }
    private ModelMetadataIdentity(Type modelType, string name, Type containerType, object fieldInfo, ConstructorInfo constructorInfo);
    [NullableContextAttribute("1")]
public static ModelMetadataIdentity ForType(Type modelType);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("This API is obsolete and may be removed in a future release. Please use the overload that takes a PropertyInfo object.")]
public static ModelMetadataIdentity ForProperty(Type modelType, string name, Type containerType);
    [NullableContextAttribute("1")]
public static ModelMetadataIdentity ForProperty(PropertyInfo propertyInfo, Type modelType, Type containerType);
    [NullableContextAttribute("1")]
public static ModelMetadataIdentity ForParameter(ParameterInfo parameter);
    [NullableContextAttribute("1")]
public static ModelMetadataIdentity ForParameter(ParameterInfo parameter, Type modelType);
    [NullableContextAttribute("1")]
public static ModelMetadataIdentity ForConstructor(ConstructorInfo constructor, Type modelType);
    [CompilerGeneratedAttribute]
public Type get_ContainerType();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Type get_ModelType();
    public ModelMetadataKind get_MetadataKind();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private object get_FieldInfo();
    public ParameterInfo get_ParameterInfo();
    public PropertyInfo get_PropertyInfo();
    [CompilerGeneratedAttribute]
public ConstructorInfo get_ConstructorInfo();
    public sealed virtual bool Equals(ModelMetadataIdentity other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public enum Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind : Enum {
    public int value__;
    public static ModelMetadataKind Type;
    public static ModelMetadataKind Property;
    public static ModelMetadataKind Parameter;
    public static ModelMetadataKind Constructor;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <Services>k__BackingField;
    public BindingInfo BindingInfo { get; }
    public ModelMetadata Metadata { get; }
    public IModelMetadataProvider MetadataProvider { get; }
    public IServiceProvider Services { get; }
    public abstract virtual IModelBinder CreateBinder(ModelMetadata metadata);
    public virtual IModelBinder CreateBinder(ModelMetadata metadata, BindingInfo bindingInfo);
    public abstract virtual BindingInfo get_BindingInfo();
    public abstract virtual ModelMetadata get_Metadata();
    public abstract virtual IModelMetadataProvider get_MetadataProvider();
    [CompilerGeneratedAttribute]
public virtual IServiceProvider get_Services();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext : object {
    [CompilerGeneratedAttribute]
private string <OriginalModelName>k__BackingField;
    public ActionContext ActionContext { get; public set; }
    [NullableAttribute("2")]
public string BinderModelName { get; public set; }
    [NullableAttribute("2")]
public BindingSource BindingSource { get; public set; }
    public string FieldName { get; public set; }
    public HttpContext HttpContext { get; }
    public bool IsTopLevelObject { get; public set; }
    [NullableAttribute("2")]
public object Model { get; public set; }
    public ModelMetadata ModelMetadata { get; public set; }
    public string ModelName { get; public set; }
    public string OriginalModelName { get; protected set; }
    public ModelStateDictionary ModelState { get; public set; }
    public Type ModelType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ModelMetadata, bool> PropertyFilter { get; public set; }
    public ValidationStateDictionary ValidationState { get; public set; }
    public IValueProvider ValueProvider { get; public set; }
    public ModelBindingResult Result { get; public set; }
    public abstract virtual ActionContext get_ActionContext();
    public abstract virtual void set_ActionContext(ActionContext value);
    [NullableContextAttribute("2")]
public abstract virtual string get_BinderModelName();
    [NullableContextAttribute("2")]
public abstract virtual void set_BinderModelName(string value);
    [NullableContextAttribute("2")]
public abstract virtual BindingSource get_BindingSource();
    [NullableContextAttribute("2")]
public abstract virtual void set_BindingSource(BindingSource value);
    public abstract virtual string get_FieldName();
    public abstract virtual void set_FieldName(string value);
    public virtual HttpContext get_HttpContext();
    public abstract virtual bool get_IsTopLevelObject();
    public abstract virtual void set_IsTopLevelObject(bool value);
    [NullableContextAttribute("2")]
public abstract virtual object get_Model();
    [NullableContextAttribute("2")]
public abstract virtual void set_Model(object value);
    public abstract virtual ModelMetadata get_ModelMetadata();
    public abstract virtual void set_ModelMetadata(ModelMetadata value);
    public abstract virtual string get_ModelName();
    public abstract virtual void set_ModelName(string value);
    [CompilerGeneratedAttribute]
public string get_OriginalModelName();
    [CompilerGeneratedAttribute]
protected void set_OriginalModelName(string value);
    public abstract virtual ModelStateDictionary get_ModelState();
    public abstract virtual void set_ModelState(ModelStateDictionary value);
    public virtual Type get_ModelType();
    public abstract virtual Func`2<ModelMetadata, bool> get_PropertyFilter();
    public abstract virtual void set_PropertyFilter(Func`2<ModelMetadata, bool> value);
    public abstract virtual ValidationStateDictionary get_ValidationState();
    public abstract virtual void set_ValidationState(ValidationStateDictionary value);
    public abstract virtual IValueProvider get_ValueProvider();
    public abstract virtual void set_ValueProvider(IValueProvider value);
    public abstract virtual ModelBindingResult get_Result();
    public abstract virtual void set_Result(ModelBindingResult value);
    public abstract virtual NestedScope EnterNestedScope(ModelMetadata modelMetadata, string fieldName, string modelName, object model);
    public abstract virtual NestedScope EnterNestedScope();
    protected abstract virtual void ExitNestedScope();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult : ValueType {
    [CompilerGeneratedAttribute]
private object <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsModelSet>k__BackingField;
    public object Model { get; }
    public bool IsModelSet { get; }
    private ModelBindingResult(object model, bool isModelSet);
    public static ModelBindingResult Failed();
    public static ModelBindingResult Success(object model);
    [CompilerGeneratedAttribute]
public object get_Model();
    [CompilerGeneratedAttribute]
public bool get_IsModelSet();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(ModelBindingResult other);
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(ModelBindingResult x, ModelBindingResult y);
    public static bool op_Inequality(ModelBindingResult x, ModelBindingResult y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ModelError : object {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [NullableAttribute("2")]
public Exception Exception { get; }
    public string ErrorMessage { get; }
    public ModelError(Exception exception);
    public ModelError(Exception exception, string errorMessage);
    [NullableContextAttribute("2")]
public ModelError(string errorMessage);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ModelErrorCollection : Collection`1<ModelError> {
    public void Add(Exception exception);
    public void Add(string errorMessage);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
public abstract class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata : object {
    public static int DefaultOrder;
    private static ParameterBindingMethodCache ParameterBindingMethodCache;
    private Nullable`1<int> _hashCode;
    private IReadOnlyList`1<ModelMetadata> _boundProperties;
    private IReadOnlyDictionary`2<ModelMetadata, ModelMetadata> _parameterMapping;
    private IReadOnlyDictionary`2<ModelMetadata, ModelMetadata> _boundConstructorPropertyMapping;
    private Exception _recordTypeValidatorsOnPropertiesError;
    private bool _recordTypeConstructorDetailsCalculated;
    [CompilerGeneratedAttribute]
private ModelMetadataIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <BoundConstructor>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ModelMetadata> <BoundConstructorParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HasValidators>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ElementType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNullableValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCollectionType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnumerableType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReferenceOrNullableType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <UnderlyingOrModelType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsParseableType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConvertibleType>k__BackingField;
    [CompilerGeneratedAttribute]
private NullabilityState <NullabilityState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationModelName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasDefaultValue>k__BackingField;
    public Type ContainerType { get; }
    public ModelMetadata ContainerMetadata { get; }
    public ModelMetadataKind MetadataKind { get; }
    [NullableAttribute("1")]
public Type ModelType { get; }
    public string Name { get; }
    public string ParameterName { get; }
    public string PropertyName { get; }
    protected internal ModelMetadataIdentity Identity { get; }
    [NullableAttribute("1")]
public IReadOnlyDictionary`2<object, object> AdditionalValues { get; }
    [NullableAttribute("1")]
public ModelPropertyCollection Properties { get; }
    [NullableAttribute("1")]
internal IReadOnlyList`1<ModelMetadata> BoundProperties { get; }
    [NullableAttribute("1")]
internal IReadOnlyDictionary`2<ModelMetadata, ModelMetadata> BoundConstructorParameterMapping { get; }
    [NullableAttribute("1")]
internal IReadOnlyDictionary`2<ModelMetadata, ModelMetadata> BoundConstructorPropertyMapping { get; }
    public ModelMetadata BoundConstructor { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<ModelMetadata> BoundConstructorParameters { get; }
    public string BinderModelName { get; }
    public Type BinderType { get; }
    public BindingSource BindingSource { get; }
    public bool ConvertEmptyStringToNull { get; }
    public string DataTypeName { get; }
    public string Description { get; }
    public string DisplayFormatString { get; }
    public string DisplayName { get; }
    public string EditFormatString { get; }
    public ModelMetadata ElementMetadata { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<EnumGroupAndName, string>> EnumGroupedDisplayNamesAndValues { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, string> EnumNamesAndValues { get; }
    public bool HasNonDefaultEditFormat { get; }
    public bool HtmlEncode { get; }
    public bool HideSurroundingHtml { get; }
    public bool IsBindingAllowed { get; }
    public bool IsBindingRequired { get; }
    public bool IsEnum { get; }
    public bool IsFlagsEnum { get; }
    public bool IsReadOnly { get; }
    public bool IsRequired { get; }
    [NullableAttribute("1")]
public ModelBindingMessageProvider ModelBindingMessageProvider { get; }
    public int Order { get; }
    public string Placeholder { get; }
    public string NullDisplayText { get; }
    public IPropertyFilterProvider PropertyFilterProvider { get; }
    public bool ShowForDisplay { get; }
    public bool ShowForEdit { get; }
    public string SimpleDisplayProperty { get; }
    public string TemplateHint { get; }
    public IPropertyValidationFilter PropertyValidationFilter { get; }
    public bool ValidateChildren { get; }
    public Nullable`1<bool> HasValidators { get; }
    [NullableAttribute("1")]
public IReadOnlyList`1<object> ValidatorMetadata { get; }
    public Type ElementType { get; private set; }
    public bool IsComplexType { get; }
    public bool IsNullableValueType { get; private set; }
    public bool IsCollectionType { get; private set; }
    public bool IsEnumerableType { get; private set; }
    public bool IsReferenceOrNullableType { get; private set; }
    [NullableAttribute("1")]
public Type UnderlyingOrModelType { get; private set; }
    internal bool IsParseableType { get; private set; }
    internal bool IsConvertibleType { get; private set; }
    internal NullabilityState NullabilityState { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<object, object> PropertyGetter { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<object, object> PropertySetter { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<Object[], object> BoundConstructorInvoker { get; }
    internal bool PropertyHasValidators { get; }
    internal string ValidationModelName { get; }
    internal bool HasDefaultValue { get; private set; }
    protected ModelMetadata(ModelMetadataIdentity identity);
    private static ModelMetadata();
    public Type get_ContainerType();
    public virtual ModelMetadata get_ContainerMetadata();
    public ModelMetadataKind get_MetadataKind();
    [NullableContextAttribute("1")]
public Type get_ModelType();
    public string get_Name();
    public string get_ParameterName();
    public string get_PropertyName();
    [CompilerGeneratedAttribute]
protected internal ModelMetadataIdentity get_Identity();
    [NullableContextAttribute("1")]
public abstract virtual IReadOnlyDictionary`2<object, object> get_AdditionalValues();
    [NullableContextAttribute("1")]
public abstract virtual ModelPropertyCollection get_Properties();
    [NullableContextAttribute("1")]
internal IReadOnlyList`1<ModelMetadata> get_BoundProperties();
    [NullableContextAttribute("1")]
internal IReadOnlyDictionary`2<ModelMetadata, ModelMetadata> get_BoundConstructorParameterMapping();
    [NullableContextAttribute("1")]
internal IReadOnlyDictionary`2<ModelMetadata, ModelMetadata> get_BoundConstructorPropertyMapping();
    [CompilerGeneratedAttribute]
public virtual ModelMetadata get_BoundConstructor();
    [CompilerGeneratedAttribute]
public virtual IReadOnlyList`1<ModelMetadata> get_BoundConstructorParameters();
    public abstract virtual string get_BinderModelName();
    public abstract virtual Type get_BinderType();
    public abstract virtual BindingSource get_BindingSource();
    public abstract virtual bool get_ConvertEmptyStringToNull();
    public abstract virtual string get_DataTypeName();
    public abstract virtual string get_Description();
    public abstract virtual string get_DisplayFormatString();
    public abstract virtual string get_DisplayName();
    public abstract virtual string get_EditFormatString();
    public abstract virtual ModelMetadata get_ElementMetadata();
    public abstract virtual IEnumerable`1<KeyValuePair`2<EnumGroupAndName, string>> get_EnumGroupedDisplayNamesAndValues();
    public abstract virtual IReadOnlyDictionary`2<string, string> get_EnumNamesAndValues();
    public abstract virtual bool get_HasNonDefaultEditFormat();
    public abstract virtual bool get_HtmlEncode();
    public abstract virtual bool get_HideSurroundingHtml();
    public abstract virtual bool get_IsBindingAllowed();
    public abstract virtual bool get_IsBindingRequired();
    public abstract virtual bool get_IsEnum();
    public abstract virtual bool get_IsFlagsEnum();
    public abstract virtual bool get_IsReadOnly();
    public abstract virtual bool get_IsRequired();
    [NullableContextAttribute("1")]
public abstract virtual ModelBindingMessageProvider get_ModelBindingMessageProvider();
    public abstract virtual int get_Order();
    public abstract virtual string get_Placeholder();
    public abstract virtual string get_NullDisplayText();
    public abstract virtual IPropertyFilterProvider get_PropertyFilterProvider();
    public abstract virtual bool get_ShowForDisplay();
    public abstract virtual bool get_ShowForEdit();
    public abstract virtual string get_SimpleDisplayProperty();
    public abstract virtual string get_TemplateHint();
    public virtual IPropertyValidationFilter get_PropertyValidationFilter();
    public abstract virtual bool get_ValidateChildren();
    [CompilerGeneratedAttribute]
public virtual Nullable`1<bool> get_HasValidators();
    [NullableContextAttribute("1")]
public abstract virtual IReadOnlyList`1<object> get_ValidatorMetadata();
    [CompilerGeneratedAttribute]
public Type get_ElementType();
    [CompilerGeneratedAttribute]
private void set_ElementType(Type value);
    public bool get_IsComplexType();
    [CompilerGeneratedAttribute]
public bool get_IsNullableValueType();
    [CompilerGeneratedAttribute]
private void set_IsNullableValueType(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCollectionType();
    [CompilerGeneratedAttribute]
private void set_IsCollectionType(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsEnumerableType();
    [CompilerGeneratedAttribute]
private void set_IsEnumerableType(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsReferenceOrNullableType();
    [CompilerGeneratedAttribute]
private void set_IsReferenceOrNullableType(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Type get_UnderlyingOrModelType();
    [CompilerGeneratedAttribute]
private void set_UnderlyingOrModelType(Type value);
    [CompilerGeneratedAttribute]
internal virtual bool get_IsParseableType();
    [CompilerGeneratedAttribute]
private void set_IsParseableType(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsConvertibleType();
    [CompilerGeneratedAttribute]
private void set_IsConvertibleType(bool value);
    [CompilerGeneratedAttribute]
internal NullabilityState get_NullabilityState();
    [CompilerGeneratedAttribute]
internal void set_NullabilityState(NullabilityState value);
    public abstract virtual Func`2<object, object> get_PropertyGetter();
    public abstract virtual Action`2<object, object> get_PropertySetter();
    public virtual Func`2<Object[], object> get_BoundConstructorInvoker();
    internal virtual bool get_PropertyHasValidators();
    [CompilerGeneratedAttribute]
internal virtual string get_ValidationModelName();
    [CompilerGeneratedAttribute]
internal bool get_HasDefaultValue();
    [CompilerGeneratedAttribute]
private void set_HasDefaultValue(bool value);
    internal void ThrowIfRecordTypeHasValidationOnProperties();
    [NullableContextAttribute("1")]
internal static Func`3<ParameterExpression, Expression, Expression> FindTryParseMethod(Type modelType);
    [MemberNotNullAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private void CalculateRecordTypeConstructorDetails();
    [NullableContextAttribute("1")]
public string GetDisplayName();
    public sealed virtual bool Equals(ModelMetadata other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private void InitializeTypeInformation();
    private string DebuggerToString();
    [NullableContextAttribute("1")]
public virtual ModelMetadata GetMetadataForType(Type modelType);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<ModelMetadata> GetMetadataForProperties(Type modelType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider : object {
    public abstract virtual IEnumerable`1<ModelMetadata> GetMetadataForProperties(Type modelType);
    public abstract virtual ModelMetadata GetMetadataForType(Type modelType);
    public abstract virtual ModelMetadata GetMetadataForParameter(ParameterInfo parameter);
    public virtual ModelMetadata GetMetadataForParameter(ParameterInfo parameter, Type modelType);
    public virtual ModelMetadata GetMetadataForProperty(PropertyInfo propertyInfo, Type modelType);
    public virtual ModelMetadata GetMetadataForConstructor(ConstructorInfo constructor, Type modelType);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ModelPropertyCollection : ReadOnlyCollection`1<ModelMetadata> {
    [NullableAttribute("2")]
public ModelMetadata Item { get; }
    public ModelPropertyCollection(IEnumerable`1<ModelMetadata> properties);
    public ModelMetadata get_Item(string propertyName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Entries = {Count}, IsValid = {IsValid}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary/ModelStateDictionaryDebugView")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary : object {
    public static int DefaultMaxAllowedErrors;
    internal static int DefaultMaxRecursionDepth;
    private static char DelimiterDot;
    private static char DelimiterOpen;
    private ModelStateNode _root;
    private int _maxAllowedErrors;
    [CompilerGeneratedAttribute]
private int <ErrorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasRecordedMaxModelError>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxValidationDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxStateDepth>k__BackingField;
    public ModelStateEntry Root { get; }
    public int MaxAllowedErrors { get; public set; }
    public bool HasReachedMaxErrors { get; }
    public int ErrorCount { get; private set; }
    public int Count { get; private set; }
    public KeyEnumerable Keys { get; }
    private IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys { get; }
    public ValueEnumerable Values { get; }
    private IEnumerable`1<ModelStateEntry> System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values { get; }
    public bool IsValid { get; }
    public ModelValidationState ValidationState { get; }
    [NullableAttribute("2")]
public ModelStateEntry Item { get; }
    private bool HasRecordedMaxModelError { get; private set; }
    internal Nullable`1<int> MaxValidationDepth { get; internal set; }
    internal Nullable`1<int> MaxStateDepth { get; internal set; }
    public ModelStateDictionary(int maxAllowedErrors);
    private ModelStateDictionary(int maxAllowedErrors, int maxValidationDepth, int maxStateDepth);
    public ModelStateDictionary(ModelStateDictionary dictionary);
    private static ModelStateDictionary();
    public ModelStateEntry get_Root();
    public int get_MaxAllowedErrors();
    public void set_MaxAllowedErrors(int value);
    public bool get_HasReachedMaxErrors();
    [CompilerGeneratedAttribute]
public int get_ErrorCount();
    [CompilerGeneratedAttribute]
private void set_ErrorCount(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Count();
    [CompilerGeneratedAttribute]
private void set_Count(int value);
    public KeyEnumerable get_Keys();
    private sealed virtual override IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.get_Keys();
    public ValueEnumerable get_Values();
    private sealed virtual override IEnumerable`1<ModelStateEntry> System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.get_Values();
    public bool get_IsValid();
    public ModelValidationState get_ValidationState();
    public sealed virtual ModelStateEntry get_Item(string key);
    [CompilerGeneratedAttribute]
private bool get_HasRecordedMaxModelError();
    [CompilerGeneratedAttribute]
private void set_HasRecordedMaxModelError(bool value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_MaxValidationDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxValidationDepth(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_MaxStateDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxStateDepth(Nullable`1<int> value);
    public bool TryAddModelException(string key, Exception exception);
    public void AddModelError(string key, Exception exception, ModelMetadata metadata);
    public bool TryAddModelError(string key, Exception exception, ModelMetadata metadata);
    public void AddModelError(string key, string errorMessage);
    public bool TryAddModelError(string key, string errorMessage);
    public ModelValidationState GetFieldValidationState(string key);
    public ModelValidationState GetValidationState(string key);
    public void MarkFieldValid(string key);
    public void MarkFieldSkipped(string key);
    public void Merge(ModelStateDictionary dictionary);
    [NullableContextAttribute("2")]
public void SetModelValue(string key, object rawValue, string attemptedValue);
    public void SetModelValue(string key, ValueProviderResult valueProviderResult);
    public void ClearValidationState(string key);
    private ModelStateNode GetNode(string key);
    private ModelStateNode GetOrAddNode(string key);
    private static StringSegment FindNext(string key, MatchResult& currentMatch);
    private Nullable`1<ModelValidationState> GetValidity(ModelStateNode node, int currentDepth);
    private void EnsureMaxErrorsReachedRecorded();
    private void AddModelErrorCore(string key, Exception exception);
    public void Clear();
    public sealed virtual bool ContainsKey(string key);
    public bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, ModelStateEntry& value);
    public Enumerator GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, ModelStateEntry>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public static bool StartsWithPrefix(string prefix, string key);
    public PrefixEnumerable FindKeysWithPrefix(string prefix);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry : object {
    private ModelErrorCollection _errors;
    [CompilerGeneratedAttribute]
private object <RawValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AttemptedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelValidationState <ValidationState>k__BackingField;
    public object RawValue { get; public set; }
    public string AttemptedValue { get; public set; }
    [NullableAttribute("1")]
public ModelErrorCollection Errors { get; }
    public ModelValidationState ValidationState { get; public set; }
    public bool IsContainerNode { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<ModelStateEntry> Children { get; }
    [CompilerGeneratedAttribute]
public object get_RawValue();
    [CompilerGeneratedAttribute]
public void set_RawValue(object value);
    [CompilerGeneratedAttribute]
public string get_AttemptedValue();
    [CompilerGeneratedAttribute]
public void set_AttemptedValue(string value);
    [NullableContextAttribute("1")]
public ModelErrorCollection get_Errors();
    [CompilerGeneratedAttribute]
public ModelValidationState get_ValidationState();
    [CompilerGeneratedAttribute]
public void set_ValidationState(ModelValidationState value);
    public abstract virtual bool get_IsContainerNode();
    [NullableContextAttribute("1")]
public abstract virtual ModelStateEntry GetModelStateForProperty(string propertyName);
    public abstract virtual IReadOnlyList`1<ModelStateEntry> get_Children();
}
public enum Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState : Enum {
    public int value__;
    public static ModelValidationState Unvalidated;
    public static ModelValidationState Invalid;
    public static ModelValidationState Valid;
    public static ModelValidationState Skipped;
}
public class Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException : Exception {
    [NullableContextAttribute("1")]
public TooManyModelErrorsException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext : ModelValidationContextBase {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Attributes>k__BackingField;
    public IDictionary`2<string, string> Attributes { get; }
    public ClientModelValidationContext(ActionContext actionContext, ModelMetadata metadata, IModelMetadataProvider metadataProvider, IDictionary`2<string, string> attributes);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Attributes();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem : object {
    [CompilerGeneratedAttribute]
private object <ValidatorMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IClientModelValidator <Validator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReusable>k__BackingField;
    public object ValidatorMetadata { get; }
    public IClientModelValidator Validator { get; public set; }
    public bool IsReusable { get; public set; }
    public ClientValidatorItem(object validatorMetadata);
    [CompilerGeneratedAttribute]
public object get_ValidatorMetadata();
    [CompilerGeneratedAttribute]
public IClientModelValidator get_Validator();
    [CompilerGeneratedAttribute]
public void set_Validator(IClientModelValidator value);
    [CompilerGeneratedAttribute]
public bool get_IsReusable();
    [CompilerGeneratedAttribute]
public void set_IsReusable(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext : object {
    [CompilerGeneratedAttribute]
private ModelMetadata <ModelMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ClientValidatorItem> <Results>k__BackingField;
    public ModelMetadata ModelMetadata { get; }
    public IReadOnlyList`1<object> ValidatorMetadata { get; }
    public IList`1<ClientValidatorItem> Results { get; }
    public ClientValidatorProviderContext(ModelMetadata modelMetadata, IList`1<ClientValidatorItem> items);
    [CompilerGeneratedAttribute]
public ModelMetadata get_ModelMetadata();
    public IReadOnlyList`1<object> get_ValidatorMetadata();
    [CompilerGeneratedAttribute]
public IList`1<ClientValidatorItem> get_Results();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator {
    public abstract virtual void AddValidation(ClientModelValidationContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider {
    public abstract virtual void CreateValidators(ClientValidatorProviderContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator {
    public abstract virtual IEnumerable`1<ModelValidationResult> Validate(ModelValidationContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider {
    public abstract virtual void CreateValidators(ModelValidatorProviderContext context);
}
public interface Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IPropertyValidationFilter {
    public abstract virtual bool ShouldValidateEntry(ValidationEntry entry, ValidationEntry parentEntry);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy {
    public abstract virtual IEnumerator`1<ValidationEntry> GetChildren(ModelMetadata metadata, string key, object model);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContext : ModelValidationContextBase {
    [CompilerGeneratedAttribute]
private object <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Container>k__BackingField;
    public object Model { get; }
    public object Container { get; }
    [NullableContextAttribute("1")]
public ModelValidationContext(ActionContext actionContext, ModelMetadata modelMetadata, IModelMetadataProvider metadataProvider, object container, object model);
    [CompilerGeneratedAttribute]
public object get_Model();
    [CompilerGeneratedAttribute]
public object get_Container();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase : object {
    [CompilerGeneratedAttribute]
private ActionContext <ActionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <ModelMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IModelMetadataProvider <MetadataProvider>k__BackingField;
    public ActionContext ActionContext { get; }
    public ModelMetadata ModelMetadata { get; }
    public IModelMetadataProvider MetadataProvider { get; }
    public ModelValidationContextBase(ActionContext actionContext, ModelMetadata modelMetadata, IModelMetadataProvider metadataProvider);
    [CompilerGeneratedAttribute]
public ActionContext get_ActionContext();
    [CompilerGeneratedAttribute]
public ModelMetadata get_ModelMetadata();
    [CompilerGeneratedAttribute]
public IModelMetadataProvider get_MetadataProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationResult : object {
    [CompilerGeneratedAttribute]
private string <MemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string MemberName { get; }
    public string Message { get; }
    [NullableContextAttribute("2")]
public ModelValidationResult(string memberName, string message);
    [CompilerGeneratedAttribute]
public string get_MemberName();
    [CompilerGeneratedAttribute]
public string get_Message();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext : object {
    [CompilerGeneratedAttribute]
private ModelMetadata <ModelMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ValidatorItem> <Results>k__BackingField;
    public ModelMetadata ModelMetadata { get; public set; }
    public IReadOnlyList`1<object> ValidatorMetadata { get; }
    public IList`1<ValidatorItem> Results { get; }
    public ModelValidatorProviderContext(ModelMetadata modelMetadata, IList`1<ValidatorItem> items);
    [CompilerGeneratedAttribute]
public ModelMetadata get_ModelMetadata();
    [CompilerGeneratedAttribute]
public void set_ModelMetadata(ModelMetadata value);
    public IReadOnlyList`1<object> get_ValidatorMetadata();
    [CompilerGeneratedAttribute]
public IList`1<ValidatorItem> get_Results();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry : ValueType {
    private object _model;
    private Func`1<object> _modelAccessor;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <Metadata>k__BackingField;
    public string Key { get; }
    public ModelMetadata Metadata { get; }
    [NullableAttribute("2")]
public object Model { get; }
    public ValidationEntry(ModelMetadata metadata, string key, object model);
    public ValidationEntry(ModelMetadata metadata, string key, Func`1<object> modelAccessor);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Key();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public ModelMetadata get_Metadata();
    [NullableContextAttribute("2")]
public object get_Model();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary : object {
    private Dictionary`2<object, ValidationStateEntry> _inner;
    [NullableAttribute("2")]
public ValidationStateEntry Item { get; public set; }
    private ValidationStateEntry System.Collections.Generic.IDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.Item { get; private set; }
    private ValidationStateEntry System.Collections.Generic.IReadOnlyDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.Item { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<object> Keys { get; }
    public ICollection`1<ValidationStateEntry> Values { get; }
    private IEnumerable`1<object> System.Collections.Generic.IReadOnlyDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.Keys { get; }
    private IEnumerable`1<ValidationStateEntry> System.Collections.Generic.IReadOnlyDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.Values { get; }
    public ValidationStateEntry get_Item(object key);
    public void set_Item(object key, ValidationStateEntry value);
    private sealed virtual override ValidationStateEntry System.Collections.Generic.IDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.get_Item(object key);
    private sealed virtual override void System.Collections.Generic.IDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.set_Item(object key, ValidationStateEntry value);
    private sealed virtual override ValidationStateEntry System.Collections.Generic.IReadOnlyDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.get_Item(object key);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<object> get_Keys();
    public sealed virtual ICollection`1<ValidationStateEntry> get_Values();
    private sealed virtual override IEnumerable`1<object> System.Collections.Generic.IReadOnlyDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.get_Keys();
    private sealed virtual override IEnumerable`1<ValidationStateEntry> System.Collections.Generic.IReadOnlyDictionary<System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry>.get_Values();
    public sealed virtual void Add(KeyValuePair`2<object, ValidationStateEntry> item);
    public sealed virtual void Add(object key, ValidationStateEntry value);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<object, ValidationStateEntry> item);
    public sealed virtual bool ContainsKey(object key);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual IEnumerator`1<KeyValuePair`2<object, ValidationStateEntry>> GetEnumerator();
    public sealed virtual bool Remove(KeyValuePair`2<object, ValidationStateEntry> item);
    public sealed virtual bool Remove(object key);
    public sealed virtual bool TryGetValue(object key, ValidationStateEntry& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SuppressValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private IValidationStrategy <Strategy>k__BackingField;
    public string Key { get; public set; }
    public ModelMetadata Metadata { get; public set; }
    public bool SuppressValidation { get; public set; }
    public IValidationStrategy Strategy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public ModelMetadata get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(ModelMetadata value);
    [CompilerGeneratedAttribute]
public bool get_SuppressValidation();
    [CompilerGeneratedAttribute]
public void set_SuppressValidation(bool value);
    [CompilerGeneratedAttribute]
public IValidationStrategy get_Strategy();
    [CompilerGeneratedAttribute]
public void set_Strategy(IValidationStrategy value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem : object {
    [CompilerGeneratedAttribute]
private object <ValidatorMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IModelValidator <Validator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReusable>k__BackingField;
    public object ValidatorMetadata { get; }
    [NullableAttribute("2")]
public IModelValidator Validator { get; public set; }
    public bool IsReusable { get; public set; }
    public ValidatorItem(object validatorMetadata);
    [CompilerGeneratedAttribute]
public object get_ValidatorMetadata();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IModelValidator get_Validator();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Validator(IModelValidator value);
    [CompilerGeneratedAttribute]
public bool get_IsReusable();
    [CompilerGeneratedAttribute]
public void set_IsReusable(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderException : Exception {
    public ValueProviderException(string message);
    public ValueProviderException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext : object {
    [CompilerGeneratedAttribute]
private ActionContext <ActionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IValueProvider> <ValueProviders>k__BackingField;
    public ActionContext ActionContext { get; }
    public IList`1<IValueProvider> ValueProviders { get; }
    public ValueProviderFactoryContext(ActionContext context);
    [CompilerGeneratedAttribute]
public ActionContext get_ActionContext();
    [CompilerGeneratedAttribute]
public IList`1<IValueProvider> get_ValueProviders();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult : ValueType {
    private static CultureInfo _invariantCulture;
    public static ValueProviderResult None;
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private StringValues <Values>k__BackingField;
    public CultureInfo Culture { get; }
    public StringValues Values { get; }
    [NullableAttribute("2")]
public string FirstValue { get; }
    public int Length { get; }
    public ValueProviderResult(StringValues values);
    [NullableContextAttribute("2")]
public ValueProviderResult(StringValues values, CultureInfo culture);
    private static ValueProviderResult();
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public StringValues get_Values();
    [NullableContextAttribute("2")]
public string get_FirstValue();
    public int get_Length();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueProviderResult other);
    public virtual int GetHashCode();
    public virtual string ToString();
    public sealed virtual IEnumerator`1<string> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public static string op_Explicit(ValueProviderResult result);
    public static String[] op_Explicit(ValueProviderResult result);
    public static bool op_Equality(ValueProviderResult x, ValueProviderResult y);
    public static bool op_Inequality(ValueProviderResult x, ValueProviderResult y);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo : object {
    [CompilerGeneratedAttribute]
private string <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SuppressLinkGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SuppressPathMatching>k__BackingField;
    public string Template { get; public set; }
    public int Order { get; public set; }
    public string Name { get; public set; }
    public bool SuppressLinkGeneration { get; public set; }
    public bool SuppressPathMatching { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(string value);
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_SuppressLinkGeneration();
    [CompilerGeneratedAttribute]
public void set_SuppressLinkGeneration(bool value);
    [CompilerGeneratedAttribute]
public bool get_SuppressPathMatching();
    [CompilerGeneratedAttribute]
public void set_SuppressPathMatching(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Routing.UrlActionContext : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fragment>k__BackingField;
    public string Action { get; public set; }
    public string Controller { get; public set; }
    public object Values { get; public set; }
    public string Protocol { get; public set; }
    public string Host { get; public set; }
    public string Fragment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public string get_Controller();
    [CompilerGeneratedAttribute]
public void set_Controller(string value);
    [CompilerGeneratedAttribute]
public object get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(object value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Fragment();
    [CompilerGeneratedAttribute]
public void set_Fragment(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext : object {
    [CompilerGeneratedAttribute]
private string <RouteName>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fragment>k__BackingField;
    public string RouteName { get; public set; }
    public object Values { get; public set; }
    public string Protocol { get; public set; }
    public string Host { get; public set; }
    public string Fragment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RouteName();
    [CompilerGeneratedAttribute]
public void set_RouteName(string value);
    [CompilerGeneratedAttribute]
public object get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(object value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Fragment();
    [CompilerGeneratedAttribute]
public void set_Fragment(string value);
}
internal static class Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper : object {
    [NullableContextAttribute("2")]
public static void ThrowIfNull(object argument, string paramName);
}
internal static class Microsoft.Extensions.Internal.ClosedGenericMatcher : object {
    [NullableContextAttribute("1")]
public static Type ExtractGenericInterface(Type queryType, Type interfaceType);
    private static bool IsGenericInstantiation(Type candidate, Type interfaceType);
    private static Type GetGenericInstantiation(Type queryType, Type interfaceType);
}
internal static class Microsoft.Extensions.Internal.TypeNameHelper : object {
    private static char DefaultNestedTypeDelimiter;
    private static Dictionary`2<Type, string> _builtInTypeNames;
    private static TypeNameHelper();
    [NullableContextAttribute("2")]
public static string GetTypeDisplayName(object item, bool fullName);
    [NullableContextAttribute("1")]
public static string GetTypeDisplayName(Type type, bool fullName, bool includeGenericParameterNames, bool includeGenericParameters, char nestedTypeDelimiter);
    private static void ProcessType(StringBuilder builder, Type type, DisplayNameOptions& options);
    private static void ProcessArrayType(StringBuilder builder, Type type, DisplayNameOptions& options);
    private static void ProcessGenericType(StringBuilder builder, Type type, Type[] genericArguments, int length, DisplayNameOptions& options);
}
