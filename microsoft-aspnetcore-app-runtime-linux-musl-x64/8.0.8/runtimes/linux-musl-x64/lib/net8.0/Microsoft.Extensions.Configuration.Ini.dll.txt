internal static class FxResources.Microsoft.Extensions.Configuration.Ini.SR : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Ini.IniConfigurationProvider : FileConfigurationProvider {
    public IniConfigurationProvider(IniConfigurationSource source);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Ini.IniConfigurationSource : FileConfigurationSource {
    [NullableContextAttribute("1")]
public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Ini.IniStreamConfigurationProvider : StreamConfigurationProvider {
    public IniStreamConfigurationProvider(IniStreamConfigurationSource source);
    public static IDictionary`2<string, string> Read(Stream stream);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Ini.IniStreamConfigurationSource : StreamConfigurationSource {
    [NullableContextAttribute("1")]
public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.IniConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddIniFile(IConfigurationBuilder builder, string path);
    [ExtensionAttribute]
public static IConfigurationBuilder AddIniFile(IConfigurationBuilder builder, string path, bool optional);
    [ExtensionAttribute]
public static IConfigurationBuilder AddIniFile(IConfigurationBuilder builder, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddIniFile(IConfigurationBuilder builder, IFileProvider provider, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddIniFile(IConfigurationBuilder builder, Action`1<IniConfigurationSource> configureSource);
    [ExtensionAttribute]
public static IConfigurationBuilder AddIniStream(IConfigurationBuilder builder, Stream stream);
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string Error_InvalidFilePath { get; }
    internal static string Error_KeyIsDuplicated { get; }
    internal static string Error_UnrecognizedLineFormat { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, Object[] args);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_Error_InvalidFilePath();
    internal static string get_Error_KeyIsDuplicated();
    internal static string get_Error_UnrecognizedLineFormat();
}
internal static class System.ThrowHelper : object {
    [NullableContextAttribute("2")]
internal static void ThrowIfNull(object argument, string paramName);
    [DoesNotReturnAttribute]
private static void Throw(string paramName);
    [NullableContextAttribute("1")]
public static string IfNullOrWhitespace(string argument, string paramName);
}
