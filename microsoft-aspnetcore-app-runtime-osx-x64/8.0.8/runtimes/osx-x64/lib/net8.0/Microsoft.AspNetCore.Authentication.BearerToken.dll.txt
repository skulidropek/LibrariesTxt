[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Authentication.BearerToken.AccessTokenResponse : object {
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExpiresIn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    public string TokenType { get; }
    [RequiredMemberAttribute]
public string AccessToken { get; public set; }
    [RequiredMemberAttribute]
public long ExpiresIn { get; public set; }
    [RequiredMemberAttribute]
public string RefreshToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public long get_ExpiresIn();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExpiresIn(long value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RefreshToken(string value);
}
internal class Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenConfigureJsonOptions : object {
    public sealed virtual void Configure(JsonOptions options);
}
internal class Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenConfigureOptions : object {
    [CompilerGeneratedAttribute]
private IDataProtectionProvider <dp>P;
    private static string _primaryPurpose;
    public BearerTokenConfigureOptions(IDataProtectionProvider dp);
    public sealed virtual void Configure(string schemeName, BearerTokenOptions options);
    public sealed virtual void Configure(BearerTokenOptions options);
}
public static class Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenDefaults : object {
    [NullableAttribute("1")]
public static string AuthenticationScheme;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenEvents : object {
    [CompilerGeneratedAttribute]
private Func`2<MessageReceivedContext, Task> <OnMessageReceived>k__BackingField;
    public Func`2<MessageReceivedContext, Task> OnMessageReceived { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<MessageReceivedContext, Task> get_OnMessageReceived();
    [CompilerGeneratedAttribute]
public void set_OnMessageReceived(Func`2<MessageReceivedContext, Task> value);
    public virtual Task MessageReceivedAsync(MessageReceivedContext context);
}
internal class Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenHandler : SignInAuthenticationHandler`1<BearerTokenOptions> {
    private static AuthenticateResult FailedUnprotectingToken;
    private static AuthenticateResult TokenExpired;
    private BearerTokenEvents Events { get; }
    public BearerTokenHandler(IOptionsMonitor`1<BearerTokenOptions> optionsMonitor, ILoggerFactory loggerFactory, UrlEncoder urlEncoder);
    private static BearerTokenHandler();
    private BearerTokenEvents get_Events();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenHandler/<HandleAuthenticateAsync>d__5")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    protected virtual Task HandleChallengeAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenHandler/<HandleSignInAsync>d__7")]
protected virtual Task HandleSignInAsync(ClaimsPrincipal user, AuthenticationProperties properties);
    private static JsonTypeInfo`1<AccessTokenResponse> ResolveAccessTokenJsonTypeInfo(HttpContext httpContext);
    protected virtual Task HandleSignOutAsync(AuthenticationProperties properties);
    private string GetBearerTokenOrNull();
    private AuthenticationTicket CreateBearerTicket(ClaimsPrincipal user, AuthenticationProperties properties);
    private AuthenticationTicket CreateRefreshTicket(ClaimsPrincipal user, DateTimeOffset utcNow);
}
[JsonSerializableAttribute("Microsoft.AspNetCore.Authentication.BearerToken.AccessTokenResponse")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.36612")]
internal class Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenJsonSerializerContext : JsonSerializerContext {
    private JsonTypeInfo`1<AccessTokenResponse> _AccessTokenResponse;
    private JsonTypeInfo`1<long> _Int64;
    private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static BearerTokenJsonSerializerContext <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_TokenType;
    private static JsonEncodedText PropName_AccessToken;
    private static JsonEncodedText PropName_ExpiresIn;
    private static JsonEncodedText PropName_RefreshToken;
    public JsonTypeInfo`1<AccessTokenResponse> AccessTokenResponse { get; }
    public JsonTypeInfo`1<long> Int64 { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static BearerTokenJsonSerializerContext Default { get; }
    protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public BearerTokenJsonSerializerContext(JsonSerializerOptions options);
    private static BearerTokenJsonSerializerContext();
    public JsonTypeInfo`1<AccessTokenResponse> get_AccessTokenResponse();
    private JsonTypeInfo`1<AccessTokenResponse> Create_AccessTokenResponse(JsonSerializerOptions options);
    private static JsonPropertyInfo[] AccessTokenResponsePropInit(JsonSerializerOptions options);
    private void AccessTokenResponseSerializeHandler(Utf8JsonWriter writer, AccessTokenResponse value);
    private static JsonParameterInfoValues[] AccessTokenResponseCtorParamInit();
    public JsonTypeInfo`1<long> get_Int64();
    private JsonTypeInfo`1<long> Create_Int64(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static BearerTokenJsonSerializerContext get_Default();
    [CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Authentication.BearerToken.BearerTokenOptions : AuthenticationSchemeOptions {
    private ISecureDataFormat`1<AuthenticationTicket> _bearerTokenProtector;
    private ISecureDataFormat`1<AuthenticationTicket> _refreshTokenProtector;
    [CompilerGeneratedAttribute]
private TimeSpan <BearerTokenExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RefreshTokenExpiration>k__BackingField;
    public TimeSpan BearerTokenExpiration { get; public set; }
    public TimeSpan RefreshTokenExpiration { get; public set; }
    public ISecureDataFormat`1<AuthenticationTicket> BearerTokenProtector { get; public set; }
    public ISecureDataFormat`1<AuthenticationTicket> RefreshTokenProtector { get; public set; }
    public BearerTokenEvents Events { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_BearerTokenExpiration();
    [CompilerGeneratedAttribute]
public void set_BearerTokenExpiration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RefreshTokenExpiration();
    [CompilerGeneratedAttribute]
public void set_RefreshTokenExpiration(TimeSpan value);
    public ISecureDataFormat`1<AuthenticationTicket> get_BearerTokenProtector();
    public void set_BearerTokenProtector(ISecureDataFormat`1<AuthenticationTicket> value);
    public ISecureDataFormat`1<AuthenticationTicket> get_RefreshTokenProtector();
    public void set_RefreshTokenProtector(ISecureDataFormat`1<AuthenticationTicket> value);
    public BearerTokenEvents get_Events();
    public void set_Events(BearerTokenEvents value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Authentication.BearerToken.MessageReceivedContext : ResultContext`1<BearerTokenOptions> {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string Token { get; public set; }
    [NullableContextAttribute("1")]
public MessageReceivedContext(HttpContext context, AuthenticationScheme scheme, BearerTokenOptions options);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.BearerTokenExtensions : object {
    [ExtensionAttribute]
public static AuthenticationBuilder AddBearerToken(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static AuthenticationBuilder AddBearerToken(AuthenticationBuilder builder, string authenticationScheme);
    [ExtensionAttribute]
public static AuthenticationBuilder AddBearerToken(AuthenticationBuilder builder, Action`1<BearerTokenOptions> configure);
    [ExtensionAttribute]
public static AuthenticationBuilder AddBearerToken(AuthenticationBuilder builder, string authenticationScheme, Action`1<BearerTokenOptions> configure);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Logging.LoggingExtensions : object {
    [GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
private static Action`3<ILogger, string, Exception> __AuthenticationSchemeSignedInCallback;
    private static LoggingExtensions();
    [ExtensionAttribute]
[LoggerMessageAttribute("1", "2", "AuthenticationScheme: {AuthenticationScheme} signed in.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void AuthenticationSchemeSignedIn(ILogger logger, string authenticationScheme);
}
