[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseRequestLocalization(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseRequestLocalization(IApplicationBuilder app, RequestLocalizationOptions options);
    [ExtensionAttribute]
public static IApplicationBuilder UseRequestLocalization(IApplicationBuilder app, Action`1<RequestLocalizationOptions> optionsAction);
    [ExtensionAttribute]
public static IApplicationBuilder UseRequestLocalization(IApplicationBuilder app, String[] cultures);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.RequestLocalizationOptions : object {
    private RequestCulture _defaultRequestCulture;
    [CompilerGeneratedAttribute]
private bool <CultureInfoUseUserOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FallBackToParentCultures>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FallBackToParentUICultures>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ApplyCurrentCultureToResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<CultureInfo> <SupportedCultures>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<CultureInfo> <SupportedUICultures>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IRequestCultureProvider> <RequestCultureProviders>k__BackingField;
    public bool CultureInfoUseUserOverride { get; public set; }
    public RequestCulture DefaultRequestCulture { get; public set; }
    public bool FallBackToParentCultures { get; public set; }
    public bool FallBackToParentUICultures { get; public set; }
    public bool ApplyCurrentCultureToResponseHeaders { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<CultureInfo> SupportedCultures { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<CultureInfo> SupportedUICultures { get; public set; }
    public IList`1<IRequestCultureProvider> RequestCultureProviders { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_CultureInfoUseUserOverride();
    [CompilerGeneratedAttribute]
public void set_CultureInfoUseUserOverride(bool value);
    public RequestCulture get_DefaultRequestCulture();
    public void set_DefaultRequestCulture(RequestCulture value);
    [CompilerGeneratedAttribute]
public bool get_FallBackToParentCultures();
    [CompilerGeneratedAttribute]
public void set_FallBackToParentCultures(bool value);
    [CompilerGeneratedAttribute]
public bool get_FallBackToParentUICultures();
    [CompilerGeneratedAttribute]
public void set_FallBackToParentUICultures(bool value);
    [CompilerGeneratedAttribute]
public bool get_ApplyCurrentCultureToResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_ApplyCurrentCultureToResponseHeaders(bool value);
    [CompilerGeneratedAttribute]
public IList`1<CultureInfo> get_SupportedCultures();
    [CompilerGeneratedAttribute]
public void set_SupportedCultures(IList`1<CultureInfo> value);
    [CompilerGeneratedAttribute]
public IList`1<CultureInfo> get_SupportedUICultures();
    [CompilerGeneratedAttribute]
public void set_SupportedUICultures(IList`1<CultureInfo> value);
    [CompilerGeneratedAttribute]
public IList`1<IRequestCultureProvider> get_RequestCultureProviders();
    [CompilerGeneratedAttribute]
public void set_RequestCultureProviders(IList`1<IRequestCultureProvider> value);
    public RequestLocalizationOptions AddSupportedCultures(String[] cultures);
    public RequestLocalizationOptions AddSupportedUICultures(String[] uiCultures);
    public RequestLocalizationOptions SetDefaultCulture(string defaultCulture);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.RequestLocalizationOptionsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static RequestLocalizationOptions AddInitialRequestCultureProvider(RequestLocalizationOptions requestLocalizationOptions, RequestCultureProvider requestCultureProvider);
}
public class Microsoft.AspNetCore.Localization.AcceptLanguageHeaderRequestCultureProvider : RequestCultureProvider {
    [CompilerGeneratedAttribute]
private int <MaximumAcceptLanguageHeaderValuesToTry>k__BackingField;
    public int MaximumAcceptLanguageHeaderValuesToTry { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MaximumAcceptLanguageHeaderValuesToTry();
    [CompilerGeneratedAttribute]
public void set_MaximumAcceptLanguageHeaderValuesToTry(int value);
    [NullableContextAttribute("1")]
public virtual Task`1<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Localization.CookieRequestCultureProvider : RequestCultureProvider {
    private static char _cookieSeparator;
    private static string _culturePrefix;
    private static string _uiCulturePrefix;
    public static string DefaultCookieName;
    [CompilerGeneratedAttribute]
private string <CookieName>k__BackingField;
    public string CookieName { get; public set; }
    private static CookieRequestCultureProvider();
    [CompilerGeneratedAttribute]
public string get_CookieName();
    [CompilerGeneratedAttribute]
public void set_CookieName(string value);
    public virtual Task`1<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext);
    public static string MakeCookieValue(RequestCulture requestCulture);
    public static ProviderCultureResult ParseCookieValue(string value);
}
public class Microsoft.AspNetCore.Localization.CustomRequestCultureProvider : RequestCultureProvider {
    private Func`2<HttpContext, Task`1<ProviderCultureResult>> _provider;
    public CustomRequestCultureProvider(Func`2<HttpContext, Task`1<ProviderCultureResult>> provider);
    [NullableContextAttribute("1")]
public virtual Task`1<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Localization.IRequestCultureFeature {
    public RequestCulture RequestCulture { get; }
    [NullableAttribute("2")]
public IRequestCultureProvider Provider { get; }
    public abstract virtual RequestCulture get_RequestCulture();
    [NullableContextAttribute("2")]
public abstract virtual IRequestCultureProvider get_Provider();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Localization.IRequestCultureProvider {
    public abstract virtual Task`1<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Localization.ProviderCultureResult : object {
    [CompilerGeneratedAttribute]
private IList`1<StringSegment> <Cultures>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<StringSegment> <UICultures>k__BackingField;
    public IList`1<StringSegment> Cultures { get; }
    public IList`1<StringSegment> UICultures { get; }
    public ProviderCultureResult(StringSegment culture);
    public ProviderCultureResult(StringSegment culture, StringSegment uiCulture);
    public ProviderCultureResult(IList`1<StringSegment> cultures);
    public ProviderCultureResult(IList`1<StringSegment> cultures, IList`1<StringSegment> uiCultures);
    [CompilerGeneratedAttribute]
public IList`1<StringSegment> get_Cultures();
    [CompilerGeneratedAttribute]
public IList`1<StringSegment> get_UICultures();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Localization.QueryStringRequestCultureProvider : RequestCultureProvider {
    [CompilerGeneratedAttribute]
private string <QueryStringKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UIQueryStringKey>k__BackingField;
    public string QueryStringKey { get; public set; }
    public string UIQueryStringKey { get; public set; }
    [CompilerGeneratedAttribute]
public string get_QueryStringKey();
    [CompilerGeneratedAttribute]
public void set_QueryStringKey(string value);
    [CompilerGeneratedAttribute]
public string get_UIQueryStringKey();
    [CompilerGeneratedAttribute]
public void set_UIQueryStringKey(string value);
    public virtual Task`1<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Localization.RequestCulture : object {
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private CultureInfo <UICulture>k__BackingField;
    public CultureInfo Culture { get; }
    public CultureInfo UICulture { get; }
    public RequestCulture(CultureInfo culture);
    public RequestCulture(string culture);
    public RequestCulture(string culture, string uiCulture);
    public RequestCulture(CultureInfo culture, CultureInfo uiCulture);
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public CultureInfo get_UICulture();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Localization.RequestCultureFeature : object {
    [CompilerGeneratedAttribute]
private RequestCulture <RequestCulture>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestCultureProvider <Provider>k__BackingField;
    public RequestCulture RequestCulture { get; }
    [NullableAttribute("2")]
public IRequestCultureProvider Provider { get; }
    public RequestCultureFeature(RequestCulture requestCulture, IRequestCultureProvider provider);
    [CompilerGeneratedAttribute]
public sealed virtual RequestCulture get_RequestCulture();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual IRequestCultureProvider get_Provider();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Localization.RequestCultureProvider : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected static Task`1<ProviderCultureResult> NullProviderCultureResult;
    [CompilerGeneratedAttribute]
private RequestLocalizationOptions <Options>k__BackingField;
    public RequestLocalizationOptions Options { get; public set; }
    private static RequestCultureProvider();
    [CompilerGeneratedAttribute]
public RequestLocalizationOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(RequestLocalizationOptions value);
    [NullableContextAttribute("1")]
public abstract virtual Task`1<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext);
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Localization.RequestCultureProviderLoggerExtensions : object {
    [GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
private static Action`4<ILogger, string, IList`1<StringSegment>, Exception> __UnsupportedCulturesCallback;
    [GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
private static Action`4<ILogger, string, IList`1<StringSegment>, Exception> __UnsupportedUICulturesCallback;
    private static RequestCultureProviderLoggerExtensions();
    [ExtensionAttribute]
[LoggerMessageAttribute("1", "1", "{requestCultureProvider} returned the following unsupported cultures '{cultures}'.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void UnsupportedCultures(ILogger logger, string requestCultureProvider, IList`1<StringSegment> cultures);
    [ExtensionAttribute]
[LoggerMessageAttribute("2", "1", "{requestCultureProvider} returned the following unsupported UI Cultures '{uiCultures}'.")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.10.36612")]
public static void UnsupportedUICultures(ILogger logger, string requestCultureProvider, IList`1<StringSegment> uiCultures);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware : object {
    private static int MaxCultureFallbackDepth;
    private RequestDelegate _next;
    private RequestLocalizationOptions _options;
    private ILogger _logger;
    public RequestLocalizationMiddleware(RequestDelegate next, IOptions`1<RequestLocalizationOptions> options, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware/<Invoke>d__5")]
public Task Invoke(HttpContext context);
    private static void SetCurrentThreadCulture(RequestCulture requestCulture);
    private static CultureInfo GetCultureInfo(IList`1<StringSegment> cultureNames, IList`1<CultureInfo> supportedCultures, bool fallbackToParentCultures);
    private static CultureInfo GetCultureInfo(StringSegment cultureName, IList`1<CultureInfo> supportedCultures, bool fallbackToParentCultures, int currentDepth);
    private static CultureInfo GetCultureInfo(StringSegment name, IList`1<CultureInfo> supportedCultures);
}
internal static class Microsoft.AspNetCore.Localization.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string Exception_CulturesShouldNotBeEmpty { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_Exception_CulturesShouldNotBeEmpty();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.RequestLocalizationServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddRequestLocalization(IServiceCollection services, Action`1<RequestLocalizationOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection AddRequestLocalization(IServiceCollection services, Action`2<RequestLocalizationOptions, TService> configureOptions);
}
