internal static class Microsoft.AspNetCore.Internal.LinkerFlags : object {
    public static DynamicallyAccessedMemberTypes JsonSerialized;
    public static DynamicallyAccessedMemberTypes Component;
    public static DynamicallyAccessedMemberTypes JSInvokable;
}
public static class Microsoft.JSInterop.DotNetObjectReference : object {
    [NullableContextAttribute("1")]
public static DotNetObjectReference`1<TValue> Create(TValue value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.JSInterop.DotNetObjectReference`1 : object {
    private TValue _value;
    private long _objectId;
    private JSRuntime _jsRuntime;
    [CompilerGeneratedAttribute]
private bool <Disposed>k__BackingField;
    public TValue Value { get; }
    internal long ObjectId { get; internal set; }
    [NullableAttribute("2")]
internal JSRuntime JSRuntime { get; internal set; }
    private object Microsoft.JSInterop.Infrastructure.IDotNetObjectReference.Value { get; }
    internal bool Disposed { get; private set; }
    internal DotNetObjectReference`1(TValue value);
    public TValue get_Value();
    internal long get_ObjectId();
    internal void set_ObjectId(long value);
    [NullableContextAttribute("2")]
internal JSRuntime get_JSRuntime();
    [NullableContextAttribute("2")]
internal void set_JSRuntime(JSRuntime value);
    private sealed virtual override object Microsoft.JSInterop.Infrastructure.IDotNetObjectReference.get_Value();
    [CompilerGeneratedAttribute]
internal bool get_Disposed();
    [CompilerGeneratedAttribute]
private void set_Disposed(bool value);
    public sealed virtual void Dispose();
    internal void ThrowIfDisposed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.JSInterop.DotNetStreamReference : object {
    [CompilerGeneratedAttribute]
private Stream <Stream>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LeaveOpen>k__BackingField;
    public Stream Stream { get; }
    public bool LeaveOpen { get; }
    public DotNetStreamReference(Stream stream, bool leaveOpen);
    [CompilerGeneratedAttribute]
public Stream get_Stream();
    [CompilerGeneratedAttribute]
public bool get_LeaveOpen();
    public sealed virtual void Dispose();
}
public interface Microsoft.JSInterop.IJSInProcessObjectReference {
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed.")]
public abstract virtual TValue Invoke(string identifier, Object[] args);
}
public interface Microsoft.JSInterop.IJSInProcessRuntime {
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed.")]
public abstract virtual TResult Invoke(string identifier, Object[] args);
}
[NullableContextAttribute("2")]
public interface Microsoft.JSInterop.IJSObjectReference {
    public abstract virtual ValueTask`1<TValue> InvokeAsync(string identifier, Object[] args);
    public abstract virtual ValueTask`1<TValue> InvokeAsync(string identifier, CancellationToken cancellationToken, Object[] args);
}
[NullableContextAttribute("2")]
public interface Microsoft.JSInterop.IJSRuntime {
    public abstract virtual ValueTask`1<TValue> InvokeAsync(string identifier, Object[] args);
    public abstract virtual ValueTask`1<TValue> InvokeAsync(string identifier, CancellationToken cancellationToken, Object[] args);
}
public interface Microsoft.JSInterop.IJSStreamReference {
    public long Length { get; }
    public abstract virtual long get_Length();
    public abstract virtual ValueTask`1<Stream> OpenReadStreamAsync(long maxAllowedSize, CancellationToken cancellationToken);
}
public interface Microsoft.JSInterop.IJSUnmarshalledObjectReference {
    [NullableContextAttribute("1")]
[ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier, T0 arg0);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier, T0 arg0, T1 arg1);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier, T0 arg0, T1 arg1, T2 arg2);
}
[NullableContextAttribute("1")]
public interface Microsoft.JSInterop.IJSUnmarshalledRuntime {
    [ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier);
    [ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier, T0 arg0);
    [ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier, T0 arg0, T1 arg1);
    [ObsoleteAttribute("This method is obsolete. Use JSImportAttribute instead.")]
public abstract virtual TResult InvokeUnmarshalled(string identifier, T0 arg0, T1 arg1, T2 arg2);
}
public class Microsoft.JSInterop.Implementation.JSInProcessObjectReference : JSObjectReference {
    private JSInProcessRuntime _jsRuntime;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_DisposeJSObjectReferenceById_1103117935;
    [NullableContextAttribute("1")]
protected internal JSInProcessObjectReference(JSInProcessRuntime jsRuntime, long id);
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed.")]
public sealed virtual TValue Invoke(string identifier, Object[] args);
    public sealed virtual void Dispose();
    [JSImportAttribute("globalThis.DotNet.disposeJSObjectReferenceById")]
[DebuggerNonUserCodeAttribute]
private static void DisposeJSObjectReferenceById(long id);
}
public class Microsoft.JSInterop.Implementation.JSObjectReference : object {
    private JSRuntime _jsRuntime;
    [CompilerGeneratedAttribute]
private bool <Disposed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    internal bool Disposed { get; internal set; }
    protected internal long Id { get; }
    [NullableContextAttribute("1")]
protected internal JSObjectReference(JSRuntime jsRuntime, long id);
    [CompilerGeneratedAttribute]
internal bool get_Disposed();
    [CompilerGeneratedAttribute]
internal void set_Disposed(bool value);
    [CompilerGeneratedAttribute]
protected internal long get_Id();
    [NullableContextAttribute("2")]
public sealed virtual ValueTask`1<TValue> InvokeAsync(string identifier, Object[] args);
    [NullableContextAttribute("2")]
public sealed virtual ValueTask`1<TValue> InvokeAsync(string identifier, CancellationToken cancellationToken, Object[] args);
    [AsyncStateMachineAttribute("Microsoft.JSInterop.Implementation.JSObjectReference/<DisposeAsync>d__11")]
public sealed virtual ValueTask DisposeAsync();
    protected void ThrowIfDisposed();
}
public static class Microsoft.JSInterop.Implementation.JSObjectReferenceJsonWorker : object {
    internal static JsonEncodedText JSObjectIdKey;
    private static JSObjectReferenceJsonWorker();
    public static long ReadJSObjectReferenceIdentifier(Utf8JsonReader& reader);
    [NullableContextAttribute("1")]
public static void WriteJSObjectReference(Utf8JsonWriter writer, JSObjectReference objectReference);
}
public class Microsoft.JSInterop.Implementation.JSStreamReference : JSObjectReference {
    private JSRuntime _jsRuntime;
    [CompilerGeneratedAttribute]
private long <Length>k__BackingField;
    public long Length { get; }
    [NullableContextAttribute("1")]
internal JSStreamReference(JSRuntime jsRuntime, long id, long totalLength);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Length();
    [AsyncStateMachineAttribute("Microsoft.JSInterop.Implementation.JSStreamReference/<Microsoft-JSInterop-IJSStreamReference-OpenReadStreamAsync>d__5")]
private sealed virtual override ValueTask`1<Stream> Microsoft.JSInterop.IJSStreamReference.OpenReadStreamAsync(long maxAllowedSize, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.JSInterop.Infrastructure.ArrayBuilder`1 : object {
    protected T[] _items;
    protected int _itemsInUse;
    private static T[] Empty;
    private ArrayPool`1<T> _arrayPool;
    private int _minCapacity;
    private bool _disposed;
    public int Count { get; }
    public T[] Buffer { get; }
    public ArrayBuilder`1(int minCapacity, ArrayPool`1<T> arrayPool);
    private static ArrayBuilder`1();
    public int get_Count();
    public T[] get_Buffer();
    public int Append(T& item);
    internal int Append(T[] source, int startIndex, int length);
    internal int Append(ReadOnlySpan`1<T> source);
    public void Overwrite(int index, T& value);
    public void RemoveLast();
    public void InsertExpensive(int index, T value);
    public void Clear();
    protected void GrowBuffer(int desiredCapacity);
    private void ReturnBuffer();
    public sealed virtual void Dispose();
    private static void ThrowIndexOutOfBoundsException();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.JSInterop.Infrastructure.ByteArrayJsonConverter : JsonConverter`1<Byte[]> {
    private int _byteArrayId;
    internal static JsonEncodedText ByteArrayRefKey;
    [CompilerGeneratedAttribute]
private JSRuntime <JSRuntime>k__BackingField;
    public JSRuntime JSRuntime { get; }
    public ByteArrayJsonConverter(JSRuntime jSRuntime);
    private static ByteArrayJsonConverter();
    [CompilerGeneratedAttribute]
public JSRuntime get_JSRuntime();
    public virtual Byte[] Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Byte[] value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.JSInterop.Infrastructure.DotNetDispatcher : object {
    private static string DisposeDotNetObjectReferenceMethodName;
    internal static JsonEncodedText DotNetObjectRefKey;
    private static ConcurrentDictionary`2<AssemblyKey, IReadOnlyDictionary`2<string, ValueTuple`2<MethodInfo, Type[]>>> _cachedMethodsByAssembly;
    private static ConcurrentDictionary`2<Type, IReadOnlyDictionary`2<string, ValueTuple`2<MethodInfo, Type[]>>> _cachedMethodsByType;
    private static ConcurrentDictionary`2<Type, Func`2<object, Task>> _cachedConvertToTaskByType;
    private static MethodInfo _taskConverterMethodInfo;
    private static DotNetDispatcher();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
public static string Invoke(JSRuntime jsRuntime, DotNetInvocationInfo& invocationInfo, string argsJson);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
public static void BeginInvokeDotNet(JSRuntime jsRuntime, DotNetInvocationInfo invocationInfo, string argsJson);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
private static void EndInvokeDotNetAfterTask(Task task, JSRuntime jsRuntime, DotNetInvocationInfo& invocationInfo);
    private static object InvokeSynchronously(JSRuntime jsRuntime, DotNetInvocationInfo& callInfo, IDotNetObjectReference objectReference, string argsJson);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
internal static Object[] ParseArguments(JSRuntime jsRuntime, string methodIdentifier, string arguments, Type[] parameterTypes);
    public static void EndInvokeJS(JSRuntime jsRuntime, string arguments);
    public static void ReceiveByteArray(JSRuntime jsRuntime, int id, Byte[] data);
    private static ValueTuple`2<MethodInfo, Type[]> GetCachedMethodInfo(AssemblyKey assemblyKey, string methodIdentifier);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2060:MakeGenericMethod")]
private static Task GetTaskByType(Type type, object obj);
    private static Task CreateValueTaskConverter(object result);
    private static ValueTuple`2<MethodInfo, Type[]> GetCachedMethodInfo(IDotNetObjectReference objectReference, string methodIdentifier);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2072")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2075")]
private static Dictionary`2<string, ValueTuple`2<MethodInfo, Type[]>> ScanAssemblyForCallableMethods(AssemblyKey assemblyKey);
    private static Type[] GetParameterTypes(MethodInfo method);
    private static Assembly GetRequiredLoadedAssembly(AssemblyKey assemblyKey);
    [CompilerGeneratedAttribute]
internal static bool <ParseArguments>g__IsIncorrectDotNetObjectRefUse|10_0(Type parameterType, Utf8JsonReader jsonReader);
    [CompilerGeneratedAttribute]
internal static Dictionary`2<string, ValueTuple`2<MethodInfo, Type[]>> <GetCachedMethodInfo>g__ScanTypeForCallableMethods|16_0(Type type);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo : ValueType {
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DotNetObjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallId>k__BackingField;
    public string AssemblyName { get; }
    [NullableAttribute("1")]
public string MethodIdentifier { get; }
    public long DotNetObjectId { get; }
    public string CallId { get; }
    public DotNetInvocationInfo(string assemblyName, string methodIdentifier, long dotNetObjectId, string callId);
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_MethodIdentifier();
    [CompilerGeneratedAttribute]
public long get_DotNetObjectId();
    [CompilerGeneratedAttribute]
public string get_CallId();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.JSInterop.Infrastructure.DotNetInvocationResult : ValueType {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResultJson>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    public Exception Exception { get; }
    public string ErrorKind { get; }
    public string ResultJson { get; }
    public bool Success { get; }
    [NullableContextAttribute("1")]
internal DotNetInvocationResult(Exception exception, string errorKind);
    internal DotNetInvocationResult(string resultJson);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public string get_ErrorKind();
    [CompilerGeneratedAttribute]
public string get_ResultJson();
    [CompilerGeneratedAttribute]
public bool get_Success();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.JSInterop.Infrastructure.DotNetObjectReferenceJsonConverter`1 : JsonConverter`1<DotNetObjectReference`1<TValue>> {
    [CompilerGeneratedAttribute]
private JSRuntime <JSRuntime>k__BackingField;
    private static JsonEncodedText DotNetObjectRefKey { get; }
    public JSRuntime JSRuntime { get; }
    public DotNetObjectReferenceJsonConverter`1(JSRuntime jsRuntime);
    private static JsonEncodedText get_DotNetObjectRefKey();
    [CompilerGeneratedAttribute]
public JSRuntime get_JSRuntime();
    public virtual DotNetObjectReference`1<TValue> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, DotNetObjectReference`1<TValue> value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.JSInterop.Infrastructure.DotNetObjectReferenceJsonConverterFactory : JsonConverterFactory {
    [CompilerGeneratedAttribute]
private JSRuntime <JSRuntime>k__BackingField;
    public JSRuntime JSRuntime { get; }
    public DotNetObjectReferenceJsonConverterFactory(JSRuntime jsRuntime);
    [CompilerGeneratedAttribute]
public JSRuntime get_JSRuntime();
    public virtual bool CanConvert(Type typeToConvert);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2055")]
public virtual JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions jsonSerializerOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.JSInterop.Infrastructure.DotNetStreamReferenceJsonConverter : JsonConverter`1<DotNetStreamReference> {
    private static JsonEncodedText DotNetStreamRefKey;
    [CompilerGeneratedAttribute]
private JSRuntime <JSRuntime>k__BackingField;
    public JSRuntime JSRuntime { get; }
    public DotNetStreamReferenceJsonConverter(JSRuntime jsRuntime);
    private static DotNetStreamReferenceJsonConverter();
    [CompilerGeneratedAttribute]
public JSRuntime get_JSRuntime();
    public virtual DotNetStreamReference Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, DotNetStreamReference value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
internal interface Microsoft.JSInterop.Infrastructure.IDotNetObjectReference {
    public object Value { get; }
    public abstract virtual object get_Value();
}
[EditorBrowsableAttribute("1")]
public interface Microsoft.JSInterop.Infrastructure.IJSVoidResult {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.JSInterop.Infrastructure.JSObjectReferenceJsonConverter : JsonConverter`1<IJSObjectReference> {
    private JSRuntime _jsRuntime;
    public JSObjectReferenceJsonConverter(JSRuntime jsRuntime);
    public virtual bool CanConvert(Type typeToConvert);
    public virtual IJSObjectReference Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, IJSObjectReference value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.JSInterop.Infrastructure.JSStreamReferenceJsonConverter : JsonConverter`1<IJSStreamReference> {
    private static JsonEncodedText _jsStreamReferenceLengthKey;
    private JSRuntime _jsRuntime;
    public JSStreamReferenceJsonConverter(JSRuntime jsRuntime);
    private static JSStreamReferenceJsonConverter();
    public virtual bool CanConvert(Type typeToConvert);
    public virtual IJSStreamReference Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, IJSStreamReference value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.JSInterop.Infrastructure.TaskGenericsUtil : object {
    private static ConcurrentDictionary`2<Type, ITaskResultGetter> _cachedResultGetters;
    private static ConcurrentDictionary`2<Type, ITcsResultSetter> _cachedResultSetters;
    private static TaskGenericsUtil();
    public static void SetTaskCompletionSourceResult(object taskCompletionSource, object result);
    public static void SetTaskCompletionSourceException(object taskCompletionSource, Exception exception);
    public static Type GetTaskCompletionSourceResultType(object taskCompletionSource);
    public static object GetTaskResult(Task task);
    private static Type GetTaskResultType(Type taskType);
    private static ITcsResultSetter CreateResultSetter(object taskCompletionSource);
}
public enum Microsoft.JSInterop.JSCallResultType : Enum {
    public int value__;
    public static JSCallResultType Default;
    public static JSCallResultType JSObjectReference;
    public static JSCallResultType JSStreamReference;
    public static JSCallResultType JSVoidResult;
}
internal static class Microsoft.JSInterop.JSCallResultTypeHelper : object {
    private static Assembly _currentAssembly;
    private static JSCallResultTypeHelper();
    [NullableContextAttribute("2")]
public static JSCallResultType FromGeneric();
}
public class Microsoft.JSInterop.JSDisconnectedException : Exception {
    [NullableContextAttribute("1")]
public JSDisconnectedException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.JSInterop.JSException : Exception {
    public JSException(string message);
    public JSException(string message, Exception innerException);
}
[ExtensionAttribute]
public static class Microsoft.JSInterop.JSInProcessObjectReferenceExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public static void InvokeVoid(IJSInProcessObjectReference jsObjectReference, string identifier, Object[] args);
}
public abstract class Microsoft.JSInterop.JSInProcessRuntime : JSRuntime {
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed.")]
internal TValue Invoke(string identifier, long targetInstanceId, Object[] args);
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed.")]
public sealed virtual TValue Invoke(string identifier, Object[] args);
    [NullableContextAttribute("2")]
protected virtual string InvokeJS(string identifier, string argsJson);
    [NullableContextAttribute("2")]
protected abstract virtual string InvokeJS(string identifier, string argsJson, JSCallResultType resultType, long targetInstanceId);
}
[ExtensionAttribute]
public static class Microsoft.JSInterop.JSInProcessRuntimeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public static void InvokeVoid(IJSInProcessRuntime jsRuntime, string identifier, Object[] args);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Microsoft.JSInterop.JSInvokableAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    public string Identifier { get; }
    [NullableContextAttribute("1")]
public JSInvokableAttribute(string identifier);
    [CompilerGeneratedAttribute]
public string get_Identifier();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.JSInterop.JSObjectReferenceExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSObjectReferenceExtensions/<InvokeVoidAsync>d__0")]
[ExtensionAttribute]
public static ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, Object[] args);
    [ExtensionAttribute]
public static ValueTask`1<TValue> InvokeAsync(IJSObjectReference jsObjectReference, string identifier, Object[] args);
    [ExtensionAttribute]
public static ValueTask`1<TValue> InvokeAsync(IJSObjectReference jsObjectReference, string identifier, CancellationToken cancellationToken, Object[] args);
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSObjectReferenceExtensions/<InvokeVoidAsync>d__3")]
[ExtensionAttribute]
public static ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, CancellationToken cancellationToken, Object[] args);
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSObjectReferenceExtensions/<InvokeAsync>d__4`1")]
[ExtensionAttribute]
public static ValueTask`1<TValue> InvokeAsync(IJSObjectReference jsObjectReference, string identifier, TimeSpan timeout, Object[] args);
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSObjectReferenceExtensions/<InvokeVoidAsync>d__5")]
[ExtensionAttribute]
public static ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, TimeSpan timeout, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.JSInterop.JSRuntime : object {
    private long _nextObjectReferenceId;
    private long _nextPendingTaskId;
    private ConcurrentDictionary`2<long, object> _pendingTasks;
    private ConcurrentDictionary`2<long, IDotNetObjectReference> _trackedRefsById;
    private ConcurrentDictionary`2<long, CancellationTokenRegistration> _cancellationRegistrations;
    internal ArrayBuilder`1<Byte[]> ByteArraysToBeRevived;
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <JsonSerializerOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DefaultAsyncTimeout>k__BackingField;
    protected internal JsonSerializerOptions JsonSerializerOptions { get; }
    protected Nullable`1<TimeSpan> DefaultAsyncTimeout { get; protected set; }
    [CompilerGeneratedAttribute]
protected internal JsonSerializerOptions get_JsonSerializerOptions();
    [CompilerGeneratedAttribute]
protected Nullable`1<TimeSpan> get_DefaultAsyncTimeout();
    [CompilerGeneratedAttribute]
protected void set_DefaultAsyncTimeout(Nullable`1<TimeSpan> value);
    [NullableContextAttribute("2")]
public sealed virtual ValueTask`1<TValue> InvokeAsync(string identifier, Object[] args);
    [NullableContextAttribute("2")]
public sealed virtual ValueTask`1<TValue> InvokeAsync(string identifier, CancellationToken cancellationToken, Object[] args);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.JSInterop.JSRuntime/<InvokeAsync>d__16`1")]
internal ValueTask`1<TValue> InvokeAsync(long targetInstanceId, string identifier, Object[] args);
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
internal ValueTask`1<TValue> InvokeAsync(long targetInstanceId, string identifier, CancellationToken cancellationToken, Object[] args);
    private void CleanupTasksAndRegistrations(long taskId);
    protected virtual void BeginInvokeJS(long taskId, string identifier, string argsJson);
    protected abstract virtual void BeginInvokeJS(long taskId, string identifier, string argsJson, JSCallResultType resultType, long targetInstanceId);
    protected internal abstract virtual void EndInvokeDotNet(DotNetInvocationInfo invocationInfo, DotNetInvocationResult& modreq(System.Runtime.InteropServices.InAttribute) invocationResult);
    protected internal virtual void SendByteArray(int id, Byte[] data);
    protected internal virtual void ReceiveByteArray(int id, Byte[] data);
    protected internal virtual Task`1<Stream> ReadJSDataAsStreamAsync(IJSStreamReference jsStreamReference, long totalLength, CancellationToken cancellationToken);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2072:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
internal bool EndInvokeJS(long taskId, bool succeeded, Utf8JsonReader& jsonReader);
    protected internal virtual Task TransmitStreamAsync(long streamId, DotNetStreamReference dotNetStreamReference);
    internal long BeginTransmittingStream(DotNetStreamReference dotNetStreamReference);
    internal long TrackObjectReference(DotNetObjectReference`1<TValue> dotNetObjectReference);
    internal IDotNetObjectReference GetObjectReference(long dotNetObjectId);
    internal void ReleaseObjectReference(long dotNetObjectId);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.JSInterop.JSRuntimeExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSRuntimeExtensions/<InvokeVoidAsync>d__0")]
[ExtensionAttribute]
public static ValueTask InvokeVoidAsync(IJSRuntime jsRuntime, string identifier, Object[] args);
    [ExtensionAttribute]
public static ValueTask`1<TValue> InvokeAsync(IJSRuntime jsRuntime, string identifier, Object[] args);
    [ExtensionAttribute]
public static ValueTask`1<TValue> InvokeAsync(IJSRuntime jsRuntime, string identifier, CancellationToken cancellationToken, Object[] args);
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSRuntimeExtensions/<InvokeVoidAsync>d__3")]
[ExtensionAttribute]
public static ValueTask InvokeVoidAsync(IJSRuntime jsRuntime, string identifier, CancellationToken cancellationToken, Object[] args);
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSRuntimeExtensions/<InvokeAsync>d__4`1")]
[ExtensionAttribute]
public static ValueTask`1<TValue> InvokeAsync(IJSRuntime jsRuntime, string identifier, TimeSpan timeout, Object[] args);
    [AsyncStateMachineAttribute("Microsoft.JSInterop.JSRuntimeExtensions/<InvokeVoidAsync>d__5")]
[ExtensionAttribute]
public static ValueTask InvokeVoidAsync(IJSRuntime jsRuntime, string identifier, TimeSpan timeout, Object[] args);
}
