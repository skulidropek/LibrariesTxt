internal class Microsoft.AspNetCore.Mvc.ApplicationModels.AntiforgeryApplicationModelProvider : object {
    private MvcOptions _mvcOptions;
    private AntiforgeryMiddlewareAuthorizationFilter AntiforgeryMiddlewareAuthorizationFilter;
    public int Order { get; }
    public AntiforgeryApplicationModelProvider(IOptions`1<MvcOptions> mvcOptions, ILogger`1<AntiforgeryMiddlewareAuthorizationFilter> logger);
    public sealed virtual int get_Order();
    public sealed virtual void OnProvidersExecuting(ApplicationModelProviderContext context);
    public sealed virtual void OnProvidersExecuted(ApplicationModelProviderContext context);
    private static bool HasValidAntiforgeryMetadata(IReadOnlyList`1<object> attributes, IList`1<IFilterMetadata> filters);
}
[AttributeUsageAttribute("68")]
public class Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    public int Order { get; public set; }
    public bool IsReusable { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    public sealed virtual bool get_IsReusable();
    [NullableContextAttribute("1")]
public sealed virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Mvc.Controller : ControllerBase {
    private ITempDataDictionary _tempData;
    private DynamicViewData _viewBag;
    private ViewDataDictionary _viewData;
    [ViewDataDictionaryAttribute]
public ViewDataDictionary ViewData { get; public set; }
    public ITempDataDictionary TempData { get; public set; }
    [DynamicAttribute]
public object ViewBag { get; }
    public ViewDataDictionary get_ViewData();
    public void set_ViewData(ViewDataDictionary value);
    public ITempDataDictionary get_TempData();
    public void set_TempData(ITempDataDictionary value);
    public object get_ViewBag();
    [NonActionAttribute]
public virtual ViewResult View();
    [NonActionAttribute]
public virtual ViewResult View(string viewName);
    [NonActionAttribute]
public virtual ViewResult View(object model);
    [NullableContextAttribute("2")]
[NonActionAttribute]
public virtual ViewResult View(string viewName, object model);
    [NonActionAttribute]
public virtual PartialViewResult PartialView();
    [NonActionAttribute]
public virtual PartialViewResult PartialView(string viewName);
    [NonActionAttribute]
public virtual PartialViewResult PartialView(object model);
    [NullableContextAttribute("2")]
[NonActionAttribute]
public virtual PartialViewResult PartialView(string viewName, object model);
    [NonActionAttribute]
public virtual ViewComponentResult ViewComponent(string componentName);
    [NonActionAttribute]
public virtual ViewComponentResult ViewComponent(Type componentType);
    [NonActionAttribute]
public virtual ViewComponentResult ViewComponent(string componentName, object arguments);
    [NonActionAttribute]
public virtual ViewComponentResult ViewComponent(Type componentType, object arguments);
    [NonActionAttribute]
public virtual JsonResult Json(object data);
    [NullableContextAttribute("2")]
[NonActionAttribute]
public virtual JsonResult Json(object data, object serializerSettings);
    [NonActionAttribute]
public virtual void OnActionExecuting(ActionExecutingContext context);
    [NonActionAttribute]
public virtual void OnActionExecuted(ActionExecutedContext context);
    [NonActionAttribute]
public virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [CompilerGeneratedAttribute]
private ViewDataDictionary <get_ViewBag>b__10_0();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.Controller/<<OnActionExecutionAsync>g__Awaited|27_0>d")]
[CompilerGeneratedAttribute]
internal static Task <OnActionExecutionAsync>g__Awaited|27_0(Controller controller, Task`1<ActionExecutedContext> task);
}
public class Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions : object {
    private CookieBuilder _cookieBuilder;
    public CookieBuilder Cookie { get; public set; }
    public CookieBuilder get_Cookie();
    public void set_Cookie(CookieBuilder value);
}
internal class Microsoft.AspNetCore.Mvc.Core.Filters.AntiforgeryMiddlewareAuthorizationFilter : object {
    internal static string AntiforgeryMiddlewareWithEndpointInvokedKey;
    private ILogger _logger;
    public AntiforgeryMiddlewareAuthorizationFilter(ILogger`1<AntiforgeryMiddlewareAuthorizationFilter> logger);
    public sealed virtual Task OnAuthorizationAsync(AuthorizationFilterContext context);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData : EventData {
    public static string EventName;
    [CompilerGeneratedAttribute]
private ActionDescriptor <ActionDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewComponentContext <ViewComponentContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IViewComponentResult <ViewComponentResult>k__BackingField;
    [CompilerGeneratedAttribute]
private object <ViewComponent>k__BackingField;
    public ActionDescriptor ActionDescriptor { get; }
    public ViewComponentContext ViewComponentContext { get; }
    public IViewComponentResult ViewComponentResult { get; }
    public object ViewComponent { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public AfterViewComponentEventData(ActionDescriptor actionDescriptor, ViewComponentContext viewComponentContext, IViewComponentResult viewComponentResult, object viewComponent);
    [CompilerGeneratedAttribute]
public ActionDescriptor get_ActionDescriptor();
    [CompilerGeneratedAttribute]
public ViewComponentContext get_ViewComponentContext();
    [CompilerGeneratedAttribute]
public IViewComponentResult get_ViewComponentResult();
    [CompilerGeneratedAttribute]
public object get_ViewComponent();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData : EventData {
    public static string EventName;
    [CompilerGeneratedAttribute]
private IView <View>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewContext <ViewContext>k__BackingField;
    public IView View { get; }
    public ViewContext ViewContext { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public AfterViewEventData(IView view, ViewContext viewContext);
    [CompilerGeneratedAttribute]
public IView get_View();
    [CompilerGeneratedAttribute]
public ViewContext get_ViewContext();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData : EventData {
    public static string EventName;
    [CompilerGeneratedAttribute]
private ActionDescriptor <ActionDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewComponentContext <ViewComponentContext>k__BackingField;
    [CompilerGeneratedAttribute]
private object <ViewComponent>k__BackingField;
    public ActionDescriptor ActionDescriptor { get; }
    public ViewComponentContext ViewComponentContext { get; }
    public object ViewComponent { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public BeforeViewComponentEventData(ActionDescriptor actionDescriptor, ViewComponentContext viewComponentContext, object viewComponent);
    [CompilerGeneratedAttribute]
public ActionDescriptor get_ActionDescriptor();
    [CompilerGeneratedAttribute]
public ViewComponentContext get_ViewComponentContext();
    [CompilerGeneratedAttribute]
public object get_ViewComponent();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData : EventData {
    public static string EventName;
    [CompilerGeneratedAttribute]
private IView <View>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewContext <ViewContext>k__BackingField;
    public IView View { get; }
    public ViewContext ViewContext { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public BeforeViewEventData(IView view, ViewContext viewContext);
    [CompilerGeneratedAttribute]
public IView get_View();
    [CompilerGeneratedAttribute]
public ViewContext get_ViewContext();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData : EventData {
    public static string EventName;
    [CompilerGeneratedAttribute]
private ActionDescriptor <ActionDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewComponentContext <ViewComponentContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IView <View>k__BackingField;
    public ActionDescriptor ActionDescriptor { get; }
    public ViewComponentContext ViewComponentContext { get; }
    public IView View { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public ViewComponentAfterViewExecuteEventData(ActionDescriptor actionDescriptor, ViewComponentContext viewComponentContext, IView view);
    [CompilerGeneratedAttribute]
public ActionDescriptor get_ActionDescriptor();
    [CompilerGeneratedAttribute]
public ViewComponentContext get_ViewComponentContext();
    [CompilerGeneratedAttribute]
public IView get_View();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData : EventData {
    public static string EventName;
    [CompilerGeneratedAttribute]
private ActionDescriptor <ActionDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewComponentContext <ViewComponentContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IView <View>k__BackingField;
    public ActionDescriptor ActionDescriptor { get; }
    public ViewComponentContext ViewComponentContext { get; }
    public IView View { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public ViewComponentBeforeViewExecuteEventData(ActionDescriptor actionDescriptor, ViewComponentContext viewComponentContext, IView view);
    [CompilerGeneratedAttribute]
public ActionDescriptor get_ActionDescriptor();
    [CompilerGeneratedAttribute]
public ViewComponentContext get_ViewComponentContext();
    [CompilerGeneratedAttribute]
public IView get_View();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData : EventData {
    private static object BoxedTrue;
    private static object BoxedFalse;
    public static string EventName;
    [CompilerGeneratedAttribute]
private ActionContext <ActionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMainPage>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionResult <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    [CompilerGeneratedAttribute]
private IView <View>k__BackingField;
    public ActionContext ActionContext { get; }
    public bool IsMainPage { get; }
    public ActionResult Result { get; }
    public string ViewName { get; }
    public IView View { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public ViewFoundEventData(ActionContext actionContext, bool isMainPage, ActionResult result, string viewName, IView view);
    private static ViewFoundEventData();
    [CompilerGeneratedAttribute]
public ActionContext get_ActionContext();
    [CompilerGeneratedAttribute]
public bool get_IsMainPage();
    [CompilerGeneratedAttribute]
public ActionResult get_Result();
    [CompilerGeneratedAttribute]
public string get_ViewName();
    [CompilerGeneratedAttribute]
public IView get_View();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData : EventData {
    private static object BoxedTrue;
    private static object BoxedFalse;
    public static string EventName;
    [CompilerGeneratedAttribute]
private ActionContext <ActionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMainPage>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionResult <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <SearchedLocations>k__BackingField;
    public ActionContext ActionContext { get; }
    public bool IsMainPage { get; }
    public ActionResult Result { get; }
    public string ViewName { get; }
    public IEnumerable`1<string> SearchedLocations { get; }
    protected int Count { get; }
    protected KeyValuePair`2<string, object> Item { get; }
    public ViewNotFoundEventData(ActionContext actionContext, bool isMainPage, ActionResult result, string viewName, IEnumerable`1<string> searchedLocations);
    private static ViewNotFoundEventData();
    [CompilerGeneratedAttribute]
public ActionContext get_ActionContext();
    [CompilerGeneratedAttribute]
public bool get_IsMainPage();
    [CompilerGeneratedAttribute]
public ActionResult get_Result();
    [CompilerGeneratedAttribute]
public string get_ViewName();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_SearchedLocations();
    protected virtual int get_Count();
    protected virtual KeyValuePair`2<string, object> get_Item(int index);
}
[AttributeUsageAttribute("68")]
public class Microsoft.AspNetCore.Mvc.IgnoreAntiforgeryTokenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    public int Order { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.IViewComponentHelper {
    public abstract virtual Task`1<IHtmlContent> InvokeAsync(string name, object arguments);
    public abstract virtual Task`1<IHtmlContent> InvokeAsync(Type componentType, object arguments);
}
public interface Microsoft.AspNetCore.Mvc.IViewComponentResult {
    public abstract virtual void Execute(ViewComponentContext context);
    public abstract virtual Task ExecuteAsync(ViewComponentContext context);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions : object {
    [ExtensionAttribute]
public static void AddModelError(ModelStateDictionary modelState, Expression`1<Func`2<TModel, object>> expression, string errorMessage);
    [ExtensionAttribute]
public static void TryAddModelException(ModelStateDictionary modelState, Expression`1<Func`2<TModel, object>> expression, Exception exception);
    [ExtensionAttribute]
public static void AddModelError(ModelStateDictionary modelState, Expression`1<Func`2<TModel, object>> expression, Exception exception, ModelMetadata metadata);
    [ExtensionAttribute]
public static bool Remove(ModelStateDictionary modelState, Expression`1<Func`2<TModel, object>> expression);
    [ExtensionAttribute]
public static void RemoveAll(ModelStateDictionary modelState, Expression`1<Func`2<TModel, object>> expression);
    private static string GetExpressionText(LambdaExpression expression);
    private static bool IsConversionToObject(UnaryExpression expression);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.MvcViewOptions : object {
    private IReadOnlyList`1<ICompatibilitySwitch> _switches;
    private HtmlHelperOptions _htmlHelperOptions;
    [CompilerGeneratedAttribute]
private IList`1<IViewEngine> <ViewEngines>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IClientModelValidatorProvider> <ClientModelValidatorProviders>k__BackingField;
    public HtmlHelperOptions HtmlHelperOptions { get; public set; }
    public IList`1<IViewEngine> ViewEngines { get; }
    public IList`1<IClientModelValidatorProvider> ClientModelValidatorProviders { get; }
    public HtmlHelperOptions get_HtmlHelperOptions();
    public void set_HtmlHelperOptions(HtmlHelperOptions value);
    [CompilerGeneratedAttribute]
public IList`1<IViewEngine> get_ViewEngines();
    [CompilerGeneratedAttribute]
public IList`1<IClientModelValidatorProvider> get_ClientModelValidatorProviders();
    private sealed virtual override IEnumerator`1<ICompatibilitySwitch> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Mvc.PageRemoteAttribute : RemoteAttributeBase {
    [CompilerGeneratedAttribute]
private string <PageHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageName>k__BackingField;
    public string PageHandler { get; public set; }
    public string PageName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PageHandler();
    [CompilerGeneratedAttribute]
public void set_PageHandler(string value);
    [CompilerGeneratedAttribute]
public string get_PageName();
    [CompilerGeneratedAttribute]
public void set_PageName(string value);
    [NullableContextAttribute("1")]
protected virtual string GetUrl(ClientModelValidationContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.PartialViewResult : ActionResult {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewDataDictionary <ViewData>k__BackingField;
    [CompilerGeneratedAttribute]
private ITempDataDictionary <TempData>k__BackingField;
    [CompilerGeneratedAttribute]
private IViewEngine <ViewEngine>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public Nullable`1<int> StatusCode { get; public set; }
    public string ViewName { get; public set; }
    public object Model { get; }
    [NullableAttribute("1")]
public ViewDataDictionary ViewData { get; public set; }
    [NullableAttribute("1")]
public ITempDataDictionary TempData { get; public set; }
    public IViewEngine ViewEngine { get; public set; }
    public string ContentType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ViewName();
    [CompilerGeneratedAttribute]
public void set_ViewName(string value);
    public object get_Model();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ViewDataDictionary get_ViewData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ViewData(ViewDataDictionary value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ITempDataDictionary get_TempData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_TempData(ITempDataDictionary value);
    [CompilerGeneratedAttribute]
public IViewEngine get_ViewEngine();
    [CompilerGeneratedAttribute]
public void set_ViewEngine(IViewEngine value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [NullableContextAttribute("1")]
public virtual Task ExecuteResultAsync(ActionContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Mvc.RemoteAttribute : RemoteAttributeBase {
    [CompilerGeneratedAttribute]
private string <RouteName>k__BackingField;
    [NullableAttribute("2")]
protected string RouteName { get; protected set; }
    public RemoteAttribute(string routeName);
    public RemoteAttribute(string action, string controller);
    public RemoteAttribute(string action, string controller, string areaName);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected string get_RouteName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_RouteName(string value);
    protected virtual string GetUrl(ClientModelValidationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public abstract class Microsoft.AspNetCore.Mvc.RemoteAttributeBase : ValidationAttribute {
    private string _additionalFields;
    private String[] _additionalFieldsSplit;
    private bool _checkedForLocalizer;
    private IStringLocalizer _stringLocalizer;
    [CompilerGeneratedAttribute]
private RouteValueDictionary <RouteData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    protected RouteValueDictionary RouteData { get; }
    [NullableAttribute("2")]
public string HttpMethod { get; public set; }
    public string AdditionalFields { get; public set; }
    [CompilerGeneratedAttribute]
protected RouteValueDictionary get_RouteData();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_HttpMethod();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_HttpMethod(string value);
    public string get_AdditionalFields();
    public void set_AdditionalFields(string value);
    public string FormatAdditionalFieldsForClientValidation(string property);
    public static string FormatPropertyForClientValidation(string property);
    protected abstract virtual string GetUrl(ClientModelValidationContext context);
    public virtual string FormatErrorMessage(string name);
    [NullableContextAttribute("2")]
public virtual bool IsValid(object value);
    public virtual void AddValidation(ClientModelValidationContext context);
    private static void MergeAttribute(IDictionary`2<string, string> attributes, string key, string value);
    private static IEnumerable`1<string> SplitAndTrimPropertyNames(string original);
    private void CheckForLocalizer(ClientModelValidationContext context);
    private string GetErrorMessage(string displayName);
}
public enum Microsoft.AspNetCore.Mvc.Rendering.CheckBoxHiddenInputRenderMode : Enum {
    public int value__;
    public static CheckBoxHiddenInputRenderMode None;
    public static CheckBoxHiddenInputRenderMode Inline;
    public static CheckBoxHiddenInputRenderMode EndOfForm;
}
public enum Microsoft.AspNetCore.Mvc.Rendering.FormInputRenderMode : Enum {
    public int value__;
    public static FormInputRenderMode DetectCultureFromInputType;
    public static FormInputRenderMode AlwaysUseCurrentCulture;
}
public enum Microsoft.AspNetCore.Mvc.Rendering.FormMethod : Enum {
    public int value__;
    public static FormMethod Get;
    public static FormMethod Post;
    public static FormMethod Dialog;
}
public enum Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode : Enum {
    public int value__;
    public static Html5DateRenderingMode Rfc3339;
    public static Html5DateRenderingMode CurrentCulture;
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperComponentExtensions : object {
    [ExtensionAttribute]
public static Task`1<IHtmlContent> RenderComponentAsync(IHtmlHelper htmlHelper, RenderMode renderMode);
    [ExtensionAttribute]
public static Task`1<IHtmlContent> RenderComponentAsync(IHtmlHelper htmlHelper, RenderMode renderMode, object parameters);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperComponentExtensions/<RenderComponentAsync>d__2")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> RenderComponentAsync(IHtmlHelper htmlHelper, Type componentType, RenderMode renderMode, object parameters);
    internal static IComponentRenderMode MapRenderMode(RenderMode renderMode);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions : object {
    [ExtensionAttribute]
public static IHtmlContent Display(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent Display(IHtmlHelper htmlHelper, string expression, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent Display(IHtmlHelper htmlHelper, string expression, string templateName);
    [ExtensionAttribute]
public static IHtmlContent Display(IHtmlHelper htmlHelper, string expression, string templateName, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent Display(IHtmlHelper htmlHelper, string expression, string templateName, string htmlFieldName);
    [ExtensionAttribute]
public static IHtmlContent DisplayFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent DisplayFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent DisplayFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string templateName);
    [ExtensionAttribute]
public static IHtmlContent DisplayFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string templateName, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent DisplayFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string templateName, string htmlFieldName);
    [ExtensionAttribute]
public static IHtmlContent DisplayForModel(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static IHtmlContent DisplayForModel(IHtmlHelper htmlHelper, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent DisplayForModel(IHtmlHelper htmlHelper, string templateName);
    [ExtensionAttribute]
public static IHtmlContent DisplayForModel(IHtmlHelper htmlHelper, string templateName, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent DisplayForModel(IHtmlHelper htmlHelper, string templateName, string htmlFieldName);
    [ExtensionAttribute]
public static IHtmlContent DisplayForModel(IHtmlHelper htmlHelper, string templateName, string htmlFieldName, object additionalViewData);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions : object {
    [ExtensionAttribute]
public static string DisplayNameForModel(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static string DisplayNameFor(IHtmlHelper`1<IEnumerable`1<TModelItem>> htmlHelper, Expression`1<Func`2<TModelItem, TResult>> expression);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions : object {
    [ExtensionAttribute]
public static IHtmlContent Editor(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent Editor(IHtmlHelper htmlHelper, string expression, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent Editor(IHtmlHelper htmlHelper, string expression, string templateName);
    [ExtensionAttribute]
public static IHtmlContent Editor(IHtmlHelper htmlHelper, string expression, string templateName, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent Editor(IHtmlHelper htmlHelper, string expression, string templateName, string htmlFieldName);
    [ExtensionAttribute]
public static IHtmlContent EditorFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent EditorFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent EditorFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string templateName);
    [ExtensionAttribute]
public static IHtmlContent EditorFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string templateName, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent EditorFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string templateName, string htmlFieldName);
    [ExtensionAttribute]
public static IHtmlContent EditorForModel(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static IHtmlContent EditorForModel(IHtmlHelper htmlHelper, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent EditorForModel(IHtmlHelper htmlHelper, string templateName);
    [ExtensionAttribute]
public static IHtmlContent EditorForModel(IHtmlHelper htmlHelper, string templateName, object additionalViewData);
    [ExtensionAttribute]
public static IHtmlContent EditorForModel(IHtmlHelper htmlHelper, string templateName, string htmlFieldName);
    [ExtensionAttribute]
public static IHtmlContent EditorForModel(IHtmlHelper htmlHelper, string templateName, string htmlFieldName, object additionalViewData);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions : object {
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, Nullable`1<bool> antiforgery);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, FormMethod method);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, FormMethod method, object htmlAttributes);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, FormMethod method, Nullable`1<bool> antiforgery, object htmlAttributes);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, object routeValues);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, string actionName, string controllerName);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, string actionName, string controllerName, object routeValues);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, string actionName, string controllerName, FormMethod method);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, string actionName, string controllerName, object routeValues, FormMethod method);
    [ExtensionAttribute]
public static MvcForm BeginForm(IHtmlHelper htmlHelper, string actionName, string controllerName, FormMethod method, object htmlAttributes);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, object routeValues);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, object routeValues, Nullable`1<bool> antiforgery);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, string routeName);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, string routeName, Nullable`1<bool> antiforgery);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, string routeName, object routeValues);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, string routeName, FormMethod method);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, string routeName, object routeValues, FormMethod method);
    [ExtensionAttribute]
public static MvcForm BeginRouteForm(IHtmlHelper htmlHelper, string routeName, FormMethod method, object htmlAttributes);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions : object {
    [ExtensionAttribute]
public static IHtmlContent CheckBox(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent CheckBox(IHtmlHelper htmlHelper, string expression, bool isChecked);
    [ExtensionAttribute]
public static IHtmlContent CheckBox(IHtmlHelper htmlHelper, string expression, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent CheckBoxFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, bool>> expression);
    [ExtensionAttribute]
public static IHtmlContent Hidden(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent Hidden(IHtmlHelper htmlHelper, string expression, object value);
    [ExtensionAttribute]
public static IHtmlContent HiddenFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent Password(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent Password(IHtmlHelper htmlHelper, string expression, object value);
    [ExtensionAttribute]
public static IHtmlContent PasswordFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent RadioButton(IHtmlHelper htmlHelper, string expression, object value);
    [ExtensionAttribute]
public static IHtmlContent RadioButton(IHtmlHelper htmlHelper, string expression, object value, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent RadioButton(IHtmlHelper htmlHelper, string expression, object value, bool isChecked);
    [ExtensionAttribute]
public static IHtmlContent RadioButtonFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, object value);
    [ExtensionAttribute]
public static IHtmlContent TextBox(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent TextBox(IHtmlHelper htmlHelper, string expression, object value);
    [ExtensionAttribute]
public static IHtmlContent TextBox(IHtmlHelper htmlHelper, string expression, object value, string format);
    [ExtensionAttribute]
public static IHtmlContent TextBox(IHtmlHelper htmlHelper, string expression, object value, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent TextBoxFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent TextBoxFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string format);
    [ExtensionAttribute]
public static IHtmlContent TextBoxFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent TextArea(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent TextArea(IHtmlHelper htmlHelper, string expression, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent TextArea(IHtmlHelper htmlHelper, string expression, string value);
    [ExtensionAttribute]
public static IHtmlContent TextArea(IHtmlHelper htmlHelper, string expression, string value, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent TextAreaFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent TextAreaFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, object htmlAttributes);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions : object {
    [ExtensionAttribute]
public static IHtmlContent Label(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent Label(IHtmlHelper htmlHelper, string expression, string labelText);
    [ExtensionAttribute]
public static IHtmlContent LabelFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent LabelFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string labelText);
    [ExtensionAttribute]
public static IHtmlContent LabelFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent LabelForModel(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static IHtmlContent LabelForModel(IHtmlHelper htmlHelper, string labelText);
    [ExtensionAttribute]
public static IHtmlContent LabelForModel(IHtmlHelper htmlHelper, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent LabelForModel(IHtmlHelper htmlHelper, string labelText, object htmlAttributes);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions : object {
    [ExtensionAttribute]
public static IHtmlContent ActionLink(IHtmlHelper helper, string linkText, string actionName);
    [ExtensionAttribute]
public static IHtmlContent ActionLink(IHtmlHelper helper, string linkText, string actionName, object routeValues);
    [ExtensionAttribute]
public static IHtmlContent ActionLink(IHtmlHelper helper, string linkText, string actionName, object routeValues, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent ActionLink(IHtmlHelper helper, string linkText, string actionName, string controllerName);
    [ExtensionAttribute]
public static IHtmlContent ActionLink(IHtmlHelper helper, string linkText, string actionName, string controllerName, object routeValues);
    [ExtensionAttribute]
public static IHtmlContent ActionLink(IHtmlHelper helper, string linkText, string actionName, string controllerName, object routeValues, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent RouteLink(IHtmlHelper htmlHelper, string linkText, object routeValues);
    [ExtensionAttribute]
public static IHtmlContent RouteLink(IHtmlHelper htmlHelper, string linkText, string routeName);
    [ExtensionAttribute]
public static IHtmlContent RouteLink(IHtmlHelper htmlHelper, string linkText, string routeName, object routeValues);
    [ExtensionAttribute]
public static IHtmlContent RouteLink(IHtmlHelper htmlHelper, string linkText, object routeValues, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent RouteLink(IHtmlHelper htmlHelper, string linkText, string routeName, object routeValues, object htmlAttributes);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperNameExtensions : object {
    [ExtensionAttribute]
public static string NameForModel(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static string IdForModel(IHtmlHelper htmlHelper);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions : object {
    [ExtensionAttribute]
public static Task`1<IHtmlContent> PartialAsync(IHtmlHelper htmlHelper, string partialViewName);
    [ExtensionAttribute]
public static Task`1<IHtmlContent> PartialAsync(IHtmlHelper htmlHelper, string partialViewName, ViewDataDictionary viewData);
    [ExtensionAttribute]
public static Task`1<IHtmlContent> PartialAsync(IHtmlHelper htmlHelper, string partialViewName, object model);
    [ExtensionAttribute]
public static IHtmlContent Partial(IHtmlHelper htmlHelper, string partialViewName);
    [ExtensionAttribute]
public static IHtmlContent Partial(IHtmlHelper htmlHelper, string partialViewName, ViewDataDictionary viewData);
    [ExtensionAttribute]
public static IHtmlContent Partial(IHtmlHelper htmlHelper, string partialViewName, object model);
    [ExtensionAttribute]
public static IHtmlContent Partial(IHtmlHelper htmlHelper, string partialViewName, object model, ViewDataDictionary viewData);
    [ExtensionAttribute]
public static void RenderPartial(IHtmlHelper htmlHelper, string partialViewName);
    [ExtensionAttribute]
public static void RenderPartial(IHtmlHelper htmlHelper, string partialViewName, ViewDataDictionary viewData);
    [ExtensionAttribute]
public static void RenderPartial(IHtmlHelper htmlHelper, string partialViewName, object model);
    [ExtensionAttribute]
public static void RenderPartial(IHtmlHelper htmlHelper, string partialViewName, object model, ViewDataDictionary viewData);
    [ExtensionAttribute]
public static Task RenderPartialAsync(IHtmlHelper htmlHelper, string partialViewName);
    [ExtensionAttribute]
public static Task RenderPartialAsync(IHtmlHelper htmlHelper, string partialViewName, ViewDataDictionary viewData);
    [ExtensionAttribute]
public static Task RenderPartialAsync(IHtmlHelper htmlHelper, string partialViewName, object model);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions : object {
    [ExtensionAttribute]
public static IHtmlContent DropDownList(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent DropDownList(IHtmlHelper htmlHelper, string expression, string optionLabel);
    [ExtensionAttribute]
public static IHtmlContent DropDownList(IHtmlHelper htmlHelper, string expression, IEnumerable`1<SelectListItem> selectList);
    [ExtensionAttribute]
public static IHtmlContent DropDownList(IHtmlHelper htmlHelper, string expression, IEnumerable`1<SelectListItem> selectList, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent DropDownList(IHtmlHelper htmlHelper, string expression, IEnumerable`1<SelectListItem> selectList, string optionLabel);
    [ExtensionAttribute]
public static IHtmlContent DropDownListFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList);
    [ExtensionAttribute]
public static IHtmlContent DropDownListFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent DropDownListFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList, string optionLabel);
    [ExtensionAttribute]
public static IHtmlContent ListBox(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent ListBox(IHtmlHelper htmlHelper, string expression, IEnumerable`1<SelectListItem> selectList);
    [ExtensionAttribute]
public static IHtmlContent ListBoxFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions : object {
    [ExtensionAttribute]
public static IHtmlContent ValidationMessage(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessage(IHtmlHelper htmlHelper, string expression, string message);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessage(IHtmlHelper htmlHelper, string expression, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessage(IHtmlHelper htmlHelper, string expression, string message, string tag);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessage(IHtmlHelper htmlHelper, string expression, string message, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessageFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessageFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string message);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessageFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string message, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent ValidationMessageFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression, string message, string tag);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, bool excludePropertyErrors);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, string message);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, string message, string tag);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, bool excludePropertyErrors, string message);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, string message, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, string message, object htmlAttributes, string tag);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, bool excludePropertyErrors, string message, string tag);
    [ExtensionAttribute]
public static IHtmlContent ValidationSummary(IHtmlHelper htmlHelper, bool excludePropertyErrors, string message, object htmlAttributes);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValueExtensions : object {
    [ExtensionAttribute]
public static string Value(IHtmlHelper htmlHelper, string expression);
    [ExtensionAttribute]
public static string ValueFor(IHtmlHelper`1<TModel> htmlHelper, Expression`1<Func`2<TModel, TResult>> expression);
    [ExtensionAttribute]
public static string ValueForModel(IHtmlHelper htmlHelper);
    [ExtensionAttribute]
public static string ValueForModel(IHtmlHelper htmlHelper, string format);
}
public interface Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper {
    public Html5DateRenderingMode Html5DateRenderingMode { get; public set; }
    public string IdAttributeDotReplacement { get; }
    public IModelMetadataProvider MetadataProvider { get; }
    [DynamicAttribute]
public object ViewBag { get; }
    public ViewContext ViewContext { get; }
    public ViewDataDictionary ViewData { get; }
    public ITempDataDictionary TempData { get; }
    public UrlEncoder UrlEncoder { get; }
    public abstract virtual Html5DateRenderingMode get_Html5DateRenderingMode();
    public abstract virtual void set_Html5DateRenderingMode(Html5DateRenderingMode value);
    public abstract virtual string get_IdAttributeDotReplacement();
    public abstract virtual IModelMetadataProvider get_MetadataProvider();
    public abstract virtual object get_ViewBag();
    public abstract virtual ViewContext get_ViewContext();
    public abstract virtual ViewDataDictionary get_ViewData();
    public abstract virtual ITempDataDictionary get_TempData();
    public abstract virtual UrlEncoder get_UrlEncoder();
    public abstract virtual IHtmlContent ActionLink(string linkText, string actionName, string controllerName, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes);
    public abstract virtual IHtmlContent AntiForgeryToken();
    public abstract virtual MvcForm BeginForm(string actionName, string controllerName, object routeValues, FormMethod method, Nullable`1<bool> antiforgery, object htmlAttributes);
    public abstract virtual MvcForm BeginRouteForm(string routeName, object routeValues, FormMethod method, Nullable`1<bool> antiforgery, object htmlAttributes);
    public abstract virtual IHtmlContent CheckBox(string expression, Nullable`1<bool> isChecked, object htmlAttributes);
    public abstract virtual IHtmlContent Display(string expression, string templateName, string htmlFieldName, object additionalViewData);
    public abstract virtual string DisplayName(string expression);
    public abstract virtual string DisplayText(string expression);
    public abstract virtual IHtmlContent DropDownList(string expression, IEnumerable`1<SelectListItem> selectList, string optionLabel, object htmlAttributes);
    public abstract virtual IHtmlContent Editor(string expression, string templateName, string htmlFieldName, object additionalViewData);
    public abstract virtual string Encode(object value);
    public abstract virtual string Encode(string value);
    public abstract virtual void EndForm();
    public abstract virtual string FormatValue(object value, string format);
    public abstract virtual string GenerateIdFromName(string fullName);
    public abstract virtual IEnumerable`1<SelectListItem> GetEnumSelectList();
    public abstract virtual IEnumerable`1<SelectListItem> GetEnumSelectList(Type enumType);
    public abstract virtual IHtmlContent Hidden(string expression, object value, object htmlAttributes);
    public abstract virtual string Id(string expression);
    public abstract virtual IHtmlContent Label(string expression, string labelText, object htmlAttributes);
    public abstract virtual IHtmlContent ListBox(string expression, IEnumerable`1<SelectListItem> selectList, object htmlAttributes);
    public abstract virtual string Name(string expression);
    public abstract virtual Task`1<IHtmlContent> PartialAsync(string partialViewName, object model, ViewDataDictionary viewData);
    public abstract virtual IHtmlContent Password(string expression, object value, object htmlAttributes);
    public abstract virtual IHtmlContent RadioButton(string expression, object value, Nullable`1<bool> isChecked, object htmlAttributes);
    public abstract virtual IHtmlContent Raw(string value);
    public abstract virtual IHtmlContent Raw(object value);
    public abstract virtual Task RenderPartialAsync(string partialViewName, object model, ViewDataDictionary viewData);
    public abstract virtual IHtmlContent RouteLink(string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes);
    public abstract virtual IHtmlContent TextArea(string expression, string value, int rows, int columns, object htmlAttributes);
    public abstract virtual IHtmlContent TextBox(string expression, object value, string format, object htmlAttributes);
    public abstract virtual IHtmlContent ValidationMessage(string expression, string message, object htmlAttributes, string tag);
    public abstract virtual IHtmlContent ValidationSummary(bool excludePropertyErrors, string message, object htmlAttributes, string tag);
    public abstract virtual string Value(string expression, string format);
}
public interface Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1 {
    public ViewDataDictionary`1<TModel> ViewData { get; }
    public abstract virtual ViewDataDictionary`1<TModel> get_ViewData();
    public abstract virtual IHtmlContent CheckBoxFor(Expression`1<Func`2<TModel, bool>> expression, object htmlAttributes);
    public abstract virtual IHtmlContent DisplayFor(Expression`1<Func`2<TModel, TResult>> expression, string templateName, string htmlFieldName, object additionalViewData);
    public abstract virtual string DisplayNameFor(Expression`1<Func`2<TModel, TResult>> expression);
    public abstract virtual string DisplayNameForInnerType(Expression`1<Func`2<TModelItem, TResult>> expression);
    public abstract virtual string DisplayTextFor(Expression`1<Func`2<TModel, TResult>> expression);
    public abstract virtual IHtmlContent DropDownListFor(Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList, string optionLabel, object htmlAttributes);
    public abstract virtual IHtmlContent EditorFor(Expression`1<Func`2<TModel, TResult>> expression, string templateName, string htmlFieldName, object additionalViewData);
    public abstract virtual string Encode(object value);
    public abstract virtual string Encode(string value);
    public abstract virtual IHtmlContent HiddenFor(Expression`1<Func`2<TModel, TResult>> expression, object htmlAttributes);
    public abstract virtual string IdFor(Expression`1<Func`2<TModel, TResult>> expression);
    public abstract virtual IHtmlContent LabelFor(Expression`1<Func`2<TModel, TResult>> expression, string labelText, object htmlAttributes);
    public abstract virtual IHtmlContent ListBoxFor(Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList, object htmlAttributes);
    public abstract virtual string NameFor(Expression`1<Func`2<TModel, TResult>> expression);
    public abstract virtual IHtmlContent PasswordFor(Expression`1<Func`2<TModel, TResult>> expression, object htmlAttributes);
    public abstract virtual IHtmlContent RadioButtonFor(Expression`1<Func`2<TModel, TResult>> expression, object value, object htmlAttributes);
    public abstract virtual IHtmlContent Raw(object value);
    public abstract virtual IHtmlContent Raw(string value);
    public abstract virtual IHtmlContent TextAreaFor(Expression`1<Func`2<TModel, TResult>> expression, int rows, int columns, object htmlAttributes);
    public abstract virtual IHtmlContent TextBoxFor(Expression`1<Func`2<TModel, TResult>> expression, string format, object htmlAttributes);
    public abstract virtual IHtmlContent ValidationMessageFor(Expression`1<Func`2<TModel, TResult>> expression, string message, object htmlAttributes, string tag);
    public abstract virtual string ValueFor(Expression`1<Func`2<TModel, TResult>> expression, string format);
}
public interface Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper {
    public abstract virtual IHtmlContent Serialize(object value);
}
public class Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList : object {
    private IList`1<SelectListGroup> _groups;
    private IList`1<SelectListItem> _selectListItems;
    [CompilerGeneratedAttribute]
private string <DataGroupField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataTextField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataValueField>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable <SelectedValues>k__BackingField;
    public string DataGroupField { get; }
    public string DataTextField { get; }
    public string DataValueField { get; }
    public IEnumerable Items { get; }
    public IEnumerable SelectedValues { get; }
    public MultiSelectList(IEnumerable items);
    public MultiSelectList(IEnumerable items, IEnumerable selectedValues);
    public MultiSelectList(IEnumerable items, string dataValueField, string dataTextField);
    public MultiSelectList(IEnumerable items, string dataValueField, string dataTextField, IEnumerable selectedValues);
    public MultiSelectList(IEnumerable items, string dataValueField, string dataTextField, IEnumerable selectedValues, string dataGroupField);
    [CompilerGeneratedAttribute]
public string get_DataGroupField();
    [CompilerGeneratedAttribute]
public string get_DataTextField();
    [CompilerGeneratedAttribute]
public string get_DataValueField();
    [CompilerGeneratedAttribute]
public IEnumerable get_Items();
    [CompilerGeneratedAttribute]
public IEnumerable get_SelectedValues();
    public virtual IEnumerator`1<SelectListItem> GetEnumerator();
    private IList`1<SelectListItem> GetListItems();
    private IList`1<SelectListItem> GetListItemsWithValueField();
    private IList`1<SelectListItem> GetListItemsWithoutValueField();
    private static string Eval(object container, string expression);
    private SelectListGroup GetGroup(object container);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.AspNetCore.Mvc.Rendering.MvcForm : object {
    private ViewContext _viewContext;
    private HtmlEncoder _htmlEncoder;
    private bool _disposed;
    public MvcForm(ViewContext viewContext, HtmlEncoder htmlEncoder);
    public sealed virtual void Dispose();
    public void EndForm();
    protected virtual void GenerateEndForm();
    private void RenderEndOfFormContent();
}
public enum Microsoft.AspNetCore.Mvc.Rendering.RenderMode : Enum {
    public int value__;
    public static RenderMode Static;
    public static RenderMode Server;
    public static RenderMode ServerPrerendered;
    public static RenderMode WebAssembly;
    public static RenderMode WebAssemblyPrerendered;
}
public class Microsoft.AspNetCore.Mvc.Rendering.SelectList : MultiSelectList {
    [CompilerGeneratedAttribute]
private object <SelectedValue>k__BackingField;
    public object SelectedValue { get; }
    public SelectList(IEnumerable items);
    public SelectList(IEnumerable items, object selectedValue);
    public SelectList(IEnumerable items, string dataValueField, string dataTextField);
    public SelectList(IEnumerable items, string dataValueField, string dataTextField, object selectedValue);
    public SelectList(IEnumerable items, string dataValueField, string dataTextField, object selectedValue, string dataGroupField);
    [CompilerGeneratedAttribute]
public object get_SelectedValue();
    private static IEnumerable ToEnumerable(object selectedValue);
}
public class Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup : object {
    [CompilerGeneratedAttribute]
private bool <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public bool Disabled { get; public set; }
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Disabled();
    [CompilerGeneratedAttribute]
public void set_Disabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Microsoft.AspNetCore.Mvc.Rendering.SelectListItem : object {
    [CompilerGeneratedAttribute]
private bool <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectListGroup <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Selected>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public bool Disabled { get; public set; }
    public SelectListGroup Group { get; public set; }
    public bool Selected { get; public set; }
    public string Text { get; public set; }
    public string Value { get; public set; }
    public SelectListItem(string text, string value);
    public SelectListItem(string text, string value, bool selected);
    public SelectListItem(string text, string value, bool selected, bool disabled);
    [CompilerGeneratedAttribute]
public bool get_Disabled();
    [CompilerGeneratedAttribute]
public void set_Disabled(bool value);
    [CompilerGeneratedAttribute]
public SelectListGroup get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(SelectListGroup value);
    [CompilerGeneratedAttribute]
public bool get_Selected();
    [CompilerGeneratedAttribute]
public void set_Selected(bool value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
internal class Microsoft.AspNetCore.Mvc.Rendering.SystemTextJsonHelper : object {
    private JsonSerializerOptions _htmlSafeJsonSerializerOptions;
    public SystemTextJsonHelper(IOptions`1<JsonOptions> options);
    public sealed virtual IHtmlContent Serialize(object value);
    private static JsonSerializerOptions GetHtmlSafeSerializerOptions(JsonSerializerOptions serializerOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString()}")]
public class Microsoft.AspNetCore.Mvc.Rendering.TagBuilder : object {
    private AttributeDictionary _attributes;
    private HtmlContentBuilder _innerHtml;
    [CompilerGeneratedAttribute]
private string <TagName>k__BackingField;
    [CompilerGeneratedAttribute]
private TagRenderMode <TagRenderMode>k__BackingField;
    public AttributeDictionary Attributes { get; }
    public IHtmlContentBuilder InnerHtml { get; }
    public bool HasInnerHtml { get; }
    public string TagName { get; }
    public TagRenderMode TagRenderMode { get; public set; }
    public TagBuilder(string tagName);
    public TagBuilder(TagBuilder tagBuilder);
    public AttributeDictionary get_Attributes();
    public IHtmlContentBuilder get_InnerHtml();
    public bool get_HasInnerHtml();
    [CompilerGeneratedAttribute]
public string get_TagName();
    [CompilerGeneratedAttribute]
public TagRenderMode get_TagRenderMode();
    [CompilerGeneratedAttribute]
public void set_TagRenderMode(TagRenderMode value);
    public void AddCssClass(string value);
    public static string CreateSanitizedId(string name, string invalidCharReplacement);
    public void GenerateId(string name, string invalidCharReplacement);
    private void AppendAttributes(TextWriter writer, HtmlEncoder encoder);
    public void MergeAttribute(string key, string value);
    public void MergeAttribute(string key, string value, bool replaceExisting);
    [NullableContextAttribute("2")]
public void MergeAttributes(IDictionary`2<TKey, TValue> attributes);
    [NullableContextAttribute("2")]
public void MergeAttributes(IDictionary`2<TKey, TValue> attributes, bool replaceExisting);
    public sealed virtual void WriteTo(TextWriter writer, HtmlEncoder encoder);
    [NullableContextAttribute("2")]
public IHtmlContent RenderBody();
    public IHtmlContent RenderStartTag();
    public IHtmlContent RenderEndTag();
    public IHtmlContent RenderSelfClosingTag();
    private static void WriteTo(TagBuilder tagBuilder, TextWriter writer, HtmlEncoder encoder, TagRenderMode tagRenderMode);
    private string DebuggerToString();
}
public enum Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode : Enum {
    public int value__;
    public static TagRenderMode Normal;
    public static TagRenderMode StartTag;
    public static TagRenderMode EndTag;
    public static TagRenderMode SelfClosing;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Rendering.ViewComponentHelperExtensions : object {
    [ExtensionAttribute]
public static Task`1<IHtmlContent> InvokeAsync(IViewComponentHelper helper, string name);
    [ExtensionAttribute]
public static Task`1<IHtmlContent> InvokeAsync(IViewComponentHelper helper, Type componentType);
    [ExtensionAttribute]
public static Task`1<IHtmlContent> InvokeAsync(IViewComponentHelper helper, object arguments);
    [ExtensionAttribute]
public static Task`1<IHtmlContent> InvokeAsync(IViewComponentHelper helper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
public class Microsoft.AspNetCore.Mvc.Rendering.ViewContext : ActionContext {
    private FormContext _formContext;
    private DynamicViewData _viewBag;
    private Dictionary`2<object, object> _items;
    [CompilerGeneratedAttribute]
private bool <ClientValidationEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Html5DateRenderingMode <Html5DateRenderingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationSummaryMessageElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationMessageElement>k__BackingField;
    [CompilerGeneratedAttribute]
private CheckBoxHiddenInputRenderMode <CheckBoxHiddenInputRenderMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IView <View>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewDataDictionary <ViewData>k__BackingField;
    [CompilerGeneratedAttribute]
private ITempDataDictionary <TempData>k__BackingField;
    [CompilerGeneratedAttribute]
private TextWriter <Writer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutingFilePath>k__BackingField;
    public FormContext FormContext { get; public set; }
    public bool ClientValidationEnabled { get; public set; }
    public Html5DateRenderingMode Html5DateRenderingMode { get; public set; }
    public string ValidationSummaryMessageElement { get; public set; }
    public string ValidationMessageElement { get; public set; }
    public CheckBoxHiddenInputRenderMode CheckBoxHiddenInputRenderMode { get; public set; }
    [DynamicAttribute]
public object ViewBag { get; }
    public IView View { get; public set; }
    public ViewDataDictionary ViewData { get; public set; }
    public ITempDataDictionary TempData { get; public set; }
    public TextWriter Writer { get; public set; }
    [NullableAttribute("2")]
public string ExecutingFilePath { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Dictionary`2<object, object> Items { get; }
    public ViewContext(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, TextWriter writer, HtmlHelperOptions htmlHelperOptions);
    public ViewContext(ViewContext viewContext, IView view, ViewDataDictionary viewData, TextWriter writer);
    public virtual FormContext get_FormContext();
    public virtual void set_FormContext(FormContext value);
    [CompilerGeneratedAttribute]
public bool get_ClientValidationEnabled();
    [CompilerGeneratedAttribute]
public void set_ClientValidationEnabled(bool value);
    [CompilerGeneratedAttribute]
public Html5DateRenderingMode get_Html5DateRenderingMode();
    [CompilerGeneratedAttribute]
public void set_Html5DateRenderingMode(Html5DateRenderingMode value);
    [CompilerGeneratedAttribute]
public string get_ValidationSummaryMessageElement();
    [CompilerGeneratedAttribute]
public void set_ValidationSummaryMessageElement(string value);
    [CompilerGeneratedAttribute]
public string get_ValidationMessageElement();
    [CompilerGeneratedAttribute]
public void set_ValidationMessageElement(string value);
    [CompilerGeneratedAttribute]
public CheckBoxHiddenInputRenderMode get_CheckBoxHiddenInputRenderMode();
    [CompilerGeneratedAttribute]
public void set_CheckBoxHiddenInputRenderMode(CheckBoxHiddenInputRenderMode value);
    public object get_ViewBag();
    [CompilerGeneratedAttribute]
public IView get_View();
    [CompilerGeneratedAttribute]
public void set_View(IView value);
    [CompilerGeneratedAttribute]
public ViewDataDictionary get_ViewData();
    [CompilerGeneratedAttribute]
public void set_ViewData(ViewDataDictionary value);
    [CompilerGeneratedAttribute]
public ITempDataDictionary get_TempData();
    [CompilerGeneratedAttribute]
public void set_TempData(ITempDataDictionary value);
    [CompilerGeneratedAttribute]
public TextWriter get_Writer();
    [CompilerGeneratedAttribute]
public void set_Writer(TextWriter value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ExecutingFilePath();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ExecutingFilePath(string value);
    internal Dictionary`2<object, object> get_Items();
    [NullableContextAttribute("2")]
public FormContext GetFormContextForClientValidation();
    private string DebuggerToString();
    [CompilerGeneratedAttribute]
private ViewDataDictionary <get_ViewBag>b__30_0();
}
[AttributeUsageAttribute("68")]
public class Microsoft.AspNetCore.Mvc.SkipStatusCodePagesAttribute : Attribute {
    public sealed virtual void OnResourceExecuted(ResourceExecutedContext context);
    public sealed virtual void OnResourceExecuting(ResourceExecutingContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Mvc.TempDataAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    public string Key { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
}
[AttributeUsageAttribute("68")]
public class Microsoft.AspNetCore.Mvc.ValidateAntiForgeryTokenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    public int Order { get; public set; }
    public bool IsReusable { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    public sealed virtual bool get_IsReusable();
    [NullableContextAttribute("1")]
public sealed virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ViewComponentAttribute]
public abstract class Microsoft.AspNetCore.Mvc.ViewComponent : object {
    private IUrlHelper _url;
    [DynamicAttribute]
private object _viewBag;
    private ViewComponentContext _viewComponentContext;
    private ICompositeViewEngine _viewEngine;
    public HttpContext HttpContext { get; }
    public HttpRequest Request { get; }
    public IPrincipal User { get; }
    public ClaimsPrincipal UserClaimsPrincipal { get; }
    public RouteData RouteData { get; }
    [DynamicAttribute]
public object ViewBag { get; }
    public ModelStateDictionary ModelState { get; }
    public IUrlHelper Url { get; public set; }
    [ViewComponentContextAttribute]
public ViewComponentContext ViewComponentContext { get; public set; }
    public ViewContext ViewContext { get; }
    public ViewDataDictionary ViewData { get; }
    public ITempDataDictionary TempData { get; }
    public ICompositeViewEngine ViewEngine { get; public set; }
    public HttpContext get_HttpContext();
    public HttpRequest get_Request();
    public IPrincipal get_User();
    public ClaimsPrincipal get_UserClaimsPrincipal();
    public RouteData get_RouteData();
    public object get_ViewBag();
    public ModelStateDictionary get_ModelState();
    public IUrlHelper get_Url();
    public void set_Url(IUrlHelper value);
    public ViewComponentContext get_ViewComponentContext();
    public void set_ViewComponentContext(ViewComponentContext value);
    public ViewContext get_ViewContext();
    public ViewDataDictionary get_ViewData();
    public ITempDataDictionary get_TempData();
    public ICompositeViewEngine get_ViewEngine();
    public void set_ViewEngine(ICompositeViewEngine value);
    public ContentViewComponentResult Content(string content);
    public ViewViewComponentResult View();
    public ViewViewComponentResult View(string viewName);
    [NullableContextAttribute("2")]
public ViewViewComponentResult View(TModel model);
    [NullableContextAttribute("2")]
public ViewViewComponentResult View(string viewName, TModel model);
    [CompilerGeneratedAttribute]
private ViewDataDictionary <get_ViewBag>b__15_0();
}
[AttributeUsageAttribute("4")]
public class Microsoft.AspNetCore.Mvc.ViewComponentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewComponentResult : ActionResult {
    [CompilerGeneratedAttribute]
private object <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ViewComponentName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ViewComponentType>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewDataDictionary <ViewData>k__BackingField;
    [CompilerGeneratedAttribute]
private ITempDataDictionary <TempData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public object Arguments { get; public set; }
    public Nullable`1<int> StatusCode { get; public set; }
    public string ViewComponentName { get; public set; }
    public Type ViewComponentType { get; public set; }
    public object Model { get; }
    [NullableAttribute("1")]
public ViewDataDictionary ViewData { get; public set; }
    [NullableAttribute("1")]
public ITempDataDictionary TempData { get; public set; }
    public string ContentType { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ViewComponentName();
    [CompilerGeneratedAttribute]
public void set_ViewComponentName(string value);
    [CompilerGeneratedAttribute]
public Type get_ViewComponentType();
    [CompilerGeneratedAttribute]
public void set_ViewComponentType(Type value);
    public object get_Model();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ViewDataDictionary get_ViewData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ViewData(ViewDataDictionary value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ITempDataDictionary get_TempData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_TempData(ITempDataDictionary value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [NullableContextAttribute("1")]
public virtual Task ExecuteResultAsync(ActionContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult : object {
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    public string Content { get; }
    public ContentViewComponentResult(string content);
    [CompilerGeneratedAttribute]
public string get_Content();
    public sealed virtual void Execute(ViewComponentContext context);
    public sealed virtual Task ExecuteAsync(ViewComponentContext context);
}
internal class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentActivator : object {
    private ITypeActivatorCache _typeActivatorCache;
    public DefaultViewComponentActivator(ITypeActivatorCache typeActivatorCache);
    public sealed virtual object Create(ViewComponentContext context);
    public sealed virtual void Release(ViewComponentContext context, object viewComponent);
    public sealed virtual ValueTask ReleaseAsync(ViewComponentContext context, object viewComponent);
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorCollectionProvider : object {
    private IViewComponentDescriptorProvider _descriptorProvider;
    private ViewComponentDescriptorCollection _viewComponents;
    public ViewComponentDescriptorCollection ViewComponents { get; }
    public DefaultViewComponentDescriptorCollectionProvider(IViewComponentDescriptorProvider descriptorProvider);
    public sealed virtual ViewComponentDescriptorCollection get_ViewComponents();
    private ViewComponentDescriptorCollection GetViewComponents();
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorProvider : object {
    private static string AsyncMethodName;
    private static string SyncMethodName;
    private ApplicationPartManager _partManager;
    public DefaultViewComponentDescriptorProvider(ApplicationPartManager partManager);
    public virtual IEnumerable`1<ViewComponentDescriptor> GetViewComponents();
    protected virtual IEnumerable`1<TypeInfo> GetCandidateTypes();
    private static ViewComponentDescriptor CreateDescriptor(TypeInfo typeInfo);
    private static MethodInfo FindMethod(Type componentType);
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentFactory : object {
    private IViewComponentActivator _activator;
    private Func`2<Type, PropertyActivator`1[]> _getPropertiesToActivate;
    private ConcurrentDictionary`2<Type, PropertyActivator`1[]> _injectActions;
    public DefaultViewComponentFactory(IViewComponentActivator activator);
    public sealed virtual object CreateViewComponent(ViewComponentContext context);
    private void InjectProperties(ViewComponentContext context, object viewComponent);
    private static PropertyActivator`1<ViewComponentContext> CreateActivateInfo(PropertyInfo property);
    public sealed virtual void ReleaseViewComponent(ViewComponentContext context, object component);
    public sealed virtual ValueTask ReleaseViewComponentAsync(ViewComponentContext context, object component);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper : object {
    private IViewComponentDescriptorCollectionProvider _descriptorProvider;
    private HtmlEncoder _htmlEncoder;
    private IViewComponentInvokerFactory _invokerFactory;
    private IViewComponentSelector _selector;
    private IViewBufferScope _viewBufferScope;
    private ViewContext _viewContext;
    public DefaultViewComponentHelper(IViewComponentDescriptorCollectionProvider descriptorProvider, HtmlEncoder htmlEncoder, IViewComponentSelector selector, IViewComponentInvokerFactory invokerFactory, IViewBufferScope viewBufferScope);
    public sealed virtual void Contextualize(ViewContext viewContext);
    public sealed virtual Task`1<IHtmlContent> InvokeAsync(string name, object arguments);
    public sealed virtual Task`1<IHtmlContent> InvokeAsync(Type componentType, object arguments);
    private ViewComponentDescriptor SelectComponent(Type componentType);
    internal static IDictionary`2<string, object> GetArgumentDictionary(ViewComponentDescriptor descriptor, object arguments);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper/<InvokeCoreAsync>d__12")]
private Task`1<IHtmlContent> InvokeCoreAsync(ViewComponentDescriptor descriptor, object arguments);
}
internal class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker : object {
    private IViewComponentFactory _viewComponentFactory;
    private ViewComponentInvokerCache _viewComponentInvokerCache;
    private DiagnosticListener _diagnosticListener;
    private ILogger _logger;
    [NullableContextAttribute("1")]
public DefaultViewComponentInvoker(IViewComponentFactory viewComponentFactory, ViewComponentInvokerCache viewComponentInvokerCache, DiagnosticListener diagnosticListener, ILogger logger);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker/<InvokeAsync>d__5")]
public sealed virtual Task InvokeAsync(ViewComponentContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker/<InvokeAsyncCore>d__6")]
private Task`1<IViewComponentResult> InvokeAsyncCore(ObjectMethodExecutor executor, object component, ViewComponentContext context);
    private IViewComponentResult InvokeSyncCore(ObjectMethodExecutor executor, object component, ViewComponentContext context);
    private static IViewComponentResult CoerceToViewComponentResult(object value);
    private static Object[] PrepareArguments(IDictionary`2<string, object> parameters, ObjectMethodExecutor objectMethodExecutor);
}
internal class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvokerFactory : object {
    private IViewComponentFactory _viewComponentFactory;
    private ViewComponentInvokerCache _viewComponentInvokerCache;
    private ILogger _logger;
    private DiagnosticListener _diagnosticListener;
    public DefaultViewComponentInvokerFactory(IViewComponentFactory viewComponentFactory, ViewComponentInvokerCache viewComponentInvokerCache, DiagnosticListener diagnosticListener, ILoggerFactory loggerFactory);
    public sealed virtual IViewComponentInvoker CreateInstance(ViewComponentContext context);
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentSelector : object {
    private IViewComponentDescriptorCollectionProvider _descriptorProvider;
    private ViewComponentDescriptorCache _cache;
    public DefaultViewComponentSelector(IViewComponentDescriptorCollectionProvider descriptorProvider);
    public sealed virtual ViewComponentDescriptor SelectComponent(string componentName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult : object {
    [CompilerGeneratedAttribute]
private IHtmlContent <EncodedContent>k__BackingField;
    public IHtmlContent EncodedContent { get; }
    public HtmlContentViewComponentResult(IHtmlContent encodedContent);
    [CompilerGeneratedAttribute]
public IHtmlContent get_EncodedContent();
    public sealed virtual void Execute(ViewComponentContext context);
    public sealed virtual Task ExecuteAsync(ViewComponentContext context);
}
public interface Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator {
    public abstract virtual object Create(ViewComponentContext context);
    public abstract virtual void Release(ViewComponentContext context, object viewComponent);
    public virtual ValueTask ReleaseAsync(ViewComponentContext context, object viewComponent);
}
public interface Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider {
    public ViewComponentDescriptorCollection ViewComponents { get; }
    public abstract virtual ViewComponentDescriptorCollection get_ViewComponents();
}
public interface Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorProvider {
    public abstract virtual IEnumerable`1<ViewComponentDescriptor> GetViewComponents();
}
public interface Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory {
    public abstract virtual object CreateViewComponent(ViewComponentContext context);
    public abstract virtual void ReleaseViewComponent(ViewComponentContext context, object component);
    public virtual ValueTask ReleaseViewComponentAsync(ViewComponentContext context, object component);
}
public interface Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvoker {
    public abstract virtual Task InvokeAsync(ViewComponentContext context);
}
public interface Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvokerFactory {
    public abstract virtual IViewComponentInvoker CreateInstance(ViewComponentContext context);
}
public interface Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentSelector {
    public abstract virtual ViewComponentDescriptor SelectComponent(string componentName);
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.ServiceBasedViewComponentActivator : object {
    public sealed virtual object Create(ViewComponentContext context);
    public virtual void Release(ViewComponentContext context, object viewComponent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private HtmlEncoder <HtmlEncoder>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewComponentDescriptor <ViewComponentDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewContext <ViewContext>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Arguments { get; public set; }
    public HtmlEncoder HtmlEncoder { get; public set; }
    public ViewComponentDescriptor ViewComponentDescriptor { get; public set; }
    public ViewContext ViewContext { get; public set; }
    public ViewDataDictionary ViewData { get; }
    public ITempDataDictionary TempData { get; }
    public TextWriter Writer { get; }
    public ViewComponentContext(ViewComponentDescriptor viewComponentDescriptor, IDictionary`2<string, object> arguments, HtmlEncoder htmlEncoder, ViewContext viewContext, TextWriter writer);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public HtmlEncoder get_HtmlEncoder();
    [CompilerGeneratedAttribute]
public void set_HtmlEncoder(HtmlEncoder value);
    [CompilerGeneratedAttribute]
public ViewComponentDescriptor get_ViewComponentDescriptor();
    [CompilerGeneratedAttribute]
public void set_ViewComponentDescriptor(ViewComponentDescriptor value);
    [CompilerGeneratedAttribute]
public ViewContext get_ViewContext();
    [CompilerGeneratedAttribute]
public void set_ViewContext(ViewContext value);
    public ViewDataDictionary get_ViewData();
    public ITempDataDictionary get_TempData();
    public TextWriter get_Writer();
}
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContextAttribute : Attribute {
}
public static class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentConventions : object {
    public static string ViewComponentSuffix;
    private static ViewComponentConventions();
    public static string GetComponentName(TypeInfo componentType);
    public static string GetComponentFullName(TypeInfo componentType);
    private static string GetShortNameByConvention(TypeInfo componentType);
    public static bool IsComponent(TypeInfo typeInfo);
}
[DebuggerDisplayAttribute("{DisplayName}")]
public class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor : object {
    private string _displayName;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortName>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeInfo <TypeInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ParameterInfo> <Parameters>k__BackingField;
    public string DisplayName { get; public set; }
    public string FullName { get; public set; }
    public string Id { get; public set; }
    public string ShortName { get; public set; }
    public TypeInfo TypeInfo { get; public set; }
    public MethodInfo MethodInfo { get; public set; }
    public IReadOnlyList`1<ParameterInfo> Parameters { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
public void set_FullName(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_ShortName();
    [CompilerGeneratedAttribute]
public void set_ShortName(string value);
    [CompilerGeneratedAttribute]
public TypeInfo get_TypeInfo();
    [CompilerGeneratedAttribute]
public void set_TypeInfo(TypeInfo value);
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public void set_MethodInfo(MethodInfo value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ParameterInfo> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IReadOnlyList`1<ParameterInfo> value);
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ViewComponentDescriptor> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    public IReadOnlyList`1<ViewComponentDescriptor> Items { get; }
    public int Version { get; }
    public ViewComponentDescriptorCollection(IEnumerable`1<ViewComponentDescriptor> items, int version);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ViewComponentDescriptor> get_Items();
    [CompilerGeneratedAttribute]
public int get_Version();
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature : object {
    [CompilerGeneratedAttribute]
private IList`1<TypeInfo> <ViewComponents>k__BackingField;
    public IList`1<TypeInfo> ViewComponents { get; }
    [CompilerGeneratedAttribute]
public IList`1<TypeInfo> get_ViewComponents();
}
public class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeatureProvider : object {
    public sealed virtual void PopulateFeature(IEnumerable`1<ApplicationPart> parts, ViewComponentFeature feature);
}
internal class Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentInvokerCache : object {
    private IViewComponentDescriptorCollectionProvider _collectionProvider;
    private InnerCache modreq(System.Runtime.CompilerServices.IsVolatile) _currentCache;
    private InnerCache CurrentCache { get; }
    public ViewComponentInvokerCache(IViewComponentDescriptorCollectionProvider collectionProvider);
    private InnerCache get_CurrentCache();
    internal ObjectMethodExecutor GetViewComponentMethodExecutor(ViewComponentContext viewComponentContext);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult : object {
    private static string ViewPathFormat;
    private static string DefaultViewName;
    private DiagnosticListener _diagnosticListener;
    [CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewDataDictionary <ViewData>k__BackingField;
    [CompilerGeneratedAttribute]
private ITempDataDictionary <TempData>k__BackingField;
    [CompilerGeneratedAttribute]
private IViewEngine <ViewEngine>k__BackingField;
    public string ViewName { get; public set; }
    public ViewDataDictionary ViewData { get; public set; }
    [NullableAttribute("1")]
public ITempDataDictionary TempData { get; public set; }
    public IViewEngine ViewEngine { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ViewName();
    [CompilerGeneratedAttribute]
public void set_ViewName(string value);
    [CompilerGeneratedAttribute]
public ViewDataDictionary get_ViewData();
    [CompilerGeneratedAttribute]
public void set_ViewData(ViewDataDictionary value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ITempDataDictionary get_TempData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_TempData(ITempDataDictionary value);
    [CompilerGeneratedAttribute]
public IViewEngine get_ViewEngine();
    [CompilerGeneratedAttribute]
public void set_ViewEngine(IViewEngine value);
    [NullableContextAttribute("1")]
public sealed virtual void Execute(ViewComponentContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult/<ExecuteAsync>d__20")]
public sealed virtual Task ExecuteAsync(ViewComponentContext context);
    private static IViewEngine ResolveViewEngine(ViewComponentContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Mvc.ViewDataAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    public string Key { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IViewEngine> <ViewEngines>k__BackingField;
    public IReadOnlyList`1<IViewEngine> ViewEngines { get; }
    public CompositeViewEngine(IOptions`1<MvcViewOptions> optionsAccessor);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<IViewEngine> get_ViewEngines();
    public sealed virtual ViewEngineResult FindView(ActionContext context, string viewName, bool isMainPage);
    public sealed virtual ViewEngineResult GetView(string executingFilePath, string viewPath, bool isMainPage);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine {
    public IReadOnlyList`1<IViewEngine> ViewEngines { get; }
    public abstract virtual IReadOnlyList`1<IViewEngine> get_ViewEngines();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ViewEngines.IView {
    public string Path { get; }
    public abstract virtual string get_Path();
    public abstract virtual Task RenderAsync(ViewContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine {
    public abstract virtual ViewEngineResult FindView(ActionContext context, string viewName, bool isMainPage);
    public abstract virtual ViewEngineResult GetView(string executingFilePath, string viewPath, bool isMainPage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <SearchedLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private IView <View>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    public IEnumerable`1<string> SearchedLocations { get; private set; }
    [NullableAttribute("2")]
public IView View { get; private set; }
    public string ViewName { get; private set; }
    [MemberNotNullWhenAttribute("True", "View")]
public bool Success { get; }
    private ViewEngineResult(string viewName);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_SearchedLocations();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SearchedLocations(IEnumerable`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IView get_View();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_View(IView value);
    [CompilerGeneratedAttribute]
public string get_ViewName();
    [CompilerGeneratedAttribute]
private void set_ViewName(string value);
    [MemberNotNullWhenAttribute("True", "View")]
public bool get_Success();
    public static ViewEngineResult NotFound(string viewName, IEnumerable`1<string> searchedLocations);
    public static ViewEngineResult Found(string viewName, IView view);
    [MemberNotNullAttribute("View")]
public ViewEngineResult EnsureSuccessful(IEnumerable`1<string> originalLocations);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.ViewFeatures.AntiforgeryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IHtmlContent GetHtml(IAntiforgery antiforgery, HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary : object {
    private List`1<KeyValuePair`2<string, string>> _items;
    [NullableAttribute("2")]
public string Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<string> Keys { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> Values { get; }
    private IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.String>.Keys { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.String>.Values { get; }
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<string> get_Values();
    private sealed virtual override IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.String>.get_Keys();
    private sealed virtual override IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.String>.get_Values();
    private KeyValuePair`2<string, string> Get(int index);
    private void Set(int index, KeyValuePair`2<string, string> value);
    private void Insert(int index, KeyValuePair`2<string, string> value);
    private void Remove(int index);
    private int Find(string key);
    public sealed virtual void Clear();
    public sealed virtual void Add(KeyValuePair`2<string, string> item);
    public sealed virtual void Add(string key, string value);
    public sealed virtual bool Contains(KeyValuePair`2<string, string> item);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public Enumerator GetEnumerator();
    public sealed virtual bool Remove(KeyValuePair`2<string, string> item);
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, String& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, string>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator();
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ArrayPoolBufferSource : object {
    private ArrayPool`1<char> _pool;
    public ArrayPoolBufferSource(ArrayPool`1<char> pool);
    public sealed virtual Char[] Rent(int bufferSize);
    public sealed virtual void Return(Char[] buffer);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.CharArrayBufferSource : object {
    public static CharArrayBufferSource Instance;
    private static CharArrayBufferSource();
    public sealed virtual Char[] Rent(int bufferSize);
    public sealed virtual void Return(Char[] buffer);
}
internal interface Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ICharBufferSource {
    public abstract virtual Char[] Rent(int bufferSize);
    public abstract virtual void Return(Char[] buffer);
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope {
    public abstract virtual ViewBufferValue[] GetPage(int pageSize);
    public abstract virtual void ReturnSegment(ViewBufferValue[] segment);
    public abstract virtual TextWriter CreateWriter(TextWriter writer);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope : object {
    public static int MinimumSize;
    private ArrayPool`1<ViewBufferValue> _viewBufferPool;
    private ArrayPool`1<char> _charPool;
    private List`1<ViewBufferValue[]> _available;
    private List`1<ViewBufferValue[]> _leased;
    private bool _disposed;
    public MemoryPoolViewBufferScope(ArrayPool`1<ViewBufferValue> viewBufferPool, ArrayPool`1<char> charPool);
    public sealed virtual ViewBufferValue[] GetPage(int pageSize);
    public sealed virtual void ReturnSegment(ViewBufferValue[] segment);
    public sealed virtual TextWriter CreateWriter(TextWriter writer);
    public sealed virtual void Dispose();
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter : TextWriter {
    private TextWriter _inner;
    private PagedCharBuffer _charBuffer;
    public Encoding Encoding { get; }
    public PagedBufferedTextWriter(ArrayPool`1<char> pool, TextWriter inner);
    public virtual Encoding get_Encoding();
    public virtual void Flush();
    public virtual Task FlushAsync();
    private Task FlushAsyncCore();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter/<FlushAsyncAwaited>d__8")]
private Task FlushAsyncAwaited();
    public virtual void Write(char value);
    public virtual void Write(Char[] buffer);
    public virtual void Write(Char[] buffer, int index, int count);
    public virtual void Write(string value);
    public virtual Task WriteAsync(char value);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter/<WriteAsyncAwaited>d__14")]
private Task WriteAsyncAwaited(Task flushTask, char value);
    public virtual Task WriteAsync(Char[] buffer, int index, int count);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter/<WriteAsyncAwaited>d__16")]
private Task WriteAsyncAwaited(Task flushTask, Char[] buffer, int index, int count);
    public virtual Task WriteAsync(string value);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter/<WriteAsyncAwaited>d__18")]
private Task WriteAsyncAwaited(Task flushTask, string value);
    protected virtual void Dispose(bool disposing);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedCharBuffer : object {
    public static int PageSize;
    private int _charIndex;
    [CompilerGeneratedAttribute]
private ICharBufferSource <BufferSource>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Char[]> <Pages>k__BackingField;
    [CompilerGeneratedAttribute]
private Char[] <CurrentPage>k__BackingField;
    public ICharBufferSource BufferSource { get; }
    public List`1<Char[]> Pages { get; }
    public int Length { get; }
    private Char[] CurrentPage { get; private set; }
    public PagedCharBuffer(ICharBufferSource bufferSource);
    [CompilerGeneratedAttribute]
public ICharBufferSource get_BufferSource();
    [CompilerGeneratedAttribute]
public List`1<Char[]> get_Pages();
    public int get_Length();
    [CompilerGeneratedAttribute]
private Char[] get_CurrentPage();
    [CompilerGeneratedAttribute]
private void set_CurrentPage(Char[] value);
    public void Append(char value);
    public void Append(string value);
    public void Append(Char[] buffer, int index, int count);
    public void Clear();
    private Char[] GetCurrentPage();
    private Char[] NewPage();
    public sealed virtual void Dispose();
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("{DebuggerToString()}")]
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer : object {
    public static int PartialViewPageSize;
    public static int TagHelperPageSize;
    public static int ViewComponentPageSize;
    public static int ViewPageSize;
    private IViewBufferScope _bufferScope;
    private string _name;
    private int _pageSize;
    private ViewBufferPage _currentPage;
    private List`1<ViewBufferPage> _multiplePages;
    public int Count { get; }
    public ViewBufferPage Item { get; }
    public ViewBuffer(IViewBufferScope bufferScope, string name, int pageSize);
    public int get_Count();
    public ViewBufferPage get_Item(int index);
    public sealed virtual IHtmlContentBuilder Append(string unencoded);
    public sealed virtual IHtmlContentBuilder AppendHtml(IHtmlContent content);
    public sealed virtual IHtmlContentBuilder AppendHtml(string encoded);
    private void AppendValue(ViewBufferValue value);
    private ViewBufferPage GetCurrentPage();
    private ViewBufferPage AppendNewPage();
    private void AddPage(ViewBufferPage page);
    public sealed virtual IHtmlContentBuilder Clear();
    public sealed virtual void WriteTo(TextWriter writer, HtmlEncoder encoder);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer/<WriteToAsync>d__23")]
public Task WriteToAsync(TextWriter writer, HtmlEncoder encoder);
    private string DebuggerToString();
    public sealed virtual void CopyTo(IHtmlContentBuilder destination);
    public sealed virtual void MoveTo(IHtmlContentBuilder destination);
    private void MoveTo(ViewBuffer destination);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferPage : object {
    [CompilerGeneratedAttribute]
private ViewBufferValue[] <Buffer>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    public ViewBufferValue[] Buffer { get; }
    public int Capacity { get; }
    public int Count { get; public set; }
    public bool IsFull { get; }
    public ViewBufferPage(ViewBufferValue[] buffer);
    [CompilerGeneratedAttribute]
public ViewBufferValue[] get_Buffer();
    public int get_Capacity();
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    public bool get_IsFull();
    public void Append(ViewBufferValue value);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter : TextWriter {
    private TextWriter _inner;
    private HtmlEncoder _htmlEncoder;
    [CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewBuffer <Buffer>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Flushed>k__BackingField;
    public Encoding Encoding { get; }
    public ViewBuffer Buffer { get; }
    public bool Flushed { get; private set; }
    public ViewBufferTextWriter(ViewBuffer buffer, Encoding encoding);
    public ViewBufferTextWriter(ViewBuffer buffer, Encoding encoding, HtmlEncoder htmlEncoder, TextWriter inner);
    [CompilerGeneratedAttribute]
public virtual Encoding get_Encoding();
    [CompilerGeneratedAttribute]
public ViewBuffer get_Buffer();
    [CompilerGeneratedAttribute]
public bool get_Flushed();
    [CompilerGeneratedAttribute]
private void set_Flushed(bool value);
    public virtual void Write(char value);
    public virtual void Write(Char[] buffer, int index, int count);
    public virtual void Write(string value);
    public virtual void Write(object value);
    public void Write(IHtmlContent value);
    public void Write(IHtmlContentContainer value);
    public virtual void WriteLine(object value);
    public virtual Task WriteAsync(char value);
    public virtual Task WriteAsync(Char[] buffer, int index, int count);
    public virtual Task WriteAsync(string value);
    public virtual void WriteLine();
    public virtual void WriteLine(string value);
    public virtual Task WriteLineAsync(char value);
    public virtual Task WriteLineAsync(Char[] value, int start, int offset);
    public virtual Task WriteLineAsync(string value);
    public virtual Task WriteLineAsync();
    public virtual void Flush();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter/<FlushAsync>d__31")]
public virtual Task FlushAsync();
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{DebuggerToString()}")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue : ValueType {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    public ViewBufferValue(string value);
    public ViewBufferValue(IHtmlContent content);
    [CompilerGeneratedAttribute]
public object get_Value();
    private string DebuggerToString();
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.CachedExpressionCompiler : object {
    private static Expression NullExpression;
    private static CachedExpressionCompiler();
    public static Func`2<TModel, object> Process(Expression`1<Func`2<TModel, TResult>> expression);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider : object {
    public static string CookieName;
    private static string Purpose;
    private IDataProtector _dataProtector;
    private ILogger _logger;
    private TempDataSerializer _tempDataSerializer;
    private ChunkingCookieManager _chunkingCookieManager;
    private CookieTempDataProviderOptions _options;
    public CookieTempDataProvider(IDataProtectionProvider dataProtectionProvider, ILoggerFactory loggerFactory, IOptions`1<CookieTempDataProviderOptions> options, TempDataSerializer tempDataSerializer);
    private static CookieTempDataProvider();
    public sealed virtual IDictionary`2<string, object> LoadTempData(HttpContext context);
    public sealed virtual void SaveTempData(HttpContext context, IDictionary`2<string, object> values);
    private void SetCookiePath(HttpContext httpContext, CookieOptions cookieOptions);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultDisplayTemplates : object {
    public static IHtmlContent BooleanTemplate(IHtmlHelper htmlHelper);
    private static IHtmlContent BooleanTemplateCheckbox(bool value);
    private static IHtmlContent BooleanTemplateDropDownList(Nullable`1<bool> value);
    internal static List`1<SelectListItem> TriStateValues(Nullable`1<bool> value);
    public static IHtmlContent CollectionTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent DecimalTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent EmailAddressTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent HiddenInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent HtmlTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent ObjectTemplate(IHtmlHelper htmlHelper);
    private static bool ShouldShow(ModelExplorer modelExplorer, TemplateInfo templateInfo);
    public static IHtmlContent StringTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent UrlTemplate(IHtmlHelper htmlHelper);
    private static IHtmlContent HyperlinkTemplate(string uriString, string linkedText);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultEditorTemplates : object {
    private static string HtmlAttributeKey;
    private static string UsePasswordValue;
    public static IHtmlContent BooleanTemplate(IHtmlHelper htmlHelper);
    private static IHtmlContent BooleanTemplateCheckbox(IHtmlHelper htmlHelper, bool value);
    private static IHtmlContent BooleanTemplateDropDownList(IHtmlHelper htmlHelper, Nullable`1<bool> value);
    public static IHtmlContent CollectionTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent DecimalTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent HiddenInputTemplate(IHtmlHelper htmlHelper);
    private static IDictionary`2<string, object> CreateHtmlAttributes(IHtmlHelper htmlHelper, string className, string inputType);
    private static IDictionary`2<string, object> MergeHtmlAttributes(object htmlAttributesObject, string className, string inputType);
    public static IHtmlContent MultilineTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent ObjectTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent PasswordTemplate(IHtmlHelper htmlHelper);
    private static bool ShouldShow(ModelExplorer modelExplorer, TemplateInfo templateInfo);
    public static IHtmlContent StringTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent PhoneNumberInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent UrlInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent EmailAddressInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent DateTimeOffsetTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent DateTimeLocalInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent DateInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent TimeInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent MonthInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent WeekInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent NumberInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent FileInputTemplate(IHtmlHelper htmlHelper);
    public static IHtmlContent FileCollectionInputTemplate(IHtmlHelper htmlHelper);
    private static void ApplyRfc3339DateFormattingIfNeeded(IHtmlHelper htmlHelper, string format);
    private static IHtmlContent GenerateTextBox(IHtmlHelper htmlHelper, string inputType);
    private static IHtmlContent GenerateTextBox(IHtmlHelper htmlHelper, string inputType, object value);
    private static IHtmlContent GenerateTextBox(IHtmlHelper htmlHelper, object value, object htmlAttributes);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator : object {
    private static string HiddenListItem;
    private static MethodInfo ConvertEnumFromStringMethod;
    private static String[] _placeholderInputTypes;
    private static String[] _maxLengthInputTypes;
    private IAntiforgery _antiforgery;
    private IModelMetadataProvider _metadataProvider;
    private IUrlHelperFactory _urlHelperFactory;
    private HtmlEncoder _htmlEncoder;
    private ValidationHtmlAttributeProvider _validationAttributeProvider;
    private FormInputRenderMode _formInputRenderMode;
    [CompilerGeneratedAttribute]
private bool <AllowRenderingMaxLengthAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdAttributeDotReplacement>k__BackingField;
    protected bool AllowRenderingMaxLengthAttribute { get; }
    public string IdAttributeDotReplacement { get; }
    public DefaultHtmlGenerator(IAntiforgery antiforgery, IOptions`1<MvcViewOptions> optionsAccessor, IModelMetadataProvider metadataProvider, IUrlHelperFactory urlHelperFactory, HtmlEncoder htmlEncoder, ValidationHtmlAttributeProvider validationAttributeProvider);
    private static DefaultHtmlGenerator();
    [CompilerGeneratedAttribute]
protected bool get_AllowRenderingMaxLengthAttribute();
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdAttributeDotReplacement();
    public sealed virtual string Encode(string value);
    public sealed virtual string Encode(object value);
    public sealed virtual string FormatValue(object value, string format);
    private static string FormatValue(object value, string format, IFormatProvider formatProvider);
    public virtual TagBuilder GenerateActionLink(ViewContext viewContext, string linkText, string actionName, string controllerName, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes);
    public virtual TagBuilder GeneratePageLink(ViewContext viewContext, string linkText, string pageName, string pageHandler, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes);
    public virtual IHtmlContent GenerateAntiforgery(ViewContext viewContext);
    public virtual TagBuilder GenerateCheckBox(ViewContext viewContext, ModelExplorer modelExplorer, string expression, Nullable`1<bool> isChecked, object htmlAttributes);
    public virtual TagBuilder GenerateHiddenForCheckbox(ViewContext viewContext, ModelExplorer modelExplorer, string expression);
    public virtual TagBuilder GenerateForm(ViewContext viewContext, string actionName, string controllerName, object routeValues, string method, object htmlAttributes);
    public virtual TagBuilder GeneratePageForm(ViewContext viewContext, string pageName, string pageHandler, object routeValues, string fragment, string method, object htmlAttributes);
    public sealed virtual TagBuilder GenerateRouteForm(ViewContext viewContext, string routeName, object routeValues, string method, object htmlAttributes);
    public virtual TagBuilder GenerateHidden(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, bool useViewData, object htmlAttributes);
    public virtual TagBuilder GenerateLabel(ViewContext viewContext, ModelExplorer modelExplorer, string expression, string labelText, object htmlAttributes);
    public virtual TagBuilder GeneratePassword(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, object htmlAttributes);
    public virtual TagBuilder GenerateRadioButton(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, Nullable`1<bool> isChecked, object htmlAttributes);
    public virtual TagBuilder GenerateRouteLink(ViewContext viewContext, string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes);
    public sealed virtual TagBuilder GenerateSelect(ViewContext viewContext, ModelExplorer modelExplorer, string optionLabel, string expression, IEnumerable`1<SelectListItem> selectList, bool allowMultiple, object htmlAttributes);
    public virtual TagBuilder GenerateSelect(ViewContext viewContext, ModelExplorer modelExplorer, string optionLabel, string expression, IEnumerable`1<SelectListItem> selectList, ICollection`1<string> currentValues, bool allowMultiple, object htmlAttributes);
    public virtual TagBuilder GenerateTextArea(ViewContext viewContext, ModelExplorer modelExplorer, string expression, int rows, int columns, object htmlAttributes);
    public virtual TagBuilder GenerateTextBox(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, string format, object htmlAttributes);
    public virtual TagBuilder GenerateValidationMessage(ViewContext viewContext, ModelExplorer modelExplorer, string expression, string message, string tag, object htmlAttributes);
    public virtual TagBuilder GenerateValidationSummary(ViewContext viewContext, bool excludePropertyErrors, string message, string headerTag, object htmlAttributes);
    public virtual ICollection`1<string> GetCurrentValues(ViewContext viewContext, ModelExplorer modelExplorer, string expression, bool allowMultiple);
    internal static string EvalString(ViewContext viewContext, string key, string format);
    internal static TagBuilder GenerateOption(SelectListItem item, string text);
    internal static TagBuilder GenerateOption(SelectListItem item, string text, bool selected);
    internal static object GetModelStateValue(ViewContext viewContext, string key, Type destinationType);
    protected virtual TagBuilder GenerateFormCore(ViewContext viewContext, string action, string method, object htmlAttributes);
    protected virtual TagBuilder GenerateInput(ViewContext viewContext, InputType inputType, ModelExplorer modelExplorer, string expression, object value, bool useViewData, bool isChecked, bool setId, bool isExplicitValue, string format, IDictionary`2<string, object> htmlAttributes);
    protected virtual TagBuilder GenerateLink(string linkText, string url, object htmlAttributes);
    protected virtual void AddPlaceholderAttribute(ViewDataDictionary viewData, TagBuilder tagBuilder, ModelExplorer modelExplorer, string expression);
    protected virtual void AddMaxLengthAttribute(ViewDataDictionary viewData, TagBuilder tagBuilder, ModelExplorer modelExplorer, string expression);
    protected virtual void AddValidationAttributes(ViewContext viewContext, TagBuilder tagBuilder, ModelExplorer modelExplorer, string expression);
    private static Enum ConvertEnumFromInteger(object value, Type targetType);
    private static object ConvertEnumFromString(string value);
    private static bool EvalBoolean(ViewContext viewContext, string key);
    private static string EvalString(ViewContext viewContext, string key);
    private static IDictionary`2<string, object> GetHtmlAttributeDictionaryOrNull(object htmlAttributes);
    private static string GetInputTypeString(InputType inputType);
    private bool ShouldUseInvariantFormattingForInputType(string inputType, Html5DateRenderingMode dateRenderingMode);
    private static IEnumerable`1<SelectListItem> GetSelectListItems(ViewContext viewContext, string expression);
    private static bool IsFullNameValid(string fullName, IDictionary`2<string, object> htmlAttributeDictionary);
    private static bool IsFullNameValid(string fullName, IDictionary`2<string, object> htmlAttributeDictionary, string fallbackAttributeName);
    public sealed virtual IHtmlContent GenerateGroupsAndOptions(string optionLabel, IEnumerable`1<SelectListItem> selectList);
    private static IHtmlContent GenerateGroupsAndOptions(string optionLabel, IEnumerable`1<SelectListItem> selectList, ICollection`1<string> currentValues);
    private static IHtmlContent GenerateOption(SelectListItem item, ICollection`1<string> currentValues);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGeneratorExtensions : object {
    [ExtensionAttribute]
public static TagBuilder GenerateForm(IHtmlGenerator generator, ViewContext viewContext, string actionName, string controllerName, string fragment, object routeValues, string method, object htmlAttributes);
    [ExtensionAttribute]
public static TagBuilder GenerateRouteForm(IHtmlGenerator generator, ViewContext viewContext, string routeName, object routeValues, string fragment, string method, object htmlAttributes);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultValidationHtmlAttributeProvider : ValidationHtmlAttributeProvider {
    private IModelMetadataProvider _metadataProvider;
    private ClientValidatorCache _clientValidatorCache;
    private IClientModelValidatorProvider _clientModelValidatorProvider;
    public DefaultValidationHtmlAttributeProvider(IOptions`1<MvcViewOptions> optionsAccessor, IModelMetadataProvider metadataProvider, ClientValidatorCache clientValidatorCache);
    public virtual void AddValidationAttributes(ViewContext viewContext, ModelExplorer modelExplorer, IDictionary`2<string, string> attributes);
}
[DebuggerDisplayAttribute("Count = {ViewData.Count}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.DynamicViewData/DynamicViewDataDebugView")]
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.DynamicViewData : DynamicObject {
    private Func`1<ViewDataDictionary> _viewDataFunc;
    private ViewDataDictionary ViewData { get; }
    public DynamicViewData(Func`1<ViewDataDictionary> viewDataFunc);
    private ViewDataDictionary get_ViewData();
    public virtual IEnumerable`1<string> GetDynamicMemberNames();
    public virtual bool TryGetMember(GetMemberBinder binder, Object& result);
    public virtual bool TrySetMember(SetMemberBinder binder, object value);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.ExpressionHelper : object {
    public static string GetUncachedExpressionText(LambdaExpression expression);
    public static string GetExpressionText(LambdaExpression expression, ConcurrentDictionary`2<LambdaExpression, string> expressionTextCache);
    private static void InsertIndexerInvocationText(StringBuilder builder, Expression indexExpression, LambdaExpression parentExpression);
    public static bool IsSingleArgumentIndexer(Expression expression);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.ExpressionMetadataProvider : object {
    public static ModelExplorer FromLambdaExpression(Expression`1<Func`2<TModel, TResult>> expression, ViewDataDictionary`1<TModel> viewData, IModelMetadataProvider metadataProvider);
    public static ModelExplorer FromStringExpression(string expression, ViewDataDictionary viewData, IModelMetadataProvider metadataProvider);
    private static ModelExplorer FromModel(ViewDataDictionary viewData, IModelMetadataProvider metadataProvider);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.AutoValidateAntiforgeryTokenAuthorizationFilter : ValidateAntiforgeryTokenAuthorizationFilter {
    public AutoValidateAntiforgeryTokenAuthorizationFilter(IAntiforgery antiforgery, ILoggerFactory loggerFactory);
    protected virtual bool ShouldValidate(AuthorizationFilterContext context);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ControllerSaveTempDataPropertyFilter : SaveTempDataPropertyFilterBase {
    public ControllerSaveTempDataPropertyFilter(ITempDataDictionaryFactory factory);
    public sealed virtual void OnActionExecuted(ActionExecutedContext context);
    public sealed virtual void OnActionExecuting(ActionExecutingContext context);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ControllerSaveTempDataPropertyFilterFactory : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<LifecycleProperty> <TempDataProperties>k__BackingField;
    public IReadOnlyList`1<LifecycleProperty> TempDataProperties { get; }
    public bool IsReusable { get; }
    public ControllerSaveTempDataPropertyFilterFactory(IReadOnlyList`1<LifecycleProperty> properties);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<LifecycleProperty> get_TempDataProperties();
    public sealed virtual bool get_IsReusable();
    public sealed virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ControllerViewDataAttributeFilter : object {
    [CompilerGeneratedAttribute]
private object <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<LifecycleProperty> <Properties>k__BackingField;
    public object Subject { get; public set; }
    public IReadOnlyList`1<LifecycleProperty> Properties { get; }
    public ControllerViewDataAttributeFilter(IReadOnlyList`1<LifecycleProperty> properties);
    [CompilerGeneratedAttribute]
public object get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(object value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<LifecycleProperty> get_Properties();
    public sealed virtual void OnActionExecuted(ActionExecutedContext context);
    public sealed virtual void OnActionExecuting(ActionExecutingContext context);
    public sealed virtual void ProvideViewDataValues(ViewDataDictionary viewData);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ControllerViewDataAttributeFilterFactory : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<LifecycleProperty> <Properties>k__BackingField;
    public IReadOnlyList`1<LifecycleProperty> Properties { get; }
    public bool IsReusable { get; }
    public ControllerViewDataAttributeFilterFactory(IReadOnlyList`1<LifecycleProperty> properties);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<LifecycleProperty> get_Properties();
    public sealed virtual bool get_IsReusable();
    public sealed virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
internal interface Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ISaveTempDataCallback {
    public abstract virtual void OnTempDataSaving(ITempDataDictionary tempData);
}
internal interface Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.IViewDataValuesProviderFeature {
    public abstract virtual void ProvideViewDataValues(ViewDataDictionary viewData);
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{PropertyInfo, nq}")]
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.LifecycleProperty : ValueType {
    private PropertyHelper _propertyHelper;
    private bool _isReferenceTypeOrNullable;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    public string Key { get; }
    public PropertyInfo PropertyInfo { get; }
    public LifecycleProperty(PropertyInfo propertyInfo, string key);
    [CompilerGeneratedAttribute]
public string get_Key();
    public PropertyInfo get_PropertyInfo();
    public object GetValue(object instance);
    public void SetValue(object instance, object value);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter : object {
    private static Func`2<object, Task> OnStartingCallback;
    internal static object SaveTempDataFilterContextKey;
    private ITempDataDictionaryFactory _factory;
    public SaveTempDataFilter(ITempDataDictionaryFactory factory);
    private static SaveTempDataFilter();
    public sealed virtual void OnResourceExecuting(ResourceExecutingContext context);
    private static Task OnStarting(HttpContext httpContext);
    public sealed virtual void OnResourceExecuted(ResourceExecutedContext context);
    public sealed virtual void OnResultExecuting(ResultExecutingContext context);
    public sealed virtual void OnResultExecuted(ResultExecutedContext context);
    private static SaveTempDataContext GetTempDataContext(HttpContext httpContext);
    private static void SaveTempData(IActionResult result, ITempDataDictionaryFactory factory, IList`1<IFilterMetadata> filters, HttpContext httpContext);
}
internal abstract class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase : object {
    protected ITempDataDictionaryFactory _tempDataFactory;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<LifecycleProperty> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<PropertyInfo, object> <OriginalValues>k__BackingField;
    public IReadOnlyList`1<LifecycleProperty> Properties { get; public set; }
    public object Subject { get; public set; }
    public IDictionary`2<PropertyInfo, object> OriginalValues { get; }
    public SaveTempDataPropertyFilterBase(ITempDataDictionaryFactory tempDataFactory);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<LifecycleProperty> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IReadOnlyList`1<LifecycleProperty> value);
    [CompilerGeneratedAttribute]
public object get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(object value);
    [CompilerGeneratedAttribute]
public IDictionary`2<PropertyInfo, object> get_OriginalValues();
    public sealed virtual void OnTempDataSaving(ITempDataDictionary tempData);
    protected void SetPropertyValues(ITempDataDictionary tempData);
    public static IReadOnlyList`1<LifecycleProperty> GetTempDataProperties(TempDataSerializer tempDataSerializer, Type type);
    private static bool ValidateProperty(TempDataSerializer tempDataSerializer, List`1<string> errorMessages, PropertyInfo property);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.TempDataApplicationModelProvider : object {
    private TempDataSerializer _tempDataSerializer;
    public int Order { get; }
    public TempDataApplicationModelProvider(TempDataSerializer tempDataSerializer);
    public sealed virtual int get_Order();
    public sealed virtual void OnProvidersExecuted(ApplicationModelProviderContext context);
    public sealed virtual void OnProvidersExecuting(ApplicationModelProviderContext context);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ValidateAntiforgeryTokenAuthorizationFilter : object {
    private IAntiforgery _antiforgery;
    private ILogger _logger;
    public ValidateAntiforgeryTokenAuthorizationFilter(IAntiforgery antiforgery, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ValidateAntiforgeryTokenAuthorizationFilter/<OnAuthorizationAsync>d__3")]
public sealed virtual Task OnAuthorizationAsync(AuthorizationFilterContext context);
    protected virtual bool ShouldValidate(AuthorizationFilterContext context);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ViewDataAttributeApplicationModelProvider : object {
    public int Order { get; }
    public sealed virtual int get_Order();
    public sealed virtual void OnProvidersExecuted(ApplicationModelProviderContext context);
    public sealed virtual void OnProvidersExecuting(ApplicationModelProviderContext context);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ViewDataAttributePropertyProvider : object {
    public static IReadOnlyList`1<LifecycleProperty> GetViewDataProperties(Type type);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.FormatWeekHelper : object {
    public static string GetFormattedWeek(ModelExplorer modelExplorer);
}
[DebuggerDisplayAttribute("FormData = {FormData.Count}")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext : object {
    private Dictionary`2<string, bool> _renderedFields;
    private Dictionary`2<string, bool> _invariantFields;
    private Dictionary`2<string, object> _formData;
    private IList`1<IHtmlContent> _endOfFormContent;
    [CompilerGeneratedAttribute]
private bool <HasAntiforgeryToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanRenderAtEndOfForm>k__BackingField;
    public IDictionary`2<string, object> FormData { get; }
    public bool HasAntiforgeryToken { get; public set; }
    public bool HasFormData { get; }
    public bool HasEndOfFormContent { get; }
    public IList`1<IHtmlContent> EndOfFormContent { get; }
    public bool CanRenderAtEndOfForm { get; public set; }
    private Dictionary`2<string, bool> RenderedFields { get; }
    private Dictionary`2<string, bool> InvariantFields { get; }
    public IDictionary`2<string, object> get_FormData();
    [CompilerGeneratedAttribute]
public bool get_HasAntiforgeryToken();
    [CompilerGeneratedAttribute]
public void set_HasAntiforgeryToken(bool value);
    public bool get_HasFormData();
    public bool get_HasEndOfFormContent();
    public IList`1<IHtmlContent> get_EndOfFormContent();
    [CompilerGeneratedAttribute]
public bool get_CanRenderAtEndOfForm();
    [CompilerGeneratedAttribute]
public void set_CanRenderAtEndOfForm(bool value);
    private Dictionary`2<string, bool> get_RenderedFields();
    private Dictionary`2<string, bool> get_InvariantFields();
    public bool RenderedField(string fieldName);
    public void RenderedField(string fieldName, bool value);
    internal bool InvariantField(string fieldName);
    internal void InvariantField(string fieldName, bool value);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlAttributePropertyHelper : object {
    private static ConcurrentDictionary`2<Type, HtmlAttributePropertyHelper[]> ReflectionCache;
    private PropertyHelper _propertyHelper;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public HtmlAttributePropertyHelper(PropertyHelper propertyHelper);
    private static HtmlAttributePropertyHelper();
    public static void UpdateCache(Type _);
    [CompilerGeneratedAttribute]
public string get_Name();
    public static HtmlAttributePropertyHelper[] GetProperties(Type type);
    internal object GetValue(object instance);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper : object {
    public static string ValidationInputCssClassName;
    public static string ValidationInputValidCssClassName;
    public static string ValidationMessageCssClassName;
    public static string ValidationMessageValidCssClassName;
    public static string ValidationSummaryCssClassName;
    public static string ValidationSummaryValidCssClassName;
    private IHtmlGenerator _htmlGenerator;
    private ICompositeViewEngine _viewEngine;
    private HtmlEncoder _htmlEncoder;
    private IViewBufferScope _bufferScope;
    private ViewContext _viewContext;
    [CompilerGeneratedAttribute]
private UrlEncoder <UrlEncoder>k__BackingField;
    [CompilerGeneratedAttribute]
private IModelMetadataProvider <MetadataProvider>k__BackingField;
    public Html5DateRenderingMode Html5DateRenderingMode { get; public set; }
    public string IdAttributeDotReplacement { get; }
    public ViewContext ViewContext { get; private set; }
    [DynamicAttribute]
public object ViewBag { get; }
    public ViewDataDictionary ViewData { get; }
    public ITempDataDictionary TempData { get; }
    public UrlEncoder UrlEncoder { get; }
    public IModelMetadataProvider MetadataProvider { get; }
    public HtmlHelper(IHtmlGenerator htmlGenerator, ICompositeViewEngine viewEngine, IModelMetadataProvider metadataProvider, IViewBufferScope bufferScope, HtmlEncoder htmlEncoder, UrlEncoder urlEncoder);
    private static HtmlHelper();
    public sealed virtual Html5DateRenderingMode get_Html5DateRenderingMode();
    public sealed virtual void set_Html5DateRenderingMode(Html5DateRenderingMode value);
    public sealed virtual string get_IdAttributeDotReplacement();
    public sealed virtual ViewContext get_ViewContext();
    private void set_ViewContext(ViewContext value);
    public sealed virtual object get_ViewBag();
    public sealed virtual ViewDataDictionary get_ViewData();
    public sealed virtual ITempDataDictionary get_TempData();
    [CompilerGeneratedAttribute]
public sealed virtual UrlEncoder get_UrlEncoder();
    [CompilerGeneratedAttribute]
public sealed virtual IModelMetadataProvider get_MetadataProvider();
    public static IDictionary`2<string, object> ObjectToDictionary(object value);
    public static IDictionary`2<string, object> AnonymousObjectToHtmlAttributes(object htmlAttributes);
    public virtual void Contextualize(ViewContext viewContext);
    public sealed virtual IHtmlContent ActionLink(string linkText, string actionName, string controllerName, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes);
    public sealed virtual IHtmlContent AntiForgeryToken();
    public sealed virtual MvcForm BeginForm(string actionName, string controllerName, object routeValues, FormMethod method, Nullable`1<bool> antiforgery, object htmlAttributes);
    public sealed virtual MvcForm BeginRouteForm(string routeName, object routeValues, FormMethod method, Nullable`1<bool> antiforgery, object htmlAttributes);
    public sealed virtual void EndForm();
    public sealed virtual IHtmlContent CheckBox(string expression, Nullable`1<bool> isChecked, object htmlAttributes);
    public sealed virtual string Encode(string value);
    public sealed virtual string Encode(object value);
    public sealed virtual string FormatValue(object value, string format);
    public sealed virtual string GenerateIdFromName(string fullName);
    public sealed virtual IHtmlContent Display(string expression, string templateName, string htmlFieldName, object additionalViewData);
    public sealed virtual string DisplayName(string expression);
    public sealed virtual string DisplayText(string expression);
    public sealed virtual IHtmlContent DropDownList(string expression, IEnumerable`1<SelectListItem> selectList, string optionLabel, object htmlAttributes);
    public sealed virtual IHtmlContent Editor(string expression, string templateName, string htmlFieldName, object additionalViewData);
    public sealed virtual IEnumerable`1<SelectListItem> GetEnumSelectList();
    public sealed virtual IEnumerable`1<SelectListItem> GetEnumSelectList(Type enumType);
    public sealed virtual IHtmlContent Hidden(string expression, object value, object htmlAttributes);
    public sealed virtual string Id(string expression);
    public sealed virtual IHtmlContent Label(string expression, string labelText, object htmlAttributes);
    public sealed virtual IHtmlContent ListBox(string expression, IEnumerable`1<SelectListItem> selectList, object htmlAttributes);
    public sealed virtual string Name(string expression);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper/<PartialAsync>d__57")]
public sealed virtual Task`1<IHtmlContent> PartialAsync(string partialViewName, object model, ViewDataDictionary viewData);
    public sealed virtual Task RenderPartialAsync(string partialViewName, object model, ViewDataDictionary viewData);
    protected virtual IHtmlContent GenerateDisplay(ModelExplorer modelExplorer, string htmlFieldName, string templateName, object additionalViewData);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper/<RenderPartialCoreAsync>d__60")]
protected virtual Task RenderPartialCoreAsync(string partialViewName, object model, ViewDataDictionary viewData, TextWriter writer);
    public sealed virtual IHtmlContent Password(string expression, object value, object htmlAttributes);
    public sealed virtual IHtmlContent RadioButton(string expression, object value, Nullable`1<bool> isChecked, object htmlAttributes);
    public sealed virtual IHtmlContent Raw(string value);
    public sealed virtual IHtmlContent Raw(object value);
    public sealed virtual IHtmlContent RouteLink(string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes);
    public sealed virtual IHtmlContent ValidationMessage(string expression, string message, object htmlAttributes, string tag);
    public sealed virtual IHtmlContent ValidationSummary(bool excludePropertyErrors, string message, object htmlAttributes, string tag);
    public static string GetFormMethodString(FormMethod method);
    public sealed virtual IHtmlContent TextArea(string expression, string value, int rows, int columns, object htmlAttributes);
    public sealed virtual IHtmlContent TextBox(string expression, object value, string format, object htmlAttributes);
    public sealed virtual string Value(string expression, string format);
    protected virtual MvcForm CreateForm();
    protected virtual IHtmlContent GenerateCheckBox(ModelExplorer modelExplorer, string expression, Nullable`1<bool> isChecked, object htmlAttributes);
    protected virtual string GenerateDisplayName(ModelExplorer modelExplorer, string expression);
    protected virtual string GenerateDisplayText(ModelExplorer modelExplorer);
    protected IHtmlContent GenerateDropDown(ModelExplorer modelExplorer, string expression, IEnumerable`1<SelectListItem> selectList, string optionLabel, object htmlAttributes);
    protected virtual IHtmlContent GenerateEditor(ModelExplorer modelExplorer, string htmlFieldName, string templateName, object additionalViewData);
    protected virtual MvcForm GenerateForm(string actionName, string controllerName, object routeValues, FormMethod method, Nullable`1<bool> antiforgery, object htmlAttributes);
    protected virtual MvcForm GenerateRouteForm(string routeName, object routeValues, FormMethod method, Nullable`1<bool> antiforgery, object htmlAttributes);
    protected virtual IHtmlContent GenerateHidden(ModelExplorer modelExplorer, string expression, object value, bool useViewData, object htmlAttributes);
    protected virtual string GenerateId(string expression);
    protected virtual IHtmlContent GenerateLabel(ModelExplorer modelExplorer, string expression, string labelText, object htmlAttributes);
    protected IHtmlContent GenerateListBox(ModelExplorer modelExplorer, string expression, IEnumerable`1<SelectListItem> selectList, object htmlAttributes);
    protected virtual string GenerateName(string expression);
    protected virtual IHtmlContent GeneratePassword(ModelExplorer modelExplorer, string expression, object value, object htmlAttributes);
    protected virtual IHtmlContent GenerateRadioButton(ModelExplorer modelExplorer, string expression, object value, Nullable`1<bool> isChecked, object htmlAttributes);
    protected virtual IHtmlContent GenerateTextArea(ModelExplorer modelExplorer, string expression, int rows, int columns, object htmlAttributes);
    protected virtual IHtmlContent GenerateTextBox(ModelExplorer modelExplorer, string expression, object value, string format, object htmlAttributes);
    protected virtual IHtmlContent GenerateValidationMessage(ModelExplorer modelExplorer, string expression, string message, string tag, object htmlAttributes);
    protected virtual IHtmlContent GenerateValidationSummary(bool excludePropertyErrors, string message, object htmlAttributes, string tag);
    protected virtual string GenerateValue(string expression, object value, string format, bool useViewData);
    protected virtual IEnumerable`1<SelectListItem> GetEnumSelectList(ModelMetadata metadata);
    private static string GetExpressionText(string expression);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1 : HtmlHelper {
    private ModelExpressionProvider _modelExpressionProvider;
    [CompilerGeneratedAttribute]
private ViewDataDictionary`1<TModel> <ViewData>k__BackingField;
    public ViewDataDictionary`1<TModel> ViewData { get; private set; }
    public HtmlHelper`1(IHtmlGenerator htmlGenerator, ICompositeViewEngine viewEngine, IModelMetadataProvider metadataProvider, IViewBufferScope bufferScope, HtmlEncoder htmlEncoder, UrlEncoder urlEncoder, ModelExpressionProvider modelExpressionProvider);
    [CompilerGeneratedAttribute]
public sealed virtual ViewDataDictionary`1<TModel> get_ViewData();
    [CompilerGeneratedAttribute]
private void set_ViewData(ViewDataDictionary`1<TModel> value);
    public virtual void Contextualize(ViewContext viewContext);
    public sealed virtual IHtmlContent CheckBoxFor(Expression`1<Func`2<TModel, bool>> expression, object htmlAttributes);
    public sealed virtual IHtmlContent DropDownListFor(Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList, string optionLabel, object htmlAttributes);
    public sealed virtual IHtmlContent DisplayFor(Expression`1<Func`2<TModel, TResult>> expression, string templateName, string htmlFieldName, object additionalViewData);
    public sealed virtual string DisplayNameFor(Expression`1<Func`2<TModel, TResult>> expression);
    public sealed virtual string DisplayNameForInnerType(Expression`1<Func`2<TModelItem, TResult>> expression);
    public sealed virtual string DisplayTextFor(Expression`1<Func`2<TModel, TResult>> expression);
    public sealed virtual IHtmlContent EditorFor(Expression`1<Func`2<TModel, TResult>> expression, string templateName, string htmlFieldName, object additionalViewData);
    public sealed virtual IHtmlContent HiddenFor(Expression`1<Func`2<TModel, TResult>> expression, object htmlAttributes);
    public sealed virtual string IdFor(Expression`1<Func`2<TModel, TResult>> expression);
    public sealed virtual IHtmlContent LabelFor(Expression`1<Func`2<TModel, TResult>> expression, string labelText, object htmlAttributes);
    public sealed virtual IHtmlContent ListBoxFor(Expression`1<Func`2<TModel, TResult>> expression, IEnumerable`1<SelectListItem> selectList, object htmlAttributes);
    public sealed virtual string NameFor(Expression`1<Func`2<TModel, TResult>> expression);
    public sealed virtual IHtmlContent PasswordFor(Expression`1<Func`2<TModel, TResult>> expression, object htmlAttributes);
    public sealed virtual IHtmlContent RadioButtonFor(Expression`1<Func`2<TModel, TResult>> expression, object value, object htmlAttributes);
    public sealed virtual IHtmlContent TextAreaFor(Expression`1<Func`2<TModel, TResult>> expression, int rows, int columns, object htmlAttributes);
    public sealed virtual IHtmlContent TextBoxFor(Expression`1<Func`2<TModel, TResult>> expression, string format, object htmlAttributes);
    private ModelExpression GetModelExpression(Expression`1<Func`2<TModel, TResult>> expression);
    protected string GetExpressionName(Expression`1<Func`2<TModel, TResult>> expression);
    protected ModelExplorer GetModelExplorer(Expression`1<Func`2<TModel, TResult>> expression);
    public sealed virtual IHtmlContent ValidationMessageFor(Expression`1<Func`2<TModel, TResult>> expression, string message, object htmlAttributes, string tag);
    public sealed virtual string ValueFor(Expression`1<Func`2<TModel, TResult>> expression, string format);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions : object {
    private string _idAttributeDotReplacement;
    [CompilerGeneratedAttribute]
private Html5DateRenderingMode <Html5DateRenderingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ClientValidationEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationMessageElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationSummaryMessageElement>k__BackingField;
    [CompilerGeneratedAttribute]
private CheckBoxHiddenInputRenderMode <CheckBoxHiddenInputRenderMode>k__BackingField;
    [CompilerGeneratedAttribute]
private FormInputRenderMode <FormInputRenderMode>k__BackingField;
    public Html5DateRenderingMode Html5DateRenderingMode { get; public set; }
    public string IdAttributeDotReplacement { get; public set; }
    public bool ClientValidationEnabled { get; public set; }
    public string ValidationMessageElement { get; public set; }
    public string ValidationSummaryMessageElement { get; public set; }
    public CheckBoxHiddenInputRenderMode CheckBoxHiddenInputRenderMode { get; public set; }
    public FormInputRenderMode FormInputRenderMode { get; public set; }
    [CompilerGeneratedAttribute]
public Html5DateRenderingMode get_Html5DateRenderingMode();
    [CompilerGeneratedAttribute]
public void set_Html5DateRenderingMode(Html5DateRenderingMode value);
    public string get_IdAttributeDotReplacement();
    public void set_IdAttributeDotReplacement(string value);
    [CompilerGeneratedAttribute]
public bool get_ClientValidationEnabled();
    [CompilerGeneratedAttribute]
public void set_ClientValidationEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ValidationMessageElement();
    [CompilerGeneratedAttribute]
public void set_ValidationMessageElement(string value);
    [CompilerGeneratedAttribute]
public string get_ValidationSummaryMessageElement();
    [CompilerGeneratedAttribute]
public void set_ValidationSummaryMessageElement(string value);
    [CompilerGeneratedAttribute]
public CheckBoxHiddenInputRenderMode get_CheckBoxHiddenInputRenderMode();
    [CompilerGeneratedAttribute]
public void set_CheckBoxHiddenInputRenderMode(CheckBoxHiddenInputRenderMode value);
    [CompilerGeneratedAttribute]
public FormInputRenderMode get_FormInputRenderMode();
    [CompilerGeneratedAttribute]
public void set_FormInputRenderMode(FormInputRenderMode value);
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.IAntiforgeryPolicy {
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.IFileVersionProvider {
    public abstract virtual string AddFileVersionToPath(PathString requestPathBase, string path);
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator {
    public string IdAttributeDotReplacement { get; }
    public abstract virtual string get_IdAttributeDotReplacement();
    public abstract virtual string Encode(string value);
    public abstract virtual string Encode(object value);
    public abstract virtual string FormatValue(object value, string format);
    public abstract virtual TagBuilder GenerateActionLink(ViewContext viewContext, string linkText, string actionName, string controllerName, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes);
    public abstract virtual TagBuilder GeneratePageLink(ViewContext viewContext, string linkText, string pageName, string pageHandler, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes);
    public abstract virtual IHtmlContent GenerateAntiforgery(ViewContext viewContext);
    public abstract virtual TagBuilder GenerateCheckBox(ViewContext viewContext, ModelExplorer modelExplorer, string expression, Nullable`1<bool> isChecked, object htmlAttributes);
    public abstract virtual TagBuilder GenerateHiddenForCheckbox(ViewContext viewContext, ModelExplorer modelExplorer, string expression);
    public abstract virtual TagBuilder GenerateForm(ViewContext viewContext, string actionName, string controllerName, object routeValues, string method, object htmlAttributes);
    public abstract virtual TagBuilder GeneratePageForm(ViewContext viewContext, string pageName, string pageHandler, object routeValues, string fragment, string method, object htmlAttributes);
    public abstract virtual TagBuilder GenerateRouteForm(ViewContext viewContext, string routeName, object routeValues, string method, object htmlAttributes);
    public abstract virtual TagBuilder GenerateHidden(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, bool useViewData, object htmlAttributes);
    public abstract virtual TagBuilder GenerateLabel(ViewContext viewContext, ModelExplorer modelExplorer, string expression, string labelText, object htmlAttributes);
    public abstract virtual TagBuilder GeneratePassword(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, object htmlAttributes);
    public abstract virtual TagBuilder GenerateRadioButton(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, Nullable`1<bool> isChecked, object htmlAttributes);
    public abstract virtual TagBuilder GenerateRouteLink(ViewContext viewContext, string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes);
    public abstract virtual TagBuilder GenerateSelect(ViewContext viewContext, ModelExplorer modelExplorer, string optionLabel, string expression, IEnumerable`1<SelectListItem> selectList, bool allowMultiple, object htmlAttributes);
    public abstract virtual TagBuilder GenerateSelect(ViewContext viewContext, ModelExplorer modelExplorer, string optionLabel, string expression, IEnumerable`1<SelectListItem> selectList, ICollection`1<string> currentValues, bool allowMultiple, object htmlAttributes);
    public abstract virtual IHtmlContent GenerateGroupsAndOptions(string optionLabel, IEnumerable`1<SelectListItem> selectList);
    public abstract virtual TagBuilder GenerateTextArea(ViewContext viewContext, ModelExplorer modelExplorer, string expression, int rows, int columns, object htmlAttributes);
    public abstract virtual TagBuilder GenerateTextBox(ViewContext viewContext, ModelExplorer modelExplorer, string expression, object value, string format, object htmlAttributes);
    public abstract virtual TagBuilder GenerateValidationMessage(ViewContext viewContext, ModelExplorer modelExplorer, string expression, string message, string tag, object htmlAttributes);
    public abstract virtual TagBuilder GenerateValidationSummary(ViewContext viewContext, bool excludePropertyErrors, string message, string headerTag, object htmlAttributes);
    public abstract virtual ICollection`1<string> GetCurrentValues(ViewContext viewContext, ModelExplorer modelExplorer, string expression, bool allowMultiple);
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider {
    public abstract virtual ModelExpression CreateModelExpression(ViewDataDictionary`1<TModel> viewData, Expression`1<Func`2<TModel, TValue>> expression);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.DefaultTempDataSerializer : TempDataSerializer {
    public virtual IDictionary`2<string, object> Deserialize(Byte[] value);
    private static IDictionary`2<string, object> DeserializeDictionary(JsonElement rootElement);
    private static object DeserializeArray(JsonElement& arrayElement);
    private static object DeserializeDictionaryEntry(JsonElement& objectElement);
    public virtual Byte[] Serialize(IDictionary`2<string, object> values);
    public virtual bool CanSerializeType(Type type);
}
public abstract class Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer : object {
    public abstract virtual IDictionary`2<string, object> Deserialize(Byte[] unprotectedData);
    public abstract virtual Byte[] Serialize(IDictionary`2<string, object> values);
    public virtual bool CanSerializeType(Type type);
}
public enum Microsoft.AspNetCore.Mvc.ViewFeatures.InputType : Enum {
    public int value__;
    public static InputType CheckBox;
    public static InputType Hidden;
    public static InputType Password;
    public static InputType Radio;
    public static InputType Text;
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary {
    public abstract virtual void Load();
    public abstract virtual void Save();
    public abstract virtual void Keep();
    public abstract virtual void Keep(string key);
    public abstract virtual object Peek(string key);
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory {
    public abstract virtual ITempDataDictionary GetTempData(HttpContext context);
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider {
    public abstract virtual IDictionary`2<string, object> LoadTempData(HttpContext context);
    public abstract virtual void SaveTempData(HttpContext context, IDictionary`2<string, object> values);
}
public interface Microsoft.AspNetCore.Mvc.ViewFeatures.IViewContextAware {
    public abstract virtual void Contextualize(ViewContext viewContext);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.LambdaExpressionComparer : object {
    public static LambdaExpressionComparer Instance;
    private static LambdaExpressionComparer();
    public sealed virtual bool Equals(LambdaExpression lambdaExpression1, LambdaExpression lambdaExpression2);
    public sealed virtual int GetHashCode(LambdaExpression lambdaExpression);
}
[IsReadOnlyAttribute]
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.MemberExpressionCacheKey : ValueType {
    [CompilerGeneratedAttribute]
private MemberExpression <MemberExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ModelType>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberInfo[] <Members>k__BackingField;
    public MemberExpression MemberExpression { get; }
    public Type ModelType { get; }
    public MemberInfo[] Members { get; }
    public MemberExpressionCacheKey(Type modelType, MemberExpression memberExpression);
    public MemberExpressionCacheKey(Type modelType, MemberInfo[] members);
    public MemberExpressionCacheKey MakeCacheable();
    [CompilerGeneratedAttribute]
public MemberExpression get_MemberExpression();
    [CompilerGeneratedAttribute]
public Type get_ModelType();
    [CompilerGeneratedAttribute]
public MemberInfo[] get_Members();
    public Enumerator GetEnumerator();
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.MemberExpressionCacheKeyComparer : object {
    public static MemberExpressionCacheKeyComparer Instance;
    private static MemberExpressionCacheKeyComparer();
    public sealed virtual bool Equals(MemberExpressionCacheKey x, MemberExpressionCacheKey y);
    public sealed virtual int GetHashCode(MemberExpressionCacheKey obj);
}
[DebuggerDisplayAttribute("DeclaredType = {Metadata.ModelType.Name}, PropertyName = {Metadata.PropertyName}")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer : object {
    private IModelMetadataProvider _metadataProvider;
    private object _model;
    private Func`2<object, object> _modelAccessor;
    private ModelExplorer[] _properties;
    [CompilerGeneratedAttribute]
private ModelExplorer <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <Metadata>k__BackingField;
    public ModelExplorer Container { get; }
    public ModelMetadata Metadata { get; }
    public object Model { get; }
    public Type ModelType { get; }
    public IEnumerable`1<ModelExplorer> Properties { get; }
    internal ModelExplorer[] PropertiesInternal { get; }
    public ModelExplorer(IModelMetadataProvider metadataProvider, ModelMetadata metadata, object model);
    public ModelExplorer(IModelMetadataProvider metadataProvider, ModelExplorer container, ModelMetadata metadata, Func`2<object, object> modelAccessor);
    public ModelExplorer(IModelMetadataProvider metadataProvider, ModelExplorer container, ModelMetadata metadata, object model);
    [CompilerGeneratedAttribute]
public ModelExplorer get_Container();
    [CompilerGeneratedAttribute]
public ModelMetadata get_Metadata();
    public object get_Model();
    public Type get_ModelType();
    public IEnumerable`1<ModelExplorer> get_Properties();
    internal ModelExplorer[] get_PropertiesInternal();
    public ModelExplorer GetExplorerForModel(object model);
    public ModelExplorer GetExplorerForProperty(string name);
    public ModelExplorer GetExplorerForProperty(string name, Func`2<object, object> modelAccessor);
    public ModelExplorer GetExplorerForProperty(string name, object model);
    public ModelExplorer GetExplorerForExpression(Type modelType, object model);
    public ModelExplorer GetExplorerForExpression(ModelMetadata metadata, object model);
    public ModelExplorer GetExplorerForExpression(Type modelType, Func`2<object, object> modelAccessor);
    public ModelExplorer GetExplorerForExpression(ModelMetadata metadata, Func`2<object, object> modelAccessor);
    private ModelMetadata GetMetadataForRuntimeType();
    private ModelExplorer CreateExplorerForProperty(ModelMetadata propertyMetadata, PropertyHelper propertyHelper);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorerExtensions : object {
    [ExtensionAttribute]
public static string GetSimpleDisplayText(ModelExplorer modelExplorer);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelExplorer <ModelExplorer>k__BackingField;
    public string Name { get; }
    public ModelMetadata Metadata { get; }
    public object Model { get; }
    public ModelExplorer ModelExplorer { get; }
    public ModelExpression(string name, ModelExplorer modelExplorer);
    [CompilerGeneratedAttribute]
public string get_Name();
    public ModelMetadata get_Metadata();
    public object get_Model();
    [CompilerGeneratedAttribute]
public ModelExplorer get_ModelExplorer();
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider : object {
    private IModelMetadataProvider _modelMetadataProvider;
    private ConcurrentDictionary`2<LambdaExpression, string> _expressionTextCache;
    public ModelExpressionProvider(IModelMetadataProvider modelMetadataProvider);
    public string GetExpressionText(Expression`1<Func`2<TModel, TValue>> expression);
    public sealed virtual ModelExpression CreateModelExpression(ViewDataDictionary`1<TModel> viewData, Expression`1<Func`2<TModel, TValue>> expression);
    public ModelExpression CreateModelExpression(ViewDataDictionary`1<TModel> viewData, string expression);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.ViewFeatures.ModelMetadataProviderExtensions : object {
    [ExtensionAttribute]
public static ModelExplorer GetModelExplorerForType(IModelMetadataProvider provider, Type modelType, object model);
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.MvcViewFeaturesDiagnosticListenerExtensions : object {
    [ExtensionAttribute]
public static void BeforeViewComponent(DiagnosticListener diagnosticListener, ViewComponentContext context, object viewComponent);
    private static void BeforeViewComponentImpl(DiagnosticListener diagnosticListener, ViewComponentContext context, object viewComponent);
    [ExtensionAttribute]
public static void AfterViewComponent(DiagnosticListener diagnosticListener, ViewComponentContext context, IViewComponentResult result, object viewComponent);
    private static void AfterViewComponentImpl(DiagnosticListener diagnosticListener, ViewComponentContext context, IViewComponentResult result, object viewComponent);
    [ExtensionAttribute]
public static void ViewComponentBeforeViewExecute(DiagnosticListener diagnosticListener, ViewComponentContext context, IView view);
    private static void ViewComponentBeforeViewExecuteImpl(DiagnosticListener diagnosticListener, ViewComponentContext context, IView view);
    [ExtensionAttribute]
public static void ViewComponentAfterViewExecute(DiagnosticListener diagnosticListener, ViewComponentContext context, IView view);
    private static void ViewComponentAfterViewExecuteImpl(DiagnosticListener diagnosticListener, ViewComponentContext context, IView view);
    [ExtensionAttribute]
public static void BeforeView(DiagnosticListener diagnosticListener, IView view, ViewContext viewContext);
    private static void BeforeViewImpl(DiagnosticListener diagnosticListener, IView view, ViewContext viewContext);
    [ExtensionAttribute]
public static void AfterView(DiagnosticListener diagnosticListener, IView view, ViewContext viewContext);
    private static void AfterViewImpl(DiagnosticListener diagnosticListener, IView view, ViewContext viewContext);
    [ExtensionAttribute]
public static void ViewFound(DiagnosticListener diagnosticListener, ActionContext actionContext, bool isMainPage, ActionResult viewResult, string viewName, IView view);
    private static void ViewFoundImpl(DiagnosticListener diagnosticListener, ActionContext actionContext, bool isMainPage, ActionResult viewResult, string viewName, IView view);
    [ExtensionAttribute]
public static void ViewNotFound(DiagnosticListener diagnosticListener, ActionContext actionContext, bool isMainPage, ActionResult viewResult, string viewName, IEnumerable`1<string> searchedLocations);
    private static void ViewNotFoundImpl(DiagnosticListener diagnosticListener, ActionContext actionContext, bool isMainPage, ActionResult viewResult, string viewName, IEnumerable`1<string> searchedLocations);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.NameAndIdProvider : object {
    private static object PreviousNameAndIdKey;
    private static NameAndIdProvider();
    public static string CreateSanitizedId(ViewContext viewContext, string fullName, string invalidCharReplacement);
    public static void GenerateId(ViewContext viewContext, TagBuilder tagBuilder, string fullName, string invalidCharReplacement);
    public static string GetFullHtmlFieldName(ViewContext viewContext, string expression);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.NullView : object {
    public static NullView Instance;
    public string Path { get; }
    private static NullView();
    public sealed virtual string get_Path();
    public sealed virtual Task RenderAsync(ViewContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor : ViewExecutor {
    private static string ActionNameKey;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    protected ILogger Logger { get; }
    public PartialViewResultExecutor(IOptions`1<MvcViewOptions> viewOptions, IHttpResponseStreamWriterFactory writerFactory, ICompositeViewEngine viewEngine, ITempDataDictionaryFactory tempDataFactory, DiagnosticListener diagnosticListener, ILoggerFactory loggerFactory, IModelMetadataProvider modelMetadataProvider);
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    public virtual ViewEngineResult FindView(ActionContext actionContext, PartialViewResult viewResult);
    public virtual Task ExecuteAsync(ActionContext actionContext, IView view, PartialViewResult viewResult);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor/<ExecuteAsync>d__7")]
public virtual Task ExecuteAsync(ActionContext context, PartialViewResult result);
    private static string GetActionName(ActionContext context);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string ViewComponent_AmbiguousTypeMatch { get; }
    internal static string ViewComponent_AsyncMethod_ShouldReturnTask { get; }
    internal static string ViewComponent_MustReturnValue { get; }
    internal static string ViewComponent_SyncMethod_ShouldReturnValue { get; }
    internal static string ViewComponent_CannotFindComponent { get; }
    internal static string ViewComponent_IViewComponentFactory_ReturnedNull { get; }
    internal static string ViewComponent_CannotFindMethod { get; }
    internal static string ViewComponent_InvalidReturnValue { get; }
    internal static string ArgumentCannotBeNullOrEmpty { get; }
    internal static string PropertyOfTypeCannotBeNull { get; }
    internal static string TypeMethodMustReturnNotNullValue { get; }
    internal static string ArgumentPropertyUnexpectedType { get; }
    internal static string Common_PartialViewNotFound { get; }
    internal static string Common_TriState_False { get; }
    internal static string Common_TriState_NotSet { get; }
    internal static string Common_TriState_True { get; }
    internal static string DynamicViewData_ViewDataNull { get; }
    internal static string ExpressionHelper_InvalidIndexerExpression { get; }
    internal static string HtmlHelper_NullModelMetadata { get; }
    internal static string HtmlHelper_NotContextualized { get; }
    internal static string HtmlHelper_MissingSelectData { get; }
    internal static string HtmlHelper_SelectExpressionNotEnumerable { get; }
    internal static string HtmlHelper_TypeNotSupported_ForGetEnumSelectList { get; }
    internal static string HtmlHelper_WrongSelectDataType { get; }
    internal static string Templates_TypeMustImplementIEnumerable { get; }
    internal static string TemplateHelpers_TemplateLimitations { get; }
    internal static string TemplateHelpers_NoTemplate { get; }
    internal static string ViewData_ModelCannotBeNull { get; }
    internal static string ViewData_WrongTModelType { get; }
    internal static string ViewEngine_PartialViewNotFound { get; }
    internal static string ViewEngine_ViewNotFound { get; }
    internal static string HtmlHelper_TextAreaParameterOutOfRange { get; }
    internal static string UnobtrusiveJavascript_ValidationParameterCannotBeEmpty { get; }
    internal static string UnobtrusiveJavascript_ValidationParameterMustBeLegal { get; }
    internal static string UnobtrusiveJavascript_ValidationTypeCannotBeEmpty { get; }
    internal static string UnobtrusiveJavascript_ValidationTypeMustBeLegal { get; }
    internal static string UnobtrusiveJavascript_ValidationTypeMustBeUnique { get; }
    internal static string TemplatedViewLocationExpander_NoReplacementToken { get; }
    internal static string TemplatedExpander_PopulateValuesMustBeInvokedFirst { get; }
    internal static string TemplatedExpander_ValueFactoryCannotReturnNull { get; }
    internal static string ViewComponent_AmbiguousTypeMatch_Item { get; }
    internal static string Common_PropertyNotFound { get; }
    internal static string RemoteAttribute_NoUrlFound { get; }
    internal static string RemoteAttribute_RemoteValidationFailed { get; }
    internal static string HtmlGenerator_FieldNameCannotBeNullOrEmpty { get; }
    internal static string ViewComponentResult_NameOrTypeMustBeSet { get; }
    internal static string Dictionary_DuplicateKey { get; }
    internal static string ViewComponent_SyncMethod_CannotReturnTask { get; }
    internal static string ViewComponent_AmbiguousMethods { get; }
    internal static string ValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated { get; }
    internal static string CreateModelExpression_NullModelMetadata { get; }
    internal static string ViewEnginesAreRequired { get; }
    internal static string TempDataProperties_PublicGetterSetter { get; }
    internal static string TempDataProperties_InvalidType { get; }
    internal static string DeserializingTempData { get; }
    internal static string SerializingTempData { get; }
    internal static string TempData_CannotSerializeType { get; }
    internal static string TempData_CannotDeserializeType { get; }
    internal static string AsyncDisposableViewsNotSupported { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_ViewComponent_AmbiguousTypeMatch();
    internal static string FormatViewComponent_AmbiguousTypeMatch(object p0, object p1, object p2);
    internal static string get_ViewComponent_AsyncMethod_ShouldReturnTask();
    internal static string FormatViewComponent_AsyncMethod_ShouldReturnTask(object p0, object p1, object p2);
    internal static string get_ViewComponent_MustReturnValue();
    internal static string get_ViewComponent_SyncMethod_ShouldReturnValue();
    internal static string FormatViewComponent_SyncMethod_ShouldReturnValue(object p0, object p1);
    internal static string get_ViewComponent_CannotFindComponent();
    internal static string FormatViewComponent_CannotFindComponent(object p0, object p1, object p2, object p3);
    internal static string get_ViewComponent_IViewComponentFactory_ReturnedNull();
    internal static string FormatViewComponent_IViewComponentFactory_ReturnedNull(object p0);
    internal static string get_ViewComponent_CannotFindMethod();
    internal static string FormatViewComponent_CannotFindMethod(object p0, object p1, object p2);
    internal static string get_ViewComponent_InvalidReturnValue();
    internal static string FormatViewComponent_InvalidReturnValue(object p0, object p1, object p2);
    internal static string get_ArgumentCannotBeNullOrEmpty();
    internal static string get_PropertyOfTypeCannotBeNull();
    internal static string FormatPropertyOfTypeCannotBeNull(object p0, object p1);
    internal static string get_TypeMethodMustReturnNotNullValue();
    internal static string FormatTypeMethodMustReturnNotNullValue(object p0, object p1);
    internal static string get_ArgumentPropertyUnexpectedType();
    internal static string FormatArgumentPropertyUnexpectedType(object p0, object p1, object p2);
    internal static string get_Common_PartialViewNotFound();
    internal static string FormatCommon_PartialViewNotFound(object p0, object p1);
    internal static string get_Common_TriState_False();
    internal static string get_Common_TriState_NotSet();
    internal static string get_Common_TriState_True();
    internal static string get_DynamicViewData_ViewDataNull();
    internal static string get_ExpressionHelper_InvalidIndexerExpression();
    internal static string FormatExpressionHelper_InvalidIndexerExpression(object p0, object p1);
    internal static string get_HtmlHelper_NullModelMetadata();
    internal static string FormatHtmlHelper_NullModelMetadata(object p0);
    internal static string get_HtmlHelper_NotContextualized();
    internal static string get_HtmlHelper_MissingSelectData();
    internal static string FormatHtmlHelper_MissingSelectData(object p0, object p1);
    internal static string get_HtmlHelper_SelectExpressionNotEnumerable();
    internal static string FormatHtmlHelper_SelectExpressionNotEnumerable(object p0);
    internal static string get_HtmlHelper_TypeNotSupported_ForGetEnumSelectList();
    internal static string FormatHtmlHelper_TypeNotSupported_ForGetEnumSelectList(object p0, object p1, object p2);
    internal static string get_HtmlHelper_WrongSelectDataType();
    internal static string FormatHtmlHelper_WrongSelectDataType(object p0, object p1, object p2);
    internal static string get_Templates_TypeMustImplementIEnumerable();
    internal static string FormatTemplates_TypeMustImplementIEnumerable(object p0, object p1, object p2);
    internal static string get_TemplateHelpers_TemplateLimitations();
    internal static string get_TemplateHelpers_NoTemplate();
    internal static string FormatTemplateHelpers_NoTemplate(object p0);
    internal static string get_ViewData_ModelCannotBeNull();
    internal static string FormatViewData_ModelCannotBeNull(object p0);
    internal static string get_ViewData_WrongTModelType();
    internal static string FormatViewData_WrongTModelType(object p0, object p1);
    internal static string get_ViewEngine_PartialViewNotFound();
    internal static string FormatViewEngine_PartialViewNotFound(object p0, object p1);
    internal static string get_ViewEngine_ViewNotFound();
    internal static string FormatViewEngine_ViewNotFound(object p0, object p1);
    internal static string get_HtmlHelper_TextAreaParameterOutOfRange();
    internal static string get_UnobtrusiveJavascript_ValidationParameterCannotBeEmpty();
    internal static string FormatUnobtrusiveJavascript_ValidationParameterCannotBeEmpty(object p0);
    internal static string get_UnobtrusiveJavascript_ValidationParameterMustBeLegal();
    internal static string FormatUnobtrusiveJavascript_ValidationParameterMustBeLegal(object p0, object p1);
    internal static string get_UnobtrusiveJavascript_ValidationTypeCannotBeEmpty();
    internal static string FormatUnobtrusiveJavascript_ValidationTypeCannotBeEmpty(object p0);
    internal static string get_UnobtrusiveJavascript_ValidationTypeMustBeLegal();
    internal static string FormatUnobtrusiveJavascript_ValidationTypeMustBeLegal(object p0, object p1);
    internal static string get_UnobtrusiveJavascript_ValidationTypeMustBeUnique();
    internal static string FormatUnobtrusiveJavascript_ValidationTypeMustBeUnique(object p0);
    internal static string get_TemplatedViewLocationExpander_NoReplacementToken();
    internal static string FormatTemplatedViewLocationExpander_NoReplacementToken(object p0);
    internal static string get_TemplatedExpander_PopulateValuesMustBeInvokedFirst();
    internal static string FormatTemplatedExpander_PopulateValuesMustBeInvokedFirst(object p0, object p1);
    internal static string get_TemplatedExpander_ValueFactoryCannotReturnNull();
    internal static string get_ViewComponent_AmbiguousTypeMatch_Item();
    internal static string FormatViewComponent_AmbiguousTypeMatch_Item(object p0, object p1);
    internal static string get_Common_PropertyNotFound();
    internal static string FormatCommon_PropertyNotFound(object p0, object p1);
    internal static string get_RemoteAttribute_NoUrlFound();
    internal static string get_RemoteAttribute_RemoteValidationFailed();
    internal static string FormatRemoteAttribute_RemoteValidationFailed(object p0);
    internal static string get_HtmlGenerator_FieldNameCannotBeNullOrEmpty();
    internal static string FormatHtmlGenerator_FieldNameCannotBeNullOrEmpty(object p0, object p1, object p2, object p3, object p4);
    internal static string get_ViewComponentResult_NameOrTypeMustBeSet();
    internal static string FormatViewComponentResult_NameOrTypeMustBeSet(object p0, object p1);
    internal static string get_Dictionary_DuplicateKey();
    internal static string FormatDictionary_DuplicateKey(object p0);
    internal static string get_ViewComponent_SyncMethod_CannotReturnTask();
    internal static string FormatViewComponent_SyncMethod_CannotReturnTask(object p0, object p1, object p2);
    internal static string get_ViewComponent_AmbiguousMethods();
    internal static string FormatViewComponent_AmbiguousMethods(object p0, object p1, object p2);
    internal static string get_ValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated();
    internal static string FormatValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated(object p0, object p1);
    internal static string get_CreateModelExpression_NullModelMetadata();
    internal static string FormatCreateModelExpression_NullModelMetadata(object p0, object p1);
    internal static string get_ViewEnginesAreRequired();
    internal static string FormatViewEnginesAreRequired(object p0, object p1, object p2);
    internal static string get_TempDataProperties_PublicGetterSetter();
    internal static string FormatTempDataProperties_PublicGetterSetter(object p0, object p1, object p2);
    internal static string get_TempDataProperties_InvalidType();
    internal static string FormatTempDataProperties_InvalidType(object p0, object p1, object p2, object p3);
    internal static string get_DeserializingTempData();
    internal static string get_SerializingTempData();
    internal static string get_TempData_CannotSerializeType();
    internal static string FormatTempData_CannotSerializeType(object p0, object p1);
    internal static string get_TempData_CannotDeserializeType();
    internal static string FormatTempData_CannotDeserializeType(object p0);
    internal static string get_AsyncDisposableViewsNotSupported();
    internal static string FormatAsyncDisposableViewsNotSupported(object p0);
}
[AttributeUsageAttribute("68")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.SaveTempDataAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    public int Order { get; public set; }
    public bool IsReusable { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    public sealed virtual bool get_IsReusable();
    [NullableContextAttribute("1")]
public sealed virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.SessionStateTempDataProvider : object {
    internal static string TempDataSessionStateKey;
    private TempDataSerializer _tempDataSerializer;
    public SessionStateTempDataProvider(TempDataSerializer tempDataSerializer);
    public virtual IDictionary`2<string, object> LoadTempData(HttpContext context);
    public virtual void SaveTempData(HttpContext context, IDictionary`2<string, object> values);
}
[DebuggerDisplayAttribute("{DebuggerToString()}")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.StringHtmlContent : object {
    private string _input;
    [NullableContextAttribute("1")]
public StringHtmlContent(string input);
    [NullableContextAttribute("1")]
public sealed virtual void WriteTo(TextWriter writer, HtmlEncoder encoder);
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary/TempDataDictionaryDebugView")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary : object {
    private Dictionary`2<string, object> _data;
    private bool _loaded;
    private ITempDataProvider _provider;
    private HttpContext _context;
    private HashSet`1<string> _initialKeys;
    private HashSet`1<string> _retainedKeys;
    public int Count { get; }
    public ICollection`1<string> Keys { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<object> Values { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get; }
    [NullableAttribute("2")]
public object Item { get; public set; }
    public TempDataDictionary(HttpContext context, ITempDataProvider provider);
    public sealed virtual int get_Count();
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<object> get_Values();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly();
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public sealed virtual void Keep();
    public sealed virtual void Keep(string key);
    [MemberNotNullAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual void Load();
    [MemberNotNullAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private void AssertLoaded();
    public sealed virtual void Save();
    public sealed virtual object Peek(string key);
    public sealed virtual void Add(string key, object value);
    public sealed virtual void Clear();
    public sealed virtual bool ContainsKey(string key);
    [NullableContextAttribute("2")]
public bool ContainsValue(object value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, Object& value);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair`2[] array, int index);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair`2<string, object> keyValuePair);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair`2<string, object> keyValuePair);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair`2<string, object> keyValuePair);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory : object {
    private static object Key;
    private ITempDataProvider _provider;
    public TempDataDictionaryFactory(ITempDataProvider provider);
    private static TempDataDictionaryFactory();
    public sealed virtual ITempDataDictionary GetTempData(HttpContext context);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateBuilder : object {
    private IViewEngine _viewEngine;
    private IViewBufferScope _bufferScope;
    private ViewContext _viewContext;
    private ViewDataDictionary _viewData;
    private ModelExplorer _modelExplorer;
    private object _model;
    private ModelMetadata _metadata;
    private string _htmlFieldName;
    private string _templateName;
    private bool _readOnly;
    private object _additionalViewData;
    public TemplateBuilder(IViewEngine viewEngine, IViewBufferScope bufferScope, ViewContext viewContext, ViewDataDictionary viewData, ModelExplorer modelExplorer, string htmlFieldName, string templateName, bool readOnly, object additionalViewData);
    public IHtmlContent Build();
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo : object {
    private HashSet`1<object> _visitedObjects;
    private object _formattedModelValue;
    private string _htmlFieldPrefix;
    public object FormattedModelValue { get; public set; }
    public string HtmlFieldPrefix { get; public set; }
    public int TemplateDepth { get; }
    public TemplateInfo(TemplateInfo original);
    public object get_FormattedModelValue();
    public void set_FormattedModelValue(object value);
    public string get_HtmlFieldPrefix();
    public void set_HtmlFieldPrefix(string value);
    public int get_TemplateDepth();
    public bool AddVisited(object value);
    public string GetFullHtmlFieldName(string partialFieldName);
    public bool Visited(ModelExplorer modelExplorer);
}
internal class Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateRenderer : object {
    private static string DisplayTemplateViewPath;
    private static string EditorTemplateViewPath;
    public static string IEnumerableOfIFormFileName;
    private static Dictionary`2<string, Func`2<IHtmlHelper, IHtmlContent>> _defaultDisplayActions;
    private static Dictionary`2<string, Func`2<IHtmlHelper, IHtmlContent>> _defaultEditorActions;
    private IViewEngine _viewEngine;
    private IViewBufferScope _bufferScope;
    private ViewContext _viewContext;
    private ViewDataDictionary _viewData;
    private string _templateName;
    private bool _readOnly;
    public TemplateRenderer(IViewEngine viewEngine, IViewBufferScope bufferScope, ViewContext viewContext, ViewDataDictionary viewData, string templateName, bool readOnly);
    private static TemplateRenderer();
    public IHtmlContent Render();
    private Dictionary`2<string, Func`2<IHtmlHelper, IHtmlContent>> GetDefaultActions();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateRenderer/<GetViewNames>d__14")]
private IEnumerable`1<string> GetViewNames();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateRenderer/<GetTypeNames>d__15")]
public static IEnumerable`1<string> GetTypeNames(ModelMetadata modelMetadata, Type fieldType);
    private static IHtmlHelper MakeHtmlHelper(ViewContext viewContext, ViewDataDictionary viewData);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.TryGetValueDelegate : MulticastDelegate {
    public TryGetValueDelegate(object object, IntPtr method);
    public virtual bool Invoke(object dictionary, string key, Object& value);
    public virtual IAsyncResult BeginInvoke(object dictionary, string key, Object& value, AsyncCallback callback, object object);
    public virtual bool EndInvoke(Object& value, IAsyncResult result);
}
public static class Microsoft.AspNetCore.Mvc.ViewFeatures.TryGetValueProvider : object {
    private static Dictionary`2<Type, TryGetValueDelegate> _tryGetValueDelegateCache;
    private static ReaderWriterLockSlim _tryGetValueDelegateCacheLock;
    private static MethodInfo _strongTryGetValueImplInfo;
    private static TryGetValueProvider();
    public static TryGetValueDelegate CreateInstance(Type targetType);
    private static bool StrongTryGetValueImpl(object dictionary, string key, Object& value);
    private static bool TryGetValueFromNonGenericDictionary(object dictionary, string key, Object& value);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHelpers : object {
    public static string GetModelErrorMessageOrDefault(ModelError modelError);
    public static string GetModelErrorMessageOrDefault(ModelError modelError, ModelStateEntry containingEntry, ModelExplorer modelExplorer);
    public static IList`1<ModelStateEntry> GetModelStateList(ViewDataDictionary viewData, bool excludePropertyErrors);
    private static void Visit(ModelStateEntry modelStateEntry, ModelMetadata metadata, List`1<ModelStateEntry> orderedModelStateEntries);
}
public abstract class Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHtmlAttributeProvider : object {
    public abstract virtual void AddValidationAttributes(ViewContext viewContext, ModelExplorer modelExplorer, IDictionary`2<string, string> attributes);
    public virtual void AddAndTrackValidationAttributes(ViewContext viewContext, ModelExplorer modelExplorer, string expression, IDictionary`2<string, string> attributes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor : object {
    private HtmlEncoder _htmlEncoder;
    private HtmlHelperOptions _htmlHelperOptions;
    private ILogger`1<ViewComponentResult> _logger;
    private IModelMetadataProvider _modelMetadataProvider;
    private ITempDataDictionaryFactory _tempDataDictionaryFactory;
    private IHttpResponseStreamWriterFactory _writerFactory;
    public ViewComponentResultExecutor(IOptions`1<MvcViewOptions> mvcHelperOptions, ILoggerFactory loggerFactory, HtmlEncoder htmlEncoder, IModelMetadataProvider modelMetadataProvider, ITempDataDictionaryFactory tempDataDictionaryFactory, IHttpResponseStreamWriterFactory writerFactory);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor/<ExecuteAsync>d__7")]
public virtual Task ExecuteAsync(ActionContext context, ViewComponentResult result);
    private static void OnExecuting(ViewContext viewContext);
    private static Task`1<IHtmlContent> GetViewComponentResult(IViewComponentHelper viewComponentHelper, ILogger logger, ViewComponentResult result);
}
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewContextAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary/ViewDataDictionaryDebugView")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary : object {
    private IDictionary`2<string, object> _data;
    private Type _declaredModelType;
    private IModelMetadataProvider _metadataProvider;
    [CompilerGeneratedAttribute]
private ModelStateDictionary <ModelState>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelExplorer <ModelExplorer>k__BackingField;
    [CompilerGeneratedAttribute]
private TemplateInfo <TemplateInfo>k__BackingField;
    [NullableAttribute("2")]
public object Model { get; public set; }
    public ModelStateDictionary ModelState { get; }
    public ModelMetadata ModelMetadata { get; }
    public ModelExplorer ModelExplorer { get; public set; }
    public TemplateInfo TemplateInfo { get; }
    [NullableAttribute("2")]
public object Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<string> Keys { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<object> Values { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IDictionary`2<string, object> Data { get; }
    public ViewDataDictionary(IModelMetadataProvider metadataProvider, ModelStateDictionary modelState);
    public ViewDataDictionary(ViewDataDictionary source);
    internal ViewDataDictionary(IModelMetadataProvider metadataProvider);
    protected ViewDataDictionary(IModelMetadataProvider metadataProvider, Type declaredModelType);
    protected ViewDataDictionary(IModelMetadataProvider metadataProvider, ModelStateDictionary modelState, Type declaredModelType);
    protected ViewDataDictionary(ViewDataDictionary source, Type declaredModelType);
    protected ViewDataDictionary(ViewDataDictionary source, object model, Type declaredModelType);
    private ViewDataDictionary(IModelMetadataProvider metadataProvider, ModelStateDictionary modelState, Type declaredModelType, IDictionary`2<string, object> data, TemplateInfo templateInfo);
    [NullableContextAttribute("2")]
public object get_Model();
    [NullableContextAttribute("2")]
public void set_Model(object value);
    [CompilerGeneratedAttribute]
public ModelStateDictionary get_ModelState();
    public ModelMetadata get_ModelMetadata();
    [CompilerGeneratedAttribute]
public ModelExplorer get_ModelExplorer();
    [CompilerGeneratedAttribute]
public void set_ModelExplorer(ModelExplorer value);
    [CompilerGeneratedAttribute]
public TemplateInfo get_TemplateInfo();
    public sealed virtual object get_Item(string index);
    public sealed virtual void set_Item(string index, object value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<object> get_Values();
    internal IDictionary`2<string, object> get_Data();
    [NullableContextAttribute("2")]
public object Eval(string expression);
    [NullableContextAttribute("2")]
public string Eval(string expression, string format);
    [NullableContextAttribute("2")]
public static string FormatValue(object value, string format);
    [NullableContextAttribute("2")]
internal static string FormatValue(object value, string format, IFormatProvider formatProvider);
    [NullableContextAttribute("2")]
public ViewDataInfo GetViewDataInfo(string expression);
    [NullableContextAttribute("2")]
protected virtual void SetModel(object value);
    private void EnsureCompatible(object value);
    private bool IsCompatibleWithDeclaredType(object value);
    public sealed virtual void Add(string key, object value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, Object& value);
    public sealed virtual void Add(KeyValuePair`2<string, object> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, object> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual bool Remove(KeyValuePair`2<string, object> item);
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1 : ViewDataDictionary {
    public TModel Model { get; public set; }
    public ViewDataDictionary`1(IModelMetadataProvider metadataProvider, ModelStateDictionary modelState);
    public ViewDataDictionary`1(ViewDataDictionary source);
    public ViewDataDictionary`1(ViewDataDictionary source, object model);
    internal ViewDataDictionary`1(IModelMetadataProvider metadataProvider);
    public TModel get_Model();
    public void set_Model(TModel value);
}
[AttributeUsageAttribute("128")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryAttribute : Attribute {
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryControllerPropertyActivator : object {
    private Func`2<Type, PropertyActivator`1[]> _getPropertiesToActivate;
    private IModelMetadataProvider _modelMetadataProvider;
    private ConcurrentDictionary`2<Type, PropertyActivator`1[]> _activateActions;
    private bool _initialized;
    private object _initializeLock;
    public ViewDataDictionaryControllerPropertyActivator(IModelMetadataProvider modelMetadataProvider);
    public sealed virtual void Activate(ControllerContext actionContext, object controller);
    public sealed virtual Action`2<ControllerContext, object> GetActivatorDelegate(ControllerActionDescriptor actionDescriptor);
    private PropertyActivator`1[] GetPropertiesToActivate(Type type);
    private ViewDataDictionary GetViewDataDictionary(ControllerContext context);
    [CompilerGeneratedAttribute]
private PropertyActivator`1<ControllerContext> <GetPropertiesToActivate>b__8_0(PropertyInfo p);
}
internal static class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryFactory : object {
    public static Func`3<IModelMetadataProvider, ModelStateDictionary, ViewDataDictionary> CreateFactory(Type modelType);
    public static Func`2<ViewDataDictionary, ViewDataDictionary> CreateNestedFactory(Type modelType);
}
public static class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator : object {
    public static ViewDataInfo Eval(ViewDataDictionary viewData, string expression);
    public static ViewDataInfo Eval(object indexableObject, string expression);
    private static ViewDataInfo EvalComplexExpression(object indexableObject, string expression);
    private static ViewDataInfo InnerEvalComplexExpression(object indexableObject, string expression);
    private static string GetNextShorterExpression(string expression);
    private static ViewDataInfo GetIndexedPropertyValue(object indexableObject, string key);
    private static ViewDataInfo GetPropertyValue(object container, string propertyName);
}
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo : object {
    private static Func`1<object> _propertyInfoResolver;
    private object _value;
    private Func`1<object> _valueAccessor;
    [CompilerGeneratedAttribute]
private object <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyInfo <PropertyInfo>k__BackingField;
    public object Container { get; }
    public PropertyInfo PropertyInfo { get; }
    public object Value { get; public set; }
    public ViewDataInfo(object container, object value);
    public ViewDataInfo(object container, PropertyInfo propertyInfo);
    public ViewDataInfo(object container, PropertyInfo propertyInfo, Func`1<object> valueAccessor);
    private static ViewDataInfo();
    [CompilerGeneratedAttribute]
public object get_Container();
    [CompilerGeneratedAttribute]
public PropertyInfo get_PropertyInfo();
    public object get_Value();
    public void set_Value(object value);
    private void ResolveValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor : object {
    public static string DefaultContentType;
    [CompilerGeneratedAttribute]
private DiagnosticListener <DiagnosticListener>k__BackingField;
    [CompilerGeneratedAttribute]
private ITempDataDictionaryFactory <TempDataFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private IViewEngine <ViewEngine>k__BackingField;
    [CompilerGeneratedAttribute]
private MvcViewOptions <ViewOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IModelMetadataProvider <ModelMetadataProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpResponseStreamWriterFactory <WriterFactory>k__BackingField;
    protected DiagnosticListener DiagnosticListener { get; }
    [NullableAttribute("2")]
protected ITempDataDictionaryFactory TempDataFactory { get; }
    protected IViewEngine ViewEngine { get; }
    [NullableAttribute("2")]
protected MvcViewOptions ViewOptions { get; }
    [NullableAttribute("2")]
protected IModelMetadataProvider ModelMetadataProvider { get; }
    protected IHttpResponseStreamWriterFactory WriterFactory { get; }
    public ViewExecutor(IOptions`1<MvcViewOptions> viewOptions, IHttpResponseStreamWriterFactory writerFactory, ICompositeViewEngine viewEngine, ITempDataDictionaryFactory tempDataFactory, DiagnosticListener diagnosticListener, IModelMetadataProvider modelMetadataProvider);
    protected ViewExecutor(IHttpResponseStreamWriterFactory writerFactory, ICompositeViewEngine viewEngine, DiagnosticListener diagnosticListener);
    private static ViewExecutor();
    [CompilerGeneratedAttribute]
protected DiagnosticListener get_DiagnosticListener();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected ITempDataDictionaryFactory get_TempDataFactory();
    [CompilerGeneratedAttribute]
protected IViewEngine get_ViewEngine();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected MvcViewOptions get_ViewOptions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected IModelMetadataProvider get_ModelMetadataProvider();
    [CompilerGeneratedAttribute]
protected IHttpResponseStreamWriterFactory get_WriterFactory();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor/<ExecuteAsync>d__21")]
public virtual Task ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, string contentType, Nullable`1<int> statusCode);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor/<ExecuteAsync>d__22")]
protected Task ExecuteAsync(ViewContext viewContext, string contentType, Nullable`1<int> statusCode);
    private static void OnExecuting(ViewContext viewContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor : ViewExecutor {
    private static string ActionNameKey;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    protected ILogger Logger { get; }
    public ViewResultExecutor(IOptions`1<MvcViewOptions> viewOptions, IHttpResponseStreamWriterFactory writerFactory, ICompositeViewEngine viewEngine, ITempDataDictionaryFactory tempDataFactory, DiagnosticListener diagnosticListener, ILoggerFactory loggerFactory, IModelMetadataProvider modelMetadataProvider);
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    public virtual ViewEngineResult FindView(ActionContext actionContext, ViewResult viewResult);
    private void OutputDiagnostics(ActionContext actionContext, ViewResult viewResult, string viewName, ViewEngineResult result);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor/<ExecuteAsync>d__7")]
public sealed virtual Task ExecuteAsync(ActionContext context, ViewResult result);
    private static string GetActionName(ActionContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ViewResult : ActionResult {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewDataDictionary <ViewData>k__BackingField;
    [CompilerGeneratedAttribute]
private ITempDataDictionary <TempData>k__BackingField;
    [CompilerGeneratedAttribute]
private IViewEngine <ViewEngine>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public Nullable`1<int> StatusCode { get; public set; }
    public string ViewName { get; public set; }
    public object Model { get; }
    [NullableAttribute("1")]
public ViewDataDictionary ViewData { get; public set; }
    [NullableAttribute("1")]
public ITempDataDictionary TempData { get; public set; }
    public IViewEngine ViewEngine { get; public set; }
    public string ContentType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ViewName();
    [CompilerGeneratedAttribute]
public void set_ViewName(string value);
    public object get_Model();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ViewDataDictionary get_ViewData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ViewData(ViewDataDictionary value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ITempDataDictionary get_TempData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_TempData(ITempDataDictionary value);
    [CompilerGeneratedAttribute]
public IViewEngine get_ViewEngine();
    [CompilerGeneratedAttribute]
public void set_ViewEngine(IViewEngine value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Mvc.ViewResult/<ExecuteResultAsync>d__26")]
public virtual Task ExecuteResultAsync(ActionContext context);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcBuilderExtensions : object {
    [ExtensionAttribute]
public static IMvcBuilder AddViewOptions(IMvcBuilder builder, Action`1<MvcViewOptions> setupAction);
    [ExtensionAttribute]
public static IMvcBuilder AddViewComponentsAsServices(IMvcBuilder builder);
    [ExtensionAttribute]
public static IMvcBuilder AddSessionStateTempDataProvider(IMvcBuilder builder);
    [ExtensionAttribute]
public static IMvcBuilder AddCookieTempDataProvider(IMvcBuilder builder);
    [ExtensionAttribute]
public static IMvcBuilder AddCookieTempDataProvider(IMvcBuilder builder, Action`1<CookieTempDataProviderOptions> setupAction);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExtensions : object {
    [ExtensionAttribute]
public static IMvcCoreBuilder AddViews(IMvcCoreBuilder builder);
    [ExtensionAttribute]
public static IMvcCoreBuilder AddCookieTempDataProvider(IMvcCoreBuilder builder);
    internal static void AddViewComponentApplicationPartsProviders(ApplicationPartManager manager);
    [ExtensionAttribute]
public static IMvcCoreBuilder AddViews(IMvcCoreBuilder builder, Action`1<MvcViewOptions> setupAction);
    [ExtensionAttribute]
public static IMvcCoreBuilder AddCookieTempDataProvider(IMvcCoreBuilder builder, Action`1<CookieTempDataProviderOptions> setupAction);
    [ExtensionAttribute]
public static IMvcCoreBuilder ConfigureViews(IMvcCoreBuilder builder, Action`1<MvcViewOptions> setupAction);
    internal static void AddViewServices(IServiceCollection services);
}
internal class Microsoft.Extensions.DependencyInjection.MvcViewOptionsSetup : object {
    private IOptions`1<MvcDataAnnotationsLocalizationOptions> _dataAnnotationsLocalizationOptions;
    private IValidationAttributeAdapterProvider _validationAttributeAdapterProvider;
    private IStringLocalizerFactory _stringLocalizerFactory;
    public MvcViewOptionsSetup(IOptions`1<MvcDataAnnotationsLocalizationOptions> dataAnnotationLocalizationOptions, IValidationAttributeAdapterProvider validationAttributeAdapterProvider);
    public MvcViewOptionsSetup(IOptions`1<MvcDataAnnotationsLocalizationOptions> dataAnnotationOptions, IValidationAttributeAdapterProvider validationAttributeAdapterProvider, IStringLocalizerFactory stringLocalizerFactory);
    public sealed virtual void Configure(MvcViewOptions options);
}
internal class Microsoft.Extensions.DependencyInjection.TempDataMvcOptionsSetup : object {
    public sealed virtual void Configure(MvcOptions options);
}
internal class System.Buffers.PooledArrayBufferWriter`1 : object {
    private T[] _rentedBuffer;
    private int _index;
    private static int MinimumBufferSize;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public int WrittenCount { get; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public PooledArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public int get_WrittenCount();
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    private void ClearHelper();
    public sealed virtual void Dispose();
    private void CheckIfDisposed();
    private static void ThrowObjectDisposedException();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException(int capacity);
}
