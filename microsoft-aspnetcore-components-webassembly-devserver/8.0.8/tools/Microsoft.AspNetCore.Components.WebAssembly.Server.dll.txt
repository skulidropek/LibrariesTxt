[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ComponentsWebAssemblyApplicationBuilderExtensions : object {
    private static string s_dotnetModifiableAssemblies;
    private static string s_aspnetcoreBrowserTools;
    private static ComponentsWebAssemblyApplicationBuilderExtensions();
    private static string GetNonEmptyEnvironmentVariableValue(string name);
    [ExtensionAttribute]
public static IApplicationBuilder UseBlazorFrameworkFiles(IApplicationBuilder builder, PathString pathPrefix);
    [ExtensionAttribute]
public static IApplicationBuilder UseBlazorFrameworkFiles(IApplicationBuilder applicationBuilder);
    private static StaticFileOptions CreateStaticFilesOptions(IFileProvider webRootFileProvider);
    private static void AddMapping(FileExtensionContentTypeProvider provider, string name, string mimeType);
}
internal static class Microsoft.AspNetCore.Builder.DebugProxyLauncher : object {
    private static object LaunchLock;
    private static TimeSpan DebugProxyLaunchTimeout;
    private static Task`1<string> LaunchedDebugProxyUrl;
    private static Regex NowListeningRegex;
    private static Regex ApplicationStartedRegex;
    private static Regex NowListeningFirefoxRegex;
    private static String[] MessageSuppressionPrefixes;
    private static DebugProxyLauncher();
    [NullableContextAttribute("1")]
public static Task`1<string> EnsureLaunchedAndGetUrl(IServiceProvider serviceProvider, string devToolsHost, bool isFirefox);
    private static string GetIgnoreProxyForLocalAddress();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Builder.DebugProxyLauncher/<LaunchAndGetUrl>d__9")]
private static Task`1<string> LaunchAndGetUrl(IServiceProvider serviceProvider, string devToolsHost, bool isFirefox);
    private static void RemoveUnwantedEnvironmentVariables(IDictionary`2<string, string> environment);
    private static string LocateDebugProxyExecutable(IWebHostEnvironment environment);
    private static void PassThroughConsoleOutput(Process process);
    private static void CompleteTaskWhenServerIsReady(Process aspNetProcess, bool isFirefox, TaskCompletionSource`1<string> taskCompletionSource);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.WebAssemblyNetDebugProxyAppBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void UseWebAssemblyDebugging(IApplicationBuilder app);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.WebAssemblyRazorComponentsEndpointConventionBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static RazorComponentsEndpointConventionBuilder AddInteractiveWebAssemblyRenderMode(RazorComponentsEndpointConventionBuilder builder, Action`1<WebAssemblyComponentsEndpointOptions> callback);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Builder.WebAssemblyRenderModeWithOptions : InteractiveWebAssemblyRenderMode {
    [CompilerGeneratedAttribute]
private WebAssemblyComponentsEndpointOptions <options>P;
    public WebAssemblyComponentsEndpointOptions EndpointOptions { get; }
    public WebAssemblyRenderModeWithOptions(WebAssemblyComponentsEndpointOptions options);
    public WebAssemblyComponentsEndpointOptions get_EndpointOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.WebAssembly.Server.ContentEncodingNegotiator : object {
    private static StringSegment[] _preferredEncodings;
    private static Dictionary`2<StringSegment, string> _encodingExtensionMap;
    private RequestDelegate _next;
    private IWebHostEnvironment _webHostEnvironment;
    public ContentEncodingNegotiator(RequestDelegate next, IWebHostEnvironment webHostEnvironment);
    private static ContentEncodingNegotiator();
    public Task InvokeAsync(HttpContext context);
    private void NegotiateEncoding(HttpContext context);
    private bool ResourceExists(HttpContext context, string extension);
    [CompilerGeneratedAttribute]
private StringSegment <NegotiateEncoding>g__PickPreferredEncoding|6_0(HttpContext context, StringSegment selectedEncoding, StringWithQualityHeaderValue encoding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.WebAssembly.Server.TargetPickerUi : object {
    private static JsonSerializerOptions JsonOptions;
    private string _browserHost;
    private string _debugProxyUrl;
    public TargetPickerUi(string debugProxyUrl, string devToolsHost);
    private static TargetPickerUi();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebAssembly.Server.TargetPickerUi/<DisplayFirefox>d__4")]
public Task DisplayFirefox(HttpContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebAssembly.Server.TargetPickerUi/<Display>d__5")]
public Task Display(HttpContext context);
    private string GetDevToolsUrlWithProxy(BrowserTab tabToDebug);
    private string GetLaunchChromeInstructions(string targetApplicationUrl);
    private string GetLaunchEdgeInstructions(string targetApplicationUrl);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebAssembly.Server.TargetPickerUi/<GetOpenedBrowserTabs>d__9")]
private Task`1<IEnumerable`1<BrowserTab>> GetOpenedBrowserTabs();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebAssembly.Server.TargetPickerUi/<<DisplayFirefox>g__SendMessageToBrowser|4_0>d")]
[CompilerGeneratedAttribute]
internal static Task <DisplayFirefox>g__SendMessageToBrowser|4_0(NetworkStream toStream, ExpandoObject args, CancellationToken token);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebAssembly.Server.TargetPickerUi/<<DisplayFirefox>g__ReceiveMessageLoop|4_1>d")]
[CompilerGeneratedAttribute]
internal static Task`1<string> <DisplayFirefox>g__ReceiveMessageLoop|4_1(TcpClient browserDebugClientConnect, CancellationToken token);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebAssembly.Server.TargetPickerUi/<<DisplayFirefox>g__EvaluateOnBrowser|4_2>d")]
[CompilerGeneratedAttribute]
internal static Task <DisplayFirefox>g__EvaluateOnBrowser|4_2(NetworkStream toStream, string to, string text, CancellationToken token);
}
public class Microsoft.AspNetCore.Components.WebAssembly.Server.WebAssemblyComponentsEndpointOptions : object {
    [CompilerGeneratedAttribute]
private PathString <PathPrefix>k__BackingField;
    public PathString PathPrefix { get; public set; }
    [CompilerGeneratedAttribute]
public PathString get_PathPrefix();
    [CompilerGeneratedAttribute]
public void set_PathPrefix(PathString value);
}
internal static class Microsoft.AspNetCore.StaticFiles.CacheHeaderSettings : object {
    [NullableContextAttribute("1")]
internal static void SetCacheHeaders(StaticFileResponseContext ctx);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Microsoft.Extensions.CommandLineUtils.DotNetMuxer : object {
    private static string MuxerName;
    [CompilerGeneratedAttribute]
private static string <MuxerPath>k__BackingField;
    public static string MuxerPath { get; }
    private static DotNetMuxer();
    [CompilerGeneratedAttribute]
public static string get_MuxerPath();
    [NullableContextAttribute("1")]
public static string MuxerPathOrDefault();
    internal static string TryFindMuxerPath(string mainModule);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.WebAssemblyRazorComponentsBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IRazorComponentsBuilder AddInteractiveWebAssemblyComponents(IRazorComponentsBuilder builder);
}
