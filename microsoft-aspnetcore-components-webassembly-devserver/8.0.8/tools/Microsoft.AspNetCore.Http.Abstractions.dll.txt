public interface Microsoft.AspNetCore.Antiforgery.IAntiforgeryMetadata {
    public bool RequiresValidation { get; }
    public abstract virtual bool get_RequiresValidation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Builder.EndpointBuilder : object {
    private List`1<Func`3<EndpointFilterFactoryContext, EndpointFilterDelegate, EndpointFilterDelegate>> _filterFactories;
    [CompilerGeneratedAttribute]
private RequestDelegate <RequestDelegate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<object> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ApplicationServices>k__BackingField;
    public IList`1<Func`3<EndpointFilterFactoryContext, EndpointFilterDelegate, EndpointFilterDelegate>> FilterFactories { get; }
    [NullableAttribute("2")]
public RequestDelegate RequestDelegate { get; public set; }
    [NullableAttribute("2")]
public string DisplayName { get; public set; }
    public IList`1<object> Metadata { get; }
    public IServiceProvider ApplicationServices { get; public set; }
    public IList`1<Func`3<EndpointFilterFactoryContext, EndpointFilterDelegate, EndpointFilterDelegate>> get_FilterFactories();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestDelegate get_RequestDelegate();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RequestDelegate(RequestDelegate value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DisplayName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public IList`1<object> get_Metadata();
    [CompilerGeneratedAttribute]
public IServiceProvider get_ApplicationServices();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ApplicationServices(IServiceProvider value);
    public abstract virtual Endpoint Build();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.Extensions.MapMiddleware : object {
    private RequestDelegate _next;
    private MapOptions _options;
    public MapMiddleware(RequestDelegate next, MapOptions options);
    public Task Invoke(HttpContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Builder.Extensions.MapMiddleware/<InvokeCore>d__4")]
private Task InvokeCore(HttpContext context, PathString matchedPath, PathString remainingPath);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.Extensions.MapOptions : object {
    [CompilerGeneratedAttribute]
private PathString <PathMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestDelegate <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveMatchedPathSegment>k__BackingField;
    public PathString PathMatch { get; public set; }
    public RequestDelegate Branch { get; public set; }
    public bool PreserveMatchedPathSegment { get; public set; }
    [CompilerGeneratedAttribute]
public PathString get_PathMatch();
    [CompilerGeneratedAttribute]
public void set_PathMatch(PathString value);
    [CompilerGeneratedAttribute]
public RequestDelegate get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(RequestDelegate value);
    [CompilerGeneratedAttribute]
public bool get_PreserveMatchedPathSegment();
    [CompilerGeneratedAttribute]
public void set_PreserveMatchedPathSegment(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.Extensions.MapWhenMiddleware : object {
    private RequestDelegate _next;
    private MapWhenOptions _options;
    public MapWhenMiddleware(RequestDelegate next, MapWhenOptions options);
    public Task Invoke(HttpContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.Extensions.MapWhenOptions : object {
    private Func`2<HttpContext, bool> _predicate;
    [CompilerGeneratedAttribute]
private RequestDelegate <Branch>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpContext, bool> Predicate { get; public set; }
    public RequestDelegate Branch { get; public set; }
    public Func`2<HttpContext, bool> get_Predicate();
    public void set_Predicate(Func`2<HttpContext, bool> value);
    [CompilerGeneratedAttribute]
public RequestDelegate get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(RequestDelegate value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.Extensions.UsePathBaseMiddleware : object {
    private RequestDelegate _next;
    private PathString _pathBase;
    public UsePathBaseMiddleware(RequestDelegate next, PathString pathBase);
    public Task Invoke(HttpContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Builder.Extensions.UsePathBaseMiddleware/<InvokeCore>d__4")]
private Task InvokeCore(HttpContext context, PathString matchedPath, PathString remainingPath);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Builder.IApplicationBuilder {
    public IServiceProvider ApplicationServices { get; public set; }
    public IFeatureCollection ServerFeatures { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Properties { get; }
    public abstract virtual IServiceProvider get_ApplicationServices();
    public abstract virtual void set_ApplicationServices(IServiceProvider value);
    public abstract virtual IFeatureCollection get_ServerFeatures();
    public abstract virtual IDictionary`2<string, object> get_Properties();
    public abstract virtual IApplicationBuilder Use(Func`2<RequestDelegate, RequestDelegate> middleware);
    public abstract virtual IApplicationBuilder New();
    public abstract virtual RequestDelegate Build();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Builder.IEndpointConventionBuilder {
    public abstract virtual void Add(Action`1<EndpointBuilder> convention);
    public virtual void Finally(Action`1<EndpointBuilder> finallyConvention);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.MapExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder Map(IApplicationBuilder app, string pathMatch, Action`1<IApplicationBuilder> configuration);
    [ExtensionAttribute]
public static IApplicationBuilder Map(IApplicationBuilder app, PathString pathMatch, Action`1<IApplicationBuilder> configuration);
    [ExtensionAttribute]
public static IApplicationBuilder Map(IApplicationBuilder app, PathString pathMatch, bool preserveMatchedPathSegment, Action`1<IApplicationBuilder> configuration);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.MapWhenExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IApplicationBuilder MapWhen(IApplicationBuilder app, Func`2<HttpContext, bool> predicate, Action`1<IApplicationBuilder> configuration);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.RunExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void Run(IApplicationBuilder app, RequestDelegate handler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.UseExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder Use(IApplicationBuilder app, Func`3<HttpContext, Func`1<Task>, Task> middleware);
    [ExtensionAttribute]
public static IApplicationBuilder Use(IApplicationBuilder app, Func`3<HttpContext, RequestDelegate, Task> middleware);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.UseMiddlewareExtensions : object {
    internal static string InvokeMethodName;
    internal static string InvokeAsyncMethodName;
    private static MethodInfo GetServiceInfo;
    private static DynamicallyAccessedMemberTypes MiddlewareAccessibility;
    private static UseMiddlewareExtensions();
    [ExtensionAttribute]
public static IApplicationBuilder UseMiddleware(IApplicationBuilder app, Object[] args);
    [ExtensionAttribute]
public static IApplicationBuilder UseMiddleware(IApplicationBuilder app, Type middleware, Object[] args);
    private static Func`4<T, HttpContext, IServiceProvider, Task> ReflectionFallback(MethodInfo methodInfo, ParameterInfo[] parameters);
    private static Func`4<T, HttpContext, IServiceProvider, Task> CompileExpression(MethodInfo methodInfo, ParameterInfo[] parameters);
    private static object GetService(IServiceProvider sp, Type type, Type middleware);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.UsePathBaseExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IApplicationBuilder UsePathBase(IApplicationBuilder app, PathString pathBase);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.UseWhenExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IApplicationBuilder UseWhen(IApplicationBuilder app, Func`2<HttpContext, bool> predicate, Action`1<IApplicationBuilder> configuration);
}
public interface Microsoft.AspNetCore.Cors.Infrastructure.ICorsMetadata {
}
internal static class Microsoft.AspNetCore.Http.Abstractions.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string Exception_UseMiddlewareIServiceProviderNotAvailable { get; }
    internal static string Exception_UseMiddlewareNoInvokeMethod { get; }
    internal static string Exception_UseMiddlewareNonTaskReturnType { get; }
    internal static string Exception_UseMiddlewareNoParameters { get; }
    internal static string Exception_UseMiddleMutlipleInvokes { get; }
    internal static string Exception_PathMustStartWithSlash { get; }
    internal static string Exception_InvokeMiddlewareNoService { get; }
    internal static string Exception_InvokeDoesNotSupportRefOrOutParams { get; }
    internal static string Exception_PortMustBeGreaterThanZero { get; }
    internal static string Exception_UseMiddlewareNoMiddlewareFactory { get; }
    internal static string Exception_UseMiddlewareUnableToCreateMiddleware { get; }
    internal static string Exception_UseMiddlewareExplicitArgumentsNotSupported { get; }
    internal static string ArgumentCannotBeNullOrEmpty { get; }
    internal static string RouteValueDictionary_DuplicateKey { get; }
    internal static string RouteValueDictionary_DuplicatePropertyName { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_Exception_UseMiddlewareIServiceProviderNotAvailable();
    internal static string FormatException_UseMiddlewareIServiceProviderNotAvailable(object p0);
    internal static string get_Exception_UseMiddlewareNoInvokeMethod();
    internal static string FormatException_UseMiddlewareNoInvokeMethod(object p0, object p1, object p2);
    internal static string get_Exception_UseMiddlewareNonTaskReturnType();
    internal static string FormatException_UseMiddlewareNonTaskReturnType(object p0, object p1, object p2);
    internal static string get_Exception_UseMiddlewareNoParameters();
    internal static string FormatException_UseMiddlewareNoParameters(object p0, object p1, object p2);
    internal static string get_Exception_UseMiddleMutlipleInvokes();
    internal static string FormatException_UseMiddleMutlipleInvokes(object p0, object p1);
    internal static string get_Exception_PathMustStartWithSlash();
    internal static string FormatException_PathMustStartWithSlash(object p0);
    internal static string get_Exception_InvokeMiddlewareNoService();
    internal static string FormatException_InvokeMiddlewareNoService(object p0, object p1);
    internal static string get_Exception_InvokeDoesNotSupportRefOrOutParams();
    internal static string FormatException_InvokeDoesNotSupportRefOrOutParams(object p0);
    internal static string get_Exception_PortMustBeGreaterThanZero();
    internal static string get_Exception_UseMiddlewareNoMiddlewareFactory();
    internal static string FormatException_UseMiddlewareNoMiddlewareFactory(object p0);
    internal static string get_Exception_UseMiddlewareUnableToCreateMiddleware();
    internal static string FormatException_UseMiddlewareUnableToCreateMiddleware(object p0, object p1);
    internal static string get_Exception_UseMiddlewareExplicitArgumentsNotSupported();
    internal static string FormatException_UseMiddlewareExplicitArgumentsNotSupported(object p0);
    internal static string get_ArgumentCannotBeNullOrEmpty();
    internal static string get_RouteValueDictionary_DuplicateKey();
    internal static string FormatRouteValueDictionary_DuplicateKey(object p0, object p1);
    internal static string get_RouteValueDictionary_DuplicatePropertyName();
    internal static string FormatRouteValueDictionary_DuplicatePropertyName(object p0, object p1, object p2, object p3);
}
[AttributeUsageAttribute("2048")]
public class Microsoft.AspNetCore.Http.AsParametersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.BadHttpRequestException : IOException {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    public int StatusCode { get; }
    public BadHttpRequestException(string message, int statusCode);
    public BadHttpRequestException(string message);
    public BadHttpRequestException(string message, int statusCode, Exception innerException);
    public BadHttpRequestException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Http.ConnectionInfo/ConnectionInfoDebugView")]
public abstract class Microsoft.AspNetCore.Http.ConnectionInfo : object {
    [NullableAttribute("1")]
public string Id { get; public set; }
    public IPAddress RemoteIpAddress { get; public set; }
    public int RemotePort { get; public set; }
    public IPAddress LocalIpAddress { get; public set; }
    public int LocalPort { get; public set; }
    public X509Certificate2 ClientCertificate { get; public set; }
    [NullableContextAttribute("1")]
public abstract virtual string get_Id();
    [NullableContextAttribute("1")]
public abstract virtual void set_Id(string value);
    public abstract virtual IPAddress get_RemoteIpAddress();
    public abstract virtual void set_RemoteIpAddress(IPAddress value);
    public abstract virtual int get_RemotePort();
    public abstract virtual void set_RemotePort(int value);
    public abstract virtual IPAddress get_LocalIpAddress();
    public abstract virtual void set_LocalIpAddress(IPAddress value);
    public abstract virtual int get_LocalPort();
    public abstract virtual void set_LocalPort(int value);
    public abstract virtual X509Certificate2 get_ClientCertificate();
    public abstract virtual void set_ClientCertificate(X509Certificate2 value);
    public abstract virtual Task`1<X509Certificate2> GetClientCertificateAsync(CancellationToken cancellationToken);
    public virtual void RequestClose();
    private string DebuggerToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.CookieBuilder : object {
    private string _name;
    private List`1<string> _extensions;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private SameSiteMode <SameSite>k__BackingField;
    [CompilerGeneratedAttribute]
private CookieSecurePolicy <SecurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEssential>k__BackingField;
    public string Name { get; public set; }
    public string Path { get; public set; }
    public string Domain { get; public set; }
    public bool HttpOnly { get; public set; }
    public SameSiteMode SameSite { get; public set; }
    public CookieSecurePolicy SecurePolicy { get; public set; }
    public Nullable`1<TimeSpan> Expiration { get; public set; }
    public Nullable`1<TimeSpan> MaxAge { get; public set; }
    public bool IsEssential { get; public set; }
    [NullableAttribute("1")]
public IList`1<string> Extensions { get; }
    public virtual string get_Name();
    public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Path();
    [CompilerGeneratedAttribute]
public virtual void set_Path(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Domain();
    [CompilerGeneratedAttribute]
public virtual void set_Domain(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_HttpOnly();
    [CompilerGeneratedAttribute]
public virtual void set_HttpOnly(bool value);
    [CompilerGeneratedAttribute]
public virtual SameSiteMode get_SameSite();
    [CompilerGeneratedAttribute]
public virtual void set_SameSite(SameSiteMode value);
    [CompilerGeneratedAttribute]
public virtual CookieSecurePolicy get_SecurePolicy();
    [CompilerGeneratedAttribute]
public virtual void set_SecurePolicy(CookieSecurePolicy value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<TimeSpan> get_Expiration();
    [CompilerGeneratedAttribute]
public virtual void set_Expiration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<TimeSpan> get_MaxAge();
    [CompilerGeneratedAttribute]
public virtual void set_MaxAge(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsEssential();
    [CompilerGeneratedAttribute]
public virtual void set_IsEssential(bool value);
    [NullableContextAttribute("1")]
public IList`1<string> get_Extensions();
    [NullableContextAttribute("1")]
public CookieOptions Build(HttpContext context);
    [NullableContextAttribute("1")]
public virtual CookieOptions Build(HttpContext context, DateTimeOffset expiresFrom);
}
public enum Microsoft.AspNetCore.Http.CookieSecurePolicy : Enum {
    public int value__;
    public static CookieSecurePolicy SameAsRequest;
    public static CookieSecurePolicy Always;
    public static CookieSecurePolicy None;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.DefaultEndpointFilterInvocationContext : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<object> <Arguments>k__BackingField;
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public DefaultEndpointFilterInvocationContext(HttpContext httpContext, Object[] arguments);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public virtual IList`1<object> get_Arguments();
    public virtual T GetArgument(int index);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{ToString(),nq}")]
public class Microsoft.AspNetCore.Http.Endpoint : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointMetadataCollection <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestDelegate <RequestDelegate>k__BackingField;
    public string DisplayName { get; }
    [NullableAttribute("1")]
public EndpointMetadataCollection Metadata { get; }
    public RequestDelegate RequestDelegate { get; }
    public Endpoint(RequestDelegate requestDelegate, EndpointMetadataCollection metadata, string displayName);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public EndpointMetadataCollection get_Metadata();
    [CompilerGeneratedAttribute]
public RequestDelegate get_RequestDelegate();
    public virtual string ToString();
}
public class Microsoft.AspNetCore.Http.EndpointFilterDelegate : MulticastDelegate {
    public EndpointFilterDelegate(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ValueTask`1<object> Invoke(EndpointFilterInvocationContext context);
    public virtual IAsyncResult BeginInvoke(EndpointFilterInvocationContext context, AsyncCallback callback, object object);
    public virtual ValueTask`1<object> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Http.EndpointFilterFactoryContext : object {
    [CompilerGeneratedAttribute]
private MethodInfo <MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ApplicationServices>k__BackingField;
    [RequiredMemberAttribute]
public MethodInfo MethodInfo { get; public set; }
    public IServiceProvider ApplicationServices { get; public set; }
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MethodInfo(MethodInfo value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ApplicationServices();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ApplicationServices(IServiceProvider value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext : object {
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public abstract virtual HttpContext get_HttpContext();
    public abstract virtual IList`1<object> get_Arguments();
    public abstract virtual T GetArgument(int index);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T arg);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T1 arg1, T2 arg2);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);
    public static EndpointFilterInvocationContext Create(HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`1 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    public object Item { get; public set; }
    [NullableAttribute("1")]
public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    [NullableAttribute("1")]
public T0 Arg0 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    [NullableContextAttribute("1")]
internal EndpointFilterInvocationContext`1(HttpContext httpContext, T0 arg0);
    public sealed virtual object get_Item(int index);
    public sealed virtual void set_Item(int index, object value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public T0 get_Arg0();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`1/<GetEnumerator>d__23")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    [NullableContextAttribute("1")]
public virtual T GetArgument(int index);
    public sealed virtual int IndexOf(object item);
    public sealed virtual void Insert(int index, object item);
    public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`10 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]
private T3 <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]
private T4 <Arg4>k__BackingField;
    [CompilerGeneratedAttribute]
private T5 <Arg5>k__BackingField;
    [CompilerGeneratedAttribute]
private T6 <Arg6>k__BackingField;
    [CompilerGeneratedAttribute]
private T7 <Arg7>k__BackingField;
    [CompilerGeneratedAttribute]
private T8 <Arg8>k__BackingField;
    [CompilerGeneratedAttribute]
private T9 <Arg9>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public T3 Arg3 { get; public set; }
    public T4 Arg4 { get; public set; }
    public T5 Arg5 { get; public set; }
    public T6 Arg6 { get; public set; }
    public T7 Arg7 { get; public set; }
    public T8 Arg8 { get; public set; }
    public T9 Arg9 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`10(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    [CompilerGeneratedAttribute]
public T3 get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(T3 value);
    [CompilerGeneratedAttribute]
public T4 get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(T4 value);
    [CompilerGeneratedAttribute]
public T5 get_Arg5();
    [CompilerGeneratedAttribute]
public void set_Arg5(T5 value);
    [CompilerGeneratedAttribute]
public T6 get_Arg6();
    [CompilerGeneratedAttribute]
public void set_Arg6(T6 value);
    [CompilerGeneratedAttribute]
public T7 get_Arg7();
    [CompilerGeneratedAttribute]
public void set_Arg7(T7 value);
    [CompilerGeneratedAttribute]
public T8 get_Arg8();
    [CompilerGeneratedAttribute]
public void set_Arg8(T8 value);
    [CompilerGeneratedAttribute]
public T9 get_Arg9();
    [CompilerGeneratedAttribute]
public void set_Arg9(T9 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`10/<GetEnumerator>d__59")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`2 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`2(HttpContext httpContext, T0 arg0, T1 arg1);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`2/<GetEnumerator>d__27")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`3 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`3(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`3/<GetEnumerator>d__31")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`4 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]
private T3 <Arg3>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public T3 Arg3 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`4(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2, T3 arg3);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    [CompilerGeneratedAttribute]
public T3 get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(T3 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`4/<GetEnumerator>d__35")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`5 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]
private T3 <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]
private T4 <Arg4>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public T3 Arg3 { get; public set; }
    public T4 Arg4 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`5(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    [CompilerGeneratedAttribute]
public T3 get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(T3 value);
    [CompilerGeneratedAttribute]
public T4 get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(T4 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`5/<GetEnumerator>d__39")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`6 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]
private T3 <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]
private T4 <Arg4>k__BackingField;
    [CompilerGeneratedAttribute]
private T5 <Arg5>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public T3 Arg3 { get; public set; }
    public T4 Arg4 { get; public set; }
    public T5 Arg5 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`6(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    [CompilerGeneratedAttribute]
public T3 get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(T3 value);
    [CompilerGeneratedAttribute]
public T4 get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(T4 value);
    [CompilerGeneratedAttribute]
public T5 get_Arg5();
    [CompilerGeneratedAttribute]
public void set_Arg5(T5 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`6/<GetEnumerator>d__43")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`7 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]
private T3 <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]
private T4 <Arg4>k__BackingField;
    [CompilerGeneratedAttribute]
private T5 <Arg5>k__BackingField;
    [CompilerGeneratedAttribute]
private T6 <Arg6>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public T3 Arg3 { get; public set; }
    public T4 Arg4 { get; public set; }
    public T5 Arg5 { get; public set; }
    public T6 Arg6 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`7(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    [CompilerGeneratedAttribute]
public T3 get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(T3 value);
    [CompilerGeneratedAttribute]
public T4 get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(T4 value);
    [CompilerGeneratedAttribute]
public T5 get_Arg5();
    [CompilerGeneratedAttribute]
public void set_Arg5(T5 value);
    [CompilerGeneratedAttribute]
public T6 get_Arg6();
    [CompilerGeneratedAttribute]
public void set_Arg6(T6 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`7/<GetEnumerator>d__47")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`8 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]
private T3 <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]
private T4 <Arg4>k__BackingField;
    [CompilerGeneratedAttribute]
private T5 <Arg5>k__BackingField;
    [CompilerGeneratedAttribute]
private T6 <Arg6>k__BackingField;
    [CompilerGeneratedAttribute]
private T7 <Arg7>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public T3 Arg3 { get; public set; }
    public T4 Arg4 { get; public set; }
    public T5 Arg5 { get; public set; }
    public T6 Arg6 { get; public set; }
    public T7 Arg7 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`8(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    [CompilerGeneratedAttribute]
public T3 get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(T3 value);
    [CompilerGeneratedAttribute]
public T4 get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(T4 value);
    [CompilerGeneratedAttribute]
public T5 get_Arg5();
    [CompilerGeneratedAttribute]
public void set_Arg5(T5 value);
    [CompilerGeneratedAttribute]
public T6 get_Arg6();
    [CompilerGeneratedAttribute]
public void set_Arg6(T6 value);
    [CompilerGeneratedAttribute]
public T7 get_Arg7();
    [CompilerGeneratedAttribute]
public void set_Arg7(T7 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`8/<GetEnumerator>d__51")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("TextTemplatingFileGenerator", "")]
internal class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`9 : EndpointFilterInvocationContext {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private T0 <Arg0>k__BackingField;
    [CompilerGeneratedAttribute]
private T1 <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]
private T2 <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]
private T3 <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]
private T4 <Arg4>k__BackingField;
    [CompilerGeneratedAttribute]
private T5 <Arg5>k__BackingField;
    [CompilerGeneratedAttribute]
private T6 <Arg6>k__BackingField;
    [CompilerGeneratedAttribute]
private T7 <Arg7>k__BackingField;
    [CompilerGeneratedAttribute]
private T8 <Arg8>k__BackingField;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public HttpContext HttpContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<object> Arguments { get; }
    public T0 Arg0 { get; public set; }
    public T1 Arg1 { get; public set; }
    public T2 Arg2 { get; public set; }
    public T3 Arg3 { get; public set; }
    public T4 Arg4 { get; public set; }
    public T5 Arg5 { get; public set; }
    public T6 Arg6 { get; public set; }
    public T7 Arg7 { get; public set; }
    public T8 Arg8 { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    internal EndpointFilterInvocationContext`9(HttpContext httpContext, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);
    [NullableContextAttribute("2")]
public sealed virtual object get_Item(int index);
    [NullableContextAttribute("2")]
public sealed virtual void set_Item(int index, object value);
    [CompilerGeneratedAttribute]
public virtual HttpContext get_HttpContext();
    public virtual IList`1<object> get_Arguments();
    [CompilerGeneratedAttribute]
public T0 get_Arg0();
    [CompilerGeneratedAttribute]
public void set_Arg0(T0 value);
    [CompilerGeneratedAttribute]
public T1 get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(T1 value);
    [CompilerGeneratedAttribute]
public T2 get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(T2 value);
    [CompilerGeneratedAttribute]
public T3 get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(T3 value);
    [CompilerGeneratedAttribute]
public T4 get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(T4 value);
    [CompilerGeneratedAttribute]
public T5 get_Arg5();
    [CompilerGeneratedAttribute]
public void set_Arg5(T5 value);
    [CompilerGeneratedAttribute]
public T6 get_Arg6();
    [CompilerGeneratedAttribute]
public void set_Arg6(T6 value);
    [CompilerGeneratedAttribute]
public T7 get_Arg7();
    [CompilerGeneratedAttribute]
public void set_Arg7(T7 value);
    [CompilerGeneratedAttribute]
public T8 get_Arg8();
    [CompilerGeneratedAttribute]
public void set_Arg8(T8 value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public bool get_IsFixedSize();
    [NullableContextAttribute("2")]
public sealed virtual void Add(object item);
    public sealed virtual void Clear();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains(object item);
    public sealed virtual void CopyTo(Object[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.EndpointFilterInvocationContext`9/<GetEnumerator>d__55")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    public virtual T GetArgument(int index);
    [NullableContextAttribute("2")]
public sealed virtual int IndexOf(object item);
    [NullableContextAttribute("2")]
public sealed virtual void Insert(int index, object item);
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(object item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.EndpointHttpContextExtensions : object {
    [ExtensionAttribute]
public static Endpoint GetEndpoint(HttpContext context);
    [ExtensionAttribute]
public static void SetEndpoint(HttpContext context, Endpoint endpoint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Http.EndpointMetadataCollection/EndpointMetadataCollectionDebugView")]
[DebuggerDisplayAttribute("Count = {Count}")]
public class Microsoft.AspNetCore.Http.EndpointMetadataCollection : object {
    public static EndpointMetadataCollection Empty;
    private Object[] _items;
    private ConcurrentDictionary`2<Type, Object[]> _cache;
    public object Item { get; }
    public int Count { get; }
    public EndpointMetadataCollection(IEnumerable`1<object> items);
    public EndpointMetadataCollection(Object[] items);
    private static EndpointMetadataCollection();
    public sealed virtual object get_Item(int index);
    public sealed virtual int get_Count();
    public T GetMetadata();
    private T GetMetadataSlow();
    public IReadOnlyList`1<T> GetOrderedMetadata();
    private T[] GetOrderedMetadataSlow();
    public T GetRequiredMetadata();
    public Enumerator GetEnumerator();
    private sealed virtual override IEnumerator`1<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.Features.IEndpointFeature {
    public Endpoint Endpoint { get; public set; }
    public abstract virtual Endpoint get_Endpoint();
    public abstract virtual void set_Endpoint(Endpoint value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Features.IRouteValuesFeature {
    public RouteValueDictionary RouteValues { get; public set; }
    public abstract virtual RouteValueDictionary get_RouteValues();
    public abstract virtual void set_RouteValues(RouteValueDictionary value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
public class Microsoft.AspNetCore.Http.FragmentString : ValueType {
    public static FragmentString Empty;
    private string _value;
    public string Value { get; }
    public bool HasValue { get; }
    public FragmentString(string value);
    private static FragmentString();
    public string get_Value();
    public bool get_HasValue();
    public virtual string ToString();
    public string ToUriComponent();
    public static FragmentString FromUriComponent(string uriComponent);
    public static FragmentString FromUriComponent(Uri uri);
    public sealed virtual bool Equals(FragmentString other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(FragmentString left, FragmentString right);
    public static bool op_Inequality(FragmentString left, FragmentString right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.HeaderDictionaryExtensions : object {
    [ExtensionAttribute]
public static void Append(IHeaderDictionary headers, string key, StringValues value);
    [ExtensionAttribute]
public static void AppendCommaSeparatedValues(IHeaderDictionary headers, string key, String[] values);
    [ExtensionAttribute]
public static String[] GetCommaSeparatedValues(IHeaderDictionary headers, string key);
    [ExtensionAttribute]
public static void SetCommaSeparatedValues(IHeaderDictionary headers, string key, String[] values);
}
[IsReadOnlyAttribute]
internal class Microsoft.AspNetCore.Http.HeaderSegment : ValueType {
    private StringSegment _formatting;
    private StringSegment _data;
    public StringSegment Formatting { get; }
    public StringSegment Data { get; }
    public HeaderSegment(StringSegment formatting, StringSegment data);
    public StringSegment get_Formatting();
    public StringSegment get_Data();
    public sealed virtual bool Equals(HeaderSegment other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HeaderSegment left, HeaderSegment right);
    public static bool op_Inequality(HeaderSegment left, HeaderSegment right);
}
[IsReadOnlyAttribute]
internal class Microsoft.AspNetCore.Http.HeaderSegmentCollection : ValueType {
    private StringValues _headers;
    public HeaderSegmentCollection(StringValues headers);
    public sealed virtual bool Equals(HeaderSegmentCollection other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HeaderSegmentCollection left, HeaderSegmentCollection right);
    public static bool op_Inequality(HeaderSegmentCollection left, HeaderSegmentCollection right);
    public Enumerator GetEnumerator();
    private sealed virtual override IEnumerator`1<HeaderSegment> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Http.HeaderSegment>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
public class Microsoft.AspNetCore.Http.HostString : ValueType {
    private static SearchValues`1<char> s_safeHostStringChars;
    private static IdnMapping s_idnMapping;
    private string _value;
    public string Value { get; }
    public bool HasValue { get; }
    public string Host { get; }
    public Nullable`1<int> Port { get; }
    public HostString(string value);
    public HostString(string host, int port);
    private static HostString();
    public string get_Value();
    public bool get_HasValue();
    public string get_Host();
    public Nullable`1<int> get_Port();
    public virtual string ToString();
    public string ToUriComponent();
    public static HostString FromUriComponent(string uriComponent);
    public static HostString FromUriComponent(Uri uri);
    public static bool MatchesAny(StringSegment value, IList`1<StringSegment> patterns);
    public sealed virtual bool Equals(HostString other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HostString left, HostString right);
    public static bool op_Inequality(HostString left, HostString right);
    private static void GetParts(StringSegment value, StringSegment& host, StringSegment& port);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Http.HttpContext/HttpContextDebugView")]
public abstract class Microsoft.AspNetCore.Http.HttpContext : object {
    public IFeatureCollection Features { get; }
    public HttpRequest Request { get; }
    public HttpResponse Response { get; }
    public ConnectionInfo Connection { get; }
    public WebSocketManager WebSockets { get; }
    public ClaimsPrincipal User { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<object, object> Items { get; public set; }
    public IServiceProvider RequestServices { get; public set; }
    public CancellationToken RequestAborted { get; public set; }
    public string TraceIdentifier { get; public set; }
    public ISession Session { get; public set; }
    public abstract virtual IFeatureCollection get_Features();
    public abstract virtual HttpRequest get_Request();
    public abstract virtual HttpResponse get_Response();
    public abstract virtual ConnectionInfo get_Connection();
    public abstract virtual WebSocketManager get_WebSockets();
    public abstract virtual ClaimsPrincipal get_User();
    public abstract virtual void set_User(ClaimsPrincipal value);
    public abstract virtual IDictionary`2<object, object> get_Items();
    public abstract virtual void set_Items(IDictionary`2<object, object> value);
    public abstract virtual IServiceProvider get_RequestServices();
    public abstract virtual void set_RequestServices(IServiceProvider value);
    public abstract virtual CancellationToken get_RequestAborted();
    public abstract virtual void set_RequestAborted(CancellationToken value);
    public abstract virtual string get_TraceIdentifier();
    public abstract virtual void set_TraceIdentifier(string value);
    public abstract virtual ISession get_Session();
    public abstract virtual void set_Session(ISession value);
    public abstract virtual void Abort();
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.Http.HttpMethods : object {
    public static string Connect;
    public static string Delete;
    public static string Get;
    public static string Head;
    public static string Options;
    public static string Patch;
    public static string Post;
    public static string Put;
    public static string Trace;
    private static HttpMethods();
    public static bool IsConnect(string method);
    public static bool IsDelete(string method);
    public static bool IsGet(string method);
    public static bool IsHead(string method);
    public static bool IsOptions(string method);
    public static bool IsPatch(string method);
    public static bool IsPost(string method);
    public static bool IsPut(string method);
    public static bool IsTrace(string method);
    public static string GetCanonicalizedValue(string method);
    public static bool Equals(string methodA, string methodB);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.AspNetCore.Http.HttpProtocol : object {
    public static string Http09;
    public static string Http10;
    public static string Http11;
    public static string Http2;
    public static string Http3;
    private static HttpProtocol();
    public static bool IsHttp09(string protocol);
    public static bool IsHttp10(string protocol);
    public static bool IsHttp11(string protocol);
    public static bool IsHttp2(string protocol);
    public static bool IsHttp3(string protocol);
    public static string GetHttpProtocol(Version version);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Http.HttpRequest/HttpRequestDebugView")]
public abstract class Microsoft.AspNetCore.Http.HttpRequest : object {
    [CompilerGeneratedAttribute]
private RouteValueDictionary <RouteValues>k__BackingField;
    public HttpContext HttpContext { get; }
    public string Method { get; public set; }
    public string Scheme { get; public set; }
    public bool IsHttps { get; public set; }
    public HostString Host { get; public set; }
    public PathString PathBase { get; public set; }
    public PathString Path { get; public set; }
    public QueryString QueryString { get; public set; }
    public IQueryCollection Query { get; public set; }
    public string Protocol { get; public set; }
    public IHeaderDictionary Headers { get; }
    public IRequestCookieCollection Cookies { get; public set; }
    public Nullable`1<long> ContentLength { get; public set; }
    [NullableAttribute("2")]
public string ContentType { get; public set; }
    public Stream Body { get; public set; }
    public PipeReader BodyReader { get; }
    public bool HasFormContentType { get; }
    public IFormCollection Form { get; public set; }
    public RouteValueDictionary RouteValues { get; public set; }
    public abstract virtual HttpContext get_HttpContext();
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string get_Scheme();
    public abstract virtual void set_Scheme(string value);
    public abstract virtual bool get_IsHttps();
    public abstract virtual void set_IsHttps(bool value);
    public abstract virtual HostString get_Host();
    public abstract virtual void set_Host(HostString value);
    public abstract virtual PathString get_PathBase();
    public abstract virtual void set_PathBase(PathString value);
    public abstract virtual PathString get_Path();
    public abstract virtual void set_Path(PathString value);
    public abstract virtual QueryString get_QueryString();
    public abstract virtual void set_QueryString(QueryString value);
    public abstract virtual IQueryCollection get_Query();
    public abstract virtual void set_Query(IQueryCollection value);
    public abstract virtual string get_Protocol();
    public abstract virtual void set_Protocol(string value);
    public abstract virtual IHeaderDictionary get_Headers();
    public abstract virtual IRequestCookieCollection get_Cookies();
    public abstract virtual void set_Cookies(IRequestCookieCollection value);
    public abstract virtual Nullable`1<long> get_ContentLength();
    public abstract virtual void set_ContentLength(Nullable`1<long> value);
    [NullableContextAttribute("2")]
public abstract virtual string get_ContentType();
    [NullableContextAttribute("2")]
public abstract virtual void set_ContentType(string value);
    public abstract virtual Stream get_Body();
    public abstract virtual void set_Body(Stream value);
    public virtual PipeReader get_BodyReader();
    public abstract virtual bool get_HasFormContentType();
    public abstract virtual IFormCollection get_Form();
    public abstract virtual void set_Form(IFormCollection value);
    public abstract virtual Task`1<IFormCollection> ReadFormAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public virtual RouteValueDictionary get_RouteValues();
    [CompilerGeneratedAttribute]
public virtual void set_RouteValues(RouteValueDictionary value);
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Http.HttpResponse/HttpResponseDebugView")]
public abstract class Microsoft.AspNetCore.Http.HttpResponse : object {
    private static Func`2<object, Task> _callbackDelegate;
    private static Func`2<object, Task> _disposeDelegate;
    public HttpContext HttpContext { get; }
    public int StatusCode { get; public set; }
    public IHeaderDictionary Headers { get; }
    public Stream Body { get; public set; }
    public PipeWriter BodyWriter { get; }
    public Nullable`1<long> ContentLength { get; public set; }
    [NullableAttribute("2")]
public string ContentType { get; public set; }
    public IResponseCookies Cookies { get; }
    public bool HasStarted { get; }
    private static HttpResponse();
    public abstract virtual HttpContext get_HttpContext();
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int value);
    public abstract virtual IHeaderDictionary get_Headers();
    public abstract virtual Stream get_Body();
    public abstract virtual void set_Body(Stream value);
    public virtual PipeWriter get_BodyWriter();
    public abstract virtual Nullable`1<long> get_ContentLength();
    public abstract virtual void set_ContentLength(Nullable`1<long> value);
    [NullableContextAttribute("2")]
public abstract virtual string get_ContentType();
    [NullableContextAttribute("2")]
public abstract virtual void set_ContentType(string value);
    public abstract virtual IResponseCookies get_Cookies();
    public abstract virtual bool get_HasStarted();
    public abstract virtual void OnStarting(Func`2<object, Task> callback, object state);
    public virtual void OnStarting(Func`1<Task> callback);
    public abstract virtual void OnCompleted(Func`2<object, Task> callback, object state);
    public virtual void RegisterForDispose(IDisposable disposable);
    public virtual void RegisterForDisposeAsync(IAsyncDisposable disposable);
    public virtual void OnCompleted(Func`1<Task> callback);
    public virtual void Redirect(string location);
    public abstract virtual void Redirect(string location, bool permanent);
    public virtual Task StartAsync(CancellationToken cancellationToken);
    public virtual Task CompleteAsync();
    internal string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.HttpResponseWritingExtensions : object {
    private static int UTF8MaxByteLength;
    [ExtensionAttribute]
public static Task WriteAsync(HttpResponse response, string text, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task WriteAsync(HttpResponse response, string text, Encoding encoding, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.HttpResponseWritingExtensions/<StartAndWriteAsyncAwaited>d__3")]
[ExtensionAttribute]
private static Task StartAndWriteAsyncAwaited(HttpResponse response, string text, Encoding encoding, CancellationToken cancellationToken, Task startAsyncTask);
    [ExtensionAttribute]
private static void Write(HttpResponse response, string text, Encoding encoding);
    private static int GetEncodingMaxByteSize(Encoding encoding);
    private static void WriteMultiSegmentEncoded(PipeWriter writer, string text, Encoding encoding, Span`1<byte> destination, int encodedLength, int minimumByteSize);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.HttpResults.EmptyHttpResult : object {
    [CompilerGeneratedAttribute]
private static EmptyHttpResult <Instance>k__BackingField;
    public static EmptyHttpResult Instance { get; }
    private static EmptyHttpResult();
    [CompilerGeneratedAttribute]
public static EmptyHttpResult get_Instance();
    public sealed virtual Task ExecuteAsync(HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.HttpValidationProblemDetails : ProblemDetails {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <Errors>k__BackingField;
    [JsonPropertyNameAttribute("errors")]
public IDictionary`2<string, String[]> Errors { get; public set; }
    public HttpValidationProblemDetails(IDictionary`2<string, String[]> errors);
    private HttpValidationProblemDetails(Dictionary`2<string, String[]> errors);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, String[]> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(IDictionary`2<string, String[]> value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.IBindableFromHttpContext`1 {
    public static abstract virtual ValueTask`1<TSelf> BindAsync(HttpContext context, ParameterInfo parameter);
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.IContentTypeHttpResult {
    public string ContentType { get; }
    public abstract virtual string get_ContentType();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.IEndpointFilter {
    public abstract virtual ValueTask`1<object> InvokeAsync(EndpointFilterInvocationContext context, EndpointFilterDelegate next);
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.IFileHttpResult {
    public string ContentType { get; }
    public string FileDownloadName { get; }
    public abstract virtual string get_ContentType();
    public abstract virtual string get_FileDownloadName();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.IHttpContextAccessor {
    public HttpContext HttpContext { get; public set; }
    public abstract virtual HttpContext get_HttpContext();
    public abstract virtual void set_HttpContext(HttpContext value);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.IHttpContextFactory {
    public abstract virtual HttpContext Create(IFeatureCollection featureCollection);
    public abstract virtual void Dispose(HttpContext httpContext);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.IMiddleware {
    public abstract virtual Task InvokeAsync(HttpContext context, RequestDelegate next);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.IMiddlewareFactory {
    public abstract virtual IMiddleware Create(Type middlewareType);
    public abstract virtual void Release(IMiddleware middleware);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.INestedHttpResult {
    public IResult Result { get; }
    public abstract virtual IResult get_Result();
}
public interface Microsoft.AspNetCore.Http.IProblemDetailsService {
    [NullableContextAttribute("1")]
public abstract virtual ValueTask WriteAsync(ProblemDetailsContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.IProblemDetailsService/<TryWriteAsync>d__1")]
public virtual ValueTask`1<bool> TryWriteAsync(ProblemDetailsContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.IProblemDetailsWriter {
    public abstract virtual ValueTask WriteAsync(ProblemDetailsContext context);
    public abstract virtual bool CanWrite(ProblemDetailsContext context);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.IResult {
    public abstract virtual Task ExecuteAsync(HttpContext httpContext);
}
public interface Microsoft.AspNetCore.Http.IStatusCodeHttpResult {
    public Nullable`1<int> StatusCode { get; }
    public abstract virtual Nullable`1<int> get_StatusCode();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.IValueHttpResult {
    public object Value { get; }
    public abstract virtual object get_Value();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.IValueHttpResult`1 {
    public TValue Value { get; }
    public abstract virtual TValue get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{ToString(),nq}")]
public class Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <ContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <RequestType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public IReadOnlyList`1<string> ContentTypes { get; }
    [NullableAttribute("2")]
public Type RequestType { get; }
    public bool IsOptional { get; }
    public AcceptsMetadata(String[] contentTypes, Type type, bool isOptional);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<string> get_ContentTypes();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual Type get_RequestType();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsOptional();
    public virtual string ToString();
}
public class Microsoft.AspNetCore.Http.Metadata.FormMappingOptionsMetadata : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxCollectionSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRecursionDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxKeySize>k__BackingField;
    public Nullable`1<int> MaxCollectionSize { get; }
    public Nullable`1<int> MaxRecursionDepth { get; }
    public Nullable`1<int> MaxKeySize { get; }
    public FormMappingOptionsMetadata(Nullable`1<int> maxCollectionSize, Nullable`1<int> maxRecursionDepth, Nullable`1<int> maxKeySize);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxCollectionSize();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxRecursionDepth();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxKeySize();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.IAcceptsMetadata {
    public IReadOnlyList`1<string> ContentTypes { get; }
    [NullableAttribute("2")]
public Type RequestType { get; }
    public bool IsOptional { get; }
    public abstract virtual IReadOnlyList`1<string> get_ContentTypes();
    [NullableContextAttribute("2")]
public abstract virtual Type get_RequestType();
    public abstract virtual bool get_IsOptional();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.IEndpointDescriptionMetadata {
    public string Description { get; }
    public abstract virtual string get_Description();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.IEndpointMetadataProvider {
    public static abstract virtual void PopulateMetadata(MethodInfo method, EndpointBuilder builder);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.IEndpointParameterMetadataProvider {
    public static abstract virtual void PopulateMetadata(ParameterInfo parameter, EndpointBuilder builder);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.IEndpointSummaryMetadata {
    public string Summary { get; }
    public abstract virtual string get_Summary();
}
public interface Microsoft.AspNetCore.Http.Metadata.IFormOptionsMetadata {
    public Nullable`1<bool> BufferBody { get; }
    public Nullable`1<int> MemoryBufferThreshold { get; }
    public Nullable`1<long> BufferBodyLengthLimit { get; }
    public Nullable`1<int> ValueCountLimit { get; }
    public Nullable`1<int> KeyLengthLimit { get; }
    public Nullable`1<int> ValueLengthLimit { get; }
    public Nullable`1<int> MultipartBoundaryLengthLimit { get; }
    public Nullable`1<int> MultipartHeadersCountLimit { get; }
    public Nullable`1<int> MultipartHeadersLengthLimit { get; }
    public Nullable`1<long> MultipartBodyLengthLimit { get; }
    public abstract virtual Nullable`1<bool> get_BufferBody();
    public abstract virtual Nullable`1<int> get_MemoryBufferThreshold();
    public abstract virtual Nullable`1<long> get_BufferBodyLengthLimit();
    public abstract virtual Nullable`1<int> get_ValueCountLimit();
    public abstract virtual Nullable`1<int> get_KeyLengthLimit();
    public abstract virtual Nullable`1<int> get_ValueLengthLimit();
    public abstract virtual Nullable`1<int> get_MultipartBoundaryLengthLimit();
    public abstract virtual Nullable`1<int> get_MultipartHeadersCountLimit();
    public abstract virtual Nullable`1<int> get_MultipartHeadersLengthLimit();
    public abstract virtual Nullable`1<long> get_MultipartBodyLengthLimit();
}
public interface Microsoft.AspNetCore.Http.Metadata.IFromBodyMetadata {
    public bool AllowEmpty { get; }
    public virtual bool get_AllowEmpty();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.Metadata.IFromFormMetadata {
    public string Name { get; }
    public abstract virtual string get_Name();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.Metadata.IFromHeaderMetadata {
    public string Name { get; }
    public abstract virtual string get_Name();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.Metadata.IFromQueryMetadata {
    public string Name { get; }
    public abstract virtual string get_Name();
}
[NullableContextAttribute("2")]
public interface Microsoft.AspNetCore.Http.Metadata.IFromRouteMetadata {
    public string Name { get; }
    public abstract virtual string get_Name();
}
public interface Microsoft.AspNetCore.Http.Metadata.IFromServiceMetadata {
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata {
    [NullableAttribute("2")]
public Type Type { get; }
    public int StatusCode { get; }
    public IEnumerable`1<string> ContentTypes { get; }
    [NullableContextAttribute("2")]
public abstract virtual Type get_Type();
    public abstract virtual int get_StatusCode();
    public abstract virtual IEnumerable`1<string> get_ContentTypes();
}
public interface Microsoft.AspNetCore.Http.Metadata.IRequestSizeLimitMetadata {
    public Nullable`1<long> MaxRequestBodySize { get; }
    public abstract virtual Nullable`1<long> get_MaxRequestBodySize();
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.IRouteDiagnosticsMetadata {
    public string Route { get; }
    public abstract virtual string get_Route();
}
public interface Microsoft.AspNetCore.Http.Metadata.ISkipStatusCodePagesMetadata {
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Http.Metadata.ITagsMetadata {
    public IReadOnlyList`1<string> Tags { get; }
    public abstract virtual IReadOnlyList`1<string> get_Tags();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Http.ParsingHelpers : object {
    public static StringValues GetHeader(IHeaderDictionary headers, string key);
    public static StringValues GetHeaderSplit(IHeaderDictionary headers, string key);
    public static StringValues GetHeaderUnmodified(IHeaderDictionary headers, string key);
    public static void SetHeaderJoined(IHeaderDictionary headers, string key, StringValues value);
    private static string QuoteIfNeeded(string value);
    private static string DeQuote(string value);
    public static void SetHeaderUnmodified(IHeaderDictionary headers, string key, Nullable`1<StringValues> values);
    public static void AppendHeaderJoined(IHeaderDictionary headers, string key, String[] values);
    public static void AppendHeaderUnmodified(IHeaderDictionary headers, string key, StringValues values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[TypeConverterAttribute("Microsoft.AspNetCore.Http.PathStringConverter")]
[DebuggerDisplayAttribute("{Value}")]
public class Microsoft.AspNetCore.Http.PathString : ValueType {
    private static SearchValues`1<char> s_validPathChars;
    internal static int StackAllocThreshold;
    public static PathString Empty;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [NullableAttribute("2")]
public string Value { get; }
    [MemberNotNullWhenAttribute("True", "Value")]
public bool HasValue { get; }
    [NullableContextAttribute("2")]
public PathString(string value);
    private static PathString();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [MemberNotNullWhenAttribute("True", "Value")]
public bool get_HasValue();
    public virtual string ToString();
    public string ToUriComponent();
    private static string ToEscapedUriComponent(string value, int i);
    public static PathString FromUriComponent(string uriComponent);
    public static PathString FromUriComponent(Uri uri);
    public bool StartsWithSegments(PathString other);
    public bool StartsWithSegments(PathString other, StringComparison comparisonType);
    public bool StartsWithSegments(PathString other, PathString& remaining);
    public bool StartsWithSegments(PathString other, StringComparison comparisonType, PathString& remaining);
    public bool StartsWithSegments(PathString other, PathString& matched, PathString& remaining);
    public bool StartsWithSegments(PathString other, StringComparison comparisonType, PathString& matched, PathString& remaining);
    public PathString Add(PathString other);
    public string Add(QueryString other);
    public sealed virtual bool Equals(PathString other);
    public bool Equals(PathString other, StringComparison comparisonType);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(PathString left, PathString right);
    public static bool op_Inequality(PathString left, PathString right);
    public static string op_Addition(string left, PathString right);
    public static string op_Addition(PathString left, string right);
    public static PathString op_Addition(PathString left, PathString right);
    public static string op_Addition(PathString left, QueryString right);
    [NullableContextAttribute("2")]
public static PathString op_Implicit(string s);
    public static string op_Implicit(PathString path);
    [NullableContextAttribute("2")]
internal static PathString ConvertFromString(string s);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Http.PathStringConverter : TypeConverter {
    [NullableContextAttribute("1")]
public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Microsoft.AspNetCore.Http.ProblemDetailsContext : object {
    private ProblemDetails _problemDetails;
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointMetadataCollection <AdditionalMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [RequiredMemberAttribute]
public HttpContext HttpContext { get; public set; }
    [NullableAttribute("2")]
public EndpointMetadataCollection AdditionalMetadata { get; public set; }
    public ProblemDetails ProblemDetails { get; public set; }
    [NullableAttribute("2")]
public Exception Exception { get; public set; }
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HttpContext(HttpContext value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public EndpointMetadataCollection get_AdditionalMetadata();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AdditionalMetadata(EndpointMetadataCollection value);
    public ProblemDetails get_ProblemDetails();
    public void set_ProblemDetails(ProblemDetails value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Exception get_Exception();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Exception(Exception value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{ToString(),nq}")]
public class Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ContentTypes>k__BackingField;
    [NullableAttribute("2")]
public Type Type { get; private set; }
    public int StatusCode { get; private set; }
    public IEnumerable`1<string> ContentTypes { get; private set; }
    [NullableContextAttribute("2")]
public ProducesResponseTypeMetadata(int statusCode, Type type, String[] contentTypes);
    private ProducesResponseTypeMetadata(int statusCode, Type type, IEnumerable`1<string> contentTypes);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual Type get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_StatusCode();
    [CompilerGeneratedAttribute]
private void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_ContentTypes();
    [CompilerGeneratedAttribute]
private void set_ContentTypes(IEnumerable`1<string> value);
    public virtual string ToString();
    internal static ProducesResponseTypeMetadata CreateUnvalidated(Type type, int statusCode, IEnumerable`1<string> contentTypes);
    [CompilerGeneratedAttribute]
internal static void <.ctor>g__ValidateContentType|0_0(string type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
public class Microsoft.AspNetCore.Http.QueryString : ValueType {
    public static QueryString Empty;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [NullableAttribute("2")]
public string Value { get; }
    [MemberNotNullWhenAttribute("True", "Value")]
public bool HasValue { get; }
    [NullableContextAttribute("2")]
public QueryString(string value);
    private static QueryString();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [MemberNotNullWhenAttribute("True", "Value")]
public bool get_HasValue();
    public virtual string ToString();
    public string ToUriComponent();
    public static QueryString FromUriComponent(string uriComponent);
    public static QueryString FromUriComponent(Uri uri);
    public static QueryString Create(string name, string value);
    public static QueryString Create(IEnumerable`1<KeyValuePair`2<string, string>> parameters);
    public static QueryString Create(IEnumerable`1<KeyValuePair`2<string, StringValues>> parameters);
    public QueryString Add(QueryString other);
    public QueryString Add(string name, string value);
    public sealed virtual bool Equals(QueryString other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(QueryString left, QueryString right);
    public static bool op_Inequality(QueryString left, QueryString right);
    public static QueryString op_Addition(QueryString left, QueryString right);
    private static void AppendKeyValuePair(StringBuilder builder, string key, string value, bool first);
}
public class Microsoft.AspNetCore.Http.RequestDelegate : MulticastDelegate {
    public RequestDelegate(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(HttpContext context);
    public virtual IAsyncResult BeginInvoke(HttpContext context, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.RequestDelegateResult : object {
    [CompilerGeneratedAttribute]
private RequestDelegate <RequestDelegate>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<object> <EndpointMetadata>k__BackingField;
    public RequestDelegate RequestDelegate { get; }
    public IReadOnlyList`1<object> EndpointMetadata { get; }
    public RequestDelegateResult(RequestDelegate requestDelegate, IReadOnlyList`1<object> metadata);
    [CompilerGeneratedAttribute]
public RequestDelegate get_RequestDelegate();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<object> get_EndpointMetadata();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.RequestTrailerExtensions : object {
    [ExtensionAttribute]
public static StringValues GetDeclaredTrailers(HttpRequest request);
    [ExtensionAttribute]
public static bool SupportsTrailers(HttpRequest request);
    [ExtensionAttribute]
public static bool CheckTrailersAvailable(HttpRequest request);
    [ExtensionAttribute]
public static StringValues GetTrailer(HttpRequest request, string trailerName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.ResponseTrailerExtensions : object {
    [ExtensionAttribute]
public static void DeclareTrailer(HttpResponse response, string trailerName);
    [ExtensionAttribute]
public static bool SupportsTrailers(HttpResponse response);
    [ExtensionAttribute]
public static void AppendTrailer(HttpResponse response, string trailerName, StringValues trailerValues);
}
public static class Microsoft.AspNetCore.Http.StatusCodes : object {
    public static int Status100Continue;
    public static int Status101SwitchingProtocols;
    public static int Status102Processing;
    public static int Status200OK;
    public static int Status201Created;
    public static int Status202Accepted;
    public static int Status203NonAuthoritative;
    public static int Status204NoContent;
    public static int Status205ResetContent;
    public static int Status206PartialContent;
    public static int Status207MultiStatus;
    public static int Status208AlreadyReported;
    public static int Status226IMUsed;
    public static int Status300MultipleChoices;
    public static int Status301MovedPermanently;
    public static int Status302Found;
    public static int Status303SeeOther;
    public static int Status304NotModified;
    public static int Status305UseProxy;
    public static int Status306SwitchProxy;
    public static int Status307TemporaryRedirect;
    public static int Status308PermanentRedirect;
    public static int Status400BadRequest;
    public static int Status401Unauthorized;
    public static int Status402PaymentRequired;
    public static int Status403Forbidden;
    public static int Status404NotFound;
    public static int Status405MethodNotAllowed;
    public static int Status406NotAcceptable;
    public static int Status407ProxyAuthenticationRequired;
    public static int Status408RequestTimeout;
    public static int Status409Conflict;
    public static int Status410Gone;
    public static int Status411LengthRequired;
    public static int Status412PreconditionFailed;
    public static int Status413RequestEntityTooLarge;
    public static int Status413PayloadTooLarge;
    public static int Status414RequestUriTooLong;
    public static int Status414UriTooLong;
    public static int Status415UnsupportedMediaType;
    public static int Status416RequestedRangeNotSatisfiable;
    public static int Status416RangeNotSatisfiable;
    public static int Status417ExpectationFailed;
    public static int Status418ImATeapot;
    public static int Status419AuthenticationTimeout;
    public static int Status421MisdirectedRequest;
    public static int Status422UnprocessableEntity;
    public static int Status423Locked;
    public static int Status424FailedDependency;
    public static int Status426UpgradeRequired;
    public static int Status428PreconditionRequired;
    public static int Status429TooManyRequests;
    public static int Status431RequestHeaderFieldsTooLarge;
    public static int Status451UnavailableForLegalReasons;
    public static int Status499ClientClosedRequest;
    public static int Status500InternalServerError;
    public static int Status501NotImplemented;
    public static int Status502BadGateway;
    public static int Status503ServiceUnavailable;
    public static int Status504GatewayTimeout;
    public static int Status505HttpVersionNotsupported;
    public static int Status506VariantAlsoNegotiates;
    public static int Status507InsufficientStorage;
    public static int Status508LoopDetected;
    public static int Status510NotExtended;
    public static int Status511NetworkAuthenticationRequired;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Http.WebSocketManager/WebSocketManagerDebugView")]
public abstract class Microsoft.AspNetCore.Http.WebSocketManager : object {
    public bool IsWebSocketRequest { get; }
    public IList`1<string> WebSocketRequestedProtocols { get; }
    public abstract virtual bool get_IsWebSocketRequest();
    public abstract virtual IList`1<string> get_WebSocketRequestedProtocols();
    public virtual Task`1<WebSocket> AcceptWebSocketAsync();
    public abstract virtual Task`1<WebSocket> AcceptWebSocketAsync(string subProtocol);
    public virtual Task`1<WebSocket> AcceptWebSocketAsync(WebSocketAcceptContext acceptContext);
    private string DebuggerToString();
}
internal class Microsoft.AspNetCore.Internal.UrlDecoder : object {
    private static ReadOnlySpan`1<sbyte> CharToHexLookup { get; }
    public static int DecodeRequestLine(ReadOnlySpan`1<byte> source, Span`1<byte> destination, bool isFormEncoding);
    public static int DecodeInPlace(Span`1<byte> buffer, bool isFormEncoding);
    private static bool DecodeCore(Int32& sourceIndex, Int32& destinationIndex, Span`1<byte> buffer, bool isFormEncoding);
    private static void Copy(int begin, int end, Int32& writer, Span`1<T> buffer);
    private static int UnescapePercentEncoding(Int32& scan, Span`1<byte> buffer, bool isFormEncoding);
    private static int ReadHex(Int32& scan, Span`1<byte> buffer);
    private static bool SkipUnescape(int value1, int value2, bool isFormEncoding);
    public static int DecodeRequestLine(ReadOnlySpan`1<char> source, Span`1<char> destination);
    public static int DecodeInPlace(Span`1<char> buffer);
    private static bool DecodeCore(Int32& sourceIndex, Int32& destinationIndex, Span`1<char> buffer);
    private static int UnescapePercentEncoding(Int32& scan, ReadOnlySpan`1<char> buffer);
    private static int ReadHex(Int32& scan, ReadOnlySpan`1<char> buffer);
    private static int FromChar(int c);
    private static ReadOnlySpan`1<sbyte> get_CharToHexLookup();
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Internal.ValueTaskExtensions : object {
    [ExtensionAttribute]
public static Task GetAsTask(ValueTask`1& valueTask);
    [ExtensionAttribute]
public static ValueTask GetAsValueTask(ValueTask`1& valueTask);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ProblemDetails : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Extensions>k__BackingField;
    [JsonIgnoreAttribute]
[JsonPropertyOrderAttribute("-5")]
[JsonPropertyNameAttribute("type")]
public string Type { get; public set; }
    [JsonIgnoreAttribute]
[JsonPropertyOrderAttribute("-4")]
[JsonPropertyNameAttribute("title")]
public string Title { get; public set; }
    [JsonIgnoreAttribute]
[JsonPropertyOrderAttribute("-3")]
[JsonPropertyNameAttribute("status")]
public Nullable`1<int> Status { get; public set; }
    [JsonIgnoreAttribute]
[JsonPropertyOrderAttribute("-2")]
[JsonPropertyNameAttribute("detail")]
public string Detail { get; public set; }
    [JsonIgnoreAttribute]
[JsonPropertyOrderAttribute("-1")]
[JsonPropertyNameAttribute("instance")]
public string Instance { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonExtensionDataAttribute]
public IDictionary`2<string, object> Extensions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
    [CompilerGeneratedAttribute]
public string get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(IDictionary`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Routing.RerouteHelper : object {
    internal static string GlobalRouteBuilderKey;
    internal static string UseRoutingKey;
    internal static RequestDelegate Reroute(IApplicationBuilder app, object routeBuilder, RequestDelegate next);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Routing.RouteValueDictionary/RouteValueDictionaryDebugView")]
[DebuggerDisplayAttribute("Count = {Count}")]
public class Microsoft.AspNetCore.Routing.RouteValueDictionary : object {
    private static int DefaultCapacity;
    private static ConcurrentDictionary`2<Type, PropertyHelper[]> _propertyCache;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal KeyValuePair`2[] _arrayStorage;
    [NullableAttribute("2")]
internal PropertyStorage _propertyStorage;
    private int _count;
    [NullableAttribute("2")]
public object Item { get; public set; }
    public IEqualityComparer`1<string> Comparer { get; }
    public int Count { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get; }
    public ICollection`1<string> Keys { get; }
    private IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.Keys { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<object> Values { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<object> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.Values { get; }
    [NullableContextAttribute("2")]
[RequiresUnreferencedCodeAttribute("This constructor may perform reflection on the specificed value which may be trimmed if not referenced directly. Consider using a different overload to avoid this issue.")]
public RouteValueDictionary(object values);
    public RouteValueDictionary(IEnumerable`1<KeyValuePair`2<string, object>> values);
    public RouteValueDictionary(IEnumerable`1<KeyValuePair`2<string, string>> values);
    [NullableContextAttribute("2")]
public RouteValueDictionary(RouteValueDictionary dictionary);
    private static RouteValueDictionary();
    public static RouteValueDictionary FromArray(KeyValuePair`2[] items);
    [MemberNotNullAttribute("_arrayStorage")]
private void Initialize(IEnumerable`1<KeyValuePair`2<string, string>> stringValueEnumerable);
    [MemberNotNullAttribute("_arrayStorage")]
private void Initialize(IEnumerable`1<KeyValuePair`2<string, object>> keyValueEnumerable);
    [MemberNotNullAttribute("_arrayStorage")]
private void Initialize(RouteValueDictionary dictionary);
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public IEqualityComparer`1<string> get_Comparer();
    public sealed virtual int get_Count();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly();
    public sealed virtual ICollection`1<string> get_Keys();
    private sealed virtual override IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.get_Keys();
    public sealed virtual ICollection`1<object> get_Values();
    private sealed virtual override IEnumerable`1<object> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.get_Values();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair`2<string, object> item);
    public sealed virtual void Add(string key, object value);
    public sealed virtual void Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair`2<string, object> item);
    public sealed virtual bool ContainsKey(string key);
    private bool ContainsKeyCore(string key);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public Enumerator GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair`2<string, object> item);
    public sealed virtual bool Remove(string key);
    public bool Remove(string key, Object& value);
    public bool TryAdd(string key, object value);
    public sealed virtual bool TryGetValue(string key, Object& value);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
private bool TryGetValueSlow(string key, Object& value);
    [DoesNotReturnAttribute]
private static void ThrowArgumentNullExceptionForKey();
    private void EnsureCapacity(int capacity);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
private void EnsureCapacitySlow(int capacity);
    private int FindIndex(string key);
    private bool TryFindItem(string key, Object& value);
    private bool ContainsKeyArray(string key);
    private bool ContainsKeyProperties(string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Shared.DebuggerHelpers : object {
    public static string GetDebugText(string key1, object value1, bool includeNullValues, string prefix);
    public static string GetDebugText(string key1, object value1, string key2, object value2, bool includeNullValues, string prefix);
    public static string GetDebugText(string key1, object value1, string key2, object value2, string key3, object value3, bool includeNullValues, string prefix);
    public static string GetDebugText(ReadOnlySpan`1<KeyValuePair`2<string, object>> values, bool includeNullValues, string prefix);
    private static bool HasValue(object value);
    private static KeyValuePair`2<string, object> Create(string key, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Shared.HttpContextDebugFormatter : object {
    public static string ResponseToString(HttpResponse response, string reasonPhrase);
    public static string RequestToString(HttpRequest request);
    public static string ContextToString(HttpContext context, string reasonPhrase);
    private static string ResolveReasonPhrase(HttpResponse response, string reasonPhrase);
    private static void GetRequestUrl(StringBuilder sb, HttpRequest request, bool includeQueryString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Extensions.Internal.ActivatorUtilities : object {
    private static DynamicallyAccessedMemberTypes ActivatorAccessibility;
    public static object CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters);
    public static T CreateInstance(IServiceProvider provider, Object[] parameters);
    public static T GetServiceOrCreateInstance(IServiceProvider provider);
    public static object GetServiceOrCreateInstance(IServiceProvider provider, Type type);
}
internal static class Microsoft.Extensions.Internal.ParameterDefaultValue : object {
    [NullableContextAttribute("1")]
public static bool TryGetDefaultValue(ParameterInfo parameter, Object& defaultValue);
    private static bool CheckHasDefaultValue(ParameterInfo parameter, Boolean& tryToGetDefaultValue);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2067:UnrecognizedReflectionPattern")]
private static object CreateValueType(Type t);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Internal.PropertyHelper : object {
    private static BindingFlags DeclaredOnlyLookup;
    private static BindingFlags Everything;
    private static MethodInfo CallPropertyGetterOpenGenericMethod;
    private static MethodInfo CallPropertyGetterByReferenceOpenGenericMethod;
    private static MethodInfo CallNullSafePropertyGetterOpenGenericMethod;
    private static MethodInfo CallNullSafePropertyGetterByReferenceOpenGenericMethod;
    private static MethodInfo CallPropertySetterOpenGenericMethod;
    private static ConcurrentDictionary`2<Type, PropertyHelper[]> PropertiesCache;
    private static ConcurrentDictionary`2<Type, PropertyHelper[]> VisiblePropertiesCache;
    private Action`2<object, object> _valueSetter;
    private Func`2<object, object> _valueGetter;
    [CompilerGeneratedAttribute]
private PropertyInfo <Property>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public PropertyInfo Property { get; }
    public string Name { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<object, object> ValueGetter { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<object, object> ValueSetter { get; }
    public PropertyHelper(PropertyInfo property);
    private static PropertyHelper();
    [CompilerGeneratedAttribute]
public PropertyInfo get_Property();
    [CompilerGeneratedAttribute]
public string get_Name();
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public Func`2<object, object> get_ValueGetter();
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public Action`2<object, object> get_ValueSetter();
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public object GetValue(object instance);
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public void SetValue(object instance, object value);
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public static PropertyHelper[] GetProperties(Type type);
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public static PropertyHelper[] GetVisibleProperties(Type type);
    [RequiresUnreferencedCodeAttribute("This API is not trimmer safe.")]
public static Func`2<object, object> MakeFastPropertyGetter(PropertyInfo propertyInfo);
    [RequiresUnreferencedCodeAttribute("This API is not trimmer safe.")]
public static Func`2<object, object> MakeNullSafeFastPropertyGetter(PropertyInfo propertyInfo);
    [RequiresUnreferencedCodeAttribute("This API is not trimmer safe.")]
private static Func`2<object, object> MakeFastPropertyGetter(PropertyInfo propertyInfo, MethodInfo propertyGetterWrapperMethod, MethodInfo propertyGetterByRefWrapperMethod);
    [RequiresUnreferencedCodeAttribute("This API is not trimmer safe.")]
[RequiresDynamicCodeAttribute("This API requires dynamic code because it makes generic types which may be filled with ValueTypes.")]
private static Func`2<object, object> MakeFastPropertyGetter(Type openGenericDelegateType, MethodInfo propertyGetMethod, MethodInfo openGenericWrapperMethod);
    [RequiresUnreferencedCodeAttribute("This API is not trimmer safe.")]
public static Action`2<object, object> MakeFastPropertySetter(PropertyInfo propertyInfo);
    [NullableContextAttribute("2")]
[RequiresUnreferencedCodeAttribute("Method uses reflection to generate the dictionary.")]
public static IDictionary`2<string, object> ObjectToDictionary(object value);
    private static object CallPropertyGetter(Func`2<TDeclaringType, TValue> getter, object target);
    private static object CallPropertyGetterByReference(ByRefFunc`2<TDeclaringType, TValue> getter, object target);
    private static object CallNullSafePropertyGetter(Func`2<TDeclaringType, TValue> getter, object target);
    private static object CallNullSafePropertyGetterByReference(ByRefFunc`2<TDeclaringType, TValue> getter, object target);
    private static void CallPropertySetter(Action`2<TDeclaringType, TValue> setter, object target, object value);
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public static PropertyHelper[] GetVisibleProperties(Type type, ConcurrentDictionary`2<Type, PropertyHelper[]> allPropertiesCache, ConcurrentDictionary`2<Type, PropertyHelper[]> visiblePropertiesCache);
    [RequiresUnreferencedCodeAttribute("This API is not trim safe.")]
public static PropertyHelper[] GetProperties(Type type, ConcurrentDictionary`2<Type, PropertyHelper[]> cache);
    private static bool IsInterestingProperty(PropertyInfo property);
    [CompilerGeneratedAttribute]
internal static void <GetProperties>g__AddInterestingProperties|39_0(List`1<PropertyHelper> propertyHelpers, Type type);
}
