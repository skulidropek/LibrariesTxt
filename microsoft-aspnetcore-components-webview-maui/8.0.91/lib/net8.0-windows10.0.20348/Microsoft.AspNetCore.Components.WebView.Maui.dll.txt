public class Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private WebView2 <WebView>k__BackingField;
    public WebView2 WebView { get; internal set; }
    [CompilerGeneratedAttribute]
public WebView2 get_WebView();
    [CompilerGeneratedAttribute]
internal void set_WebView(WebView2 value);
}
public class Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <BrowserExecutableFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserDataFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private CoreWebView2EnvironmentOptions <EnvironmentOptions>k__BackingField;
    public string BrowserExecutableFolder { get; public set; }
    public string UserDataFolder { get; public set; }
    public CoreWebView2EnvironmentOptions EnvironmentOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BrowserExecutableFolder();
    [CompilerGeneratedAttribute]
public void set_BrowserExecutableFolder(string value);
    [CompilerGeneratedAttribute]
public string get_UserDataFolder();
    [CompilerGeneratedAttribute]
public void set_UserDataFolder(string value);
    [CompilerGeneratedAttribute]
public CoreWebView2EnvironmentOptions get_EnvironmentOptions();
    [CompilerGeneratedAttribute]
public void set_EnvironmentOptions(CoreWebView2EnvironmentOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Components.WebView.Log : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`3<ILogger, Uri, Exception> __NavigatingToUriCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __FailedToCreateWebView2EnvironmentCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __StartingWebView2Callback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __StartedWebView2Callback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`3<ILogger, string, Exception> __HandlingWebRequestCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`4<ILogger, string, int, Exception> __ResponseContentBeingSentCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`3<ILogger, string, Exception> __ReponseContentNotFoundCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`4<ILogger, Uri, UrlLoadingStrategy, Exception> __NavigationEventCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`3<ILogger, Uri, Exception> __LaunchExternalBrowserCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __CallingBlazorStartCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`4<ILogger, string, string, Exception> __CreatingFileProviderCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`5<ILogger, string, string, int, Exception> __AddingRootComponentCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`3<ILogger, string, Exception> __StartingInitialNavigationCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __CreatingAndroidWebkitWebViewCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __CreatedAndroidWebkitWebViewCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __RunningBlazorStartupScriptsCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __BlazorStartupScriptsFinishedCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __CreatingWebKitWKWebViewCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
private static Action`2<ILogger, Exception> __CreatedWebKitWKWebViewCallback;
    private static Log();
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void NavigatingToUri(ILogger logger, Uri uri);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void FailedToCreateWebView2Environment(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void StartingWebView2(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void StartedWebView2(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void HandlingWebRequest(ILogger logger, string requestUri);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void ResponseContentBeingSent(ILogger logger, string requestUri, int statusCode);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void ReponseContentNotFound(ILogger logger, string requestUri);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void NavigationEvent(ILogger logger, Uri uri, UrlLoadingStrategy urlLoadingStrategy);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void LaunchExternalBrowser(ILogger logger, Uri uri);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void CallingBlazorStart(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void CreatingFileProvider(ILogger logger, string contentRootDir, string hostPageRelativePath);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void AddingRootComponent(ILogger logger, string componentTypeName, string componentSelector, int parameterCount);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void StartingInitialNavigation(ILogger logger, string startPath);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void CreatingAndroidWebkitWebView(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void CreatedAndroidWebkitWebView(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void RunningBlazorStartupScripts(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void BlazorStartupScriptsFinished(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void CreatingWebKitWKWebView(ILogger logger);
    [ExtensionAttribute]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "8.0.9.3103")]
public static void CreatedWebKitWKWebView(ILogger logger);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView : View {
    [CompilerGeneratedAttribute]
private static string <AppHostAddress>k__BackingField;
    private static string AppHostAddressAlways0000Switch;
    private JSComponentConfigurationStore _jSComponents;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <HostPage>k__BackingField;
    public static BindableProperty StartPathProperty;
    [CompilerGeneratedAttribute]
private RootComponentsCollection <RootComponents>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<UrlLoadingEventArgs> UrlLoading;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<BlazorWebViewInitializingEventArgs> BlazorWebViewInitializing;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<BlazorWebViewInitializedEventArgs> BlazorWebViewInitialized;
    internal static string AppHostAddress { get; }
    private static bool IsAppHostAddressAlways0000Enabled { get; }
    private JSComponentConfigurationStore Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.JSComponents { get; }
    [NullableAttribute("2")]
public string HostPage { get; public set; }
    public string StartPath { get; public set; }
    public RootComponentsCollection RootComponents { get; }
    private static BlazorWebView();
    [CompilerGeneratedAttribute]
internal static string get_AppHostAddress();
    private static bool get_IsAppHostAddressAlways0000Enabled();
    private static string GetAppHostAddress();
    private sealed virtual override JSComponentConfigurationStore Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.get_JSComponents();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_HostPage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_HostPage(string value);
    public sealed virtual string get_StartPath();
    public sealed virtual void set_StartPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual RootComponentsCollection get_RootComponents();
    [CompilerGeneratedAttribute]
public void add_UrlLoading(EventHandler`1<UrlLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_UrlLoading(EventHandler`1<UrlLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_BlazorWebViewInitializing(EventHandler`1<BlazorWebViewInitializingEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_BlazorWebViewInitializing(EventHandler`1<BlazorWebViewInitializingEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_BlazorWebViewInitialized(EventHandler`1<BlazorWebViewInitializedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_BlazorWebViewInitialized(EventHandler`1<BlazorWebViewInitializedEventArgs> value);
    public virtual IFileProvider CreateFileProvider(string contentRootDir);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView/<TryDispatchAsync>d__32")]
public virtual Task`1<bool> TryDispatchAsync(Action`1<IServiceProvider> workItem);
    private sealed virtual override void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading(UrlLoadingEventArgs args);
    private sealed virtual override void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing(BlazorWebViewInitializingEventArgs args);
    private sealed virtual override void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized(BlazorWebViewInitializedEventArgs args);
    [NullableContextAttribute("2")]
protected virtual void OnPropertyChanging(string propertyName);
    [NullableContextAttribute("2")]
protected virtual void OnPropertyChanged(string propertyName);
    private void Window_Destroying(object sender, EventArgs e);
}
internal class Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewDeveloperTools : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    public bool Enabled { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler : ViewHandler`2<IBlazorWebView, WebView2> {
    public static PropertyMapper`2<IBlazorWebView, BlazorWebViewHandler> BlazorWebViewMapper;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <HostPage>k__BackingField;
    [NullableAttribute("2")]
private RootComponentsCollection _rootComponents;
    [NullableAttribute("2")]
private WebView2WebViewManager _webviewManager;
    internal BlazorWebViewDeveloperTools DeveloperTools { get; }
    [NullableAttribute("2")]
private string HostPage { get; private set; }
    [NullableAttribute("2")]
private RootComponentsCollection RootComponents { get; private set; }
    private bool RequiredStartupPropertiesSet { get; }
    [NullableContextAttribute("2")]
public BlazorWebViewHandler(PropertyMapper mapper);
    private static BlazorWebViewHandler();
    internal BlazorWebViewDeveloperTools get_DeveloperTools();
    public static void MapHostPage(BlazorWebViewHandler handler, IBlazorWebView webView);
    public static void MapRootComponents(BlazorWebViewHandler handler, IBlazorWebView webView);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private string get_HostPage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_HostPage(string value);
    internal void UrlLoading(UrlLoadingEventArgs args);
    [NullableContextAttribute("2")]
private RootComponentsCollection get_RootComponents();
    [NullableContextAttribute("2")]
private void set_RootComponents(RootComponentsCollection value);
    private void OnRootComponentsCollectionChanged(object sender, NotifyCollectionChangedEventArgs eventArgs);
    protected virtual WebView2 CreatePlatformView();
    protected virtual void DisconnectHandler(WebView2 platformView);
    private bool get_RequiredStartupPropertiesSet();
    private void StartWebViewCoreIfPossible();
    internal IFileProvider CreateFileProvider(string contentRootDir);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler/<TryDispatchAsync>d__24")]
public virtual Task`1<bool> TryDispatchAsync(Action`1<IServiceProvider> workItem);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView {
    [NullableAttribute("2")]
public string HostPage { get; }
    public string StartPath { get; public set; }
    public RootComponentsCollection RootComponents { get; }
    public JSComponentConfigurationStore JSComponents { get; }
    [NullableContextAttribute("2")]
public abstract virtual string get_HostPage();
    public virtual string get_StartPath();
    public virtual void set_StartPath(string value);
    public abstract virtual RootComponentsCollection get_RootComponents();
    public abstract virtual JSComponentConfigurationStore get_JSComponents();
    public abstract virtual IFileProvider CreateFileProvider(string contentRootDir);
    public abstract virtual void UrlLoading(UrlLoadingEventArgs args);
    public abstract virtual void BlazorWebViewInitializing(BlazorWebViewInitializingEventArgs args);
    public abstract virtual void BlazorWebViewInitialized(BlazorWebViewInitializedEventArgs args);
}
[NullableContextAttribute("1")]
public interface Microsoft.AspNetCore.Components.WebView.Maui.IMauiBlazorWebViewBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
}
internal class Microsoft.AspNetCore.Components.WebView.Maui.MauiBlazorMarkerService : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.WebView.Maui.MauiBlazorWebViewBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public IServiceCollection Services { get; }
    public MauiBlazorWebViewBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.WebView.Maui.MauiDispatcher : Dispatcher {
    private IDispatcher _dispatcher;
    public MauiDispatcher(IDispatcher dispatcher);
    public virtual bool CheckAccess();
    public virtual Task InvokeAsync(Action workItem);
    public virtual Task InvokeAsync(Func`1<Task> workItem);
    public virtual Task`1<TResult> InvokeAsync(Func`1<TResult> workItem);
    public virtual Task`1<TResult> InvokeAsync(Func`1<Task`1<TResult>> workItem);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.WebView.Maui.RootComponent : object {
    [CompilerGeneratedAttribute]
private string <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ComponentType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Parameters>k__BackingField;
    public string Selector { get; public set; }
    public Type ComponentType { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Parameters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(string value);
    [CompilerGeneratedAttribute]
public Type get_ComponentType();
    [CompilerGeneratedAttribute]
public void set_ComponentType(Type value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IDictionary`2<string, object> value);
    [NullableContextAttribute("1")]
internal Task AddToWebViewManagerAsync(WebViewManager webViewManager);
    [NullableContextAttribute("1")]
internal Task RemoveFromWebViewManagerAsync(WebViewManager webviewManager);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Components.WebView.Maui.RootComponentsCollection : ObservableCollection`1<RootComponent> {
    [CompilerGeneratedAttribute]
private JSComponentConfigurationStore <JSComponents>k__BackingField;
    public JSComponentConfigurationStore JSComponents { get; }
    public RootComponentsCollection(JSComponentConfigurationStore jsComponents);
    [CompilerGeneratedAttribute]
public sealed virtual JSComponentConfigurationStore get_JSComponents();
}
internal class Microsoft.AspNetCore.Components.WebView.Maui.StaticContentProvider : object {
    private static FileExtensionContentTypeProvider ContentTypeProvider;
    private static StaticContentProvider();
    internal static string GetResponseContentTypeOrDefault(string path);
    internal static IDictionary`2<string, string> GetResponseHeaders(string contentType);
}
[ExtensionAttribute]
internal static class Microsoft.AspNetCore.Components.WebView.Maui.UriExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static bool IsBaseOfPage(Uri baseUri, string uriString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.WebView.Maui.WinUIWebViewManager : WebView2WebViewManager {
    private WebView2 _webview;
    private string _hostPageRelativePath;
    private string _contentRootRelativeToAppRoot;
    private static bool _isPackagedApp;
    private ILogger _logger;
    private static WinUIWebViewManager();
    public WinUIWebViewManager(WebView2 webview, IServiceProvider services, Dispatcher dispatcher, IFileProvider fileProvider, JSComponentConfigurationStore jsComponents, string contentRootRelativeToAppRoot, string hostPagePathWithinFileProvider, BlazorWebViewHandler webViewHandler, ILogger logger);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.Maui.WinUIWebViewManager/<HandleWebResourceRequest>d__7")]
protected virtual Task HandleWebResourceRequest(CoreWebView2WebResourceRequestedEventArgs eventArgs);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.Maui.WinUIWebViewManager/<TryServeFromFolderAsync>d__8")]
private Task`1<bool> TryServeFromFolderAsync(CoreWebView2WebResourceRequestedEventArgs eventArgs, bool allowFallbackOnHostPage, string requestUri, string relativePath);
    protected virtual void QueueBlazorStart();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.Maui.WinUIWebViewManager/<<TryServeFromFolderAsync>g__CopyContentToRandomAccessStreamAsync|8_0>d")]
[CompilerGeneratedAttribute]
internal static Task`1<IRandomAccessStream> <TryServeFromFolderAsync>g__CopyContentToRandomAccessStreamAsync|8_0(Stream content);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.Maui.WinUIWebViewManager/<<QueueBlazorStart>b__9_0>d")]
[CompilerGeneratedAttribute]
private void <QueueBlazorStart>b__9_0(CoreWebView2 _, CoreWebView2DOMContentLoadedEventArgs __);
}
internal static class Microsoft.AspNetCore.Components.WebView.QueryStringHelper : object {
    [NullableContextAttribute("1")]
public static string RemovePossibleQueryString(string url);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Components.WebView.StaticContentHotReloadManager : object {
    private static Regex ContentUrlRegex;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static ContentUpdatedHandler OnContentUpdated;
    [CompilerGeneratedAttribute]
private static string <ApplicationAssemblyName>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<ValueTuple`2<string, string>, ValueTuple`2<string, Byte[]>> _updatedContent;
    private static string ApplicationAssemblyName { get; }
    private static StaticContentHotReloadManager();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private static void add_OnContentUpdated(ContentUpdatedHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private static void remove_OnContentUpdated(ContentUpdatedHandler value);
    [CompilerGeneratedAttribute]
private static string get_ApplicationAssemblyName();
    public static void UpdateContent(string assemblyName, bool isApplicationProject, string relativePath, Byte[] contents);
    public static void AttachToWebViewManagerIfEnabled(WebViewManager manager);
    public static bool TryReplaceResponseContent(string contentRootRelativePath, string requestAbsoluteUri, Int32& responseStatusCode, Stream& responseContent, IDictionary`2<string, string> responseHeaders);
    private static ValueTuple`2<string, string> GetAssemblyNameAndRelativePath(string requestAbsoluteUri, string appContentRoot);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private UrlLoadingStrategy <UrlLoadingStrategy>k__BackingField;
    public Uri Url { get; }
    public UrlLoadingStrategy UrlLoadingStrategy { get; public set; }
    private UrlLoadingEventArgs(Uri url, UrlLoadingStrategy urlLoadingStrategy);
    internal static UrlLoadingEventArgs CreateWithDefaultLoadingStrategy(Uri urlToLoad, Uri appOriginUri);
    [CompilerGeneratedAttribute]
public Uri get_Url();
    [CompilerGeneratedAttribute]
public UrlLoadingStrategy get_UrlLoadingStrategy();
    [CompilerGeneratedAttribute]
public void set_UrlLoadingStrategy(UrlLoadingStrategy value);
}
public enum Microsoft.AspNetCore.Components.WebView.UrlLoadingStrategy : Enum {
    public int value__;
    public static UrlLoadingStrategy OpenExternally;
    public static UrlLoadingStrategy OpenInWebView;
    public static UrlLoadingStrategy CancelLoad;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Components.WebView.WebView2.WebView2WebViewManager : WebViewManager {
    internal static string AppHostAddress;
    protected static string AppOrigin;
    internal static Uri AppOriginUri;
    private ILogger _logger;
    private WebView2 _webview;
    private Task`1<bool> _webviewReadyTask;
    private string _contentRootRelativeToAppRoot;
    [NullableAttribute("2")]
private protected CoreWebView2Environment _coreWebView2Environment;
    private BlazorWebViewHandler _blazorWebViewHandler;
    internal WebView2WebViewManager(WebView2 webview, IServiceProvider services, Dispatcher dispatcher, IFileProvider fileProvider, JSComponentConfigurationStore jsComponents, string contentRootRelativeToAppRoot, string hostPagePathWithinFileProvider, BlazorWebViewHandler blazorWebViewHandler, ILogger logger);
    private static WebView2WebViewManager();
    protected virtual void NavigateCore(Uri absoluteUri);
    protected virtual void SendMessage(string message);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.WebView2.WebView2WebViewManager/<TryInitializeWebView2>d__12")]
private Task`1<bool> TryInitializeWebView2();
    protected virtual Task HandleWebResourceRequest(CoreWebView2WebResourceRequestedEventArgs eventArgs);
    protected virtual void QueueBlazorStart();
    private void CoreWebView2_NavigationStarting(object sender, CoreWebView2NavigationStartingEventArgs args);
    private void CoreWebView2_NewWindowRequested(object sender, CoreWebView2NewWindowRequestedEventArgs args);
    private void LaunchUriInExternalBrowser(Uri uri);
    private protected static string GetHeaderString(IDictionary`2<string, string> headers);
    private void ApplyDefaultWebViewSettings(BlazorWebViewDeveloperTools devTools);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Microsoft.AspNetCore.Components.WebView.WebView2.WebView2WebViewManager/<<TryInitializeWebView2>b__12_0>d")]
[CompilerGeneratedAttribute]
private void <TryInitializeWebView2>b__12_0(CoreWebView2 s, CoreWebView2WebResourceRequestedEventArgs eventArgs);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <TryInitializeWebView2>b__12_1(CoreWebView2 s, CoreWebView2WebMessageReceivedEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.BlazorWebViewServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IMauiBlazorWebViewBuilder AddMauiBlazorWebView(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddBlazorWebViewDeveloperTools(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Maui.TaskExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Maui.TaskExtensions/<FireAndForget>d__0`1")]
[ExtensionAttribute]
public static void FireAndForget(Task`1<TResult> task, Action`1<Exception> errorCallback);
    [AsyncStateMachineAttribute("Microsoft.Maui.TaskExtensions/<FireAndForget>d__1")]
[ExtensionAttribute]
public static void FireAndForget(Task task, Action`1<Exception> errorCallback);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static void FireAndForget(Task task, ILogger logger, string callerName);
    [NullableContextAttribute("2")]
private static void Log(ILogger logger, Exception ex, string callerName);
    [AsyncStateMachineAttribute("Microsoft.Maui.TaskExtensions/<RunAndReport>d__4`1")]
[ExtensionAttribute]
public static void RunAndReport(TaskCompletionSource`1<T> request, Task`1<T> task);
    [AsyncStateMachineAttribute("Microsoft.Maui.TaskExtensions/<RunAndReport>d__5`1")]
[ExtensionAttribute]
public static void RunAndReport(TaskCompletionSource`1<T> request, IAsyncOperation`1<T> task);
}
