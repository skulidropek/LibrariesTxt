[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.DataProtection.StackExchangeRedis.RedisXmlRepository : object {
    private Func`1<IDatabase> _databaseFactory;
    private RedisKey _key;
    public RedisXmlRepository(Func`1<IDatabase> databaseFactory, RedisKey key);
    public sealed virtual IReadOnlyCollection`1<XElement> GetAllElements();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.DataProtection.StackExchangeRedis.RedisXmlRepository/<GetAllElementsCore>d__4")]
private IEnumerable`1<XElement> GetAllElementsCore();
    public sealed virtual void StoreElement(XElement element, string friendlyName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.DataProtection.StackExchangeRedisDataProtectionBuilderExtensions : object {
    private static string DataProtectionKeysName;
    [ExtensionAttribute]
public static IDataProtectionBuilder PersistKeysToStackExchangeRedis(IDataProtectionBuilder builder, Func`1<IDatabase> databaseFactory, RedisKey key);
    [ExtensionAttribute]
public static IDataProtectionBuilder PersistKeysToStackExchangeRedis(IDataProtectionBuilder builder, IConnectionMultiplexer connectionMultiplexer);
    [ExtensionAttribute]
public static IDataProtectionBuilder PersistKeysToStackExchangeRedis(IDataProtectionBuilder builder, IConnectionMultiplexer connectionMultiplexer, RedisKey key);
    private static IDataProtectionBuilder PersistKeysToStackExchangeRedisInternal(IDataProtectionBuilder builder, Func`1<IDatabase> databaseFactory, RedisKey key);
}
internal static class Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper : object {
    public static void ThrowIfNull(object argument, string paramName);
}
