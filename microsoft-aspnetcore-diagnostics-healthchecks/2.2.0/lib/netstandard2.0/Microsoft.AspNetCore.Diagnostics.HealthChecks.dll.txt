[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.HealthCheckApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, HealthCheckOptions options);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, int port);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, string port);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, int port, HealthCheckOptions options);
    [ExtensionAttribute]
public static IApplicationBuilder UseHealthChecks(IApplicationBuilder app, PathString path, string port, HealthCheckOptions options);
    private static void UseHealthChecksCore(IApplicationBuilder app, PathString path, Nullable`1<int> port, Object[] args);
}
public class Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckMiddleware : object {
    private RequestDelegate _next;
    private HealthCheckOptions _healthCheckOptions;
    private HealthCheckService _healthCheckService;
    public HealthCheckMiddleware(RequestDelegate next, IOptions`1<HealthCheckOptions> healthCheckOptions, HealthCheckService healthCheckService);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckMiddleware/<InvokeAsync>d__4")]
public Task InvokeAsync(HttpContext httpContext);
    private static IHealthCheck[] FilterHealthChecks(IReadOnlyDictionary`2<string, IHealthCheck> checks, ISet`1<string> names);
}
public class Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckOptions : object {
    [CompilerGeneratedAttribute]
private Func`2<HealthCheckRegistration, bool> <Predicate>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<HealthStatus, int> <ResultStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<HttpContext, HealthReport, Task> <ResponseWriter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCachingResponses>k__BackingField;
    public Func`2<HealthCheckRegistration, bool> Predicate { get; public set; }
    public IDictionary`2<HealthStatus, int> ResultStatusCodes { get; }
    public Func`3<HttpContext, HealthReport, Task> ResponseWriter { get; public set; }
    public bool AllowCachingResponses { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<HealthCheckRegistration, bool> get_Predicate();
    [CompilerGeneratedAttribute]
public void set_Predicate(Func`2<HealthCheckRegistration, bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<HealthStatus, int> get_ResultStatusCodes();
    [CompilerGeneratedAttribute]
public Func`3<HttpContext, HealthReport, Task> get_ResponseWriter();
    [CompilerGeneratedAttribute]
public void set_ResponseWriter(Func`3<HttpContext, HealthReport, Task> value);
    [CompilerGeneratedAttribute]
public bool get_AllowCachingResponses();
    [CompilerGeneratedAttribute]
public void set_AllowCachingResponses(bool value);
}
internal static class Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckResponseWriters : object {
    public static Task WriteMinimalPlaintext(HttpContext httpContext, HealthReport result);
}
