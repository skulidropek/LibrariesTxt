internal static class Guard : object {
    public static void ArgumentNotNull(string argumentName, object value);
    public static void ArgumentNotNullOrEmpty(string argumentName, string value);
    public static void ArgumentNotNullOrEmpty(string argumentName, IReadOnlyCollection`1<T> items);
    public static void ArgumentValid(bool valid, string argumentName, string exceptionMessage);
    public static void OperationValid(bool valid, string exceptionMessage);
}
public class Microsoft.AspNetCore.HealthChecks.HealthCheckMiddleware : object {
    private RequestDelegate _next;
    private string _path;
    private Nullable`1<int> _port;
    private IHealthCheckService _service;
    private TimeSpan _timeout;
    public HealthCheckMiddleware(RequestDelegate next, IHealthCheckService service, int port, TimeSpan timeout);
    public HealthCheckMiddleware(RequestDelegate next, IHealthCheckService service, string path, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.HealthChecks.HealthCheckMiddleware/<Invoke>d__7")]
public Task Invoke(HttpContext context);
    private bool IsHealthCheckRequest(HttpContext context);
}
public class Microsoft.AspNetCore.HealthChecks.HealthCheckStartupFilter : object {
    private string _path;
    private Nullable`1<int> _port;
    private TimeSpan _timeout;
    public HealthCheckStartupFilter(int port, TimeSpan timeout);
    public HealthCheckStartupFilter(string path, TimeSpan timeout);
    public sealed virtual Action`1<IApplicationBuilder> Configure(Action`1<IApplicationBuilder> next);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Hosting.HealthCheckWebHostBuilderExtension : object {
    public static TimeSpan DefaultTimeout;
    private static HealthCheckWebHostBuilderExtension();
    [ExtensionAttribute]
public static IWebHostBuilder UseHealthChecks(IWebHostBuilder builder, int port);
    [ExtensionAttribute]
public static IWebHostBuilder UseHealthChecks(IWebHostBuilder builder, int port, TimeSpan timeout);
    [ExtensionAttribute]
public static IWebHostBuilder UseHealthChecks(IWebHostBuilder builder, string path);
    [ExtensionAttribute]
public static IWebHostBuilder UseHealthChecks(IWebHostBuilder builder, string path, TimeSpan timeout);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Hosting.HealthCheckWebHostExtensions : object {
    private static int DEFAULT_TIMEOUT_SECONDS;
    [ExtensionAttribute]
public static void RunWhenHealthy(IWebHost webHost);
    [ExtensionAttribute]
public static void RunWhenHealthy(IWebHost webHost, TimeSpan timeout);
}
