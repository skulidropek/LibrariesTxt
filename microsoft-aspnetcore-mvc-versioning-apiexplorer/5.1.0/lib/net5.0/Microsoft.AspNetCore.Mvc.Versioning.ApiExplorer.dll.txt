[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[CLSCompliantAttribute("False")]
public static class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionExtensions : object {
    [ExtensionAttribute]
public static ApiVersion GetApiVersion(ApiDescription apiDescription);
    [ExtensionAttribute]
public static bool IsDeprecated(ApiDescription apiDescription);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void SetApiVersion(ApiDescription apiDescription, ApiVersion apiVersion);
    [ExtensionAttribute]
public static bool TryUpdateRelativePathAndRemoveApiVersionParameter(ApiDescription apiDescription, ApiExplorerOptions options);
    [ExtensionAttribute]
public static ApiDescription Clone(ApiDescription apiDescription);
    [ExtensionAttribute]
internal static ApiRequestFormat Clone(ApiRequestFormat requestFormat);
    [ExtensionAttribute]
internal static ApiResponseType Clone(ApiResponseType responseType);
    [ExtensionAttribute]
private static ApiResponseFormat Clone(ApiResponseFormat responseFormat);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptions : object {
    [NullableAttribute("2")]
private IApiVersionParameterSource parameterSource;
    [CompilerGeneratedAttribute]
private ApiVersion <DefaultApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AssumeDefaultVersionWhenUnspecified>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupNameFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubstitutionFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SubstituteApiVersionInUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultApiVersionParameterDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AddApiVersionParametersWhenVersionNeutral>k__BackingField;
    public ApiVersion DefaultApiVersion { get; public set; }
    public bool AssumeDefaultVersionWhenUnspecified { get; public set; }
    public IApiVersionParameterSource ApiVersionParameterSource { get; public set; }
    public string GroupNameFormat { get; public set; }
    public string SubstitutionFormat { get; public set; }
    public bool SubstituteApiVersionInUrl { get; public set; }
    public string DefaultApiVersionParameterDescription { get; public set; }
    public bool AddApiVersionParametersWhenVersionNeutral { get; public set; }
    [CompilerGeneratedAttribute]
public ApiVersion get_DefaultApiVersion();
    [CompilerGeneratedAttribute]
public void set_DefaultApiVersion(ApiVersion value);
    [CompilerGeneratedAttribute]
public bool get_AssumeDefaultVersionWhenUnspecified();
    [CompilerGeneratedAttribute]
public void set_AssumeDefaultVersionWhenUnspecified(bool value);
    public IApiVersionParameterSource get_ApiVersionParameterSource();
    public void set_ApiVersionParameterSource(IApiVersionParameterSource value);
    [CompilerGeneratedAttribute]
public string get_GroupNameFormat();
    [CompilerGeneratedAttribute]
public void set_GroupNameFormat(string value);
    [CompilerGeneratedAttribute]
public string get_SubstitutionFormat();
    [CompilerGeneratedAttribute]
public void set_SubstitutionFormat(string value);
    [CompilerGeneratedAttribute]
public bool get_SubstituteApiVersionInUrl();
    [CompilerGeneratedAttribute]
public void set_SubstituteApiVersionInUrl(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultApiVersionParameterDescription();
    [CompilerGeneratedAttribute]
public void set_DefaultApiVersionParameterDescription(string value);
    [CompilerGeneratedAttribute]
public bool get_AddApiVersionParametersWhenVersionNeutral();
    [CompilerGeneratedAttribute]
public void set_AddApiVersionParametersWhenVersionNeutral(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptionsFactory`1 : object {
    private IOptions`1<ApiVersioningOptions> optionsHolder;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IConfigureOptions`1<T>> <Setups>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IPostConfigureOptions`1<T>> <PostConfigures>k__BackingField;
    protected ApiVersioningOptions Options { get; }
    protected IEnumerable`1<IConfigureOptions`1<T>> Setups { get; }
    protected IEnumerable`1<IPostConfigureOptions`1<T>> PostConfigures { get; }
    public ApiExplorerOptionsFactory`1(IOptions`1<ApiVersioningOptions> options, IEnumerable`1<IConfigureOptions`1<T>> setups, IEnumerable`1<IPostConfigureOptions`1<T>> postConfigures);
    protected ApiVersioningOptions get_Options();
    [CompilerGeneratedAttribute]
protected IEnumerable`1<IConfigureOptions`1<T>> get_Setups();
    [CompilerGeneratedAttribute]
protected IEnumerable`1<IPostConfigureOptions`1<T>> get_PostConfigures();
    public virtual T Create(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiVersionDescription : object {
    [CompilerGeneratedAttribute]
private ApiVersion <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeprecated>k__BackingField;
    public ApiVersion ApiVersion { get; }
    public string GroupName { get; }
    public bool IsDeprecated { get; }
    public ApiVersionDescription(ApiVersion apiVersion, string groupName, bool deprecated);
    [CompilerGeneratedAttribute]
public ApiVersion get_ApiVersion();
    [CompilerGeneratedAttribute]
public string get_GroupName();
    [CompilerGeneratedAttribute]
public bool get_IsDeprecated();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiVersionModelMetadata : ModelMetadata {
    private ModelMetadata inner;
    private string description;
    public IReadOnlyDictionary`2<object, object> AdditionalValues { get; }
    public ModelPropertyCollection Properties { get; }
    public string BinderModelName { get; }
    public Type BinderType { get; }
    public BindingSource BindingSource { get; }
    public bool ConvertEmptyStringToNull { get; }
    public string DataTypeName { get; }
    public string Description { get; }
    public string DisplayFormatString { get; }
    public string DisplayName { get; }
    public string EditFormatString { get; }
    [NullableAttribute("2")]
public ModelMetadata ElementMetadata { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<EnumGroupAndName, string>> EnumGroupedDisplayNamesAndValues { get; }
    public IReadOnlyDictionary`2<string, string> EnumNamesAndValues { get; }
    public bool HasNonDefaultEditFormat { get; }
    public bool HtmlEncode { get; }
    public bool HideSurroundingHtml { get; }
    public bool IsBindingAllowed { get; }
    public bool IsBindingRequired { get; }
    public bool IsEnum { get; }
    public bool IsFlagsEnum { get; }
    public bool IsReadOnly { get; }
    public bool IsRequired { get; }
    public ModelBindingMessageProvider ModelBindingMessageProvider { get; }
    public int Order { get; }
    public string Placeholder { get; }
    public string NullDisplayText { get; }
    public IPropertyFilterProvider PropertyFilterProvider { get; }
    public bool ShowForDisplay { get; }
    public bool ShowForEdit { get; }
    public string SimpleDisplayProperty { get; }
    public string TemplateHint { get; }
    public bool ValidateChildren { get; }
    public IReadOnlyList`1<object> ValidatorMetadata { get; }
    public Func`2<object, object> PropertyGetter { get; }
    public Action`2<object, object> PropertySetter { get; }
    public ApiVersionModelMetadata(IModelMetadataProvider modelMetadataProvider, string description);
    public virtual IReadOnlyDictionary`2<object, object> get_AdditionalValues();
    public virtual ModelPropertyCollection get_Properties();
    public virtual string get_BinderModelName();
    public virtual Type get_BinderType();
    public virtual BindingSource get_BindingSource();
    public virtual bool get_ConvertEmptyStringToNull();
    public virtual string get_DataTypeName();
    public virtual string get_Description();
    public virtual string get_DisplayFormatString();
    public virtual string get_DisplayName();
    public virtual string get_EditFormatString();
    [NullableContextAttribute("2")]
public virtual ModelMetadata get_ElementMetadata();
    public virtual IEnumerable`1<KeyValuePair`2<EnumGroupAndName, string>> get_EnumGroupedDisplayNamesAndValues();
    public virtual IReadOnlyDictionary`2<string, string> get_EnumNamesAndValues();
    public virtual bool get_HasNonDefaultEditFormat();
    public virtual bool get_HtmlEncode();
    public virtual bool get_HideSurroundingHtml();
    public virtual bool get_IsBindingAllowed();
    public virtual bool get_IsBindingRequired();
    public virtual bool get_IsEnum();
    public virtual bool get_IsFlagsEnum();
    public virtual bool get_IsReadOnly();
    public virtual bool get_IsRequired();
    public virtual ModelBindingMessageProvider get_ModelBindingMessageProvider();
    public virtual int get_Order();
    public virtual string get_Placeholder();
    public virtual string get_NullDisplayText();
    public virtual IPropertyFilterProvider get_PropertyFilterProvider();
    public virtual bool get_ShowForDisplay();
    public virtual bool get_ShowForEdit();
    public virtual string get_SimpleDisplayProperty();
    public virtual string get_TemplateHint();
    public virtual bool get_ValidateChildren();
    public virtual IReadOnlyList`1<object> get_ValidatorMetadata();
    public virtual Func`2<object, object> get_PropertyGetter();
    public virtual Action`2<object, object> get_PropertySetter();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiVersionParameterDescriptionContext : object {
    private List`1<ApiParameterDescription> parameters;
    private Lazy`1<bool> versionNeutral;
    private bool optional;
    [CompilerGeneratedAttribute]
private ApiDescription <ApiDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiVersion <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelMetadata <ModelMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiExplorerOptions <Options>k__BackingField;
    [CLSCompliantAttribute("False")]
protected ApiDescription ApiDescription { get; }
    protected ApiVersion ApiVersion { get; }
    protected bool IsApiVersionNeutral { get; }
    [CLSCompliantAttribute("False")]
protected ModelMetadata ModelMetadata { get; }
    protected ApiExplorerOptions Options { get; }
    private bool HasPathParameter { get; }
    [CLSCompliantAttribute("False")]
public ApiVersionParameterDescriptionContext(ApiDescription apiDescription, ApiVersion apiVersion, ModelMetadata modelMetadata, ApiExplorerOptions options);
    [CompilerGeneratedAttribute]
protected ApiDescription get_ApiDescription();
    [CompilerGeneratedAttribute]
protected ApiVersion get_ApiVersion();
    protected bool get_IsApiVersionNeutral();
    [CompilerGeneratedAttribute]
protected ModelMetadata get_ModelMetadata();
    [CompilerGeneratedAttribute]
protected ApiExplorerOptions get_Options();
    private bool get_HasPathParameter();
    public virtual void AddParameter(string name, ApiVersionParameterLocation location);
    protected virtual void AddQueryString(string name);
    protected virtual void AddHeader(string name);
    protected virtual void UpdateUrlSegment();
    protected virtual void AddMediaTypeParameter(string name);
    private ApiParameterDescription NewApiVersionParameter(string name, BindingSource source);
    private void RemoveAllParametersExcept(ApiParameterDescription parameter);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__3_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.DefaultApiVersionDescriptionProvider : object {
    private Lazy`1<IReadOnlyList`1<ApiVersionDescription>> apiVersionDescriptions;
    private IOptions`1<ApiExplorerOptions> options;
    protected ApiExplorerOptions Options { get; }
    public IReadOnlyList`1<ApiVersionDescription> ApiVersionDescriptions { get; }
    public DefaultApiVersionDescriptionProvider(IActionDescriptorCollectionProvider actionDescriptorCollectionProvider, IOptions`1<ApiExplorerOptions> apiExplorerOptions);
    protected ApiExplorerOptions get_Options();
    public sealed virtual IReadOnlyList`1<ApiVersionDescription> get_ApiVersionDescriptions();
    public virtual bool IsDeprecated(ActionDescriptor actionDescriptor, ApiVersion apiVersion);
    protected virtual IReadOnlyList`1<ApiVersionDescription> EnumerateApiVersions(IActionDescriptorCollectionProvider actionDescriptorCollectionProvider);
    private void BucketizeApiVersions(IReadOnlyList`1<ActionDescriptor> actions, ISet`1<ApiVersion> supported, ISet`1<ApiVersion> deprecated);
    private void AppendDescriptions(ICollection`1<ApiVersionDescription> descriptions, IEnumerable`1<ApiVersion> versions, bool deprecated);
}
[NullableContextAttribute("1")]
[CLSCompliantAttribute("False")]
public interface Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider {
    public IReadOnlyList`1<ApiVersionDescription> ApiVersionDescriptions { get; }
    public abstract virtual IReadOnlyList`1<ApiVersionDescription> get_ApiVersionDescriptions();
    public abstract virtual bool IsDeprecated(ActionDescriptor actionDescriptor, ApiVersion apiVersion);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.AspNetCore.Mvc.ApiExplorer.SR : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ApiVersionDisplayName { get; }
    internal static string DefaultApiVersionParamDesc { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ApiVersionDisplayName();
    internal static string get_DefaultApiVersionParamDesc();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class Microsoft.AspNetCore.Mvc.ApiExplorer.VersionedApiDescriptionProvider : object {
    private IOptions`1<ApiExplorerOptions> options;
    private Lazy`1<ModelMetadata> modelMetadata;
    [CompilerGeneratedAttribute]
private IModelMetadataProvider <MetadataProvider>k__BackingField;
    protected IModelMetadataProvider MetadataProvider { get; }
    protected ApiExplorerOptions Options { get; }
    public int Order { get; }
    public VersionedApiDescriptionProvider(IModelMetadataProvider metadataProvider, IOptions`1<ApiExplorerOptions> options);
    [CompilerGeneratedAttribute]
protected IModelMetadataProvider get_MetadataProvider();
    protected ApiExplorerOptions get_Options();
    public virtual int get_Order();
    protected virtual bool ShouldExploreAction(ActionDescriptor actionDescriptor, ApiVersion apiVersion);
    protected virtual void PopulateApiVersionParameters(ApiDescription apiDescription, ApiVersion apiVersion);
    public virtual void OnProvidersExecuted(ApiDescriptionProviderContext context);
    public virtual void OnProvidersExecuting(ApiDescriptionProviderContext context);
    private IEnumerable`1<ApiVersion> FlattenApiVersions(IEnumerable`1<ApiDescription> descriptions);
    private ModelMetadata NewModelMetadata();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[CLSCompliantAttribute("False")]
public static class Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddVersionedApiExplorer(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddVersionedApiExplorer(IServiceCollection services, Action`1<ApiExplorerOptions> setupAction);
    private static void AddApiExplorerServices(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.StringExtensions : object {
    [ExtensionAttribute]
internal static string FormatInvariant(string format, Object[] args);
    [ExtensionAttribute]
internal static string FormatDefault(string format, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.TypeExtensions : object {
    private static Dictionary`2<Type, string> BuiltInTypeNames;
    private static TypeExtensions();
    [ExtensionAttribute]
internal static string GetTypeDisplayName(Type type, bool fullName, bool includeGenericParameterNames);
    private static void ProcessType(StringBuilder builder, Type type, DisplayNameOptions options);
    private static void ProcessArrayType(StringBuilder builder, Type type, DisplayNameOptions options);
    private static void ProcessGenericType(StringBuilder builder, Type type, Type[] genericArguments, int length, DisplayNameOptions options);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
