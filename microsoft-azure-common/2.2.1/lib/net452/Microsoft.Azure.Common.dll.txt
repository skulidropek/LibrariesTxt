public class Microsoft.Azure.AzureOperationResponse : HttpOperationResponse {
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    public string RequestId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
}
public class Microsoft.Azure.CertificateCloudCredentials : SubscriptionCloudCredentials {
    private string _subscriptionId;
    [CompilerGeneratedAttribute]
private X509Certificate2 <ManagementCertificate>k__BackingField;
    public string SubscriptionId { get; }
    public X509Certificate2 ManagementCertificate { get; private set; }
    public CertificateCloudCredentials(string subscriptionId, X509Certificate2 managementCertificate);
    public virtual string get_SubscriptionId();
    [CompilerGeneratedAttribute]
public X509Certificate2 get_ManagementCertificate();
    [CompilerGeneratedAttribute]
private void set_ManagementCertificate(X509Certificate2 value);
    [ObsoleteAttribute("Deprecated method. Use public constructor instead.")]
public static CertificateCloudCredentials Create(IDictionary`2<string, object> settings);
    public virtual void InitializeServiceClient(ServiceClient`1<T> client);
    public virtual Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private static X509Certificate2 GetCertificate(IDictionary`2<string, object> parameters, string name, bool isRequired);
    private static X509Certificate2 GetCertificate(Byte[] bytes);
    private static X509Certificate2 GetCertificateFromStore(string thumbprint, StoreLocation location);
}
public class Microsoft.Azure.ClientRequestTrackingHandler : MessageProcessingHandler {
    [CompilerGeneratedAttribute]
private string <TrackingId>k__BackingField;
    public string TrackingId { get; private set; }
    public ClientRequestTrackingHandler(string trackingId);
    [CompilerGeneratedAttribute]
public string get_TrackingId();
    [CompilerGeneratedAttribute]
private void set_TrackingId(string value);
    protected virtual HttpRequestMessage ProcessRequest(HttpRequestMessage request, CancellationToken cancellationToken);
    protected virtual HttpResponseMessage ProcessResponse(HttpResponseMessage response, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Common.OData.FilterParameterAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    public string Name { get; public set; }
    public string Format { get; public set; }
    public FilterParameterAttribute(string name);
    public FilterParameterAttribute(string name, string format);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
}
public class Microsoft.Azure.Common.OData.FilterString : object {
    public static string Generate(Expression`1<Func`2<T, bool>> filter);
}
public class Microsoft.Azure.Common.OData.UrlExpressionVisitor : ExpressionVisitor {
    private static string DefaultDateTimeFormat;
    private StringBuilder _generatedUrl;
    private PropertyInfo _currentProperty;
    protected virtual Expression VisitBinary(BinaryExpression node);
    protected virtual Expression VisitUnary(UnaryExpression node);
    protected virtual Expression VisitConditional(ConditionalExpression node);
    protected virtual Expression VisitNew(NewExpression node);
    protected virtual Expression VisitConstant(ConstantExpression node);
    protected virtual Expression VisitMember(MemberExpression node);
    protected virtual Expression VisitMethodCall(MethodCallExpression node);
    private void closeUnaryBooleanOperator();
    private void PrintConstant(object val);
    private string GetPropertyName(PropertyInfo property);
    private string GetPropertyFormat(PropertyInfo property);
    public virtual string ToString();
    private string GetUrlName(ExpressionType exprType);
}
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public class Microsoft.Azure.Common.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
public static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
public static CultureInfo Culture { get; public set; }
    public static string ArgumentCannotBeEmpty { get; }
    public static string ArgumentCannotBeGreaterThanBaseline { get; }
    public static string ArgumentCannotBeNegative { get; }
    public static string CertificateCloudCredentials_InitializeServiceClient_NoWebRequestHandler { get; }
    public static string ConfigurationHelper_CreateCouldNotConvertException { get; }
    public static string ConfigurationHelper_CreateFromSettings_CreateSettingsFailedException { get; }
    public static string ConfigurationHelper_CreateFromSettings_NoConnectionSettingsFound { get; }
    public static string ConfigurationHelper_GetCredentials_NotFound { get; }
    public static string ConfigurationHelper_GetParameter_NotFound { get; }
    public static string DefaultRetryStrategyMappingNotFound { get; }
    public static string DefaultRetryStrategyNotFound { get; }
    public static string ExceptionRetryHandlerMissing { get; }
    public static string ExceptionRetryManagerAlreadySet { get; }
    public static string ExceptionRetryManagerNotSet { get; }
    public static string ResponseStatusCodeError { get; }
    public static string RetryLimitExceeded { get; }
    public static string RetryStrategyNotFound { get; }
    public static string StringCannotBeEmpty { get; }
    public static string TaskCannotBeNull { get; }
    public static string TaskMustBeScheduled { get; }
    public static ResourceManager get_ResourceManager();
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_ArgumentCannotBeEmpty();
    public static string get_ArgumentCannotBeGreaterThanBaseline();
    public static string get_ArgumentCannotBeNegative();
    public static string get_CertificateCloudCredentials_InitializeServiceClient_NoWebRequestHandler();
    public static string get_ConfigurationHelper_CreateCouldNotConvertException();
    public static string get_ConfigurationHelper_CreateFromSettings_CreateSettingsFailedException();
    public static string get_ConfigurationHelper_CreateFromSettings_NoConnectionSettingsFound();
    public static string get_ConfigurationHelper_GetCredentials_NotFound();
    public static string get_ConfigurationHelper_GetParameter_NotFound();
    public static string get_DefaultRetryStrategyMappingNotFound();
    public static string get_DefaultRetryStrategyNotFound();
    public static string get_ExceptionRetryHandlerMissing();
    public static string get_ExceptionRetryManagerAlreadySet();
    public static string get_ExceptionRetryManagerNotSet();
    public static string get_ResponseStatusCodeError();
    public static string get_RetryLimitExceeded();
    public static string get_RetryStrategyNotFound();
    public static string get_StringCannotBeEmpty();
    public static string get_TaskCannotBeNull();
    public static string get_TaskMustBeScheduled();
}
public enum Microsoft.Azure.OperationStatus : Enum {
    public int value__;
    public static OperationStatus InProgress;
    public static OperationStatus Succeeded;
    public static OperationStatus Failed;
}
public class Microsoft.Azure.OperationStatusResponse : AzureOperationResponse {
    private ErrorDetails _error;
    private HttpStatusCode _httpStatusCode;
    private string _id;
    private OperationStatus _status;
    public ErrorDetails Error { get; public set; }
    public HttpStatusCode HttpStatusCode { get; public set; }
    public string Id { get; public set; }
    public OperationStatus Status { get; public set; }
    public ErrorDetails get_Error();
    public void set_Error(ErrorDetails value);
    public HttpStatusCode get_HttpStatusCode();
    public void set_HttpStatusCode(HttpStatusCode value);
    public string get_Id();
    public void set_Id(string value);
    public OperationStatus get_Status();
    public void set_Status(OperationStatus value);
}
public class Microsoft.Azure.ResourceBase : object {
    private string _location;
    private IDictionary`2<string, string> _tags;
    public string Location { get; public set; }
    public IDictionary`2<string, string> Tags { get; public set; }
    public ResourceBase(string location);
    public string get_Location();
    public void set_Location(string value);
    public IDictionary`2<string, string> get_Tags();
    public void set_Tags(IDictionary`2<string, string> value);
}
public class Microsoft.Azure.ResourceBaseExtended : ResourceBase {
    private string _id;
    private string _name;
    private string _type;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Type { get; public set; }
    public ResourceBaseExtended(string location);
    public string get_Id();
    public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Type();
    public void set_Type(string value);
}
public class Microsoft.Azure.ResourceIdentity : object {
    private string _parentResourcePath;
    private string _resourceName;
    private string _resourceProviderApiVersion;
    private string _resourceProviderNamespace;
    private string _resourceType;
    public string ParentResourcePath { get; public set; }
    public string ResourceName { get; public set; }
    public string ResourceProviderApiVersion { get; public set; }
    public string ResourceProviderNamespace { get; public set; }
    public string ResourceType { get; public set; }
    public ResourceIdentity(string name, string resourceType, string apiVersion);
    public string get_ParentResourcePath();
    public void set_ParentResourcePath(string value);
    public string get_ResourceName();
    public void set_ResourceName(string value);
    public string get_ResourceProviderApiVersion();
    public void set_ResourceProviderApiVersion(string value);
    public string get_ResourceProviderNamespace();
    public void set_ResourceProviderNamespace(string value);
    public string get_ResourceType();
    public void set_ResourceType(string value);
    public static string GetProviderFromResourceType(string resourceType);
    public static string GetTypeFromResourceType(string resourceType);
}
public abstract class Microsoft.Azure.SubscriptionCloudCredentials : CloudCredentials {
    public string SubscriptionId { get; }
    public abstract virtual string get_SubscriptionId();
}
public class Microsoft.Azure.TokenCloudCredentials : SubscriptionCloudCredentials {
    private string _subscriptionId;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string SubscriptionId { get; }
    public string Token { get; public set; }
    public TokenCloudCredentials(string subscriptionId, string token);
    public TokenCloudCredentials(string token);
    public virtual string get_SubscriptionId();
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [ObsoleteAttribute("Deprecated method. Use public constructor instead.")]
public static TokenCloudCredentials Create(IDictionary`2<string, object> settings);
    public virtual Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
