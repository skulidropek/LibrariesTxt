internal class Microsoft.Azure.Amqp.Transport.LegacyClientWebSocketTransport : TransportBase {
    private static string ClientWebSocketTransportReadBufferTooSmall;
    private static int MaxReadBufferSize;
    private static AsyncCallback s_onWriteComplete;
    private IotHubClientWebSocket _webSocket;
    private EndPoint _localEndPoint;
    private EndPoint _remoteEndPoint;
    private TimeSpan _operationTimeout;
    private int _asyncReadBufferSize;
    private Byte[] _asyncReadBuffer;
    private bool _disposed;
    private int _asyncReadBufferOffset;
    private int _remainingBytes;
    public string LocalEndPoint { get; }
    public string RemoteEndPoint { get; }
    public bool RequiresCompleteFrames { get; }
    public bool IsSecure { get; }
    public LegacyClientWebSocketTransport(IotHubClientWebSocket webSocket, TimeSpan operationTimeout, EndPoint localEndpoint, EndPoint remoteEndpoint);
    private static LegacyClientWebSocketTransport();
    public virtual string get_LocalEndPoint();
    public virtual string get_RemoteEndPoint();
    public virtual bool get_RequiresCompleteFrames();
    public virtual bool get_IsSecure();
    public virtual void SetMonitor(ITransportMonitor usageMeter);
    public virtual bool WriteAsync(TransportAsyncCallbackArgs args);
    [AsyncStateMachineAttribute("Microsoft.Azure.Amqp.Transport.LegacyClientWebSocketTransport/<WriteAsyncCore>d__23")]
private Task WriteAsyncCore(TransportAsyncCallbackArgs args);
    [AsyncStateMachineAttribute("Microsoft.Azure.Amqp.Transport.LegacyClientWebSocketTransport/<ReadAsyncCore>d__24")]
private Task`1<int> ReadAsyncCore();
    public virtual bool ReadAsync(TransportAsyncCallbackArgs args);
    protected virtual bool OpenInternal();
    protected virtual bool CloseInternal();
    [AsyncStateMachineAttribute("Microsoft.Azure.Amqp.Transport.LegacyClientWebSocketTransport/<CloseInternalAsync>d__28")]
private Task CloseInternalAsync();
    protected virtual void AbortInternal();
    private void OnReadComplete(IAsyncResult result);
    private bool ReadTaskDone(Task`1<int> taskResult, TransportAsyncCallbackArgs args);
    private void TransferData(int bytesRead, TransportAsyncCallbackArgs args);
    private static void OnWriteComplete(IAsyncResult result);
    private static bool WriteTaskDone(Task taskResult, TransportAsyncCallbackArgs args);
    private void ThrowIfNotOpen();
}
internal static class Microsoft.Azure.Amqp.Transport.WebSocketConstants : object {
    internal static string Scheme;
    internal static string UriSuffix;
    internal static string SecurePort;
    internal static string Version;
}
internal class Microsoft.Azure.Devices.AmqpClientHelper : object {
    public static Exception ToIotHubClientContract(Exception exception);
    internal static string GetReceivingPath(EndpointKind endpointKind);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.AmqpClientHelper/<DisposeMessageAsync>d__3")]
internal static Task DisposeMessageAsync(FaultTolerantAmqpObject`1<ReceivingAmqpLink> faultTolerantReceivingLink, string lockToken, Outcome outcome, bool batchable);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.AmqpClientHelper/<DisposeMessageAsync>d__4")]
internal static Task DisposeMessageAsync(FaultTolerantAmqpObject`1<ReceivingAmqpLink> faultTolerantReceivingLink, string lockToken, Outcome outcome, bool batchable, CancellationToken cancellationToken);
    public static void ValidateContentType(AmqpMessage amqpMessage, string expectedContentType);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.AmqpClientHelper/<GetObjectFromAmqpMessageAsync>d__6`1")]
public static Task`1<T> GetObjectFromAmqpMessageAsync(AmqpMessage amqpMessage);
}
internal class Microsoft.Azure.Devices.AmqpFeedbackReceiver : FeedbackReceiver`1<FeedbackBatch> {
    private FaultTolerantAmqpObject`1<ReceivingAmqpLink> _faultTolerantReceivingLink;
    private string _receivingPath;
    [CompilerGeneratedAttribute]
private TimeSpan <OpenTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <OperationTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private IotHubConnection <Connection>k__BackingField;
    public TimeSpan OpenTimeout { get; private set; }
    public TimeSpan OperationTimeout { get; private set; }
    public IotHubConnection Connection { get; private set; }
    public AmqpFeedbackReceiver(IotHubConnection iotHubConnection);
    [CompilerGeneratedAttribute]
public TimeSpan get_OpenTimeout();
    [CompilerGeneratedAttribute]
private void set_OpenTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_OperationTimeout();
    [CompilerGeneratedAttribute]
private void set_OperationTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public IotHubConnection get_Connection();
    [CompilerGeneratedAttribute]
private void set_Connection(IotHubConnection value);
    public Task OpenAsync();
    public Task CloseAsync();
    [ObsoleteAttribute("Use ReceiveAsync(CancellationToken cancellationToken).")]
public virtual Task`1<FeedbackBatch> ReceiveAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.AmqpFeedbackReceiver/<ReceiveAsync>d__18")]
[ObsoleteAttribute("Use ReceiveAsync(CancellationToken cancellationToken).")]
public virtual Task`1<FeedbackBatch> ReceiveAsync(TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.AmqpFeedbackReceiver/<ReceiveAsync>d__19")]
public virtual Task`1<FeedbackBatch> ReceiveAsync(CancellationToken cancellationToken);
    private Task`1<ReceivingAmqpLink> CreateReceivingLinkAsync(TimeSpan timeout);
    [ObsoleteAttribute("Use CompleteAsync(FeeddbackBatch feedback, CancellationToken cancellationToken).")]
public virtual Task CompleteAsync(FeedbackBatch feedback);
    public virtual Task CompleteAsync(FeedbackBatch feedback, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use AbandonAsync(FeedbackBatch feedback, CancellationToken cancellationToken).")]
public virtual Task AbandonAsync(FeedbackBatch feedback);
    public virtual Task AbandonAsync(FeedbackBatch feedback, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
}
internal class Microsoft.Azure.Devices.AmqpFileNotificationReceiver : FileNotificationReceiver`1<FileNotification> {
    private FaultTolerantAmqpObject`1<ReceivingAmqpLink> _faultTolerantReceivingLink;
    private string _receivingPath;
    [CompilerGeneratedAttribute]
private TimeSpan <OpenTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <OperationTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private IotHubConnection <Connection>k__BackingField;
    public TimeSpan OpenTimeout { get; }
    public TimeSpan OperationTimeout { get; }
    public IotHubConnection Connection { get; }
    public AmqpFileNotificationReceiver(IotHubConnection iotHubConnection);
    [CompilerGeneratedAttribute]
public TimeSpan get_OpenTimeout();
    [CompilerGeneratedAttribute]
public TimeSpan get_OperationTimeout();
    [CompilerGeneratedAttribute]
public IotHubConnection get_Connection();
    public Task OpenAsync();
    public Task CloseAsync();
    [ObsoleteAttribute("Use ReceiveAsync(CancellationToken cancellationToken).")]
public virtual Task`1<FileNotification> ReceiveAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.AmqpFileNotificationReceiver/<ReceiveAsync>d__15")]
[ObsoleteAttribute("Use ReceiveAsync(CancellationToken cancellationToken).")]
public virtual Task`1<FileNotification> ReceiveAsync(TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.AmqpFileNotificationReceiver/<ReceiveAsync>d__16")]
public virtual Task`1<FileNotification> ReceiveAsync(CancellationToken cancellationToken);
    private Task`1<ReceivingAmqpLink> CreateReceivingLinkAsync(TimeSpan timeout);
    [ObsoleteAttribute("Use CompleteAsync(FileNotification fileNotification, CancellationToken cancellationToken).")]
public virtual Task CompleteAsync(FileNotification fileNotification);
    public virtual Task CompleteAsync(FileNotification fileNotification, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use AbandonAsync(FileNotification fileNotification, CancellationToken cancellationToken).")]
public virtual Task AbandonAsync(FileNotification fileNotification);
    public virtual Task AbandonAsync(FileNotification fileNotification, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
}
internal class Microsoft.Azure.Devices.AmqpTransportLog : AmqpTrace {
    public virtual void AmqpAbortThrowingException(string exception);
    public virtual void AmqpAddSession(object source, object session, ushort localChannel, ushort remoteChannel);
    public virtual void AmqpAttachLink(object connection, object session, object link, UInt32 localHandle, UInt32 remoteHandle, string linkName, string role, object source, object target);
    public virtual void AmqpCacheMessage(object source, UInt32 deliveryId, int count, bool isPrefecthingBySize, long totalCacheSizeInBytes, UInt32 totalLinkCredit, UInt32 linkCredit);
    public virtual void AmqpCloseConnection(object source, object connection, bool abort);
    public virtual void AmqpDeliveryNotFound(object source, string deliveryTag);
    public virtual void AmqpDispose(object source, UInt32 deliveryId, bool settled, object state);
    public virtual void AmqpDynamicBufferSizeChange(object source, string type, int oldSize, int newSize);
    public virtual void AmqpHandleException(Exception exception, string traceInfo);
    public virtual void AmqpInsecureTransport(object source, object transport, bool isSecure, bool isAuthenticated);
    public virtual void AmqpIoEvent(object source, int ioEvent, long queueSize);
    public virtual void AmqpLinkDetach(object source, string name, UInt32 handle, string action, string error);
    public virtual void AmqpListenSocketAcceptError(object source, bool willRetry, string error);
    public virtual void AmqpLogError(object source, string operation, string message);
    public virtual void AmqpLogOperationInformational(object source, TraceOperation operation, object detail);
    public virtual void AmqpLogOperationVerbose(object source, TraceOperation operation, object detail);
    public virtual void AmqpMissingHandle(object source, string type, UInt32 handle);
    public virtual void AmqpOpenConnection(object source, object connection);
    public virtual void AmqpOpenEntityFailed(object source, object obj, string name, string entityName, string error);
    public virtual void AmqpOpenEntitySucceeded(object source, object obj, string name, string entityName);
    public virtual void AmqpReceiveMessage(object source, UInt32 deliveryId, int transferCount);
    public virtual void AmqpRemoveLink(object connection, object session, object link, UInt32 localHandle, UInt32 remoteHandle, string linkName);
    public virtual void AmqpRemoveSession(object source, object session, ushort localChannel, ushort remoteChannel);
    public virtual void AmqpSessionWindowClosed(object source, int nextId);
    public virtual void AmqpStateTransition(object source, string operation, object fromState, object toState);
    public virtual void AmqpUpgradeTransport(object source, object from, object to);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Azure.Devices.ApiResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentMustBeNonNegative { get; }
    internal static string ArgumentMustBePositive { get; }
    internal static string ConnectionStringIsNotWellFormed { get; }
    internal static string DeviceAuthenticationInvalid { get; }
    internal static string DeviceIdInvalid { get; }
    internal static string DeviceIdNotSet { get; }
    internal static string DeviceJobParametersNullOrEmptyDeviceList { get; }
    internal static string DeviceJobParametersNullOrEmptyDeviceListEntries { get; }
    internal static string DeviceKeysInvalid { get; }
    internal static string ETagNotSetWhileDeletingConfiguration { get; }
    internal static string ETagNotSetWhileDeletingDevice { get; }
    internal static string ETagNotSetWhileUpdatingConfiguration { get; }
    internal static string ETagNotSetWhileUpdatingDevice { get; }
    internal static string ETagNotSetWhileUpdatingTwin { get; }
    internal static string ETagSetWhileCreatingConfiguration { get; }
    internal static string ETagSetWhileRegisteringDevice { get; }
    internal static string FailedToSerializeUnsupportedType { get; }
    internal static string HostNameIsNull { get; }
    internal static string InvalidConnectionStringEndpoint { get; }
    internal static string InvalidImportMode { get; }
    internal static string InvalidPassword { get; }
    internal static string InvalidPropertyInConnectionString { get; }
    internal static string InvalidUser { get; }
    internal static string JobClientInstanceAlreadyClosed { get; }
    internal static string MessageBodyConsumed { get; }
    internal static string MessageDisposed { get; }
    internal static string MissingPropertyInConnectionString { get; }
    internal static string OffsetExceedsBufferSize { get; }
    internal static string ParameterCannotBeNullOrEmpty { get; }
    internal static string ParameterCannotBeNullOrWhitespace { get; }
    internal static string PropertyIsNotValidUri { get; }
    internal static string RegistryManagerInstanceAlreadyClosed { get; }
    internal static string SizeExceedsRemainingBufferSpace { get; }
    internal static string StringIsNotThumbprint { get; }
    internal static string ThumbprintSizesMustMatch { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ArgumentMustBeNonNegative();
    internal static string get_ArgumentMustBePositive();
    internal static string get_ConnectionStringIsNotWellFormed();
    internal static string get_DeviceAuthenticationInvalid();
    internal static string get_DeviceIdInvalid();
    internal static string get_DeviceIdNotSet();
    internal static string get_DeviceJobParametersNullOrEmptyDeviceList();
    internal static string get_DeviceJobParametersNullOrEmptyDeviceListEntries();
    internal static string get_DeviceKeysInvalid();
    internal static string get_ETagNotSetWhileDeletingConfiguration();
    internal static string get_ETagNotSetWhileDeletingDevice();
    internal static string get_ETagNotSetWhileUpdatingConfiguration();
    internal static string get_ETagNotSetWhileUpdatingDevice();
    internal static string get_ETagNotSetWhileUpdatingTwin();
    internal static string get_ETagSetWhileCreatingConfiguration();
    internal static string get_ETagSetWhileRegisteringDevice();
    internal static string get_FailedToSerializeUnsupportedType();
    internal static string get_HostNameIsNull();
    internal static string get_InvalidConnectionStringEndpoint();
    internal static string get_InvalidImportMode();
    internal static string get_InvalidPassword();
    internal static string get_InvalidPropertyInConnectionString();
    internal static string get_InvalidUser();
    internal static string get_JobClientInstanceAlreadyClosed();
    internal static string get_MessageBodyConsumed();
    internal static string get_MessageDisposed();
    internal static string get_MissingPropertyInConnectionString();
    internal static string get_OffsetExceedsBufferSize();
    internal static string get_ParameterCannotBeNullOrEmpty();
    internal static string get_ParameterCannotBeNullOrWhitespace();
    internal static string get_PropertyIsNotValidUri();
    internal static string get_RegistryManagerInstanceAlreadyClosed();
    internal static string get_SizeExceedsRemainingBufferSpace();
    internal static string get_StringIsNotThumbprint();
    internal static string get_ThumbprintSizesMustMatch();
}
internal class Microsoft.Azure.Devices.Authentication.DigitalTwinConnectionStringCredential : DigitalTwinServiceClientCredentials {
    private static int RenewalTimeBufferPercentage;
    private object _sasLock;
    private TimeSpan _sasTokenTimeToLive;
    private string _sharedAccessKey;
    private string _sharedAccessPolicy;
    private string _audience;
    private string _cachedSasToken;
    private DateTimeOffset _tokenExpiryTime;
    internal DigitalTwinConnectionStringCredential(IotHubConnectionString connectionString);
    public virtual string GetAuthorizationHeader();
    private bool TokenShouldBeGenerated();
}
internal abstract class Microsoft.Azure.Devices.Authentication.DigitalTwinServiceClientCredentials : ServiceClientCredentials {
    public virtual Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    public abstract virtual string GetAuthorizationHeader();
}
public class Microsoft.Azure.Devices.AuthenticationMechanism : object {
    private SymmetricKey symmetricKey;
    private X509Thumbprint x509Thumbprint;
    [CompilerGeneratedAttribute]
private AuthenticationType <Type>k__BackingField;
    [JsonPropertyAttribute]
public SymmetricKey SymmetricKey { get; public set; }
    [JsonPropertyAttribute]
public X509Thumbprint X509Thumbprint { get; public set; }
    [DefaultValueAttribute]
[JsonPropertyAttribute]
public AuthenticationType Type { get; public set; }
    public SymmetricKey get_SymmetricKey();
    public void set_SymmetricKey(SymmetricKey value);
    public X509Thumbprint get_X509Thumbprint();
    public void set_X509Thumbprint(X509Thumbprint value);
    [CompilerGeneratedAttribute]
public AuthenticationType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(AuthenticationType value);
}
public class Microsoft.Azure.Devices.AuthenticationMethodFactory : object {
    internal static IAuthenticationMethod GetAuthenticationMethod(IotHubConnectionStringBuilder iotHubConnectionStringBuilder);
    public static IAuthenticationMethod CreateAuthenticationWithSharedAccessPolicyKey(string policyName, string key);
    public static IAuthenticationMethod CreateAuthenticationWithSharedAccessPolicyToken(string policyName, string token);
}
public class Microsoft.Azure.Devices.BulkRegistryOperationResult : object {
    [CompilerGeneratedAttribute]
private bool <IsSuccessful>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceRegistryOperationError[] <Errors>k__BackingField;
    [JsonPropertyAttribute]
public bool IsSuccessful { get; public set; }
    [JsonPropertyAttribute]
public DeviceRegistryOperationError[] Errors { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsSuccessful();
    [CompilerGeneratedAttribute]
public void set_IsSuccessful(bool value);
    [CompilerGeneratedAttribute]
public DeviceRegistryOperationError[] get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(DeviceRegistryOperationError[] value);
}
internal class Microsoft.Azure.Devices.ClientApiVersionHelper : object {
    private static string ApiVersionQueryPrefix;
    private static string ApiVersionDefault;
    public static string ApiVersionQueryString;
}
internal class Microsoft.Azure.Devices.ClientWebSocketTransport : TransportBase {
    private static AsyncCallback s_onReadComplete;
    private static AsyncCallback s_onWriteComplete;
    private static TimeSpan s_closeTimeout;
    private EndPoint _localEndPoint;
    private EndPoint _remoteEndPoint;
    private ClientWebSocket _webSocket;
    private CancellationTokenSource _writeCancellationTokenSource;
    private bool _isDisposed;
    public string LocalEndPoint { get; }
    public string RemoteEndPoint { get; }
    public bool RequiresCompleteFrames { get; }
    public bool IsSecure { get; }
    public ClientWebSocketTransport(ClientWebSocket webSocket, EndPoint localEndpoint, EndPoint remoteEndpoint);
    private static ClientWebSocketTransport();
    public virtual string get_LocalEndPoint();
    public virtual string get_RemoteEndPoint();
    public virtual bool get_RequiresCompleteFrames();
    public virtual bool get_IsSecure();
    public virtual void SetMonitor(ITransportMonitor usageMeter);
    public virtual bool WriteAsync(TransportAsyncCallbackArgs args);
    public virtual bool ReadAsync(TransportAsyncCallbackArgs args);
    public sealed virtual void Dispose();
    protected virtual bool OpenInternal();
    protected virtual bool CloseInternal();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ClientWebSocketTransport/<CloseImplAsync>d__23")]
private Task CloseImplAsync(TimeSpan timeout);
    private void CancelPendingWrite();
    protected virtual void AbortInternal();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ClientWebSocketTransport/<WriteImplAsync>d__26")]
private Task WriteImplAsync(TransportAsyncCallbackArgs args);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ClientWebSocketTransport/<ReadImplAsync>d__27")]
private Task`1<int> ReadImplAsync(TransportAsyncCallbackArgs args);
    private static void OnReadComplete(IAsyncResult result);
    private static void HandleReadComplete(IAsyncResult result);
    private static bool ReadTaskDone(Task`1<int> taskResult, TransportAsyncCallbackArgs args);
    private static void OnWriteComplete(IAsyncResult result);
    private static void HandleWriteComplete(IAsyncResult result);
    private static bool WriteTaskDone(Task taskResult, TransportAsyncCallbackArgs args);
    private void ThrowIfNotOpen();
}
public class Microsoft.Azure.Devices.CloudToDeviceMethod : object {
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ResponseTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private JRaw <Payload>k__BackingField;
    [JsonPropertyAttribute]
public string MethodName { get; public set; }
    [JsonIgnoreAttribute]
public TimeSpan ResponseTimeout { get; public set; }
    [JsonIgnoreAttribute]
public TimeSpan ConnectionTimeout { get; public set; }
    [JsonPropertyAttribute]
internal Nullable`1<int> ResponseTimeoutInSeconds { get; }
    [JsonPropertyAttribute]
internal Nullable`1<int> ConnectionTimeoutInSeconds { get; }
    [JsonPropertyAttribute("payload")]
internal JRaw Payload { get; internal set; }
    public CloudToDeviceMethod(string methodName, TimeSpan responseTimeout, TimeSpan connectionTimeout);
    public CloudToDeviceMethod(string methodName, TimeSpan responseTimeout);
    public CloudToDeviceMethod(string methodName);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public void set_MethodName(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ResponseTimeout();
    [CompilerGeneratedAttribute]
public void set_ResponseTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionTimeout();
    [CompilerGeneratedAttribute]
public void set_ConnectionTimeout(TimeSpan value);
    internal Nullable`1<int> get_ResponseTimeoutInSeconds();
    internal Nullable`1<int> get_ConnectionTimeoutInSeconds();
    [CompilerGeneratedAttribute]
internal JRaw get_Payload();
    [CompilerGeneratedAttribute]
internal void set_Payload(JRaw value);
    public CloudToDeviceMethod SetPayloadJson(string json);
    public string GetPayloadAsJson();
}
public class Microsoft.Azure.Devices.CloudToDeviceMethodResult : object {
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private JRaw <Payload>k__BackingField;
    [JsonPropertyAttribute("status")]
public int Status { get; public set; }
    [JsonPropertyAttribute("payload")]
internal JRaw Payload { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(int value);
    public string GetPayloadAsJson();
    [CompilerGeneratedAttribute]
internal JRaw get_Payload();
    [CompilerGeneratedAttribute]
internal void set_Payload(JRaw value);
}
internal class Microsoft.Azure.Devices.Common.AssertionFailedException : Exception {
    public AssertionFailedException(string message, Exception innerException);
    public AssertionFailedException(string description);
    protected AssertionFailedException(SerializationInfo info, StreamingContext context);
}
[DebuggerStepThroughAttribute]
internal abstract class Microsoft.Azure.Devices.Common.AsyncResult : object {
    public static string DisablePrepareForRethrow;
    private static AsyncCallback s_asyncCompletionWrapperCallback;
    private AsyncCallback _callback;
    private bool _endCalled;
    private Exception _exception;
    private AsyncCompletion _nextAsyncCompletion;
    private ManualResetEvent _manualResetEvent;
    private object _thisLock;
    [CompilerGeneratedAttribute]
private object <AsyncState>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CompletedSynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<AsyncResult, Exception> <OnCompleting>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<AsyncCallback, IAsyncResult> <VirtualCallback>k__BackingField;
    public object AsyncState { get; private set; }
    public WaitHandle AsyncWaitHandle { get; }
    public bool CompletedSynchronously { get; private set; }
    public bool HasCallback { get; }
    public bool IsCompleted { get; private set; }
    protected Action`2<AsyncResult, Exception> OnCompleting { get; protected set; }
    protected internal EventTraceActivity Activity { get; }
    protected object ThisLock { get; }
    protected Action`2<AsyncCallback, IAsyncResult> VirtualCallback { get; protected set; }
    protected AsyncResult(AsyncCallback callback, object state);
    [CompilerGeneratedAttribute]
public sealed virtual object get_AsyncState();
    [CompilerGeneratedAttribute]
private void set_AsyncState(object value);
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CompletedSynchronously();
    [CompilerGeneratedAttribute]
private void set_CompletedSynchronously(bool value);
    public bool get_HasCallback();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    [CompilerGeneratedAttribute]
protected Action`2<AsyncResult, Exception> get_OnCompleting();
    [CompilerGeneratedAttribute]
protected void set_OnCompleting(Action`2<AsyncResult, Exception> value);
    protected internal virtual EventTraceActivity get_Activity();
    protected object get_ThisLock();
    [CompilerGeneratedAttribute]
protected Action`2<AsyncCallback, IAsyncResult> get_VirtualCallback();
    [CompilerGeneratedAttribute]
protected void set_VirtualCallback(Action`2<AsyncCallback, IAsyncResult> value);
    protected bool TryComplete(bool didCompleteSynchronously, Exception exception);
    protected bool TryComplete(bool didcompleteSynchronously);
    protected void Complete(bool didCompleteSynchronously);
    protected void Complete(bool didCompleteSynchronously, Exception e);
    private static void AsyncCompletionWrapperCallback(IAsyncResult result);
    protected AsyncCallback PrepareAsyncCompletion(AsyncCompletion callback);
    protected bool CheckSyncContinue(IAsyncResult result);
    protected bool SyncContinue(IAsyncResult result);
    private bool TryContinueHelper(IAsyncResult result, AsyncCompletion& callback);
    private AsyncCompletion GetNextCompletion();
    protected static void ThrowInvalidAsyncResult(IAsyncResult result);
    protected static void ThrowInvalidAsyncResult(string debugText);
    protected static TAsyncResult End(IAsyncResult result);
}
internal abstract class Microsoft.Azure.Devices.Common.AsyncResult`1 : AsyncResult {
    protected AsyncResult`1(AsyncCallback callback, object state);
    public static TAsyncResult End(IAsyncResult asyncResult);
}
internal class Microsoft.Azure.Devices.Common.BufferedInputStream : Stream {
    private BufferManagerByteArray _data;
    private MemoryStream _innerStream;
    private bool _isDisposed;
    public Byte[] Buffer { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public BufferedInputStream(Byte[] bytes, int bufferSize, InternalBufferManager bufferManager);
    private BufferedInputStream(BufferManagerByteArray data, int bufferSize);
    public Byte[] get_Buffer();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public sealed virtual object Clone();
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    protected virtual void Dispose(bool disposing);
    private void ThrowIfDisposed();
}
internal class Microsoft.Azure.Devices.Common.CallbackException : FatalException {
    public CallbackException(string message, Exception innerException);
    protected CallbackException(SerializationInfo info, StreamingContext context);
    internal CallbackException(string message);
}
internal static class Microsoft.Azure.Devices.Common.Client.IotHubAmqpProperty : object {
    public static AmqpSymbol TimeoutName;
    public static AmqpSymbol StackTraceName;
    public static AmqpSymbol TrackingId;
    public static AmqpSymbol ErrorCode;
    public static AmqpSymbol ClientVersion;
    private static IotHubAmqpProperty();
}
internal static class Microsoft.Azure.Devices.Common.CommonConstants : object {
    public static string ErrorCode;
    public static string DeviceAudienceFormat;
    public static string MediaTypeForDeviceManagementApis;
    public static string AmqpsScheme;
    public static string AmqpScheme;
    public static string AmqpDnsWSPrefix;
    public static ulong AmqpMaxMessageSize;
    public static int HttpsPort;
    public static int AmqpsPort;
    public static int WindowsFabricRetryLimit;
    public static int WindowsFabricRetryWaitInMilliseconds;
    public static int WindowsFabricClientConnectionPort;
    public static int AzureStorageRetryLimit;
    public static int AzureStorageRetryWaitInMilliseconds;
    public static string IotHubApplicationName;
    public static string IotHubApplicationTypeName;
    public static string IotHubServiceTypeName;
    public static string ThrottlingApplicationName;
    public static string ThrottlingApplicationTypeName;
    public static string ThrottlingServiceTypeName;
    public static string MicrosoftOwinContextPropertyName;
    public static int EventHubEndpointPortNumber;
    public static string EventHubConnectionStringTemplate;
    public static string ResourceProviderNamespace;
    public static string ResourceProviderServiceResourceType;
    public static string ResourceProviderBasePathTemplate;
    public static int RuntimeRetryLimit;
    public static int RuntimeRetryWaitInMilliseconds;
    public static string DeviceEventPathTemplate;
    public static string DeviceBoundPathTemplate;
    public static string DeviceBoundPathCompleteTemplate;
    public static string DeviceBoundPathAbandonTemplate;
    public static string DeviceBoundPathRejectTemplate;
    public static int IotHubDefaultMaxAuthorizationRules;
    public static string ProvisioningStateSucceed;
    public static string ProvisioningStateFailed;
    public static string ProvisioningStateCanceled;
    public static string ProvisioningStateAccepted;
    public static string DeviceToCloudOperation;
    public static string CloudToDeviceOperation;
    public static string ApiVersionQueryParameterName;
    public static string WildCardEtag;
    public static string PartitionCount;
    public static string TargetReplicaSetSize;
    public static string MinReplicaSetSize;
    public static string SkuMaxUnitOverride;
    public static string ContentTypeHeaderName;
    public static string ContentEncodingHeaderName;
    public static string BatchedMessageContentType;
    public static string BatchedFeedbackContentType;
    public static string FileNotificationContentType;
    public static string IotHubSystemStoreServiceName;
    public static string IotHubStatsCacheKey;
    public static string SystemStoreStatsPartitionKey;
    public static string SystemStoreScaleUnitConfigPartitionKey;
    public static string SystemStoreScaleUnitConfigRowKey;
    public static string ScaleUnitSettingsKey;
    public static int SystemStoreMaxRetries;
    public static string ConnectedDeviceCountProperty;
    public static string EnabledDeviceCountProperty;
    public static string DisabledDeviceCountProperty;
    public static string TotalDeviceCountProperty;
    public static long MaxStringLengthForAzureTableColumn;
    public static long MaxDeviceUpdateStatsCount;
    public static string ListenKeyName;
    public static string DefaultEventHubEndpointName;
    public static string ExportDevicesBlobName;
    public static string ImportDevicesOutputBlobName;
    public static TimeSpan SystemStoreMaximumExecutionTime;
    public static TimeSpan SystemStoreDeltaBackOff;
    public static double RpDatabaseResourceLowThreshold;
    public static double RpDatabaseResourceHighThreshold;
    public static double IotHubResourcePoolsLowThreshold;
    public static double IotHubResourcePoolsCriticallyLowThreshold;
    public static TimeSpan ProcessThreadCheckInterval;
    public static int MaxThreadsCountThreshold;
    public static string IotHubErrorCode;
    public static string HttpErrorCodeName;
    public static String[] IotHubAadTokenScopes;
    private static CommonConstants();
}
[ExtensionAttribute]
[ObsoleteAttribute("Not supported for external use", "True")]
public static class Microsoft.Azure.Devices.Common.CommonExtensionMethods : object {
    private static char ValuePairDelimiter;
    private static char ValuePairSeparator;
    [ExtensionAttribute]
public static string EnsureEndsWith(string value, char suffix);
    [ExtensionAttribute]
public static string EnsureStartsWith(string value, char prefix);
    [ExtensionAttribute]
public static string GetValueOrDefault(IDictionary`2<string, string> map, string keyName);
    [ExtensionAttribute]
public static IDictionary`2<string, string> ToDictionary(string valuePairString, char kvpDelimiter, char kvpSeparator);
    [ExtensionAttribute]
public static bool TryGetIotHubName(HttpRequestMessage requestMessage, String& iotHubName);
    [ExtensionAttribute]
public static string GetIotHubNameFromHostName(HttpRequestMessage requestMessage);
    [ExtensionAttribute]
public static string GetIotHubName(HttpRequestMessage requestMessage);
    [ExtensionAttribute]
public static void AppendKeyValuePairIfNotEmpty(StringBuilder builder, string name, object value);
    [ExtensionAttribute]
public static string RemoveWhitespace(string value);
}
internal class Microsoft.Azure.Devices.Common.CommonResources : Resources {
    internal static string GetString(string value, Object[] args);
}
internal class Microsoft.Azure.Devices.Common.CompletedAsyncResult : AsyncResult {
    public CompletedAsyncResult(AsyncCallback callback, object state);
    public CompletedAsyncResult(Exception exception, AsyncCallback callback, object state);
    public static void End(IAsyncResult result);
}
internal class Microsoft.Azure.Devices.Common.CompletedAsyncResult`1 : AsyncResult {
    private T _data;
    public CompletedAsyncResult`1(T data, AsyncCallback callback, object state);
    public static T End(IAsyncResult result);
}
internal class Microsoft.Azure.Devices.Common.CompletedAsyncResult`2 : AsyncResult {
    private TResult _resultData;
    private TParameter _parameter;
    public CompletedAsyncResult`2(TResult resultData, TParameter parameter, AsyncCallback callback, object state);
    public static TResult End(IAsyncResult result, TParameter& parameter);
}
public static class Microsoft.Azure.Devices.Common.CryptoKeyGenerator : object {
    public static int Sha512KeySize;
    [ObsoleteAttribute("This method will be deprecated in a future version.")]
public static Byte[] GenerateKeyBytes(int keySize);
    [ObsoleteAttribute("This method will be deprecated in a future version.")]
public static string GenerateKey(int keySize);
}
[FlagsAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.Common.Data.AccessRights : Enum {
    public int value__;
    public static AccessRights RegistryRead;
    public static AccessRights RegistryWrite;
    public static AccessRights ServiceConnect;
    public static AccessRights DeviceConnect;
}
internal class Microsoft.Azure.Devices.Common.Data.SharedAccessSignatureAuthorizationRule : object {
    private string _primaryKey;
    private string _secondaryKey;
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessRights <Rights>k__BackingField;
    [JsonPropertyAttribute]
public string KeyName { get; public set; }
    [JsonPropertyAttribute]
public string PrimaryKey { get; public set; }
    [JsonPropertyAttribute]
public string SecondaryKey { get; public set; }
    [JsonPropertyAttribute]
public AccessRights Rights { get; public set; }
    [CompilerGeneratedAttribute]
public string get_KeyName();
    [CompilerGeneratedAttribute]
public void set_KeyName(string value);
    public string get_PrimaryKey();
    public void set_PrimaryKey(string value);
    public string get_SecondaryKey();
    public void set_SecondaryKey(string value);
    [CompilerGeneratedAttribute]
public AccessRights get_Rights();
    [CompilerGeneratedAttribute]
public void set_Rights(AccessRights value);
    public sealed virtual bool Equals(SharedAccessSignatureAuthorizationRule other);
    public virtual bool Equals(object obj);
    public static int GetHashCode(SharedAccessSignatureAuthorizationRule rule);
    public virtual int GetHashCode();
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Devices.Common.EnumerableExtensions : object {
    [ExtensionAttribute]
public static bool AnySlim(IEnumerable`1<T> enumerable);
    [ExtensionAttribute]
public static IList`1<T> ToListSlim(IEnumerable`1<T> enumerable, bool requireMutable);
}
internal class Microsoft.Azure.Devices.Common.ExceptionDispatcher : object {
    public static void Throw(Exception exception);
}
[ExtensionAttribute]
[ObsoleteAttribute("Not recommended for external use.")]
public static class Microsoft.Azure.Devices.Common.ExceptionExtensions : object {
    private static string ExceptionIdentifierName;
    private static MethodInfo s_prepForRemotingMethodInfo;
    [ExtensionAttribute]
public static bool IsFatal(Exception exception);
    [IteratorStateMachineAttribute("Microsoft.Azure.Devices.Common.ExceptionExtensions/<Unwind>d__3")]
[ExtensionAttribute]
public static IEnumerable`1<Exception> Unwind(Exception exception);
    [ExtensionAttribute]
public static IEnumerable`1<Exception> Unwind(Exception exception, Type[] targetTypes);
    [ExtensionAttribute]
public static IEnumerable`1<TException> Unwind(Exception exception);
    [ExtensionAttribute]
public static Exception PrepareForRethrow(Exception exception);
    [ExtensionAttribute]
public static Exception DisablePrepareForRethrow(Exception exception);
    [ExtensionAttribute]
public static string ToStringSlim(Exception exception);
    [ExtensionAttribute]
public static string GetReferenceCode(Exception exception);
    private static bool ShouldPrepareForRethrow(Exception exception);
    [ExtensionAttribute]
public static bool CheckIotHubErrorCode(Exception ex, ErrorCode[] errorCodeList);
}
internal static class Microsoft.Azure.Devices.Common.Exceptions.AmqpErrorMapper : object {
    public static Exception GetExceptionFromOutcome(Outcome outcome);
    public static Exception ToIotHubClientContract(Error error);
}
public class Microsoft.Azure.Devices.Common.Exceptions.ConfigurationNotFoundException : IotHubException {
    public ConfigurationNotFoundException(string configurationId);
    public ConfigurationNotFoundException(string configurationId, string iotHubName);
    public ConfigurationNotFoundException(string configurationId, string iotHubName, string trackingId);
    public ConfigurationNotFoundException(string message, Exception innerException);
    public ConfigurationNotFoundException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.DeviceAlreadyExistsException : IotHubException {
    public DeviceAlreadyExistsException(string deviceId);
    public DeviceAlreadyExistsException(string deviceId, string trackingId);
    public DeviceAlreadyExistsException(string message, Exception innerException);
    public DeviceAlreadyExistsException(ErrorCode code, string message, Exception innerException);
    public DeviceAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.DeviceInvalidResultCountException : IotHubException {
    [CompilerGeneratedAttribute]
private int <MaximumResultCount>k__BackingField;
    internal int MaximumResultCount { get; private set; }
    public DeviceInvalidResultCountException(int maximumResultCount);
    internal DeviceInvalidResultCountException(string message);
    internal DeviceInvalidResultCountException(string message, Exception innerException);
    private DeviceInvalidResultCountException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
internal int get_MaximumResultCount();
    [CompilerGeneratedAttribute]
private void set_MaximumResultCount(int value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.DeviceMaximumQueueDepthExceededException : IotHubException {
    [CompilerGeneratedAttribute]
private int <MaximumQueueDepth>k__BackingField;
    internal int MaximumQueueDepth { get; private set; }
    public DeviceMaximumQueueDepthExceededException(int maximumQueueDepth);
    public DeviceMaximumQueueDepthExceededException(int maximumQueueDepth, string trackingId);
    public DeviceMaximumQueueDepthExceededException(string message);
    public DeviceMaximumQueueDepthExceededException(string message, Exception innerException);
    private DeviceMaximumQueueDepthExceededException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
internal int get_MaximumQueueDepth();
    [CompilerGeneratedAttribute]
private void set_MaximumQueueDepth(int value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.DeviceMessageLockLostException : IotHubException {
    public DeviceMessageLockLostException(string message);
    public DeviceMessageLockLostException(ErrorCode code, string message);
    public DeviceMessageLockLostException(string deviceId, Guid messageId);
    public DeviceMessageLockLostException(string deviceId, Guid messageId, string trackingId);
    protected DeviceMessageLockLostException(SerializationInfo info, StreamingContext context);
    internal DeviceMessageLockLostException(string message, Exception innerException);
}
public class Microsoft.Azure.Devices.Common.Exceptions.DeviceNotFoundException : IotHubException {
    public DeviceNotFoundException(string deviceId);
    public DeviceNotFoundException(string deviceId, string iotHubName);
    public DeviceNotFoundException(string deviceId, string iotHubName, string trackingId);
    public DeviceNotFoundException(string message, Exception innerException);
    public DeviceNotFoundException(ErrorCode code, string message, Exception innerException);
    public DeviceNotFoundException(SerializationInfo info, StreamingContext context);
}
public enum Microsoft.Azure.Devices.Common.Exceptions.ErrorCode : Enum {
    public int value__;
    public static ErrorCode InvalidErrorCode;
    public static ErrorCode InvalidProtocolVersion;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode DeviceInvalidResultCount;
    public static ErrorCode InvalidOperation;
    public static ErrorCode ArgumentInvalid;
    public static ErrorCode ArgumentNull;
    public static ErrorCode IotHubFormatError;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode DeviceStorageEntitySerializationError;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode BlobContainerValidationError;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode ImportWarningExistsError;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode InvalidSchemaVersion;
    public static ErrorCode DeviceDefinedMultipleTimes;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode DeserializationError;
    public static ErrorCode BulkRegistryOperationFailure;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode CannotRegisterModuleToModule;
    [ObsoleteAttribute("This error does should not be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode IotHubNotFound;
    public static ErrorCode IotHubUnauthorizedAccess;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode IotHubUnauthorized;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode IotHubSuspended;
    public static ErrorCode IotHubQuotaExceeded;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode JobQuotaExceeded;
    public static ErrorCode DeviceMaximumQueueDepthExceeded;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode IotHubMaxCbsTokenExceeded;
    public static ErrorCode DeviceNotFound;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode JobNotFound;
    [ObsoleteAttribute("This error does should not be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode PartitionNotFound;
    public static ErrorCode ModuleNotFound;
    public static ErrorCode DeviceAlreadyExists;
    public static ErrorCode ModuleAlreadyExistsOnDevice;
    public static ErrorCode PreconditionFailed;
    [ObsoleteAttribute("This error should not be returned to a service application. This is relevant only for a device application.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode DeviceMessageLockLost;
    public static ErrorCode MessageTooLarge;
    public static ErrorCode TooManyDevices;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode TooManyModulesOnDevice;
    public static ErrorCode GenericTooManyRequests;
    public static ErrorCode ThrottlingException;
    public static ErrorCode ThrottleBacklogLimitExceeded;
    public static ErrorCode ThrottlingBacklogTimeout;
    public static ErrorCode ThrottlingMaxActiveJobCountExceeded;
    public static ErrorCode DeviceThrottlingLimitExceeded;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode InvalidThrottleParameter;
    public static ErrorCode ServerError;
    [ObsoleteAttribute("This error does not appear to be returned by the service.")]
[EditorBrowsableAttribute("1")]
public static ErrorCode JobCancelled;
    public static ErrorCode ServiceUnavailable;
}
public class Microsoft.Azure.Devices.Common.Exceptions.InvalidProtocolVersionException : IotHubException {
    [CompilerGeneratedAttribute]
private string <RequestedVersion>k__BackingField;
    public string RequestedVersion { get; private set; }
    public InvalidProtocolVersionException(string version);
    public InvalidProtocolVersionException(SerializationInfo info, StreamingContext context);
    internal InvalidProtocolVersionException(string message, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public string get_RequestedVersion();
    [CompilerGeneratedAttribute]
private void set_RequestedVersion(string value);
}
internal static class Microsoft.Azure.Devices.Common.Exceptions.IotHubAmqpErrorCode : object {
    public static AmqpSymbol TimeoutName;
    public static AmqpSymbol StackTraceName;
    public static AmqpSymbol DeadLetterName;
    public static string DeadLetterReasonHeader;
    public static string DeadLetterErrorDescriptionHeader;
    public static AmqpSymbol TimeoutError;
    public static AmqpSymbol MessageLockLostError;
    public static AmqpSymbol IotHubNotFoundError;
    public static AmqpSymbol ArgumentError;
    public static AmqpSymbol ArgumentOutOfRangeError;
    public static AmqpSymbol DeviceAlreadyExists;
    public static AmqpSymbol DeviceContainerThrottled;
    public static AmqpSymbol QuotaExceeded;
    public static AmqpSymbol PreconditionFailed;
    public static AmqpSymbol IotHubSuspended;
    private static IotHubAmqpErrorCode();
}
public class Microsoft.Azure.Devices.Common.Exceptions.IotHubCommunicationException : IotHubException {
    public IotHubCommunicationException(string message);
    public IotHubCommunicationException(string message, Exception innerException);
    private IotHubCommunicationException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.IotHubException : Exception {
    private static string IsTransientValueSerializationStoreName;
    private static string TrackingIdSerializationStoreName;
    [CompilerGeneratedAttribute]
private bool <IsTransient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrackingId>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorCode <Code>k__BackingField;
    public bool IsTransient { get; protected set; }
    public string TrackingId { get; public set; }
    public ErrorCode Code { get; private set; }
    public IotHubException(string message);
    public IotHubException(string message, string trackingId);
    public IotHubException(string message, bool isTransient, string trackingId);
    public IotHubException(string message, bool isTransient);
    public IotHubException(Exception innerException);
    public IotHubException(string message, Exception innerException);
    public IotHubException(ErrorCode code, string message, Exception innerException);
    protected IotHubException(string message, Exception innerException, bool isTransient);
    protected IotHubException(ErrorCode code, string message, bool isTransient, Exception innerException);
    protected IotHubException(string message, Exception innerException, bool isTransient, string trackingId);
    protected IotHubException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public bool get_IsTransient();
    [CompilerGeneratedAttribute]
protected void set_IsTransient(bool value);
    [CompilerGeneratedAttribute]
public string get_TrackingId();
    [CompilerGeneratedAttribute]
public void set_TrackingId(string value);
    [CompilerGeneratedAttribute]
public ErrorCode get_Code();
    [CompilerGeneratedAttribute]
private void set_Code(ErrorCode value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.IotHubNotFoundException : IotHubException {
    public IotHubNotFoundException(string iotHubName);
    public IotHubNotFoundException(string iotHubName, string trackingId);
    protected IotHubNotFoundException(SerializationInfo info, StreamingContext context);
    internal IotHubNotFoundException(string message, Exception innerException);
}
public class Microsoft.Azure.Devices.Common.Exceptions.IotHubSerializationException : IotHubException {
    public IotHubSerializationException(string message);
    protected IotHubSerializationException(SerializationInfo info, StreamingContext context);
    internal IotHubSerializationException(string message, Exception innerException);
}
public class Microsoft.Azure.Devices.Common.Exceptions.IotHubSerializationVersionException : IotHubSerializationException {
    public IotHubSerializationVersionException(int receivedVersion);
    protected IotHubSerializationVersionException(SerializationInfo info, StreamingContext context);
    internal IotHubSerializationVersionException(string message);
    internal IotHubSerializationVersionException(string message, Exception innerException);
}
public class Microsoft.Azure.Devices.Common.Exceptions.IotHubSuspendedException : IotHubException {
    public IotHubSuspendedException(string iotHubName);
    public IotHubSuspendedException(string iotHubName, string trackingId);
    public IotHubSuspendedException(SerializationInfo info, StreamingContext context);
    internal IotHubSuspendedException(string message, Exception innerException);
}
public class Microsoft.Azure.Devices.Common.Exceptions.IotHubThrottledException : IotHubException {
    public IotHubThrottledException(int maximumBatchCount);
    public IotHubThrottledException(string message, Exception innerException);
    private IotHubThrottledException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.JobCancelledException : IotHubException {
    private static string DefaultErrorMessage;
    internal JobCancelledException(string message);
    internal JobCancelledException(string message, Exception innerException);
    private JobCancelledException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.JobNotFoundException : IotHubException {
    public JobNotFoundException(string jobId);
    internal JobNotFoundException(string message, Exception innerException);
    private JobNotFoundException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.JobQuotaExceededException : IotHubException {
    private static string DefaultErrorMessage;
    public JobQuotaExceededException(string message);
    internal JobQuotaExceededException(string message, Exception innerException);
    private JobQuotaExceededException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.MessageTooLargeException : IotHubException {
    [CompilerGeneratedAttribute]
private int <MaximumMessageSizeInBytes>k__BackingField;
    internal int MaximumMessageSizeInBytes { get; private set; }
    public MessageTooLargeException(int maximumMessageSizeInBytes);
    public MessageTooLargeException(int maximumMessageSizeInBytes, string trackingId);
    public MessageTooLargeException(string message);
    public MessageTooLargeException(ErrorCode code, string message);
    public MessageTooLargeException(string message, Exception innerException);
    private MessageTooLargeException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
internal int get_MaximumMessageSizeInBytes();
    [CompilerGeneratedAttribute]
private void set_MaximumMessageSizeInBytes(int value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.ModuleAlreadyExistsException : IotHubException {
    public ModuleAlreadyExistsException(string moduleId);
    public ModuleAlreadyExistsException(string moduleId, string trackingId);
    public ModuleAlreadyExistsException(string message, Exception innerException);
    public ModuleAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.ModuleNotFoundException : IotHubException {
    public ModuleNotFoundException(string deviceId, string moduleId);
    public ModuleNotFoundException(string deviceId, string moduleId, string iotHubName);
    public ModuleNotFoundException(string deviceId, string moduleId, string iotHubName, string trackingId);
    public ModuleNotFoundException(string message, Exception innerException);
    public ModuleNotFoundException(SerializationInfo info, StreamingContext context);
    internal ModuleNotFoundException(string message);
}
public class Microsoft.Azure.Devices.Common.Exceptions.PreconditionFailedException : IotHubException {
    public PreconditionFailedException(string message);
    public PreconditionFailedException(string message, string trackingId);
    public PreconditionFailedException(string message, Exception innerException);
    private PreconditionFailedException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.QuotaExceededException : IotHubException {
    public QuotaExceededException(string message);
    public QuotaExceededException(ErrorCode code, string message);
    public QuotaExceededException(string message, Exception innerException);
    private QuotaExceededException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.ServerBusyException : IotHubException {
    public ServerBusyException(string message);
    public ServerBusyException(ErrorCode code, string message);
    public ServerBusyException(string message, Exception innerException);
    private ServerBusyException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.ServerErrorException : IotHubException {
    public ServerErrorException(string message);
    public ServerErrorException(ErrorCode code, string message);
    public ServerErrorException(string message, Exception innerException);
    private ServerErrorException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.ThrottlingException : IotHubException {
    public ThrottlingException(string message);
    public ThrottlingException(ErrorCode code, string message);
    public ThrottlingException(string message, Exception inner);
    protected ThrottlingException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.TooManyDevicesException : IotHubException {
    public TooManyDevicesException(string message);
    public TooManyDevicesException(string message, string trackingId);
    public TooManyDevicesException(string message, Exception innerException);
    private TooManyDevicesException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.TooManyModulesOnDeviceException : IotHubException {
    public TooManyModulesOnDeviceException(string message);
    public TooManyModulesOnDeviceException(string message, string trackingId);
    public TooManyModulesOnDeviceException(string message, Exception innerException);
    private TooManyModulesOnDeviceException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.Devices.Common.Exceptions.UnauthorizedException : IotHubException {
    public UnauthorizedException(string message);
    public UnauthorizedException(ErrorCode code, string message);
    public UnauthorizedException(string message, Exception innerException);
    private UnauthorizedException(SerializationInfo info, StreamingContext context);
}
internal class Microsoft.Azure.Devices.Common.ExceptionTrace : object {
    private string _eventSourceName;
    public ExceptionTrace(string eventSourceName);
    public Exception AsError(Exception exception);
    public Exception AsInformation(Exception exception);
    public Exception AsWarning(Exception exception);
    public Exception AsVerbose(Exception exception);
    public ArgumentException Argument(string paramName, string message);
    public ArgumentNullException ArgumentNull(string paramName);
    public ArgumentNullException ArgumentNull(string paramName, string message);
    public ArgumentException ArgumentNullOrEmpty(string paramName);
    public ArgumentException ArgumentNullOrWhiteSpace(string paramName);
    public ArgumentOutOfRangeException ArgumentOutOfRange(string paramName, object actualValue, string message);
    public ObjectDisposedException ObjectDisposed(string message);
    public void TraceHandled(Exception exception, string catchLocation, EventTraceActivity activity);
    public TException TraceException(TException exception, TraceEventType level);
    public static string GetDetailsForThrownException(Exception e);
    internal void BreakOnException(Exception exception);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Devices.Common.Extensions.AmqpExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Common.Extensions.AmqpExtensions/<GetReceivingLinkAsync>d__0")]
[ExtensionAttribute]
internal static Task`1<ReceivingAmqpLink> GetReceivingLinkAsync(FaultTolerantAmqpObject`1<ReceivingAmqpLink> faultTolerantReceivingLink);
}
[ExtensionAttribute]
[ObsoleteAttribute("Not recommended for external use.")]
public static class Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions : object {
    [ExtensionAttribute]
public static TValue GetValueOrDefault(IDictionary`2<TKey, TValue> dictionary, TKey key, TValue defaultValue);
    [ExtensionAttribute]
public static TValue GetValueOrAdd(IDictionary`2<TKey, TValue> dictionary, TKey key, Func`2<TKey, TValue> valueProvider);
    [ExtensionAttribute]
public static bool TryRemove(Dictionary`2<TKey, TValue> dictionary, TKey key, TValue& value);
    [ExtensionAttribute]
public static TValue GetOrAddNonNull(ConcurrentDictionary`2<TKey, TValue> dictionary, TKey key, Func`2<TKey, TValue> valueFactory);
}
[ExtensionAttribute]
[ObsoleteAttribute("Not recommended for external use.")]
public static class Microsoft.Azure.Devices.Common.Extensions.OtherExtensions : object {
    [ExtensionAttribute]
public static T GetValueOrDefault(IDictionary`2<string, object> dictionary, string key);
    [ExtensionAttribute]
public static string GetFirstValueOrNull(HttpHeaders headers, string name);
    [ExtensionAttribute]
public static IEnumerable`1<string> GetValuesOrNull(HttpHeaders headers, string name);
}
internal class Microsoft.Azure.Devices.Common.FatalException : Exception {
    public FatalException(string message);
    public FatalException(string message, Exception innerException);
    protected FatalException(SerializationInfo info, StreamingContext context);
}
internal static class Microsoft.Azure.Devices.Common.Fx : object {
    private static string DefaultEventSource;
    private static ExceptionTrace s_exceptionTrace;
    public static ExceptionTrace Exception { get; }
    public static ExceptionTrace get_Exception();
    [ConditionalAttribute("DEBUG")]
public static void Assert(bool condition, string description);
    [ConditionalAttribute("DEBUG")]
public static void Assert(string description);
    public static void AssertAndThrow(bool condition, string description);
    public static Exception AssertAndThrow(string description);
    public static void AssertAndThrowFatal(bool condition, string description);
    public static Exception AssertAndThrowFatal(string description);
    public static bool IsFatal(Exception exception);
}
internal static class Microsoft.Azure.Devices.Common.FxCop : object {
}
internal static class Microsoft.Azure.Devices.Common.FxTrace : object {
    private static string EventSourceName;
    private static ExceptionTrace s_exceptionTrace;
    public static ExceptionTrace Exception { get; }
    public static ExceptionTrace get_Exception();
}
internal abstract class Microsoft.Azure.Devices.Common.InternalBufferManager : object {
    public abstract virtual Byte[] TakeBuffer(int bufferSize);
    public abstract virtual void ReturnBuffer(Byte[] buffer);
    public abstract virtual void Clear();
    public static InternalBufferManager Create(long maxBufferPoolSize, int maxBufferSize, bool isTransportBufferPool);
    public static Byte[] AllocateByteArray(int size);
}
internal class Microsoft.Azure.Devices.Common.IOThreadScheduler : object {
    private static int MaximumCapacity;
    private static IOThreadScheduler current;
    private ScheduledOverlapped overlapped;
    [SecurityCriticalAttribute]
private Slot[] slots;
    [SecurityCriticalAttribute]
private Slot[] slotsLowPri;
    private int headTail;
    private int headTailLowPri;
    private int SlotMask { get; }
    private int SlotMaskLowPri { get; }
    private IOThreadScheduler(int capacity, int capacityLowPri);
    private static IOThreadScheduler();
    [SecurityCriticalAttribute]
public static void ScheduleCallbackNoFlow(Action`1<object> callback, object state);
    [SecurityCriticalAttribute]
public static void ScheduleCallbackLowPriNoFlow(Action`1<object> callback, object state);
    [SecurityCriticalAttribute]
private bool ScheduleCallbackHelper(Action`1<object> callback, object state);
    [SecurityCriticalAttribute]
private bool ScheduleCallbackLowPriHelper(Action`1<object> callback, object state);
    [SecurityCriticalAttribute]
private void CompletionCallback(Action`1& callback, Object& state);
    [SecurityCriticalAttribute]
private bool TryCoalesce(Action`1& callback, Object& state);
    [SecurityCriticalAttribute]
private int get_SlotMask();
    [SecurityCriticalAttribute]
private int get_SlotMaskLowPri();
    protected virtual override void Finalize();
    private void Cleanup();
}
internal interface Microsoft.Azure.Devices.Common.IReadOnlyIndicator {
    public bool IsReadOnly { get; }
    public abstract virtual bool get_IsReadOnly();
}
[ExtensionAttribute]
public static class Microsoft.Azure.Devices.Common.MemberInfoExtensions : object {
    [ExtensionAttribute]
public static string GetFullyQualifiedMemberName(MemberInfo member);
}
internal static class Microsoft.Azure.Devices.Common.PartialTrustHelpers : object {
    internal static bool ShouldFlowSecurityContext { get; }
    [SecurityCriticalAttribute]
internal static bool get_ShouldFlowSecurityContext();
    [SecurityCriticalAttribute]
internal static bool IsInFullTrust();
    [SecurityCriticalAttribute]
internal static bool UnsafeIsInFullTrust();
    [SecurityCriticalAttribute]
internal static bool IsTypeAptca(Type type);
    [SecurityCriticalAttribute]
private static void DemandForFullTrust();
    [SecurityCriticalAttribute]
private static bool IsAssemblyAptca(Assembly assembly);
    [SecurityCriticalAttribute]
private static bool IsAssemblySigned(Assembly assembly);
    [SecurityCriticalAttribute]
internal static bool HasEtwPermissions();
}
public static class Microsoft.Azure.Devices.Common.PerfectHash : object {
    public static long HashToLong(string data);
    public static short HashToShort(string data);
    private static void ComputeHash(Byte[] data, UInt32 seed1, UInt32 seed2, UInt32& hash1, UInt32& hash2);
}
internal enum Microsoft.Azure.Devices.Common.PropertyValueType : Enum {
    public int value__;
    public static PropertyValueType Null;
    public static PropertyValueType Byte;
    public static PropertyValueType SByte;
    public static PropertyValueType Char;
    public static PropertyValueType Int16;
    public static PropertyValueType UInt16;
    public static PropertyValueType Int32;
    public static PropertyValueType UInt32;
    public static PropertyValueType Int64;
    public static PropertyValueType UInt64;
    public static PropertyValueType Single;
    public static PropertyValueType Double;
    public static PropertyValueType Decimal;
    public static PropertyValueType Boolean;
    public static PropertyValueType Guid;
    public static PropertyValueType String;
    public static PropertyValueType Uri;
    public static PropertyValueType DateTime;
    public static PropertyValueType DateTimeOffset;
    public static PropertyValueType TimeSpan;
    public static PropertyValueType Stream;
    public static PropertyValueType Unknown;
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
public class Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2 : object {
    private object _syncRoot;
    private KeyCollection<TKey, TValue> _keys;
    private ValueCollection<TKey, TValue> _values;
    private IReadOnlyIndicator _readOnlyIndicator;
    [CompilerGeneratedAttribute]
private IDictionary`2<TKey, TValue> <Dictionary>k__BackingField;
    protected IDictionary`2<TKey, TValue> Dictionary { get; private set; }
    public KeyCollection<TKey, TValue> Keys { get; }
    public ValueCollection<TKey, TValue> Values { get; }
    private ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
    private ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
    public TValue Item { get; }
    private TValue System.Collections.Generic.IDictionary<TKey,TValue>.Item { get; private set; }
    public int Count { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
    private bool System.Collections.IDictionary.IsFixedSize { get; }
    private bool System.Collections.IDictionary.IsReadOnly { get; }
    private ICollection System.Collections.IDictionary.Keys { get; }
    private ICollection System.Collections.IDictionary.Values { get; }
    private object System.Collections.IDictionary.Item { get; private set; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public ReadOnlyDictionary45`2(IDictionary`2<TKey, TValue> dictionary);
    internal ReadOnlyDictionary45`2(IDictionary`2<TKey, TValue> dictionary, IReadOnlyIndicator readOnlyIndicator);
    [CompilerGeneratedAttribute]
protected IDictionary`2<TKey, TValue> get_Dictionary();
    [CompilerGeneratedAttribute]
private void set_Dictionary(IDictionary`2<TKey, TValue> value);
    public KeyCollection<TKey, TValue> get_Keys();
    public ValueCollection<TKey, TValue> get_Values();
    public sealed virtual bool ContainsKey(TKey key);
    private sealed virtual override ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys();
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    private sealed virtual override ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values();
    public TValue get_Item(TKey key);
    private sealed virtual override void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey key, TValue value);
    private sealed virtual override bool System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey key);
    private sealed virtual override TValue System.Collections.Generic.IDictionary<TKey,TValue>.get_Item(TKey key);
    private sealed virtual override void System.Collections.Generic.IDictionary<TKey,TValue>.set_Item(TKey key, TValue value);
    public sealed virtual int get_Count();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private static bool IsCompatibleKey(object key);
    private sealed virtual override void System.Collections.IDictionary.Add(object key, object value);
    private sealed virtual override void System.Collections.IDictionary.Clear();
    private sealed virtual override bool System.Collections.IDictionary.Contains(object key);
    private sealed virtual override IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator();
    private sealed virtual override bool System.Collections.IDictionary.get_IsFixedSize();
    private sealed virtual override bool System.Collections.IDictionary.get_IsReadOnly();
    private sealed virtual override ICollection System.Collections.IDictionary.get_Keys();
    private sealed virtual override void System.Collections.IDictionary.Remove(object key);
    private sealed virtual override ICollection System.Collections.IDictionary.get_Values();
    private sealed virtual override object System.Collections.IDictionary.get_Item(object key);
    private sealed virtual override void System.Collections.IDictionary.set_Item(object key, object value);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Azure.Devices.Common.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ActionItemIsAlreadyScheduled { get; }
    internal static string ArgumentNullOrEmpty { get; }
    internal static string ArgumentNullOrWhiteSpace { get; }
    internal static string ArgumentOutOfRange { get; }
    internal static string AsyncCallbackThrewException { get; }
    internal static string AsyncResultAlreadyEnded { get; }
    internal static string AsyncResultCompletedTwice { get; }
    internal static string AsyncTransactionException { get; }
    internal static string BufferAllocationFailed { get; }
    internal static string BufferAlreadyReclaimed { get; }
    internal static string BufferIsNotRightSizeForBufferManager { get; }
    internal static string CreateSessionOnClosingConnection { get; }
    internal static string CreditListenerAlreadyRegistered { get; }
    internal static string DeviceAlreadyExists { get; }
    internal static string DeviceImportError { get; }
    internal static string DeviceKeyLengthInvalid { get; }
    internal static string DeviceNotFound { get; }
    internal static string DeviceNotRegistered { get; }
    internal static string DeviceQuotaExceededExceptionMessage { get; }
    internal static string DispositionListenerAlreadyRegistered { get; }
    internal static string DispositionListenerSetNotSupported { get; }
    internal static string ErrorConvertingToChar { get; }
    internal static string ETagMismatch { get; }
    internal static string FailFastMessage { get; }
    internal static string InternalServerError { get; }
    internal static string InvalidAsyncResult { get; }
    internal static string InvalidAsyncResultImplementation { get; }
    internal static string InvalidAsyncResultImplementationGeneric { get; }
    internal static string InvalidBufferSize { get; }
    internal static string InvalidDeviceLine { get; }
    internal static string InvalidFrameSize { get; }
    internal static string InvalidNullAsyncResult { get; }
    internal static string InvalidSemaphoreExit { get; }
    internal static string IOThreadTimerCannotAcceptMaxTimeSpan { get; }
    internal static string IotHubSuspendedException { get; }
    internal static string MessageListenerAlreadyRegistered { get; }
    internal static string MessageQuotaExceededExceptionMessage { get; }
    internal static string NotSupportFrameCode { get; }
    internal static string ObjectIsReadOnly { get; }
    internal static string OperationTimedOut { get; }
    internal static string ServerCertificateNotSet { get; }
    internal static string ShipAssertExceptionMessage { get; }
    internal static string StringIsNotBase64 { get; }
    internal static string TargetHostNotSet { get; }
    internal static string TimeoutMustBeNonNegative { get; }
    internal static string TimeoutMustBePositive { get; }
    internal static string UnspecifiedError { get; }
    internal static string UserErrorFormat { get; }
    internal static string ValueMustBeNonNegative { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ActionItemIsAlreadyScheduled();
    internal static string get_ArgumentNullOrEmpty();
    internal static string get_ArgumentNullOrWhiteSpace();
    internal static string get_ArgumentOutOfRange();
    internal static string get_AsyncCallbackThrewException();
    internal static string get_AsyncResultAlreadyEnded();
    internal static string get_AsyncResultCompletedTwice();
    internal static string get_AsyncTransactionException();
    internal static string get_BufferAllocationFailed();
    internal static string get_BufferAlreadyReclaimed();
    internal static string get_BufferIsNotRightSizeForBufferManager();
    internal static string get_CreateSessionOnClosingConnection();
    internal static string get_CreditListenerAlreadyRegistered();
    internal static string get_DeviceAlreadyExists();
    internal static string get_DeviceImportError();
    internal static string get_DeviceKeyLengthInvalid();
    internal static string get_DeviceNotFound();
    internal static string get_DeviceNotRegistered();
    internal static string get_DeviceQuotaExceededExceptionMessage();
    internal static string get_DispositionListenerAlreadyRegistered();
    internal static string get_DispositionListenerSetNotSupported();
    internal static string get_ErrorConvertingToChar();
    internal static string get_ETagMismatch();
    internal static string get_FailFastMessage();
    internal static string get_InternalServerError();
    internal static string get_InvalidAsyncResult();
    internal static string get_InvalidAsyncResultImplementation();
    internal static string get_InvalidAsyncResultImplementationGeneric();
    internal static string get_InvalidBufferSize();
    internal static string get_InvalidDeviceLine();
    internal static string get_InvalidFrameSize();
    internal static string get_InvalidNullAsyncResult();
    internal static string get_InvalidSemaphoreExit();
    internal static string get_IOThreadTimerCannotAcceptMaxTimeSpan();
    internal static string get_IotHubSuspendedException();
    internal static string get_MessageListenerAlreadyRegistered();
    internal static string get_MessageQuotaExceededExceptionMessage();
    internal static string get_NotSupportFrameCode();
    internal static string get_ObjectIsReadOnly();
    internal static string get_OperationTimedOut();
    internal static string get_ServerCertificateNotSet();
    internal static string get_ShipAssertExceptionMessage();
    internal static string get_StringIsNotBase64();
    internal static string get_TargetHostNotSet();
    internal static string get_TimeoutMustBeNonNegative();
    internal static string get_TimeoutMustBePositive();
    internal static string get_UnspecifiedError();
    internal static string get_UserErrorFormat();
    internal static string get_ValueMustBeNonNegative();
}
internal interface Microsoft.Azure.Devices.Common.Security.ISharedAccessSignatureCredential {
    public abstract virtual bool IsExpired();
    public abstract virtual DateTime ExpiryTime();
}
public static class Microsoft.Azure.Devices.Common.Security.SecurityConstants : object {
    public static string BearerTokenScheme;
    public static string CertificateScheme;
    public static string AuthenticationScheme;
    public static string ResourceProviderClientAccessRole;
    public static string ResourceProviderAdminAccessRole;
    public static string ResourceProviderFullAccessRole;
    public static string NonSecureConnection;
    public static string AuthenticationFailed;
    public static string AuthorizationFailed;
    public static string MissingCertificate;
    public static int DefaultKeyLengthInBytes;
    public static int MinKeyLengthInBytes;
    public static int MaxKeyLengthInBytes;
    public static string WwwAuthenticateHeader;
    public static string DefaultOwnerSaSKeyName;
    public static string DefaultServiceSaSKeyName;
    public static string DefaultDeviceSaSKeyName;
    public static string DefaultRegistryReadSaSKeyName;
    public static string DefaultRegistryReadWriteSaSKeyName;
    public static string AdminSaSKeyName;
    public static int SaSKeyLength;
    public static int SasKeyNameMaxLength;
    public static string SharedAccessKey;
    public static string SharedAccessKeyFieldName;
    public static string SharedAccessKeyFullFieldName;
}
public static class Microsoft.Azure.Devices.Common.Security.SecurityHelper : object {
    public static void ValidateIotHubHostName(string iotHubHostName, string iotHubName);
}
internal class Microsoft.Azure.Devices.Common.Security.SharedAccessSignature : object {
    private string _encodedAudience;
    private string _expiry;
    [CompilerGeneratedAttribute]
private string <IotHubName>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Signature>k__BackingField;
    public string IotHubName { get; private set; }
    public DateTime ExpiresOn { get; private set; }
    public string KeyName { get; private set; }
    public string Audience { get; private set; }
    public string Signature { get; private set; }
    private SharedAccessSignature(string iotHubName, DateTime expiresOn, string expiry, string keyName, string signature, string encodedAudience);
    [CompilerGeneratedAttribute]
public string get_IotHubName();
    [CompilerGeneratedAttribute]
private void set_IotHubName(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ExpiresOn();
    [CompilerGeneratedAttribute]
private void set_ExpiresOn(DateTime value);
    [CompilerGeneratedAttribute]
public string get_KeyName();
    [CompilerGeneratedAttribute]
private void set_KeyName(string value);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
private void set_Audience(string value);
    [CompilerGeneratedAttribute]
public string get_Signature();
    [CompilerGeneratedAttribute]
private void set_Signature(string value);
    public static SharedAccessSignature Parse(string iotHubName, string rawToken);
    public static bool IsSharedAccessSignature(string rawSignature);
    public sealed virtual bool IsExpired();
    public sealed virtual DateTime ExpiryTime();
    public string ComputeSignature(Byte[] key);
    private static IDictionary`2<string, string> ExtractFieldValues(string sharedAccessSignature);
}
public class Microsoft.Azure.Devices.Common.Security.SharedAccessSignatureBuilder : object {
    private string _key;
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeToLive>k__BackingField;
    public string KeyName { get; public set; }
    public string Key { get; public set; }
    public string Target { get; public set; }
    public TimeSpan TimeToLive { get; public set; }
    [CompilerGeneratedAttribute]
public string get_KeyName();
    [CompilerGeneratedAttribute]
public void set_KeyName(string value);
    public string get_Key();
    public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_TimeToLive();
    [CompilerGeneratedAttribute]
public void set_TimeToLive(TimeSpan value);
    public string ToSignature();
    private static string BuildSignature(string keyName, string key, string target, TimeSpan timeToLive);
    private static string BuildExpiresOn(TimeSpan timeToLive);
    private static string Sign(string requestString, string key);
}
internal static class Microsoft.Azure.Devices.Common.Security.SharedAccessSignatureConstants : object {
    public static int MaxKeyNameLength;
    public static int MaxKeyLength;
    public static string SharedAccessSignature;
    public static string AudienceFieldName;
    public static string SignatureFieldName;
    public static string KeyNameFieldName;
    public static string ExpiryFieldName;
    public static string SignedResourceFullFieldName;
    public static string KeyValueSeparator;
    public static string PairSeparator;
    public static DateTime EpochTime;
    public static TimeSpan MaxClockSkew;
    private static SharedAccessSignatureConstants();
}
internal static class Microsoft.Azure.Devices.Common.SerializationUtilities : object {
    private static Dictionary`2<Type, PropertyValueType> TypeToIntMap;
    private static SerializationUtilities();
    public static PropertyValueType GetTypeId(object value);
}
internal class Microsoft.Azure.Devices.Common.SignalGate : object {
    private int state;
    internal bool IsLocked { get; }
    internal bool IsSignalled { get; }
    internal bool get_IsLocked();
    internal bool get_IsSignalled();
    public bool Signal();
    public bool Unlock();
    private static void ThrowInvalidSignalGateState();
}
internal class Microsoft.Azure.Devices.Common.SignalGate`1 : SignalGate {
    [CompilerGeneratedAttribute]
private T <Result>k__BackingField;
    private T Result { get; private set; }
    [CompilerGeneratedAttribute]
private T get_Result();
    [CompilerGeneratedAttribute]
private void set_Result(T value);
    public bool Signal(T result);
    public bool Unlock(T& result);
}
internal abstract class Microsoft.Azure.Devices.Common.SingletonDictionary`2 : object {
    private ConcurrentDictionary`2<TKey, TaskCompletionSource`1<TValue>> dictionary;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) disposed;
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Common.SingletonDictionary`2/<GetOrCreate>d__4")]
public Task`1<TValue> GetOrCreate(TKey key, TimeSpan timeout);
    protected abstract virtual Task`1<TValue> OnCreateAsync(TKey key, TimeSpan timeout);
    protected abstract virtual void OnSafeClose(TValue value);
    protected bool Invalidate(TKey key);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Common.SingletonDictionary`2/<CreateValue>d__8")]
private Task CreateValue(TKey key, TaskCompletionSource`1<TValue> tcs, TimeSpan timeout);
}
internal static class Microsoft.Azure.Devices.Common.StringValidationHelper : object {
    private static char Base64Padding;
    private static HashSet`1<char> s_base64Table;
    private static StringValidationHelper();
    public static void EnsureBase64String(string value, string paramName);
    public static bool IsBase64StringValid(string value);
    public static void EnsureNullOrBase64String(string value, string paramName);
    public static bool IsNullOrBase64String(string value);
    public static bool IsBase64String(string value);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Devices.Common.TaskHelpers : object {
    public static Task CompletedTask;
    private static TaskHelpers();
    [ExtensionAttribute]
public static void Fork(Task thisTask);
    [ExtensionAttribute]
public static void Fork(Task thisTask, string tracingInfo);
    [ExtensionAttribute]
public static IAsyncResult ToAsyncResult(Task task, AsyncCallback callback, object state);
    [ExtensionAttribute]
public static IAsyncResult ToAsyncResult(Task`1<TResult> task, AsyncCallback callback, object state);
}
internal static class Microsoft.Azure.Devices.Common.Ticks : object {
    public static long Now { get; }
    public static long get_Now();
    public static long FromMilliseconds(int milliseconds);
    public static int ToMilliseconds(long ticks);
    public static long FromTimeSpan(TimeSpan duration);
    public static TimeSpan ToTimeSpan(long ticks);
    public static long Add(long firstTicks, long secondTicks);
}
[DebuggerStepThroughAttribute]
internal class Microsoft.Azure.Devices.Common.TimeoutHelper : ValueType {
    private DateTime deadline;
    private bool deadlineSet;
    private TimeSpan originalTimeout;
    public static TimeSpan MaxWait;
    public TimeSpan OriginalTimeout { get; }
    public TimeoutHelper(TimeSpan timeout);
    public TimeoutHelper(TimeSpan timeout, bool startTimeout);
    private static TimeoutHelper();
    public TimeSpan get_OriginalTimeout();
    public static bool IsTooLarge(TimeSpan timeout);
    public static TimeSpan FromMilliseconds(int milliseconds);
    public static int ToMilliseconds(TimeSpan timeout);
    public static TimeSpan Min(TimeSpan val1, TimeSpan val2);
    public static DateTime Min(DateTime val1, DateTime val2);
    public static TimeSpan Add(TimeSpan timeout1, TimeSpan timeout2);
    public static DateTime Add(DateTime time, TimeSpan timeout);
    public static DateTime Subtract(DateTime time, TimeSpan timeout);
    public static TimeSpan Divide(TimeSpan timeout, int factor);
    public TimeSpan RemainingTime();
    public TimeSpan ElapsedTime();
    private void SetDeadline();
    public static void ThrowIfNegativeArgument(TimeSpan timeout);
    public static void ThrowIfNegativeArgument(TimeSpan timeout, string argumentName);
    public static void ThrowIfNonPositiveArgument(TimeSpan timeout);
    public static void ThrowIfNonPositiveArgument(TimeSpan timeout, string argumentName);
}
internal class Microsoft.Azure.Devices.Common.Timestamp : ValueType {
    private static double TickFrequency;
    private long timestamp;
    public static Timestamp Now { get; }
    public TimeSpan Elapsed { get; }
    public long ElapsedTicks { get; }
    public Timestamp(long timestamp);
    private static Timestamp();
    public static Timestamp get_Now();
    public TimeSpan get_Elapsed();
    public long get_ElapsedTicks();
    private static long ConvertRawTicksToTicks(long rawTicks);
    private long GetRawElapsedTicks();
    private long GetElapsedDateTimeTicks();
    public sealed virtual int CompareTo(Timestamp other);
    public sealed virtual bool Equals(Timestamp other);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public static bool op_Equality(Timestamp t1, Timestamp t2);
    public static bool op_Inequality(Timestamp t1, Timestamp t2);
    public static bool op_GreaterThan(Timestamp t1, Timestamp t2);
    public static bool op_LessThan(Timestamp t1, Timestamp t2);
    public static bool op_GreaterThanOrEqual(Timestamp t1, Timestamp t2);
    public static bool op_LessThanOrEqual(Timestamp t1, Timestamp t2);
    public static Timestamp op_Addition(Timestamp t, TimeSpan duration);
    public static Timestamp op_Subtraction(Timestamp t, TimeSpan duration);
    public static TimeSpan op_Subtraction(Timestamp t1, Timestamp t2);
}
internal static class Microsoft.Azure.Devices.Common.TokenHelper : object {
    public static bool IsCloseToExpiry(DateTimeOffset expiry);
}
internal enum Microsoft.Azure.Devices.Common.TraceOperation : Enum {
    public int value__;
    public static TraceOperation Initialize;
    public static TraceOperation Create;
    public static TraceOperation Delete;
    public static TraceOperation Add;
    public static TraceOperation Remove;
    public static TraceOperation Open;
    public static TraceOperation Close;
    public static TraceOperation Send;
    public static TraceOperation Receive;
    public static TraceOperation Connect;
    public static TraceOperation Accept;
    public static TraceOperation Execute;
    public static TraceOperation Bind;
    public static TraceOperation Attach;
    public static TraceOperation Abort;
    public static TraceOperation Flow;
    public static TraceOperation ActiveLinkRegistered;
    public static TraceOperation ActiveLinkUpdated;
    public static TraceOperation ActiveLinkExpired;
    public static TraceOperation ActiveLinkRefreshed;
}
internal class Microsoft.Azure.Devices.Common.Tracing.EventTraceActivity : object {
    private static EventTraceActivity s_empty;
    [CompilerGeneratedAttribute]
private Guid <ActivityId>k__BackingField;
    public static string Name { get; }
    public Guid ActivityId { get; public set; }
    public static EventTraceActivity Empty { get; }
    public EventTraceActivity(Guid activityId);
    public static string get_Name();
    [CompilerGeneratedAttribute]
public Guid get_ActivityId();
    [CompilerGeneratedAttribute]
public void set_ActivityId(Guid value);
    public static EventTraceActivity get_Empty();
    public static EventTraceActivity CreateFromThread();
}
[ExtensionAttribute]
[ObsoleteAttribute("This is for internal use only. SDK will not support this for external usage.")]
public static class Microsoft.Azure.Devices.Common.TrackingHelper : object {
    public static string GatewayId;
    private static string GatewayPrefix;
    private static string BackendPrefix;
    private static string PartitionPrefix;
    private static string TimeStampPrefix;
    public static string GenerateTrackingId();
    public static string GenerateTrackingId(string backendId, string partitionId);
    public static string GenerateTrackingId(string gatewayId, string backendId, string partitionId);
    [ExtensionAttribute]
public static string GenerateTrackingId(AmqpException exception);
    [ExtensionAttribute]
public static string GenerateTrackingId(AmqpException exception, string backendId, string partitionId);
    [ExtensionAttribute]
public static string GenerateTrackingId(AmqpException exception, string gatewayId, string backendId, string partitionId);
    [ExtensionAttribute]
public static void SetErrorCode(AmqpException exception);
    public static string CheckAndAddGatewayIdToTrackingId(string trackingId);
    [ExtensionAttribute]
public static string GetTrackingId(AmqpException amqpException);
    [ExtensionAttribute]
public static string GetGatewayId(AmqpLink link);
    public static ErrorCode GetErrorCodeFromAmqpError(Error ex);
}
public class Microsoft.Azure.Devices.Common.TryParse`2 : MulticastDelegate {
    public TryParse`2(object object, IntPtr method);
    public virtual bool Invoke(TInput input, bool ignoreCase, TOutput& output);
    public virtual IAsyncResult BeginInvoke(TInput input, bool ignoreCase, TOutput& output, AsyncCallback callback, object object);
    public virtual bool EndInvoke(TOutput& output, IAsyncResult result);
}
internal static class Microsoft.Azure.Devices.Common.Utils : object {
    public static bool IsValidBase64(string input, Int32& lengthInBytes);
    public static void ValidateBufferBounds(Byte[] buffer, int offset, int size);
    private static void ValidateBufferBounds(int bufferSize, int offset, int size);
    public static string GetClientVersion();
}
internal static class Microsoft.Azure.Devices.Common.WaitCallbackActionItem : object {
    [CompilerGeneratedAttribute]
private static bool <ShouldUseActivity>k__BackingField;
    internal static bool ShouldUseActivity { get; internal set; }
    [CompilerGeneratedAttribute]
internal static bool get_ShouldUseActivity();
    [CompilerGeneratedAttribute]
internal static void set_ShouldUseActivity(bool value);
}
public static class Microsoft.Azure.Devices.Common.WebApi.CustomHeaderConstants : object {
    public static string CorrelationId;
    public static string MessageId;
    public static string SequenceNumber;
    public static string To;
    public static string EnqueuedTime;
    public static string DeliveryCount;
    public static string ExpiryTime;
    public static string UserId;
    public static string Operation;
    public static string Ack;
    public static string MessageLockToken;
    public static string MessageLockTimeout;
    public static string HttpAppPropertyPrefix;
    public static string HttpIotHubName;
    public static string HttpIotHub;
    public static string HttpDevice;
    public static string ClientIpAddress;
    public static string PrincipalName;
    public static string ClientTenantId;
    public static string ClientAudience;
    public static string ClientIssuer;
    public static string ClientObjectId;
    public static string ClientAppId;
    public static string ClientRequestId;
    public static string ReturnClientRequestId;
    public static string ActivityId;
    public static string ApiVersion;
    public static string MicrosoftAsyncOperationHeaderName;
    public static string RequestId;
    public static string HttpErrorCodeName;
}
[ObsoleteAttribute("This class appears to be unreferenced")]
public class Microsoft.Azure.Devices.Common.WebApi.ResourceRequest : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Properties>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute("location")]
public string Location { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute("tags")]
public IDictionary`2<string, string> Tags { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute("properties")]
public IDictionary`2<string, object> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, object> value);
}
public class Microsoft.Azure.Devices.Configuration : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SchemaVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Labels>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurationContent <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdatedTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurationMetrics <SystemMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurationMetrics <Metrics>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; internal set; }
    [JsonPropertyAttribute]
public string SchemaVersion { get; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Labels { get; public set; }
    [JsonPropertyAttribute]
public ConfigurationContent Content { get; public set; }
    [JsonPropertyAttribute]
public string ContentType { get; }
    [JsonPropertyAttribute]
public string TargetCondition { get; public set; }
    [JsonPropertyAttribute]
public DateTime CreatedTimeUtc { get; internal set; }
    [JsonPropertyAttribute]
public DateTime LastUpdatedTimeUtc { get; internal set; }
    [JsonPropertyAttribute]
public int Priority { get; public set; }
    [JsonPropertyAttribute]
public ConfigurationMetrics SystemMetrics { get; internal set; }
    [JsonPropertyAttribute]
public ConfigurationMetrics Metrics { get; public set; }
    [JsonPropertyAttribute]
public string ETag { get; public set; }
    public Configuration(string configurationId);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_SchemaVersion();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public ConfigurationContent get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(ConfigurationContent value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public string get_TargetCondition();
    [CompilerGeneratedAttribute]
public void set_TargetCondition(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedTimeUtc();
    [CompilerGeneratedAttribute]
internal void set_CreatedTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdatedTimeUtc();
    [CompilerGeneratedAttribute]
internal void set_LastUpdatedTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
public int get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(int value);
    [CompilerGeneratedAttribute]
public ConfigurationMetrics get_SystemMetrics();
    [CompilerGeneratedAttribute]
internal void set_SystemMetrics(ConfigurationMetrics value);
    [CompilerGeneratedAttribute]
public ConfigurationMetrics get_Metrics();
    [CompilerGeneratedAttribute]
public void set_Metrics(ConfigurationMetrics value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ETag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ETag(string value);
}
public class Microsoft.Azure.Devices.ConfigurationContent : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IDictionary`2<string, object>> <ModulesContent>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <ModuleContent>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <DeviceContent>k__BackingField;
    [JsonPropertyAttribute]
public IDictionary`2<string, IDictionary`2<string, object>> ModulesContent { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, object> ModuleContent { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, object> DeviceContent { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IDictionary`2<string, object>> get_ModulesContent();
    [CompilerGeneratedAttribute]
public void set_ModulesContent(IDictionary`2<string, IDictionary`2<string, object>> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_ModuleContent();
    [CompilerGeneratedAttribute]
public void set_ModuleContent(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_DeviceContent();
    [CompilerGeneratedAttribute]
public void set_DeviceContent(IDictionary`2<string, object> value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.ConfigurationImportMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ConfigurationImportMode CreateOrUpdateIfMatchETag;
}
public class Microsoft.Azure.Devices.ConfigurationMetrics : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, long> <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Queries>k__BackingField;
    [JsonPropertyAttribute("results")]
public IDictionary`2<string, long> Results { get; public set; }
    [JsonPropertyAttribute("queries")]
public IDictionary`2<string, string> Queries { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, long> get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(IDictionary`2<string, long> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Queries();
    [CompilerGeneratedAttribute]
public void set_Queries(IDictionary`2<string, string> value);
}
public enum Microsoft.Azure.Devices.DeliveryAcknowledgement : Enum {
    public int value__;
    public static DeliveryAcknowledgement None;
    public static DeliveryAcknowledgement NegativeOnly;
    public static DeliveryAcknowledgement PositiveOnly;
    public static DeliveryAcknowledgement Full;
}
public class Microsoft.Azure.Devices.Device : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GenerationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceConnectionState <ConnectionState>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusReason>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ConnectionStateUpdatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StatusUpdatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastActivityTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CloudToDeviceMessageCount>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationMechanism <Authentication>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceCapabilities <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ParentScopes>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; internal set; }
    [JsonPropertyAttribute]
public string GenerationId { get; internal set; }
    [JsonPropertyAttribute]
public string ETag { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public DeviceConnectionState ConnectionState { get; internal set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public DeviceStatus Status { get; public set; }
    [JsonPropertyAttribute]
public string StatusReason { get; public set; }
    [JsonPropertyAttribute]
public DateTime ConnectionStateUpdatedTime { get; internal set; }
    [JsonPropertyAttribute]
public DateTime StatusUpdatedTime { get; internal set; }
    [JsonPropertyAttribute]
public DateTime LastActivityTime { get; internal set; }
    [JsonPropertyAttribute]
public int CloudToDeviceMessageCount { get; internal set; }
    [JsonPropertyAttribute]
public AuthenticationMechanism Authentication { get; public set; }
    [JsonPropertyAttribute]
public DeviceCapabilities Capabilities { get; public set; }
    [JsonPropertyAttribute]
public string Scope { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> ParentScopes { get; internal set; }
    public Device(string id);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_GenerationId();
    [CompilerGeneratedAttribute]
internal void set_GenerationId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ETag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ETag(string value);
    [CompilerGeneratedAttribute]
public DeviceConnectionState get_ConnectionState();
    [CompilerGeneratedAttribute]
internal void set_ConnectionState(DeviceConnectionState value);
    [CompilerGeneratedAttribute]
public DeviceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(DeviceStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusReason();
    [CompilerGeneratedAttribute]
public void set_StatusReason(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ConnectionStateUpdatedTime();
    [CompilerGeneratedAttribute]
internal void set_ConnectionStateUpdatedTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_StatusUpdatedTime();
    [CompilerGeneratedAttribute]
internal void set_StatusUpdatedTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastActivityTime();
    [CompilerGeneratedAttribute]
internal void set_LastActivityTime(DateTime value);
    [CompilerGeneratedAttribute]
public int get_CloudToDeviceMessageCount();
    [CompilerGeneratedAttribute]
internal void set_CloudToDeviceMessageCount(int value);
    [CompilerGeneratedAttribute]
public AuthenticationMechanism get_Authentication();
    [CompilerGeneratedAttribute]
public void set_Authentication(AuthenticationMechanism value);
    [CompilerGeneratedAttribute]
public virtual DeviceCapabilities get_Capabilities();
    [CompilerGeneratedAttribute]
public virtual void set_Capabilities(DeviceCapabilities value);
    [CompilerGeneratedAttribute]
public virtual string get_Scope();
    [CompilerGeneratedAttribute]
public virtual void set_Scope(string value);
    [CompilerGeneratedAttribute]
public virtual IList`1<string> get_ParentScopes();
    [CompilerGeneratedAttribute]
internal virtual void set_ParentScopes(IList`1<string> value);
}
public class Microsoft.Azure.Devices.DeviceJob : object {
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceJobType <JobType>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceJobStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EndTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedDateTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdatedDateTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceJobOutcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceJobError <Error>k__BackingField;
    [JsonPropertyAttribute]
public string DeviceId { get; public set; }
    [JsonPropertyAttribute]
public string JobId { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public DeviceJobType JobType { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public DeviceJobStatus Status { get; public set; }
    [JsonPropertyAttribute]
public DateTime StartTimeUtc { get; public set; }
    [JsonPropertyAttribute]
public DateTime EndTimeUtc { get; public set; }
    [JsonPropertyAttribute]
public DateTime CreatedDateTimeUtc { get; public set; }
    [JsonPropertyAttribute]
public DateTime LastUpdatedDateTimeUtc { get; public set; }
    [JsonPropertyAttribute]
public DeviceJobOutcome Outcome { get; public set; }
    [JsonPropertyAttribute]
public DeviceJobError Error { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public string get_JobId();
    [CompilerGeneratedAttribute]
public void set_JobId(string value);
    [CompilerGeneratedAttribute]
public DeviceJobType get_JobType();
    [CompilerGeneratedAttribute]
public void set_JobType(DeviceJobType value);
    [CompilerGeneratedAttribute]
public DeviceJobStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(DeviceJobStatus value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTimeUtc();
    [CompilerGeneratedAttribute]
public void set_StartTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_EndTimeUtc();
    [CompilerGeneratedAttribute]
public void set_EndTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedDateTimeUtc();
    [CompilerGeneratedAttribute]
public void set_CreatedDateTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdatedDateTimeUtc();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedDateTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
public DeviceJobOutcome get_Outcome();
    [CompilerGeneratedAttribute]
public void set_Outcome(DeviceJobOutcome value);
    [CompilerGeneratedAttribute]
public DeviceJobError get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(DeviceJobError value);
}
public class Microsoft.Azure.Devices.DeviceJobError : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [JsonPropertyAttribute("code")]
public string Code { get; public set; }
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public class Microsoft.Azure.Devices.DeviceJobOutcome : object {
    [CompilerGeneratedAttribute]
private CloudToDeviceMethodResult <DeviceMethodResponse>k__BackingField;
    [JsonPropertyAttribute]
public CloudToDeviceMethodResult DeviceMethodResponse { get; public set; }
    [CompilerGeneratedAttribute]
public CloudToDeviceMethodResult get_DeviceMethodResponse();
    [CompilerGeneratedAttribute]
public void set_DeviceMethodResponse(CloudToDeviceMethodResult value);
}
public class Microsoft.Azure.Devices.DeviceJobParameters : JobParameters {
    [CompilerGeneratedAttribute]
private IList`1<string> <DeviceIds>k__BackingField;
    public IList`1<string> DeviceIds { get; private set; }
    public DeviceJobParameters(JobType jobType, string deviceId);
    public DeviceJobParameters(JobType jobType, IEnumerable`1<string> deviceIds);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DeviceIds();
    [CompilerGeneratedAttribute]
private void set_DeviceIds(IList`1<string> value);
}
public class Microsoft.Azure.Devices.DeviceJobStatistics : object {
    [CompilerGeneratedAttribute]
private int <DeviceCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FailedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SucceededCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RunningCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PendingCount>k__BackingField;
    [JsonPropertyAttribute]
public int DeviceCount { get; public set; }
    [JsonPropertyAttribute]
public int FailedCount { get; public set; }
    [JsonPropertyAttribute]
public int SucceededCount { get; public set; }
    [JsonPropertyAttribute]
public int RunningCount { get; public set; }
    [JsonPropertyAttribute]
public int PendingCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_DeviceCount();
    [CompilerGeneratedAttribute]
public void set_DeviceCount(int value);
    [CompilerGeneratedAttribute]
public int get_FailedCount();
    [CompilerGeneratedAttribute]
public void set_FailedCount(int value);
    [CompilerGeneratedAttribute]
public int get_SucceededCount();
    [CompilerGeneratedAttribute]
public void set_SucceededCount(int value);
    [CompilerGeneratedAttribute]
public int get_RunningCount();
    [CompilerGeneratedAttribute]
public void set_RunningCount(int value);
    [CompilerGeneratedAttribute]
public int get_PendingCount();
    [CompilerGeneratedAttribute]
public void set_PendingCount(int value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.DeviceJobStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DeviceJobStatus Pending;
    [EnumMemberAttribute]
public static DeviceJobStatus Scheduled;
    [EnumMemberAttribute]
public static DeviceJobStatus Running;
    [EnumMemberAttribute]
public static DeviceJobStatus Completed;
    [EnumMemberAttribute]
public static DeviceJobStatus Failed;
    [EnumMemberAttribute]
public static DeviceJobStatus Canceled;
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.DeviceJobType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DeviceJobType Unknown;
    [EnumMemberAttribute]
public static DeviceJobType ScheduleDeviceMethod;
    [EnumMemberAttribute]
public static DeviceJobType ScheduleUpdateTwin;
}
public class Microsoft.Azure.Devices.DeviceRegistryOperationError : object {
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleId>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorCode <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorStatus>k__BackingField;
    [JsonPropertyAttribute]
public string DeviceId { get; public set; }
    [JsonPropertyAttribute]
public string ModuleId { get; public set; }
    [JsonPropertyAttribute]
public ErrorCode ErrorCode { get; public set; }
    [JsonPropertyAttribute]
public string ErrorStatus { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public string get_ModuleId();
    [CompilerGeneratedAttribute]
public void set_ModuleId(string value);
    [CompilerGeneratedAttribute]
public ErrorCode get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(ErrorCode value);
    [CompilerGeneratedAttribute]
public string get_ErrorStatus();
    [CompilerGeneratedAttribute]
public void set_ErrorStatus(string value);
}
internal class Microsoft.Azure.Devices.DigitalTwin.Authentication.DigitalTwinSasCredential : DigitalTwinServiceClientCredentials {
    private AzureSasCredential _credential;
    public DigitalTwinSasCredential(AzureSasCredential credential);
    public virtual string GetAuthorizationHeader();
}
internal class Microsoft.Azure.Devices.DigitalTwin.Authentication.DigitalTwinTokenCredential : DigitalTwinServiceClientCredentials {
    private object _tokenLock;
    private Nullable`1<AccessToken> _cachedAccessToken;
    private TokenCredential _credential;
    public DigitalTwinTokenCredential(TokenCredential credential);
    public virtual string GetAuthorizationHeader();
}
public class Microsoft.Azure.Devices.DigitalTwinClient : object {
    private static string HttpsEndpointPrefix;
    private IotHubGatewayServiceAPIs _client;
    private DigitalTwin _protocolLayer;
    private DigitalTwinClient(string hostName, DigitalTwinServiceClientCredentials credentials, DelegatingHandler[] handlers);
    public static DigitalTwinClient CreateFromConnectionString(string connectionString, DelegatingHandler[] handlers);
    public static DigitalTwinClient Create(string hostName, TokenCredential credential, DelegatingHandler[] handlers);
    public static DigitalTwinClient Create(string hostName, AzureSasCredential credential, DelegatingHandler[] handlers);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.DigitalTwinClient/<GetDigitalTwinAsync>d__7`1")]
public virtual Task`1<HttpOperationResponse`2<T, DigitalTwinGetHeaders>> GetDigitalTwinAsync(string digitalTwinId, CancellationToken cancellationToken);
    public virtual Task`1<HttpOperationHeaderResponse`1<DigitalTwinUpdateHeaders>> UpdateDigitalTwinAsync(string digitalTwinId, string digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions requestOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.DigitalTwinClient/<InvokeCommandAsync>d__9")]
public virtual Task`1<HttpOperationResponse`2<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders>> InvokeCommandAsync(string digitalTwinId, string commandName, string payload, DigitalTwinInvokeCommandRequestOptions requestOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.DigitalTwinClient/<InvokeComponentCommandAsync>d__10")]
public virtual Task`1<HttpOperationResponse`2<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders>> InvokeComponentCommandAsync(string digitalTwinId, string componentName, string commandName, string payload, DigitalTwinInvokeCommandRequestOptions requestOptions, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private static HttpMessageHandler CreateHttpHandlerPipeline(HttpMessageHandler httpMessageHandler, DelegatingHandler[] handlers);
}
public class Microsoft.Azure.Devices.DigitalTwinCommandResponse : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Payload>k__BackingField;
    public Nullable`1<int> Status { get; internal set; }
    public string Payload { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Payload();
    [CompilerGeneratedAttribute]
internal void set_Payload(string value);
}
public class Microsoft.Azure.Devices.DigitalTwinGetHeaders : object {
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [JsonPropertyAttribute]
public string ETag { get; internal set; }
    public DigitalTwinGetHeaders(string eTag);
    [CompilerGeneratedAttribute]
public string get_ETag();
    [CompilerGeneratedAttribute]
internal void set_ETag(string value);
}
public class Microsoft.Azure.Devices.DigitalTwinInvokeCommandHeaders : object {
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    public string RequestId { get; internal set; }
    public DigitalTwinInvokeCommandHeaders(string requestId);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
internal void set_RequestId(string value);
}
public class Microsoft.Azure.Devices.DigitalTwinInvokeCommandRequestOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConnectTimeoutInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ResponseTimeoutInSeconds>k__BackingField;
    public Nullable`1<int> ConnectTimeoutInSeconds { get; public set; }
    public Nullable`1<int> ResponseTimeoutInSeconds { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConnectTimeoutInSeconds();
    [CompilerGeneratedAttribute]
public void set_ConnectTimeoutInSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ResponseTimeoutInSeconds();
    [CompilerGeneratedAttribute]
public void set_ResponseTimeoutInSeconds(Nullable`1<int> value);
}
internal class Microsoft.Azure.Devices.DigitalTwinInvokeComponentCommandHeaders : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <XMsCommandStatuscode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XMsRequestId>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> XMsCommandStatuscode { get; public set; }
    [JsonPropertyAttribute]
public string XMsRequestId { get; public set; }
    public DigitalTwinInvokeComponentCommandHeaders(Nullable`1<int> xMsCommandStatuscode, string xMsRequestId);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_XMsCommandStatuscode();
    [CompilerGeneratedAttribute]
public void set_XMsCommandStatuscode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_XMsRequestId();
    [CompilerGeneratedAttribute]
public void set_XMsRequestId(string value);
}
internal class Microsoft.Azure.Devices.DigitalTwinInvokeRootLevelCommandHeaders : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <XMsCommandStatuscode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XMsRequestId>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> XMsCommandStatuscode { get; public set; }
    [JsonPropertyAttribute]
public string XMsRequestId { get; public set; }
    public DigitalTwinInvokeRootLevelCommandHeaders(Nullable`1<int> xMsCommandStatuscode, string xMsRequestId);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_XMsCommandStatuscode();
    [CompilerGeneratedAttribute]
public void set_XMsCommandStatuscode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_XMsRequestId();
    [CompilerGeneratedAttribute]
public void set_XMsRequestId(string value);
}
public class Microsoft.Azure.Devices.DigitalTwinUpdateHeaders : object {
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [JsonPropertyAttribute]
public string ETag { get; internal set; }
    [JsonPropertyAttribute]
public string Location { get; internal set; }
    public DigitalTwinUpdateHeaders(string eTag, string location);
    [CompilerGeneratedAttribute]
public string get_ETag();
    [CompilerGeneratedAttribute]
internal void set_ETag(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
internal void set_Location(string value);
}
public class Microsoft.Azure.Devices.DigitalTwinUpdateRequestOptions : object {
    [CompilerGeneratedAttribute]
private string <IfMatch>k__BackingField;
    public string IfMatch { get; public set; }
    [CompilerGeneratedAttribute]
public string get_IfMatch();
    [CompilerGeneratedAttribute]
public void set_IfMatch(string value);
}
public enum Microsoft.Azure.Devices.EndpointKind : Enum {
    public int value__;
    public static EndpointKind DeviceBound;
    public static EndpointKind Events;
    public static EndpointKind ServiceBound;
    public static EndpointKind Feedback;
    public static EndpointKind Response;
    public static EndpointKind FileNotification;
}
internal class Microsoft.Azure.Devices.ExceptionHandlingHelper : object {
    private static IReadOnlyDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> s_mappings;
    private static ExceptionHandlingHelper();
    public static IReadOnlyDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> GetDefaultErrorMapping();
    public static Task`1<string> GetExceptionMessageAsync(HttpResponseMessage response);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ExceptionHandlingHelper/<GetExceptionCodeAsync>d__3")]
public static Task`1<ErrorCode> GetExceptionCodeAsync(HttpResponseMessage response);
}
public class Microsoft.Azure.Devices.ExportImportDevice : object {
    private string _eTag;
    private string _twinETag;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleId>k__BackingField;
    [CompilerGeneratedAttribute]
private ImportMode <ImportMode>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusReason>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationMechanism <Authentication>k__BackingField;
    [CompilerGeneratedAttribute]
private TwinCollection <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyContainer <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceCapabilities <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceScope>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string ModuleId { get; public set; }
    [JsonPropertyAttribute]
public string ETag { get; public set; }
    [JsonPropertyAttribute]
public ImportMode ImportMode { get; public set; }
    [JsonPropertyAttribute]
public DeviceStatus Status { get; public set; }
    [JsonPropertyAttribute]
public string StatusReason { get; public set; }
    [JsonPropertyAttribute]
public AuthenticationMechanism Authentication { get; public set; }
    [JsonPropertyAttribute]
public string TwinETag { get; public set; }
    [JsonPropertyAttribute]
public TwinCollection Tags { get; public set; }
    [JsonPropertyAttribute]
public PropertyContainer Properties { get; public set; }
    [JsonPropertyAttribute]
public DeviceCapabilities Capabilities { get; public set; }
    [JsonPropertyAttribute]
public string DeviceScope { get; public set; }
    public ExportImportDevice(Device device, ImportMode importmode);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_ModuleId();
    [CompilerGeneratedAttribute]
public void set_ModuleId(string value);
    public string get_ETag();
    public void set_ETag(string value);
    [CompilerGeneratedAttribute]
public ImportMode get_ImportMode();
    [CompilerGeneratedAttribute]
public void set_ImportMode(ImportMode value);
    [CompilerGeneratedAttribute]
public DeviceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(DeviceStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusReason();
    [CompilerGeneratedAttribute]
public void set_StatusReason(string value);
    [CompilerGeneratedAttribute]
public AuthenticationMechanism get_Authentication();
    [CompilerGeneratedAttribute]
public void set_Authentication(AuthenticationMechanism value);
    public string get_TwinETag();
    public void set_TwinETag(string value);
    [CompilerGeneratedAttribute]
public TwinCollection get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(TwinCollection value);
    [CompilerGeneratedAttribute]
public PropertyContainer get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(PropertyContainer value);
    [CompilerGeneratedAttribute]
public DeviceCapabilities get_Capabilities();
    [CompilerGeneratedAttribute]
public void set_Capabilities(DeviceCapabilities value);
    [CompilerGeneratedAttribute]
public string get_DeviceScope();
    [CompilerGeneratedAttribute]
public void set_DeviceScope(string value);
    private static string SanitizeETag(string eTag);
}
public class Microsoft.Azure.Devices.ExportImportRequest : object {
    [CompilerGeneratedAttribute]
private string <StorageConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    public string StorageConnectionString { get; public set; }
    public string ContainerName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_StorageConnectionString();
    [CompilerGeneratedAttribute]
public void set_StorageConnectionString(string value);
    [CompilerGeneratedAttribute]
public string get_ContainerName();
    [CompilerGeneratedAttribute]
public void set_ContainerName(string value);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Devices.Extensions.Extensions : object {
    public static string ParameterNullErrorMessageFormat;
    public static string ParameterNullWhiteSpaceErrorMessageFormat;
    [ExtensionAttribute]
public static void ThrowIfNull(object argumentValue, string argumentName);
    [ExtensionAttribute]
internal static void ThrowIfNullOrWhiteSpace(string argumentValue, string argumentName);
    [ExtensionAttribute]
internal static void AddComponentUpdateIdentifier(Dictionary`2<string, object> propertyKeyValuePairs);
}
public class Microsoft.Azure.Devices.FeedbackBatch : object {
    [CompilerGeneratedAttribute]
private DateTime <EnqueuedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FeedbackRecord> <Records>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LockToken>k__BackingField;
    public DateTime EnqueuedTime { get; public set; }
    public IEnumerable`1<FeedbackRecord> Records { get; public set; }
    public string UserId { get; public set; }
    internal string LockToken { get; internal set; }
    [CompilerGeneratedAttribute]
public DateTime get_EnqueuedTime();
    [CompilerGeneratedAttribute]
public void set_EnqueuedTime(DateTime value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FeedbackRecord> get_Records();
    [CompilerGeneratedAttribute]
public void set_Records(IEnumerable`1<FeedbackRecord> value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
internal string get_LockToken();
    [CompilerGeneratedAttribute]
internal void set_LockToken(string value);
}
public abstract class Microsoft.Azure.Devices.FeedbackReceiver`1 : Receiver`1<T> {
}
public class Microsoft.Azure.Devices.FeedbackRecord : object {
    [CompilerGeneratedAttribute]
private string <OriginalMessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceGenerationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EnqueuedTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private FeedbackStatusCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [JsonPropertyAttribute]
public string OriginalMessageId { get; public set; }
    [JsonPropertyAttribute]
public string DeviceGenerationId { get; public set; }
    [JsonPropertyAttribute]
public string DeviceId { get; public set; }
    [JsonPropertyAttribute]
public DateTime EnqueuedTimeUtc { get; public set; }
    [JsonPropertyAttribute]
public FeedbackStatusCode StatusCode { get; public set; }
    [JsonPropertyAttribute]
public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OriginalMessageId();
    [CompilerGeneratedAttribute]
public void set_OriginalMessageId(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceGenerationId();
    [CompilerGeneratedAttribute]
public void set_DeviceGenerationId(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public DateTime get_EnqueuedTimeUtc();
    [CompilerGeneratedAttribute]
public void set_EnqueuedTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
public FeedbackStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(FeedbackStatusCode value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.FeedbackStatusCode : Enum {
    public int value__;
    public static FeedbackStatusCode Success;
    public static FeedbackStatusCode Expired;
    public static FeedbackStatusCode DeliveryCountExceeded;
    public static FeedbackStatusCode Rejected;
    public static FeedbackStatusCode Purged;
}
public class Microsoft.Azure.Devices.FileNotification : object {
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BlobUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BlobName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastUpdatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BlobSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EnqueuedTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LockToken>k__BackingField;
    [JsonPropertyAttribute]
public string DeviceId { get; public set; }
    [JsonPropertyAttribute]
public string BlobUri { get; public set; }
    [JsonPropertyAttribute]
public string BlobName { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> LastUpdatedTime { get; public set; }
    [JsonPropertyAttribute]
public long BlobSizeInBytes { get; public set; }
    [JsonPropertyAttribute]
public DateTime EnqueuedTimeUtc { get; public set; }
    [JsonIgnoreAttribute]
internal string LockToken { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public string get_BlobUri();
    [CompilerGeneratedAttribute]
public void set_BlobUri(string value);
    [CompilerGeneratedAttribute]
public string get_BlobName();
    [CompilerGeneratedAttribute]
public void set_BlobName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastUpdatedTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public long get_BlobSizeInBytes();
    [CompilerGeneratedAttribute]
public void set_BlobSizeInBytes(long value);
    [CompilerGeneratedAttribute]
public DateTime get_EnqueuedTimeUtc();
    [CompilerGeneratedAttribute]
public void set_EnqueuedTimeUtc(DateTime value);
    [CompilerGeneratedAttribute]
internal string get_LockToken();
    [CompilerGeneratedAttribute]
internal void set_LockToken(string value);
}
public abstract class Microsoft.Azure.Devices.FileNotificationReceiver`1 : Receiver`1<T> {
}
internal class Microsoft.Azure.Devices.Generated.DigitalTwin : object {
    [CompilerGeneratedAttribute]
private IotHubGatewayServiceAPIs <Client>k__BackingField;
    public IotHubGatewayServiceAPIs Client { get; private set; }
    public DigitalTwin(IotHubGatewayServiceAPIs client);
    [CompilerGeneratedAttribute]
public sealed virtual IotHubGatewayServiceAPIs get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(IotHubGatewayServiceAPIs value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwin/<GetDigitalTwinWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<HttpOperationResponse`2<string, DigitalTwinGetHeaders>> GetDigitalTwinWithHttpMessagesAsync(string id, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwin/<UpdateDigitalTwinWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<HttpOperationHeaderResponse`1<DigitalTwinUpdateHeaders>> UpdateDigitalTwinWithHttpMessagesAsync(string id, string digitalTwinPatch, string ifMatch, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwin/<InvokeRootLevelCommandWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<HttpOperationResponse`2<string, DigitalTwinInvokeRootLevelCommandHeaders>> InvokeRootLevelCommandWithHttpMessagesAsync(string id, string commandName, string payload, Nullable`1<int> connectTimeoutInSeconds, Nullable`1<int> responseTimeoutInSeconds, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwin/<InvokeComponentCommandWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<HttpOperationResponse`2<string, DigitalTwinInvokeComponentCommandHeaders>> InvokeComponentCommandWithHttpMessagesAsync(string id, string componentPath, string commandName, string payload, Nullable`1<int> connectTimeoutInSeconds, Nullable`1<int> responseTimeoutInSeconds, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Devices.Generated.DigitalTwinExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwinExtensions/<GetDigitalTwinAsync>d__0")]
[ExtensionAttribute]
public static Task`1<object> GetDigitalTwinAsync(IDigitalTwin operations, string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwinExtensions/<UpdateDigitalTwinAsync>d__1")]
[ExtensionAttribute]
public static Task`1<DigitalTwinUpdateHeaders> UpdateDigitalTwinAsync(IDigitalTwin operations, string id, string digitalTwinPatch, string ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwinExtensions/<InvokeRootLevelCommandAsync>d__2")]
[ExtensionAttribute]
public static Task`1<object> InvokeRootLevelCommandAsync(IDigitalTwin operations, string id, string commandName, string payload, Nullable`1<int> connectTimeoutInSeconds, Nullable`1<int> responseTimeoutInSeconds, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Generated.DigitalTwinExtensions/<InvokeComponentCommandAsync>d__3")]
[ExtensionAttribute]
public static Task`1<object> InvokeComponentCommandAsync(IDigitalTwin operations, string id, string componentPath, string commandName, string payload, Nullable`1<int> connectTimeoutInSeconds, Nullable`1<int> responseTimeoutInSeconds, CancellationToken cancellationToken);
}
internal interface Microsoft.Azure.Devices.Generated.IDigitalTwin {
    public abstract virtual Task`1<HttpOperationResponse`2<string, DigitalTwinGetHeaders>> GetDigitalTwinWithHttpMessagesAsync(string id, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationHeaderResponse`1<DigitalTwinUpdateHeaders>> UpdateDigitalTwinWithHttpMessagesAsync(string id, string digitalTwinPatch, string ifMatch, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`2<string, DigitalTwinInvokeRootLevelCommandHeaders>> InvokeRootLevelCommandWithHttpMessagesAsync(string id, string commandName, string payload, Nullable`1<int> connectTimeoutInSeconds, Nullable`1<int> responseTimeoutInSeconds, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpOperationResponse`2<string, DigitalTwinInvokeComponentCommandHeaders>> InvokeComponentCommandWithHttpMessagesAsync(string id, string componentPath, string commandName, string payload, Nullable`1<int> connectTimeoutInSeconds, Nullable`1<int> responseTimeoutInSeconds, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
internal interface Microsoft.Azure.Devices.Generated.IIotHubGatewayServiceAPIs {
    public Uri BaseUri { get; public set; }
    public JsonSerializerSettings SerializationSettings { get; }
    public JsonSerializerSettings DeserializationSettings { get; }
    public string ApiVersion { get; public set; }
    public ServiceClientCredentials Credentials { get; }
    public IDigitalTwin DigitalTwin { get; }
    public abstract virtual Uri get_BaseUri();
    public abstract virtual void set_BaseUri(Uri value);
    public abstract virtual JsonSerializerSettings get_SerializationSettings();
    public abstract virtual JsonSerializerSettings get_DeserializationSettings();
    public abstract virtual string get_ApiVersion();
    public abstract virtual void set_ApiVersion(string value);
    public abstract virtual ServiceClientCredentials get_Credentials();
    public abstract virtual IDigitalTwin get_DigitalTwin();
}
internal class Microsoft.Azure.Devices.Generated.IotHubGatewayServiceAPIs : ServiceClient`1<IotHubGatewayServiceAPIs> {
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <SerializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <DeserializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceClientCredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IDigitalTwin <DigitalTwin>k__BackingField;
    public Uri BaseUri { get; public set; }
    public JsonSerializerSettings SerializationSettings { get; private set; }
    public JsonSerializerSettings DeserializationSettings { get; private set; }
    public string ApiVersion { get; public set; }
    public ServiceClientCredentials Credentials { get; private set; }
    public IDigitalTwin DigitalTwin { get; private set; }
    protected IotHubGatewayServiceAPIs(HttpClient httpClient, bool disposeHttpClient);
    protected IotHubGatewayServiceAPIs(DelegatingHandler[] handlers);
    protected IotHubGatewayServiceAPIs(HttpClientHandler rootHandler, DelegatingHandler[] handlers);
    protected IotHubGatewayServiceAPIs(Uri baseUri, DelegatingHandler[] handlers);
    protected IotHubGatewayServiceAPIs(Uri baseUri, HttpClientHandler rootHandler, DelegatingHandler[] handlers);
    internal IotHubGatewayServiceAPIs(ServiceClientCredentials credentials, DelegatingHandler[] handlers);
    internal IotHubGatewayServiceAPIs(ServiceClientCredentials credentials, HttpClient httpClient, bool disposeHttpClient);
    internal IotHubGatewayServiceAPIs(ServiceClientCredentials credentials, HttpClientHandler rootHandler, DelegatingHandler[] handlers);
    internal IotHubGatewayServiceAPIs(Uri baseUri, ServiceClientCredentials credentials, DelegatingHandler[] handlers);
    internal IotHubGatewayServiceAPIs(Uri baseUri, ServiceClientCredentials credentials, HttpClientHandler rootHandler, DelegatingHandler[] handlers);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_SerializationSettings();
    [CompilerGeneratedAttribute]
private void set_SerializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_DeserializationSettings();
    [CompilerGeneratedAttribute]
private void set_DeserializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ServiceClientCredentials get_Credentials();
    [CompilerGeneratedAttribute]
private void set_Credentials(ServiceClientCredentials value);
    [CompilerGeneratedAttribute]
public virtual IDigitalTwin get_DigitalTwin();
    [CompilerGeneratedAttribute]
private void set_DigitalTwin(IDigitalTwin value);
    private void Initialize();
}
internal class Microsoft.Azure.Devices.HttpClientHelper : object {
    private static string ApplicationJson;
    private Uri _baseAddress;
    private IAuthorizationHeaderProvider _authenticationHeaderProvider;
    private IReadOnlyDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> _defaultErrorMapping;
    private TimeSpan _defaultOperationTimeout;
    private HttpClient _httpClientWithDefaultTimeout;
    private HttpClient _httpClientWithNoTimeout;
    public HttpClientHelper(Uri baseAddress, IAuthorizationHeaderProvider authenticationHeaderProvider, IReadOnlyDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> defaultErrorMapping, TimeSpan timeout, IWebProxy customHttpProxy, int connectionLeaseTimeoutMilliseconds);
    public sealed virtual Task`1<T> GetAsync(Uri requestUri, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> GetAsync(Uri requestUri, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, bool throwIfNotFound, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<GetAsync>d__10`1")]
public sealed virtual Task`1<T> GetAsync(Uri requestUri, TimeSpan operationTimeout, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, bool throwIfNotFound, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PutAsync>d__11`1")]
public sealed virtual Task`1<T> PutAsync(Uri requestUri, T entity, PutOperationType operationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PutAsync>d__12`2")]
public sealed virtual Task`1<T2> PutAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PutAsync>d__13`1")]
public sealed virtual Task PutAsync(Uri requestUri, T entity, string etag, PutOperationType operationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PutAsync>d__14`2")]
public sealed virtual Task`1<T2> PutAsync(Uri requestUri, T entity, string etag, PutOperationType operationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PatchAsync>d__15`1")]
public sealed virtual Task PatchAsync(Uri requestUri, T entity, string etag, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PatchAsync>d__16`2")]
public sealed virtual Task`1<T2> PatchAsync(Uri requestUri, T entity, string etag, PutOperationType putOperationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<ReadResponseMessageAsync>d__17`1")]
private static Task`1<T> ReadResponseMessageAsync(HttpResponseMessage message, CancellationToken token);
    private static Task AddCustomHeaders(HttpRequestMessage requestMessage, IDictionary`2<string, string> customHeaders);
    private static void InsertEtag(HttpRequestMessage requestMessage, IETagHolder entity, PutOperationType operationType);
    private static void InsertEtag(HttpRequestMessage requestMessage, string etag, PutOperationType operationType);
    private static void InsertEtag(HttpRequestMessage requestMessage, string etag);
    private IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> MergeErrorMapping(IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides);
    public sealed virtual Task PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    public sealed virtual Task PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, TimeSpan operationTimeout, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PostAsync>d__25`2")]
public sealed virtual Task`1<T2> PostAsync(Uri requestUri, T1 entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PostAsync>d__26`2")]
public sealed virtual Task`1<T2> PostAsync(Uri requestUri, T entity, TimeSpan operationTimeout, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PostAsync>d__27`2")]
public sealed virtual Task`1<T2> PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, MediaTypeHeaderValue customContentType, ICollection`1<string> customContentEncoding, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<PostAsync>d__28`1")]
public sealed virtual Task`1<HttpResponseMessage> PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, MediaTypeHeaderValue customContentType, ICollection`1<string> customContentEncoding, CancellationToken cancellationToken);
    private Task PostAsyncHelper(Uri requestUri, T1 entity, TimeSpan operationTimeout, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, MediaTypeHeaderValue customContentType, ICollection`1<string> customContentEncoding, Func`3<HttpResponseMessage, CancellationToken, Task> processResponseMessageAsync, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<DeleteAsync>d__31`1")]
public sealed virtual Task`1<T> DeleteAsync(Uri requestUri, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<ExecuteAsync>d__32")]
private Task ExecuteAsync(HttpMethod httpMethod, Uri requestUri, Func`3<HttpRequestMessage, CancellationToken, Task> modifyRequestMessageAsync, Func`3<HttpResponseMessage, CancellationToken, Task> processResponseMessageAsync, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<ExecuteWithCustomOperationTimeoutAsync>d__33")]
private Task ExecuteWithCustomOperationTimeoutAsync(HttpMethod httpMethod, Uri requestUri, TimeSpan operationTimeout, Func`3<HttpRequestMessage, CancellationToken, Task> modifyRequestMessageAsync, Func`2<HttpResponseMessage, bool> isMappedToException, Func`3<HttpResponseMessage, CancellationToken, Task> processResponseMessageAsync, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    public static bool IsMappedToException(HttpResponseMessage message);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<ExecuteAsync>d__36")]
private Task ExecuteAsync(HttpClient httpClient, HttpMethod httpMethod, Uri requestUri, Func`3<HttpRequestMessage, CancellationToken, Task> modifyRequestMessageAsync, Func`2<HttpResponseMessage, bool> isMappedToException, Func`3<HttpResponseMessage, CancellationToken, Task> processResponseMessageAsync, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.HttpClientHelper/<MapToExceptionAsync>d__37")]
private static Task`1<Exception> MapToExceptionAsync(HttpResponseMessage response, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMapping);
    internal static HttpClient CreateDefaultClient(IWebProxy webProxy, Uri baseUri, int connectionLeaseTimeoutMilliseconds);
    internal static HttpMessageHandler CreateDefaultHttpMessageHandler(IWebProxy webProxy, Uri baseUri, int connectionLeaseTimeoutMilliseconds);
}
public class Microsoft.Azure.Devices.HttpTransportSettings : object {
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConnectionLeaseTimeoutMilliseconds>k__BackingField;
    public IWebProxy Proxy { get; public set; }
    public int ConnectionLeaseTimeoutMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(IWebProxy value);
    [CompilerGeneratedAttribute]
public int get_ConnectionLeaseTimeoutMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ConnectionLeaseTimeoutMilliseconds(int value);
}
public interface Microsoft.Azure.Devices.IAuthenticationMethod {
    public abstract virtual IotHubConnectionStringBuilder Populate(IotHubConnectionStringBuilder iotHubConnectionStringBuilder);
}
internal interface Microsoft.Azure.Devices.IAuthorizationHeaderProvider {
    public abstract virtual string GetAuthorizationHeader();
}
internal interface Microsoft.Azure.Devices.IHttpClientHelper {
    public abstract virtual Task`1<T> GetAsync(Uri requestUri, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> GetAsync(Uri requestUri, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, bool throwIfNotFound, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> GetAsync(Uri requestUri, TimeSpan operationTimeout, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, bool throwIfNotFound, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> PutAsync(Uri requestUri, T entity, PutOperationType operationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    public abstract virtual Task`1<T2> PutAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    public abstract virtual Task PutAsync(Uri requestUri, T entity, string etag, PutOperationType operationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    public abstract virtual Task`1<T2> PutAsync(Uri requestUri, T entity, string etag, PutOperationType operationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    public abstract virtual Task PatchAsync(Uri requestUri, T entity, string etag, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    public abstract virtual Task`1<T2> PatchAsync(Uri requestUri, T entity, string etag, PutOperationType operationType, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, CancellationToken cancellationToken);
    public abstract virtual Task PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, TimeSpan operationTimeout, CancellationToken cancellationToken);
    public abstract virtual Task`1<T2> PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<T2> PostAsync(Uri requestUri, T entity, TimeSpan operationTimeout, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<T2> PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, MediaTypeHeaderValue customContentType, ICollection`1<string> customContentEncoding, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> PostAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, MediaTypeHeaderValue customContentType, ICollection`1<string> customContentEncoding, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(Uri requestUri, T entity, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> DeleteAsync(Uri requestUri, IDictionary`2<HttpStatusCode, Func`2<HttpResponseMessage, Task`1<Exception>>> errorMappingOverrides, IDictionary`2<string, string> customHeaders, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Devices.ImportConfiguration : Configuration {
    [CompilerGeneratedAttribute]
private ConfigurationImportMode <ImportMode>k__BackingField;
    [JsonPropertyAttribute]
public ConfigurationImportMode ImportMode { get; public set; }
    public ImportConfiguration(string configurationId);
    [CompilerGeneratedAttribute]
public ConfigurationImportMode get_ImportMode();
    [CompilerGeneratedAttribute]
public void set_ImportMode(ConfigurationImportMode value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.ImportMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ImportMode CreateOrUpdate;
    [EnumMemberAttribute]
public static ImportMode Create;
    [EnumMemberAttribute]
public static ImportMode Update;
    [EnumMemberAttribute]
public static ImportMode UpdateIfMatchETag;
    [EnumMemberAttribute]
public static ImportMode CreateOrUpdateIfMatchETag;
    [EnumMemberAttribute]
public static ImportMode Delete;
    [EnumMemberAttribute]
public static ImportMode DeleteIfMatchETag;
    [EnumMemberAttribute]
public static ImportMode UpdateTwin;
    [EnumMemberAttribute]
public static ImportMode UpdateTwinIfMatchETag;
}
internal class Microsoft.Azure.Devices.IOThreadTimerSlim : object {
    private Timer _timer;
    private Action`1<object> _callback;
    private object _callbackState;
    private SemaphoreSlim _timerSemaphore;
    public IOThreadTimerSlim(Action`1<object> callback, object callbackState);
    public void Set(TimeSpan timeFromNow);
    public bool Cancel();
    public sealed virtual void Dispose();
    private void CreateTimer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void <CreateTimer>b__8_0(object obj);
}
internal class Microsoft.Azure.Devices.IotHubApiResources : ApiResources {
    internal static string GetString(string value, Object[] args);
}
internal class Microsoft.Azure.Devices.IotHubClientWebSocket : object {
    private static string HttpGetHeaderFormat;
    private static string EndOfLineSuffix;
    private static byte FIN;
    private static byte RSV;
    private static byte Mask;
    private static byte PayloadMask;
    private static byte Continuation;
    private static byte Text;
    private static byte Binary;
    private static byte Close;
    private static byte Ping;
    private static byte Pong;
    private static byte MediumSizeFrame;
    private static byte LargeSizeFrame;
    private static string HostHeaderPrefix;
    private static string Separator;
    private static string Upgrade;
    private static string Websocket;
    private static string ConnectionHeaderName;
    private static string FramingPrematureEOF;
    private static string ClientWebSocketNotInOpenStateDuringReceive;
    private static string ClientWebSocketNotInOpenStateDuringSend;
    private static string ServerRejectedUpgradeRequest;
    private static string UpgradeProtocolNotSupported;
    private static string SizeExceedsRemainingBufferSpace;
    private static Byte[] s_maskingKey;
    private static SHA1 s_sha1CryptoServiceProvider;
    private string _webSocketRole;
    private string _requestPath;
    private string _webSocketKey;
    private string _host;
    [CompilerGeneratedAttribute]
private WebSocketState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private TcpClient <TcpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private Stream <WebSocketStream>k__BackingField;
    public EndPoint LocalEndpoint { get; }
    public EndPoint RemoteEndpoint { get; }
    internal WebSocketState State { get; private set; }
    private TcpClient TcpClient { get; private set; }
    private Stream WebSocketStream { get; private set; }
    public IotHubClientWebSocket(string webSocketRole);
    public IotHubClientWebSocket(string webSocketRole, string requestPath);
    private static IotHubClientWebSocket();
    public EndPoint get_LocalEndpoint();
    public EndPoint get_RemoteEndpoint();
    [CompilerGeneratedAttribute]
internal WebSocketState get_State();
    [CompilerGeneratedAttribute]
private void set_State(WebSocketState value);
    [CompilerGeneratedAttribute]
private TcpClient get_TcpClient();
    [CompilerGeneratedAttribute]
private void set_TcpClient(TcpClient value);
    [CompilerGeneratedAttribute]
private Stream get_WebSocketStream();
    [CompilerGeneratedAttribute]
private void set_WebSocketStream(Stream value);
    public void Abort();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<ConnectAsync>d__53")]
public Task ConnectAsync(string host, int port, string scheme, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<ReceiveAsync>d__54")]
public Task`1<int> ReceiveAsync(Byte[] buffer, int offset, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<SendAsync>d__55")]
public Task SendAsync(Byte[] buffer, int offset, int size, WebSocketMessageType webSocketMessageType, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<CloseAsync>d__56")]
public Task CloseAsync();
    private static SHA1 InitCryptoServiceProvider();
    private static int GetSocketTimeoutInMilliSeconds(TimeSpan timeout);
    private static Byte[] PrepareWebSocketHeader(int bufferLength, WebSocketMessageType webSocketMessageType);
    private static byte PrepareOctet0(WebSocketMessageType webSocketMessageType);
    private static void MaskWebSocketData(Byte[] buffer, int offset, int size);
    private static bool ParseWebSocketFrameHeader(Byte[] buffer, Byte& payloadLength, Boolean& pongFrame);
    private void Fault();
    private void CleanUp();
    private bool VerifyWebSocketUpgradeResponse(NameValueCollection webSocketHeaders);
    private string BuildUpgradeRequest();
    private static string ComputeHash(string key);
    public static int IndexOfAsciiChar(Byte[] array, int offset, int count, char asciiChar);
    public static int IndexOfAsciiChars(Byte[] array, int offset, int count, char asciiChar1, char asciiChar2);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<ReadFromStreamAsync>d__71")]
private static Task`1<int> ReadFromStreamAsync(Stream stream, Byte[] buffer);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<ReadFromStreamAsync>d__72")]
private static Task`1<int> ReadFromStreamAsync(Stream stream, Byte[] buffer, int offset, int size);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<WriteToStreamAsync>d__73")]
private static Task WriteToStreamAsync(Stream stream, Byte[] buffer);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubClientWebSocket/<WriteToStreamAsync>d__74")]
private static Task WriteToStreamAsync(Stream stream, Byte[] buffer, int offset, int size);
}
internal class Microsoft.Azure.Devices.IotHubConnection : object {
    private static AmqpVersion s_amqpVersion_1_0_0;
    private static TimeSpan s_refreshTokenBuffer;
    private static TimeSpan s_refreshTokenRetryInterval;
    private static Lazy`1<bool> s_shouldDisableServerCertificateValidation;
    internal static TimeSpan DefaultOperationTimeout;
    internal static TimeSpan DefaultOpenTimeout;
    private bool _useWebSocketOnly;
    private ServiceClientTransportSettings _transportSettings;
    private FaultTolerantAmqpObject`1<AmqpSession> _faultTolerantSession;
    private ClientWebSocketTransport _clientWebSocketTransport;
    private IOThreadTimerSlim _refreshTokenTimer;
    [CompilerGeneratedAttribute]
private IotHubConnectionProperties <Credential>k__BackingField;
    internal IotHubConnectionProperties Credential { get; private set; }
    public IotHubConnection(IotHubConnectionProperties credential, bool useWebSocketOnly, ServiceClientTransportSettings transportSettings);
    internal IotHubConnection(Func`2<TimeSpan, Task`1<AmqpSession>> onCreate, Action`1<AmqpSession> onClose);
    private static IotHubConnection();
    [CompilerGeneratedAttribute]
internal IotHubConnectionProperties get_Credential();
    [CompilerGeneratedAttribute]
private void set_Credential(IotHubConnectionProperties value);
    public Task OpenAsync(TimeSpan timeout);
    public Task CloseAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<CreateSendingLinkAsync>d__19")]
public Task`1<SendingAmqpLink> CreateSendingLinkAsync(string path, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<CreateReceivingLinkAsync>d__20")]
public Task`1<ReceivingAmqpLink> CreateReceivingLinkAsync(string path, TimeSpan timeout, UInt32 prefetchCount);
    public void CloseLink(AmqpLink link);
    public static bool OnRemoteCertificateValidation(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);
    public static ArraySegment`1<byte> GetNextDeliveryTag(Int32& deliveryTag);
    public static ArraySegment`1<byte> ConvertToDeliveryTag(string lockToken);
    public sealed virtual void Dispose();
    private static bool InitializeDisableServerCertificateValidation();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<CreateSessionAsync>d__27")]
private Task`1<AmqpSession> CreateSessionAsync(TimeSpan timeout);
    private void CloseConnection(AmqpSession amqpSession);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<CreateClientWebSocketAsync>d__29")]
private Task`1<ClientWebSocket> CreateClientWebSocketAsync(Uri websocketUri, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<CreateLegacyClientWebSocketAsync>d__30")]
private static Task`1<IotHubClientWebSocket> CreateLegacyClientWebSocketAsync(Uri webSocketUri, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<CreateClientWebSocketTransportAsync>d__31")]
private Task`1<TransportBase> CreateClientWebSocketTransportAsync(TimeSpan timeout);
    private static AmqpSettings CreateAmqpSettings();
    private static AmqpLinkSettings SetLinkSettingsCommonProperties(AmqpLinkSettings linkSettings, TimeSpan timeSpan);
    private TlsTransportSettings CreateTlsTransportSettings();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<OpenLinkAsync>d__35")]
private static Task OpenLinkAsync(AmqpObject link, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<SendCbsTokenAsync>d__36")]
private Task SendCbsTokenAsync(AmqpCbsLink cbsLink, TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubConnection/<OnRefreshTokenAsync>d__37")]
private void OnRefreshTokenAsync();
    private void ScheduleTokenRefresh(DateTime expiresAtUtc);
}
internal abstract class Microsoft.Azure.Devices.IotHubConnectionProperties : object {
    private static string HostNameSeparator;
    private static string HttpsEndpointPrefix;
    [CompilerGeneratedAttribute]
private string <IotHubName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <HttpsEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <AmqpEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AmqpAudience>k__BackingField;
    public string IotHubName { get; protected set; }
    public string HostName { get; protected set; }
    public Uri HttpsEndpoint { get; protected set; }
    public Uri AmqpEndpoint { get; protected set; }
    public List`1<string> AmqpAudience { get; protected set; }
    protected IotHubConnectionProperties(string hostName);
    [CompilerGeneratedAttribute]
public string get_IotHubName();
    [CompilerGeneratedAttribute]
protected void set_IotHubName(string value);
    [CompilerGeneratedAttribute]
public string get_HostName();
    [CompilerGeneratedAttribute]
protected void set_HostName(string value);
    [CompilerGeneratedAttribute]
public Uri get_HttpsEndpoint();
    [CompilerGeneratedAttribute]
protected void set_HttpsEndpoint(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_AmqpEndpoint();
    [CompilerGeneratedAttribute]
protected void set_AmqpEndpoint(Uri value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AmqpAudience();
    [CompilerGeneratedAttribute]
protected void set_AmqpAudience(List`1<string> value);
    public abstract virtual string GetAuthorizationHeader();
    public abstract virtual Task`1<CbsToken> GetTokenAsync(Uri namespaceAddress, string appliesTo, String[] requiredClaims);
    public Uri BuildLinkAddress(string path);
    internal static string GetIotHubName(string hostName);
}
internal class Microsoft.Azure.Devices.IotHubConnectionString : IotHubConnectionProperties {
    private static TimeSpan _tokenTimeToLive;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessSignature>k__BackingField;
    public string Audience { get; private set; }
    public string SharedAccessKeyName { get; private set; }
    public string SharedAccessKey { get; private set; }
    public string SharedAccessSignature { get; private set; }
    public IotHubConnectionString(IotHubConnectionStringBuilder builder);
    private static IotHubConnectionString();
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
private void set_Audience(string value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessKeyName();
    [CompilerGeneratedAttribute]
private void set_SharedAccessKeyName(string value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessKey();
    [CompilerGeneratedAttribute]
private void set_SharedAccessKey(string value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessSignature();
    [CompilerGeneratedAttribute]
private void set_SharedAccessSignature(string value);
    public string GetPassword();
    public virtual string GetAuthorizationHeader();
    public virtual Task`1<CbsToken> GetTokenAsync(Uri namespaceAddress, string appliesTo, String[] requiredClaims);
    public static IotHubConnectionString Parse(string connectionString);
    private string BuildToken(TimeSpan& ttl);
}
public class Microsoft.Azure.Devices.IotHubConnectionStringBuilder : object {
    private static char ValuePairDelimiter;
    private static char ValuePairSeparator;
    private static string HostNameSeparator;
    private static string HostNamePropertyName;
    private static string SharedAccessKeyNamePropertyName;
    private static string SharedAccessKeyPropertyName;
    private static string SharedAccessSignaturePropertyName;
    private static string DeviceIdPropertyName;
    private static string ModuleIdPropertyName;
    private static string GatewayHostNamePropertyName;
    private static TimeSpan s_regexTimeoutMilliseconds;
    private static Regex s_hostNameRegex;
    private static Regex s_sharedAccessKeyNameRegex;
    private static Regex s_sharedAccessKeyRegex;
    private static Regex s_sharedAccessSignatureRegex;
    private static Regex s_idRegex;
    private string _hostName;
    private IAuthenticationMethod _authenticationMethod;
    [CompilerGeneratedAttribute]
private string <SharedAccessKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GatewayHostName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IotHubName>k__BackingField;
    public string HostName { get; public set; }
    public IAuthenticationMethod AuthenticationMethod { get; public set; }
    public string SharedAccessKeyName { get; internal set; }
    public string SharedAccessKey { get; internal set; }
    public string SharedAccessSignature { get; internal set; }
    public string DeviceId { get; internal set; }
    public string ModuleId { get; internal set; }
    public string GatewayHostName { get; internal set; }
    public string IotHubName { get; private set; }
    private static IotHubConnectionStringBuilder();
    public static IotHubConnectionStringBuilder Create(string hostname, IAuthenticationMethod authenticationMethod);
    public static IotHubConnectionStringBuilder Create(string iotHubConnectionString);
    public string get_HostName();
    public void set_HostName(string value);
    public IAuthenticationMethod get_AuthenticationMethod();
    public void set_AuthenticationMethod(IAuthenticationMethod value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessKeyName();
    [CompilerGeneratedAttribute]
internal void set_SharedAccessKeyName(string value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessKey();
    [CompilerGeneratedAttribute]
internal void set_SharedAccessKey(string value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessSignature();
    [CompilerGeneratedAttribute]
internal void set_SharedAccessSignature(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
internal void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public string get_ModuleId();
    [CompilerGeneratedAttribute]
internal void set_ModuleId(string value);
    [CompilerGeneratedAttribute]
public string get_GatewayHostName();
    [CompilerGeneratedAttribute]
internal void set_GatewayHostName(string value);
    [CompilerGeneratedAttribute]
public string get_IotHubName();
    [CompilerGeneratedAttribute]
private void set_IotHubName(string value);
    internal IotHubConnectionString ToIotHubConnectionString();
    public virtual string ToString();
    internal void Parse(string iotHubConnectionString);
    internal void Validate();
    internal void SetHostName(string hostname);
    internal void SetIotHubName();
    internal void SetAuthenticationMethod(IAuthenticationMethod authMethod);
    internal static void ValidateFormat(string value, string propertyName, Regex regex);
    internal static void ValidateFormatIfSpecified(string value, string propertyName, Regex regex);
    internal static string GetConnectionStringValue(IDictionary`2<string, string> map, string propertyName);
    internal static string GetConnectionStringOptionalValue(IDictionary`2<string, string> map, string propertyName);
    internal static string GetIotHubName(string hostName);
}
internal class Microsoft.Azure.Devices.IoTHubExceptionResult : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [JsonPropertyAttribute("Message")]
internal string Message { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_Message();
    [CompilerGeneratedAttribute]
internal void set_Message(string value);
}
internal class Microsoft.Azure.Devices.IotHubSasCredentialProperties : IotHubConnectionProperties {
    private AzureSasCredential _credential;
    public IotHubSasCredentialProperties(string hostName, AzureSasCredential credential);
    public virtual string GetAuthorizationHeader();
    public virtual Task`1<CbsToken> GetTokenAsync(Uri namespaceAddress, string appliesTo, String[] requiredClaims);
}
internal class Microsoft.Azure.Devices.IotHubTokenCrendentialProperties : IotHubConnectionProperties {
    private static string TokenType;
    private TokenCredential _credential;
    private object _tokenLock;
    private Nullable`1<AccessToken> _cachedAccessToken;
    public IotHubTokenCrendentialProperties(string hostName, TokenCredential credential);
    public virtual string GetAuthorizationHeader();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.IotHubTokenCrendentialProperties/<GetTokenAsync>d__6")]
public virtual Task`1<CbsToken> GetTokenAsync(Uri namespaceAddress, string appliesTo, String[] requiredClaims);
}
public interface Microsoft.Azure.Devices.IQuery {
    public bool HasMoreResults { get; }
    public abstract virtual bool get_HasMoreResults();
    public abstract virtual Task`1<IEnumerable`1<Twin>> GetNextAsTwinAsync();
    public abstract virtual Task`1<QueryResponse`1<Twin>> GetNextAsTwinAsync(QueryOptions options);
    public abstract virtual Task`1<IEnumerable`1<DeviceJob>> GetNextAsDeviceJobAsync();
    public abstract virtual Task`1<QueryResponse`1<DeviceJob>> GetNextAsDeviceJobAsync(QueryOptions options);
    public abstract virtual Task`1<IEnumerable`1<JobResponse>> GetNextAsJobResponseAsync();
    public abstract virtual Task`1<QueryResponse`1<JobResponse>> GetNextAsJobResponseAsync(QueryOptions options);
    public abstract virtual Task`1<IEnumerable`1<string>> GetNextAsJsonAsync();
    public abstract virtual Task`1<QueryResponse`1<string>> GetNextAsJsonAsync(QueryOptions options);
}
public class Microsoft.Azure.Devices.JobClient : object {
    private static string JobsUriFormat;
    private static string JobsQueryFormat;
    private static string CancelJobUriFormat;
    private static string ContinuationTokenHeader;
    private static string PageSizeHeader;
    private static TimeSpan s_defaultOperationTimeout;
    private IHttpClientHelper _httpClientHelper;
    internal JobClient(IHttpClientHelper httpClientHelper);
    internal JobClient(IotHubConnectionProperties connectionProperties, HttpTransportSettings transportSettings);
    private static JobClient();
    public static JobClient CreateFromConnectionString(string connectionString);
    public static JobClient CreateFromConnectionString(string connectionString, HttpTransportSettings transportSettings);
    public static JobClient Create(string hostName, TokenCredential credential, HttpTransportSettings transportSettings);
    public static JobClient Create(string hostName, AzureSasCredential credential, HttpTransportSettings transportSettings);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public virtual Task OpenAsync();
    public virtual Task CloseAsync();
    public virtual Task`1<JobResponse> GetJobAsync(string jobId);
    public virtual Task`1<JobResponse> GetJobAsync(string jobId, CancellationToken cancellationToken);
    public virtual IQuery CreateQuery();
    public virtual IQuery CreateQuery(Nullable`1<int> pageSize);
    public virtual IQuery CreateQuery(Nullable`1<JobType> jobType, Nullable`1<JobStatus> jobStatus);
    public virtual IQuery CreateQuery(Nullable`1<JobType> jobType, Nullable`1<JobStatus> jobStatus, Nullable`1<int> pageSize);
    public virtual Task`1<JobResponse> CancelJobAsync(string jobId);
    public virtual Task`1<JobResponse> CancelJobAsync(string jobId, CancellationToken cancellationToken);
    public virtual Task`1<JobResponse> ScheduleDeviceMethodAsync(string jobId, string queryCondition, CloudToDeviceMethod cloudToDeviceMethod, DateTime startTimeUtc, long maxExecutionTimeInSeconds);
    public virtual Task`1<JobResponse> ScheduleDeviceMethodAsync(string jobId, string queryCondition, CloudToDeviceMethod cloudToDeviceMethod, DateTime startTimeUtc, long maxExecutionTimeInSeconds, CancellationToken cancellationToken);
    public virtual Task`1<JobResponse> ScheduleTwinUpdateAsync(string jobId, string queryCondition, Twin twin, DateTime startTimeUtc, long maxExecutionTimeInSeconds);
    public virtual Task`1<JobResponse> ScheduleTwinUpdateAsync(string jobId, string queryCondition, Twin twin, DateTime startTimeUtc, long maxExecutionTimeInSeconds, CancellationToken cancellationToken);
    private void EnsureInstanceNotClosed();
    private static Uri GetJobUri(string jobId);
    private Task`1<JobResponse> CreateJobAsync(JobRequest jobRequest, CancellationToken cancellationToken);
    private static Uri BuildQueryJobUri(Nullable`1<JobType> jobType, Nullable`1<JobStatus> jobStatus);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.JobClient/<GetJobsAsync>d__34")]
private Task`1<QueryResult> GetJobsAsync(Nullable`1<JobType> jobType, Nullable`1<JobStatus> jobStatus, Nullable`1<int> pageSize, string continuationToken, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Devices.JobParameters : object {
    [CompilerGeneratedAttribute]
private JobType <JobType>k__BackingField;
    [JsonPropertyAttribute]
public JobType JobType { get; private set; }
    public JobParameters(JobType jobType);
    [CompilerGeneratedAttribute]
public JobType get_JobType();
    [CompilerGeneratedAttribute]
private void set_JobType(JobType value);
}
public class Microsoft.Azure.Devices.JobProperties : object {
    private static JobStatus[] s_finishedStates;
    [CompilerGeneratedAttribute]
private string <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private JobType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private JobStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureReason>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputBlobContainerUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputBlobContainerUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputBlobName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputBlobName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeKeysInExport>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StorageAuthenticationType> <StorageAuthenticationType>k__BackingField;
    [CompilerGeneratedAttribute]
private ManagedIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurationsBlobName>k__BackingField;
    [JsonPropertyAttribute]
public string JobId { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> EndTimeUtc { get; public set; }
    [JsonPropertyAttribute]
public JobType Type { get; public set; }
    [JsonPropertyAttribute]
public JobStatus Status { get; public set; }
    [JsonPropertyAttribute]
public string FailureReason { get; public set; }
    [JsonPropertyAttribute]
public int Progress { get; public set; }
    [JsonPropertyAttribute]
public string InputBlobContainerUri { get; public set; }
    [JsonPropertyAttribute]
public string OutputBlobContainerUri { get; public set; }
    [JsonPropertyAttribute]
public string InputBlobName { get; public set; }
    [JsonPropertyAttribute]
public string OutputBlobName { get; public set; }
    [JsonPropertyAttribute]
public bool ExcludeKeysInExport { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<StorageAuthenticationType> StorageAuthenticationType { get; public set; }
    [JsonPropertyAttribute]
public ManagedIdentity Identity { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IncludeConfigurations { get; public set; }
    [JsonPropertyAttribute]
public string ConfigurationsBlobName { get; public set; }
    [JsonIgnoreAttribute]
public bool IsFinished { get; }
    private static JobProperties();
    [CompilerGeneratedAttribute]
public string get_JobId();
    [CompilerGeneratedAttribute]
public void set_JobId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTimeUtc();
    [CompilerGeneratedAttribute]
public void set_StartTimeUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTimeUtc();
    [CompilerGeneratedAttribute]
public void set_EndTimeUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public JobType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(JobType value);
    [CompilerGeneratedAttribute]
public JobStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(JobStatus value);
    [CompilerGeneratedAttribute]
public string get_FailureReason();
    [CompilerGeneratedAttribute]
public void set_FailureReason(string value);
    [CompilerGeneratedAttribute]
public int get_Progress();
    [CompilerGeneratedAttribute]
public void set_Progress(int value);
    [CompilerGeneratedAttribute]
public string get_InputBlobContainerUri();
    [CompilerGeneratedAttribute]
public void set_InputBlobContainerUri(string value);
    [CompilerGeneratedAttribute]
public string get_OutputBlobContainerUri();
    [CompilerGeneratedAttribute]
public void set_OutputBlobContainerUri(string value);
    [CompilerGeneratedAttribute]
public string get_InputBlobName();
    [CompilerGeneratedAttribute]
public void set_InputBlobName(string value);
    [CompilerGeneratedAttribute]
public string get_OutputBlobName();
    [CompilerGeneratedAttribute]
public void set_OutputBlobName(string value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeKeysInExport();
    [CompilerGeneratedAttribute]
public void set_ExcludeKeysInExport(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<StorageAuthenticationType> get_StorageAuthenticationType();
    [CompilerGeneratedAttribute]
public void set_StorageAuthenticationType(Nullable`1<StorageAuthenticationType> value);
    [CompilerGeneratedAttribute]
public ManagedIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ManagedIdentity value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeConfigurations();
    [CompilerGeneratedAttribute]
public void set_IncludeConfigurations(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_ConfigurationsBlobName();
    [CompilerGeneratedAttribute]
public void set_ConfigurationsBlobName(string value);
    public bool get_IsFinished();
    public static JobProperties CreateForImportJob(string inputBlobContainerUri, string outputBlobContainerUri, string inputBlobName, Nullable`1<StorageAuthenticationType> storageAuthenticationType, ManagedIdentity identity);
    public static JobProperties CreateForExportJob(string outputBlobContainerUri, bool excludeKeysInExport, string outputBlobName, Nullable`1<StorageAuthenticationType> storageAuthenticationType, ManagedIdentity identity);
}
public class Microsoft.Azure.Devices.JobRequest : object {
    [CompilerGeneratedAttribute]
private string <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
private JobType <JobType>k__BackingField;
    [CompilerGeneratedAttribute]
private CloudToDeviceMethod <CloudToDeviceMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Twin <UpdateTwin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaxExecutionTimeInSeconds>k__BackingField;
    [JsonPropertyAttribute]
public string JobId { get; public set; }
    [JsonPropertyAttribute]
public JobType JobType { get; public set; }
    [JsonPropertyAttribute]
public CloudToDeviceMethod CloudToDeviceMethod { get; public set; }
    [JsonPropertyAttribute]
public Twin UpdateTwin { get; public set; }
    [JsonPropertyAttribute]
public string QueryCondition { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.IsoDateTimeConverter")]
public DateTime StartTime { get; public set; }
    [JsonPropertyAttribute]
public long MaxExecutionTimeInSeconds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_JobId();
    [CompilerGeneratedAttribute]
public void set_JobId(string value);
    [CompilerGeneratedAttribute]
public JobType get_JobType();
    [CompilerGeneratedAttribute]
public void set_JobType(JobType value);
    [CompilerGeneratedAttribute]
public CloudToDeviceMethod get_CloudToDeviceMethod();
    [CompilerGeneratedAttribute]
public void set_CloudToDeviceMethod(CloudToDeviceMethod value);
    [CompilerGeneratedAttribute]
public Twin get_UpdateTwin();
    [CompilerGeneratedAttribute]
public void set_UpdateTwin(Twin value);
    [CompilerGeneratedAttribute]
public string get_QueryCondition();
    [CompilerGeneratedAttribute]
public void set_QueryCondition(string value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public long get_MaxExecutionTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_MaxExecutionTimeInSeconds(long value);
}
public class Microsoft.Azure.Devices.JobResponse : object {
    [CompilerGeneratedAttribute]
private string <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreatedTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTimeUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaxExecutionTimeInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private JobType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private JobStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private CloudToDeviceMethod <CloudToDeviceMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Twin <UpdateTwin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureReason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceJobStatistics <DeviceJobStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentJobId>k__BackingField;
    [JsonPropertyAttribute]
public string JobId { get; internal set; }
    [JsonPropertyAttribute]
public string QueryCondition { get; internal set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> CreatedTimeUtc { get; internal set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> StartTimeUtc { get; internal set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> EndTimeUtc { get; internal set; }
    [JsonPropertyAttribute]
public long MaxExecutionTimeInSeconds { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public JobType Type { get; internal set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public JobStatus Status { get; internal set; }
    [JsonPropertyAttribute]
public CloudToDeviceMethod CloudToDeviceMethod { get; public set; }
    [JsonPropertyAttribute]
public Twin UpdateTwin { get; public set; }
    [JsonPropertyAttribute]
public string FailureReason { get; public set; }
    [JsonPropertyAttribute]
public string StatusMessage { get; public set; }
    [JsonPropertyAttribute]
public DeviceJobStatistics DeviceJobStatistics { get; public set; }
    [JsonPropertyAttribute]
public string DeviceId { get; public set; }
    [JsonPropertyAttribute]
public string ParentJobId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_JobId();
    [CompilerGeneratedAttribute]
internal void set_JobId(string value);
    [CompilerGeneratedAttribute]
public string get_QueryCondition();
    [CompilerGeneratedAttribute]
internal void set_QueryCondition(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreatedTimeUtc();
    [CompilerGeneratedAttribute]
internal void set_CreatedTimeUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTimeUtc();
    [CompilerGeneratedAttribute]
internal void set_StartTimeUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTimeUtc();
    [CompilerGeneratedAttribute]
internal void set_EndTimeUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public long get_MaxExecutionTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_MaxExecutionTimeInSeconds(long value);
    [CompilerGeneratedAttribute]
public JobType get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(JobType value);
    [CompilerGeneratedAttribute]
public JobStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(JobStatus value);
    [CompilerGeneratedAttribute]
public CloudToDeviceMethod get_CloudToDeviceMethod();
    [CompilerGeneratedAttribute]
public void set_CloudToDeviceMethod(CloudToDeviceMethod value);
    [CompilerGeneratedAttribute]
public Twin get_UpdateTwin();
    [CompilerGeneratedAttribute]
public void set_UpdateTwin(Twin value);
    [CompilerGeneratedAttribute]
public string get_FailureReason();
    [CompilerGeneratedAttribute]
public void set_FailureReason(string value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public DeviceJobStatistics get_DeviceJobStatistics();
    [CompilerGeneratedAttribute]
public void set_DeviceJobStatistics(DeviceJobStatistics value);
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public string get_ParentJobId();
    [CompilerGeneratedAttribute]
public void set_ParentJobId(string value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.JobStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static JobStatus Unknown;
    [EnumMemberAttribute]
public static JobStatus Enqueued;
    [EnumMemberAttribute]
public static JobStatus Running;
    [EnumMemberAttribute]
public static JobStatus Completed;
    [EnumMemberAttribute]
public static JobStatus Failed;
    [EnumMemberAttribute]
public static JobStatus Cancelled;
    [EnumMemberAttribute]
public static JobStatus Scheduled;
    [EnumMemberAttribute]
public static JobStatus Queued;
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.JobType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static JobType Unknown;
    [EnumMemberAttribute]
public static JobType ExportDevices;
    [EnumMemberAttribute]
public static JobType ImportDevices;
    [EnumMemberAttribute]
public static JobType ScheduleDeviceMethod;
    [EnumMemberAttribute]
public static JobType ScheduleUpdateTwin;
}
internal static class Microsoft.Azure.Devices.JsonSerializerSettingsInitializer : object {
    private static JsonSerializerSettings s_settings;
    private static JsonSerializerSettingsInitializer();
    internal static JsonSerializerSettings GetJsonSerializerSettings();
}
public class Microsoft.Azure.Devices.ManagedIdentity : object {
    [CompilerGeneratedAttribute]
private string <UserAssignedIdentity>k__BackingField;
    [ObsoleteAttribute("Use UserAssignedIdentity instead")]
[EditorBrowsableAttribute("1")]
[JsonIgnoreAttribute]
public string userAssignedIdentity { get; public set; }
    [JsonPropertyAttribute]
public string UserAssignedIdentity { get; public set; }
    public string get_userAssignedIdentity();
    public void set_userAssignedIdentity(string value);
    [CompilerGeneratedAttribute]
public string get_UserAssignedIdentity();
    [CompilerGeneratedAttribute]
public void set_UserAssignedIdentity(string value);
}
internal enum Microsoft.Azure.Devices.MappingType : Enum {
    public int value__;
    public static MappingType ApplicationProperty;
    public static MappingType MessageBody;
}
public class Microsoft.Azure.Devices.Message : object {
    private Stream modreq(System.Runtime.CompilerServices.IsVolatile) _bodyStream;
    private bool _disposed;
    private StreamDisposalResponsibility _streamDisposalResponsibility;
    private int _getBodyCalled;
    private long _sizeInBytesCalled;
    private static long StreamCannotSeek;
    private long _originalStreamPosition;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <SystemProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private ArraySegment`1<byte> <DeliveryTag>k__BackingField;
    public string MessageId { get; public set; }
    public string To { get; public set; }
    public DateTime ExpiryTimeUtc { get; public set; }
    public string CorrelationId { get; public set; }
    public DeliveryAcknowledgement Ack { get; public set; }
    internal ulong SequenceNumber { get; internal set; }
    public string LockToken { get; internal set; }
    internal DateTime EnqueuedTimeUtc { get; internal set; }
    internal UInt32 DeliveryCount { get; internal set; }
    public string UserId { get; public set; }
    public string MessageSchema { get; public set; }
    public DateTime CreationTimeUtc { get; public set; }
    public string ContentType { get; public set; }
    public string ContentEncoding { get; public set; }
    public IDictionary`2<string, string> Properties { get; private set; }
    internal IDictionary`2<string, object> SystemProperties { get; private set; }
    private bool Microsoft.Azure.Devices.Common.IReadOnlyIndicator.IsReadOnly { get; }
    internal Stream BodyStream { get; }
    internal ArraySegment`1<byte> DeliveryTag { get; internal set; }
    internal bool IsBodyCalled { get; }
    public Message(Stream stream);
    public Message(Byte[] byteArray);
    internal Message(AmqpMessage amqpMessage);
    internal Message(Stream stream, StreamDisposalResponsibility streamDisposalResponsibility);
    public string get_MessageId();
    public void set_MessageId(string value);
    public string get_To();
    public void set_To(string value);
    public DateTime get_ExpiryTimeUtc();
    public void set_ExpiryTimeUtc(DateTime value);
    public string get_CorrelationId();
    public void set_CorrelationId(string value);
    public DeliveryAcknowledgement get_Ack();
    public void set_Ack(DeliveryAcknowledgement value);
    internal ulong get_SequenceNumber();
    internal void set_SequenceNumber(ulong value);
    public string get_LockToken();
    internal void set_LockToken(string value);
    internal DateTime get_EnqueuedTimeUtc();
    internal void set_EnqueuedTimeUtc(DateTime value);
    internal UInt32 get_DeliveryCount();
    internal void set_DeliveryCount(UInt32 value);
    public string get_UserId();
    public void set_UserId(string value);
    public string get_MessageSchema();
    public void set_MessageSchema(string value);
    public DateTime get_CreationTimeUtc();
    public void set_CreationTimeUtc(DateTime value);
    public string get_ContentType();
    public void set_ContentType(string value);
    public string get_ContentEncoding();
    public void set_ContentEncoding(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
internal IDictionary`2<string, object> get_SystemProperties();
    [CompilerGeneratedAttribute]
private void set_SystemProperties(IDictionary`2<string, object> value);
    private sealed virtual override bool Microsoft.Azure.Devices.Common.IReadOnlyIndicator.get_IsReadOnly();
    internal Stream get_BodyStream();
    internal bool HasBodyStream();
    [CompilerGeneratedAttribute]
internal ArraySegment`1<byte> get_DeliveryTag();
    [CompilerGeneratedAttribute]
internal void set_DeliveryTag(ArraySegment`1<byte> value);
    public Message Clone();
    public sealed virtual void Dispose();
    public Stream GetBodyStream();
    public Byte[] GetBytes();
    internal void ResetBody();
    internal bool get_IsBodyCalled();
    private void SetGetBodyCalled();
    private void SetSizeInBytesCalled();
    private void InitializeWithStream(Stream stream, StreamDisposalResponsibility streamDisposalResponsibility);
    private static Byte[] ReadFullStream(Stream inputStream);
    private static Stream CloneStream(Stream originalStream);
    private AmqpMessage PopulateAmqpMessageForSend(AmqpMessage message);
    private T GetSystemProperty(string key);
    internal void ThrowIfDisposed();
    private void Dispose(bool disposing);
}
internal static class Microsoft.Azure.Devices.MessageConverter : object {
    public static string LockTokenName;
    public static string SequenceNumberName;
    public static string TimeSpanName;
    public static string UriName;
    public static string DateTimeOffsetName;
    public static void UpdateMessageHeaderAndProperties(AmqpMessage amqpMessage, Message data);
    public static void UpdateAmqpMessageHeadersAndProperties(AmqpMessage amqpMessage, Message data, bool copyUserProperties);
    public static bool TryGetAmqpObjectFromNetObject(object netObject, MappingType mappingType, Object& amqpObject);
    public static bool TryGetNetObjectFromAmqpObject(object amqpObject, MappingType mappingType, Object& netObject);
    public static ArraySegment`1<byte> ReadStream(Stream stream);
    internal static AmqpMessage MessageToAmqpMessage(Message message);
}
public static class Microsoft.Azure.Devices.MessageSystemPropertyNames : object {
    public static string MessageId;
    public static string LockToken;
    public static string SequenceNumber;
    public static string To;
    public static string DeliveryCount;
    public static string EnqueuedTime;
    public static string ExpiryTimeUtc;
    public static string CorrelationId;
    public static string UserId;
    public static string Operation;
    public static string Ack;
    public static string ConnectionDeviceId;
    public static string ConnectionDeviceGenerationId;
    public static string ConnectionAuthMethod;
    public static string MessageSchema;
    public static string CreationTimeUtc;
    public static string ContentEncoding;
    public static string ContentType;
}
public class Microsoft.Azure.Devices.Module : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GenerationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceConnectionState <ConnectionState>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ConnectionStateUpdatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastActivityTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CloudToDeviceMessageCount>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationMechanism <Authentication>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManagedBy>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; internal set; }
    [JsonPropertyAttribute]
public string DeviceId { get; internal set; }
    [JsonPropertyAttribute]
public string GenerationId { get; internal set; }
    [JsonPropertyAttribute]
public string ETag { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public DeviceConnectionState ConnectionState { get; public set; }
    [JsonPropertyAttribute]
public DateTime ConnectionStateUpdatedTime { get; public set; }
    [JsonPropertyAttribute]
public DateTime LastActivityTime { get; internal set; }
    [JsonPropertyAttribute]
public int CloudToDeviceMessageCount { get; internal set; }
    [JsonPropertyAttribute]
public AuthenticationMechanism Authentication { get; public set; }
    [JsonPropertyAttribute]
public string ManagedBy { get; public set; }
    public Module(string deviceId, string moduleId);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
internal void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public string get_GenerationId();
    [CompilerGeneratedAttribute]
internal void set_GenerationId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ETag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ETag(string value);
    [CompilerGeneratedAttribute]
public DeviceConnectionState get_ConnectionState();
    [CompilerGeneratedAttribute]
public void set_ConnectionState(DeviceConnectionState value);
    [CompilerGeneratedAttribute]
public DateTime get_ConnectionStateUpdatedTime();
    [CompilerGeneratedAttribute]
public void set_ConnectionStateUpdatedTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastActivityTime();
    [CompilerGeneratedAttribute]
internal void set_LastActivityTime(DateTime value);
    [CompilerGeneratedAttribute]
public int get_CloudToDeviceMessageCount();
    [CompilerGeneratedAttribute]
internal void set_CloudToDeviceMessageCount(int value);
    [CompilerGeneratedAttribute]
public AuthenticationMechanism get_Authentication();
    [CompilerGeneratedAttribute]
public void set_Authentication(AuthenticationMechanism value);
    [CompilerGeneratedAttribute]
public string get_ManagedBy();
    [CompilerGeneratedAttribute]
public void set_ManagedBy(string value);
}
public class Microsoft.Azure.Devices.PurgeMessageQueueResult : object {
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalMessagesPurged>k__BackingField;
    [JsonPropertyAttribute]
public string DeviceId { get; public set; }
    [JsonPropertyAttribute]
public int TotalMessagesPurged { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public int get_TotalMessagesPurged();
    [CompilerGeneratedAttribute]
public void set_TotalMessagesPurged(int value);
}
internal enum Microsoft.Azure.Devices.PutOperationType : Enum {
    public int value__;
    public static PutOperationType CreateEntity;
    public static PutOperationType UpdateEntity;
    public static PutOperationType ForceUpdateEntity;
}
internal class Microsoft.Azure.Devices.Query : object {
    private string continuationToken;
    private bool newQuery;
    private Func`2<string, Task`1<QueryResult>> queryTaskFunc;
    public bool HasMoreResults { get; }
    internal Query(Func`2<string, Task`1<QueryResult>> queryTaskFunc);
    public sealed virtual bool get_HasMoreResults();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsTwinAsync>d__6")]
public sealed virtual Task`1<IEnumerable`1<Twin>> GetNextAsTwinAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsTwinAsync>d__7")]
public sealed virtual Task`1<QueryResponse`1<Twin>> GetNextAsTwinAsync(QueryOptions options);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsDeviceJobAsync>d__8")]
public sealed virtual Task`1<IEnumerable`1<DeviceJob>> GetNextAsDeviceJobAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsDeviceJobAsync>d__9")]
public sealed virtual Task`1<QueryResponse`1<DeviceJob>> GetNextAsDeviceJobAsync(QueryOptions options);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsJobResponseAsync>d__10")]
public sealed virtual Task`1<IEnumerable`1<JobResponse>> GetNextAsJobResponseAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsJobResponseAsync>d__11")]
public sealed virtual Task`1<QueryResponse`1<JobResponse>> GetNextAsJobResponseAsync(QueryOptions options);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsJsonAsync>d__12")]
public sealed virtual Task`1<IEnumerable`1<string>> GetNextAsJsonAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsJsonAsync>d__13")]
public sealed virtual Task`1<QueryResponse`1<string>> GetNextAsJsonAsync(QueryOptions options);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetAndCastNextResultAsync>d__14`1")]
private Task`1<IEnumerable`1<T>> GetAndCastNextResultAsync(QueryResultType type, QueryOptions options);
    private static IEnumerable`1<T> CastResultContent(QueryResult result, QueryResultType expected);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Query/<GetNextAsync>d__16")]
private Task`1<QueryResult> GetNextAsync(QueryOptions options);
}
public class Microsoft.Azure.Devices.QueryOptions : object {
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    public string ContinuationToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
}
public class Microsoft.Azure.Devices.QueryResponse`1 : object {
    private IEnumerable`1<T> _queryResults;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    public string ContinuationToken { get; private set; }
    public QueryResponse`1(IEnumerable`1<T> queryResults, string continuationToken);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
private void set_ContinuationToken(string value);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Microsoft.Azure.Devices.QueryResult : object {
    private static string ContinuationTokenHeader;
    private static string QueryResultTypeHeader;
    [CompilerGeneratedAttribute]
private QueryResultType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public QueryResultType Type { get; public set; }
    [JsonPropertyAttribute]
public IEnumerable`1<object> Items { get; public set; }
    [JsonPropertyAttribute]
public string ContinuationToken { get; public set; }
    [CompilerGeneratedAttribute]
public QueryResultType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(QueryResultType value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<object> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.QueryResult/<FromHttpResponseAsync>d__14")]
internal static Task`1<QueryResult> FromHttpResponseAsync(HttpResponseMessage response);
}
internal enum Microsoft.Azure.Devices.QueryResultType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static QueryResultType Unknown;
    [EnumMemberAttribute]
public static QueryResultType Twin;
    [EnumMemberAttribute]
public static QueryResultType DeviceJob;
    [EnumMemberAttribute]
public static QueryResultType JobResponse;
    [EnumMemberAttribute]
public static QueryResultType Raw;
}
internal class Microsoft.Azure.Devices.QuerySpecification : object {
    [CompilerGeneratedAttribute]
private string <Sql>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [JsonPropertyAttribute]
public string Sql { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<int> PageSize { get; public set; }
    [JsonIgnoreAttribute]
public string ContinuationToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Sql();
    [CompilerGeneratedAttribute]
public void set_Sql(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
}
public abstract class Microsoft.Azure.Devices.Receiver`1 : object {
    [ObsoleteAttribute("Use ReceiveAsync(CancellationToken cancellationToken).")]
public abstract virtual Task`1<T> ReceiveAsync();
    [ObsoleteAttribute("Use ReceiveAsync(CancellationToken cancellationToken).")]
public abstract virtual Task`1<T> ReceiveAsync(TimeSpan timeout);
    public abstract virtual Task`1<T> ReceiveAsync(CancellationToken cancellationToken);
    [ObsoleteAttribute("Use CompleteASync(T t, CancellationToken cancellationToken).")]
public abstract virtual Task CompleteAsync(T t);
    public abstract virtual Task CompleteAsync(T t, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use AbandonAsync(T t, CancellationToken cancellationToken).")]
public abstract virtual Task AbandonAsync(T t);
    public abstract virtual Task AbandonAsync(T t, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Devices.RegistryManager : object {
    private static string AdminUriFormat;
    private static string RequestUriFormat;
    private static string JobsUriFormat;
    private static string StatisticsUriFormat;
    private static string DevicesRequestUriFormat;
    private static string DevicesQueryUriFormat;
    private static string WildcardEtag;
    private static string ContinuationTokenHeader;
    private static string PageSizeHeader;
    private static string TwinUriFormat;
    private static string ModulesRequestUriFormat;
    private static string ModulesOnDeviceRequestUriFormat;
    private static string ModuleTwinUriFormat;
    private static string ConfigurationRequestUriFormat;
    private static string ConfigurationsRequestUriFormat;
    private static string ApplyConfigurationOnDeviceUriFormat;
    private static TimeSpan s_regexTimeoutMilliseconds;
    private static Regex s_deviceIdRegex;
    private static TimeSpan s_defaultOperationTimeout;
    private static TimeSpan s_defaultGetDevicesOperationTimeout;
    private string _iotHubName;
    private IHttpClientHelper _httpClientHelper;
    internal RegistryManager(IotHubConnectionProperties connectionProperties, HttpTransportSettings transportSettings);
    internal RegistryManager(string iotHubName, IHttpClientHelper httpClientHelper);
    private static RegistryManager();
    public static RegistryManager CreateFromConnectionString(string connectionString);
    public static RegistryManager CreateFromConnectionString(string connectionString, HttpTransportSettings transportSettings);
    public static RegistryManager Create(string hostName, TokenCredential credential, HttpTransportSettings transportSettings);
    public static RegistryManager Create(string hostName, AzureSasCredential credential, HttpTransportSettings transportSettings);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public virtual Task OpenAsync();
    public virtual Task CloseAsync();
    public virtual Task`1<Device> AddDeviceAsync(Device device);
    public virtual Task`1<Device> AddDeviceAsync(Device device, CancellationToken cancellationToken);
    public virtual Task`1<Module> AddModuleAsync(Module module);
    public virtual Task`1<Module> AddModuleAsync(Module module, CancellationToken cancellationToken);
    public virtual Task`1<BulkRegistryOperationResult> AddDeviceWithTwinAsync(Device device, Twin twin);
    public virtual Task`1<BulkRegistryOperationResult> AddDeviceWithTwinAsync(Device device, Twin twin, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use AddDevices2Async")]
public virtual Task`1<String[]> AddDevicesAsync(IEnumerable`1<Device> devices);
    [ObsoleteAttribute("Use AddDevices2Async")]
public virtual Task`1<String[]> AddDevicesAsync(IEnumerable`1<Device> devices, CancellationToken cancellationToken);
    public virtual Task`1<BulkRegistryOperationResult> AddDevices2Async(IEnumerable`1<Device> devices);
    public virtual Task`1<BulkRegistryOperationResult> AddDevices2Async(IEnumerable`1<Device> devices, CancellationToken cancellationToken);
    public virtual Task`1<Device> UpdateDeviceAsync(Device device);
    public virtual Task`1<Device> UpdateDeviceAsync(Device device, bool forceUpdate);
    public virtual Task`1<Device> UpdateDeviceAsync(Device device, CancellationToken cancellationToken);
    public virtual Task`1<Device> UpdateDeviceAsync(Device device, bool forceUpdate, CancellationToken cancellationToken);
    public virtual Task`1<Module> UpdateModuleAsync(Module module);
    public virtual Task`1<Module> UpdateModuleAsync(Module module, bool forceUpdate);
    public virtual Task`1<Module> UpdateModuleAsync(Module module, CancellationToken cancellationToken);
    public virtual Task`1<Module> UpdateModuleAsync(Module module, bool forceUpdate, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use UpdateDevices2Async")]
public virtual Task`1<String[]> UpdateDevicesAsync(IEnumerable`1<Device> devices);
    [ObsoleteAttribute("Use UpdateDevices2Async")]
public virtual Task`1<String[]> UpdateDevicesAsync(IEnumerable`1<Device> devices, bool forceUpdate, CancellationToken cancellationToken);
    public virtual Task`1<BulkRegistryOperationResult> UpdateDevices2Async(IEnumerable`1<Device> devices);
    public virtual Task`1<BulkRegistryOperationResult> UpdateDevices2Async(IEnumerable`1<Device> devices, bool forceUpdate, CancellationToken cancellationToken);
    public virtual Task RemoveDeviceAsync(string deviceId);
    public virtual Task RemoveDeviceAsync(string deviceId, CancellationToken cancellationToken);
    public virtual Task RemoveDeviceAsync(Device device);
    public virtual Task RemoveDeviceAsync(Device device, CancellationToken cancellationToken);
    public virtual Task RemoveModuleAsync(string deviceId, string moduleId);
    public virtual Task RemoveModuleAsync(string deviceId, string moduleId, CancellationToken cancellationToken);
    public virtual Task RemoveModuleAsync(Module module);
    public virtual Task RemoveModuleAsync(Module module, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use RemoveDevices2Async")]
public virtual Task`1<String[]> RemoveDevicesAsync(IEnumerable`1<Device> devices);
    [ObsoleteAttribute("Use RemoveDevices2Async")]
public virtual Task`1<String[]> RemoveDevicesAsync(IEnumerable`1<Device> devices, bool forceRemove, CancellationToken cancellationToken);
    public virtual Task`1<BulkRegistryOperationResult> RemoveDevices2Async(IEnumerable`1<Device> devices);
    public virtual Task`1<BulkRegistryOperationResult> RemoveDevices2Async(IEnumerable`1<Device> devices, bool forceRemove, CancellationToken cancellationToken);
    public virtual Task`1<RegistryStatistics> GetRegistryStatisticsAsync();
    public virtual Task`1<RegistryStatistics> GetRegistryStatisticsAsync(CancellationToken cancellationToken);
    public virtual Task`1<Device> GetDeviceAsync(string deviceId);
    public virtual Task`1<Device> GetDeviceAsync(string deviceId, CancellationToken cancellationToken);
    public virtual Task`1<Module> GetModuleAsync(string deviceId, string moduleId);
    public virtual Task`1<Module> GetModuleAsync(string deviceId, string moduleId, CancellationToken cancellationToken);
    public virtual Task`1<IEnumerable`1<Module>> GetModulesOnDeviceAsync(string deviceId);
    public virtual Task`1<IEnumerable`1<Module>> GetModulesOnDeviceAsync(string deviceId, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use CreateQuery("select * from devices", pageSize);")]
public virtual Task`1<IEnumerable`1<Device>> GetDevicesAsync(int maxCount);
    [ObsoleteAttribute("Use CreateQuery("select * from devices", pageSize);")]
public virtual Task`1<IEnumerable`1<Device>> GetDevicesAsync(int maxCount, CancellationToken cancellationToken);
    public virtual IQuery CreateQuery(string sqlQueryString);
    public virtual IQuery CreateQuery(string sqlQueryString, Nullable`1<int> pageSize);
    public virtual Task ExportRegistryAsync(string storageAccountConnectionString, string containerName);
    public virtual Task ExportRegistryAsync(string storageAccountConnectionString, string containerName, CancellationToken cancellationToken);
    public virtual Task ImportRegistryAsync(string storageAccountConnectionString, string containerName);
    public virtual Task ImportRegistryAsync(string storageAccountConnectionString, string containerName, CancellationToken cancellationToken);
    public virtual Task`1<JobProperties> ExportDevicesAsync(string exportBlobContainerUri, bool excludeKeys);
    public virtual Task`1<JobProperties> ExportDevicesAsync(string exportBlobContainerUri, bool excludeKeys, CancellationToken cancellationToken);
    public virtual Task`1<JobProperties> ExportDevicesAsync(string exportBlobContainerUri, string outputBlobName, bool excludeKeys);
    public virtual Task`1<JobProperties> ExportDevicesAsync(string exportBlobContainerUri, string outputBlobName, bool excludeKeys, CancellationToken cancellationToken);
    public virtual Task`1<JobProperties> ExportDevicesAsync(JobProperties jobParameters, CancellationToken cancellationToken);
    public virtual Task`1<JobProperties> ImportDevicesAsync(string importBlobContainerUri, string outputBlobContainerUri);
    public virtual Task`1<JobProperties> ImportDevicesAsync(string importBlobContainerUri, string outputBlobContainerUri, CancellationToken cancellationToken);
    public virtual Task`1<JobProperties> ImportDevicesAsync(string importBlobContainerUri, string outputBlobContainerUri, string inputBlobName);
    public virtual Task`1<JobProperties> ImportDevicesAsync(string importBlobContainerUri, string outputBlobContainerUri, string inputBlobName, CancellationToken cancellationToken);
    public virtual Task`1<JobProperties> ImportDevicesAsync(JobProperties jobParameters, CancellationToken cancellationToken);
    public virtual Task`1<JobProperties> GetJobAsync(string jobId);
    public virtual Task`1<JobProperties> GetJobAsync(string jobId, CancellationToken cancellationToken);
    public virtual Task`1<IEnumerable`1<JobProperties>> GetJobsAsync();
    public virtual Task`1<IEnumerable`1<JobProperties>> GetJobsAsync(CancellationToken cancellationToken);
    public virtual Task CancelJobAsync(string jobId);
    public virtual Task CancelJobAsync(string jobId, CancellationToken cancellationToken);
    public virtual Task`1<Twin> GetTwinAsync(string deviceId);
    public virtual Task`1<Twin> GetTwinAsync(string deviceId, CancellationToken cancellationToken);
    public virtual Task`1<Twin> GetTwinAsync(string deviceId, string moduleId);
    public virtual Task`1<Twin> GetTwinAsync(string deviceId, string moduleId, CancellationToken cancellationToken);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, Twin twinPatch, string etag);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, Twin twinPatch, string etag, CancellationToken cancellationToken);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, string jsonTwinPatch, string etag);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, string jsonTwinPatch, string etag, CancellationToken cancellationToken);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, string moduleId, Twin twinPatch, string etag);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, string moduleId, Twin twinPatch, string etag, CancellationToken cancellationToken);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, string moduleId, string jsonTwinPatch, string etag);
    public virtual Task`1<Twin> UpdateTwinAsync(string deviceId, string moduleId, string jsonTwinPatch, string etag, CancellationToken cancellationToken);
    public virtual Task`1<BulkRegistryOperationResult> UpdateTwins2Async(IEnumerable`1<Twin> twins);
    public virtual Task`1<BulkRegistryOperationResult> UpdateTwins2Async(IEnumerable`1<Twin> twins, CancellationToken cancellationToken);
    public virtual Task`1<BulkRegistryOperationResult> UpdateTwins2Async(IEnumerable`1<Twin> twins, bool forceUpdate);
    public virtual Task`1<BulkRegistryOperationResult> UpdateTwins2Async(IEnumerable`1<Twin> twins, bool forceUpdate, CancellationToken cancellationToken);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, Twin newTwin, string etag);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, Twin newTwin, string etag, CancellationToken cancellationToken);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, string newTwinJson, string etag);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, string newTwinJson, string etag, CancellationToken cancellationToken);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, string moduleId, Twin newTwin, string etag);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, string moduleId, Twin newTwin, string etag, CancellationToken cancellationToken);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, string moduleId, string newTwinJson, string etag);
    public virtual Task`1<Twin> ReplaceTwinAsync(string deviceId, string moduleId, string newTwinJson, string etag, CancellationToken cancellationToken);
    public virtual Task`1<Configuration> AddConfigurationAsync(Configuration configuration);
    public virtual Task`1<Configuration> AddConfigurationAsync(Configuration configuration, CancellationToken cancellationToken);
    public virtual Task`1<Configuration> GetConfigurationAsync(string configurationId);
    public virtual Task`1<Configuration> GetConfigurationAsync(string configurationId, CancellationToken cancellationToken);
    public virtual Task`1<IEnumerable`1<Configuration>> GetConfigurationsAsync(int maxCount);
    public virtual Task`1<IEnumerable`1<Configuration>> GetConfigurationsAsync(int maxCount, CancellationToken cancellationToken);
    public virtual Task`1<Configuration> UpdateConfigurationAsync(Configuration configuration);
    public virtual Task`1<Configuration> UpdateConfigurationAsync(Configuration configuration, bool forceUpdate);
    public virtual Task`1<Configuration> UpdateConfigurationAsync(Configuration configuration, CancellationToken cancellationToken);
    public virtual Task`1<Configuration> UpdateConfigurationAsync(Configuration configuration, bool forceUpdate, CancellationToken cancellationToken);
    public virtual Task RemoveConfigurationAsync(string configurationId);
    public virtual Task RemoveConfigurationAsync(string configurationId, CancellationToken cancellationToken);
    public virtual Task RemoveConfigurationAsync(Configuration configuration);
    public virtual Task RemoveConfigurationAsync(Configuration configuration, CancellationToken cancellationToken);
    public virtual Task ApplyConfigurationContentOnDeviceAsync(string deviceId, ConfigurationContent content);
    public virtual Task ApplyConfigurationContentOnDeviceAsync(string deviceId, ConfigurationContent content, CancellationToken cancellationToken);
    private Task RemoveConfigurationAsync(string configurationId, IETagHolder eTagHolder, CancellationToken cancellationToken);
    private Task`1<Twin> UpdateTwinInternalAsync(string deviceId, Twin twin, string etag, bool isReplace, CancellationToken cancellationToken);
    private Task`1<Twin> UpdateTwinInternalAsync(string deviceId, string moduleId, Twin twin, string etag, bool isReplace, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.RegistryManager/<ExecuteQueryAsync>d__142")]
private Task`1<QueryResult> ExecuteQueryAsync(string sqlQueryString, Nullable`1<int> pageSize, string continuationToken, CancellationToken cancellationToken);
    private Task`1<JobProperties> CreateJobAsync(JobProperties jobProperties, CancellationToken ct);
    private static Uri GetRequestUri(string deviceId);
    private static Uri GetModulesRequestUri(string deviceId, string moduleId);
    private static Uri GetModulesOnDeviceRequestUri(string deviceId);
    private static Uri GetModuleTwinRequestUri(string deviceId, string moduleId);
    private static Uri GetConfigurationRequestUri(string configurationId);
    private static Uri GetConfigurationsRequestUri(int maxCount);
    private static Uri GetApplyConfigurationOnDeviceRequestUri(string deviceId);
    private static Uri GetBulkRequestUri(string apiVersionQueryString);
    private static Uri GetJobUri(string jobId, string apiVersion);
    private static Uri GetDevicesRequestUri(int maxCount);
    private static Uri QueryDevicesRequestUri();
    private static Uri GetAdminUri(string operation);
    private static Uri GetStatisticsUri();
    private static Uri GetTwinUri(string deviceId);
    private static void ValidateDeviceId(Device device);
    private static void ValidateTwinId(Twin twin);
    private static void ValidateModuleId(Module module);
    private static void ValidateDeviceAuthentication(AuthenticationMechanism authentication, string deviceId);
    private Task RemoveDeviceModuleAsync(string deviceId, string moduleId, IETagHolder eTagHolder, CancellationToken cancellationToken);
    private void EnsureInstanceNotClosed();
    private static void NormalizeDevice(Device device);
    private static void NormalizeAuthenticationInfo(AuthenticationMechanism authenticationInfo);
    private static void NormalizeExportImportDevice(ExportImportDevice device);
    private static IEnumerable`1<ExportImportDevice> GenerateExportImportDeviceListForBulkOperations(IEnumerable`1<Device> devices, ImportMode importMode);
    private static IEnumerable`1<ExportImportDevice> GenerateExportImportDeviceListForTwinBulkOperations(IEnumerable`1<Twin> twins, ImportMode importMode);
    private Task`1<T> BulkDeviceOperationsAsync(IEnumerable`1<ExportImportDevice> devices, string version, CancellationToken cancellationToken);
    private void BulkDeviceOperationSetup(IEnumerable`1<ExportImportDevice> devices);
    private Task RemoveDeviceAsync(string deviceId, IETagHolder eTagHolder, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private Task`1<Exception> <GetRegistryStatisticsAsync>b__68_0(HttpResponseMessage responseMessage);
    [CompilerGeneratedAttribute]
private Task`1<Exception> <ExportRegistryAsync>b__80_0(HttpResponseMessage responseMessage);
    [CompilerGeneratedAttribute]
private Task`1<Exception> <ImportRegistryAsync>b__82_0(HttpResponseMessage responseMessage);
}
public class Microsoft.Azure.Devices.RegistryStatistics : object {
    [CompilerGeneratedAttribute]
private long <TotalDeviceCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EnabledDeviceCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DisabledDeviceCount>k__BackingField;
    [JsonPropertyAttribute]
public long TotalDeviceCount { get; public set; }
    [JsonPropertyAttribute]
public long EnabledDeviceCount { get; public set; }
    [JsonPropertyAttribute]
public long DisabledDeviceCount { get; public set; }
    [CompilerGeneratedAttribute]
public long get_TotalDeviceCount();
    [CompilerGeneratedAttribute]
public void set_TotalDeviceCount(long value);
    [CompilerGeneratedAttribute]
public long get_EnabledDeviceCount();
    [CompilerGeneratedAttribute]
public void set_EnabledDeviceCount(long value);
    [CompilerGeneratedAttribute]
public long get_DisabledDeviceCount();
    [CompilerGeneratedAttribute]
public void set_DisabledDeviceCount(long value);
}
public class Microsoft.Azure.Devices.Serialization.BasicDigitalTwin : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DigitalTwinMetadata <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <CustomProperties>k__BackingField;
    [JsonPropertyAttribute("$dtId")]
public string Id { get; public set; }
    [JsonPropertyAttribute("$metadata")]
public DigitalTwinMetadata Metadata { get; public set; }
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> CustomProperties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public DigitalTwinMetadata get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(DigitalTwinMetadata value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_CustomProperties();
    [CompilerGeneratedAttribute]
public void set_CustomProperties(IDictionary`2<string, object> value);
}
public class Microsoft.Azure.Devices.Serialization.ComponentMetadata : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <WritableProperties>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> WritableProperties { get; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_WritableProperties();
}
public class Microsoft.Azure.Devices.Serialization.DigitalTwinMetadata : object {
    [CompilerGeneratedAttribute]
private string <ModelId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <WritableProperties>k__BackingField;
    [JsonPropertyAttribute("$model")]
public string ModelId { get; public set; }
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> WritableProperties { get; }
    [CompilerGeneratedAttribute]
public string get_ModelId();
    [CompilerGeneratedAttribute]
public void set_ModelId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_WritableProperties();
}
public class Microsoft.Azure.Devices.Serialization.UpdateOperationsUtility : object {
    private static string Op;
    private static string Add;
    private static string Replace;
    private static string Remove;
    private static string Path;
    private static string Value;
    private List`1<Dictionary`2<string, object>> _ops;
    public void AppendAddPropertyOp(string path, object value);
    public void AppendReplacePropertyOp(string path, object value);
    public void AppendRemoveOp(string path);
    public void AppendAddComponentOp(string path, Dictionary`2<string, object> propertyValues);
    public void AppendReplaceComponentOp(string path, Dictionary`2<string, object> propertyValues);
    public string Serialize();
}
public class Microsoft.Azure.Devices.Serialization.WritableProperty : object {
    [CompilerGeneratedAttribute]
private object <DesiredValue>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DesiredVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AckVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AckCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AckDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastUpdateTime>k__BackingField;
    [JsonPropertyAttribute("desiredValue")]
public object DesiredValue { get; public set; }
    [JsonPropertyAttribute("desiredVersion")]
public int DesiredVersion { get; public set; }
    [JsonPropertyAttribute("ackVersion")]
public int AckVersion { get; public set; }
    [JsonPropertyAttribute("ackCode")]
public int AckCode { get; public set; }
    [JsonPropertyAttribute("ackDescription")]
public string AckDescription { get; public set; }
    [JsonPropertyAttribute("lastUpdateTime")]
public DateTimeOffset LastUpdateTime { get; public set; }
    [CompilerGeneratedAttribute]
public object get_DesiredValue();
    [CompilerGeneratedAttribute]
public void set_DesiredValue(object value);
    [CompilerGeneratedAttribute]
public int get_DesiredVersion();
    [CompilerGeneratedAttribute]
public void set_DesiredVersion(int value);
    [CompilerGeneratedAttribute]
public int get_AckVersion();
    [CompilerGeneratedAttribute]
public void set_AckVersion(int value);
    [CompilerGeneratedAttribute]
public int get_AckCode();
    [CompilerGeneratedAttribute]
public void set_AckCode(int value);
    [CompilerGeneratedAttribute]
public string get_AckDescription();
    [CompilerGeneratedAttribute]
public void set_AckDescription(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastUpdateTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdateTime(DateTimeOffset value);
}
public class Microsoft.Azure.Devices.ServiceAuthenticationWithDeviceSharedAccessPolicyKey : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    public string Key { get; public set; }
    public string DeviceId { get; public set; }
    public ServiceAuthenticationWithDeviceSharedAccessPolicyKey(string deviceId, string sharedAccessKey);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    public sealed virtual IotHubConnectionStringBuilder Populate(IotHubConnectionStringBuilder iotHubConnectionStringBuilder);
}
public class Microsoft.Azure.Devices.ServiceAuthenticationWithDeviceSharedAccessPolicyToken : object {
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string DeviceId { get; public set; }
    public string Token { get; public set; }
    public ServiceAuthenticationWithDeviceSharedAccessPolicyToken(string deviceId, string sharedAccessSignature);
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    public sealed virtual IotHubConnectionStringBuilder Populate(IotHubConnectionStringBuilder iotHubConnectionStringBuilder);
}
public class Microsoft.Azure.Devices.ServiceAuthenticationWithSharedAccessPolicyKey : object {
    private string _policyName;
    private string _key;
    public string PolicyName { get; public set; }
    public string Key { get; public set; }
    public ServiceAuthenticationWithSharedAccessPolicyKey(string policyName, string key);
    public string get_PolicyName();
    public void set_PolicyName(string value);
    public string get_Key();
    public void set_Key(string value);
    public sealed virtual IotHubConnectionStringBuilder Populate(IotHubConnectionStringBuilder iotHubConnectionStringBuilder);
    private void SetPolicyName(string policyName);
    private void SetKey(string key);
}
public class Microsoft.Azure.Devices.ServiceAuthenticationWithSharedAccessPolicyToken : object {
    private string _policyName;
    private string _token;
    public string PolicyName { get; public set; }
    public string Token { get; public set; }
    public ServiceAuthenticationWithSharedAccessPolicyToken(string policyName, string token);
    public string get_PolicyName();
    public void set_PolicyName(string value);
    public string get_Token();
    public void set_Token(string value);
    public sealed virtual IotHubConnectionStringBuilder Populate(IotHubConnectionStringBuilder iotHubConnectionStringBuilder);
    private void SetPolicyName(string policyName);
    private void SetToken(string token);
}
public class Microsoft.Azure.Devices.ServiceClient : object {
    private static string StatisticsUriFormat;
    private static string PurgeMessageQueueFormat;
    private static string DeviceMethodUriFormat;
    private static string ModuleMethodUriFormat;
    private static TimeSpan s_defaultOperationTimeout;
    private FaultTolerantAmqpObject`1<SendingAmqpLink> _faultTolerantSendingLink;
    private string _sendingPath;
    private AmqpFeedbackReceiver _feedbackReceiver;
    private AmqpFileNotificationReceiver _fileNotificationReceiver;
    private IHttpClientHelper _httpClientHelper;
    private string _iotHubName;
    private ServiceClientOptions _clientOptions;
    private TimeSpan _openTimeout;
    private TimeSpan _operationTimeout;
    private int _sendingDeliveryTag;
    [CompilerGeneratedAttribute]
private IotHubConnection <Connection>k__BackingField;
    internal IotHubConnection Connection { get; }
    internal ServiceClient(IotHubConnectionProperties connectionProperties, bool useWebSocketOnly, ServiceClientTransportSettings transportSettings, ServiceClientOptions options);
    internal ServiceClient(IotHubConnection connection, IHttpClientHelper httpClientHelper);
    private static ServiceClient();
    public static ServiceClient CreateFromConnectionString(string connectionString, ServiceClientOptions options);
    public static ServiceClient Create(string hostName, TokenCredential credential, TransportType transportType, ServiceClientTransportSettings transportSettings, ServiceClientOptions options);
    public static ServiceClient Create(string hostName, AzureSasCredential credential, TransportType transportType, ServiceClientTransportSettings transportSettings, ServiceClientOptions options);
    [CompilerGeneratedAttribute]
internal IotHubConnection get_Connection();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public static ServiceClient CreateFromConnectionString(string connectionString, TransportType transportType, ServiceClientOptions options);
    public static ServiceClient CreateFromConnectionString(string connectionString, TransportType transportType, ServiceClientTransportSettings transportSettings, ServiceClientOptions options);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ServiceClient/<OpenAsync>d__28")]
public virtual Task OpenAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ServiceClient/<CloseAsync>d__29")]
public virtual Task CloseAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ServiceClient/<SendAsync>d__30")]
public virtual Task SendAsync(string deviceId, Message message, Nullable`1<TimeSpan> timeout);
    public virtual Task`1<PurgeMessageQueueResult> PurgeMessageQueueAsync(string deviceId, CancellationToken cancellationToken);
    public virtual FeedbackReceiver`1<FeedbackBatch> GetFeedbackReceiver();
    public virtual FileNotificationReceiver`1<FileNotification> GetFileNotificationReceiver();
    public virtual Task`1<ServiceStatistics> GetServiceStatisticsAsync(CancellationToken cancellationToken);
    public virtual Task`1<CloudToDeviceMethodResult> InvokeDeviceMethodAsync(string deviceId, CloudToDeviceMethod cloudToDeviceMethod, CancellationToken cancellationToken);
    public virtual Task`1<CloudToDeviceMethodResult> InvokeDeviceMethodAsync(string deviceId, string moduleId, CloudToDeviceMethod cloudToDeviceMethod, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ServiceClient/<SendAsync>d__37")]
public virtual Task SendAsync(string deviceId, string moduleId, Message message, Nullable`1<TimeSpan> timeout);
    private Task`1<SendingAmqpLink> CreateSendingLinkAsync(TimeSpan timeout);
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.ServiceClient/<GetSendingLinkAsync>d__39")]
private Task`1<SendingAmqpLink> GetSendingLinkAsync();
    private Task`1<CloudToDeviceMethodResult> InvokeDeviceMethodAsync(Uri uri, CloudToDeviceMethod cloudToDeviceMethod, CancellationToken cancellationToken);
    private static TimeSpan GetInvokeDeviceMethodOperationTimeout(CloudToDeviceMethod cloudToDeviceMethod);
    private static void ValidateTimeOut(TimeSpan connectionTimeOut);
    private static Uri GetStatisticsUri();
    private static Uri GetPurgeMessageQueueAsyncUri(string deviceId);
    private static Uri GetDeviceMethodUri(string deviceId);
    private static Uri GetModuleMethodUri(string deviceId, string moduleId);
    [CompilerGeneratedAttribute]
private Task`1<Exception> <GetServiceStatisticsAsync>b__34_0(HttpResponseMessage responseMessage);
}
public class Microsoft.Azure.Devices.ServiceClientOptions : object {
    [CompilerGeneratedAttribute]
private SdkAssignsMessageId <SdkAssignsMessageId>k__BackingField;
    public SdkAssignsMessageId SdkAssignsMessageId { get; public set; }
    [CompilerGeneratedAttribute]
public SdkAssignsMessageId get_SdkAssignsMessageId();
    [CompilerGeneratedAttribute]
public void set_SdkAssignsMessageId(SdkAssignsMessageId value);
}
public class Microsoft.Azure.Devices.ServiceClientTransportSettings : object {
    [CompilerGeneratedAttribute]
private IWebProxy <AmqpProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebProxy <HttpProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConnectionLeaseTimeoutMilliseconds>k__BackingField;
    public IWebProxy AmqpProxy { get; public set; }
    public IWebProxy HttpProxy { get; public set; }
    public int ConnectionLeaseTimeoutMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public IWebProxy get_AmqpProxy();
    [CompilerGeneratedAttribute]
public void set_AmqpProxy(IWebProxy value);
    [CompilerGeneratedAttribute]
public IWebProxy get_HttpProxy();
    [CompilerGeneratedAttribute]
public void set_HttpProxy(IWebProxy value);
    [CompilerGeneratedAttribute]
public int get_ConnectionLeaseTimeoutMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ConnectionLeaseTimeoutMilliseconds(int value);
}
internal static class Microsoft.Azure.Devices.ServicePointHelpers : object {
    internal static int DefaultMaxConnectionsPerServer;
    internal static int DefaultConnectionLeaseTimeout;
    public static void SetLimits(HttpMessageHandler messageHandler, Uri baseUri, int connectionLeaseTimeoutMilliseconds);
}
public class Microsoft.Azure.Devices.ServiceStatistics : object {
    [CompilerGeneratedAttribute]
private long <ConnectedDeviceCount>k__BackingField;
    [JsonPropertyAttribute]
public long ConnectedDeviceCount { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ConnectedDeviceCount();
    [CompilerGeneratedAttribute]
public void set_ConnectedDeviceCount(long value);
}
internal class Microsoft.Azure.Devices.Shared.DefaultWebProxySettings : object {
    private static DefaultWebProxySettings s_defaultWebproxy;
    [CompilerGeneratedAttribute]
private static DefaultWebProxySettings <Instance>k__BackingField;
    public static DefaultWebProxySettings Instance { get; }
    public ICredentials Credentials { get; public set; }
    private static DefaultWebProxySettings();
    [CompilerGeneratedAttribute]
public static DefaultWebProxySettings get_Instance();
    public sealed virtual ICredentials get_Credentials();
    public sealed virtual void set_Credentials(ICredentials value);
    public sealed virtual Uri GetProxy(Uri destination);
    public sealed virtual bool IsBypassed(Uri host);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Devices.Shared.HttpContentExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Devices.Shared.HttpContentExtensions/<CopyToStreamAsync>d__0")]
[ExtensionAttribute]
internal static Task CopyToStreamAsync(HttpContent content, Stream stream, CancellationToken cancellationToken);
    [ExtensionAttribute]
internal static Task`1<Stream> ReadHttpContentAsStream(HttpContent httpContent, CancellationToken cancellationToken);
    [ExtensionAttribute]
internal static Task`1<Byte[]> ReadHttpContentAsByteArrayAsync(HttpContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
internal static Task`1<string> ReadHttpContentAsStringAsync(HttpContent content, CancellationToken cancellationToken);
}
internal static class Microsoft.Azure.Devices.Shared.HttpMessageHelper : object {
    private static string ApplicationJson;
    internal static void SetHttpRequestMessageContent(HttpRequestMessage requestMessage, T entity);
}
[EventSourceAttribute]
internal class Microsoft.Azure.Devices.Shared.Logging : EventSource {
    public static Logging Log;
    private static int EnterEventId;
    private static int ExitEventId;
    private static int AssociateEventId;
    private static int InfoEventId;
    private static int ErrorEventId;
    private static int CriticalFailureEventId;
    private static int DumpArrayEventId;
    private static string MissingMember;
    private static string NullInstance;
    private static int MaxDumpSize;
    private static string NoParameters;
    public static bool IsEnabled { get; }
    private static Logging();
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, object arg0, string memberName);
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, object arg0, object arg1, string memberName);
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, object arg0, object arg1, object arg2, string memberName);
    [EventAttribute("1")]
private void Enter(string thisOrContextObject, string memberName, string parameters);
    [NonEventAttribute]
public static void Exit(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Exit(object thisOrContextObject, object arg0, string memberName);
    [NonEventAttribute]
public static void Exit(object thisOrContextObject, object arg0, object arg1, string memberName);
    [NonEventAttribute]
public static void Exit(object thisOrContextObject, object arg0, object arg1, object arg2, string memberName);
    [EventAttribute("2")]
private void Exit(string thisOrContextObject, string memberName, string result);
    [NonEventAttribute]
public static void Info(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Info(object thisOrContextObject, object message, string memberName);
    [EventAttribute("4")]
private void Info(string thisOrContextObject, string memberName, string message);
    [NonEventAttribute]
public static void Error(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Error(object thisOrContextObject, object message, string memberName);
    [EventAttribute("5")]
private void ErrorMessage(string thisOrContextObject, string memberName, string message);
    [NonEventAttribute]
public static void Fail(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Fail(object thisOrContextObject, object message, string memberName);
    [EventAttribute("6")]
private void CriticalFailure(string thisOrContextObject, string memberName, string message);
    [NonEventAttribute]
public static void DumpBuffer(object thisOrContextObject, Byte[] buffer, string memberName);
    [NonEventAttribute]
public static void DumpBuffer(object thisOrContextObject, Byte[] buffer, int offset, int count, string memberName);
    [NonEventAttribute]
public static void DumpBuffer(object thisOrContextObject, IntPtr bufferPtr, int count, string memberName);
    [EventAttribute("7")]
private void DumpBuffer(string thisOrContextObject, string memberName, Byte[] buffer);
    [NonEventAttribute]
public static void Associate(object first, object second, string memberName);
    [NonEventAttribute]
public static void Associate(object thisOrContextObject, object first, object second, string memberName);
    [EventAttribute("3")]
private void Associate(string thisOrContextObject, string memberName, string first, string second);
    private static void DebugValidateArg(object arg);
    private static void DebugValidateArg(FormattableString arg);
    public static bool get_IsEnabled();
    [NonEventAttribute]
public static string IdOf(object value);
    [NonEventAttribute]
public static int GetHashCode(object value);
    [NonEventAttribute]
public static object Format(object value);
    [NonEventAttribute]
private static string Format(FormattableString s);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, string arg3, string arg4);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, Byte[] arg3);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, int arg2, string arg3);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, int arg3);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, string arg3, int arg4);
}
internal enum Microsoft.Azure.Devices.Shared.StreamDisposalResponsibility : Enum {
    public int value__;
    public static StreamDisposalResponsibility App;
    public static StreamDisposalResponsibility Sdk;
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Devices.StorageAuthenticationType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static StorageAuthenticationType KeyBased;
    [EnumMemberAttribute]
public static StorageAuthenticationType IdentityBased;
}
public class Microsoft.Azure.Devices.SymmetricKey : object {
    private string primaryKey;
    private string secondaryKey;
    [JsonPropertyAttribute]
public string PrimaryKey { get; public set; }
    [JsonPropertyAttribute]
public string SecondaryKey { get; public set; }
    public string get_PrimaryKey();
    public void set_PrimaryKey(string value);
    public string get_SecondaryKey();
    public void set_SecondaryKey(string value);
    public bool IsValid(bool throwArgumentException);
    public bool IsEmpty();
    private static void ValidateDeviceAuthenticationKey(string key, string paramName);
}
public enum Microsoft.Azure.Devices.TransportType : Enum {
    public int value__;
    public static TransportType Amqp;
    public static TransportType Amqp_WebSocket_Only;
}
[ExtensionAttribute]
public static class Microsoft.Azure.Devices.X509ThumbprintExtensions : object {
    private static TimeSpan s_regexTimeoutMilliseconds;
    private static Regex s_sha1ThumbprintRegex;
    private static Regex s_sha256ThumbprintRegex;
    private static X509ThumbprintExtensions();
    [ExtensionAttribute]
public static bool IsValid(X509Thumbprint x509Thumbprint, bool throwArgumentException);
    [ExtensionAttribute]
public static bool IsEmpty(X509Thumbprint x509Thumbprint);
    public static bool IsValidThumbprint(string thumbprint);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
